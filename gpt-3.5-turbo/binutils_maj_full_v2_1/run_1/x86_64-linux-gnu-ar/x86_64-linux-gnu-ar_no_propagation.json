{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "0x0": {
                    "function_pointer": 1
                },
                "DAT": {
                    "data": 1
                },
                "FUN_00102020": {
                    "execute_dynamic_code": 1,
                    "execute_dynamic_function": 1,
                    "execute_entry_point": 1,
                    "execute_function": 5,
                    "execute_function_at_null_pointer": 1,
                    "execute_indirect_call": 4,
                    "execute_indirect_function": 2,
                    "execute_indirect_jump": 12,
                    "execute_pointer_function": 1,
                    "execute_unkown_function": 1
                },
                "PTR": {
                    "pointer": 1
                },
                "code": {
                    "function_pointer": 1,
                    "indirect_jump_function": 1,
                    "jump_func": 1
                },
                "original_variable_name_1": {
                    "ptr": 1
                },
                "original_variable_name_2": {
                    "undefined_ptr": 1
                },
                "undefined": {
                    "func_ptr": 1,
                    "function_address": 1,
                    "function_ptr": 1,
                    "jump_location": 1,
                    "jump_target": 2,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(jump_func *)(jump_target *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "jump_func",
                "undefined": "jump_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025a0": {
            "additional_data": {
                "FUN_001025a0": {
                    "check_file_error": 2,
                    "check_file_existence": 4,
                    "check_file_exists": 3,
                    "file_locate_warning": 1,
                    "file_not_found_error": 5,
                    "file_not_found_warning": 1,
                    "find_file": 1,
                    "find_file_error": 1,
                    "find_file_error_message": 1,
                    "find_file_warning": 1,
                    "handle_error_code": 1,
                    "handle_file_error": 5,
                    "process_file_error": 2
                },
                "__errno_location": {
                    "get_errno_location": 7,
                    "get_error_code": 1,
                    "get_error_number": 2
                },
                "dcgettext": {
                    "get_error_message": 8,
                    "get_localized_error_message": 1,
                    "get_text": 1,
                    "get_translated_error_message": 1
                },
                "piVar1": {
                    "err_num": 1,
                    "errno_location": 2,
                    "errno_pointer": 3,
                    "errno_ptr": 10,
                    "errno_value": 1,
                    "error_code": 2,
                    "error_location": 2,
                    "error_num_ptr": 1,
                    "error_number": 2,
                    "error_number_ptr": 1,
                    "error_pointer": 2,
                    "error_ptr": 3
                },
                "strerror": {
                    "get_error_description": 1,
                    "get_error_message": 1,
                    "get_error_string": 8,
                    "get_system_error_message": 1
                },
                "uVar2": {
                    "error_message": 28,
                    "error_msg": 1,
                    "translated_string": 2
                }
            },
            "called": [
                "FUN_00107920",
                "dcgettext",
                "strerror",
                "__errno_location"
            ],
            "calling": [
                "FUN_001052a0"
            ],
            "code": "\nundefined8 check_file_exists_001025a0(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n    FUN_00107920(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    FUN_00107920(error_message);\n  }\n  return 0xffffffffffffffff;\n}\n\n",
            "current_name": "check_file_exists_001025a0",
            "entrypoint": "0x001025a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025a0": "check_file_exists_001025a0",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_error_message",
                "piVar1": "errno_ptr",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010266f": {
            "additional_data": {
                "FUN_0010266f": {
                    "print_supported_targets": 31
                },
                "__c": {
                    "character": 4
                },
                "__format": {
                    "format": 1,
                    "format_string": 1
                },
                "__ptr": {
                    "target_list": 28,
                    "target_list_pointer": 1,
                    "target_list_ptr": 2
                },
                "__stream": {
                    "output_stream": 3
                },
                "bfd_target_list": {
                    "get_target_list": 1
                },
                "dcgettext": {
                    "translate_text": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "fputc": {
                    "put_character": 1
                },
                "lVar1": {
                    "curr_target_value": 1,
                    "current_target": 9,
                    "current_target_value": 7,
                    "target": 4,
                    "target_element": 1,
                    "target_entry": 1,
                    "target_id": 1,
                    "target_item": 1,
                    "target_name": 3,
                    "target_pointer": 1,
                    "target_ptr": 2
                },
                "param_1": {
                    "target": 26,
                    "target_name": 5
                },
                "param_2": {
                    "file": 1,
                    "output": 1,
                    "output_file": 28,
                    "output_stream": 1
                },
                "pcVar2": {
                    "format_string": 1,
                    "localized_string": 2,
                    "message": 18,
                    "target_message": 2,
                    "target_prompt": 1,
                    "target_string": 2,
                    "target_text": 2,
                    "translation": 2
                },
                "plVar3": {
                    "curr_target": 1,
                    "current_target": 13,
                    "current_target_list_entry": 1,
                    "current_target_ptr": 1,
                    "list_iterator": 1,
                    "ptr": 5,
                    "ptr_to_target": 3,
                    "target_list": 2,
                    "target_ptr": 4
                }
            },
            "called": [
                "free",
                "fputc",
                "fprintf",
                "dcgettext",
                "bfd_target_list"
            ],
            "calling": [
                "FUN_0010342d",
                "FUN_0010394a"
            ],
            "code": "\nvoid print_supported_targets_0010266f(long target,FILE *output_file)\n\n{\n  long current_target;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  if (target == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target = *current_target;\n    current_target = current_target + 1;\n    if (current_target == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  return;\n}\n\n",
            "current_name": "print_supported_targets_0010266f",
            "entrypoint": "0x0010266f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010266f": "print_supported_targets_0010266f",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "translate_text",
                "fprintf": "print_formatted",
                "fputc": "put_character",
                "lVar1": "current_target",
                "param_1": "target",
                "param_2": "output_file",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "converted_library": 1,
                    "converted_library_data": 1,
                    "data_1": 1,
                    "existing_library": 1,
                    "extracted_archived_file": 1,
                    "extracted_library": 1,
                    "first_recorded_object": 1,
                    "global_library_name": 1,
                    "global_variable": 1,
                    "library_data": 4,
                    "library_ptr": 1,
                    "temporary_variable": 1
                },
                "DAT_0010d5f8": {
                    "convert_flag": 2,
                    "data_2": 1,
                    "existing_library_check": 1,
                    "existing_library_flag": 1,
                    "flag_2": 1,
                    "flag_variable": 1,
                    "flag_variable_2": 1,
                    "is_existing_library": 1,
                    "is_normal_format": 1,
                    "library_format_flag": 1,
                    "should_convert_library": 1,
                    "thin_conversion_flag": 1,
                    "thin_flag": 1,
                    "yet_another_global_variable": 1
                },
                "DAT_0010d610": {
                    "conversion_flag": 1,
                    "data_3": 1,
                    "flag_variable": 2,
                    "is_valid_output": 1
                },
                "DAT_0010d618": {
                    "additional_data2": 1,
                    "additional_library_data": 1,
                    "base_pointer": 1,
                    "context": 1,
                    "conversion_option": 1,
                    "data_2": 1,
                    "data_4": 1,
                    "last_opened_file": 1,
                    "new_library": 1,
                    "other_handle_backup": 1,
                    "saved_data": 1,
                    "unaff_flag": 1,
                    "yet_another_temporary_variable": 1,
                    "yet_yet_another_global_variable": 1
                },
                "DAT_0010d64c": {
                    "additional_flag2": 1,
                    "archived_flag": 1,
                    "data_5": 1,
                    "flag_3": 1,
                    "flag_variable_3": 1,
                    "format": 1,
                    "format_code": 1,
                    "format_flag": 2,
                    "format_to_match": 1,
                    "format_type": 1,
                    "format_value": 1,
                    "status_variable": 1,
                    "yet_yet_yet_another_global_variable": 1
                },
                "FUN_00102710": {
                    "convert_archived_files": 1,
                    "convert_library_format": 1,
                    "extract_and_convert_archived_files": 1,
                    "extract_and_convert_libraries": 2,
                    "extract_archived_files": 7,
                    "extract_archives": 1,
                    "extract_bfd_archives": 1,
                    "extract_bfd_data": 1,
                    "extract_library": 2,
                    "extract_library_files": 2,
                    "extract_library_from_binary": 1,
                    "find_and_convert_libraries": 1,
                    "load_libraries": 1,
                    "load_object_file": 1,
                    "open_and_convert_bfd_files": 1,
                    "parse_and_convert_object_file": 1,
                    "parse_bfd_files": 1,
                    "parse_binary_file": 1,
                    "parse_library_file": 1,
                    "process_bfd_files": 2
                },
                "FUN_00103bd1": {
                    "cleanup_and_exit": 2,
                    "handle_error": 1,
                    "handle_exit": 1
                },
                "FUN_00107690": {
                    "error_message": 1,
                    "generate_error": 1,
                    "print_error_message": 2
                },
                "FUN_00107920": {
                    "create_output": 1,
                    "create_output_file": 1,
                    "generate_other_error": 1
                },
                "FUN_00107c10": {
                    "initialize_bfd_library": 1,
                    "initialize_error_handling": 1,
                    "open_error_handler": 1,
                    "open_read_file": 1
                },
                "FUN_00107c20": {
                    "cleanup_bfd_library": 1,
                    "cleanup_error_handling": 1,
                    "close_error_handler": 1,
                    "close_files": 1
                },
                "LAB_001027cb": {
                    "existing_library_format_error": 1
                },
                "LAB_00102826": {
                    "create_library": 1,
                    "create_output_label": 1
                },
                "LAB_001053b7": {
                    "additional_output_label": 1,
                    "archived_files": 1
                },
                "_DAT_0010d610": {
                    "additional_flag": 1,
                    "another_global_variable": 1,
                    "another_temporary_variable": 1,
                    "check_flag": 1,
                    "condition_var": 1,
                    "conversion_flag": 1,
                    "flag": 2,
                    "flag_1": 1,
                    "is_converted": 1
                },
                "_DAT_0010d618": {
                    "default_flag": 1
                },
                "bVar3": {
                    "conversion_flag": 1,
                    "convert": 1,
                    "convert_flag": 3,
                    "convert_to_thin": 1,
                    "is_thin": 2,
                    "is_thin_format": 3,
                    "is_thin_library": 9,
                    "should_convert": 1,
                    "thin_conversion_flag": 3,
                    "thin_library": 1,
                    "thin_library_check": 2,
                    "thin_library_check_result": 1,
                    "thin_library_conversion_flag": 1,
                    "thin_library_flag": 2
                },
                "bfd_check_format": {
                    "check_archive_format": 1,
                    "check_file_format": 1,
                    "check_format": 1
                },
                "bfd_check_format_matches": {
                    "check_format_match": 1
                },
                "bfd_close": {
                    "close": 1,
                    "close_file": 2
                },
                "bfd_get_error": {
                    "get_error": 1,
                    "get_error_code": 2
                },
                "bfd_openr": {
                    "open_archive_file": 1,
                    "open_file_for_reading": 1,
                    "open_read_mode": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 2,
                    "next_archived_file": 1,
                    "open_next_archived_file": 1
                },
                "bfd_openw": {
                    "create_output_file": 1,
                    "open_file_for_writing": 1,
                    "open_write_mode": 1
                },
                "bfd_set_format": {
                    "set_file_format": 1,
                    "set_format": 1,
                    "set_output_format": 1
                },
                "cVar2": {
                    "check_format_result": 3,
                    "check_result": 1,
                    "format_check": 5,
                    "format_check_result": 7,
                    "format_checked": 1,
                    "format_is_valid": 1,
                    "format_matched": 1,
                    "format_result": 1,
                    "format_valid": 6,
                    "is_valid": 1,
                    "is_valid_format": 4
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_message": 1,
                    "get_string_translation": 1,
                    "get_text": 1
                },
                "iVar4": {
                    "bfd_error": 3,
                    "bfd_error_code": 4,
                    "error": 3,
                    "error_check": 1,
                    "error_code": 20
                },
                "in_stack_00000008": {
                    "additional_data": 1,
                    "argument": 1,
                    "creating_msg": 1,
                    "custom_value": 1,
                    "file_data": 1,
                    "file_name": 1,
                    "flags": 1,
                    "in_stack_argument": 1,
                    "input_file": 1,
                    "input_handle": 1,
                    "param1": 1,
                    "parameter": 1,
                    "stack_arg": 1,
                    "stack_argument": 2,
                    "stack_data": 3,
                    "stack_param": 1,
                    "stack_parameter": 2,
                    "stack_variable": 5,
                    "unknown_variable": 1,
                    "variable_in_stack": 1
                },
                "lVar5": {
                    "archive_handle": 1,
                    "archived_file": 4,
                    "archived_file_handle": 1,
                    "bfd_handle": 11,
                    "file_descriptor": 6,
                    "file_handle": 4,
                    "file_ptr": 2,
                    "library_handle": 2
                },
                "plVar1": {
                    "archive_files": 1,
                    "archived_file": 2,
                    "archived_file_handle": 2,
                    "archived_file_list": 1,
                    "archived_file_list_ptr": 1,
                    "archived_file_ptr": 6,
                    "archived_files": 2,
                    "archived_files_ptr": 1,
                    "current_archived_file": 2,
                    "current_file": 1,
                    "current_file_pointer": 1,
                    "file_handle_pointer": 1,
                    "file_list_ptr": 2,
                    "file_pointer": 2,
                    "ptr_current_file": 1
                },
                "puVar8": {
                    "archive_handle": 1,
                    "new_bfd_handle": 1,
                    "output": 1,
                    "output_bfd": 3,
                    "output_bfd_handle": 2,
                    "output_bfd_ptr": 2,
                    "output_file": 4,
                    "output_file_handle": 4,
                    "output_file_ptr": 2,
                    "output_handle": 5,
                    "output_library_ptr": 1,
                    "write_file_pointer": 1,
                    "write_handle": 4
                },
                "stack0x00000008": {
                    "additional_stack_variable": 1,
                    "check_format_options": 1,
                    "matching_argument": 1,
                    "stack_parameter": 1
                },
                "uVar6": {
                    "conversion_error_message": 1,
                    "error_message": 20,
                    "error_msg": 5,
                    "library_error_msg": 1,
                    "localized_string": 1,
                    "message": 1
                },
                "uVar7": {
                    "conversion_error_msg": 1,
                    "error_context": 1,
                    "error_library": 1,
                    "error_msg": 1,
                    "file_name": 1,
                    "file_ptr": 1,
                    "library_name": 19,
                    "library_path": 1,
                    "message_argument": 1,
                    "translation": 2
                },
                "unaff_RBP": {
                    "additional_arguments": 1,
                    "additional_data": 1,
                    "buffer": 1,
                    "closure": 1,
                    "context_ptr": 1,
                    "data": 2,
                    "data_to_pass_unaffected": 1,
                    "default_handle": 1,
                    "default_value": 1,
                    "default_write_handle": 1,
                    "extra_data": 1,
                    "file_path": 1,
                    "global_error_ptr": 1,
                    "in_stack_00000008": 1,
                    "input_bfd": 1,
                    "original_rbp": 1,
                    "other_handle": 1,
                    "path_to_object_file": 1,
                    "result": 1,
                    "result_buffer": 1,
                    "return_address": 1,
                    "special_file_handle": 1,
                    "stack_pointer": 1,
                    "temp_variable": 1,
                    "unaff_rbp": 1,
                    "unknown_variable": 1,
                    "unused_variable": 1,
                    "user_defined_base_pointer": 1
                },
                "xexit": {
                    "exit_program": 2,
                    "terminate_execution": 1
                }
            },
            "called": [
                "bfd_check_format",
                "bfd_close",
                "bfd_openr"
            ],
            "calling": [
                "FUN_00105300"
            ],
            "code": "\n\n\nundefined8 * extract_and_convert_archived_files_00102710(void)\n\n{\n  long *archived_file_ptr;\n  char format_check_result;\n  byte is_thin_library;\n  int error_code;\n  long bfd_handle;\n  undefined8 error_message;\n  undefined8 library_name;\n  undefined8 *output_handle;\n  undefined8 data;\n  undefined8 stack_variable;\n  \n  bfd_handle = bfd_openr();\n  if (bfd_handle != 0) {\n    format_check_result = bfd_check_format(bfd_handle,1);\n    if (format_check_result != '\\0') {\n      DAT_0010d5f0 = **(undefined8 **)(bfd_handle + 8);\n    }\n    bfd_close(bfd_handle);\n  }\n  output_handle = (undefined8 *)bfd_openw();\n  if (((output_handle != (undefined8 *)0x0) && (format_check_result = bfd_set_format(output_handle,2), format_check_result != '\\0')) &&\n     (format_check_result = bfd_close(output_handle), format_check_result != '\\0')) {\n    if (_DAT_0010d610 == 0) goto create_library;\n    goto additional_output_label;\n  }\n  FUN_00107c10();\n  do {\n    is_thin_library = *(byte *)((long)output_handle + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (is_thin_library != 0) {\n        library_name = *output_handle;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        FUN_00107690(error_message,library_name);\n        goto LAB_00102812;\n      }\n    }\n    else if (is_thin_library == 0) {\n      library_name = *output_handle;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      FUN_00107690(error_message,library_name);\nexisting_library_format_error:\n      FUN_00107c20();\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\nLAB_00102812:\n        FUN_00103bd1(stack_variable);\n      }\n                    \n      xexit(1);\n    }\n    do {\n      archived_file_ptr = output_handle + 0x1e;\n      for (bfd_handle = bfd_openr_next_archived_file(output_handle,0); bfd_handle != 0;\n          bfd_handle = bfd_openr_next_archived_file(output_handle,bfd_handle)) {\n        *archived_file_ptr = bfd_handle;\n        archived_file_ptr = (long *)(bfd_handle + 0xf0);\n      }\n      *archived_file_ptr = 0;\n      error_code = bfd_get_error();\n      if (error_code == 9) {\n        return output_handle;\n      }\n      do {\n        FUN_00107c10();\ncreate_library:\n        library_name = dcgettext(0,\"creating %s\",5);\n        FUN_00107920(library_name);\nadditional_output_label:\n        DAT_0010d618 = data;\n        output_handle = (undefined8 *)bfd_openr();\n      } while (output_handle == (undefined8 *)0x0);\n      format_check_result = bfd_check_format_matches(output_handle,2,&stack_parameter);\n      if (format_check_result == '\\0') goto existing_library_format_error;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (bfd_handle = bfd_openr_next_archived_file(output_handle,0), bfd_handle == 0));\n  } while( true );\n}\n\n",
            "current_name": "extract_and_convert_archived_files_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "extract_and_convert_archived_files_00102710",
                "LAB_001027cb": "existing_library_format_error",
                "LAB_00102826": "create_library",
                "LAB_001053b7": "additional_output_label",
                "bVar3": "is_thin_library",
                "bfd_check_format": "check_file_format",
                "bfd_check_format_matches": "check_format_match",
                "bfd_close": "close_file",
                "bfd_get_error": "get_error_code",
                "bfd_openr": "open_archive_file",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "bfd_openw": "open_file_for_writing",
                "bfd_set_format": "set_format",
                "cVar2": "format_check_result",
                "dcgettext": "get_message",
                "iVar4": "error_code",
                "in_stack_00000008": "stack_variable",
                "lVar5": "bfd_handle",
                "plVar1": "archived_file_ptr",
                "puVar8": "output_handle",
                "stack0x00000008": "stack_parameter",
                "uVar6": "error_message",
                "uVar7": "library_name",
                "unaff_RBP": "data",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010284b": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_0010284b": {
                    "check_flag": 1,
                    "get_constant_one": 3,
                    "get_constant_value": 1,
                    "get_number": 1,
                    "get_one": 11,
                    "get_return_value": 5,
                    "get_status": 2,
                    "get_true_value": 1,
                    "get_value": 1,
                    "initialize": 2,
                    "initialize_boolean": 1,
                    "initialize_flag": 1,
                    "return_one": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_001111111": {
                    "status": 1
                },
                "return": {
                    "result": 7,
                    "return_value": 1,
                    "status": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined8": {
                    "bool": 2,
                    "int": 2,
                    "int64_t": 1,
                    "uint64_t": 7,
                    "ulong": 1,
                    "unsigned_long": 1,
                    "void": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00107650"
            ],
            "code": "\nuint64_t get_constant_one_0010284b(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_constant_one_0010284b",
            "entrypoint": "0x0010284b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010284b": "get_constant_one_0010284b",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010285f": {
            "additional_data": {
                "DAT_0010d634": {
                    "flag1": 1
                },
                "FUN_0010285f": {
                    "print_archive_entries": 1,
                    "print_archive_entry_error": 4,
                    "print_archive_entry_error_message": 2,
                    "print_archive_entry_not_found": 10,
                    "print_archive_entry_not_found_error": 1,
                    "print_archive_error_message": 1,
                    "print_entry_error_message": 1,
                    "print_entry_not_found_error": 1,
                    "print_entry_not_found_error_message": 1,
                    "print_error_message": 1,
                    "print_missing_archive_entry": 3,
                    "print_missing_entry_error": 1,
                    "print_missing_entry_message": 2,
                    "print_no_entry_in_archive": 1,
                    "print_nonexistent_entries": 1
                },
                "FUN_00105830": {
                    "get_archive_entry_value": 1
                },
                "LAB_0010553e": {
                    "loop_start": 1
                },
                "_DAT_0010d630": {
                    "flag2": 1
                },
                "__format": {
                    "error_format": 2,
                    "error_format_string": 1,
                    "error_message": 7,
                    "error_message_format": 3,
                    "format_str": 1,
                    "format_string": 15,
                    "msg": 1
                },
                "code_r0x0010285f": {
                    "loop_label": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_translated_message": 1
                },
                "filename_cmp": {
                    "compare_filename": 1
                },
                "fprintf": {
                    "print_to_file": 1,
                    "print_to_standard_error": 1
                },
                "iStack000000000000000c": {
                    "count": 1,
                    "counter": 4,
                    "entry_counter": 2,
                    "entry_index": 4,
                    "error_count": 1,
                    "found_entries": 1,
                    "loop_counter": 2,
                    "match_count": 1,
                    "matched_entries_count": 2,
                    "matched_entries_counter": 1,
                    "matching_entries_count": 2,
                    "matching_entry_count": 1,
                    "num_entries_checked": 1,
                    "num_iterations": 1,
                    "num_matched_entries": 1,
                    "num_matches": 2,
                    "num_printed_entries": 3,
                    "num_processed_entries": 1
                },
                "iVar1": {
                    "comparison_result": 3,
                    "filename_comparison_result": 1
                },
                "lVar2": {
                    "archive_entry": 2,
                    "current_entry": 13,
                    "entry": 1,
                    "entry_name": 1,
                    "entry_offset": 1,
                    "entry_pointer": 4,
                    "entry_size": 5,
                    "entry_value": 1,
                    "file_size": 1,
                    "result": 1
                },
                "plVar3": {
                    "archive_entry": 1,
                    "current_entry": 1,
                    "current_entry_patch": 1,
                    "entry_pointer": 1,
                    "entry_pointer_ptr": 2,
                    "entry_ptr": 2,
                    "fallback_entry": 1,
                    "fallback_entry_ptr": 1,
                    "lookup_entry_pointer": 1,
                    "next_arch_entry": 1,
                    "next_archive_entry": 1,
                    "next_entry": 9,
                    "next_entry_pointer": 1,
                    "next_entry_ptr": 1,
                    "previous_entry": 1,
                    "temp_entry_ptr": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 2
                },
                "plVar5": {
                    "archive_entry": 3,
                    "curr_arch_entry": 1,
                    "current_archive_entry": 1,
                    "current_entry": 8,
                    "current_entry_next": 1,
                    "current_entry_pointer": 2,
                    "current_entry_ptr": 2,
                    "current_list_entry": 1,
                    "current_node": 1,
                    "current_ptr": 1,
                    "entry": 2,
                    "entry_iterator": 1,
                    "entry_list": 2,
                    "entry_list_ptr": 1,
                    "entry_pointer": 1,
                    "next_entry": 1,
                    "next_entry_ptr": 1
                },
                "uVar4": {
                    "current_entry": 1,
                    "current_entry_name": 2,
                    "entry": 2,
                    "entry_name": 25
                },
                "unaff_R12": {
                    "archive": 4,
                    "archive_base": 3,
                    "archive_base_address": 4,
                    "archive_data": 1,
                    "archive_header": 1,
                    "archive_pointer": 5,
                    "archive_ptr": 8,
                    "archive_struct": 1,
                    "base_address": 1,
                    "context": 2,
                    "context_pointer": 1
                },
                "unaff_R13D": {
                    "counter": 1,
                    "entries_count": 1,
                    "entry_count": 10,
                    "num_entries": 9,
                    "number_of_entries": 2,
                    "remaining_entries": 6,
                    "remaining_entries_count": 1,
                    "remaining_iterations": 1
                },
                "unaff_R14": {
                    "archive_entries": 1,
                    "archive_entry_pointer": 1,
                    "current_argument": 1,
                    "entry_array": 2,
                    "entry_list": 3,
                    "entry_name_array": 1,
                    "entry_name_list": 3,
                    "entry_name_pointer": 1,
                    "entry_name_ptr": 1,
                    "entry_names": 10,
                    "entry_names_array": 2,
                    "entry_ptr": 5
                },
                "unaff_RBP": {
                    "callback": 3,
                    "callback_func": 2,
                    "callback_function": 10,
                    "execute_entry_point": 1,
                    "function_pointer": 13,
                    "function_ptr": 1,
                    "process_entry": 1
                }
            },
            "called": [
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00105480"
            ],
            "code": "\n\n\nvoid print_archive_entry_not_found_error_0010285f(void)\n\n{\n  int comparison_result;\n  char *format_string;\n  long current_entry;\n  long *next_entry;\n  undefined8 entry_name;\n  long *current_entry;\n  code *function_pointer;\n  long archive_ptr;\n  int entry_count;\n  undefined8 *entry_names;\n  int counter;\n  \nloop_label:\n  entry_name = *entry_names;\n  format_string = (char *)dcgettext(0,\"no entry %s in archive\\n\",5);\n  fprintf(_stderr,format_string,entry_name);\nloop_start:\n  entry_names = entry_names + 1;\n  entry_count = entry_count + -1;\n  if (entry_count == 0) {\n    return;\n  }\n  current_entry = *(long **)(archive_ptr + 0xf0);\n  counter = 0;\n  do {\n    if (current_entry == (long *)0x0) goto loop_label;\n    if (*(int *)((long)current_entry + 0xac) == 0) {\n      current_entry = *current_entry;\n      if (current_entry == 0) {\n        next_entry = (long *)current_entry[0x1d];\n        if ((long *)current_entry[0x1d] == (long *)0x0) {\n          next_entry = current_entry;\n        }\n        (**(code **)(next_entry[1] + 0x1e8))(current_entry,&stack0x00000010);\n      }\n      else if (((*(byte *)(archive_ptr + 0x49) & 0x10) == 0) || (current_entry = FUN_00105830(), current_entry != 0))\n      {\n        entry_name = FUN_00105830(*entry_names);\n        comparison_result = filename_cmp(entry_name,current_entry);\n        if ((comparison_result == 0) &&\n           ((DAT_0010d634 == '\\0' ||\n            (counter = counter + 1,\n            counter == _DAT_0010d630)))) break;\n      }\n    }\n    current_entry = (long *)current_entry[0x1e];\n  } while( true );\n  (*function_pointer)();\n  *(undefined4 *)((long)current_entry + 0xac) = 1;\n  goto loop_start;\n}\n\n",
            "current_name": "print_archive_entry_not_found_error_0010285f",
            "entrypoint": "0x0010285f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010285f": "print_archive_entry_not_found_error_0010285f",
                "LAB_0010553e": "loop_start",
                "__format": "format_string",
                "code_r0x0010285f": "loop_label",
                "dcgettext": "get_translated_message",
                "filename_cmp": "compare_filename",
                "fprintf": "print_to_standard_error",
                "iStack000000000000000c": "counter",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "plVar3": "next_entry",
                "plVar5": "current_entry",
                "uVar4": "entry_name",
                "unaff_R12": "archive_ptr",
                "unaff_R13D": "entry_count",
                "unaff_R14": "entry_names",
                "unaff_RBP": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028ed": {
            "additional_data": {
                "FUN_001028ed": {
                    "decode_function": 1,
                    "file_processing_function": 1,
                    "find_matching_file": 1,
                    "process_files": 4
                },
                "FUN_00102943": {
                    "undefined_function1": 1
                },
                "FUN_00103172": {
                    "process_file": 1
                },
                "FUN_00105870": {
                    "create_temp_file": 1
                },
                "FUN_001058b0": {
                    "undefined_function3": 1
                },
                "FUN_00105ae0": {
                    "open_file": 1
                },
                "FUN_00105af0": {
                    "get_file_attributes": 1
                },
                "FUN_00107690": {
                    "undefined_function4": 1
                },
                "FUN_00107c10": {
                    "undefined_function2": 1
                },
                "__errno_location": {
                    "get_error_number": 1
                },
                "__s": {
                    "char_pointer1": 1,
                    "char_pointer_s": 1,
                    "char_pointer_var_s": 1,
                    "char_ptr1": 1,
                    "char_ptr_s": 3,
                    "char_var1": 2,
                    "char_var_s": 2,
                    "str1": 2,
                    "str_var1": 1,
                    "string1": 9,
                    "string_var1": 4,
                    "string_variable1": 1,
                    "var_m": 1,
                    "variable11": 1
                },
                "__s_00": {
                    "char_pointer2": 1,
                    "char_pointer_s_00": 1,
                    "char_pointer_var_s00": 1,
                    "char_ptr2": 1,
                    "char_ptr_s00": 2,
                    "char_ptr_s_00": 1,
                    "char_var2": 2,
                    "char_var_s_00": 2,
                    "str2": 2,
                    "str_var2": 1,
                    "string2": 9,
                    "string_var2": 4,
                    "string_variable2": 1,
                    "var_n": 1,
                    "variable12": 1
                },
                "bVar16": {
                    "b2": 1,
                    "bool_value": 1,
                    "bool_var": 2,
                    "bool_var1": 1,
                    "bool_var16": 16,
                    "bool_variable": 1,
                    "byte_var16": 4,
                    "flag_2": 1,
                    "var_f": 1,
                    "variable18": 1
                },
                "bVar17": {
                    "b3": 1,
                    "byte_b_var17": 1,
                    "byte_value2": 1,
                    "byte_var1": 1,
                    "byte_var17": 19,
                    "byte_var2": 3,
                    "byte_variable2": 1,
                    "flag": 1,
                    "var_h": 1,
                    "variable19": 1
                },
                "bVar17_2": {
                    "b_var17_2": 1
                },
                "bVar2": {
                    "b1": 1,
                    "byte_value": 1,
                    "byte_var": 3,
                    "byte_var2": 22,
                    "byte_variable": 1,
                    "status": 1,
                    "variable2": 1
                },
                "filename_cmp": {
                    "compare_filename": 1
                },
                "iVar3": {
                    "i1": 1,
                    "index": 1,
                    "index_var": 1,
                    "index_var3": 1,
                    "int_value": 1,
                    "int_var": 2,
                    "int_var3": 17,
                    "int_variable": 1,
                    "integer_var3": 3,
                    "var_k": 1,
                    "variable3": 1
                },
                "in_stack_00000078": {
                    "in_stack00000078": 2,
                    "in_stack_00000078": 2,
                    "in_stack_offset78": 1,
                    "in_stack_var1": 3,
                    "in_stack_var78": 1,
                    "in_stack_var_00000078": 1,
                    "int_stack_var_00000078": 1,
                    "long_var4": 1,
                    "long_var_stack78": 1,
                    "ptr_long_in_stack78": 1,
                    "stack_00000078": 1,
                    "stack_78": 1,
                    "stack_value1": 1,
                    "stack_var1": 6,
                    "stack_var78": 1,
                    "stack_variable1": 1,
                    "temp_long1": 1,
                    "variable20": 1
                },
                "in_stack_00000108": {
                    "in_stack00000108": 2,
                    "in_stack_00000108": 2,
                    "in_stack_offset108": 1,
                    "in_stack_var108": 1,
                    "in_stack_var2": 3,
                    "in_stack_var_00000108": 1,
                    "int_stack_var_00000108": 1,
                    "long_var5": 1,
                    "long_var_stack108": 1,
                    "ptr_long_in_stack108": 1,
                    "stack_00000108": 1,
                    "stack_108": 1,
                    "stack_value2": 1,
                    "stack_var108": 1,
                    "stack_var2": 6,
                    "stack_variable2": 1,
                    "temp_long2": 1,
                    "variable21": 1
                },
                "lVar10": {
                    "file_entry_3": 1,
                    "l1": 1,
                    "length_var10": 1,
                    "long_value1": 1,
                    "long_var1": 4,
                    "long_var10": 20,
                    "long_variable1": 1,
                    "var_i": 1,
                    "variable10": 1
                },
                "lVar11": {
                    "l2": 1,
                    "length_var11": 1,
                    "long_value2": 1,
                    "long_var11": 20,
                    "long_var2": 4,
                    "long_variable2": 1,
                    "target_file": 1,
                    "var_p": 1,
                    "variable13": 1
                },
                "lbasename": {
                    "get_base_name": 1
                },
                "param_1": {
                    "arg1": 7,
                    "callback_function": 1,
                    "func_ret_val": 1,
                    "input": 2,
                    "input_param": 6,
                    "input_value": 1,
                    "param": 2,
                    "param1": 6,
                    "param_1": 3,
                    "param_a": 1,
                    "ptr_function_param": 1
                },
                "param_2": {
                    "arg2": 7,
                    "file_descriptor": 1,
                    "file_size": 3,
                    "file_size_param": 1,
                    "input_param2": 1,
                    "length": 4,
                    "length_param": 1,
                    "long_param": 1,
                    "num_files": 1,
                    "param2": 7,
                    "param_2": 3,
                    "param_b": 1
                },
                "param_7": {
                    "arg3": 3,
                    "arg7": 1,
                    "callback_parameters": 1,
                    "char_ptr_ptr_param7": 1,
                    "char_ptr_ptr_var7": 1,
                    "input_array": 2,
                    "input_param7": 1,
                    "param7": 8,
                    "param_7": 5,
                    "param_array": 1,
                    "param_array_7": 1,
                    "param_c": 1,
                    "param_ptr7": 1,
                    "pointer_var7": 1,
                    "ptr_char_var7": 1,
                    "ptr_param7": 1,
                    "string_array": 1
                },
                "param_9": {
                    "arg4": 3,
                    "arg9": 2,
                    "callback_result": 1,
                    "input_param9": 1,
                    "output": 2,
                    "output_param": 3,
                    "output_param_9": 1,
                    "output_value": 1,
                    "param9": 9,
                    "param_9": 4,
                    "param_d": 1,
                    "param_result": 1,
                    "return_value": 1,
                    "struct": 1
                },
                "pcVar6": {
                    "char_pointer1": 2,
                    "char_pointer_var6": 3,
                    "char_ptr1": 3,
                    "char_ptr6": 6,
                    "char_ptr_var6": 5,
                    "char_var6": 2,
                    "char_variable1": 1,
                    "file": 1,
                    "pc1": 1,
                    "pointer_var6": 1,
                    "ptr_char_var": 1,
                    "ptr_char_var6": 3,
                    "variable6": 1
                },
                "pcVar7": {
                    "char_pointer2": 2,
                    "char_pointer_var7": 3,
                    "char_ptr2": 3,
                    "char_ptr7": 6,
                    "char_ptr_var7": 5,
                    "char_var7": 2,
                    "char_variable2": 1,
                    "file_2": 1,
                    "pc2": 1,
                    "pointer_var7": 1,
                    "ptr_char_var2": 1,
                    "ptr_char_var7": 3,
                    "variable7": 1
                },
                "piVar5": {
                    "int_pointer": 3,
                    "int_pointer_var5": 2,
                    "int_ptr": 3,
                    "int_ptr5": 6,
                    "int_ptr_var5": 4,
                    "integer_pointer_var5": 1,
                    "integer_ptr_var5": 1,
                    "pi1": 1,
                    "pointer_var5": 2,
                    "ptr_int_var": 1,
                    "ptr_int_var5": 2,
                    "ptr_integer_var5": 1,
                    "ptr_var5": 1,
                    "variable5": 1
                },
                "ppcVar14": {
                    "char_double_pointer1": 1,
                    "char_double_pointer_var14": 1,
                    "char_double_pointer_var_ppc_var14": 1,
                    "char_pointer_pointer1": 2,
                    "char_pointer_pointer_var14": 1,
                    "char_pptr1": 1,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr14": 6,
                    "char_ptr_ptr3": 1,
                    "char_ptr_ptr_var14": 5,
                    "file_entry": 1,
                    "pointer_pointer_var14": 1,
                    "ppc2": 1,
                    "ptr_ptr_char_var14": 4,
                    "ptr_ptr_char_var2": 1,
                    "ptr_to_ptr_char_var14": 1,
                    "var_s": 1,
                    "variable16": 1
                },
                "ppcVar15": {
                    "char_double_pointer2": 1,
                    "char_double_pointer_var15": 1,
                    "char_double_pointer_var_ppc_var15": 1,
                    "char_pointer_pointer2": 2,
                    "char_pointer_pointer_var15": 1,
                    "char_pptr4": 1,
                    "char_ptr_ptr15": 6,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr6": 1,
                    "char_ptr_ptr_var15": 5,
                    "file_entry_2": 1,
                    "pointer_pointer_var15": 1,
                    "ppc3": 1,
                    "ptr_ptr_char_var15": 4,
                    "ptr_ptr_char_var5": 1,
                    "ptr_to_ptr_char_var15": 1,
                    "var_e": 1,
                    "variable17": 1
                },
                "ppcVar8": {
                    "char_double_pointer": 1,
                    "char_double_pointer_var8": 2,
                    "char_pointer_pointer": 2,
                    "char_pointer_pointer_var8": 1,
                    "char_pptr": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr8": 6,
                    "char_ptr_ptr_var8": 5,
                    "pointer_pointer_var8": 1,
                    "ppc1": 1,
                    "ptr_ptr_char_var": 1,
                    "ptr_ptr_char_var8": 4,
                    "ptr_to_ptr_char_var8": 1,
                    "variable8": 1
                },
                "sVar4": {
                    "s1": 1,
                    "size": 3,
                    "size_t_var4": 4,
                    "size_value": 1,
                    "size_var": 3,
                    "size_var4": 15,
                    "size_variable": 1,
                    "var_l": 1,
                    "variable4": 1
                },
                "stat": {
                    "get_file_status": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "uVar1": {
                    "result": 1,
                    "u1": 1,
                    "undefined1": 1,
                    "undefined_var": 1,
                    "undefined_var1": 22,
                    "undefined_variable1": 1,
                    "unknown_var1": 1,
                    "var_t": 1,
                    "variable1": 1
                },
                "uVar12": {
                    "result3": 1,
                    "return_value": 1,
                    "u3": 1,
                    "u_var12": 1,
                    "undefined_var12": 20,
                    "undefined_var2": 2,
                    "undefined_var3": 1,
                    "undefined_variable3": 1,
                    "unknown_var12": 1,
                    "var_q": 1,
                    "variable14": 1
                },
                "uVar13": {
                    "u4": 1,
                    "u_var13": 1,
                    "ulong_value": 1,
                    "ulong_var": 3,
                    "ulong_var1": 1,
                    "ulong_var13": 20,
                    "ulong_variable": 1,
                    "unknown_var13": 1,
                    "var_r": 1,
                    "variable15": 1
                },
                "uVar9": {
                    "output_var": 1,
                    "result2": 1,
                    "u2": 1,
                    "undefined_var": 1,
                    "undefined_var2": 1,
                    "undefined_var9": 21,
                    "undefined_variable2": 1,
                    "unknown_var9": 1,
                    "var_o": 1,
                    "variable9": 1
                },
                "unaff_R12": {
                    "base_ptr": 1,
                    "char_double_pointer_var_unaff_r12": 1,
                    "char_pptr3": 1,
                    "char_ptr_ptr5": 1,
                    "char_ptr_ptr_r12": 1,
                    "char_ptr_ptr_unaff_r12": 1,
                    "char_ptr_ptr_var_r12": 1,
                    "pointer_r12": 3,
                    "pointer_var_r12": 1,
                    "ptr_ptr_char_var4": 1,
                    "ptr_ptr_char_var_r12": 1,
                    "ptr_to_ptr_char_unaff_r12": 1,
                    "reg3": 1,
                    "register3": 1,
                    "register_r12": 2,
                    "target_files": 1,
                    "unaff_char_ptr_r12": 1,
                    "unaff_r12": 2,
                    "unaffected_ptr_ptr_char_var2": 1,
                    "unaffected_r12": 6,
                    "unaffected_register_r12": 1,
                    "var_c": 1
                },
                "unaff_R13D": {
                    "file_count": 1,
                    "int_var2": 1,
                    "reg4": 1,
                    "register4": 1,
                    "register_r13_d": 2,
                    "stage": 1,
                    "uint_r13_d": 1,
                    "uint_unaff_r13_d": 2,
                    "uint_value": 1,
                    "uint_var": 2,
                    "uint_var1": 1,
                    "uint_var_r13_d": 3,
                    "uint_var_unaff_r13_d": 1,
                    "unaff_r13_d": 2,
                    "unaff_u_int_r13_d": 1,
                    "unaffected_r13_d": 6,
                    "unaffected_register_r13_d": 1,
                    "unaffected_uint_var": 1,
                    "value_r13_d": 1,
                    "var_d": 1
                },
                "unaff_R13D_2": {
                    "unaff_r13_d_2": 1
                },
                "unaff_R14": {
                    "context": 1,
                    "long_unaff_r14": 3,
                    "long_value3": 1,
                    "long_var3": 3,
                    "long_var_r14": 3,
                    "long_var_unaff_r14": 1,
                    "pointer_r14": 1,
                    "reg5": 1,
                    "register5": 1,
                    "register_r14": 2,
                    "target": 1,
                    "unaff_long_r14": 1,
                    "unaff_r14": 2,
                    "unaffected_long_var": 1,
                    "unaffected_r14": 6,
                    "unaffected_register_r14": 1,
                    "value_r14": 1,
                    "var_g": 1
                },
                "unaff_R14_2": {
                    "unaff_r14_2": 1
                },
                "unaff_RBP": {
                    "arguments": 1,
                    "base_ptr": 1,
                    "char_double_pointer_var_unaff_rbp": 1,
                    "char_pptr2": 1,
                    "char_ptr_ptr4": 1,
                    "char_ptr_ptr_rbp": 1,
                    "char_ptr_ptr_unaff_rbp": 1,
                    "char_ptr_ptr_var_rbp": 1,
                    "pointer_rbp": 3,
                    "pointer_var_rbp": 1,
                    "ptr_ptr_char_var3": 1,
                    "ptr_ptr_char_var_rbp": 1,
                    "ptr_to_ptr_char_unaff_rbp": 1,
                    "reg2": 1,
                    "register2": 1,
                    "register_bp": 2,
                    "unaff_char_ptr_ebp": 1,
                    "unaff_rbp": 2,
                    "unaffected_ptr_ptr_char_var": 1,
                    "unaffected_rbp": 6,
                    "unaffected_register_bp": 1,
                    "var_b": 1
                },
                "unaff_RBX": {
                    "base_ptr": 1,
                    "char_pointer_var_unaff_rbx": 1,
                    "char_ptr3": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_unaff_rbx": 2,
                    "char_ptr_var_rbx": 1,
                    "filename": 1,
                    "pointer_rbx": 3,
                    "pointer_to_char_rbx": 1,
                    "pointer_var_rbx": 1,
                    "ptr_char_var3": 1,
                    "ptr_char_var_rbx": 1,
                    "reg1": 1,
                    "register1": 1,
                    "register_bx": 2,
                    "unaff_char_ptr_ebx": 1,
                    "unaff_rbx": 2,
                    "unaffected_ptr_char_var": 1,
                    "unaffected_rbx": 6,
                    "unaffected_register_bx": 1,
                    "var_a": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "filename_cmp",
                "FUN_00105af0",
                "FUN_00105870",
                "FUN_00102943",
                "FUN_00107c10",
                "FUN_001058b0",
                "FUN_00103172",
                "lbasename",
                "FUN_00105ae0",
                "FUN_00107690",
                "FUN_001028ed",
                "strlen",
                "FUN_00105830",
                "stat",
                "bfd_openr",
                "dcgettext",
                "__errno_location",
                "xmalloc"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\n\n\nundefined8 process_files_001028ed(undefined8 arg1,long param2)\n\n{\n  undefined undefined_var1;\n  byte byte_var2;\n  int int_var3;\n  size_t size_var4;\n  int *int_ptr5;\n  char *char_ptr6;\n  char *char_ptr7;\n  char **char_ptr_ptr8;\n  undefined8 undefined_var9;\n  long long_var10;\n  char *string1;\n  char *string2;\n  long long_var11;\n  undefined8 undefined_var12;\n  ulong ulong_var13;\n  char *unaffected_rbx;\n  char **char_ptr_ptr14;\n  char **unaffected_rbp;\n  char **unaffected_r12;\n  uint unaffected_r13_d;\n  char **char_ptr_ptr15;\n  long unaffected_r14;\n  bool bool_var16;\n  byte byte_var17;\n  char **param7;\n  undefined8 param9;\n  long stack_var1;\n  long stack_var2;\n  \n  byte_var17 = 0;\ncode_r0x001028ed:\n  FUN_00107c10(unaffected_rbx,param2);\nLAB_001028f5:\n  undefined_var12 = DAT_0010d638;\n  if (unaffected_r13_d != 3) {\n    while( true ) {\n      if ((undefined8 *)*unaffected_r12 == (undefined8 *)0x0) goto LAB_0010571f;\n      int_var3 = filename_cmp(*(undefined8 *)*unaffected_r12,undefined_var12);\n      if (int_var3 == 0) break;\n      unaffected_r12 = (char **)(*unaffected_r12 + 0xf0);\n    }\n    if (unaffected_r13_d != 2) goto LAB_0010571f;\n    unaffected_r12 = (char **)(*unaffected_r12 + 0xf0);\n    goto LAB_0010571f;\n  }\n  long_var10 = *(long *)(unaffected_r14 + 0xf0);\n  if (*(long *)(unaffected_r14 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n  do {\n    long_var11 = long_var10;\n    long_var10 = *(long *)(long_var11 + 0xf0);\n  } while (long_var10 != 0);\n  unaffected_r12 = (char **)(long_var11 + 0xf0);\n  unaffected_rbx = *unaffected_rbp;\n  if (DAT_0010d620 != 0) goto LAB_00105731;\nLAB_00105698:\n  undefined_var1 = DAT_0010d5f8;\n  unaffected_r13_d = (uint)(DAT_0010d60c != 0);\n  param2 = bfd_openr(unaffected_rbx,DAT_0010d5f0);\n  if (param2 != 0) {\n    unaffected_rbp = unaffected_rbp + 1;\n    byte_var2 = FUN_00105af0(unaffected_r12,param2,unaffected_r13_d,undefined_var1);\n    param9._6_1_ = param9._6_1_ | byte_var2;\n    char_ptr6 = *unaffected_rbp;\n    do {\n      if (char_ptr6 == (char *)0x0) {\n        if (param9._6_1_ == 0) {\n          DAT_0010d618 = 0;\n          return 0;\n        }\n        undefined_var12 = FUN_001058b0();\n        return undefined_var12;\n      }\n      char_ptr_ptr14 = *(char ***)(unaffected_r14 + 0xf0);\n      unaffected_r12 = param7;\n      if (param9._7_1_ == '\\0') {\n        char_ptr_ptr15 = param7;\n        if (char_ptr_ptr14 != (char **)0x0) {\n          do {\n            if (DAT_0010d5f9 == '\\0') {\n              string1 = (char *)lbasename(*char_ptr_ptr14);\n              char_ptr7 = string1;\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(string1);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(unaffected_r14 + 8) + 0x1e);\n                if (ulong_var13 < size_var4) {\n                  char_ptr7 = (char *)xmalloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(unaffected_r14 + 8);\n                  char_ptr6 = char_ptr7;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr6 = *string1;\n                    string1 = string1 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr6 = char_ptr6 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr7[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                char_ptr6 = *unaffected_rbp;\n                string1 = char_ptr7;\n                if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n                goto LAB_00102980;\n              }\n              char_ptr6 = *unaffected_rbp;\n              if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n              string2 = (char *)lbasename(char_ptr6);\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(string2);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(unaffected_r14 + 8) + 0x1e);\n                char_ptr6 = string2;\n                string1 = char_ptr7;\n                if (ulong_var13 < size_var4) {\n                  char_ptr6 = (char *)xmalloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(unaffected_r14 + 8);\n                  char_ptr7 = char_ptr6;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr7 = *string2;\n                    string2 = string2 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr7 = char_ptr7 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr6[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                goto LAB_00102980;\n              }\n              int_var3 = filename_cmp(string2,char_ptr7);\n            }\n            else {\n              char_ptr6 = *unaffected_rbp;\n              string1 = *char_ptr_ptr14;\nLAB_00102980:\n              int_var3 = filename_cmp(char_ptr6,string1);\n            }\n            if ((int_var3 == 0) && (char_ptr_ptr14[0x1c] != (char *)0x0)) {\n              if (_DAT_0010d644 != 0) {\n                int_var3 = get_file_status(*unaffected_rbp,(get_file_status *)&stack0x000000b0);\n                if (int_var3 != 0) {\n                  int_ptr5 = __errno_location();\n                  if (*int_ptr5 != 2) {\n                    FUN_00107c10(*unaffected_rbp);\nLAB_00102b7e:\n                    char_ptr6 = *char_ptr_ptr14;\n                    undefined_var12 = dcgettext(0,\"internal get_file_status error on %s\",5);\n                    FUN_00107690(undefined_var12,char_ptr6);\n                    free(unaffected_rbp);\n                    return 0;\n                  }\n                  goto LAB_0010577e;\n                }\n                char_ptr_ptr8 = (char **)char_ptr_ptr14[0x1d];\n                if ((char **)char_ptr_ptr14[0x1d] == (char **)0x0) {\n                  char_ptr_ptr8 = char_ptr_ptr14;\n                }\n                int_var3 = (**(code **)(char_ptr_ptr8[1] + 0x1e8))(char_ptr_ptr14,&stack0x00000020);\n                if (int_var3 != 0) goto LAB_00102b7e;\n                if (stack_var2 <= stack_var1) goto LAB_0010577e;\n              }\n              undefined_var12 = FUN_00105870(param7,2,*char_ptr_ptr14);\n              if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n                char_ptr6 = *unaffected_rbp;\n                bool_var16 = DAT_0010d60c != 0;\n                long_var10 = bfd_openr(char_ptr6,DAT_0010d5f0);\n                if (long_var10 == 0) {\n                  FUN_00107c10(char_ptr6,0);\n                  goto LAB_00102b3e;\n                }\n                byte_var2 = FUN_00103172(undefined_var12,long_var10,bool_var16);\n              }\n              else {\n                undefined_var9 = FUN_00105830(*unaffected_rbp);\n                int_var3 = filename_cmp(undefined_var9,\"__.LIBDEP\");\n                if (int_var3 != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n                byte_var2 = FUN_00103172(undefined_var12,DAT_0010d620,DAT_0010d60c != 0);\n              }\n              if (byte_var2 != 0) {\n                *char_ptr_ptr15 = *(char **)(*char_ptr_ptr15 + 0xf0);\n                param9._6_1_ = byte_var2;\n              }\n              goto LAB_0010577e;\n            }\n            char_ptr_ptr15 = char_ptr_ptr14 + 0x1e;\n            char_ptr_ptr14 = (char **)char_ptr_ptr14[0x1e];\n          } while (char_ptr_ptr14 != (char **)0x0);\n          goto LAB_0010564c;\n        }\n        unaffected_r13_d = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto LAB_001028f5;\n      }\n      else {\nLAB_0010564c:\n        unaffected_r13_d = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto LAB_001028f5;\n        long_var10 = *(long *)(unaffected_r14 + 0xf0);\n        if (*(long *)(unaffected_r14 + 0xf0) != 0) goto LAB_00105670;\n      }\nLAB_0010571f:\n      unaffected_rbx = *unaffected_rbp;\n      if (DAT_0010d620 == 0) goto LAB_00105698;\nLAB_00105731:\n      undefined_var12 = FUN_00105830(unaffected_rbx);\n      int_var3 = filename_cmp(undefined_var12,\"__.LIBDEP\");\n      if (int_var3 != 0) goto code_r0x0010574f;\n      byte_var2 = FUN_00105ae0(unaffected_r12,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n      param9._6_1_ = byte_var2 | param9._6_1_;\nLAB_0010577e:\n      unaffected_rbp = unaffected_rbp + 1;\n      char_ptr6 = *unaffected_rbp;\n    } while( true );\n  }\n  goto code_r0x001028ed;\ncode_r0x0010574f:\n  unaffected_rbx = *unaffected_rbp;\n  goto LAB_00105698;\n}\n\n",
            "current_name": "process_files_001028ed",
            "entrypoint": "0x001028ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028ed": "process_files_001028ed",
                "__errno_location": "get_error_number",
                "__s": "string1",
                "__s_00": "string2",
                "bVar16": "bool_var16",
                "bVar17": "byte_var17",
                "bVar2": "byte_var2",
                "filename_cmp": "compare_filename",
                "iVar3": "int_var3",
                "in_stack_00000078": "stack_var1",
                "in_stack_00000108": "stack_var2",
                "lVar10": "long_var10",
                "lVar11": "long_var11",
                "lbasename": "get_base_name",
                "param_1": "arg1",
                "param_2": "param2",
                "param_7": "param7",
                "param_9": "param9",
                "pcVar6": "char_ptr6",
                "pcVar7": "char_ptr7",
                "piVar5": "int_ptr5",
                "ppcVar14": "char_ptr_ptr14",
                "ppcVar15": "char_ptr_ptr15",
                "ppcVar8": "char_ptr_ptr8",
                "sVar4": "size_var4",
                "stat": "get_file_status",
                "strlen": "get_string_length",
                "uVar1": "undefined_var1",
                "uVar12": "undefined_var12",
                "uVar13": "ulong_var13",
                "uVar9": "undefined_var9",
                "unaff_R12": "unaffected_r12",
                "unaff_R13D": "unaffected_r13_d",
                "unaff_R14": "unaffected_r14",
                "unaff_RBP": "unaffected_rbp",
                "unaff_RBX": "unaffected_rbx",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102943": {
            "additional_data": {
                "DAT_0010d618": {
                    "counter": 5,
                    "data": 1,
                    "data_counter": 12,
                    "data_flag": 2,
                    "data_value": 1,
                    "data_variable": 1
                },
                "FUN_00102943": {
                    "initialize_counter": 7,
                    "initialize_data": 21,
                    "reset_counter": 2,
                    "reset_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_001028ed",
                "FUN_00105570"
            ],
            "code": "\nvoid initialize_data_00102943(void)\n\n{\n  DAT_0010d618 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_00102943",
            "entrypoint": "0x00102943",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102943": "initialize_data_00102943"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ba1": {
            "additional_data": {
                "FUN_00102ba1": {
                    "deallocate_memory": 10,
                    "deallocate_memory_block": 1,
                    "decompile_extracted_code": 1,
                    "decompile_extracted_function": 1,
                    "decompile_function": 1,
                    "decompiled_function": 4,
                    "decompose_and_return": 1,
                    "free_and_return": 3,
                    "free_and_return_value": 1,
                    "free_and_return_zero": 1,
                    "free_memory": 3,
                    "free_memory_and_return": 3,
                    "reverse_and_free_memory": 1
                },
                "__ptr": {
                    "deallocated_memory": 1,
                    "memory_block": 1
                },
                "auVar1": {
                    "result": 3,
                    "return_value": 1
                },
                "unaff_RBP": {
                    "buffer": 3,
                    "memory_address": 3,
                    "memory_block": 9,
                    "memory_ptr": 1,
                    "memory_to_deallocate": 1,
                    "memory_to_free": 2,
                    "pointer": 1,
                    "pointer_to_free": 1,
                    "ptr_to_data": 1,
                    "ptr_to_free": 5,
                    "ptr_to_free_memory": 1,
                    "ptr_to_memory": 1
                },
                "unaff_retaddr": {
                    "return_address": 29
                }
            },
            "called": [
                "free"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\nundefined  [16] deallocate_memory_block_00102ba1(void)\n\n{\n  undefined result [16];\n  void *memory_block;\n  ulong return_address;\n  \n  free(memory_block);\n  result._8_8_ = 0;\n  result._0_8_ = return_address;\n  return result << 0x40;\n}\n\n",
            "current_name": "deallocate_memory_block_00102ba1",
            "entrypoint": "0x00102ba1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ba1": "deallocate_memory_block_00102ba1",
                "auVar1": "result",
                "unaff_RBP": "memory_block",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bb0": {
            "additional_data": {
                "FUN_00102bb0": {
                    "copy_and_null_terminate": 1,
                    "copy_limited_string": 1,
                    "copy_string_limited": 2,
                    "copy_string_with_limit": 2,
                    "copy_substring": 2,
                    "extract_substring": 1,
                    "reverse_and_allocate_memory": 1,
                    "reverse_and_allocate_string": 1,
                    "reverse_and_allocate_substring": 1,
                    "reverse_and_copy_string": 2,
                    "reverse_copy_string": 1,
                    "reverse_string": 16
                },
                "auVar7": {
                    "result": 5,
                    "result_array": 1,
                    "return_data": 1,
                    "return_object": 1,
                    "return_struct": 1,
                    "return_val": 1,
                    "return_value": 18,
                    "return_var": 1
                },
                "bVar6": {
                    "backward_increment": 1,
                    "byte_flag": 1,
                    "byte_value": 1,
                    "flag": 1,
                    "increment": 1,
                    "is_backward": 1,
                    "is_first_byte": 1,
                    "is_first_char": 1,
                    "is_first_iteration": 1,
                    "is_negative": 9,
                    "is_reverse": 3,
                    "is_reversed": 4,
                    "is_substring_reversed": 1,
                    "loop_flag": 1,
                    "reverse_flag": 1,
                    "source_increment": 1
                },
                "in_RAX": {
                    "input_string": 20,
                    "original_string": 2,
                    "source_string": 2,
                    "string": 7
                },
                "lVar1": {
                    "address": 1,
                    "input_pointer": 1,
                    "source_pointer": 1,
                    "string_address": 1,
                    "string_ptr": 1,
                    "temp": 1
                },
                "puVar3": {
                    "allocated_buffer": 1,
                    "allocated_memory": 1,
                    "allocated_substring": 1,
                    "copied_string": 3,
                    "copied_substring": 1,
                    "new_string": 4,
                    "output_pointer": 1,
                    "output_string": 1,
                    "result_string": 1,
                    "reversed_string": 13,
                    "substring": 1
                },
                "puVar5": {
                    "copied_ptr": 1,
                    "dest_ptr": 3,
                    "destination": 1,
                    "destination_pointer": 3,
                    "destination_ptr": 1,
                    "destination_substring": 1,
                    "new_char_ptr": 1,
                    "new_string_ptr": 2,
                    "pointer1": 1,
                    "result_string_index": 1,
                    "reversed_char": 4,
                    "reversed_string_pointer": 1,
                    "reversed_string_ptr": 5,
                    "substring_ptr": 1
                },
                "sVar2": {
                    "input_length": 3,
                    "input_string_length": 2,
                    "length": 1,
                    "source_length": 1,
                    "string_length": 22
                },
                "uVar4": {
                    "copy_length": 3,
                    "limit": 6,
                    "max_length": 12,
                    "max_string_length": 2,
                    "substring_length": 5,
                    "target_length": 1
                },
                "unaff_RBP": {
                    "base_pointer": 15,
                    "base_ptr": 6,
                    "ebp": 1,
                    "frame_pointer": 1,
                    "stack_base": 3,
                    "stack_frame_pointer": 1,
                    "stack_frame_ptr": 1,
                    "stack_pointer": 1,
                    "unaff_arg1": 1
                },
                "unaff_RBX": {
                    "current_char": 7,
                    "current_char_ptr": 1,
                    "destination_buffer": 1,
                    "iterator": 1,
                    "original_string": 1,
                    "output_string": 1,
                    "source": 1,
                    "source_bytes": 1,
                    "source_pointer": 4,
                    "source_ptr": 9,
                    "source_string": 1,
                    "source_substring": 1,
                    "substring": 1
                },
                "unaff_retaddr": {
                    "return_address": 21
                }
            },
            "called": [
                "strlen",
                "xmalloc"
            ],
            "calling": [
                "FUN_00105830"
            ],
            "code": "\nundefined  [16] reverse_and_copy_string_00102bb0(void)\n\n{\n  long temp;\n  char *input_string;\n  size_t string_length;\n  undefined *reversed_string;\n  ulong max_length;\n  undefined *source_ptr;\n  long base_pointer;\n  undefined *reversed_string_ptr;\n  byte is_negative;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  is_negative = 0;\n  string_length = strlen(input_string);\n  max_length = (ulong)*(byte *)(*(long *)(base_pointer + 8) + 0x1e);\n  reversed_string = source_ptr;\n  if (max_length < string_length) {\n    reversed_string = (undefined *)xmalloc(max_length + 1);\n    temp = *(long *)(base_pointer + 8);\n    reversed_string_ptr = reversed_string;\n    for (max_length = (ulong)*(byte *)(temp + 0x1e); max_length != 0; max_length = max_length - 1) {\n      *reversed_string_ptr = *source_ptr;\n      source_ptr = source_ptr + (ulong)is_negative * -2 + 1;\n      reversed_string_ptr = reversed_string_ptr + (ulong)is_negative * -2 + 1;\n    }\n    reversed_string[*(byte *)(temp + 0x1e)] = 0;\n  }\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = reversed_string;\n  return return_value;\n}\n\n",
            "current_name": "reverse_and_copy_string_00102bb0",
            "entrypoint": "0x00102bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bb0": "reverse_and_copy_string_00102bb0",
                "auVar7": "return_value",
                "bVar6": "is_negative",
                "in_RAX": "input_string",
                "lVar1": "temp",
                "puVar3": "reversed_string",
                "puVar5": "reversed_string_ptr",
                "sVar2": "string_length",
                "uVar4": "max_length",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "source_ptr",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bf5": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_pointer": 2,
                    "file_ptr": 1
                },
                "DAT_0010d5e0": {
                    "bfd_cache_flag": 1,
                    "cache_flag": 1,
                    "cache_open_flag": 1
                },
                "DAT_0010d618": {
                    "file_path": 3
                },
                "FUN_00102bf5": {
                    "clean_up_resources": 1,
                    "cleanup": 2,
                    "cleanup_and_close": 4,
                    "cleanup_and_close_file": 1,
                    "cleanup_and_close_files": 3,
                    "cleanup_data": 1,
                    "cleanup_files": 5,
                    "cleanup_function": 2,
                    "cleanup_resource": 1,
                    "cleanup_resources": 9,
                    "close_file_and_unlink": 2
                },
                "__stream": {
                    "file": 17,
                    "file_stream": 2,
                    "file_to_close": 3
                },
                "__stream_1": {
                    "cache_file": 1
                },
                "__stream_2": {
                    "cache": 1
                },
                "__volatile": {
                    "bfd_cache": 1
                },
                "bcc_file": {
                    "bfd_cache": 1
                },
                "bfd_cache_close": {
                    "cache_close": 1,
                    "clear_bfd_cache": 1,
                    "close_bfd_cache": 21,
                    "close_cache": 2
                },
                "fclose": {
                    "close_file": 17
                },
                "unlink_file": {
                    "path": 1
                },
                "unlink_if_ordinary": {
                    "cleanup_file": 1,
                    "delete_file": 5,
                    "delete_if_ordinary": 1,
                    "remove_file": 11,
                    "remove_link": 1,
                    "remove_nonessential_file": 1,
                    "unlink_file": 6,
                    "unlink_if_ordinary": 1,
                    "unlink_ordinary": 1
                }
            },
            "called": [
                "fclose",
                "bfd_cache_close",
                "unlink_if_ordinary"
            ],
            "calling": [
                "FUN_00107730"
            ],
            "code": "\nvoid cleanup_and_close_files_00102bf5(void)\n\n{\n  if (DAT_0010d5e0 != 0) {\n    bfd_cache_close();\n  }\n  if (DAT_0010d5d8 != (FILE *)0x0) {\n    fclose(DAT_0010d5d8);\n  }\n  unlink_if_ordinary(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_and_close_files_00102bf5",
            "entrypoint": "0x00102bf5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bf5": "cleanup_and_close_files_00102bf5",
                "bfd_cache_close": "close_bfd_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c25": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "archive_file": 2,
                    "file_pointer": 2
                },
                "DAT_0010d618": {
                    "current_file": 1,
                    "current_file_name": 1,
                    "filename": 1
                },
                "DAT_0010d638": {
                    "default_error_message": 1
                },
                "FUN_00102c25": {
                    "extract_and_copy_archive": 1,
                    "extract_and_save_archive": 7,
                    "extract_and_save_archive_contents": 1,
                    "extract_and_save_file_from_binary": 1,
                    "extract_and_write_archive": 5,
                    "extract_and_write_archive_file": 1,
                    "extract_archive": 2,
                    "extract_archive_contents": 2,
                    "extract_archived_file": 2,
                    "extract_archived_files": 1,
                    "extract_archives": 1,
                    "extract_files_from_archive": 1,
                    "extract_function_from_binary": 1,
                    "find_matching_file": 1,
                    "improved_extract_archives": 1,
                    "process_archive_file": 1
                },
                "FUN_00105a20": {
                    "open_file": 2
                },
                "FUN_00107690": {
                    "handle_error": 2
                },
                "FUN_00107c80": {
                    "perform_action": 1,
                    "process_file": 1
                },
                "F_00102c25": {
                    "extract_archive": 1,
                    "extract_archives": 1
                },
                "_DAT_0010d600": {
                    "enable_functionality": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "is_flag": 1
                },
                "__errno_location": {
                    "get_errno_location": 2
                },
                "__errnum": {
                    "error_number": 1
                },
                "__file": {
                    "file_name": 1,
                    "file_path": 2
                },
                "__mode": {
                    "file_mode": 1,
                    "permissions": 1
                },
                "__mode_t": {
                    "file_mode": 1,
                    "file_permissions": 2
                },
                "__n": {
                    "buffer_size": 2,
                    "bytes_read": 20,
                    "count": 1,
                    "num_bytes": 1,
                    "read_bytes": 2,
                    "read_size": 3
                },
                "__ptr": {
                    "buffer": 22,
                    "buffer_ptr": 6,
                    "ptr": 1
                },
                "__s": {
                    "file_stream": 1,
                    "stream": 2
                },
                "__size": {
                    "element_size": 2,
                    "size": 1
                },
                "__stream": {
                    "file": 1,
                    "file_stream": 1
                },
                "bfd_bread": {
                    "read_from_bfd": 2
                },
                "bfd_seek": {
                    "seek_bfd": 1,
                    "seek_in_bfd": 1
                },
                "chmod": {
                    "change_file_permission": 1,
                    "change_file_permissions": 1
                },
                "dcgettext": {
                    "get_text": 2
                },
                "fclose": {
                    "close_file": 2
                },
                "free": {
                    "deallocate_memory": 1
                },
                "fwrite": {
                    "write_to_file": 2
                },
                "iVar1": {
                    "cmp_result": 6,
                    "compare_result": 1,
                    "comparison_result": 13,
                    "filename_comparison_result": 4,
                    "result": 1
                },
                "iVar2": {
                    "error_code": 3,
                    "func_result": 1,
                    "function_result": 2,
                    "internal_stat_error": 2,
                    "result": 7,
                    "return_code": 1,
                    "return_value": 1,
                    "stat_error_status": 1,
                    "stat_result": 4,
                    "status": 6
                },
                "iVar3": {
                    "error": 1
                },
                "lVar7": {
                    "array_size": 1,
                    "i": 4,
                    "index": 1,
                    "loop_count": 2,
                    "loop_counter": 16,
                    "loop_index": 2,
                    "loop_variable": 1
                },
                "param_1": {
                    "param_1": 1
                },
                "param_11": {
                    "chmod_mode": 1,
                    "file_mode": 4,
                    "file_permission": 3,
                    "file_permissions": 6,
                    "mode": 10,
                    "new_file_permissions": 2,
                    "new_permissions": 2,
                    "permission_value": 1,
                    "permissions": 1
                },
                "param_12": {
                    "archive_size": 25,
                    "file_size": 5
                },
                "param_2": {
                    "param_2": 1
                },
                "param_3": {
                    "param_3": 1
                },
                "param_4": {
                    "param_4": 1
                },
                "param_7": {
                    "array_ptr": 1,
                    "file_permissions": 4,
                    "flags": 1,
                    "mode_bits": 1,
                    "parameter_array": 1,
                    "parameter_errors": 1,
                    "permission_array": 4,
                    "permissions": 13,
                    "permissions_array": 2,
                    "result_array": 1,
                    "status": 1
                },
                "pcVar4": {
                    "error_description": 2,
                    "error_message": 4,
                    "error_str": 2,
                    "error_string": 18,
                    "error_text": 1
                },
                "piVar3": {
                    "errno_location": 8,
                    "errno_location_ptr": 1,
                    "errno_ptr": 2,
                    "error_num": 1,
                    "error_num_ptr": 2,
                    "error_number": 7,
                    "error_number_ptr": 2,
                    "error_ptr": 1,
                    "ptr_errno": 1
                },
                "plVar8": {
                    "current_archive": 1,
                    "current_entry": 3,
                    "current_file": 14,
                    "current_file_ptr": 3,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "file_info": 1,
                    "file_pointer": 1,
                    "file_ptr": 3,
                    "result": 1
                },
                "pplVar6": {
                    "alt_archive_info": 1,
                    "arch_files": 1,
                    "arch_ptr": 1,
                    "archive": 3,
                    "archive_data": 2,
                    "archive_entry": 1,
                    "archive_info": 1,
                    "archive_metadata": 1,
                    "archive_pointer": 1,
                    "archive_ptr": 6,
                    "double_pointer": 1,
                    "file_ptr": 2,
                    "file_ptrs": 1,
                    "file_structure": 1,
                    "function_pointer_array": 1,
                    "function_pointers": 2,
                    "pointer_array": 1,
                    "ptr_file": 1,
                    "var1": 1,
                    "working_directory": 1
                },
                "puVar9": {
                    "array_ptr_2": 1,
                    "current_permission": 3,
                    "current_permission_ptr": 1,
                    "initialized_param": 1,
                    "loop_array_pointer": 1,
                    "param_1": 1,
                    "param_7": 1,
                    "param_array": 2,
                    "param_pointer": 1,
                    "param_ptr": 2,
                    "parameter_ptr": 1,
                    "parameters_ptr": 1,
                    "permission_ptr": 2,
                    "permissions_ptr": 6,
                    "ptr": 3,
                    "ptr_permissions": 1,
                    "status_ptr": 1,
                    "temp_ptr": 1
                },
                "sVar11": {
                    "bytes_to_process": 3,
                    "bytes_to_read": 5,
                    "bytes_to_write": 8,
                    "bytes_written": 4,
                    "data_size": 1,
                    "read_size": 3,
                    "write_bytes": 2,
                    "write_result": 1,
                    "write_size": 2
                },
                "strerror": {
                    "get_error_message": 2
                },
                "uVar10": {
                    "bytes_processed": 7,
                    "bytes_read": 4,
                    "bytes_remaining": 2,
                    "bytes_written": 4,
                    "total_bytes": 2,
                    "total_bytes_processed": 1,
                    "total_bytes_read": 5,
                    "total_bytes_written": 2
                },
                "uVar5": {
                    "error_message": 24,
                    "error_msg": 3,
                    "error_string": 1,
                    "gettext_message": 1,
                    "message": 1
                },
                "unaff_RBX": {
                    "arch": 1,
                    "arch_data": 1,
                    "archive_contents": 1,
                    "archive_data": 2,
                    "archive_data_struct": 1,
                    "archive_file": 1,
                    "archive_files": 1,
                    "archive_info": 2,
                    "context": 1,
                    "file": 1,
                    "file_data": 1,
                    "file_info": 2,
                    "file_information": 1,
                    "file_structure_ptr": 1,
                    "function_args": 1,
                    "function_arguments": 1,
                    "function_params": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_params": 1,
                    "parameter_array": 1,
                    "pointer_to_file": 1,
                    "ptr_rbx": 1,
                    "register_rbx": 1,
                    "var2": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "chmod",
                "free",
                "fwrite",
                "fclose",
                "FUN_00105a20",
                "FUN_00107c80",
                "FUN_00107690",
                "bfd_seek",
                "dcgettext",
                "strerror",
                "__errno_location",
                "bfd_bread",
                "xmalloc"
            ],
            "calling": [
                "FUN_00107740"
            ],
            "code": "\n\n\nlong * extract_and_save_archive_contents_00102c25(void)\n\n{\n  int comparison_result;\n  int result;\n  int *errno_location;\n  char *error_string;\n  undefined8 error_message;\n  long **archive_ptr;\n  void *buffer;\n  size_t bytes_read;\n  long loop_counter;\n  long **archive_data;\n  long *current_file;\n  undefined4 *permissions_ptr;\n  ulong bytes_processed;\n  size_t bytes_to_write;\n  undefined4 *permissions;\n  file_permissions mode;\n  ulong archive_size;\n  \n  permissions_ptr = permissions;\n  for (loop_counter = 0x24; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *permissions_ptr = 0;\n    permissions_ptr = permissions_ptr + 1;\n  }\n  archive_ptr = (long **)archive_data[0x1d];\n  if ((long **)archive_data[0x1d] == (long **)0x0) {\n    archive_ptr = archive_data;\n  }\n  result = (*(code *)archive_ptr[1][0x3d])();\n  if (result != 0) {\n    current_file = *archive_data;\n    error_message = dcgettext(0,\"internal stat error on %s\",5);\n    result = FUN_00107690(error_message,current_file);\n    error_message = DAT_0010d638;\n    if (result == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = filename_cmp(*(undefined8 *)*current_file,error_message);\n        if (comparison_result == 0) {\n          if (result != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  bfd_seek();\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive_data);\n  }\n  else {\n    bytes_processed = 0;\n    buffer = (void *)xmalloc(0x2000);\n    do {\n      bytes_to_write = archive_size - bytes_processed;\n      if (0x2000 < bytes_to_write) {\n        bytes_to_write = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,bytes_to_write);\n      if (bytes_to_write != bytes_read) {\nLAB_00102c78:\n        archive_data = (long **)*archive_data[0x1d];\n        error_message = dcgettext(0,\"%s is not a valid archive\",5);\n        FUN_00107690(error_message,archive_data);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive_data);\n      }\n      bytes_to_write = fwrite(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_to_write != bytes_read) {\n        errno_location = __errno_location();\n        error_string = strerror(*errno_location);\n        FUN_00107690(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      bytes_processed = bytes_processed + bytes_read;\n    } while (bytes_processed < archive_size);\n    free(buffer);\n  }\n  fclose(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  chmod(DAT_0010d618,mode);\n  if (_DAT_0010d600 != 0) {\n    FUN_00107c80(error_string,permissions);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_save_archive_contents_00102c25",
            "entrypoint": "0x00102c25",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c25": "extract_and_save_archive_contents_00102c25",
                "__errno_location": "get_errno_location",
                "__mode": "permissions",
                "__mode_t": "file_permissions",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "bfd_bread": "read_from_bfd",
                "bfd_seek": "seek_in_bfd",
                "chmod": "change_file_permission",
                "dcgettext": "get_text",
                "fclose": "close_file",
                "free": "deallocate_memory",
                "fwrite": "write_to_file",
                "iVar1": "comparison_result",
                "iVar2": "result",
                "iVar3": "error",
                "lVar7": "loop_counter",
                "param_11": "mode",
                "param_12": "archive_size",
                "param_7": "permissions",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "permissions_ptr",
                "sVar11": "bytes_to_write",
                "strerror": "get_error_message",
                "uVar10": "bytes_processed",
                "uVar5": "error_message",
                "unaff_RBX": "archive_data",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102cd9": {
            "additional_data": {
                "FUN_00102cd9": {
                    "find_file": 2,
                    "find_file_address": 1,
                    "find_file_or_directory": 1,
                    "find_file_pointer": 1,
                    "find_filename": 2,
                    "find_match": 1,
                    "find_matching_address": 2,
                    "find_matching_entry": 3,
                    "find_matching_file": 8,
                    "find_matching_file_address": 1,
                    "find_matching_file_entry": 1,
                    "find_matching_file_path": 1,
                    "find_matching_pointer": 1,
                    "find_matching_string": 1,
                    "find_matching_string_index": 1,
                    "find_matching_value": 1,
                    "find_next_string": 1,
                    "retrieve_matching_entry": 1,
                    "search_file": 1
                },
                "filename_cmp": {
                    "compare_filename": 2,
                    "compare_filenames": 2
                },
                "iVar1": {
                    "cmp_result": 5,
                    "comparison_result": 17
                },
                "in_EAX": {
                    "comparison_flag": 2,
                    "comparison_type": 1,
                    "counter": 1,
                    "eax_value": 2,
                    "entry_count": 2,
                    "file_count": 2,
                    "index": 1,
                    "input": 1,
                    "input_code": 1,
                    "input_flag": 1,
                    "input_index": 1,
                    "input_option": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "num_files": 1,
                    "num_iterations": 1,
                    "operation_code": 1,
                    "parameter": 1,
                    "search_mode": 2,
                    "search_type": 2,
                    "status": 1
                },
                "param_7": {
                    "comparison_address": 1,
                    "comparison_param": 1,
                    "comparison_string": 1,
                    "desired_file": 1,
                    "desired_filename": 1,
                    "desired_value": 1,
                    "filename": 2,
                    "search_file": 1,
                    "search_key": 1,
                    "search_string": 2,
                    "target_address": 1,
                    "target_file": 3,
                    "target_file_name": 1,
                    "target_file_path": 1,
                    "target_filename": 11,
                    "target_string": 2
                },
                "unaff_RBX": {
                    "addresses": 1,
                    "array_pointer": 1,
                    "current_address": 1,
                    "current_entry": 4,
                    "current_file": 1,
                    "current_file_path": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "current_string": 1,
                    "entries_array": 1,
                    "file_address": 2,
                    "file_array": 5,
                    "file_entries": 1,
                    "file_list": 4,
                    "file_pointer": 4,
                    "string_addresses": 1,
                    "string_array": 1
                }
            },
            "called": [
                "filename_cmp"
            ],
            "calling": [
                "FUN_00105870"
            ],
            "code": "\nlong * find_matching_file_path_00102cd9(void)\n\n{\n  int input_value;\n  int comparison_result;\n  long *file_array;\n  undefined8 target_filename;\n  \n  target_filename = DAT_0010d638;\n  if (input_value == 3) {\n    for (; *file_array != 0; file_array = (long *)(*file_array + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_array != (undefined8 *)0x0; file_array = (long *)(*file_array + 0xf0)) {\n      comparison_result = filename_cmp(*(undefined8 *)*file_array,target_filename);\n      if (comparison_result == 0) {\n        if (input_value != 2) {\n          return file_array;\n        }\n        return (long *)(*file_array + 0xf0);\n      }\n    }\n  }\n  return file_array;\n}\n\n",
            "current_name": "find_matching_file_path_00102cd9",
            "entrypoint": "0x00102cd9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102cd9": "find_matching_file_path_00102cd9",
                "filename_cmp": "compare_filename",
                "iVar1": "comparison_result",
                "in_EAX": "input_value",
                "param_7": "target_filename",
                "unaff_RBX": "file_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d2f": {
            "additional_data": {
                "DAT_0010d5e0": {
                    "data_flag1": 1,
                    "data_value1": 1,
                    "flag0": 1,
                    "flag2": 1,
                    "is_corrupt": 1,
                    "variable1": 1
                },
                "DAT_0010d5f8": {
                    "corrupt_time_data": 1,
                    "flag1": 1,
                    "flag4": 1,
                    "is_archive": 1,
                    "is_time_data_corrupt": 1,
                    "time_data_corrupt": 1
                },
                "DAT_0010d618": {
                    "data_flag2": 1,
                    "data_value2": 1,
                    "flag1": 1,
                    "flag3": 1,
                    "is_error": 1,
                    "variable2": 1
                },
                "FUN_00102d2f": {
                    "format_and_print_file_info": 1,
                    "print_file_details": 1,
                    "print_file_info": 22,
                    "print_file_information": 3,
                    "print_file_metadata": 4
                },
                "FUN_00105bc0": {
                    "check_file_status": 1
                },
                "FUN_00107c10": {
                    "get_file_mode": 1
                },
                "VAR_0010d5e0": {
                    "var1": 1
                },
                "VAR_0010d618": {
                    "var2": 1
                },
                "__format": {
                    "corrupted_time_data": 1,
                    "corrupted_time_msg": 1,
                    "error_format": 1,
                    "format_string": 6,
                    "time_data_corrupt": 1,
                    "time_data_string": 1,
                    "time_error_message": 3,
                    "time_format": 4,
                    "time_format_string": 1
                },
                "bVar1": {
                    "archive_head": 1,
                    "byte_value": 2,
                    "byte_var": 1,
                    "byte_variable": 1,
                    "flag": 1,
                    "flag_variable": 1,
                    "random_value": 1,
                    "result": 2
                },
                "bfd_close": {
                    "close_file": 1
                },
                "bfd_set_archive_head": {
                    "set_archive_flag": 1
                },
                "cStack0000000000000016": {
                    "char_variable1": 1,
                    "file_permission1": 1,
                    "file_permission_char1": 1,
                    "file_permission_user_read": 1,
                    "file_permissions1": 1,
                    "flag1": 2,
                    "flag3_char": 1,
                    "flag_char1": 1,
                    "has_executable_flag": 1,
                    "has_execute_permission": 1,
                    "is_archived": 1,
                    "is_executable": 2,
                    "owner_permission": 1,
                    "owner_read": 1,
                    "perm_user_read": 1,
                    "permission": 1,
                    "permission1": 1,
                    "permission_char1": 2,
                    "permission_owner_read": 1,
                    "permission_user_read": 1,
                    "read_permission": 1,
                    "special_permission1": 1,
                    "user_read_permission": 1
                },
                "cStack0000000000000017": {
                    "char_variable2": 1,
                    "file_permission2": 1,
                    "file_permission_char2": 1,
                    "file_permission_user_write": 1,
                    "file_permissions2": 1,
                    "flag2": 2,
                    "flag4_char": 1,
                    "flag_char2": 1,
                    "group_permission": 1,
                    "has_write_flag": 1,
                    "has_write_permission": 1,
                    "is_executable": 1,
                    "is_writable": 2,
                    "owner_write": 1,
                    "perm_user_write": 1,
                    "permission": 1,
                    "permission2": 1,
                    "permission_char2": 2,
                    "permission_owner_write": 1,
                    "permission_user_write": 1,
                    "special_permission2": 1,
                    "user_write_permission": 1,
                    "write_permission": 1
                },
                "cStack0000000000000019": {
                    "char_variable4": 1,
                    "file_permission4": 1,
                    "file_permission_char4": 1,
                    "file_permission_others_read": 1,
                    "file_permissions4": 1,
                    "flag4": 2,
                    "flag6_char": 1,
                    "flag_char4": 1,
                    "group_read": 1,
                    "group_read_permission": 1,
                    "has_executable_flag2": 1,
                    "has_execute_permission2": 1,
                    "is_archive_head": 1,
                    "is_read_only": 1,
                    "is_shared_executable": 1,
                    "is_symbolic_link": 1,
                    "perm_group_read": 1,
                    "permission": 1,
                    "permission4": 1,
                    "permission_char4": 2,
                    "permission_group_read": 1,
                    "permission_group_write": 1,
                    "read_permission_group": 1,
                    "special_permission3": 1
                },
                "cStack000000000000001a": {
                    "char_variable5": 1,
                    "file_permission5": 1,
                    "file_permission_char5": 1,
                    "file_permission_others_write": 1,
                    "file_permissions5": 1,
                    "flag5": 2,
                    "flag7_char": 1,
                    "flag_char5": 1,
                    "group_write": 1,
                    "group_write_permission": 1,
                    "has_write_flag2": 1,
                    "has_write_permission2": 1,
                    "is_archive_symbol_table": 1,
                    "is_shared": 1,
                    "is_shared_writable": 1,
                    "other_permission": 1,
                    "perm_group_write": 1,
                    "permission": 1,
                    "permission5": 1,
                    "permission_char5": 2,
                    "permission_group_write": 1,
                    "permission_other_read": 1,
                    "special_permission4": 1,
                    "write_permission_group": 1
                },
                "cStack000000000000001b": {
                    "char_variable6": 1,
                    "execute_permission_group": 1,
                    "file_permission6": 1,
                    "file_permission_char6": 1,
                    "file_permission_others_execute": 1,
                    "file_permissions6": 1,
                    "flag6": 2,
                    "flag8_char": 1,
                    "flag_char6": 1,
                    "group_execute": 1,
                    "group_execute_permission": 1,
                    "has_read_flag2": 1,
                    "has_read_permission2": 1,
                    "is_archive_archive_member": 1,
                    "is_directory": 1,
                    "is_shared_readable": 1,
                    "perm_group_execute": 1,
                    "permission": 1,
                    "permission6": 1,
                    "permission_char6": 2,
                    "permission_group_execute": 1,
                    "permission_other_write": 1,
                    "special_permission5": 1
                },
                "cStack000000000000001c": {
                    "char_variable7": 1,
                    "file_permission7": 1,
                    "file_permission_char7": 1,
                    "file_permission_set_user_id": 1,
                    "file_permissions7": 1,
                    "flag7": 2,
                    "flag9_char": 1,
                    "flag_char7": 1,
                    "has_executable_flag3": 1,
                    "has_execute_permission3": 1,
                    "is_archive_global_symbol": 1,
                    "is_directory": 1,
                    "is_private_executable": 1,
                    "is_symbolic_link": 1,
                    "other_read": 1,
                    "other_read_permission": 1,
                    "perm_other_read": 1,
                    "permission": 1,
                    "permission7": 1,
                    "permission_char7": 2,
                    "permission_others_read": 1,
                    "read_permission_other": 1,
                    "special_bit_set_uid": 1,
                    "special_permission6": 1
                },
                "cStack000000000000001d": {
                    "char_variable8": 1,
                    "file_permission8": 1,
                    "file_permission_char8": 1,
                    "file_permission_set_group_id": 1,
                    "file_permissions8": 1,
                    "flag10_char": 1,
                    "flag8": 2,
                    "flag_char8": 1,
                    "has_write_flag3": 1,
                    "has_write_permission3": 1,
                    "is_archive_multi_file": 1,
                    "is_character_special": 1,
                    "is_pipe": 1,
                    "is_private_writable": 1,
                    "other_write": 1,
                    "other_write_permission": 1,
                    "perm_other_write": 1,
                    "permission": 1,
                    "permission8": 1,
                    "permission_char8": 2,
                    "permission_others_write": 1,
                    "special_bit_set_gid": 1,
                    "special_permission7": 1,
                    "write_permission_other": 1
                },
                "cStack000000000000001e": {
                    "char_variable9": 1,
                    "execute_permission_other": 1,
                    "file_permission9": 1,
                    "file_permission_char9": 1,
                    "file_permission_sticky_bit": 1,
                    "file_permissions9": 1,
                    "flag11_char": 1,
                    "flag9": 2,
                    "flag_char9": 1,
                    "has_read_flag3": 1,
                    "has_read_permission3": 1,
                    "is_archive_object": 1,
                    "is_block_special": 1,
                    "is_private_readable": 1,
                    "is_socket": 1,
                    "other_execute": 1,
                    "other_execute_permission": 1,
                    "perm_other_execute": 1,
                    "permission": 1,
                    "permission9": 1,
                    "permission_char9": 2,
                    "permission_others_execute": 1,
                    "special_bit_sticky": 1,
                    "special_permission8": 1
                },
                "cStack000000000000001f": {
                    "flag10": 1,
                    "flag_char10": 1,
                    "fprintf_return_value": 1,
                    "is_device": 1,
                    "null_char": 2,
                    "padding": 1
                },
                "cVar2": {
                    "char_value": 1,
                    "char_var": 1,
                    "char_variable": 1,
                    "check_value": 1,
                    "result": 3,
                    "return_value": 1,
                    "status": 2
                },
                "dcgettext": {
                    "get_localized_message": 1
                },
                "dup": {
                    "duplicate_fd": 1
                },
                "fprintf": {
                    "print_formatted_output": 1
                },
                "fputc": {
                    "put_char": 1
                },
                "fputs": {
                    "put_string": 1
                },
                "free": {
                    "free_memory": 1
                },
                "iVar3": {
                    "close_result": 1,
                    "exit_code": 1,
                    "function_value": 1,
                    "int_var": 1,
                    "integer_variable": 1,
                    "result": 1,
                    "return_value": 3,
                    "status": 1
                },
                "in_stack_00000018": {
                    "char_variable3": 1,
                    "execute_permission": 1,
                    "file_mode": 1,
                    "file_permission3": 1,
                    "file_permission_char3": 1,
                    "file_permission_group_execute": 1,
                    "file_permissions3": 1,
                    "flag3": 2,
                    "flag5_char": 1,
                    "flag_char3": 1,
                    "has_read_flag": 1,
                    "has_read_permission": 1,
                    "is_executable": 1,
                    "is_readable": 2,
                    "is_writable": 1,
                    "owner_execute": 1,
                    "perm_user_execute": 1,
                    "permission": 1,
                    "permission3": 1,
                    "permission_char3": 2,
                    "permission_group_read": 1,
                    "permission_user_execute": 1,
                    "user_execute_permission": 1
                },
                "in_stack_00000070": {
                    "block_size": 1,
                    "device": 1,
                    "device_id": 1,
                    "file_gid": 1,
                    "file_group": 3,
                    "file_group_gid": 1,
                    "file_group_id": 2,
                    "file_links": 1,
                    "file_modification_time": 1,
                    "file_owner": 2,
                    "file_permissions": 1,
                    "file_size": 5,
                    "file_size2": 2,
                    "file_user_id": 1,
                    "group_id": 2,
                    "hard_links": 1,
                    "number_of_links": 1,
                    "owner_id": 1,
                    "u_var2": 1,
                    "uid": 1,
                    "unsigned_variable4": 1
                },
                "in_stack_00000080": {
                    "file_modified_time": 1,
                    "file_size": 15,
                    "file_time": 1,
                    "last_modification_time": 1,
                    "last_modified_time": 2,
                    "long_variable": 1,
                    "mtime": 1,
                    "size": 1,
                    "time": 1,
                    "time_data": 1,
                    "time_info": 1,
                    "time_value": 1,
                    "timestamp": 3,
                    "u_var3": 1
                },
                "sprintf": {
                    "format_string_into_buffer": 1
                },
                "stack0x00000020": {
                    "time_error_message": 1
                },
                "uStack0000000000000015": {
                    "file_mode": 1,
                    "file_permission": 2,
                    "file_permissions": 1,
                    "file_type": 11,
                    "file_type_char": 7,
                    "file_type_code": 1,
                    "file_type_flag": 1,
                    "mode": 1,
                    "permission_code": 1
                },
                "uStack000000000000001f": {
                    "extra_char": 1,
                    "flag": 2,
                    "flag10": 1,
                    "flag12": 1,
                    "flag3": 1,
                    "has_extended_permissions": 1,
                    "is_permission_x": 1,
                    "is_special_flag_set": 1,
                    "print_zero": 1,
                    "unaff_r12": 1,
                    "undefined_variable": 1,
                    "unused": 1,
                    "unused_flag": 1
                },
                "uStack0000000000000068": {
                    "file_attributes": 3,
                    "file_details_mask": 1,
                    "file_mode": 12,
                    "file_permission": 2,
                    "file_permissions": 8,
                    "file_stats": 1,
                    "flags": 1,
                    "mode": 1,
                    "permission_bits": 1,
                    "unsigned_variable2": 1
                },
                "uStack000000000000006c": {
                    "file_access_time": 1,
                    "file_hard_links": 1,
                    "file_link_count": 1,
                    "file_links": 2,
                    "file_mode": 1,
                    "file_owner": 3,
                    "file_owner_uid": 1,
                    "file_size": 2,
                    "file_size1": 2,
                    "file_uid": 1,
                    "file_user_id": 2,
                    "inode": 1,
                    "inode_number": 3,
                    "link_count": 1,
                    "num_links": 2,
                    "number_of_links": 2,
                    "total_links": 1,
                    "u_var1": 1,
                    "unsigned_variable3": 1,
                    "user_id": 2
                },
                "uVar4": {
                    "file_mode": 1,
                    "file_permissions": 5,
                    "file_type": 5,
                    "file_type_flags": 1,
                    "mode_bits": 1,
                    "unsigned_variable": 1
                },
                "unaff_R12": {
                    "check_flag": 1,
                    "data_is_null": 1,
                    "file_format": 1,
                    "file_info": 1,
                    "file_options": 1,
                    "file_permissions": 1,
                    "file_type_flag": 1,
                    "flag": 3,
                    "flag1": 1,
                    "flag2": 1,
                    "flag_value": 1,
                    "flags": 2,
                    "format_string": 1,
                    "has_long_name": 1,
                    "is_archive": 3,
                    "is_executable": 2,
                    "is_flag_set": 1,
                    "is_option_flag": 1,
                    "is_print_hex": 1,
                    "is_special_file": 1,
                    "is_symbolic_link": 1,
                    "long_value": 1,
                    "metadata_flag": 1,
                    "time_corrupt": 1,
                    "time_data": 1
                },
                "unaff_R13": {
                    "allocated_memory": 2,
                    "buffer": 6,
                    "data": 1,
                    "data_ptr": 1,
                    "dynamic_memory1": 1,
                    "file_buffer": 2,
                    "file_info": 1,
                    "file_info_ptr": 1,
                    "file_type": 1,
                    "filename": 1,
                    "formatted_date": 1,
                    "malloc_buffer": 1,
                    "malloc_data": 2,
                    "malloc_ptr": 1,
                    "memory": 1,
                    "memory_block": 1,
                    "pointer1": 1,
                    "temp1": 1,
                    "time_buffer": 1,
                    "time_data": 1,
                    "uninitialized_variable": 1,
                    "unused_pointer": 1,
                    "void_pointer": 1
                },
                "unaff_R14D": {
                    "dup_descriptor": 1,
                    "dup_fd": 2,
                    "dup_file_descriptor": 2,
                    "duped_file_descriptor": 1,
                    "duplicate_fd": 2,
                    "fd": 1,
                    "file_desc": 1,
                    "file_descriptor": 18,
                    "file_path": 1,
                    "flag2": 1,
                    "integer_value": 1
                },
                "unaff_RBP": {
                    "file": 2,
                    "file_pointer": 8,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 17
                },
                "unaff_RBX": {
                    "arguments": 1,
                    "char_pointer1": 1,
                    "file": 2,
                    "file_content": 1,
                    "file_data": 7,
                    "file_details": 1,
                    "file_info": 5,
                    "file_lines": 4,
                    "file_metadata": 1,
                    "file_names": 3,
                    "file_path": 1,
                    "file_paths": 2,
                    "filename": 1,
                    "messages": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "free",
                "xexit",
                "bfd_set_archive_head",
                "bfd_close",
                "FUN_00105bc0",
                "dup",
                "FUN_00107c10",
                "FUN_00102d2f"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid format_and_print_file_info_00102d2f(void)\n\n{\n  byte byte_value;\n  char result;\n  int return_value;\n  char *format_string;\n  uint file_permissions;\n  char **file_data;\n  FILE *output_file;\n  long flag;\n  void *buffer;\n  int file_descriptor;\n  undefined file_type;\n  char permission_char1;\n  char flag2;\n  char is_readable;\n  char flag4;\n  char permission_char5;\n  char flag6;\n  char flag7;\n  char flag8;\n  char flag9;\n  undefined flag;\n  uint file_mode;\n  uint file_owner;\n  uint file_size;\n  undefined8 file_size;\n  \n  do {\n    byte_value = FUN_00107c10();\n    *(uint *)((long)file_data + 0x44) = *(uint *)((long)file_data + 0x44) | 0x100000;\n    if ((DAT_0010d5f8 != '\\0') || ((*(byte *)(flag + 0x49) & 0x10) != 0)) {\n      *(byte *)((long)file_data + 0x49) = byte_value | 0x10;\n    }\n    result = bfd_set_archive_head();\n  } while (result == '\\0');\n  duplicate_fd(file_descriptor);\n  result = bfd_close();\n  if (result != '\\0') {\n    DAT_0010d5e0 = 0;\n    DAT_0010d618 = 0;\n    bfd_close();\n    return_value = FUN_00105bc0();\n    if (return_value == 0) {\n      free_memory(buffer);\n      free_memory(output_file);\n      return;\n    }\n                    \n    xexit(1);\n  }\n  FUN_00107c10();\n  format_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n  sprintf(&time_error_message,format_string);\n  file_permissions = file_mode & 0xf000;\n  if (file_permissions == 0x4000) {\n    file_type = 100;\n  }\n  else if (file_permissions == 0xa000) {\n    file_type = 0x6c;\n  }\n  else if (file_permissions == 0x6000) {\n    file_type = 0x62;\n  }\n  else if (file_permissions == 0x2000) {\n    file_type = 99;\n  }\n  else if (file_permissions == 0xc000) {\n    file_type = 0x73;\n  }\n  else {\n    file_type = 0x70;\n    if (file_permissions != 0x1000) {\n      file_type = 0x2d;\n    }\n  }\n  permission_char1 = (-((file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n  flag2 = (-((file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n  is_readable = (-((file_mode & 0x40) == 0) & 0xb5U) + 0x78;\n  flag4 = (-((file_mode & 0x20) == 0) & 0xbbU) + 0x72;\n  permission_char5 = (-((file_mode & 0x10) == 0) & 0xb6U) + 0x77;\n  flag6 = (-((file_mode & 8) == 0) & 0xb5U) + 0x78;\n  flag7 = (-((file_mode & 4) == 0) & 0xbbU) + 0x72;\n  flag8 = (-((file_mode & 2) == 0) & 0xb6U) + 0x77;\n  flag9 = (-((file_mode & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_mode & 0x800) != 0) {\n    if (is_readable == 'x') {\n      is_readable = 's';\n    }\n    else {\n      is_readable = 'S';\n    }\n  }\n  if ((file_mode & 0x400) != 0) {\n    if (flag6 == 'x') {\n      flag6 = 's';\n    }\n    else {\n      flag6 = 'S';\n    }\n  }\n  if ((file_mode & 0x200) != 0) {\n    if (flag9 == 'x') {\n      flag9 = 't';\n    }\n    else {\n      flag9 = 'T';\n    }\n  }\n  flag = 0;\n  fprintf(output_file,\"%s %ld/%ld %6lu %s \",&stack0x00000016,(ulong)file_owner,\n          (ulong)file_size,file_size,&time_error_message,(ulong)file_mode)\n  ;\n  fputs(*file_data,output_file);\n  if ((char)flag != '\\0') {\n    if ((*(byte *)((long)file_data + 0x49) & 0x10) == 0) {\n      if (file_data[0xb] != (char *)0x0) {\n        fprintf(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_data[0xc] != (char *)0x0) {\n      fprintf(output_file,\" 0x%lx\");\n    }\n  }\n  fputc(10,output_file);\n  return;\n}\n\n",
            "current_name": "format_and_print_file_info_00102d2f",
            "entrypoint": "0x00102d2f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d2f": "format_and_print_file_info_00102d2f",
                "__format": "format_string",
                "bVar1": "byte_value",
                "bfd_close": "close_file",
                "bfd_set_archive_head": "set_archive_flag",
                "cStack0000000000000016": "permission_char1",
                "cStack0000000000000017": "flag2",
                "cStack0000000000000019": "flag4",
                "cStack000000000000001a": "permission_char5",
                "cStack000000000000001b": "flag6",
                "cStack000000000000001c": "flag7",
                "cStack000000000000001d": "flag8",
                "cStack000000000000001e": "flag9",
                "cVar2": "result",
                "dcgettext": "get_localized_message",
                "dup": "duplicate_fd",
                "fprintf": "print_formatted_output",
                "fputc": "put_char",
                "fputs": "put_string",
                "free": "free_memory",
                "iVar3": "return_value",
                "in_stack_00000018": "is_readable",
                "in_stack_00000070": "file_size",
                "in_stack_00000080": "file_size",
                "sprintf": "format_string_into_buffer",
                "stack0x00000020": "time_error_message",
                "uStack0000000000000015": "file_type",
                "uStack000000000000001f": "flag",
                "uStack0000000000000068": "file_mode",
                "uStack000000000000006c": "file_owner",
                "uVar4": "file_permissions",
                "unaff_R12": "flag",
                "unaff_R13": "buffer",
                "unaff_R14D": "file_descriptor",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_data",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d8c": {
            "additional_data": {
                "FUN_00102d8c": {
                    "format_and_print": 1,
                    "format_and_print_data": 1,
                    "format_and_print_file_info": 1,
                    "format_and_print_time_data": 1,
                    "generate_file_metadata": 1,
                    "log_file": 1,
                    "print_file_info": 17,
                    "print_file_information": 1,
                    "print_file_metadata": 2,
                    "print_file_permissions": 3,
                    "print_permissions": 1
                },
                "__c": {
                    "character": 1
                },
                "__format": {
                    "corrupt_time_data": 2,
                    "corrupt_time_data_format": 1,
                    "corrupt_time_data_message": 1,
                    "corrupt_time_format": 1,
                    "corrupt_time_string": 1,
                    "corrupted_time_format": 1,
                    "error_format": 2,
                    "error_message": 8,
                    "error_msg": 5,
                    "error_string": 1,
                    "time_corrupt_msg": 1,
                    "time_error_msg": 1,
                    "time_format": 1
                },
                "__s": {
                    "string": 1
                },
                "__stream": {
                    "file": 1,
                    "file_stream": 1
                },
                "__streamOutput": {
                    "output_stream": 1
                },
                "cStack0000000000000015": {
                    "permission_group": 1
                },
                "cStack0000000000000016": {
                    "bit0_indicator": 1,
                    "execute_permission": 1,
                    "flag1": 1,
                    "flag_a": 2,
                    "perm_other_read": 1,
                    "perm_owner_read_char": 1,
                    "permission1": 1,
                    "permission_bit_8": 1,
                    "permission_char1": 4,
                    "permission_char2": 1,
                    "permission_symbol1": 2,
                    "read_permission": 2,
                    "read_permission_char": 1,
                    "symbol1": 2,
                    "symbol_f": 1,
                    "user_read": 2,
                    "user_read_permission": 2
                },
                "cStack0000000000000017": {
                    "bit1_indicator": 1,
                    "flag2": 1,
                    "flag_b": 2,
                    "perm_other_write": 1,
                    "perm_owner_write_char": 1,
                    "permission2": 1,
                    "permission_bit_7": 1,
                    "permission_char2": 4,
                    "permission_char3": 1,
                    "permission_symbol2": 2,
                    "symbol2": 2,
                    "symbol_l": 1,
                    "user_write": 2,
                    "user_write_permission": 2,
                    "write_permission": 3,
                    "write_permission_char": 1
                },
                "cStack0000000000000019": {
                    "bit3_indicator": 1,
                    "execute_permission": 1,
                    "execute_permission2": 1,
                    "flag4": 1,
                    "flag_d": 2,
                    "group_read": 2,
                    "group_read_permission": 2,
                    "perm_group_read_char": 1,
                    "permission3": 1,
                    "permission_char3": 2,
                    "permission_char4": 3,
                    "permission_symbol4": 2,
                    "read_permission": 1,
                    "symbol4": 2,
                    "symbol_r": 1
                },
                "cStack000000000000001a": {
                    "bit4_indicator": 1,
                    "flag5": 1,
                    "flag_e": 2,
                    "group_write": 2,
                    "group_write_permission": 2,
                    "perm_group_write_char": 1,
                    "permission4": 1,
                    "permission_char4": 2,
                    "permission_char5": 3,
                    "permission_symbol5": 2,
                    "read_permission": 1,
                    "symbol5": 2,
                    "symbol_w": 1,
                    "write_permission": 1,
                    "write_permission2": 1
                },
                "cStack000000000000001b": {
                    "bit5_indicator": 1,
                    "execute_permission": 1,
                    "flag6": 1,
                    "flag_f": 2,
                    "group_execute": 2,
                    "group_execute_permission": 1,
                    "other_read_permission": 1,
                    "perm_group_write": 1,
                    "perm_other_read_char": 1,
                    "permission5": 1,
                    "permission_bit_4": 1,
                    "permission_char5": 2,
                    "permission_char6": 3,
                    "permission_symbol6": 2,
                    "read_permission2": 1,
                    "setuid_permission_char": 1,
                    "symbol6": 2,
                    "symbol_x": 1,
                    "write_permission": 1
                },
                "cStack000000000000001c": {
                    "bit6_indicator": 1,
                    "execute_permission": 1,
                    "execute_permission3": 1,
                    "flag7": 1,
                    "flag_g": 2,
                    "other_read": 2,
                    "other_read_permission": 1,
                    "other_write_permission": 1,
                    "perm_other_write_char": 1,
                    "permission6": 1,
                    "permission_char6": 2,
                    "permission_char7": 3,
                    "permission_symbol7": 2,
                    "read_permission": 1,
                    "setgid_permission_char": 1,
                    "symbol7": 2,
                    "symbol_t": 1
                },
                "cStack000000000000001d": {
                    "bit7_indicator": 1,
                    "flag8": 1,
                    "flag_h": 2,
                    "other_write": 2,
                    "other_write_permission": 1,
                    "perm_other_execute_char": 1,
                    "permission7": 1,
                    "permission_char7": 2,
                    "permission_char8": 3,
                    "permission_symbol8": 2,
                    "read_permission": 1,
                    "set_user_id": 1,
                    "symbol8": 2,
                    "symbol_u": 1,
                    "write_permission": 1,
                    "write_permission3": 1
                },
                "cStack000000000000001e": {
                    "bit8_indicator": 1,
                    "execute_permission": 1,
                    "flag9": 1,
                    "flag_i": 2,
                    "other_execute": 2,
                    "other_execute_permission": 1,
                    "perm_other_execute": 1,
                    "permission8": 1,
                    "permission_bit_1": 1,
                    "permission_char8": 2,
                    "permission_char9": 3,
                    "permission_symbol9": 2,
                    "read_permission3": 1,
                    "set_group_id": 1,
                    "setuid_bit_char": 1,
                    "sticky_permission_char": 1,
                    "symbol9": 2,
                    "symbol_g": 1,
                    "write_permission": 1
                },
                "cStack000000000000001f": {
                    "execute_permission": 1,
                    "file_type_extension": 1,
                    "flag_j": 1,
                    "formatting_flag": 1,
                    "newline_char": 1,
                    "null_char": 1,
                    "padding_char": 1,
                    "permission_char10": 1
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "get_string": 1,
                    "get_translated_string": 1,
                    "get_translated_text": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_to_output": 1,
                    "write_formatted_output": 1,
                    "write_to_file": 1
                },
                "fputc": {
                    "print_char": 1,
                    "put_char_to_file": 1,
                    "write_char": 1,
                    "write_character": 1
                },
                "fputs": {
                    "print_string": 1,
                    "put_string_to_file": 1,
                    "write_string": 2
                },
                "param_19": {
                    "file_mode": 7,
                    "file_modes": 1,
                    "file_permission": 3,
                    "file_permissions": 12,
                    "file_type": 1,
                    "flags": 1,
                    "permission_flags": 1,
                    "permissions": 4
                },
                "param_20": {
                    "file_count": 1,
                    "file_size": 20,
                    "file_size_2": 1,
                    "file_timestamp": 1,
                    "filesize": 1,
                    "group_id": 1,
                    "milliseconds": 1,
                    "param_20": 1,
                    "timestamp": 1,
                    "total_size": 1,
                    "value2": 1
                },
                "param_22": {
                    "address": 3,
                    "date_time": 1,
                    "file_address": 5,
                    "file_id": 1,
                    "file_pointer": 1,
                    "file_size": 2,
                    "file_size_3": 1,
                    "file_timestamp": 1,
                    "hex_address": 1,
                    "modification_time": 1,
                    "mtime": 1,
                    "time_modified": 1,
                    "timestamp": 10,
                    "value3": 1
                },
                "param_9": {
                    "bit2_indicator": 1,
                    "buffer1": 1,
                    "c_stack16": 1,
                    "execute_permission": 1,
                    "execute_permission_char": 1,
                    "file_permission": 2,
                    "first_permission": 1,
                    "flag_c": 2,
                    "other_permissions": 1,
                    "param9": 1,
                    "perm_readable": 1,
                    "permission_bit_6": 1,
                    "permission_char": 2,
                    "permission_char3": 2,
                    "permission_flag_f": 1,
                    "permission_symbol3": 2,
                    "permissions": 1,
                    "read_permission": 1,
                    "symbol3": 2,
                    "user_execute": 2,
                    "user_execute_permission": 1,
                    "user_permission": 1,
                    "user_permission_flag": 1
                },
                "sprintf": {
                    "format_into_string": 1,
                    "format_output": 1,
                    "format_string": 2
                },
                "stack0x00000020": {
                    "formatted_time": 1,
                    "time_buffer": 1,
                    "time_error_msg": 1
                },
                "uStack0000000000000015": {
                    "default_permission_char": 1,
                    "file_permission": 1,
                    "file_permission_flag": 1,
                    "file_symbol": 1,
                    "file_type": 7,
                    "file_type_char": 2,
                    "file_type_indicator": 2,
                    "permission_char1": 1,
                    "permission_symbol": 1
                },
                "uStack000000000000001f": {
                    "additional_flag": 1,
                    "append_format": 1,
                    "flag": 1,
                    "flag10": 1,
                    "is_executable_char": 1,
                    "is_extra_flag_set": 1,
                    "is_hex_symbol": 1,
                    "is_octal": 1,
                    "print_hex_flag": 1,
                    "upper_bit_indicator": 1
                },
                "uStack000000000000006c": {
                    "block_size": 1,
                    "file_size": 4,
                    "file_size_1": 1,
                    "inode": 1,
                    "inode_number": 1,
                    "major_device_number": 1,
                    "num_links": 1,
                    "seconds": 1,
                    "uid": 1,
                    "user_id": 4,
                    "value1": 1
                },
                "uVar1": {
                    "file_permission": 2,
                    "file_permission_bits": 1,
                    "file_permissions": 1,
                    "file_type": 14,
                    "file_type_bits": 1,
                    "permission": 1,
                    "permission_bits": 1,
                    "permission_check": 1,
                    "permission_flag": 1,
                    "permission_flags": 2,
                    "permission_type": 2
                },
                "unaff_R12B": {
                    "additional_info": 1,
                    "extra_flag": 1,
                    "flag": 6,
                    "has_address": 1,
                    "hex_address_flag": 1,
                    "is_executable": 2,
                    "is_extra_info_needed": 1,
                    "is_flag_set": 1,
                    "is_hex": 6,
                    "is_hexadecimal": 2,
                    "is_pointer_valid": 1,
                    "is_symbolic_link": 1,
                    "is_verbose": 1,
                    "needs_formatting": 1,
                    "print_hex": 2,
                    "print_hex_values": 1,
                    "print_hexadecimal": 1,
                    "should_print_hex_offset": 1
                },
                "unaff_RBP": {
                    "file": 3,
                    "file_pointer": 4,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "output_file": 21,
                    "output_file_ptr": 1
                },
                "unaff_RBX": {
                    "data": 1,
                    "error_messages": 1,
                    "error_msg_ptr": 1,
                    "file_content": 7,
                    "file_content_address": 1,
                    "file_contents": 3,
                    "file_data": 9,
                    "file_info": 2,
                    "file_lines": 1,
                    "file_name": 1,
                    "file_permissions": 1,
                    "log_message": 1,
                    "output_string": 1,
                    "strings": 1
                }
            },
            "called": [
                "fputc",
                "fputs",
                "fprintf",
                "dcgettext",
                "sprintf"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\nvoid format_and_print_file_info_00102d8c(void)\n\n{\n  char *error_message;\n  uint file_type;\n  char **file_data;\n  FILE *output_file;\n  char flag;\n  undefined file_type;\n  char permission_char1;\n  char permission_char2;\n  char symbol3;\n  char permission_char4;\n  char permission_char5;\n  char permission_char6;\n  char permission_char7;\n  char permission_char8;\n  char permission_char9;\n  undefined additional_flag;\n  uint file_permissions;\n  uint user_id;\n  uint file_size;\n  undefined8 timestamp;\n  \n  error_message = (char *)dcgettext(0,\"<time data corrupt>\",5);\n  sprintf(&time_error_msg,error_message);\n  file_type = file_permissions & 0xf000;\n  if (file_type == 0x4000) {\n    file_type = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_type = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_type = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_type = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_type = 0x73;\n  }\n  else {\n    file_type = 0x70;\n    if (file_type != 0x1000) {\n      file_type = 0x2d;\n    }\n  }\n  permission_char1 = (-((file_permissions & 0x100) == 0) & 0xbbU) + 0x72;\n  permission_char2 = (-((file_permissions & 0x80) == 0) & 0xb6U) + 0x77;\n  symbol3 = (-((file_permissions & 0x40) == 0) & 0xb5U) + 0x78;\n  permission_char4 = (-((file_permissions & 0x20) == 0) & 0xbbU) + 0x72;\n  permission_char5 = (-((file_permissions & 0x10) == 0) & 0xb6U) + 0x77;\n  permission_char6 = (-((file_permissions & 8) == 0) & 0xb5U) + 0x78;\n  permission_char7 = (-((file_permissions & 4) == 0) & 0xbbU) + 0x72;\n  permission_char8 = (-((file_permissions & 2) == 0) & 0xb6U) + 0x77;\n  permission_char9 = (-((file_permissions & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_permissions & 0x800) != 0) {\n    if (symbol3 == 'x') {\n      symbol3 = 's';\n    }\n    else {\n      symbol3 = 'S';\n    }\n  }\n  if ((file_permissions & 0x400) != 0) {\n    if (permission_char6 == 'x') {\n      permission_char6 = 's';\n    }\n    else {\n      permission_char6 = 'S';\n    }\n  }\n  if ((file_permissions & 0x200) != 0) {\n    if (permission_char9 == 'x') {\n      permission_char9 = 't';\n    }\n    else {\n      permission_char9 = 'T';\n    }\n  }\n  additional_flag = 0;\n  fprintf(output_file,\"%s %ld/%ld %6lu %s \",&stack0x00000016,(ulong)user_id,\n          (ulong)file_size,timestamp,&time_error_msg,(ulong)file_permissions);\n  fputs(*file_data,output_file);\n  if (flag != '\\0') {\n    if ((*(byte *)((long)file_data + 0x49) & 0x10) == 0) {\n      if (file_data[0xb] != (char *)0x0) {\n        fprintf(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_data[0xc] != (char *)0x0) {\n      fprintf(output_file,\" 0x%lx\");\n    }\n  }\n  fputc(10,output_file);\n  return;\n}\n\n",
            "current_name": "format_and_print_file_info_00102d8c",
            "entrypoint": "0x00102d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d8c": "format_and_print_file_info_00102d8c",
                "__format": "error_message",
                "cStack0000000000000016": "permission_char1",
                "cStack0000000000000017": "permission_char2",
                "cStack0000000000000019": "permission_char4",
                "cStack000000000000001a": "permission_char5",
                "cStack000000000000001b": "permission_char6",
                "cStack000000000000001c": "permission_char7",
                "cStack000000000000001d": "permission_char8",
                "cStack000000000000001e": "permission_char9",
                "dcgettext": "get_translated_text",
                "fprintf": "write_to_file",
                "fputc": "put_char_to_file",
                "fputs": "write_string",
                "param_19": "file_permissions",
                "param_20": "file_size",
                "param_22": "timestamp",
                "param_9": "symbol3",
                "sprintf": "format_string",
                "stack0x00000020": "time_error_msg",
                "uStack0000000000000015": "file_type",
                "uStack000000000000001f": "additional_flag",
                "uStack000000000000006c": "user_id",
                "uVar1": "file_type",
                "unaff_R12B": "flag",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e57": {
            "additional_data": {
                "DAT_0010d60c": {
                    "condition_check": 1,
                    "is_concatenated_valid": 1,
                    "is_writable": 1
                },
                "DAT_0010d618": {
                    "concatenated_string": 1,
                    "file_path": 1,
                    "filename": 1
                },
                "FUN_00102e57": {
                    "create_and_write_to_file": 1,
                    "process_file": 1,
                    "save_to_file": 2,
                    "write_file": 2,
                    "write_to_file": 25
                },
                "concat": {
                    "combine_strings": 6,
                    "concatenate_strings": 11,
                    "create_concatenated_string": 1,
                    "create_concatenation": 1,
                    "create_path": 1,
                    "get_string_to_write": 1,
                    "join_strings": 2
                },
                "pFVar1": {
                    "file": 1,
                    "file_handle": 1,
                    "file_pointer": 23,
                    "file_ptr": 2
                }
            },
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00105a68"
            ],
            "code": "\nvoid create_and_write_to_file_00102e57(void)\n\n{\n  FILE *file_pointer;\n  \n  DAT_0010d618 = (char *)concatenate_strings();\n  if (DAT_0010d60c != 0) {\n    printf(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = fopen(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  perror(DAT_0010d618);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "create_and_write_to_file_00102e57",
            "entrypoint": "0x00102e57",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e57": "create_and_write_to_file_00102e57",
                "concat": "concatenate_strings",
                "pFVar1": "file_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e6f": {
            "additional_data": {
                "DAT_00108260": {
                    "default_file_name": 1
                },
                "DAT_0010d5e8": {
                    "base_directory": 1,
                    "input_file_path": 1,
                    "input_path": 1,
                    "source_dir": 1
                },
                "DAT_0010d60c": {
                    "enable_log": 1,
                    "flag": 1,
                    "is_verbose": 2
                },
                "DAT_0010d618": {
                    "output_file_path": 3,
                    "output_path": 1
                },
                "FUN_00102e6f": {
                    "create_output_file": 1,
                    "extract_archive_file": 1,
                    "extract_archive_member": 2,
                    "extract_file_from_binary": 1,
                    "extract_file_path": 7,
                    "process_file": 2,
                    "process_file_path": 11,
                    "process_file_paths": 2,
                    "process_output_file": 1,
                    "process_output_path": 2,
                    "process_path": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "in_RAX": {
                    "curr_char": 1,
                    "current_char": 2,
                    "current_character": 1,
                    "current_path": 5,
                    "file_path": 16,
                    "input_path": 3,
                    "path": 3
                },
                "lbasename": {
                    "get_output_filename": 1
                },
                "pFVar4": {
                    "archive_file": 1,
                    "file": 5,
                    "file_handle": 2,
                    "file_pointer": 18,
                    "file_ptr": 4,
                    "output_file": 1
                },
                "pcVar1": {
                    "archive_path": 1,
                    "base_dir": 4,
                    "base_directory": 7,
                    "base_path": 13,
                    "current_directory": 2,
                    "current_path": 1,
                    "previous_path": 1
                },
                "pcVar6": {
                    "curr_char_pointer": 1,
                    "current_char": 7,
                    "current_dir": 4,
                    "current_directory": 2,
                    "current_path": 6,
                    "file_name": 2,
                    "filename": 1,
                    "next_slash": 1,
                    "path_iterator": 2,
                    "sub_path": 1,
                    "temp": 1,
                    "temp_path": 2,
                    "temp_pointer": 1
                },
                "sVar5": {
                    "base_dir_length": 4,
                    "base_directory_length": 6,
                    "base_path_len": 1,
                    "base_path_length": 7,
                    "current_directory_length": 1,
                    "directory_length": 1,
                    "length": 4,
                    "path_length": 6
                },
                "uVar2": {
                    "alternative_path": 1,
                    "base_name": 4,
                    "base_path": 1,
                    "base_var1": 1,
                    "basename": 1,
                    "basename_result": 1,
                    "last_dir_name": 1,
                    "new_base_path": 1,
                    "new_file_name": 2,
                    "new_file_path": 3,
                    "new_path": 5,
                    "output_file_name": 1,
                    "output_path": 1,
                    "temp_path": 1,
                    "temporary_path": 1
                },
                "uVar3": {
                    "base_var2": 1,
                    "error_message": 22,
                    "error_msg": 1,
                    "error_string": 1
                }
            },
            "called": [
                "FUN_00102e6f",
                "FUN_00107920",
                "FUN_00105a68",
                "dcgettext",
                "lbasename"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid process_file_path_00102e6f(void)\n\n{\n  char *base_path;\n  char *file_path;\n  undefined8 new_path;\n  undefined8 error_message;\n  FILE *file_pointer;\n  size_t base_path_length;\n  char *current_char;\n  \n  base_path = DAT_0010d5e8;\n  do {\n    file_path = file_path + 1;\n    while (*file_path != '/') {\n      if (*file_path == '\\0') {\n        if ((DAT_0010d5e8 != (char *)0x0) && (base_path_length = strlen(DAT_0010d5e8), base_path_length != 0)) {\n          if (base_path[base_path_length - 1] == '/') {\n            DAT_0010d618 = (char *)concat(base_path,DAT_0010d618,0);\n          }\n          else {\n            DAT_0010d618 = (char *)concat(base_path,&DAT_00108260,DAT_0010d618,0);\n          }\n        }\n        if (DAT_0010d60c != 0) {\n          printf(\"x - %s\\n\",DAT_0010d618);\n        }\n        file_pointer = fopen(DAT_0010d618,\"w\");\n        if (file_pointer == (FILE *)0x0) {\n          perror(DAT_0010d618);\n                    \n          xexit(1);\n        }\n        return;\n      }\n      current_char = file_path;\n      if ((*file_path == '.') && (current_char = file_path + 1, file_path[1] == '.')) {\n        current_char = file_path + 2;\n        if ((file_path[2] == '/') || (file_path[2] == '\\0')) {\n          new_path = lbasename();\n          base_path = DAT_0010d618;\n          error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\"\n                            ,5);\n          FUN_00107920(error_message,base_path,new_path);\n          DAT_0010d618 = (char *)new_path;\n          FUN_00105a68();\n          return;\n        }\n      }\n      for (; (file_path = current_char, *current_char != '\\0' && (*current_char != '/')); current_char = current_char + 1) {\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_file_path_00102e6f",
            "entrypoint": "0x00102e6f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e6f": "process_file_path_00102e6f",
                "dcgettext": "get_error_message",
                "in_RAX": "file_path",
                "lbasename": "get_output_filename",
                "pFVar4": "file_pointer",
                "pcVar1": "base_path",
                "pcVar6": "current_char",
                "sVar5": "base_path_length",
                "uVar2": "new_path",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f08": {
            "additional_data": {
                "FUN_00102f08": {
                    "print_and_assign": 3,
                    "print_and_assign_data": 1,
                    "print_and_assign_string": 1,
                    "print_and_assign_value": 2,
                    "print_and_assign_values": 1,
                    "print_and_exchange_values": 1,
                    "print_and_modify": 3,
                    "print_and_modify_data": 4,
                    "print_and_modify_values": 1,
                    "print_and_set_variable": 1,
                    "print_and_store": 1,
                    "print_and_swap": 3,
                    "print_and_swap_data": 1,
                    "print_and_swap_pointers": 1,
                    "print_and_swap_strings": 1,
                    "print_and_update": 4,
                    "print_and_update_array_element": 1,
                    "print_and_update_data": 1
                },
                "unaff_R12": {
                    "auxiliary_ptr": 1,
                    "data_address": 1,
                    "destination_ptr": 3,
                    "message_ptr": 1,
                    "new_data_ptr": 1,
                    "new_string_pointer": 1,
                    "new_string_ptr": 1,
                    "new_value_pointer": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "pointer_address": 1,
                    "pointer_ptr": 1,
                    "ptr_to_data": 1,
                    "ptr_to_ptr": 1,
                    "string_pointer": 1,
                    "string_ptr": 2,
                    "target_data": 1,
                    "target_pointer": 1,
                    "target_ptr": 1,
                    "temp_ptr": 3,
                    "value_pointer": 2,
                    "value_ptr": 4
                },
                "unaff_RBX": {
                    "array_ptr": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 5,
                    "input_string": 1,
                    "message_pointer": 1,
                    "message_ptr": 4,
                    "original_string_pointer": 1,
                    "str_ptr": 1,
                    "string_address": 1,
                    "string_pointer": 2,
                    "string_ptr": 9,
                    "text_address": 1,
                    "values_array_pointer": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00105af0"
            ],
            "code": "\nundefined8 print_and_modify_data_00102f08(void)\n\n{\n  undefined8 *string_ptr;\n  undefined8 *value_ptr;\n  \n  printf(\"a - %s\\n\",*string_ptr);\n  string_ptr[0x1e] = *value_ptr;\n  *value_ptr = string_ptr;\n  return 1;\n}\n\n",
            "current_name": "print_and_modify_data_00102f08",
            "entrypoint": "0x00102f08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f08": "print_and_modify_data_00102f08",
                "unaff_R12": "value_ptr",
                "unaff_RBX": "string_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f1e": {
            "additional_data": {
                "FUN_00102f1e": {
                    "copy_and_delete_file": 1,
                    "copy_and_remove_file": 3,
                    "copy_and_unlink_file": 3,
                    "copy_file": 1,
                    "copy_file_and_delete": 4,
                    "copy_file_and_handle_error": 3,
                    "copy_file_and_remove": 4,
                    "copy_file_and_unlink": 12
                },
                "FUN___errno_location": {
                    "get_error_code": 1
                },
                "FUN_dcgettext": {
                    "get_error_message": 1
                },
                "FUN_strerror": {
                    "get_error_string": 1
                },
                "FUN_unlink": {
                    "delete_file": 1
                },
                "VAR_piVar1": {
                    "error_code": 1
                },
                "VAR_unaff_R12": {
                    "filename": 1
                },
                "VAR_unaff_RBP": {
                    "file_size": 1
                },
                "VAR_unaff_retaddr": {
                    "return_address": 1
                },
                "__errno_location": {
                    "get_errno_location": 4
                },
                "auVar3": {
                    "result": 1,
                    "ret_value": 1,
                    "return_value": 6
                },
                "dcgettext": {
                    "get_copy_error_message": 1,
                    "get_error_message": 3
                },
                "piVar1": {
                    "err_location": 1,
                    "errno_location": 3,
                    "errno_ptr": 2,
                    "error_code_ptr": 2,
                    "error_num_ptr": 1,
                    "error_number": 1,
                    "error_number_ptr": 1
                },
                "strerror": {
                    "get_error_string": 4
                },
                "uVar2": {
                    "error_message": 7,
                    "error_msg": 1,
                    "error_string": 3
                },
                "unaff_R12": {
                    "file_name": 9,
                    "file_path": 14,
                    "filename": 3
                },
                "unaff_RBP": {
                    "file_length": 1,
                    "file_size": 25
                },
                "unaff_retaddr": {
                    "return_address": 23,
                    "return_value": 1
                },
                "unlink": {
                    "delete_file": 2,
                    "remove_file": 2
                }
            },
            "called": [
                "FUN_00107920",
                "dcgettext",
                "unlink",
                "__errno_location",
                "strerror"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nundefined  [16] copy_and_unlink_file_00102f1e(void)\n\n{\n  int *errno_location;\n  undefined8 error_message;\n  ulong file_size;\n  char *file_path;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  errno_location = __errno_location();\n  strerror(*errno_location);\n  error_message = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n  FUN_00107920(error_message);\n  delete_file(file_path);\n  return_value._0_8_ = file_size & 0xffffffff;\n  return_value._8_8_ = return_address;\n  return return_value;\n}\n\n",
            "current_name": "copy_and_unlink_file_00102f1e",
            "entrypoint": "0x00102f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f1e": "copy_and_unlink_file_00102f1e",
                "__errno_location": "get_errno_location",
                "auVar3": "return_value",
                "dcgettext": "get_error_message",
                "piVar1": "errno_location",
                "strerror": "get_error_string",
                "uVar2": "error_message",
                "unaff_R12": "file_path",
                "unaff_RBP": "file_size",
                "unaff_retaddr": "return_address",
                "unlink": "delete_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f55": {
            "additional_data": {
                "FUN_00102f55": {
                    "close_and_reset_errno": 1,
                    "close_and_restore_error": 1,
                    "close_and_return_error": 2,
                    "close_and_set_errno": 5,
                    "close_and_set_error_message": 1,
                    "close_file": 7,
                    "close_file_and_handle_errors": 1,
                    "close_file_and_reset_error": 1,
                    "close_file_and_restore_errno": 1,
                    "close_file_and_return_error": 2,
                    "close_file_and_set_errno": 5,
                    "close_file_and_set_error": 2,
                    "close_file_and_set_error_code": 1,
                    "close_file_descriptor": 1
                },
                "__errno_location": {
                    "get_errno_address": 1,
                    "get_errno_location": 2
                },
                "close": {
                    "close_file": 1,
                    "close_file_descriptor": 2
                },
                "iVar1": {
                    "errno_value": 1,
                    "original_error": 1,
                    "original_error_value": 1,
                    "previous_errno": 2,
                    "saved_errno": 1
                },
                "piVar2": {
                    "errno_address": 1,
                    "errno_location": 3,
                    "errno_pointer": 1,
                    "errno_ptr": 2,
                    "error_location_ptr": 1,
                    "error_pointer": 2
                },
                "unaff_R12D": {
                    "file_descriptor": 31
                }
            },
            "called": [
                "__errno_location",
                "close"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\nundefined8 close_file_and_set_errno_00102f55(void)\n\n{\n  int previous_errno;\n  int *errno_location;\n  int file_descriptor;\n  \n  errno_location = __errno_location();\n  previous_errno = *errno_location;\n  close_file_descriptor(file_descriptor);\n  *errno_location = previous_errno;\n  return 0xffffffff;\n}\n\n",
            "current_name": "close_file_and_set_errno_00102f55",
            "entrypoint": "0x00102f55",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f55": "close_file_and_set_errno_00102f55",
                "__errno_location": "get_errno_location",
                "close": "close_file_descriptor",
                "iVar1": "previous_errno",
                "piVar2": "errno_location",
                "unaff_R12D": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f96": {
            "additional_data": {
                "FUN_00102f96": {
                    "handle_error": 2,
                    "print_error": 4,
                    "print_error_message": 25
                },
                "__format": {
                    "error_message": 1,
                    "format": 1,
                    "format_string": 3
                },
                "__stream": {
                    "output_file": 1,
                    "output_stream": 3,
                    "stream": 1
                },
                "uVar1": {
                    "error_description": 3,
                    "error_message": 15,
                    "error_string": 1,
                    "error_text": 1
                },
                "unaff_RBX": {
                    "error_cause": 1,
                    "error_code": 16,
                    "error_condition": 1,
                    "error_flag": 12,
                    "file_size": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "fflush",
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00107c20"
            ],
            "code": "\n\n\nvoid print_error_message_00102f96(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010d660);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010d660,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102f96",
            "entrypoint": "0x00102f96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f96": "print_error_message_00102f96",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd7": {
            "additional_data": {
                "FUN_00102fd7": {
                    "display_time_error_message": 1,
                    "print_cannot_set_time_error": 2,
                    "print_error_message": 3,
                    "print_set_time_error_message": 1,
                    "print_time_error_message": 1,
                    "set_time_and_error": 1,
                    "set_time_error": 8,
                    "set_time_error_handler": 7,
                    "set_time_error_handling": 1,
                    "set_time_error_message": 5
                },
                "FUN_00107920": {
                    "print_error_message": 2
                },
                "__errno_location": {
                    "get_errno_location": 4,
                    "get_error_number": 5
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_error_message_translation": 1,
                    "get_localized_error": 1,
                    "get_localized_message": 4,
                    "get_translated_error_message": 1,
                    "get_translated_string": 1,
                    "translate_error_message": 5
                },
                "param_1": {
                    "format_string": 1
                },
                "param_2": {
                    "error_string": 1
                },
                "piVar1": {
                    "errno_location_ptr": 1,
                    "errno_pointer": 3,
                    "errno_ptr": 6,
                    "error_location": 2,
                    "error_num": 1,
                    "error_number": 8,
                    "error_number_ptr": 6
                },
                "strerror": {
                    "get_error_message": 5,
                    "get_error_string": 9
                },
                "uVar2": {
                    "error_message": 17,
                    "error_msg": 1,
                    "error_string": 4,
                    "localized_error_msg": 1,
                    "translated_error": 3,
                    "translated_error_message": 3,
                    "translated_string": 1
                }
            },
            "called": [
                "FUN_00107920",
                "dcgettext",
                "strerror",
                "__errno_location"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\nvoid set_time_error_handler_00102fd7(void)\n\n{\n  int *error_number;\n  undefined8 error_message;\n  \n  error_number = __errno_location();\n  strerror(*error_number);\n  error_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n  FUN_00107920(error_message);\n  return;\n}\n\n",
            "current_name": "set_time_error_handler_00102fd7",
            "entrypoint": "0x00102fd7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd7": "set_time_error_handler_00102fd7",
                "__errno_location": "get_error_number",
                "dcgettext": "translate_error_message",
                "piVar1": "error_number",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010300e": {
            "additional_data": {
                "DAT_0010a240": {
                    "array7": 1
                },
                "DAT_0010a440": {
                    "array4": 1
                },
                "DAT_0010a640": {
                    "array3": 1
                },
                "DAT_0010a7c0": {
                    "array6": 1
                },
                "DAT_0010a800": {
                    "array5": 1
                },
                "DAT_0010a980": {
                    "array1": 1
                },
                "DAT_0010ab00": {
                    "array2": 1
                },
                "DAT_0010d5b0": {
                    "end_byte_pointer": 1
                },
                "DAT_0010d5b8": {
                    "matched_byte_pointer": 1,
                    "resulting_matching_byte": 1
                },
                "DAT_0010d5c0": {
                    "matched_byte_index": 1,
                    "resulting_matching_index": 1
                },
                "DAT_0010d5c8": {
                    "start_byte_pointer": 1
                },
                "DAT_0010d5d0": {
                    "start_index": 1
                },
                "FUN_0010300e": {
                    "find_and_update_index": 1,
                    "find_match": 2,
                    "find_match_and_set_data": 1,
                    "find_match_in_data": 1,
                    "find_matched_entry": 1,
                    "find_matching_data": 1,
                    "find_matching_index": 2,
                    "find_matching_indexes": 1,
                    "find_matching_indices": 2,
                    "find_matching_pattern": 1,
                    "find_matching_sequence": 1,
                    "find_matching_value": 2,
                    "find_matching_values": 4,
                    "find_modified_values": 1,
                    "find_relevant_data": 1,
                    "find_target_data": 1,
                    "identify_target_byte_pattern": 1,
                    "reverse_and_find_match": 2,
                    "reverse_lookup": 1
                },
                "bVar1": {
                    "found": 1,
                    "found_match": 11,
                    "found_matching": 1,
                    "found_relevant_data": 1,
                    "found_target": 1,
                    "has_match": 7,
                    "has_matched": 1,
                    "has_matching_value": 1,
                    "has_selection": 1,
                    "has_target_pattern": 1,
                    "is_found": 1,
                    "is_match_found": 2,
                    "is_modified_found": 1
                },
                "bVar4": {
                    "additional_value": 1,
                    "b_var": 1,
                    "byte_modifier": 1,
                    "calculation_result": 1,
                    "data_offset": 1,
                    "lookup_byte": 1,
                    "lookup_result": 4,
                    "lookup_value": 5,
                    "matching_byte": 1,
                    "matching_value": 2,
                    "modified_byte": 1,
                    "modifier": 1,
                    "next_byte": 1,
                    "offset": 3,
                    "pattern_byte": 1,
                    "replacement_value": 1,
                    "temp_byte": 2,
                    "value": 2
                },
                "iVar2": {
                    "current_byte_index": 1,
                    "current_data_index": 2,
                    "current_index": 22,
                    "current_offset": 2,
                    "current_value": 3
                },
                "in_R10D": {
                    "current_data_value": 1,
                    "found_index": 2,
                    "match_data_index": 1,
                    "match_index": 4,
                    "matched_index": 1,
                    "matched_value": 1,
                    "matching_byte_index": 2,
                    "matching_index": 10,
                    "matching_offset": 2,
                    "matching_value": 2,
                    "modified_value": 1,
                    "selected_index": 2,
                    "target_index": 2
                },
                "in_R9": {
                    "current_data_ptr": 1,
                    "first_matched_byte": 1,
                    "found_byte": 2,
                    "match_byte": 3,
                    "match_byte_pointer": 1,
                    "match_data_pointer": 1,
                    "match_position": 1,
                    "matching_byte": 8,
                    "matching_byte_address": 1,
                    "matching_byte_array": 1,
                    "matching_byte_pointer": 3,
                    "matching_pointer": 2,
                    "matching_sequence": 1,
                    "modified_byte_address": 1,
                    "selected_byte": 2,
                    "target_byte": 1,
                    "target_byte_pointer": 1
                },
                "lVar3": {
                    "calculated_index": 9,
                    "current_index": 1,
                    "lookup_index": 2,
                    "modified_index": 1,
                    "new_index": 6,
                    "new_offset": 1,
                    "next_data_index": 1,
                    "next_index": 3,
                    "offset": 1,
                    "target_index_offset": 1,
                    "temp_index": 1,
                    "updated_index": 2,
                    "updated_value": 1
                },
                "pbVar5": {
                    "byte_array": 1,
                    "byte_pointer": 1,
                    "current_byte": 23,
                    "current_byte_pointer": 1,
                    "current_data_pointer": 1,
                    "current_pointer": 1,
                    "data_pointer": 2,
                    "data_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid reverse_and_find_match_0010300e(void)\n\n{\n  bool found_match;\n  int current_index;\n  long calculated_index;\n  byte lookup_value;\n  byte *current_byte;\n  byte *matching_byte;\n  int matching_index;\n  \n  found_match = false;\n  current_index = DAT_0010d5d0;\n  for (current_byte = DAT_0010d5c8; current_byte < DAT_0010d5b0; current_byte = current_byte + 1) {\n    lookup_value = 1;\n    if (*current_byte != 0) {\n      lookup_value = (&DAT_0010ab00)[*current_byte];\n    }\n    if (*(short *)(&DAT_0010a980 + (long)current_index * 2) != 0) {\n      found_match = true;\n      matching_byte = current_byte;\n      matching_index = current_index;\n    }\n    while( true ) {\n      calculated_index = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)current_index * 2) + (uint)lookup_value);\n      if (*(short *)(&DAT_0010a440 + calculated_index * 2) == current_index) break;\n      current_index = (int)*(short *)(&DAT_0010a800 + (long)current_index * 2);\n      if (0xb0 < current_index) {\n        lookup_value = (&DAT_0010a7c0)[(int)(uint)lookup_value];\n      }\n    }\n    current_index = (int)*(short *)(&DAT_0010a240 + calculated_index * 2);\n  }\n  if (found_match) {\n    DAT_0010d5b8 = matching_byte;\n    DAT_0010d5c0 = matching_index;\n  }\n  return;\n}\n\n",
            "current_name": "reverse_and_find_match_0010300e",
            "entrypoint": "0x0010300e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010300e": "reverse_and_find_match_0010300e",
                "bVar1": "found_match",
                "bVar4": "lookup_value",
                "iVar2": "current_index",
                "in_R10D": "matching_index",
                "in_R9": "matching_byte",
                "lVar3": "calculated_index",
                "pbVar5": "current_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001030ed": {
            "additional_data": {
                "DAT_0010d588": {
                    "dereferenced_value": 1,
                    "extracted_data": 2,
                    "extracted_first_value": 1,
                    "extracted_value3": 3,
                    "first_character": 1,
                    "first_data_element": 1,
                    "first_data_value": 2,
                    "first_value": 2,
                    "function_data4": 1,
                    "function_data_value5": 1,
                    "information5": 1,
                    "pointer_value": 1,
                    "second_value": 6,
                    "value2": 1,
                    "value5": 1,
                    "value_in_data_pointer": 1
                },
                "DAT_0010d590": {
                    "data": 2,
                    "extracted_data": 2,
                    "extracted_value": 1,
                    "extracted_value2": 4,
                    "extracted_value3": 1,
                    "extracted_value_b": 1,
                    "first_value": 8,
                    "function_data3": 1,
                    "function_data_value4": 1,
                    "function_value": 1,
                    "information4": 1,
                    "readable_value": 1,
                    "value": 2,
                    "value1": 1,
                    "value4": 1
                },
                "DAT_0010d598": {
                    "data_offset": 1,
                    "data_value": 2,
                    "extracted_data": 1,
                    "extracted_value": 10,
                    "extracted_value1": 5,
                    "extracted_value_a": 1,
                    "function_data1": 1,
                    "function_data_value1": 1,
                    "function_offset": 1,
                    "information1": 1,
                    "int_value": 1,
                    "result": 1,
                    "value": 1,
                    "value1": 1
                },
                "DAT_0010d5a0": {
                    "array_index": 4,
                    "data_offset1": 1,
                    "data_pointer2": 3,
                    "data_pointer_b": 1,
                    "index": 10,
                    "offset": 5,
                    "offset1": 1,
                    "offset2": 1
                },
                "DAT_0010d5a8": {
                    "address": 1,
                    "array_pointer": 1,
                    "array_start_address": 1,
                    "base_address": 7,
                    "data_address": 1,
                    "data_address1": 1,
                    "data_array": 4,
                    "data_base_address": 1,
                    "data_block_ptr": 1,
                    "data_pointer1": 4,
                    "data_pointer_a": 1,
                    "offset1": 1,
                    "pointer_array": 1,
                    "ptr_array_base": 1
                },
                "DAT_0010d5b0": {
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 2,
                    "data_pointer2": 1,
                    "extracted_data": 2,
                    "extracted_data_pointer": 1,
                    "extracted_pointer": 3,
                    "function_data2": 1,
                    "function_data_value2": 1,
                    "information2": 1,
                    "pointer": 3,
                    "pointer_to_data": 1,
                    "pointer_to_element": 1,
                    "pointer_to_value": 1,
                    "pointer_value": 1,
                    "ptr_data": 1,
                    "ptr_value": 1,
                    "string_pointer": 1,
                    "value2": 1
                },
                "DAT_0010d5c8": {
                    "copied_pointer": 1,
                    "copy_of_pointer": 1,
                    "current_pointer": 1,
                    "current_value": 1,
                    "extracted_data": 3,
                    "extracted_data_copy": 1,
                    "final_value": 1,
                    "function_data_copy": 1,
                    "function_data_value3": 1,
                    "improved_extracted_data_pointer": 1,
                    "information3": 1,
                    "new_pointer_to_data": 1,
                    "processed_data": 1,
                    "processed_pointer": 1,
                    "readable_data": 1,
                    "result_pointer": 2,
                    "return_value": 1,
                    "stored_data": 1,
                    "target": 1,
                    "updated_data_pointer": 1,
                    "updated_pointer": 1,
                    "updated_string_pointer": 1,
                    "value3": 1
                },
                "FUN_001030ed": {
                    "extract_data": 8,
                    "extract_data_and_store": 1,
                    "extract_data_from_binary": 9,
                    "extract_function_data": 8,
                    "extract_function_information": 1,
                    "extract_important_data": 1,
                    "extract_information": 1,
                    "initialize_data": 2
                },
                "puVar1": {
                    "data_pointer": 16,
                    "extracted_data_pointer": 1,
                    "function_data": 2,
                    "function_data_ptr": 1,
                    "function_pointer": 4,
                    "p_data_pointer": 1,
                    "pointer": 2,
                    "pointer_to_data": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_001031cf",
                "FUN_00103e95"
            ],
            "code": "\nvoid extract_data_from_binary_001030ed(void)\n\n{\n  undefined8 *data_pointer;\n  \n  data_pointer = *(undefined8 **)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n  DAT_0010d598 = *(undefined4 *)((long)data_pointer + 0x1c);\n  DAT_0010d5b0 = (undefined *)data_pointer[2];\n  DAT_0010d5c8 = DAT_0010d5b0;\n  DAT_0010d590 = *data_pointer;\n  DAT_0010d588 = *DAT_0010d5b0;\n  return;\n}\n\n",
            "current_name": "extract_data_from_binary_001030ed",
            "entrypoint": "0x001030ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030ed": "extract_data_from_binary_001030ed",
                "puVar1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010312d": {
            "additional_data": {
                "0xf0": {
                    "data_offset": 1,
                    "offset": 1
                },
                "0xf8": {
                    "next_pointer_offset": 1
                },
                "DAT_0010d558": {
                    "memory": 1
                },
                "FUN_0010312d": {
                    "copy_and_swap_memory": 1,
                    "copy_and_swap_values": 1,
                    "copy_data": 23,
                    "copy_data_and_swap": 1,
                    "copy_data_to_new_location": 1,
                    "copy_memory": 2,
                    "copy_value_and_link": 1,
                    "copy_values": 1
                },
                "lVar1": {
                    "previous_source_pointer": 1,
                    "temp": 14,
                    "temp_address": 1,
                    "temp_ptr": 1,
                    "temp_var": 6,
                    "temp_var1": 1,
                    "temporary": 1
                },
                "param_1": {
                    "dest": 2,
                    "destination": 5,
                    "source": 16,
                    "source_address": 3,
                    "source_data": 2,
                    "source_data_ptr": 1,
                    "source_pointer": 1,
                    "source_ptr": 1
                },
                "param_2": {
                    "destination": 16,
                    "destination_address": 3,
                    "destination_data": 2,
                    "destination_data_ptr": 1,
                    "destination_pointer": 1,
                    "destination_ptr": 1,
                    "source": 5,
                    "src": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid copy_data_to_new_location_0010312d(long source,long destination)\n\n{\n  long temp;\n  \n  if (destination != 0) {\n    *(undefined8 *)(destination + 0xf0) = *(undefined8 *)(source + 0xf0);\n  }\n  temp = DAT_0010d558;\n  *(undefined8 *)(source + 0xf0) = *(undefined8 *)(DAT_0010d558 + 0xf8);\n  *(long *)(temp + 0xf8) = source;\n  return;\n}\n\n",
            "current_name": "copy_data_to_new_location_0010312d",
            "entrypoint": "0x0010312d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010312d": "copy_data_to_new_location_0010312d",
                "lVar1": "temp",
                "param_1": "source",
                "param_2": "destination"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010315d": {
            "additional_data": {
                "FUN_0010315d": {
                    "check_and_exit": 7,
                    "check_and_exit_if_zero": 15,
                    "check_and_exit_on_zero_data": 1,
                    "check_data_validity": 1,
                    "check_exit_condition": 3,
                    "check_exit_status": 2,
                    "check_if_initialized": 1,
                    "handle_exit": 1
                },
                "_DAT_0010d608": {
                    "error_code": 2,
                    "error_flag": 1,
                    "exit_flag": 1,
                    "global_variable": 1,
                    "some_data_variable": 1,
                    "some_global_variable": 1
                },
                "xexit": {
                    "exit": 4,
                    "exit_code": 1,
                    "exit_function": 1,
                    "exit_on_error": 1,
                    "exit_program": 7,
                    "exit_with_error": 7,
                    "perform_exit": 2,
                    "terminate_program": 2
                }
            },
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid check_and_exit_if_zero_0010315d(void)\n\n{\n  if (_DAT_0010d608 == 0) {\n                    \n    xexit(9);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_exit_if_zero_0010315d",
            "entrypoint": "0x0010315d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010315d": "check_and_exit_if_zero_0010315d",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103172": {
            "additional_data": {
                "FUN_00103172": {
                    "copy_and_modify_string": 1,
                    "copy_and_print": 1,
                    "copy_and_print_data": 1,
                    "copy_and_print_string": 5,
                    "copy_data": 1,
                    "copy_data_to_param": 1,
                    "copy_parameter_and_print": 1,
                    "copy_string_and_print": 1,
                    "extract_and_print_substring": 1,
                    "extract_data": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "reverse_and_copy": 3,
                    "reverse_and_store_data": 1,
                    "reverse_copy_and_print": 1,
                    "update_and_print": 2,
                    "update_and_print_data": 1,
                    "update_and_print_value": 2,
                    "update_data": 3,
                    "update_param_and_return": 2
                },
                "__format": {
                    "format": 1,
                    "format_string": 1
                },
                "auVar2": {
                    "auxiliary_array": 1,
                    "converted_value": 1,
                    "modified_data": 3,
                    "modified_data_array": 1,
                    "modified_value": 1,
                    "new_array": 1,
                    "new_data": 1,
                    "new_value": 1,
                    "output": 1,
                    "result": 6,
                    "result_array": 3,
                    "result_var": 1,
                    "temp_data": 1,
                    "updated_data": 2,
                    "updated_value": 7
                },
                "param_1": {
                    "data_ptr": 1,
                    "input_data": 1,
                    "input_ptr": 2,
                    "input_value": 1,
                    "old_data": 1,
                    "old_param": 2,
                    "old_ptr": 1,
                    "old_value": 1,
                    "original_string": 1,
                    "original_value": 1,
                    "source": 7,
                    "source_array": 1,
                    "source_data": 4,
                    "source_string": 6,
                    "source_string_ptr": 1
                },
                "param_2": {
                    "destination": 7,
                    "destination_array": 2,
                    "destination_data": 4,
                    "destination_string": 4,
                    "destination_string_ptr": 1,
                    "modified_value": 1,
                    "new_param": 2,
                    "new_ptr": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_ptr": 2,
                    "string_array": 1,
                    "string_ptr": 1,
                    "strings": 1,
                    "target_string": 1
                },
                "param_3": {
                    "condition": 4,
                    "copy_flag": 1,
                    "flag": 8,
                    "print_flag": 2,
                    "should_print": 16
                },
                "param_4": {
                    "additional_data": 9,
                    "additional_param": 3,
                    "additional_value": 1,
                    "custom_param": 1,
                    "custom_value": 1,
                    "data": 3,
                    "data_to_set": 1,
                    "extra_data": 3,
                    "input_data": 1,
                    "new_param_value": 1,
                    "new_value": 3,
                    "param": 1,
                    "value": 3
                },
                "uVar1": {
                    "input_value": 1,
                    "old_ptr_value": 1,
                    "old_value": 4,
                    "original_value": 1,
                    "source_string": 1,
                    "source_string_copy": 1,
                    "source_string_value": 2,
                    "source_value": 5,
                    "temp": 2,
                    "temp_string": 1,
                    "temp_value": 5,
                    "temp_var": 3,
                    "temp_variable": 1,
                    "tmp": 1,
                    "value": 1,
                    "value_to_copy": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nundefined  [16]\ncopy_string_and_print_00103172(undefined8 *source,undefined8 *destination,char should_print,undefined8 additional_data)\n\n{\n  undefined8 source_value;\n  undefined updated_value [16];\n  \n  if (should_print != '\\0') {\n    printf(\"r - %s\\n\",*destination);\n  }\n  source_value = *source;\n  destination[0x1e] = source_value;\n  updated_value._1_7_ = (undefined7)((ulong)source_value >> 8);\n  updated_value[0] = 1;\n  *source = destination;\n  updated_value._8_8_ = additional_data;\n  return updated_value;\n}\n\n",
            "current_name": "copy_string_and_print_00103172",
            "entrypoint": "0x00103172",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103172": "copy_string_and_print_00103172",
                "auVar2": "updated_value",
                "param_1": "source",
                "param_2": "destination",
                "param_3": "should_print",
                "param_4": "additional_data",
                "uVar1": "source_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031a5": {
            "additional_data": {
                "FUN_001031a5": {
                    "notify_syntax_error": 1,
                    "print_archive_script_error": 2,
                    "print_archive_script_syntax_error": 6,
                    "print_error": 1,
                    "print_error_message": 5,
                    "print_syntax_error": 12,
                    "print_syntax_error_in_archive_script": 2,
                    "print_syntax_error_message": 2
                },
                "__format": {
                    "error_format": 1,
                    "error_message": 4,
                    "error_message_format": 13,
                    "error_msg_format": 1,
                    "format_string": 12
                },
                "dcgettext": {
                    "get_translated_text": 1
                },
                "printf": {
                    "print_formatted": 1
                },
                "uVar1": {
                    "line_number": 27,
                    "updated_count": 2,
                    "updated_variable": 1
                }
            },
            "called": [
                "printf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid print_syntax_error_in_archive_script_001031a5(void)\n\n{\n  uint line_number;\n  char *error_message_format;\n  \n  line_number = DAT_0010d554 + 1;\n  error_message_format = (char *)dcgettext(0,\"Syntax error in archive script, line %d\\n\",5);\n  printf(error_message_format,(ulong)line_number);\n  return;\n}\n\n",
            "current_name": "print_syntax_error_in_archive_script_001031a5",
            "entrypoint": "0x001031a5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001031a5": "print_syntax_error_in_archive_script_001031a5",
                "__format": "error_message_format",
                "dcgettext": "get_translated_text",
                "printf": "print_formatted",
                "uVar1": "line_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031cf": {
            "additional_data": {
                "DAT_0010d5a0": {
                    "constant_variable3": 1,
                    "file_constant": 1,
                    "global_index": 1
                },
                "DAT_0010d5a8": {
                    "constant": 1,
                    "constant_variable2": 1,
                    "dat_var2": 1,
                    "data_pointer1": 1,
                    "file_data": 1,
                    "file_ptr_value": 1,
                    "global_data": 1
                },
                "FUN_001031cf": {
                    "initialize_file": 23,
                    "initialize_file_pointer": 3,
                    "initialize_file_ptr": 1,
                    "initialize_file_stream": 1,
                    "initialize_stream": 1
                },
                "LAB_00103263": {
                    "label1": 1
                },
                "_24": {
                    "terminal_flag": 1
                },
                "_2c": {
                    "flag3": 1
                },
                "_34": {
                    "flag4": 1
                },
                "_DAT_00000000": {
                    "destination_file": 1,
                    "file1": 1,
                    "flag2": 3,
                    "global_file": 1,
                    "input_file_ptr": 1
                },
                "_DAT_00000034": {
                    "flag": 1,
                    "flag1": 4,
                    "global_flag": 1,
                    "switch": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_location": 1,
                    "get_error_pointer": 1
                },
                "_flags": {
                    "file_flags": 1,
                    "flags": 3
                },
                "checkTerminal": {
                    "check_terminal": 1
                },
                "fileno": {
                    "get_fd": 2,
                    "get_file_descriptor": 1,
                    "get_stream_number": 1
                },
                "getFD": {
                    "get_fd": 1
                },
                "iVar1": {
                    "errno_val": 1,
                    "errno_value": 13,
                    "error": 5,
                    "error_code": 4,
                    "error_num": 1,
                    "error_status": 1,
                    "error_value": 2,
                    "old_errno": 1,
                    "previous_errno": 1
                },
                "iVar3": {
                    "fd": 1,
                    "file_desc": 1,
                    "file_descriptor": 18,
                    "file_no": 2,
                    "file_number": 5,
                    "fno": 1,
                    "terminal_status": 1
                },
                "initializeFile": {
                    "initialize_file": 1
                },
                "isatty": {
                    "check_terminal": 3,
                    "is_terminal": 1
                },
                "lVar5": {
                    "base_address": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "constant_variable": 1,
                    "dat_0010d5a8": 3,
                    "dat_var1": 1,
                    "data": 1,
                    "data_address": 4,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "data_segment_value": 1,
                    "data_value": 1,
                    "data_variable": 1,
                    "file_data": 1,
                    "file_handle_array": 1,
                    "file_pointer": 1,
                    "file_pointer_location": 1,
                    "file_ptr_array": 1,
                    "file_ptr_location": 1,
                    "global_var": 1,
                    "global_variable": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "file": 1,
                    "file_handle": 2,
                    "file_pointer": 13,
                    "file_ptr": 8,
                    "output": 1,
                    "output_file": 5,
                    "output_stream": 1
                },
                "param_2": {
                    "file": 4,
                    "file_pointer": 1,
                    "input": 1,
                    "input_file": 17,
                    "input_file_pointer": 1,
                    "input_stream": 1,
                    "source_file": 5,
                    "stream": 1
                },
                "param_3": {
                    "param1": 3,
                    "param3": 18,
                    "param_3": 10
                },
                "param_4": {
                    "param2": 3,
                    "param4": 18,
                    "param_4": 10
                },
                "param_5": {
                    "param3": 3,
                    "param5": 18,
                    "param_5": 8,
                    "result": 1,
                    "return_value": 1
                },
                "piVar4": {
                    "errno_loc": 1,
                    "errno_location": 9,
                    "errno_pointer": 4,
                    "errno_ptr": 11,
                    "error_code_pointer": 1,
                    "error_location": 2,
                    "error_ptr": 2
                },
                "uVar2": {
                    "is_standard_input": 1,
                    "is_terminal": 17,
                    "is_tty": 6,
                    "is_tty_value": 1,
                    "output": 1,
                    "result": 3,
                    "return_value": 1
                }
            },
            "called": [
                "isatty",
                "FUN_001030ed",
                "fileno",
                "__errno_location"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001033d6"
            ],
            "code": "\n\n\nundefined8\ninitialize_file_pointer_001031cf(FILE **file_pointer,FILE *input_file,undefined8 param3,undefined8 param4,undefined8 param5)\n\n{\n  int errno_value;\n  uint is_terminal;\n  int file_descriptor;\n  int *errno_ptr;\n  long data_address;\n  \n  errno_ptr = __errno_location();\n  data_address = DAT_0010d5a8;\n  errno_value = *errno_ptr;\n  if (file_pointer == (FILE **)0x0) {\n    _DAT_00000034 = 1;\n    _DAT_00000000 = input_file;\n    if (DAT_0010d5a8 != 0) {\nlabel1:\n      if (file_pointer == *(FILE ***)(data_address + DAT_0010d5a0 * 8)) goto LAB_0010327b;\n    }\n  }\n  else {\n    *(undefined4 *)((long)file_pointer + 0x1c) = 0;\n    *(undefined *)&file_pointer[1]->flags = 0;\n    *(undefined *)((long)&file_pointer[1]->flags + 1) = 0;\n    *(undefined4 *)(file_pointer + 5) = 1;\n    file_pointer[2] = file_pointer[1];\n    *(undefined4 *)(file_pointer + 7) = 0;\n    if (data_address != 0) {\n      if (file_pointer == *(FILE ***)(data_address + DAT_0010d5a0 * 8)) {\n        FUN_001030ed();\n      }\n      *file_pointer = input_file;\n      *(undefined4 *)((long)file_pointer + 0x34) = 1;\n      goto label1;\n    }\n    *file_pointer = input_file;\n    *(undefined4 *)((long)file_pointer + 0x34) = 1;\n  }\n  *(undefined8 *)((long)file_pointer + 0x2c) = 1;\nLAB_0010327b:\n  is_terminal = 0;\n  if (input_file != (FILE *)0x0) {\n    file_descriptor = fileno(input_file);\n    file_descriptor = isatty(file_descriptor);\n    is_terminal = (uint)(0 < file_descriptor);\n  }\n  *(uint *)((long)file_pointer + 0x24) = is_terminal;\n  *errno_ptr = errno_value;\n  return param5;\n}\n\n",
            "current_name": "initialize_file_pointer_001031cf",
            "entrypoint": "0x001031cf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001031cf": "initialize_file_pointer_001031cf",
                "LAB_00103263": "label1",
                "__errno_location": "get_error_pointer",
                "_flags": "flags",
                "fileno": "get_fd",
                "iVar1": "errno_value",
                "iVar3": "file_descriptor",
                "isatty": "check_terminal",
                "lVar5": "data_address",
                "param_1": "file_pointer",
                "param_2": "input_file",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "piVar4": "errno_ptr",
                "uVar2": "is_terminal"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001032a8": {
            "additional_data": {
                "FUN_001032a8": {
                    "decompile_and_process": 1,
                    "extract_and_print_archive_entries": 1,
                    "extract_and_print_archived_entries": 1,
                    "extract_and_print_archives": 1,
                    "extract_archive_entries": 1,
                    "extract_archived_entries": 1,
                    "extract_entries_from_archive": 4,
                    "extract_files_from_archive": 1,
                    "process_archive": 6,
                    "process_archive_entries": 8,
                    "process_archived_entries": 1,
                    "process_entries": 3,
                    "process_files": 2
                },
                "__format": {
                    "error_message": 2,
                    "error_message_format": 5,
                    "error_msg": 1,
                    "error_msg_format": 1,
                    "format_string": 20,
                    "message_format": 2
                },
                "_stderr": {
                    "error_stream": 1
                },
                "bVar3": {
                    "entry_found": 13,
                    "found": 1,
                    "found_entry": 15,
                    "is_entry_found": 1,
                    "is_found": 1
                },
                "dcgettext": {
                    "get_translation": 1
                },
                "filename_cmp": {
                    "compare_filenames": 1
                },
                "iVar5": {
                    "cmp_result": 3,
                    "compare_result": 1,
                    "comparison_result": 24,
                    "filename_comparison": 1,
                    "filename_comparison_result": 2
                },
                "lVar1": {
                    "next_entry": 29,
                    "next_entry_data": 1,
                    "next_file": 1
                },
                "lVar7": {
                    "current_archive_entry": 1,
                    "current_entry": 19,
                    "current_entry_address": 2,
                    "current_entry_in_list": 1,
                    "current_entry_offset": 1,
                    "current_entry_ptr": 4,
                    "current_file_list": 1,
                    "current_node": 1,
                    "entry_address": 1
                },
                "param_1": {
                    "archive": 8,
                    "archive_data": 4,
                    "archive_entries": 4,
                    "archive_pointer": 1,
                    "entries": 2,
                    "entry_array": 4,
                    "entry_list": 2,
                    "file_array": 1,
                    "file_entries": 2,
                    "file_list": 1,
                    "param_array": 2
                },
                "param_2": {
                    "archive_callback": 2,
                    "callback": 8,
                    "callback_fn": 1,
                    "callback_function": 3,
                    "entry_action": 1,
                    "entry_callback": 1,
                    "entry_handler": 1,
                    "entry_processor": 2,
                    "extract_callback": 3,
                    "extract_entry": 1,
                    "extract_entry_callback": 2,
                    "extract_entry_function": 1,
                    "extract_function": 1,
                    "file_action": 1,
                    "file_callback": 1,
                    "process_entry": 2
                },
                "param_3": {
                    "archive_entries": 2,
                    "archive_entry": 1,
                    "entries": 1,
                    "entry_array": 1,
                    "entry_list": 6,
                    "entry_names": 11,
                    "file_entries": 1,
                    "file_list": 1,
                    "file_name_array": 1,
                    "file_names": 2,
                    "file_paths": 2,
                    "filenames": 1,
                    "search_terms": 1
                },
                "param_4": {
                    "result": 6,
                    "return_val": 2,
                    "return_value": 23
                },
                "plVar4": {
                    "current_entry": 23,
                    "current_entry_data": 1,
                    "current_entry_ptr": 3,
                    "current_file": 1,
                    "current_node": 2,
                    "entry_pointer": 1
                },
                "plVar6": {
                    "current_entry": 1,
                    "current_entry_next": 1,
                    "next_entry": 18,
                    "next_entry_in_list": 1,
                    "next_entry_ptr": 6,
                    "next_file_list": 1,
                    "next_node": 2,
                    "previous_entry": 1
                },
                "plVar8": {
                    "prev_entry": 1,
                    "previous_entry": 19,
                    "previous_entry_address": 1,
                    "previous_entry_ptr": 7,
                    "previous_file": 1,
                    "previous_node": 2
                },
                "uVar2": {
                    "current_entry": 5,
                    "current_entry_name": 3,
                    "current_file_name": 1,
                    "current_file_path": 1,
                    "current_filename": 1,
                    "current_path": 1,
                    "entry": 1,
                    "entry_name": 13,
                    "file_entry": 1,
                    "filename": 1,
                    "formatted_entry": 1,
                    "search_term": 1,
                    "temp_value": 1
                }
            },
            "called": [
                "filename_cmp",
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined8 process_archive_entries_001032a8(long *archive,code *callback,undefined8 *entry_names,undefined8 return_value)\n\n{\n  long next_entry;\n  undefined8 entry_name;\n  bool found_entry;\n  long *current_entry;\n  int comparison_result;\n  char *format_string;\n  long *next_entry;\n  long current_entry;\n  long *previous_entry;\n  \n  current_entry = archive[0x1e];\n  if (entry_names == (undefined8 *)0x0) {\n    while (current_entry != 0) {\n      next_entry = *(long *)(current_entry + 0xf0);\n      (*callback)(current_entry,0);\n      current_entry = next_entry;\n    }\n  }\n  else {\n    do {\n      found_entry = false;\n      current_entry = (long *)archive[0x1e];\n      previous_entry = archive;\n      while (next_entry = current_entry, next_entry != (long *)0x0) {\n        if (*next_entry != 0) {\n          comparison_result = filename_cmp(*entry_names);\n          if (comparison_result == 0) {\n            found_entry = true;\n            (*callback)(next_entry,previous_entry);\n          }\n        }\n        previous_entry = next_entry;\n        current_entry = (long *)next_entry[0x1e];\n      }\n      if (!found_entry) {\n        entry_name = *entry_names;\n        format_string = (char *)dcgettext(0,\"No entry %s in archive.\\n\",5);\n        fprintf(error_stream,format_string,entry_name);\n      }\n      entry_names = (undefined8 *)entry_names[1];\n    } while (entry_names != (undefined8 *)0x0);\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_archive_entries_001032a8",
            "entrypoint": "0x001032a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001032a8": "process_archive_entries_001032a8",
                "__format": "format_string",
                "_stderr": "error_stream",
                "bVar3": "found_entry",
                "dcgettext": "get_translation",
                "filename_cmp": "compare_filenames",
                "iVar5": "comparison_result",
                "lVar1": "next_entry",
                "lVar7": "current_entry",
                "param_1": "archive",
                "param_2": "callback",
                "param_3": "entry_names",
                "param_4": "return_value",
                "plVar4": "current_entry",
                "plVar6": "next_entry",
                "plVar8": "previous_entry",
                "uVar2": "entry_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010336b": {
            "additional_data": {
                "FUN_0010336b": {
                    "print_emulation_options": 31
                },
                "param_1": {
                    "file": 4,
                    "file_pointer": 3,
                    "file_ptr": 2,
                    "file_stream": 1,
                    "output_file": 21
                },
                "pcVar1": {
                    "emulation_header": 1,
                    "emulation_option": 3,
                    "emulation_option_string": 4,
                    "emulation_options": 3,
                    "emulation_options_message": 2,
                    "emulation_options_string": 6,
                    "emulation_options_text": 2,
                    "emulation_string": 2,
                    "emulation_text": 2,
                    "message": 2,
                    "option_string": 1,
                    "options_message": 1,
                    "options_text": 2
                }
            },
            "called": [
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_0010342d"
            ],
            "code": "\nvoid print_emulation_options_0010336b(FILE *output_file)\n\n{\n  char *emulation_options_string;\n  \n  emulation_options_string = (char *)dcgettext(0,\" emulation options: \\n\",5);\n  fprintf(output_file,emulation_options_string);\n  emulation_options_string = (char *)dcgettext(0,\"  No emulation specific options\\n\",5);\n  fprintf(output_file,emulation_options_string);\n  return;\n}\n\n",
            "current_name": "print_emulation_options_0010336b",
            "entrypoint": "0x0010336b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010336b": "print_emulation_options_0010336b",
                "param_1": "output_file",
                "pcVar1": "emulation_options_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033b0": {
            "additional_data": {
                "FUN_001033b0": {
                    "print_and_exit": 5,
                    "print_error_and_exit": 3,
                    "print_error_message_and_exit": 23
                },
                "__format": {
                    "format_string": 2
                },
                "__status": {
                    "exit_status": 2
                },
                "__stderr": {
                    "standard_error_stream": 2
                },
                "__stream": {
                    "output_stream": 2
                },
                "_stderr": {
                    "error_output": 2,
                    "error_output_stream": 1,
                    "error_stream": 2,
                    "output_stream": 1,
                    "standard_error": 2
                },
                "exit": {
                    "exit_program": 2,
                    "immediately_terminate": 1
                },
                "fprintf": {
                    "print_to_output": 1,
                    "print_to_standard_error": 3
                },
                "param_1": {
                    "error_message": 28,
                    "message": 3
                }
            },
            "called": [
                "exit",
                "fprintf"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001033d6",
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_001033b0(undefined8 error_message)\n\n{\n  fprintf(standard_error,\"%s\\n\",error_message);\n                    \n  exit_program(2);\n}\n\n",
            "current_name": "print_error_message_and_exit_001033b0",
            "entrypoint": "0x001033b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033b0": "print_error_message_and_exit_001033b0",
                "_stderr": "standard_error",
                "exit": "exit_program",
                "fprintf": "print_to_standard_error",
                "param_1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033d6": {
            "additional_data": {
                "FUN_001031cf": {
                    "allocate_memory": 1
                },
                "FUN_001033b0": {
                    "display_memory_error": 1,
                    "print_error": 1
                },
                "FUN_001033d6": {
                    "create_buffer": 24,
                    "create_buffer_from_file": 2,
                    "create_dynamic_buffer": 1,
                    "create_output_buffer": 1,
                    "create_yy_buffer": 2,
                    "yy_create_buffer": 1
                },
                "auVar3": {
                    "result": 18,
                    "result_buffer": 3,
                    "return_val": 2,
                    "return_value": 6
                },
                "malloc": {
                    "allocate_memory": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer_size": 1,
                    "file1": 2,
                    "file_1": 2,
                    "file_name": 1,
                    "file_output": 1,
                    "file_param1": 1,
                    "file_pointer": 3,
                    "file_ptr": 9,
                    "file_ptr1": 1,
                    "input_file": 2,
                    "param1": 3,
                    "param_1": 2,
                    "param_file": 2
                },
                "param_2": {
                    "arg2": 1,
                    "file1": 1,
                    "file2": 2,
                    "file_2": 2,
                    "file_input": 1,
                    "file_mode": 1,
                    "file_param2": 1,
                    "file_ptr2": 1,
                    "output_file": 2,
                    "param2": 6,
                    "param_2": 4,
                    "param_size": 1,
                    "param_x": 1,
                    "unknown_param_2": 1,
                    "unused_param": 4,
                    "unused_param_1": 1,
                    "unused_ptr1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer_size": 1,
                    "file2": 1,
                    "file3": 2,
                    "file_param3": 1,
                    "file_ptr3": 1,
                    "param3": 7,
                    "param_3": 8,
                    "param_offset": 1,
                    "param_y": 1,
                    "unknown_param_3": 1,
                    "unused_param": 4,
                    "unused_ptr2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer_size": 2,
                    "data_parameter": 1,
                    "file_param4": 1,
                    "flag": 1,
                    "memory_ptr": 1,
                    "param1": 1,
                    "param4": 8,
                    "param_4": 10,
                    "param_value": 1,
                    "param_z": 1,
                    "unknown_param_4": 1,
                    "unused_param_2": 1,
                    "unused_ptr3": 1
                },
                "pvVar1": {
                    "buffer": 21,
                    "buffer_ptr": 9,
                    "output_buffer": 1
                },
                "pvVar2": {
                    "alloc_buffer": 1,
                    "alloc_ptr": 1,
                    "allocated_buffer": 2,
                    "allocated_memory": 1,
                    "aux_buffer_ptr": 1,
                    "buffer2": 4,
                    "buffer2_ptr": 1,
                    "buffer_data": 2,
                    "buffer_data_ptr": 1,
                    "buffer_ptr": 1,
                    "buffer_ptr2": 1,
                    "buffer_ptr_2": 1,
                    "data": 1,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "dyn_memory": 1,
                    "dynamic_memory": 2,
                    "dynamic_memory_ptr": 1,
                    "dynamic_ptr": 1,
                    "input_buffer": 1,
                    "malloc_ptr": 1,
                    "ptr": 2,
                    "sub_buffer": 1
                }
            },
            "called": [
                "malloc",
                "FUN_001031cf",
                "FUN_001033b0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined  [16]\nyy_create_buffer_001033d6(undefined8 file_ptr,undefined8 param2,undefined8 param_3,undefined8 param_4)\n\n{\n  void *buffer;\n  void *buffer2;\n  undefined result [16];\n  \n  buffer = malloc(0x40);\n  if (buffer != (void *)0x0) goto LAB_001033f7;\n  do {\n    buffer = (void *)FUN_001033b0(\"out of dynamic memory in yy_create_buffer_001033d6()\");\nLAB_001033f7:\n    *(undefined4 *)((long)buffer + 0x18) = 0x4000;\n    buffer2 = malloc(0x4002);\n    *(void **)((long)buffer + 8) = buffer2;\n  } while (buffer2 == (void *)0x0);\n  *(undefined4 *)((long)buffer + 0x20) = 1;\n  FUN_001031cf(buffer,file_ptr);\n  result._8_8_ = param_4;\n  result._0_8_ = buffer;\n  return result;\n}\n\n",
            "current_name": "yy_create_buffer_001033d6",
            "entrypoint": "0x001033d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033d6": "yy_create_buffer_001033d6",
                "auVar3": "result",
                "malloc": "allocate_memory",
                "param_1": "file_ptr",
                "param_2": "param2",
                "pvVar1": "buffer",
                "pvVar2": "buffer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010342d": {
            "additional_data": {
                "DAT_0010d660": {
                    "program_name": 2
                },
                "FUN_0010342d": {
                    "display_usage": 2,
                    "display_usage_information": 1,
                    "print_archive_usage": 6,
                    "print_archiving_options": 1,
                    "print_command_line_help": 1,
                    "print_usage": 19,
                    "print_usage_message": 1
                },
                "__format": {
                    "format_string": 2
                },
                "__stream": {
                    "file_stream": 1,
                    "output_file": 1,
                    "output_stream": 25,
                    "stream": 4
                },
                "dcgettext": {
                    "get_localized_string": 1,
                    "get_translated_string": 1,
                    "get_translated_text": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_to_stream": 1
                },
                "param_1": {
                    "is_output_redirected": 1,
                    "is_standalone_mode": 1,
                    "is_standard_output": 1,
                    "is_stdout": 2,
                    "is_verbose": 1,
                    "option": 2,
                    "option_flag": 1,
                    "output_enabled": 1,
                    "output_mode": 3,
                    "output_to_file": 3,
                    "output_to_stdout": 10,
                    "param": 2,
                    "print_to_stdout": 1,
                    "verbosity": 1,
                    "verbosity_level": 1
                },
                "pcVar2": {
                    "error_message": 1,
                    "gettext_string": 1,
                    "help_message": 1,
                    "localized_message": 1,
                    "localized_string": 4,
                    "localized_text": 3,
                    "message": 15,
                    "message_string": 1,
                    "print_string": 1,
                    "text": 1,
                    "translated_text": 1,
                    "translation_string": 1
                },
                "uVar1": {
                    "arch_file": 1,
                    "archive_file": 1,
                    "archive_file_version": 1,
                    "archive_name": 2,
                    "current_directory": 1,
                    "current_file_name": 1,
                    "current_option": 1,
                    "data_address": 1,
                    "default_option": 1,
                    "format_specifier": 2,
                    "format_string": 3,
                    "formatted_string": 1,
                    "language_file": 1,
                    "message": 1,
                    "output_filename": 1,
                    "translated_text": 1,
                    "usage_message_string": 1,
                    "usage_string": 1,
                    "usage_text": 1,
                    "usage_var1": 1,
                    "version": 2,
                    "version_number": 3
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "xexit",
                "FUN_0010336b",
                "FUN_0010266f",
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_archive_usage_0010342d(uint output_to_stdout)\n\n{\n  undefined8 version_number;\n  char *message;\n  FILE *output_stream;\n  \n  message = (char *)dcgettext(0,\n                             \"Usage: %s [emulation options] [-]{dmpqrstx}[abcDfilMNoOPsSTuvV] [--plugin <name>] [member-name] [count] archive-file file...\\n\"\n                             ,5);\n  output_stream = _stderr;\n  if (output_to_stdout != 0) {\n    output_stream = _stdout;\n  }\n  fprintf(output_stream,message,DAT_0010d660);\n  version_number = DAT_0010d660;\n  message = (char *)dcgettext(0,\"       %s -M [<mri-script]\\n\",5);\n  fprintf(output_stream,message,version_number);\n  message = (char *)dcgettext(0,\" commands:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  d            - delete file(s) from the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  m[ab]        - move file(s) in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  p            - print file(s) found in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  q[f]         - quick append file(s) to the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  r[ab][f][u]  - replace existing or insert new file(s) into the archive\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  s            - act as ranlib\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  t[O][v]      - display contents of the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  x[o]         - extract file(s) from the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" command specific modifiers:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [a]          - put file(s) after [member-name]\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [b]          - put file(s) before [member-name] (same as [i])\\n\",5\n                            );\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [D]          - use zero for timestamps and uids/gids (default)\\n\",\n                             5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [U]          - use actual timestamps and uids/gids\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [N]          - use instance [count] of name\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [f]          - truncate inserted file names\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [P]          - use full path names when matching\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [o]          - preserve original dates\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [O]          - display offsets of files in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  [u]          - only replace files that are newer than current archive contents\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" generic modifiers:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [c]          - do not warn if the library had to be created\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [s]          - create an archive index (cf. ranlib)\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [l <text> ]  - specify the dependencies of this library\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [S]          - do not build a symbol table\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [T]          - deprecated, use --thin instead\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [v]          - be verbose\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [V]          - display the version number\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  @<file>      - read options from <file>\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --target=BFDNAME - specify the target object format as BFDNAME\\n\",\n                             5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  --output=DIRNAME - specify the output directory for extraction operations\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  --record-libdeps=<text> - specify the dependencies of this library\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --thin       - make a thin archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" optional:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --plugin <p> - load the specified plugin\\n\",5);\n  fprintf(output_stream,message);\n  FUN_0010336b(output_stream);\n  FUN_0010266f(DAT_0010d660,output_stream);\n  if (output_to_stdout != 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_stream,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  xexit(output_to_stdout ^ 1);\n}\n\n",
            "current_name": "print_archive_usage_0010342d",
            "entrypoint": "0x0010342d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010342d": "print_archive_usage_0010342d",
                "__stream": "output_stream",
                "dcgettext": "get_translated_text",
                "fprintf": "print_to_stream",
                "param_1": "output_to_stdout",
                "pcVar2": "message",
                "uVar1": "version_number",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010394a": {
            "additional_data": {
                "D": {
                    "zero_timestamp": 1
                },
                "DAT_0010d660": {
                    "symbol_map_timestamp": 1
                },
                "FUN_0010266f": {
                    "print_debug_info": 1,
                    "print_footer": 1,
                    "print_help": 2,
                    "print_version": 4,
                    "print_version_and_help": 3,
                    "print_version_info": 3,
                    "print_version_information": 4
                },
                "FUN_0010394a": {
                    "generate_archive_index": 1,
                    "generate_index": 1,
                    "print_archive_index": 2,
                    "print_archive_usage": 4,
                    "print_usage": 19,
                    "print_usage_and_exit": 2,
                    "print_usage_message": 2
                },
                "PTR_0010d660": {
                    "default_name": 1
                },
                "U": {
                    "actual_timestamp": 1
                },
                "__format": {
                    "format": 3,
                    "format_specifier": 2,
                    "format_string": 1
                },
                "__stream": {
                    "output_file": 2,
                    "output_stream": 27,
                    "stream": 2
                },
                "_stderr": {
                    "stderr_stream": 1
                },
                "_stdout": {
                    "stdout_stream": 1
                },
                "dcgettext": {
                    "get_localized_string": 2,
                    "get_localized_text": 4,
                    "get_message": 1,
                    "get_text": 1,
                    "get_translated_message": 2,
                    "get_translated_text": 4,
                    "get_translation": 1,
                    "translate": 1,
                    "translate_text": 1
                },
                "dcgetttext": {
                    "get_localized_message": 1
                },
                "f_printf": {
                    "print_formatted_string": 1
                },
                "fprintF": {
                    "print_formatted": 1
                },
                "fprintf": {
                    "print": 1,
                    "print_formatted": 6,
                    "print_formatted_message": 1,
                    "print_formatted_text": 1,
                    "print_message": 1,
                    "print_msg": 1,
                    "print_text": 1,
                    "print_to_stream": 3,
                    "write_to_stream": 1
                },
                "h": {
                    "help": 1
                },
                "param_1": {
                    "debug": 1,
                    "flag": 6,
                    "flags": 1,
                    "is_debug": 1,
                    "is_quiet_mode": 1,
                    "is_usage": 1,
                    "is_verbose": 5,
                    "is_verbose_output": 1,
                    "mode": 1,
                    "option": 6,
                    "option_flag": 6,
                    "print_to_file": 1
                },
                "pcVar2": {
                    "localized_string": 2,
                    "message": 25,
                    "msg": 1,
                    "string": 1,
                    "text": 2
                },
                "t": {
                    "update_timestamp": 1
                },
                "uVar1": {
                    "archive": 1,
                    "archive_name": 1,
                    "data": 1,
                    "default_name": 1,
                    "default_string": 2,
                    "error_message": 1,
                    "file_name": 1,
                    "program_name": 5,
                    "symbol": 1,
                    "symbol_map": 1,
                    "usage_message": 3,
                    "usage_str": 1,
                    "usage_string": 3,
                    "user_data": 1,
                    "var": 1,
                    "version": 5,
                    "version_string": 2
                },
                "v": {
                    "version": 1
                },
                "xexit": {
                    "exit_program": 18
                }
            },
            "called": [
                "xexit",
                "FUN_0010266f",
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nversionoid print_archive_usage_0010394a(uinupdate_timestamp flag)\n\n{\n  undefined8 version;\n  chelpar *message;\n  FILE *output_stream;\n  \n  version = DAT_0010d660;\n  output_stream = stderr_stream;\n  if (flag != 0) {\n    output_stream = actual_timestampKFHKXZCKP;\n  }\n  message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\"actual_timestampsage: %s [opupdate_timestampions] archelpiversione\\n\",5);\n  SKOactual_timestampEVZYBP(output_stream,message,version);\n  message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\" Generaupdate_timestampe an index update_timestampo speed access update_timestampo archelpiversiones\\n\",5);\n  SKOactual_timestampEVZYBP(output_stream,message);\n  message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\n                             \" Thelpe opupdate_timestampions are:\\n  @<file>                      Read opupdate_timestampions from <file>\\n\"\n                             ,5);\n  SKOactual_timestampEVZYBP(output_stream,message);\n  message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\"  --plugin <name>              Load update_timestamphelpe specified plugin\\n\",5);\n  SKOactual_timestampEVZYBP(output_stream,message);\n  message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\n                             \"  -D                           actual_timestampse zero for symbol map update_timestampimesupdate_timestampamp (defaulupdate_timestamp)\\n  -actual_timestamp                           actual_timestampse an acupdate_timestampual symbol map update_timestampimesupdate_timestampamp\\n\"\n                             ,5);\n  SKOactual_timestampEVZYBP(output_stream,message);\n  message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\n                             \"  -update_timestamp                           actual_timestamppdaupdate_timestampe update_timestamphelpe archelpiversione\\'s symbol map update_timestampimesupdate_timestampamp\\n  -help --helpelp                    Prinupdate_timestamp update_timestamphelpis helpelp message\\n  -version --versionersion                 Prinupdate_timestamp versionersion informaupdate_timestampion\\n\"\n                             ,5);\n  SKOactual_timestampEVZYBP(output_stream,message);\n  Factual_timestampN_0010266f(DAT_0010d660,output_stream);\n  if (flag != 0) {\n    message = (chelpar *)CWHactual_timestampVLVJRactual_timestamp(0,\"Reporupdate_timestamp bugs update_timestampo %s\\n\",5);\n    SKOactual_timestampEVZYBP(output_stream,message,\"<helpupdate_timestampupdate_timestampps://sourceware.org/bugzilla/>\");\n  }\n                    \n  xexit(flag ^ 1);\n}\n\n",
            "current_name": "print_archive_usage_0010394a",
            "entrypoint": "0x0010394a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010394a": "print_archive_usage_0010394a",
                "U": "actual_timestamp",
                "__stream": "output_stream",
                "_stderr": "stderr_stream",
                "_stdout": "stdout_stream",
                "dcgettext": "get_translated_text",
                "fprintf": "print_formatted",
                "h": "help",
                "param_1": "flag",
                "pcVar2": "message",
                "t": "update_timestamp",
                "uVar1": "version",
                "v": "version",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "DAT_0010d60c": {
                    "enable_print": 1
                },
                "FUN_00103a78": {
                    "archive_extraction": 1,
                    "archive_extractor": 1,
                    "extract_and_print_archive": 12,
                    "extract_and_print_archive_content": 1,
                    "extract_and_print_archive_contents": 4,
                    "extract_and_print_contents": 1,
                    "extract_archive": 2,
                    "extract_archive_contents": 2,
                    "extract_binary_data": 1,
                    "extract_data_from_binary": 1,
                    "parse_archive_file": 1,
                    "process_archive": 2,
                    "reverse_and_print_archive_contents": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer": 30
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 1
                },
                "auStack_b8": {
                    "auxiliary_stack": 1,
                    "stack_buffer": 25,
                    "temp_buffer": 1,
                    "temp_stack": 1,
                    "temporary_buffer": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 24,
                    "return_value": 1,
                    "status": 1
                },
                "local_88": {
                    "archive_size": 7,
                    "available_bytes": 1,
                    "bytes_remaining": 1,
                    "desired_bytes": 2,
                    "expected_bytes": 2,
                    "file_size": 4,
                    "filesize": 1,
                    "initial_archive_size": 1,
                    "max_buffer_size": 2,
                    "max_bytes_to_read": 1,
                    "max_read_size": 2,
                    "original_archive_size": 1,
                    "remaining_bytes_in_archive": 1,
                    "remaining_size": 2,
                    "seek_position": 2,
                    "size_limit": 1
                },
                "param_1": {
                    "archive": 11,
                    "archive_file": 2,
                    "archive_path": 1,
                    "args": 1,
                    "arguments": 1,
                    "binary_data": 1,
                    "function_parameters": 1,
                    "input": 2,
                    "input_param": 1,
                    "input_params": 2,
                    "parameter": 1,
                    "params": 3
                },
                "pcVar7": {
                    "error_description": 1,
                    "error_message": 16,
                    "error_str": 4,
                    "error_string": 8,
                    "error_text": 1
                },
                "piVar6": {
                    "errno_loc": 1,
                    "errno_location": 7,
                    "errno_location_pointer": 1,
                    "errno_pointer": 3,
                    "errno_ptr": 7,
                    "error_code": 1,
                    "error_location": 1,
                    "error_num_ptr": 1,
                    "error_number": 6,
                    "error_number_pointer": 1,
                    "error_ptr": 1
                },
                "puVar2": {
                    "archive": 4,
                    "archive_param": 2,
                    "archive_pointer": 1,
                    "archive_ptr": 4,
                    "callback": 1,
                    "current_entry": 1,
                    "current_param": 1,
                    "file_pointer": 1,
                    "func_ptr": 2,
                    "function_pointer": 1,
                    "handler": 1,
                    "input_param": 1,
                    "optional_handle": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "secondary_archive": 1,
                    "secondary_archive_file": 1,
                    "secondary_param": 1,
                    "temp": 1
                },
                "sVar5": {
                    "bytes_written": 28,
                    "write_result": 1,
                    "write_size": 1
                },
                "uVar3": {
                    "bytes_read": 26,
                    "read_size": 2
                },
                "uVar4": {
                    "error_message": 12,
                    "error_msg": 5,
                    "error_string": 3,
                    "internal_error_string": 1,
                    "message": 4,
                    "translation": 2
                },
                "unaff_R13": {
                    "bytes_extracted": 1,
                    "bytes_read": 1,
                    "bytes_read_total": 1,
                    "total_bytes_read": 21,
                    "total_bytes_written": 4,
                    "total_read_size": 1
                },
                "unaff_R14": {
                    "archive_size": 22,
                    "expected_archive_size": 1,
                    "max_file_size": 1,
                    "total_bytes_expected": 1,
                    "total_bytes_limit": 1,
                    "total_bytes_to_read": 3
                },
                "unaff_RBP": {
                    "buffer_size": 2,
                    "bytes_left": 1,
                    "bytes_remaining": 5,
                    "remaining_bytes": 22,
                    "remaining_size": 1
                }
            },
            "called": [
                "free",
                "FUN_00107690",
                "bfd_seek",
                "fwrite",
                "printf",
                "dcgettext",
                "strerror",
                "__errno_location",
                "xmalloc",
                "bfd_bread"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid extract_and_print_archive_contents_00103a78(undefined8 *archive)\n\n{\n  int result;\n  void *buffer;\n  undefined8 *archive;\n  ulong bytes_read;\n  undefined8 error_message;\n  size_t bytes_written;\n  int *errno_ptr;\n  size_t remaining_bytes;\n  char *error_message;\n  ulong total_bytes_read;\n  ulong archive_size;\n  undefined stack_buffer [48];\n  ulong archive_size;\n  \n  buffer = (void *)xmalloc(0x2000);\n  archive = (undefined8 *)archive[0x1d];\n  if ((undefined8 *)archive[0x1d] == (undefined8 *)0x0) {\n    archive = archive;\n  }\n  result = (**(code **)(archive[1] + 0x1e8))(archive,stack_buffer);\n  if (result == 0) {\n    if (DAT_0010d60c != 0) {\n      printf(\"\\n<%s>\\n\\n\",*archive);\n    }\n    total_bytes_read = 0;\n    bfd_seek(archive,0,0);\n    goto LAB_00103afd;\n  }\n  archive = (undefined8 *)*archive;\n  error_message = \"internal stat error on %s\";\n  do {\n    error_message = dcgettext(0,error_message,5);\n    FUN_00107690(error_message,archive);\n    archive_size = archive_size;\n    do {\n      bytes_written = fwrite(buffer,1,remaining_bytes,output_stream);\n      if (bytes_written != remaining_bytes) {\n        errno_ptr = __errno_location();\n        error_message = strerror(*errno_ptr);\n        FUN_00107690(\"stdout: %s\",error_message);\nLAB_00103b91:\n        free(buffer);\n        return;\n      }\n      total_bytes_read = total_bytes_read + bytes_written;\nLAB_00103afd:\n      if (archive_size <= total_bytes_read) goto LAB_00103b91;\n      remaining_bytes = archive_size - total_bytes_read;\n      if (0x2000 < remaining_bytes) {\n        remaining_bytes = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,remaining_bytes,archive);\n    } while (remaining_bytes == bytes_read);\n    error_message = \"%s is not a valid archive\";\n    archive = *(undefined8 **)archive[0x1d];\n    archive_size = archive_size;\n  } while( true );\n}\n\n",
            "current_name": "extract_and_print_archive_contents_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "extract_and_print_archive_contents_00103a78",
                "__ptr": "buffer",
                "_stdout": "output_stream",
                "auStack_b8": "stack_buffer",
                "iVar1": "result",
                "local_88": "archive_size",
                "param_1": "archive",
                "pcVar7": "error_message",
                "piVar6": "errno_ptr",
                "puVar2": "archive",
                "sVar5": "bytes_written",
                "uVar3": "bytes_read",
                "uVar4": "error_message",
                "unaff_R13": "total_bytes_read",
                "unaff_R14": "archive_size",
                "unaff_RBP": "remaining_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ba8": {
            "additional_data": {
                "FUN_00103ba8": {
                    "check_active_process": 1,
                    "check_and_print_ar": 16,
                    "check_and_print_ar_message": 1,
                    "check_and_print_ar_status": 1,
                    "check_and_print_ar_value": 1,
                    "check_and_print_message": 1,
                    "check_and_print_prompt": 1,
                    "check_ar_status": 4,
                    "check_status_and_print_prompt": 1,
                    "print_ar": 1,
                    "print_ar_message": 1,
                    "print_or_return_if_ar_greater_than_zero": 1,
                    "print_prompt_or_return": 1
                },
                "_DAT_0010d608": {
                    "ar_status": 1,
                    "data_flag": 1,
                    "flag": 1
                },
                "__format": {
                    "format": 7,
                    "format_specifier": 1,
                    "format_string": 4,
                    "message": 1,
                    "str": 1,
                    "text_format": 1
                },
                "__stream": {
                    "file": 2,
                    "file_stream": 3,
                    "output_stream": 6,
                    "stream": 14
                },
                "printf": {
                    "print_message": 1
                }
            },
            "called": [
                "fflush",
                "printf"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid check_and_print_ar_status_00103ba8(void)\n\n{\n  if (_DAT_0010d608 != 0) {\n    printf(\"AR >\");\n    fflush(_stdout);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_print_ar_status_00103ba8",
            "entrypoint": "0x00103ba8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ba8": "check_and_print_ar_status_00103ba8",
                "printf": "print_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bd1": {
            "additional_data": {
                "DAT_0010d660": {
                    "format": 1
                },
                "FUN_00103bd1": {
                    "print_matched_formats": 1,
                    "print_matching_formats": 30
                },
                "STDERR": {
                    "stderr_stream": 1
                },
                "__c": {
                    "c": 1,
                    "character": 11
                },
                "__format": {
                    "format_message": 1,
                    "format_str": 1,
                    "format_string": 24,
                    "localized_output": 1,
                    "message_format": 3
                },
                "__ptr": {
                    "pointer": 4,
                    "ptr": 11
                },
                "__stream": {
                    "output_stream": 2,
                    "stream": 11
                },
                "_stderr": {
                    "standard_error": 5
                },
                "_stdout": {
                    "standard_output": 6
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "retrieve_localized_string": 1
                },
                "fflush": {
                    "flush_output": 2
                },
                "fprintf": {
                    "print_formatted": 1,
                    "write_formatted_output": 1
                },
                "fputc": {
                    "write_char": 1,
                    "write_character": 1
                },
                "free": {
                    "release_memory": 2
                },
                "param_1": {
                    "format_array": 1,
                    "format_list": 5,
                    "format_strings": 3,
                    "formats": 14,
                    "formats_array": 1,
                    "formats_list": 1,
                    "matching_formats": 4,
                    "strings": 1
                },
                "plVar2": {
                    "array_ptr": 1,
                    "curr_format": 1,
                    "current_format": 24,
                    "current_format_string": 1,
                    "current_string": 1,
                    "next_format": 1,
                    "pointer": 1
                },
                "uVar1": {
                    "data": 3,
                    "default_format": 1,
                    "default_locale": 1,
                    "format_string": 1,
                    "matching_formats": 5,
                    "msg_id": 1,
                    "translation_context": 1
                }
            },
            "called": [
                "free",
                "fflush",
                "fputc",
                "fprintf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103bd1(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_0010d660;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103bd1",
            "entrypoint": "0x00103bd1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bd1": "print_matching_formats_00103bd1",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "dcgettext": "get_localized_text",
                "fflush": "flush_output",
                "fprintf": "print_formatted",
                "fputc": "write_character",
                "free": "release_memory",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c60": {
            "additional_data": {
                "FUN_0010315d": {
                    "clean_up": 1,
                    "clean_up_resources": 1,
                    "cleanup": 3,
                    "cleanup_resources": 2
                },
                "FUN_00103c60": {
                    "create_output_archive": 1,
                    "extract_and_modify_archive": 1,
                    "extract_and_modify_archives": 1,
                    "extract_and_set_archive": 1,
                    "extract_and_update_archive": 1,
                    "extract_archive": 2,
                    "extract_archive_files": 1,
                    "extract_archived_files": 2,
                    "extract_archives": 1,
                    "extract_output_archive": 1,
                    "process_and_print_archive": 1,
                    "process_archive": 5,
                    "process_archive_file": 1,
                    "process_archive_files": 1,
                    "process_archives": 3,
                    "process_binary": 1
                },
                "FUN_001057a0": {
                    "allocate_memory": 1,
                    "extract_archive_helper": 1,
                    "get_temp_file": 1,
                    "get_temporary_file": 1,
                    "get_temporary_file_path": 1,
                    "initialize_archive": 1
                },
                "PTR_FUN_001057a0": {
                    "read_archived_files": 1
                },
                "PTR_bfd_check_format": {
                    "check_file_format": 1
                },
                "PTR_bfd_openr_next_archived_file": {
                    "get_next_archived_file": 1
                },
                "PTR_bfd_set_format": {
                    "set_file_format": 1
                },
                "PTR_dcgettext": {
                    "get_error_message": 1
                },
                "__errno_location": {
                    "get_errno_location": 4,
                    "get_error_location": 2
                },
                "__format": {
                    "format_string": 2
                },
                "__stream": {
                    "output_stream": 1
                },
                "_format": {
                    "format_string": 1,
                    "print_format": 1
                },
                "_stderr": {
                    "error_output": 3,
                    "error_stream": 1,
                    "standard_error": 9,
                    "standard_error_output": 1,
                    "standard_error_stream": 1,
                    "std_err": 1,
                    "stderr": 1,
                    "stderr_stream": 1
                },
                "bfd_check_format": {
                    "check_bfd_format": 3,
                    "check_file_format": 1,
                    "check_format": 1,
                    "check_input_format": 2
                },
                "bfd_fdopenw": {
                    "open_bfd_output_file": 1,
                    "open_output_archive": 4,
                    "open_output_file": 1
                },
                "bfd_openr": {
                    "open_archive": 1,
                    "open_archive_file": 1,
                    "open_bfd": 1,
                    "open_bfd_file": 1,
                    "open_input_archive": 3
                },
                "bfd_openr_next_archived_file": {
                    "get_archived_file": 1,
                    "get_next_archived_file": 2,
                    "open_next_archived_file": 4
                },
                "bfd_set_format": {
                    "set_bfd_format": 3,
                    "set_output_file_format": 1,
                    "set_output_format": 3
                },
                "cVar1": {
                    "check_format_result": 2,
                    "check_result": 3,
                    "format_check": 4,
                    "format_check_result": 5,
                    "format_valid": 2,
                    "is_archive": 4,
                    "is_format_correct": 1,
                    "is_valid_format": 3
                },
                "dcgettext": {
                    "get_error_message": 3,
                    "get_localized_text": 1,
                    "get_translated_message": 1,
                    "get_translated_string": 1,
                    "translate_error_message": 1,
                    "translate_message": 1
                },
                "fprintf": {
                    "print_error": 1,
                    "print_error_message": 6,
                    "print_to_standard_error": 1
                },
                "lVar4": {
                    "archive_file": 1,
                    "archive_handle": 1,
                    "input_archive": 25,
                    "input_archive_descriptor": 1,
                    "input_archive_file": 1,
                    "input_archive_handle": 2
                },
                "lVar5": {
                    "archived_file": 27,
                    "archived_file_handle": 2,
                    "next_archived_file": 1,
                    "next_file_descriptor": 1
                },
                "param_1": {
                    "archive_file_path": 1,
                    "archive_path": 7,
                    "file_path": 1,
                    "filename": 1,
                    "input_archive": 3,
                    "input_archive_file": 1,
                    "input_archive_name": 1,
                    "input_archive_path": 6,
                    "input_file": 2,
                    "input_file_path": 1,
                    "input_filename": 2,
                    "input_path": 1,
                    "output_archive_name": 1,
                    "output_archive_path": 1,
                    "output_file": 1,
                    "source_archive": 1
                },
                "param_2": {
                    "enable_compression": 1,
                    "enable_reversing": 1,
                    "extract_format": 1,
                    "flag": 11,
                    "has_output_archive": 1,
                    "is_compressed": 2,
                    "is_input_archive": 1,
                    "is_output": 1,
                    "is_output_archive": 3,
                    "is_plugin": 7,
                    "overwrite_output": 1,
                    "plugin_flag": 1
                },
                "pcVar3": {
                    "error_message": 30,
                    "error_string": 1
                },
                "piVar2": {
                    "errno_location": 8,
                    "errno_location_ptr": 1,
                    "errno_location_result": 1,
                    "errno_ptr": 7,
                    "errno_val": 1,
                    "errnum_ptr": 1,
                    "error_code": 1,
                    "error_code_ptr": 1,
                    "error_location": 3,
                    "error_num": 1,
                    "error_number": 5,
                    "error_number_ptr": 1
                },
                "plVar7": {
                    "archived_file_handles_array": 1,
                    "archived_file_list": 2,
                    "archived_file_pointer": 1,
                    "archived_file_ptr": 4,
                    "archived_files": 3,
                    "archived_files_array": 3,
                    "archived_files_list": 3,
                    "archived_files_ptr": 2,
                    "current_archived_file": 2,
                    "current_archived_file_handle": 1,
                    "current_file": 3,
                    "current_file_pointer": 1,
                    "current_file_ptr": 1,
                    "file_list": 1,
                    "file_ptr_list": 1,
                    "next_archived_file": 1,
                    "output_archive_descriptor_pointer": 1
                },
                "strerror": {
                    "get_error_description": 1,
                    "get_error_message": 2,
                    "get_error_string": 4
                },
                "uVar6": {
                    "error_code": 1,
                    "error_message": 1,
                    "error_string": 1,
                    "program_name": 25,
                    "temp_file_name": 1,
                    "temporary_file": 1,
                    "translation": 1
                },
                "xstrdup": {
                    "duplicate_string": 8
                }
            },
            "called": [
                "FUN_001057a0",
                "bfd_set_format",
                "bfd_check_format",
                "fprintf",
                "bfd_openr_next_archived_file",
                "dcgettext",
                "bfd_openr",
                "FUN_0010315d",
                "bfd_fdopenw",
                "__errno_location",
                "strerror",
                "xstrdup"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid process_archive_file_00103c60(char *archive_path,int flag)\n\n{\n  char format_check_result;\n  int *errno_location;\n  char *error_message;\n  long input_archive;\n  long archived_file;\n  undefined8 program_name;\n  long *archived_file_ptr;\n  \n  DAT_0010d570 = xstrdup();\n  DAT_0010d560 = (char *)FUN_001057a0(DAT_0010d570,&DAT_0010d568);\n  if (DAT_0010d560 == (char *)0x0) {\n    errno_location = __errno_location();\n    archive_path = strerror(*errno_location);\n    program_name = DAT_0010d660;\n    error_message = (char *)dcgettext(0,\"%s: Can\\'t open temporary file (%s)\\n\",5);\n  }\n  else {\n    DAT_0010d558 = bfd_fdopenw(DAT_0010d560,0,DAT_0010d568);\n    if (DAT_0010d558 == 0) {\n      error_message = \"%s: Can\\'t open output archive %s\\n\";\n      archive_path = DAT_0010d560;\n    }\n    else {\n      if (flag != 0) {\nLAB_00103d02:\n        bfd_set_format(DAT_0010d558,2);\n        *(byte *)(DAT_0010d558 + 0x49) = *(byte *)(DAT_0010d558 + 0x49) & 0xe7 | 8;\n        return;\n      }\n      input_archive = bfd_openr(archive_path,\"plugin\");\n      if (input_archive == 0) {\n        error_message = \"%s: Can\\'t open input archive %s\\n\";\n      }\n      else {\n        format_check_result = bfd_check_format(input_archive,2);\n        if (format_check_result != '\\0') {\n          archived_file_ptr = (long *)(DAT_0010d558 + 0xf8);\n          for (archived_file = bfd_openr_next_archived_file(input_archive,0); archived_file != 0;\n              archived_file = bfd_openr_next_archived_file(input_archive,archived_file)) {\n            *archived_file_ptr = archived_file;\n            archived_file_ptr = (long *)(archived_file + 0xf0);\n          }\n          goto LAB_00103d02;\n        }\n        error_message = \"%s: file %s is not an archive\\n\";\n      }\n    }\n    program_name = DAT_0010d660;\n    error_message = (char *)dcgettext(0,error_message,5);\n  }\n  fprintf(standard_error,error_message,program_name,archive_path);\n  FUN_0010315d();\n  return;\n}\n\n",
            "current_name": "process_archive_file_00103c60",
            "entrypoint": "0x00103c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c60": "process_archive_file_00103c60",
                "__errno_location": "get_errno_location",
                "_format": "format_string",
                "_stderr": "standard_error",
                "bfd_check_format": "check_bfd_format",
                "bfd_fdopenw": "open_output_archive",
                "bfd_openr": "open_input_archive",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "bfd_set_format": "set_bfd_format",
                "cVar1": "format_check_result",
                "dcgettext": "get_error_message",
                "fprintf": "print_error_message",
                "lVar4": "input_archive",
                "lVar5": "archived_file",
                "param_1": "archive_path",
                "param_2": "flag",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "plVar7": "archived_file_ptr",
                "strerror": "get_error_string",
                "uVar6": "program_name",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ddc": {
            "additional_data": {
                "FUN_00103ddc": {
                    "execute_data_processing": 1,
                    "execute_file_function": 2,
                    "execute_file_operation": 6,
                    "execute_file_processing": 2,
                    "execute_function": 5,
                    "execute_process": 1,
                    "handle_data_processing": 1,
                    "initialize_file": 1,
                    "initialize_file_processing": 1,
                    "print_file_contents": 1,
                    "process_data": 8
                },
                "FUN_001079c0": {
                    "execute_sub_function": 2,
                    "invoke_subfunction": 1,
                    "perform_file_operation": 5,
                    "perform_operation_on_file": 1,
                    "print_file_with_options": 1,
                    "print_to_file": 2,
                    "process_data": 2,
                    "process_file": 5,
                    "process_file_data": 1,
                    "process_sub_function": 1,
                    "sub_function": 1,
                    "write_to_file": 8,
                    "write_to_log_file": 1
                },
                "param_1": {
                    "data": 4,
                    "data_file": 1,
                    "file": 11,
                    "file_handle": 2,
                    "file_handler": 1,
                    "file_pointer": 9,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "input": 1
                },
                "param_2": {
                    "arguments": 1,
                    "data": 7,
                    "file_arguments": 1,
                    "file_content": 2,
                    "file_data": 1,
                    "file_names": 2,
                    "file_paths": 5,
                    "processed_data": 1,
                    "string_array": 4,
                    "strings": 6,
                    "text": 1
                },
                "param_3": {
                    "check_condition": 1,
                    "check_flag": 1,
                    "condition1": 2,
                    "enable_condition": 1,
                    "enable_flag": 1,
                    "flag": 4,
                    "flag1": 13,
                    "flag3": 1,
                    "flag_1": 3,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_option_enabled": 1,
                    "use_condition": 1
                },
                "param_4": {
                    "additional_flag": 1,
                    "another_flag": 1,
                    "condition2": 2,
                    "flag": 2,
                    "flag2": 14,
                    "flag4": 1,
                    "flag_2": 3,
                    "parameter4": 1,
                    "some_flag": 1,
                    "unused_flag": 1,
                    "unused_variable": 1,
                    "value": 2,
                    "zero": 1
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid process_data_00103ddc(undefined8 file)\n\n{\n  FUN_001079c0(DAT_0010d578,file,DAT_0010d60c != 0,0);\n  return;\n}\n\n",
            "current_name": "process_data_00103ddc",
            "entrypoint": "0x00103ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ddc": "process_data_00103ddc",
                "param_1": "file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103df9": {
            "additional_data": {
                "DAT_0010d580": {
                    "buffer_capacity": 1,
                    "buffer_size": 2
                },
                "DAT_0010d5a0": {
                    "buffer_index": 2,
                    "buffer_usage": 1
                },
                "DAT_0010d5a8": {
                    "buffer": 3
                },
                "FUN_001033b0": {
                    "print_error_message": 5,
                    "print_memory_error": 2
                },
                "FUN_00103df9": {
                    "allocate_memory": 1,
                    "ensure_buffer_stack": 28,
                    "expand_buffer": 1,
                    "expand_buffer_data": 1
                },
                "__size": {
                    "buffer_size": 17,
                    "element_size": 1,
                    "new_buffer_size": 1,
                    "new_size": 5,
                    "size": 6,
                    "total_size": 1
                },
                "bVar4": {
                    "buffer_init_flag": 1,
                    "byte_counter": 1,
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_value": 5,
                    "byte_var": 4,
                    "byte_variable": 1,
                    "counter": 2,
                    "counter_variable": 1,
                    "flag": 6,
                    "increment": 1,
                    "is_allocated": 1,
                    "is_zero": 3,
                    "loop_condition": 1,
                    "loop_flag": 2
                },
                "calloc": {
                    "allocate_buffer": 1,
                    "allocate_memory": 2
                },
                "in_RCX": {
                    "context": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 4,
                    "input_value": 6,
                    "result": 3,
                    "return_value": 14
                },
                "lVar1": {
                    "counter": 2,
                    "i": 2,
                    "iteration": 1,
                    "loop_counter": 24,
                    "loop_variable": 1,
                    "loop_variable1": 1
                },
                "lVar2": {
                    "loop_variable2": 1,
                    "new_array_size": 1,
                    "new_buffer_size": 15,
                    "new_length": 1,
                    "new_size": 13
                },
                "puVar3": {
                    "array_ptr": 1,
                    "buffer_end": 1,
                    "buffer_pointer": 9,
                    "buffer_ptr": 12,
                    "current_buffer_ptr": 1,
                    "end_of_buffer": 1,
                    "pointer": 2,
                    "ptr": 4
                },
                "realloc": {
                    "reallocate_buffer": 1,
                    "reallocate_memory": 2
                }
            },
            "called": [
                "realloc",
                "calloc",
                "FUN_001033b0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined8 ensure_buffer_stack_00103df9(void)\n\n{\n  size_t buffer_size;\n  undefined8 return_value;\n  long loop_counter;\n  long new_buffer_size;\n  undefined4 *buffer_ptr;\n  byte flag;\n  \n  flag = 0;\n  if (DAT_0010d5a8 == (void *)0x0) {\n    DAT_0010d5a8 = calloc(8,1);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      DAT_0010d580 = 1;\n      DAT_0010d5a0 = 0;\n      return return_value;\n    }\n  }\n  else {\n    if (DAT_0010d5a0 < DAT_0010d580 - 1U) {\n      return return_value;\n    }\n    new_buffer_size = DAT_0010d580 + 8;\n    buffer_size = new_buffer_size * 8;\n    DAT_0010d5a8 = recalloc(DAT_0010d5a8,buffer_size);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      buffer_ptr = (undefined4 *)((long)DAT_0010d5a8 + (buffer_size - 0x40));\n      DAT_0010d580 = new_buffer_size;\n      for (loop_counter = 0x10; loop_counter != 0; loop_counter = loop_counter + -1) {\n        *buffer_ptr = 0;\n        buffer_ptr = buffer_ptr + (ulong)flag * -2 + 1;\n      }\n      return return_value;\n    }\n  }\n  FUN_001033b0(\"out of dynamic memory in yyensure_buffer_stack_00103df9()\");\n  DAT_0010d5a0 = 0;\n  DAT_0010d580 = 1;\n  return return_value;\n}\n\n",
            "current_name": "ensure_buffer_stack_00103df9",
            "entrypoint": "0x00103df9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103df9": "ensure_buffer_stack_00103df9",
                "__size": "buffer_size",
                "bVar4": "flag",
                "calloc": "allocate_memory",
                "in_RCX": "return_value",
                "lVar1": "loop_counter",
                "lVar2": "new_buffer_size",
                "puVar3": "buffer_ptr",
                "realloc": "reallocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103e95": {
            "additional_data": {
                "D": {
                    "var_14": 1
                },
                "DAT_00109f00": {
                    "constant_var17": 1
                },
                "DAT_00109f08": {
                    "constant_var20": 1
                },
                "DAT_00109f0c": {
                    "constant_var21": 1
                },
                "DAT_00109f10": {
                    "constant_var22": 1
                },
                "DAT_00109f14": {
                    "constant_var23": 1
                },
                "DAT_00109f18": {
                    "constant_var24": 1
                },
                "DAT_00109f1c": {
                    "constant_var25": 1
                },
                "DAT_00109f20": {
                    "constant_var13": 1
                },
                "DAT_00109f24": {
                    "constant_var26": 1
                },
                "DAT_00109f28": {
                    "constant_var27": 1
                },
                "DAT_00109f2c": {
                    "constant_var28": 1
                },
                "DAT_00109f30": {
                    "constant_var29": 1
                },
                "DAT_00109f34": {
                    "constant_var30": 1
                },
                "DAT_00109f38": {
                    "constant_var31": 1
                },
                "DAT_00109f3c": {
                    "constant_var32": 1
                },
                "DAT_00109f40": {
                    "constant_var15": 1
                },
                "DAT_00109f44": {
                    "constant_var33": 1
                },
                "DAT_00109f48": {
                    "constant_var34": 1
                },
                "DAT_00109f4c": {
                    "constant_var35": 1
                },
                "DAT_00109f50": {
                    "constant_var36": 1
                },
                "DAT_00109f54": {
                    "constant_var38": 1
                },
                "DAT_00109f58": {
                    "constant_var39": 1
                },
                "DAT_00109f5c": {
                    "constant_var40": 1
                },
                "DAT_00109f60": {
                    "constant_var18": 1
                },
                "DAT_00109f80": {
                    "constant_var14": 1
                },
                "DAT_00109fc0": {
                    "constant_var19": 1
                },
                "DAT_00109fe0": {
                    "constant_var16": 1
                },
                "DAT_0010a020": {
                    "constant_var2": 1
                },
                "DAT_0010a060": {
                    "constant_var3": 1,
                    "temp_short_array_6": 1
                },
                "DAT_0010a0a0": {
                    "constant_var1": 1,
                    "temp_short_array_7": 1
                },
                "DAT_0010a0e0": {
                    "constant_var4": 1,
                    "temp_short_array_8": 1
                },
                "DAT_0010a100": {
                    "constant_var5": 1
                },
                "DAT_0010a200": {
                    "temp_byte_array_1": 1
                },
                "DAT_0010a240": {
                    "temp_short_array_1": 1
                },
                "DAT_0010a440": {
                    "temp_short_array_2": 1
                },
                "DAT_0010a640": {
                    "temp_short_array_3": 1
                },
                "DAT_0010a7c0": {
                    "temp_short_array_9": 1
                },
                "DAT_0010a800": {
                    "temp_short_array_4": 1
                },
                "DAT_0010a980": {
                    "temp_short_array_5": 1
                },
                "DAT_0010d2d0": {
                    "global_variable1": 1
                },
                "DAT_0010d530": {
                    "global_variable30": 1,
                    "temp_global_variable_15": 1
                },
                "DAT_0010d538": {
                    "dat_var538": 1,
                    "global_variable31": 1,
                    "temp_global_variable_4": 1,
                    "var_33": 1
                },
                "DAT_0010d540": {
                    "dat_var540": 1,
                    "global_variable2": 1,
                    "temp_global_variable_13": 1,
                    "var_30": 1
                },
                "DAT_0010d544": {
                    "var_41": 1
                },
                "DAT_0010d546": {
                    "var_42": 1
                },
                "DAT_0010d548": {
                    "global_variable32": 1,
                    "ptr_temp_variable_1": 1,
                    "var_62": 1
                },
                "DAT_0010d54c": {
                    "ptr_temp_variable_4": 1
                },
                "DAT_0010d550": {
                    "condition_variable": 1,
                    "dat_var550": 1,
                    "global_variable33": 1,
                    "temp_global_variable_1": 1,
                    "var_29": 1
                },
                "DAT_0010d554": {
                    "global_variable11": 1,
                    "temp_global_variable_12": 1,
                    "var_52": 1
                },
                "DAT_0010d558": {
                    "dat_var558": 1,
                    "global_variable12": 1,
                    "ptr_temp_variable_5": 1,
                    "var_40": 1
                },
                "DAT_0010d560": {
                    "global_variable34": 1,
                    "ptr_temp_variable_6": 1,
                    "var_47": 1
                },
                "DAT_0010d568": {
                    "global_variable13": 1,
                    "ptr_temp_variable_7": 1,
                    "var_60": 1
                },
                "DAT_0010d570": {
                    "global_variable35": 1,
                    "ptr_temp_variable_8": 1,
                    "var_46": 1
                },
                "DAT_0010d578": {
                    "dat_var578": 1,
                    "global_variable14": 1,
                    "ptr_temp_variable_9": 1,
                    "var_45": 1
                },
                "DAT_0010d588": {
                    "temp_global_variable_7": 1
                },
                "DAT_0010d590": {
                    "dat_var590": 1,
                    "global_variable36": 1,
                    "temp_global_variable_3": 1,
                    "var_32": 1
                },
                "DAT_0010d598": {
                    "dat_var598": 1,
                    "global_variable37": 1,
                    "temp_global_variable_23": 1,
                    "var_50": 1
                },
                "DAT_0010d5a0": {
                    "dat_var5a0": 1,
                    "global_variable3": 1,
                    "ptr_temp_variable_2": 1,
                    "var_35": 1
                },
                "DAT_0010d5a8": {
                    "dat_var5a8": 1,
                    "global_variable4": 1,
                    "temp_global_variable_5": 1,
                    "var_34": 1
                },
                "DAT_0010d5b0": {
                    "global_variable5": 1,
                    "temp_global_variable_8": 1,
                    "var_36": 1
                },
                "DAT_0010d5b8": {
                    "global_variable27": 1,
                    "temp_global_variable_10": 1,
                    "var_37": 1
                },
                "DAT_0010d5c0": {
                    "global_variable28": 1,
                    "temp_global_variable_11": 1,
                    "var_38": 1
                },
                "DAT_0010d5c8": {
                    "dat_var5c8": 1,
                    "global_variable29": 1,
                    "temp_global_variable_9": 1,
                    "var_39": 1
                },
                "DAT_0010d5d0": {
                    "dat_var5d0": 1,
                    "global_variable38": 1,
                    "temp_global_variable_2": 1,
                    "var_31": 1
                },
                "DAT_0010d5d8": {
                    "ptr_temp_variable_3": 1
                },
                "DAT_0010d5e8": {
                    "global_variable42": 1
                },
                "DAT_0010d5f0": {
                    "global_variable39": 1
                },
                "DAT_0010d600": {
                    "global_variable43": 1
                },
                "DAT_0010d608": {
                    "global_variable40": 1
                },
                "DAT_0010d60c": {
                    "dat_var60c": 1,
                    "global_variable41": 1
                },
                "DOP_00105970": {
                    "constant102": 1
                },
                "DOP_00105aa0": {
                    "constant101": 1
                },
                "DOP_00105bc0": {
                    "constant100": 1
                },
                "DOP_00105be0": {
                    "constant99": 1
                },
                "DOP_00105c00": {
                    "constant98": 1
                },
                "DOP_00105c30": {
                    "constant97": 1
                },
                "DOP_00105c70": {
                    "constant96": 1
                },
                "DOP_00105d70": {
                    "constant95": 1
                },
                "DOP_00105d90": {
                    "constant94": 1
                },
                "DOP_00105db0": {
                    "constant93": 1
                },
                "DOP_00105dd0": {
                    "constant92": 1
                },
                "DOP_00105df0": {
                    "constant91": 1
                },
                "DOP_00105e10": {
                    "constant90": 1
                },
                "DOP_00105e30": {
                    "constant89": 1
                },
                "DOP_00105e50": {
                    "constant88": 1
                },
                "DOP_00105e70": {
                    "constant87": 1
                },
                "DOP_00105e90": {
                    "constant86": 1
                },
                "DOP_00105eb0": {
                    "constant85": 1
                },
                "DOP_00105ed0": {
                    "constant84": 1
                },
                "DOP_00105ef0": {
                    "constant83": 1
                },
                "DOP_00105f10": {
                    "constant82": 1
                },
                "DOP_00105f30": {
                    "constant81": 1
                },
                "DOP_00105f50": {
                    "constant80": 1
                },
                "DOP_00105f70": {
                    "constant79": 1
                },
                "DOP_00105f90": {
                    "constant78": 1
                },
                "DOP_00105fb0": {
                    "constant77": 1
                },
                "DOP_00105fd0": {
                    "constant76": 1
                },
                "DOP_00106000": {
                    "constant75": 1
                },
                "DOP_00106020": {
                    "constant74": 1
                },
                "DOP_00106050": {
                    "constant73": 1
                },
                "DOP_00106380": {
                    "constant72": 1
                },
                "DOP_00106430": {
                    "constant71": 1
                },
                "DOP_00106460": {
                    "constant70": 1
                },
                "DOP_001065c0": {
                    "constant69": 1
                },
                "DOP_001065f0": {
                    "constant68": 1
                },
                "DOP_00106be0": {
                    "constant67": 1
                },
                "DOP_00106f70": {
                    "constant66": 1
                },
                "DOP_00107000": {
                    "constant65": 1
                },
                "DOP_00107090": {
                    "constant64": 1
                },
                "DOP_00107130": {
                    "constant63": 1
                },
                "DOP_001071d0": {
                    "constant62": 1
                },
                "DOP_00107270": {
                    "constant61": 1
                },
                "DOP_00107310": {
                    "constant60": 1
                },
                "DOP_001073b0": {
                    "constant59": 1
                },
                "DOP_00107450": {
                    "constant58": 1
                },
                "DOP_001074f0": {
                    "constant57": 1
                },
                "DOP_00107590": {
                    "constant56": 1
                },
                "DOP_00107630": {
                    "constant55": 1
                },
                "DOP_001076d0": {
                    "constant54": 1
                },
                "DOP_00107770": {
                    "constant53": 1
                },
                "DOP_00107810": {
                    "constant52": 1
                },
                "DOP_001078b0": {
                    "constant51": 1
                },
                "DOP_00107980": {
                    "constant50": 1
                },
                "DOP_00107a00": {
                    "constant49": 1
                },
                "DOP_00107a80": {
                    "constant48": 1
                },
                "DOP_00107b20": {
                    "constant47": 1
                },
                "DOP_00107bc0": {
                    "constant46": 1
                },
                "DOP_00107c60": {
                    "constant45": 1
                },
                "DOP_00107d00": {
                    "constant44": 1
                },
                "DOP_00107da0": {
                    "constant43": 1
                },
                "DOP_00107e40": {
                    "constant42": 1
                },
                "DOP_00107ec0": {
                    "constant41": 1
                },
                "DOP_00107f40": {
                    "constant40": 1
                },
                "DOP_00107fe0": {
                    "constant39": 1
                },
                "DOP_00108080": {
                    "constant38": 1
                },
                "DOP_00108120": {
                    "constant37": 1
                },
                "DOP_001081c0": {
                    "constant36": 1
                },
                "DOP_00108260": {
                    "constant35": 1
                },
                "DOP_00108300": {
                    "constant34": 1
                },
                "DOP_001083a0": {
                    "constant33": 1
                },
                "DOP_00108440": {
                    "constant32": 1
                },
                "DOP_001084e0": {
                    "constant31": 1
                },
                "DOP_00108580": {
                    "constant30": 1
                },
                "DOP_00108620": {
                    "constant29": 1
                },
                "DOP_001086c0": {
                    "constant28": 1
                },
                "DOP_00108790": {
                    "constant27": 1
                },
                "DOP_00108860": {
                    "constant26": 1
                },
                "DOP_00108930": {
                    "constant25": 1
                },
                "DOP_00108a00": {
                    "constant24": 1
                },
                "DOP_00108b10": {
                    "constant23": 1
                },
                "DOP_00108c20": {
                    "constant22": 1
                },
                "DOP_00108d30": {
                    "constant21": 1
                },
                "DOP_00108e40": {
                    "constant20": 1
                },
                "DOP_00108f50": {
                    "constant19": 1
                },
                "DOP_00109060": {
                    "constant18": 1
                },
                "DOP_00109170": {
                    "constant17": 1
                },
                "DOP_00109270": {
                    "constant16": 1
                },
                "DOP_00109370": {
                    "constant15": 1
                },
                "DOP_001094f0": {
                    "constant14": 1
                },
                "DOP_00109670": {
                    "constant13": 1
                },
                "DOP_001097f0": {
                    "constant12": 1
                },
                "DOP_00109970": {
                    "constant11": 1
                },
                "DOP_00109a20": {
                    "constant10": 1
                },
                "DOP_00109ad0": {
                    "constant9": 1
                },
                "DOP_00109d80": {
                    "constant8": 1
                },
                "DOP_00109e60": {
                    "constant7": 1
                },
                "DOP_00109fc0": {
                    "constant6": 1
                },
                "DOP_0010a1e0": {
                    "constant5": 1
                },
                "DOP_0010a2a0": {
                    "constant4": 1
                },
                "DOP_0010a400": {
                    "constant3": 1
                },
                "DOP_0010a560": {
                    "constant2": 1
                },
                "DOP_0010a620": {
                    "constant1": 1
                },
                "FUN_0010300e": {
                    "execute_operation": 1
                },
                "FUN_0010315d": {
                    "cleanup": 1
                },
                "FUN_001031a5": {
                    "initialize_variables": 1
                },
                "FUN_001031cf": {
                    "open_and_process_file": 1
                },
                "FUN_001032a8": {
                    "perform_operation_on_file": 1
                },
                "FUN_001033b0": {
                    "handle_error": 1
                },
                "FUN_00103ba8": {
                    "process_data": 1
                },
                "FUN_00103c60": {
                    "manipulate_file": 1
                },
                "FUN_00103ddc": {
                    "free_memory": 1
                },
                "FUN_00103df9": {
                    "initialize_data_structure": 1
                },
                "FUN_00103e95": {
                    "decompile_and_improve": 2,
                    "decompile_binary_function": 1,
                    "decompile_extracted_function": 1,
                    "decompiled_function": 3
                },
                "FUN_00105bc0": {
                    "file_processing_operation": 1
                },
                "FUN_00107740": {
                    "process_cache": 1
                },
                "RFC_00103ba8": {
                    "open_file": 1
                },
                "RFC_00103c60": {
                    "close_file": 1
                },
                "RFC_00103ddc": {
                    "compare_strings": 1
                },
                "RFC_00107270": {
                    "create_string_array": 1
                },
                "RFC_00107740": {
                    "close_archive": 1
                },
                "_DAT_0010d2d0": {
                    "temp_global_variable_22": 1
                },
                "_DAT_0010d544": {
                    "ptr_temp_variable_10": 1
                },
                "_stderr": {
                    "temp_file_pointer_2": 1
                },
                "_stdin": {
                    "temp_file_pointer_3": 1
                },
                "_stdout": {
                    "temp_file_pointer_1": 1
                },
                "auVar11": {
                    "array_of_unsigned_var_11": 1
                },
                "auVar40": {
                    "array_of_undefined_16": 1,
                    "array_of_undefined_var_40": 1,
                    "array_of_unsigned_var40": 1,
                    "array_variable40": 1,
                    "result_var1": 1,
                    "temp_struct": 1,
                    "temp_variable1": 1,
                    "temp_variable_1": 1,
                    "undefined16_variable": 1,
                    "undefined_array_1": 1,
                    "undefined_array_variable": 1,
                    "undefined_var3": 1,
                    "undefined_var40": 2,
                    "undefined_var_array16": 1,
                    "undefined_variable": 1,
                    "undefined_variable1": 1,
                    "var_67": 1
                },
                "auVar41": {
                    "array_of_undefined_16": 1,
                    "array_of_undefined_var_41": 1,
                    "array_of_unsigned_var41": 1,
                    "array_variable41": 1,
                    "result_var2": 1,
                    "temp_struct2": 1,
                    "temp_variable2": 1,
                    "temp_variable_2": 1,
                    "undefined16_variable": 1,
                    "undefined_array_2": 1,
                    "undefined_array_variable": 1,
                    "undefined_var4": 1,
                    "undefined_var41": 2,
                    "undefined_var_array16_2": 1,
                    "undefined_variable": 1,
                    "undefined_variable2": 1,
                    "var_68": 1
                },
                "auVar45": {
                    "another_temp_variable2": 1
                },
                "bVar28": {
                    "bool": 1,
                    "bool_1": 1,
                    "bool_value4": 1,
                    "bool_var": 4,
                    "bool_var28": 2,
                    "bool_var_28": 1,
                    "bool_variable": 3,
                    "boolean": 3,
                    "boolean_var1": 1,
                    "boolean_var28": 1,
                    "boolean_variable": 3,
                    "boolean_variable28": 1,
                    "flag": 2,
                    "temp_boolean": 1,
                    "var_56": 1
                },
                "bVar30": {
                    "bool_value2": 1,
                    "boolean": 1,
                    "boolean2": 1,
                    "boolean_var2": 1,
                    "boolean_var30": 1,
                    "boolean_variable30": 1,
                    "byte": 1,
                    "byte_1": 1,
                    "byte_value": 2,
                    "byte_var": 2,
                    "byte_var2": 1,
                    "byte_var30": 2,
                    "byte_var_30": 1,
                    "byte_variable": 5,
                    "flags_var": 1,
                    "var_57": 1
                },
                "bVar39": {
                    "bool_value3": 1,
                    "boolean": 1,
                    "boolean3": 1,
                    "boolean_var3": 1,
                    "byte_2": 1,
                    "byte_var2": 1,
                    "byte_var39": 2,
                    "byte_var7": 1,
                    "byte_var_39": 1,
                    "byte_variable": 3,
                    "flag": 1,
                    "var_58": 1,
                    "zero": 1
                },
                "bVar40": {
                    "boolean_var4": 1
                },
                "bVar41": {
                    "boolean_var5": 1
                },
                "cVar2": {
                    "action": 1,
                    "char_var": 1,
                    "char_variable": 4,
                    "character": 3,
                    "character_1": 1,
                    "character_var": 1,
                    "character_variable": 4,
                    "current_char": 1
                },
                "filename_cmp": {
                    "compare_filenames": 1
                },
                "iVar25": {
                    "int": 1,
                    "int_var3": 2,
                    "int_var_2": 1,
                    "int_variable": 2,
                    "integer": 1,
                    "integer_3": 1,
                    "integer_var25": 3,
                    "integer_var_25": 1,
                    "integer_variable": 3,
                    "integer_variable25": 1,
                    "loop_var7": 1,
                    "temp_int1": 1,
                    "temp_int_3": 1,
                    "var_54": 1,
                    "variable25": 1,
                    "variable3": 1
                },
                "iVar37": {
                    "int_var4": 2,
                    "int_variable": 1,
                    "integer": 1,
                    "integer_var37": 2,
                    "integer_var_37": 1,
                    "integer_variable": 2,
                    "integer_variable37": 1,
                    "iteration_counter": 1,
                    "loop_var8": 1,
                    "state": 1,
                    "var_16": 1,
                    "variable37": 1
                },
                "iVar38": {
                    "another_integer_variable": 1
                },
                "iVar39": {
                    "yet_another_integer_variable": 1
                },
                "iVar40": {
                    "yet_yet_another_integer_variable": 1
                },
                "iVar8": {
                    "int": 1,
                    "int_var": 3,
                    "int_variable": 2,
                    "integer": 2,
                    "integer_1": 1,
                    "integer_var8": 3,
                    "integer_var_8": 1,
                    "integer_variable": 2,
                    "integer_variable1": 1,
                    "integer_variable8": 1,
                    "iterator2": 1,
                    "loop_var5": 1,
                    "temp_int_2": 1,
                    "variable2": 1
                },
                "iVar9": {
                    "int": 1,
                    "int_var2": 2,
                    "int_variable": 2,
                    "integer": 1,
                    "integer_2": 1,
                    "integer_var9": 3,
                    "integer_var_9": 1,
                    "integer_variable": 2,
                    "integer_variable2": 1,
                    "integer_variable9": 1,
                    "loop_var6": 1,
                    "temp_int": 1,
                    "variable1": 1,
                    "variable9": 1
                },
                "lVar17": {
                    "character_count": 1,
                    "current_length": 1,
                    "length": 1,
                    "long": 2,
                    "long_1": 1,
                    "long_value": 1,
                    "long_var": 3,
                    "long_var17": 3,
                    "long_var_17": 1,
                    "long_variable": 4,
                    "long_variable1": 1,
                    "long_variable17": 1,
                    "new_signature_count": 1,
                    "temp_buffer_size": 1,
                    "var_73": 1
                },
                "lVar18": {
                    "counter": 2,
                    "current_index": 1,
                    "for_loop_var1": 1,
                    "i": 1,
                    "index": 1,
                    "iterator": 1,
                    "long": 2,
                    "long_2": 1,
                    "long_var18": 3,
                    "long_var2": 2,
                    "long_var_18": 1,
                    "long_var_2": 1,
                    "long_variable": 4,
                    "long_variable18": 1,
                    "long_variable2": 1,
                    "loop_counter": 1,
                    "var_26": 1,
                    "variable4": 1
                },
                "lVar21": {
                    "current_length": 1,
                    "data_length": 1,
                    "for_loop_var2": 1,
                    "inner_counter": 1,
                    "long": 2,
                    "long_3": 1,
                    "long_var21": 3,
                    "long_var3": 2,
                    "long_var_21": 1,
                    "long_var_3": 1,
                    "long_variable": 4,
                    "long_variable21": 1,
                    "new_length": 1,
                    "string_length": 1,
                    "temp_long1": 1,
                    "temp_pointer_size": 1,
                    "variable5": 1
                },
                "lVar31": {
                    "data_size": 1,
                    "for_loop_var3": 1,
                    "iterator3": 1,
                    "long": 2,
                    "long_5": 1,
                    "long_var31": 3,
                    "long_var5": 1,
                    "long_var6": 1,
                    "long_var_31": 1,
                    "long_var_4": 1,
                    "long_variable": 4,
                    "long_variable31": 1,
                    "temp_long2": 1,
                    "temp_long_2": 1,
                    "var_59": 1,
                    "variable6": 1
                },
                "local": {
                    "local_variable": 1
                },
                "local_340": {
                    "temp_array5": 1
                },
                "local_678": {
                    "array_of_double_pointer_to_character_201": 1,
                    "buffer_array2": 1,
                    "buffers": 1,
                    "char_pointer_array_variable": 1,
                    "function_signature_list": 1,
                    "local_array_of_pointer_to_char_678": 1,
                    "local_char_array": 1,
                    "local_char_array_variable678": 1,
                    "local_char_pointer_array": 1,
                    "local_character_array": 1,
                    "local_character_pointer_array": 1,
                    "local_string_array_var_2": 1,
                    "local_string_ptr_array": 1,
                    "pointer_to_character_local678": 1,
                    "string_array": 1,
                    "string_buffer": 1,
                    "temp_filename_list_array": 1,
                    "temporary_string_array": 1,
                    "var_15": 1
                },
                "local_700": {
                    "local_integer_array": 1
                },
                "local_71c": {
                    "local_character_array": 1
                },
                "local_740": {
                    "array_of_character_200": 1,
                    "buffer": 1,
                    "buffer_array": 1,
                    "char_array_variable": 1,
                    "character_local740": 1,
                    "input_buffer": 1,
                    "local_array_of_char_740": 1,
                    "local_char_array": 2,
                    "local_char_variable740": 1,
                    "local_character_array": 2,
                    "local_string_var": 1,
                    "local_string_var3": 1,
                    "temp_buffer": 2,
                    "temporary_string": 1,
                    "var_18": 1
                },
                "local_7c8": {
                    "temp_array": 1
                },
                "local_7d0": {
                    "file_stat": 3,
                    "local_stat": 2,
                    "local_stat_7d0": 1,
                    "local_stat_var": 2,
                    "local_stat_variable": 2,
                    "local_stat_variable7d0": 1,
                    "stat_local7d0": 1,
                    "stat_variable": 1,
                    "structure_stat": 1,
                    "temp_stat_variable": 1,
                    "var_17": 1
                },
                "local_7d4": {
                    "local_stat_struct": 1
                },
                "local_7e8": {
                    "local_byte_pointer": 1
                },
                "local_7ec": {
                    "local_unsigned_integer_variable": 1
                },
                "local_7f0": {
                    "local_byte_pointer": 1
                },
                "local_7f4": {
                    "local_byte_pointer": 1
                },
                "local_7f8": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "byte_array": 1,
                    "byte_pointer_local7f8": 1,
                    "byte_pointer_variable": 1,
                    "local_byte_pointer": 1,
                    "local_byte_var1": 1,
                    "local_byte_var_ptr": 1,
                    "local_pointer_to_byte": 2,
                    "local_pointer_to_byte_7f8": 1,
                    "local_pointer_to_byte_variable": 2,
                    "local_pointer_to_byte_variable7f8": 1,
                    "output_buffer_end": 1,
                    "pointer1": 1,
                    "pointer_to_byte": 1,
                    "temp_array2": 1,
                    "var_28": 1
                },
                "local_7fc": {
                    "byte_array_size": 1,
                    "current_output_size": 1,
                    "flags": 1,
                    "local_u_int": 1,
                    "local_uint_var": 1,
                    "local_uint_var1": 1,
                    "local_uint_variable": 2,
                    "local_unsigned_integer_variable": 1,
                    "local_unsigned_var": 1,
                    "local_unsigned_var_7fc": 1,
                    "local_unsigned_variable7fc": 1,
                    "loop_counter1": 1,
                    "uint_local7fc": 1,
                    "uint_variable": 1,
                    "unsigned_integer": 1,
                    "variable7fc": 1
                },
                "local_800": {
                    "buffer_count": 1,
                    "counter": 1,
                    "counter3": 1,
                    "file_count": 1,
                    "int_local800": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "local_int": 2,
                    "local_int_var": 1,
                    "local_int_var1": 1,
                    "local_int_variable": 1,
                    "local_integer_800": 1,
                    "local_integer_var": 1,
                    "local_integer_var800": 1,
                    "local_integer_variable": 2,
                    "local_integer_variable800": 1,
                    "loop_counter2": 1,
                    "temp_counter": 1,
                    "temp_flag_variable": 1,
                    "var_27": 1
                },
                "local_810": {
                    "double_pointer_local810": 1,
                    "double_pointer_to_character": 1,
                    "file_name_list": 1,
                    "input_path_list": 1,
                    "input_string_ptr": 1,
                    "local_char_pointer_pointer": 1,
                    "local_double_pointer_to_character": 2,
                    "local_pointer_to_pointer_of_char": 1,
                    "local_pointer_to_pointer_to_char": 1,
                    "local_pointer_to_pointer_to_char_810": 1,
                    "local_pointer_to_pointer_to_char_variable810": 1,
                    "local_pointer_to_pointer_to_character_variable": 1,
                    "local_pointer_variable": 1,
                    "local_ptr_var1": 1,
                    "local_string_array_var": 1,
                    "output_string": 1,
                    "pointer_pointer_char_variable": 1,
                    "previous_filenames": 1,
                    "source_string_array": 1,
                    "start_current_buffer_pointer": 1,
                    "temp_filename_list_array": 1,
                    "var_stack": 1
                },
                "local_818": {
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "destination_string_length": 1,
                    "file_name_buffer_size": 1,
                    "local_long": 2,
                    "local_long_818": 1,
                    "local_long_var": 2,
                    "local_long_var1": 1,
                    "local_long_var818": 1,
                    "local_long_variable": 2,
                    "local_long_variable1": 1,
                    "local_long_variable818": 1,
                    "long": 1,
                    "long_local818": 1,
                    "long_variable": 1,
                    "memory_size": 1,
                    "output_size": 1,
                    "output_string_size": 1
                },
                "local_820": {
                    "char_pointer_variable": 1,
                    "file_name_buffer": 1,
                    "input_data": 1,
                    "local_char_pointer2": 1,
                    "local_char_variable2": 1,
                    "local_pointer_to_char": 2,
                    "local_pointer_to_char_820": 1,
                    "local_pointer_to_char_variable820": 1,
                    "local_pointer_to_character": 2,
                    "local_pointer_to_character_variable": 1,
                    "local_string_var2": 1,
                    "local_string_var_2": 1,
                    "memory_ptr": 1,
                    "output_string_ptr": 1,
                    "pointer_to_character": 1,
                    "pointer_to_character_local820": 1,
                    "previous_pointer": 1,
                    "start_buffer": 1,
                    "start_of_string": 1,
                    "temp_array3": 1,
                    "temp_buffer": 1
                },
                "local_828": {
                    "char_pointer_variable": 1,
                    "current_char": 2,
                    "current_char_ptr": 1,
                    "current_file_name": 1,
                    "current_pointer": 1,
                    "destination_string": 1,
                    "local_char_pointer1": 1,
                    "local_char_variable1": 1,
                    "local_pointer_to_char": 2,
                    "local_pointer_to_char_828": 1,
                    "local_pointer_to_char_variable828": 1,
                    "local_pointer_to_character": 2,
                    "local_pointer_to_character_variable": 1,
                    "local_string_var1": 1,
                    "local_string_var_4": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_string": 1,
                    "pointer_to_character": 1,
                    "pointer_to_character_local828": 1
                },
                "local_b0": {
                    "temp_array4": 1
                },
                "local_s2": {
                    "temp_variable7": 1
                },
                "local_variables": {
                    "descriptive_names": 1
                },
                "pFVar4": {
                    "current_file": 1,
                    "file": 2,
                    "file_pointer": 4,
                    "file_pointer_variable": 1,
                    "file_ptr": 1,
                    "pointer_file_variable": 1,
                    "pointer_of_file_1": 1,
                    "pointer_to_file": 7,
                    "pointer_to_file_variable": 2,
                    "temp_file": 1,
                    "var_22": 1
                },
                "param": {
                    "pointer_of_character_1": 1
                },
                "pbVar10": {
                    "pointer_to_byte": 1
                },
                "pbVar32": {
                    "byte_pointer": 1,
                    "byte_pointer2": 2,
                    "byte_pointer32": 1,
                    "byte_pointer_variable": 1,
                    "byte_var3": 1,
                    "byte_var_ptr_2": 1,
                    "old_string": 1,
                    "pointer_array1": 1,
                    "pointer_of_byte_2": 1,
                    "pointer_to_byte": 5,
                    "pointer_to_byte_32": 1,
                    "pointer_to_byte_variable": 1,
                    "pointer_to_byte_variable32": 1,
                    "ptr": 1,
                    "source_data_ptr": 1,
                    "temp_byte_pointer": 1,
                    "var_64": 1
                },
                "pbVar33": {
                    "byte_pointer": 1,
                    "byte_pointer3": 1,
                    "byte_pointer33": 1,
                    "byte_pointer5": 1,
                    "byte_pointer_variable": 1,
                    "byte_var4": 1,
                    "byte_var_ptr_3": 1,
                    "destination_data_ptr": 1,
                    "old_string2": 1,
                    "pointer_array3": 1,
                    "pointer_of_byte_3": 1,
                    "pointer_to_byte": 5,
                    "pointer_to_byte_33": 1,
                    "pointer_to_byte_variable": 1,
                    "pointer_to_byte_variable33": 1,
                    "var_49": 1
                },
                "pbVar35": {
                    "byte_pointer": 1,
                    "byte_pointer35": 1,
                    "byte_pointer4": 1,
                    "byte_pointer_variable": 1,
                    "byte_var6": 1,
                    "byte_var_ptr_4": 1,
                    "current_byte": 1,
                    "current_string": 1,
                    "pointer_array2": 1,
                    "pointer_of_byte_4": 1,
                    "pointer_to_byte": 4,
                    "pointer_to_byte_35": 1,
                    "pointer_to_byte_variable": 1,
                    "pointer_to_byte_variable35": 1,
                    "ptr_end": 1,
                    "temp_byte_pointer_2": 1,
                    "var_19": 1
                },
                "pbVar36": {
                    "byte_pointer": 1,
                    "pointer_to_byte": 1,
                    "pointer_to_byte_variable": 1
                },
                "pbVar37": {
                    "pointer_to_byte_variable": 1
                },
                "pbVar38": {
                    "pointer_to_byte_variable": 1
                },
                "pbVar39": {
                    "byte": 1,
                    "byte_value": 1,
                    "byte_var_2": 1,
                    "pointer_to_byte": 1
                },
                "pbVar7": {
                    "buffer": 1,
                    "byte_pointer": 4,
                    "byte_pointer_variable": 1,
                    "byte_ptr": 1,
                    "byte_var": 1,
                    "byte_var_ptr": 1,
                    "current_buffer": 1,
                    "pointer_of_byte_1": 1,
                    "pointer_to_byte": 7,
                    "pointer_to_byte_variable": 3,
                    "var_24": 1
                },
                "pcVar10": {
                    "char_pointer_variable": 1,
                    "char_var": 1,
                    "error_message": 3,
                    "format_string": 1,
                    "message": 1,
                    "output": 1,
                    "pointer_of_character_1": 1,
                    "pointer_to_char": 2,
                    "pointer_to_char_10": 1,
                    "pointer_to_char_variable": 1,
                    "pointer_to_char_variable10": 1,
                    "pointer_to_character": 5,
                    "pointer_to_character10": 1,
                    "pointer_to_character_variable": 1,
                    "string": 1,
                    "string_var": 2,
                    "temp_pointer": 1,
                    "var_9": 1
                },
                "pcVar15": {
                    "char_pointer_variable": 1,
                    "char_var2": 1,
                    "pointer_of_character_2": 1,
                    "pointer_to_char": 2,
                    "pointer_to_char_15": 1,
                    "pointer_to_char_variable": 1,
                    "pointer_to_char_variable15": 1,
                    "pointer_to_character": 3,
                    "pointer_to_character1": 1,
                    "pointer_to_character15": 1,
                    "pointer_to_character_variable": 1,
                    "source_signature": 1,
                    "string": 1,
                    "string_var2": 1,
                    "string_var_2": 1,
                    "temp_pointer": 1,
                    "temp_pointer_1": 1,
                    "temp_string1": 1,
                    "var_8": 1
                },
                "pcVar16": {
                    "buffer_pointer": 1,
                    "char_pointer_variable": 1,
                    "char_var3": 1,
                    "current_signature": 1,
                    "formatted_string": 1,
                    "pointer_of_character_3": 1,
                    "pointer_to_char": 2,
                    "pointer_to_char_16": 1,
                    "pointer_to_char_variable": 1,
                    "pointer_to_char_variable16": 1,
                    "pointer_to_character": 3,
                    "pointer_to_character16": 1,
                    "pointer_to_character2": 1,
                    "pointer_to_character_variable": 1,
                    "string_var3": 1,
                    "string_var_3": 1,
                    "temp_pointer_2": 1,
                    "temp_string2": 1,
                    "var_7": 1
                },
                "pcVar36": {
                    "another_string_variable": 1
                },
                "piVar34": {
                    "errno_location": 1,
                    "error_code_ptr": 1,
                    "error_number": 2,
                    "int_pointer": 2,
                    "int_pointer34": 1,
                    "int_pointer_variable": 1,
                    "int_ptr": 1,
                    "int_var_ptr": 1,
                    "integer_pointer": 2,
                    "pointer3": 1,
                    "pointer_of_integer_1": 1,
                    "pointer_to_int": 1,
                    "pointer_to_integer": 4,
                    "pointer_to_integer_34": 1,
                    "pointer_to_integer_variable": 1,
                    "pointer_to_integer_variable34": 1,
                    "ptr34": 1,
                    "temp_pointer_int": 1,
                    "var_63": 1
                },
                "piVar36": {
                    "another_integer_pointer": 1
                },
                "plVar12": {
                    "current_archive": 1,
                    "long_pointer": 1,
                    "long_pointer12": 1,
                    "long_pointer2": 1,
                    "pointer2": 2,
                    "pointer_long_variable": 1,
                    "pointer_of_long_2": 1,
                    "pointer_to_long": 4,
                    "pointer_to_long3": 1,
                    "pointer_to_long_12": 1,
                    "pointer_to_long_variable": 2,
                    "pointer_to_long_variable12": 1,
                    "ptr12": 1,
                    "ptr_temp2": 1,
                    "temp_long_pointer": 1,
                    "var_71": 1
                },
                "plVar15": {
                    "file_address": 1
                },
                "plVar21": {
                    "current_pointer": 1
                },
                "plVar42": {
                    "another_pointer_variable": 1
                },
                "plVar5": {
                    "current_file_address": 1,
                    "long_pointer": 3,
                    "long_ptr": 1,
                    "long_var_ptr": 1,
                    "pointer": 1,
                    "pointer_long_variable": 1,
                    "pointer_of_long_1": 1,
                    "pointer_to_long": 5,
                    "pointer_to_long2": 1,
                    "pointer_to_long_1": 1,
                    "pointer_to_long_variable": 3,
                    "ptr5": 1,
                    "ptr_temp": 1,
                    "var_70": 1
                },
                "ppFVar3": {
                    "current_file": 1,
                    "double_pointer_pointer": 1,
                    "double_pointer_to_file": 4,
                    "file_pointer": 1,
                    "file_pointer_array": 1,
                    "file_pointer_ptr": 1,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "pointer_pointer_file_variable": 1,
                    "pointer_to_file_pointer": 1,
                    "pointer_to_file_pointer_variable": 1,
                    "pointer_to_pointer_of_file": 1,
                    "pointer_to_pointer_of_file_1": 1,
                    "pointer_to_pointer_to_file": 2,
                    "pointer_to_pointer_to_file_variable": 2,
                    "ptr3": 1,
                    "var_21": 1
                },
                "ppcVar27": {
                    "another_pointer_array": 1,
                    "char_pointer_pointer": 1,
                    "current_file": 1,
                    "double_pointer_pointer27": 1,
                    "double_pointer_to_character": 3,
                    "file_name_list": 1,
                    "file_path_ptr": 1,
                    "open_archives": 1,
                    "pointer_pointer_char_variable": 1,
                    "pointer_to_character": 1,
                    "pointer_to_pointer_of_char": 1,
                    "pointer_to_pointer_of_character_1": 1,
                    "pointer_to_pointer_to_char": 1,
                    "pointer_to_pointer_to_char_27": 1,
                    "pointer_to_pointer_to_char_variable": 1,
                    "pointer_to_pointer_to_char_variable27": 1,
                    "pointer_to_pointer_to_character_variable": 1,
                    "previous_filenames": 1,
                    "ptr27": 1,
                    "string_array_var": 1,
                    "string_ptr_ptr": 1,
                    "temp_pointer_array": 1
                },
                "ppcVar29": {
                    "char_pointer_pointer2": 1,
                    "current_buffer_pointer": 1,
                    "current_filenames": 1,
                    "current_string": 1,
                    "double_pointer_pointer29": 1,
                    "double_pointer_to_character": 3,
                    "file_list": 2,
                    "filename_list": 1,
                    "function_pointer_array": 1,
                    "function_stack": 1,
                    "new_string_ptr_ptr": 1,
                    "pointer_pointer_char_variable": 1,
                    "pointer_to_pointer_of_char": 1,
                    "pointer_to_pointer_of_character_2": 1,
                    "pointer_to_pointer_to_char": 1,
                    "pointer_to_pointer_to_char_29": 1,
                    "pointer_to_pointer_to_char_variable": 1,
                    "pointer_to_pointer_to_char_variable29": 1,
                    "pointer_to_pointer_to_character_variable": 1,
                    "ptr29": 1
                },
                "ppcVar38": {
                    "char_pointer_pointer3": 1,
                    "current_directory": 1,
                    "double_pointer_to_character": 2,
                    "file_name_list2": 1,
                    "new_file": 1,
                    "new_string_ptr": 1,
                    "pointer_pointer_char_variable": 1,
                    "pointer_to_pointer_of_char": 1,
                    "pointer_to_pointer_of_character_3": 1,
                    "pointer_to_pointer_to_char": 1,
                    "pointer_to_pointer_to_char_38": 1,
                    "pointer_to_pointer_to_char_variable": 1,
                    "ptr38": 1,
                    "temp_filename_list_2": 1,
                    "temporary_pointer_array": 1,
                    "var_12": 1
                },
                "pplVar1": {
                    "double_pointer": 4,
                    "pointer_pointer_long_variable": 1,
                    "pointer_to_long1": 1,
                    "pointer_to_long_pointer_1": 1,
                    "pointer_to_long_variable": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_pointer_of_long_1": 1,
                    "pointer_to_pointer_to_long": 1,
                    "pointer_to_pointer_to_long_variable": 1,
                    "pointer_to_pointer_variable": 1,
                    "ptr1": 1
                },
                "pppVar1": {
                    "double_pointer_to_long": 1
                },
                "ptr_temp_buffer": {
                    "ptr_temp_buffer": 1
                },
                "puVar22": {
                    "new_signature_entry": 1,
                    "pointer": 2,
                    "pointer_of_undefined8_1": 1,
                    "pointer_to_undefined8": 2,
                    "pointer_to_undefined8_variable": 2,
                    "pointer_to_unsigned_22": 1,
                    "pointer_to_unsigned_long": 1,
                    "pointer_to_unsigned_long8": 1,
                    "pointer_to_unsigned_var22": 1,
                    "pointer_to_unsigned_variable22": 1,
                    "pointer_var1": 1,
                    "ptr22": 1,
                    "temp_void_pointer": 1,
                    "undefined8_pointer": 1,
                    "undefined8_pointer22": 1,
                    "undefined8_pointer_variable": 1,
                    "undefined_var_ptr": 1,
                    "unsigned_long_pointer": 1,
                    "var_69": 1
                },
                "puVar23": {
                    "new_signature_entry_end": 1,
                    "pointer2": 1,
                    "pointer_of_undefined8_2": 1,
                    "pointer_to_undefined8": 2,
                    "pointer_to_undefined8_variable": 2,
                    "pointer_to_unsigned_23": 1,
                    "pointer_to_unsigned_long": 1,
                    "pointer_to_unsigned_long8": 1,
                    "pointer_to_unsigned_var23": 1,
                    "pointer_to_unsigned_variable23": 1,
                    "pointer_var2": 1,
                    "ptr23": 1,
                    "undefined8_pointer2": 1,
                    "undefined8_pointer23": 1,
                    "undefined8_pointer_variable": 1,
                    "undefined_var_ptr_2": 1,
                    "unsigned_long_pointer": 1,
                    "var_72": 1
                },
                "pvVar14": {
                    "pointer4": 1,
                    "pointer_of_void_1": 1,
                    "pointer_to_void": 5,
                    "pointer_to_void_14": 1,
                    "pointer_to_void_variable": 1,
                    "pointer_to_void_variable14": 1,
                    "pointer_variable": 1,
                    "ptr": 1,
                    "temp_pointer": 1,
                    "temp_pointer_void": 1,
                    "void_pointer": 4,
                    "void_pointer_variable": 1,
                    "void_ptr": 1,
                    "void_var": 1
                },
                "sVar13": {
                    "bytes_read": 2,
                    "size": 4,
                    "size_t": 1,
                    "size_t_1": 1,
                    "size_t_var": 1,
                    "size_t_var_13": 1,
                    "size_t_variable": 3,
                    "size_var": 2,
                    "size_var13": 3,
                    "size_variable": 2,
                    "size_variable13": 1,
                    "temp_size_t": 1,
                    "var_65": 1
                },
                "sVar43": {
                    "string_variable": 1
                },
                "superLongVariableName": {
                    "short_name": 1
                },
                "temporary": {
                    "temporary_variable": 1
                },
                "uVar11": {
                    "argument_var2": 1,
                    "string": 1,
                    "temp_ulong_3": 1,
                    "temporary_var": 1,
                    "tmp": 1,
                    "undefined8": 1,
                    "undefined8_2": 1,
                    "undefined8_var2": 1,
                    "undefined8_variable": 4,
                    "undefined_var11": 1,
                    "undefined_var2": 1,
                    "unsigned_long": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var11": 2,
                    "unsigned_variable11": 1,
                    "unsigned_variable2": 1,
                    "variable11": 1
                },
                "uVar19": {
                    "loop_var1": 1,
                    "loop_variable": 1,
                    "temp_ulong_2": 1,
                    "temp_unsigned_long3": 1,
                    "temp_variable": 1,
                    "ulong_1": 1,
                    "ulong_var": 3,
                    "ulong_var19": 1,
                    "ulong_variable": 3,
                    "unsigned_long": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var19": 2,
                    "unsigned_variable19": 1,
                    "var_2": 1,
                    "variable19": 1,
                    "variable7": 1
                },
                "uVar20": {
                    "action": 1,
                    "i": 1,
                    "loop_var2": 1,
                    "temp_uint_3": 1,
                    "temp_unsigned_int2": 1,
                    "temp_var": 1,
                    "temp_variable2": 1,
                    "uint_1": 1,
                    "uint_var": 3,
                    "uint_var20": 1,
                    "uint_variable": 3,
                    "unsigned_integer": 1,
                    "unsigned_integer_variable": 1,
                    "unsigned_var20": 2,
                    "unsigned_variable20": 1,
                    "var_61": 1,
                    "variable20": 1,
                    "variable8": 1
                },
                "uVar24": {
                    "loop_var3": 1,
                    "loop_variable": 1,
                    "temp": 1,
                    "temp_uint_2": 1,
                    "temp_unsigned_int4": 1,
                    "temp_var2": 1,
                    "temp_variable4": 1,
                    "uint": 1,
                    "uint_2": 1,
                    "uint_var2": 2,
                    "uint_var24": 1,
                    "uint_var_2": 1,
                    "uint_variable": 3,
                    "unsigned_integer": 1,
                    "unsigned_integer_variable": 2,
                    "unsigned_var24": 2,
                    "unsigned_var_24": 1,
                    "unsigned_variable24": 1,
                    "var_53": 1,
                    "variable24": 1,
                    "variable9": 1
                },
                "uVar26": {
                    "loop_var4": 1,
                    "loop_variable2": 1,
                    "temp2": 1,
                    "temp_ulong": 1,
                    "temp_unsigned_long2": 1,
                    "temp_var3": 1,
                    "temp_variable3": 1,
                    "ulong": 1,
                    "ulong_2": 1,
                    "ulong_var2": 2,
                    "ulong_var26": 1,
                    "ulong_var_2": 1,
                    "ulong_variable": 3,
                    "unsigned_integer_variable": 1,
                    "unsigned_long": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var26": 2,
                    "unsigned_var_26": 1,
                    "unsigned_variable26": 1,
                    "var_55": 1,
                    "variable10": 1
                },
                "uVar36": {
                    "temp": 1,
                    "temp_uint": 1,
                    "temp_unsigned_int1": 1,
                    "uint_var3": 2,
                    "uint_var36": 1,
                    "uint_variable": 1,
                    "unsigned_var36": 1,
                    "unsigned_var_36": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable36": 1
                },
                "uVar39": {
                    "temp_variable5": 1,
                    "unsigned_variable39": 1
                },
                "uVar40": {
                    "temp_variable6": 1
                },
                "uVar41": {
                    "another_temp_variable": 1
                },
                "uVar42": {
                    "yet_another_temp_variable": 1
                },
                "uVar6": {
                    "argument_var1": 1,
                    "file_size": 1,
                    "temp_ulong_4": 1,
                    "undefined8": 1,
                    "undefined8_1": 1,
                    "undefined8_var": 1,
                    "undefined8_variable": 4,
                    "undefined_var": 1,
                    "undefined_var6": 1,
                    "undefined_var_6": 1,
                    "unsigned_long": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var6": 2,
                    "unsigned_var_6": 1,
                    "unsigned_variable1": 1,
                    "unsigned_variable6": 1,
                    "value": 1,
                    "var_23": 1,
                    "variable6": 1
                },
                "xstrdup": {
                    "duplicate_string": 1
                }
            },
            "called": [
                "free",
                "FUN_00103ddc",
                "filename_cmp",
                "FUN_00105bc0",
                "fclose",
                "unlink",
                "malloc",
                "FUN_001032a8",
                "FUN_0010300e",
                "fread",
                "FUN_001030ed",
                "clearerr",
                "FUN_00105300",
                "dcgettext",
                "bfd_openr",
                "ferror",
                "getc",
                "__errno_location",
                "FUN_001033b0",
                "FUN_00103ba8",
                "bfd_close",
                "FUN_001031cf",
                "fwrite",
                "FUN_001033d6",
                "FUN_001031a5",
                "FUN_00103c60",
                "printf",
                "FUN_00103df9",
                "FUN_0010315d",
                "FUN_00107740",
                "bfd_openw",
                "bfd_set_format",
                "dup",
                "realloc",
                "fprintf",
                "stat",
                "FUN_0010312d",
                "fopen",
                "bfd_cache_close",
                "xstrdup"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid decompiled_function_00103e95(void)\n\n{\n  long **double_pointer;\n  char char_variable;\n  FILE **double_pointer_to_file;\n  FILE *pointer_to_file;\n  long *pointer_to_long;\n  undefined8 undefined8_variable;\n  byte *pointer_to_byte;\n  int integer_var8;\n  char *pointer_to_character;\n  undefined8 undefined8_variable;\n  int integer_var9;\n  long *pointer_to_long;\n  size_t size;\n  void *pointer_to_void;\n  char *pointer_to_character;\n  char *pointer_to_character;\n  long long_variable;\n  long long_variable;\n  ulong ulong_variable;\n  uint uint_var;\n  long long_variable;\n  undefined8 *pointer;\n  undefined8 *pointer_to_undefined8_variable;\n  uint uint_variable;\n  int integer_var25;\n  ulong ulong_variable;\n  char **double_pointer_to_character;\n  bool bool_var;\n  char **double_pointer_to_character;\n  byte byte_variable;\n  long long_variable;\n  byte *pointer_to_byte;\n  byte *pointer_to_byte;\n  int *pointer_to_integer;\n  byte *pointer_to_byte;\n  uint uint_var3;\n  int int_var4;\n  char **double_pointer_to_character;\n  byte byte_variable;\n  undefined undefined_var40 [16];\n  undefined undefined_var41 [16];\n  char *current_char;\n  char *local_pointer_to_character;\n  long buffer_size;\n  char **local_double_pointer_to_character;\n  int local_integer_variable;\n  uint local_uint_variable;\n  byte *local_pointer_to_byte_variable;\n  stat file_stat;\n  char temp_buffer [200];\n  char *local_array_of_pointer_to_char_678 [201];\n  \n  byte_variable = 0;\n  long_variable = 0;\n  DAT_0010d550 = -2;\n  double_pointer_to_character = local_array_of_pointer_to_char_678;\n  local_integer_variable = 0;\n  current_char = temp_buffer;\n  buffer_size = 200;\n  local_pointer_to_character = current_char;\n  local_double_pointer_to_character = double_pointer_to_character;\nLAB_00103ee9:\n  *current_char = (char)long_variable;\n  if (local_pointer_to_character + buffer_size + -1 <= current_char) {\n    long_variable = (long)current_char - (long)local_pointer_to_character;\n    long_variable = long_variable + 1;\n    if (buffer_size < 10000) {\n      long_variable = buffer_size * 2;\n      buffer_size = 10000;\n      if (long_variable < 0x2711) {\n        buffer_size = long_variable;\n      }\n      pointer_to_character = (char *)malloc(buffer_size * 9 + 7);\n      if (pointer_to_character != (char *)0x0) {\n        long_variable = long_variable * 8;\n        pointer_to_character = local_pointer_to_character;\n        pointer_to_character = pointer_to_character;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *pointer_to_character = *pointer_to_character;\n          pointer_to_character = pointer_to_character + (ulong)byte_variable * -2 + 1;\n          pointer_to_character = pointer_to_character + (ulong)byte_variable * -2 + 1;\n        }\n        double_pointer_to_character = (char **)(pointer_to_character + buffer_size);\n        double_pointer_to_character = double_pointer_to_character;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *(undefined *)double_pointer_to_character = *(undefined *)local_double_pointer_to_character;\n          local_double_pointer_to_character = (char **)((long)local_double_pointer_to_character + (ulong)byte_variable * -2 + 1);\n          double_pointer_to_character = (char **)((long)double_pointer_to_character + (ulong)byte_variable * -2 + 1);\n        }\n        if (local_pointer_to_character != temp_buffer) {\n          free(local_pointer_to_character);\n        }\n        current_char = pointer_to_character + long_variable;\n        double_pointer_to_character = double_pointer_to_character + long_variable;\n        local_pointer_to_character = pointer_to_character;\n        local_double_pointer_to_character = double_pointer_to_character;\n        if (pointer_to_character + buffer_size + -1 <= current_char) goto LAB_00105265;\n        goto LAB_00103fd8;\n      }\n    }\n    FUN_001031a5();\nLAB_0010524c:\n    pointer_to_character = local_pointer_to_character;\n    if (local_pointer_to_character == temp_buffer) {\n      return;\n    }\nLAB_00105265:\n    free(pointer_to_character);\n    return;\n  }\nLAB_00103fd8:\n  int_var4 = (int)long_variable;\n  if (int_var4 == 3) goto LAB_0010524c;\n  char_variable = (&DAT_0010a200)[int_var4];\n  if (char_variable != -0xe) {\n    if (DAT_0010d550 == -2) {\n      if (_DAT_0010d540 == 0) {\n        _DAT_0010d540 = 1;\n        if (DAT_0010d5d0 == 0) {\n          DAT_0010d5d0 = 1;\n        }\n        if (DAT_0010d590 == (FILE *)0x0) {\n          DAT_0010d590 = temp_file_pointer_3;\n        }\n        if (DAT_0010d538 == (FILE *)0x0) {\n          DAT_0010d538 = temp_file_pointer_1;\n        }\n        if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n          FUN_00103df9();\n          pointer = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          undefined8_variable = FUN_001033d6(DAT_0010d590);\n          *pointer = undefined8_variable;\n        }\n        FUN_001030ed();\n      }\nLAB_001040b1:\n      *DAT_0010d5b0 = DAT_0010d588;\n      pointer_to_byte = DAT_0010d5b0;\n      pointer_to_byte = DAT_0010d5b0;\n      uint_var = DAT_0010d5d0;\nLAB_001040d4:\n      ulong_variable = (ulong)uint_var;\n      ulong_variable = (ulong)local_uint_variable;\n      bool_var = false;\n      do {\n        byte_variable = (&DAT_0010ab00)[*pointer_to_byte];\n        if (*(short *)(&DAT_0010a980 + (long)(int)ulong_variable * 2) != 0) {\n          bool_var = true;\n          ulong_variable = ulong_variable & 0xffffffff;\n          local_pointer_to_byte_variable = pointer_to_byte;\n        }\n        while( true ) {\n          integer_var8 = (int)ulong_variable;\n          long_variable = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)integer_var8 * 2) + (uint)byte_variable);\n          if (integer_var8 == *(short *)(&DAT_0010a440 + long_variable * 2)) break;\n          ulong_variable = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)integer_var8 * 2);\n          if (0xb0 < *(short *)(&DAT_0010a800 + (long)integer_var8 * 2)) {\n            byte_variable = (&DAT_0010a7c0)[(int)(uint)byte_variable];\n          }\n        }\n        pointer_to_byte = pointer_to_byte + 1;\n        ulong_variable = (ulong)*(short *)(&DAT_0010a240 + long_variable * 2);\n      } while (*(short *)(&DAT_0010a640 + ulong_variable * 2) != 0xc2);\n      local_uint_variable = (uint)ulong_variable;\n      pointer_to_byte = pointer_to_byte;\n      if (bool_var) {\n        DAT_0010d5b8 = local_pointer_to_byte_variable;\n        DAT_0010d5c0 = local_uint_variable;\n      }\nLAB_0010419f:\n      integer_var8 = (int)*(short *)(&DAT_0010a980 + (long)(int)ulong_variable * 2);\n      if (integer_var8 == 0) {\n        integer_var8 = (int)*(short *)(&DAT_0010a980 + (long)(int)DAT_0010d5c0 * 2);\n        pointer_to_byte = DAT_0010d5b8;\n      }\n      DAT_0010d530 = (int)pointer_to_byte - (int)pointer_to_byte;\n      DAT_0010d588 = *pointer_to_byte;\n      DAT_0010d5b0 = pointer_to_byte;\n      DAT_0010d5c8 = pointer_to_byte;\n      *pointer_to_byte = 0;\nLAB_001041f0:\n      pointer_to_byte = DAT_0010d5c8;\n      long_variable = DAT_0010d5a0;\n      switch(integer_var8) {\n      case 0:\n        goto switchD_00104200_caseD_0;\n      case 1:\n      case 0x10:\n        DAT_0010d550 = 0x105;\n        break;\n      case 2:\n      case 0x11:\n        DAT_0010d550 = 0x107;\n        break;\n      case 3:\n      case 0x12:\n        DAT_0010d550 = 0x108;\n        break;\n      case 4:\n      case 0x13:\n        DAT_0010d550 = 0x109;\n        break;\n      case 5:\n      case 0x14:\n        DAT_0010d550 = 0x10a;\n        break;\n      case 6:\n      case 0x15:\n        DAT_0010d550 = 0x10b;\n        break;\n      case 7:\n      case 0x16:\n        DAT_0010d550 = 0x10c;\n        break;\n      case 8:\n      case 0x17:\n        DAT_0010d550 = 0x10d;\n        break;\n      case 9:\n      case 0x18:\n        DAT_0010d550 = 0x10e;\n        break;\n      case 10:\n      case 0x19:\n        DAT_0010d550 = 0x10f;\n        break;\n      case 0xb:\n      case 0x1a:\n        DAT_0010d550 = 0x106;\n        break;\n      case 0xc:\n      case 0x1b:\n        DAT_0010d550 = 0x113;\n        break;\n      case 0xd:\n      case 0x1c:\n        DAT_0010d550 = 0x111;\n        break;\n      case 0xe:\n      case 0x1d:\n        DAT_0010d550 = 0x103;\n        break;\n      case 0x1f:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        goto LAB_001040b1;\n      case 0x20:\n        DAT_0010d550 = 0x28;\n        break;\n      case 0x21:\n        DAT_0010d550 = 0x29;\n        break;\n      case 0x22:\n        DAT_0010d550 = 0x2c;\n        break;\n      case 0x23:\n        DAT_0010d548 = (char *)xstrdup(DAT_0010d5c8);\n        DAT_0010d550 = 0x104;\n        break;\n      case 0x24:\n      case 0x25:\n      case 0x26:\n        goto LAB_001040b1;\n      case 0x27:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        DAT_0010d550 = 0x102;\n        break;\n      case 0x28:\n        fwrite(DAT_0010d5c8,(long)DAT_0010d530,1,DAT_0010d538);\n        goto LAB_001040b1;\n      case 0x29:\n        goto switchD_00104200_caseD_29;\n      case 0x2a:\n        DAT_0010d550 = 0;\n        break;\n      default:\n        FUN_001033b0(\"fatal flex scanner internal error--no action found\");\n      case 0xf:\n      case 0x1e:\n        DAT_0010d550 = 0x112;\n      }\n      long_variable = (long)int_var4;\n    }\n    if (0 < DAT_0010d550) {\n      if (DAT_0010d550 != 0x100) {\n        int_var4 = 2;\n        if (DAT_0010d550 < 0x114) {\n          int_var4 = (int)(char)(&DAT_0010a0e0)[DAT_0010d550];\n        }\n        goto LAB_0010497d;\n      }\n      DAT_0010d550 = 0x101;\n      goto LAB_001051f0;\n    }\n    int_var4 = 0;\n    DAT_0010d550 = 0;\nLAB_0010497d:\n    uint_var = char_variable + int_var4;\n    if ((0x22 < uint_var) || (int_var4 != (char)(&DAT_0010a0a0)[(int)uint_var])) goto LAB_001049db;\n    char_variable = (&DAT_0010a060)[(int)uint_var];\n    long_variable = (long)char_variable;\n    if (char_variable < '\\x01') {\n      int_var4 = -(int)char_variable;\n      goto LAB_00104a0a;\n    }\n    DAT_0010d550 = -2;\n    local_integer_variable = local_integer_variable + -1 + (uint)(local_integer_variable == 0);\n    double_pointer_to_character = double_pointer_to_character + 1;\n    *double_pointer_to_character = DAT_0010d548;\n    goto LAB_001049d1;\n  }\nLAB_001049db:\n  int_var4 = (int)(char)(&DAT_0010a020)[(int)long_variable];\n  if ((&DAT_0010a020)[(int)long_variable] == '\\0') {\n    if (local_integer_variable == 0) {\n      _DAT_0010d544 = _DAT_0010d544 + 1;\n      FUN_001031a5();\nLAB_001051f0:\n      do {\n        if (((((char)(&DAT_0010a200)[long_variable] != -0xe) &&\n             (uint_var = (int)(char)(&DAT_0010a200)[long_variable] + 1, uint_var < 0x23)) &&\n            ((&DAT_0010a0a0)[(int)uint_var] == '\\x01')) &&\n           (long_variable = (long)(char)(&DAT_0010a060)[(int)uint_var],\n           '\\0' < (char)(&DAT_0010a060)[(int)uint_var])) goto LAB_00105227;\n        if (local_pointer_to_character == current_char) goto LAB_0010524c;\n        current_char = current_char + -1;\n        double_pointer_to_character = double_pointer_to_character + -1;\n        long_variable = (long)*current_char;\n      } while( true );\n    }\n    if (local_integer_variable != 3) goto LAB_001051f0;\n    if (0 < DAT_0010d550) {\n      DAT_0010d550 = -2;\n      goto LAB_001051f0;\n    }\n    if (DAT_0010d550 != 0) goto LAB_001051f0;\n    goto LAB_0010524c;\n  }\nLAB_00104a0a:\n  undefined8_variable = DAT_0010d660;\n  double_pointer_to_character = DAT_0010d558;\n  char_variable = (&DAT_00109fe0)[int_var4];\n  double_pointer_to_character = (char **)double_pointer_to_character[1 - char_variable];\n  switch(int_var4) {\n  case 2:\n  case 6:\n    FUN_00103ba8();\n    break;\n  case 0x13:\n    if (DAT_0010d558 == (char **)0x0) {\n      return;\n    }\n    bfd_cache_close();\n    unlink(*DAT_0010d558);\n    return;\n  case 0x15:\n    FUN_001031a5();\n    break;\n  case 0x17:\n    pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\n      pointer_to_character = \"%s: no open archive\\n\";\nLAB_00104b62:\n      pointer_to_character = (char *)dcgettext(0,pointer_to_character,5);\n      fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable);\n      FUN_0010315d();\n    }\n    else {\n      for (; pointer != (undefined8 *)0x0; pointer = (undefined8 *)pointer[1]) {\n        for (pointer_to_undefined8_variable = (undefined8 *)DAT_0010d558[0x1f]; pointer_to_undefined8_variable != (undefined8 *)0x0;\n            pointer_to_undefined8_variable = (undefined8 *)pointer_to_undefined8_variable[0x1e]) {\n          integer_var8 = filename_cmp(*pointer_to_undefined8_variable);\n          if (integer_var8 == 0) {\n            FUN_00107740();\n            goto LAB_00104adf;\n          }\n        }\n        bfd_openr(*pointer,0);\n        undefined8_variable = DAT_0010d660;\n        undefined8_variable = *pointer;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable,undefined8_variable);\nLAB_00104adf:\n      }\n    }\n    break;\n  case 0x18:\n    pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\nLAB_00104b4f:\n      pointer_to_character = \"%s: no open output archive\\n\";\n      goto LAB_00104b62;\n    }\n    for (; pointer != (undefined8 *)0x0; pointer = (undefined8 *)pointer[1]) {\n      bool_var = false;\n      double_pointer_to_character = DAT_0010d558 + 0x1f;\n      for (pointer_to_character = DAT_0010d558[0x1f]; pointer_to_character != (char *)0x0;\n          pointer_to_character = *(char **)(pointer_to_character + 0xf0)) {\n        integer_var8 = filename_cmp();\n        if (integer_var8 == 0) {\n          pointer_to_character = (char *)bfd_openr(*pointer,0);\n          undefined8_variable = DAT_0010d660;\n          if (pointer_to_character == (char *)0x0) {\n            undefined8_variable = *pointer;\n            pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n            fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable,undefined8_variable);\n            FUN_0010315d();\n          }\n          else {\n            *double_pointer_to_character = pointer_to_character;\n            bool_var = true;\n            *(undefined8 *)(pointer_to_character + 0xf0) = *(undefined8 *)(pointer_to_character + 0xf0);\n          }\n        }\n        else {\n          double_pointer_to_character = (char **)(pointer_to_character + 0xf0);\n        }\n      }\n      if (!bool_var) {\n        pointer_to_character = (char *)bfd_openr(*pointer,0);\n        undefined8_variable = DAT_0010d660;\n        undefined8_variable = *pointer;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable,undefined8_variable);\n        undefined8_variable = DAT_0010d660;\n        if (pointer_to_character == (char *)0x0) {\n          undefined8_variable = *pointer;\n          pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n          fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable,undefined8_variable);\n          FUN_0010315d();\n        }\n        else {\n          *double_pointer_to_character = pointer_to_character;\n        }\n      }\n    }\n    break;\n  case 0x19:\n    if (DAT_0010d558 != (char **)0x0) {\n      DAT_0010d558[0x1f] = (char *)0x0;\n    }\n    break;\n  case 0x1a:\n    pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; pointer != (undefined8 *)0x0; pointer = (undefined8 *)pointer[1]) {\n      bool_var = false;\n      double_pointer_to_character = DAT_0010d558 + 0x1f;\n      for (pointer_to_undefined8_variable = (undefined8 *)DAT_0010d558[0x1f]; undefined8_variable = DAT_0010d660,\n          pointer_to_undefined8_variable != (undefined8 *)0x0; pointer_to_undefined8_variable = (undefined8 *)pointer_to_undefined8_variable[0x1e]) {\n        integer_var8 = filename_cmp(*pointer_to_undefined8_variable,*pointer);\n        if (integer_var8 == 0) {\n          bool_var = true;\n          *double_pointer_to_character = (char *)pointer_to_undefined8_variable[0x1e];\n        }\n        else {\n          double_pointer_to_character = (char **)(pointer_to_undefined8_variable + 0x1e);\n        }\n      }\n      if (!bool_var) {\n        undefined8_variable = *pointer;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable,undefined8_variable);\n        FUN_0010315d();\n      }\n    }\n    break;\n  case 0x1b:\n    pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; pointer != (undefined8 *)0x0; pointer = (undefined8 *)pointer[1]) {\n      pointer_to_character = (char *)bfd_openr(*pointer,\"plugin\");\n      undefined8_variable = DAT_0010d660;\n      double_pointer_to_character = DAT_0010d558;\n      if (pointer_to_character == (char *)0x0) {\n        undefined8_variable = *pointer;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n        fprintf(temp_file_pointer_2,pointer_to_character,undefined8_variable,undefined8_variable);\n        FUN_0010315d();\n      }\n      else {\n        *(char **)(pointer_to_character + 0xf0) = DAT_0010d558[0x1f];\n        double_pointer_to_character[0x1f] = pointer_to_character;\n      }\n    }\n    break;\n  case 0x1c:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    pointer_to_character = *DAT_0010d558;\n    DAT_0010d60c = 1;\n    DAT_0010d578 = temp_file_pointer_1;\n    pointer_to_character = (char *)dcgettext(0,\"Current open archive is %s\\n\",5);\n    printf(pointer_to_character,pointer_to_character);\n    for (pointer_to_character = DAT_0010d558[0x1f]; pointer_to_character != (char *)0x0; pointer_to_character = *(char **)(pointer_to_character + 0xf0))\n    {\n      FUN_00103ddc(pointer_to_character,0);\n    }\n    break;\n  case 0x1d:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    if (0 < _DAT_0010d2d0) {\n      *(uint *)((long)DAT_0010d558 + 0x44) = *(uint *)((long)DAT_0010d558 + 0x44) | 0x2000;\n    }\n    DAT_0010d568 = dup(DAT_0010d568);\n    bfd_close(double_pointer_to_character);\n    pointer_to_character = DAT_0010d570;\n    integer_var8 = stat(DAT_0010d570,&file_stat);\n    if ((integer_var8 != 0) && (DAT_0010d558 = (char **)bfd_openw(pointer_to_character,0), DAT_0010d558 != (char **)0x0)\n       ) {\n      bfd_set_format(DAT_0010d558,2);\n      bfd_close(DAT_0010d558);\n    }\n    FUN_00105bc0(DAT_0010d560,DAT_0010d570,DAT_0010d568);\n    DAT_0010d558 = (char **)0x0;\n    free(DAT_0010d560);\n    free(DAT_0010d570);\n    break;\n  case 0x1e:\n    FUN_00103c60(*double_pointer_to_character,0);\n    break;\n  case 0x1f:\n    FUN_00103c60(*double_pointer_to_character,1);\n    break;\n  case 0x20:\n    pointer_to_character = *double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\n      pointer_to_character = \"%s: no output archive specified yet\\n\";\n      goto LAB_00104b62;\n    }\n    long_variable = FUN_00105300(double_pointer_to_character[-1],0);\n    if (long_variable != 0) {\n      FUN_001032a8(long_variable,FUN_0010312d,pointer_to_character);\n    }\n    break;\n  case 0x21:\n    pointer_to_character = *double_pointer_to_character;\n    pointer_to_character = double_pointer_to_character[-1];\n    undefined8_variable = FUN_00105300(double_pointer_to_character[-2],0);\n    if (pointer_to_character == (char *)0x0) {\n      DAT_0010d578 = temp_file_pointer_1;\n    }\n    else {\n      DAT_0010d578 = fopen(pointer_to_character,\"w\");\n      if (DAT_0010d578 != (FILE *)0x0) {\n        FUN_001032a8(undefined8_variable,FUN_00103ddc,pointer_to_character);\n        bfd_close(undefined8_variable);\n        fclose(DAT_0010d578);\n        break;\n      }\n      DAT_0010d578 = temp_file_pointer_1;\n      pointer_to_character = (char *)dcgettext(0,\"Can\\'t open file %s\\n\",5);\n      fprintf(temp_file_pointer_2,pointer_to_character,pointer_to_character);\n    }\n    FUN_001032a8(undefined8_variable,FUN_00103ddc,pointer_to_character);\n    bfd_close(undefined8_variable);\n    break;\n  case 0x22:\n    double_pointer_to_character = (char **)*double_pointer_to_character;\n    break;\n  case 0x23:\n  case 0x25:\n  case 0x27:\n    double_pointer_to_character = (char **)0x0;\n    break;\n  case 0x24:\n    double_pointer_to_character = (char **)double_pointer_to_character[-1];\n    break;\n  case 0x26:\n    double_pointer_to_character = (char **)malloc(0x10);\n    pointer_to_character = double_pointer_to_character[-2];\n    *double_pointer_to_character = *double_pointer_to_character;\n    double_pointer_to_character[1] = pointer_to_character;\n    break;\n  case 0x2a:\n    DAT_0010d60c = (uint)(DAT_0010d60c == 0);\n  }\n  long_variable = (long)char_variable;\n  current_char = current_char + -long_variable;\n  double_pointer_to_character[1 - long_variable] = (char *)double_pointer_to_character;\n  double_pointer_to_character = double_pointer_to_character + (1 - long_variable);\n  uint_var = (int)(char)(&DAT_00109f80)[(char)(&DAT_00109fa0)[int_var4] + -0x18] + (int)*current_char;\n  if ((uint_var < 0x23) && (*current_char == (&DAT_0010a0a0)[(int)uint_var])) {\n    long_variable = (long)(char)(&DAT_0010a060)[(int)uint_var];\n  }\n  else {\n    long_variable = (long)(char)(&DAT_00109f60)[(char)(&DAT_00109fa0)[int_var4] + -0x18];\n  }\n  goto LAB_001049d1;\nswitchD_00104200_caseD_29:\n  integer_var8 = ((int)pointer_to_byte - (int)DAT_0010d5c8) + -1;\n  *pointer_to_byte = DAT_0010d588;\n  double_pointer = (long **)(DAT_0010d5a8 + long_variable * 8);\n  double_pointer_to_file = (FILE **)*double_pointer;\n  if (*(int *)(double_pointer_to_file + 7) == 0) {\n    DAT_0010d598 = *(uint *)((long)double_pointer_to_file + 0x1c);\n    *(undefined4 *)(double_pointer_to_file + 7) = 1;\n    *double_pointer_to_file = DAT_0010d590;\n  }\n  pointer_to_byte = DAT_0010d5b0;\n  pointer_to_file = double_pointer_to_file[1];\n  undefined_var40._8_8_ = pointer_to_file;\n  undefined_var40._0_8_ = double_pointer_to_file;\n  if ((byte *)((long)&pointer_to_file->_flags + (long)(int)DAT_0010d598) < DAT_0010d5b0) {\n    if ((byte *)((long)&pointer_to_file->_flags + (long)(int)DAT_0010d598 + 1) < DAT_0010d5b0) {\n      undefined_var40 = FUN_001033b0();\n    }\n    if (*(int *)(undefined_var40._0_8_ + 0x34) != 0) {\n      uint_var = (int)((long)pointer_to_byte - (long)pointer_to_byte) - 1;\n      for (long_variable = 0; (int)long_variable < (int)uint_var; long_variable = long_variable + 1) {\n        *(byte *)(undefined_var40._8_8_ + long_variable) = pointer_to_byte[long_variable];\n      }\n      pointer_to_long = *double_pointer;\n      if (*(int *)(pointer_to_long + 7) == 2) {\n        DAT_0010d598 = 0;\n        *(undefined4 *)((long)pointer_to_long + 0x1c) = 0;\nLAB_0010475e:\n        pointer_to_file = DAT_0010d590;\n        if (uint_var == 0) {\n          if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n            FUN_00103df9();\n            pointer = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n            undefined8_variable = FUN_001033d6(pointer_to_file);\n            *pointer = undefined8_variable;\n          }\n          long_variable = DAT_0010d5a8;\n          if (DAT_0010d5a8 != 0) {\n            long_variable = *(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          }\n          integer_var9 = 1;\n          FUN_001031cf(long_variable);\n          FUN_001030ed();\n        }\n        else {\n          integer_var9 = 2;\n          *(undefined4 *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x38) = 2;\n        }\n      }\n      else {\n        while( true ) {\n          pointer_to_long = *double_pointer;\n          uint_variable = ~uint_var + *(int *)(pointer_to_long + 3);\n          if (0 < (int)uint_variable) break;\n          uint_variable = (int)DAT_0010d5b0 - (int)(void *)pointer_to_long[1];\n          if (*(int *)(pointer_to_long + 4) == 0) {\n            pointer_to_long[1] = 0;\nLAB_00104626:\n            FUN_001033b0();\n            break;\n          }\n          integer_var9 = *(int *)(pointer_to_long + 3);\n          integer_var25 = integer_var9;\n          if (integer_var9 < 1) {\n            integer_var25 = integer_var9 / 8;\n          }\n          *(int *)(pointer_to_long + 3) = integer_var25 + integer_var9;\n          pointer_to_void = realloc((void *)pointer_to_long[1],(long)(integer_var25 + integer_var9 + 2));\n          pointer_to_long[1] = (long)pointer_to_void;\n          if (pointer_to_void == (void *)0x0) goto LAB_00104626;\n          DAT_0010d5b0 = (byte *)((long)pointer_to_void + (long)(int)uint_variable);\n          pointer_to_long = *double_pointer;\n        }\n        if (0x2000 < (int)uint_variable) {\n          uint_variable = 0x2000;\n        }\n        ulong_variable = (ulong)uint_variable;\n        if (*(int *)((long)pointer_to_long + 0x24) == 0) {\n          pointer_to_integer = __errno_location();\n          ulong_variable = (ulong)(int)uint_variable;\n          ulong_variable = (ulong)(int)uint_var;\n          *pointer_to_integer = 0;\n          goto LAB_001046c7;\n        }\n        ulong_variable = 0;\n        pointer_to_integer = (int *)(long)(int)uint_var;\n        do {\n          integer_var9 = getc(DAT_0010d590);\n          uint_var3 = (uint)ulong_variable;\n          if (integer_var9 == -1) {\n            integer_var9 = ferror(DAT_0010d590);\n            uint_variable = uint_var3;\n            if (integer_var9 != 0) {\n              do {\n                pointer_to_character = \"input in flex scanner failed\";\n                FUN_001033b0();\n                do {\n                  *pointer_to_integer = 0;\n                  clearerr((FILE *)pointer_to_character);\nLAB_001046c7:\n                  size = fread((void *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)\n                                         + ulong_variable),1,ulong_variable,DAT_0010d590);\n                  pointer_to_character = (char *)DAT_0010d590;\n                  DAT_0010d598 = (uint)size;\n                  uint_variable = DAT_0010d598;\n                  if ((DAT_0010d598 != 0) ||\n                     (integer_var9 = ferror(DAT_0010d590), uint_variable = DAT_0010d598, integer_var9 == 0))\n                  goto LAB_00104738;\n                } while (*pointer_to_integer == 4);\n              } while( true );\n            }\n            break;\n          }\n          if (integer_var9 == 10) {\n            *(undefined *)\n             ((long)(int *)(long)(int)uint_var +\n             (long)(int)uint_var3 + *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)) = 10;\n            uint_variable = uint_var3 + 1;\n            break;\n          }\n          ulong_variable = (ulong)(uint_var3 + 1);\n          *(char *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8) + (long)pointer_to_integer) =\n               (char)integer_var9;\n          pointer_to_integer = (int *)((long)pointer_to_integer + 1);\n        } while (uint_variable != uint_var3 + 1);\nLAB_00104738:\n        DAT_0010d598 = uint_variable;\n        uint_variable = DAT_0010d598;\n        integer_var9 = 0;\n        *(uint *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x1c) = DAT_0010d598;\n        if (uint_variable == 0) goto LAB_0010475e;\n      }\n      pointer_to_long = (long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n      long_variable = *pointer_to_long;\n      uint_var = uint_var + DAT_0010d598;\n      if (*(int *)(long_variable + 0x18) < (int)uint_var) {\n        integer_var25 = ((int)DAT_0010d598 >> 1) + uint_var;\n        pointer_to_void = realloc(*(void **)(long_variable + 8),(long)integer_var25);\n        *(void **)(long_variable + 8) = pointer_to_void;\n        undefined_var41._8_8_ = pointer_to_long;\n        undefined_var41._0_8_ = *pointer_to_long;\n        if (*(long *)(*pointer_to_long + 8) == 0) {\n          undefined_var41 = FUN_001033b0();\n        }\n        pointer_to_long = undefined_var41._8_8_;\n        *(int *)(undefined_var41._0_8_ + 0x18) = integer_var25 + -2;\n      }\n      DAT_0010d598 = uint_var;\n      *(undefined *)(*(long *)(*pointer_to_long + 8) + (long)(int)uint_var) = 0;\n      *(undefined *)(*(long *)(*pointer_to_long + 8) + 1 + (long)(int)uint_var) = 0;\n      pointer_to_byte = *(byte **)(*pointer_to_long + 8);\n      DAT_0010d5c8 = pointer_to_byte;\n      if (integer_var9 == 1) goto LAB_001048a4;\n      if (integer_var9 == 2) goto LAB_001048ca;\n      pointer_to_byte = pointer_to_byte + integer_var8;\n      DAT_0010d5b0 = pointer_to_byte;\n      uint_var = FUN_0010300e();\n      goto LAB_001040d4;\n    }\n    if ((long)pointer_to_byte - (long)pointer_to_byte == 1) goto LAB_001048a4;\nLAB_001048ca:\n    pointer_to_byte = (byte *)((long)(int)DAT_0010d598 +\n                      *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8));\n    DAT_0010d5b0 = pointer_to_byte;\n    ulong_variable = FUN_0010300e();\n    pointer_to_byte = DAT_0010d5c8;\n    goto LAB_0010419f;\n  }\n  pointer_to_byte = pointer_to_byte + integer_var8;\n  DAT_0010d5b0 = pointer_to_byte;\n  ulong_variable = FUN_0010300e();\n  if (*(short *)(&DAT_0010a980 + (long)(int)(uint)ulong_variable * 2) != 0) {\n    DAT_0010d5b8 = pointer_to_byte;\n    DAT_0010d5c0 = (uint)ulong_variable;\n  }\n  ulong_variable = ulong_variable & 0xffffffff;\n  while( true ) {\n    integer_var8 = (int)ulong_variable;\n    if (integer_var8 == *(short *)(&DAT_0010a440 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)integer_var8 * 2) + 1) * 2)) break;\n    ulong_variable = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)integer_var8 * 2);\n  }\n  uint_var = (uint)*(short *)(&DAT_0010a240 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)integer_var8 * 2) + 1) * 2);\n  pointer_to_byte = pointer_to_byte;\n  if ((*(short *)(&DAT_0010a240 + (long)(*(short *)(&DAT_0010a640 + (long)integer_var8 * 2) + 1) * 2) == 0)\n     || (uint_var == 0xb0)) goto LAB_0010419f;\n  pointer_to_byte = pointer_to_byte + 1;\n  goto LAB_001040d4;\nLAB_001048a4:\n  DAT_0010d5b0 = DAT_0010d5c8;\n  integer_var8 = (int)(DAT_0010d5d0 - 1) / 2 + 0x2a;\n  goto LAB_001041f0;\nswitchD_00104200_caseD_0:\n  *pointer_to_byte = DAT_0010d588;\n  ulong_variable = (ulong)DAT_0010d5c0;\n  pointer_to_byte = DAT_0010d5b8;\n  goto LAB_0010419f;\nLAB_00105227:\n  double_pointer_to_character = double_pointer_to_character + 1;\n  local_integer_variable = 3;\n  *double_pointer_to_character = DAT_0010d548;\nLAB_001049d1:\n  current_char = current_char + 1;\n  goto LAB_00103ee9;\n}\n\n",
            "current_name": "decompiled_function_00103e95",
            "entrypoint": "0x00103e95",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103e95": "decompiled_function_00103e95",
                "_stderr": "temp_file_pointer_2",
                "_stdin": "temp_file_pointer_3",
                "_stdout": "temp_file_pointer_1",
                "auVar40": "undefined_var40",
                "auVar41": "undefined_var41",
                "bVar28": "bool_var",
                "bVar30": "byte_variable",
                "bVar39": "byte_variable",
                "cVar2": "char_variable",
                "filename_cmp": "compare_filenames",
                "iVar25": "integer_var25",
                "iVar37": "int_var4",
                "iVar8": "integer_var8",
                "iVar9": "integer_var9",
                "lVar17": "long_variable",
                "lVar18": "long_variable",
                "lVar21": "long_variable",
                "lVar31": "long_variable",
                "local": "local_variable",
                "local_678": "local_array_of_pointer_to_char_678",
                "local_740": "temp_buffer",
                "local_7d0": "file_stat",
                "local_7f8": "local_pointer_to_byte_variable",
                "local_7fc": "local_uint_variable",
                "local_800": "local_integer_variable",
                "local_810": "local_double_pointer_to_character",
                "local_818": "buffer_size",
                "local_820": "local_pointer_to_character",
                "local_828": "current_char",
                "pFVar4": "pointer_to_file",
                "pbVar32": "pointer_to_byte",
                "pbVar33": "pointer_to_byte",
                "pbVar35": "pointer_to_byte",
                "pbVar7": "pointer_to_byte",
                "pcVar10": "pointer_to_character",
                "pcVar15": "pointer_to_character",
                "pcVar16": "pointer_to_character",
                "piVar34": "pointer_to_integer",
                "plVar12": "pointer_to_long",
                "plVar5": "pointer_to_long",
                "ppFVar3": "double_pointer_to_file",
                "ppcVar27": "double_pointer_to_character",
                "ppcVar29": "double_pointer_to_character",
                "ppcVar38": "double_pointer_to_character",
                "pplVar1": "double_pointer",
                "puVar22": "pointer",
                "puVar23": "pointer_to_undefined8_variable",
                "pvVar14": "pointer_to_void",
                "sVar13": "size",
                "uVar11": "undefined8_variable",
                "uVar19": "ulong_variable",
                "uVar20": "uint_var",
                "uVar24": "uint_variable",
                "uVar26": "ulong_variable",
                "uVar36": "uint_var3",
                "uVar40": "temp_variable6",
                "uVar41": "another_temp_variable",
                "uVar6": "undefined8_variable",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001052a0": {
            "additional_data": {
                "FUN_001052a0": {
                    "analyze_file": 1,
                    "check_file": 5,
                    "check_file_properties": 1,
                    "check_file_property": 1,
                    "check_file_stat": 2,
                    "check_file_status": 4,
                    "get_file_info": 5,
                    "get_file_information": 7,
                    "get_file_size": 2,
                    "get_file_size_and_type": 1,
                    "get_file_size_or_warning": 1,
                    "get_file_size_warning": 1
                },
                "FUN_00107920": {
                    "display_message": 1,
                    "print_warning": 3
                },
                "__errno_location": {
                    "get_errno_location": 2
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_message": 2,
                    "get_translation": 1
                },
                "iVar1": {
                    "result": 8,
                    "stat_result": 4,
                    "status": 18
                },
                "param_1": {
                    "file_name": 1,
                    "file_path": 19,
                    "filename": 11
                },
                "pcVar4": {
                    "err_reason": 1,
                    "error_description": 1,
                    "error_message": 4,
                    "error_msg": 2,
                    "error_reason": 12,
                    "error_str": 1,
                    "error_string": 6,
                    "reason": 1,
                    "str_error": 2
                },
                "piVar2": {
                    "err_num_ptr": 2,
                    "errno": 1,
                    "errno_location": 2,
                    "errno_location_ptr": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 12,
                    "error": 2,
                    "error_code": 2,
                    "error_location": 1,
                    "error_number_ptr": 1,
                    "error_pointer": 1,
                    "error_ptr": 4
                },
                "sStack_a8": {
                    "file_info": 4,
                    "file_stat": 14,
                    "file_stats": 12,
                    "stat_struct": 1
                },
                "stat": {
                    "get_file_stat": 3,
                    "get_file_status": 1
                },
                "uVar3": {
                    "error_message": 18,
                    "error_msg": 1,
                    "message": 5,
                    "translated_message": 1,
                    "translation": 1,
                    "warning_message": 3,
                    "warning_msg": 1
                }
            },
            "called": [
                "FUN_00107920",
                "stat",
                "dcgettext",
                "FUN_001025a0"
            ],
            "calling": [
                "FUN_00107650",
                "FUN_00105db0"
            ],
            "code": "\nlong check_file_status_001052a0(char *file_path)\n\n{\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_reason;\n  get_file_stat file_stat;\n  \n  if (file_path != (char *)0x0) {\n    status = get_file_stat(file_path,&file_stat);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        FUN_00107920(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00107920(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      FUN_00107920(error_message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (-1 < file_stat.st_size) {\n        return file_stat.st_size;\n      }\n      error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n      FUN_00107920(error_message,file_path);\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      FUN_00107920(error_message,file_path);\n    }\n  }\n  return -1;\n}\n\n",
            "current_name": "check_file_status_001052a0",
            "entrypoint": "0x001052a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001052a0": "check_file_status_001052a0",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_message",
                "iVar1": "status",
                "param_1": "file_path",
                "pcVar4": "error_reason",
                "piVar2": "errno_ptr",
                "sStack_a8": "file_stat",
                "stat": "get_file_stat",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105300": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "default_plugin": 1
                },
                "DAT_0010d5f8": {
                    "convert_format_flag": 1
                },
                "DAT_0010d604": {
                    "error_reporting_flag": 1
                },
                "DAT_0010d618": {
                    "default_format": 1
                },
                "DAT_0010d64c": {
                    "format_type": 1
                },
                "DAT_0010d660": {
                    "error_message": 1
                },
                "FUN_00105300": {
                    "convert_and_open_archive": 1,
                    "convert_archive_to_library": 1,
                    "convert_archived_files": 1,
                    "convert_library_format": 4,
                    "decompile_and_improve": 1,
                    "extract_and_convert_archive": 1,
                    "extract_and_convert_archived_files": 1,
                    "extract_and_convert_archives": 2,
                    "extract_archived_files": 6,
                    "extract_archives": 2,
                    "improved_binary_processing": 1,
                    "parse_binary_file": 1,
                    "process_binary": 1,
                    "process_binary_function": 1
                },
                "_DAT_0010d610": {
                    "exit_flag": 1
                },
                "bVar3": {
                    "bit_flag": 1,
                    "check_flag": 2,
                    "conversion_flag": 2,
                    "convert_flag": 3,
                    "convert_format": 2,
                    "converted_flag": 1,
                    "flag": 3,
                    "is_convertible": 1,
                    "is_thin": 5,
                    "is_thin_format": 3,
                    "is_thin_library": 6,
                    "thin_conversion_flag": 1,
                    "thin_library": 1
                },
                "cVar4": {
                    "char_flag": 2,
                    "check_flag": 1,
                    "check_format_result": 2,
                    "check_result": 1,
                    "conversion_error": 1,
                    "error_flag": 1,
                    "format_check": 3,
                    "format_check_flag": 1,
                    "format_check_result": 7,
                    "format_conversion_error_message": 1,
                    "format_error": 1,
                    "format_flag": 3,
                    "format_matches": 1,
                    "format_result": 2,
                    "result": 4
                },
                "iVar5": {
                    "func_result": 1,
                    "result": 6,
                    "result_code": 1,
                    "stat_result": 11,
                    "status": 11,
                    "status_code": 1
                },
                "lVar9": {
                    "archived_file": 6,
                    "current_archived_file": 1,
                    "file_descriptor": 3,
                    "file_handle": 1,
                    "file_info": 1,
                    "file_offset": 4,
                    "file_pointer": 1,
                    "file_ptr": 5,
                    "next_archived_file": 5,
                    "next_file": 2,
                    "tmp3": 1
                },
                "local_a8": {
                    "file_info": 8,
                    "file_stat": 11,
                    "file_stat_data": 1,
                    "file_stat_info": 1,
                    "file_stats": 4,
                    "file_status": 1,
                    "stat_buf": 1,
                    "stat_buf2": 1,
                    "stat_buffer": 1
                },
                "local_b0": {
                    "archived_file": 1,
                    "archived_file_ptr_array": 1,
                    "bfd_file_data": 1,
                    "bfd_stat": 1,
                    "buffer": 3,
                    "conversion_buffer": 1,
                    "converted_file_name": 1,
                    "error_msg_ptr": 1,
                    "file_buffer": 1,
                    "format_buffer": 1,
                    "format_check_error": 1,
                    "library_name": 1,
                    "local_variable": 1,
                    "local_variable1": 1,
                    "memory_buffer": 1,
                    "output_format": 1,
                    "result": 1,
                    "result_buffer": 1,
                    "stat_buf": 2,
                    "temp_file": 1,
                    "temp_variable": 1,
                    "temporary": 1,
                    "temporary_ptr": 1,
                    "tmp_variable": 1,
                    "translated_msg_buffer": 1,
                    "translation_buffer": 1
                },
                "param_1": {
                    "archive_file_path": 1,
                    "archive_filename": 1,
                    "archive_path": 1,
                    "file_name": 2,
                    "file_path": 3,
                    "filename": 9,
                    "input_file": 5,
                    "input_file_name": 3,
                    "input_file_path": 2,
                    "input_filepath": 1,
                    "input_path": 1,
                    "library_path": 1,
                    "path": 1
                },
                "param_2": {
                    "archive": 3,
                    "archived_files": 3,
                    "bh": 1,
                    "extracted_files": 2,
                    "format": 2,
                    "options": 1,
                    "output": 5,
                    "output_bfd_handle": 1,
                    "output_buffer": 1,
                    "output_file": 4,
                    "output_file_info": 1,
                    "output_file_name": 1,
                    "output_file_ptr": 2,
                    "output_files": 2,
                    "result": 2
                },
                "pcVar2": {
                    "current_file": 1,
                    "custom_error": 1,
                    "default_plugin": 2,
                    "err_msg": 1,
                    "error_message": 9,
                    "format_str": 1,
                    "output_filename": 1,
                    "plugin": 2,
                    "plugin_name": 11,
                    "program_name": 2
                },
                "piVar8": {
                    "errno": 1,
                    "errno_loc": 1,
                    "errno_location": 4,
                    "errno_location_ptr": 2,
                    "errno_ptr": 10,
                    "error_code": 4,
                    "error_code_ptr": 1,
                    "error_location": 1,
                    "error_number": 5,
                    "error_ptr": 1
                },
                "plVar1": {
                    "archived_file": 4,
                    "archived_file_list": 1,
                    "archived_file_pointer": 1,
                    "archived_file_ptr": 11,
                    "archived_files": 4,
                    "archived_files_array": 2,
                    "current_archived_file": 1,
                    "current_file": 2,
                    "file_list_pointer": 1,
                    "file_ptr": 3,
                    "pointer": 1
                },
                "puVar10": {
                    "archived_files": 1,
                    "bfd_open_result": 1,
                    "conversion_result": 2,
                    "converted_library": 1,
                    "func_result": 1,
                    "library_ptr": 1,
                    "memory_ptr": 1,
                    "output": 1,
                    "output_ptr": 1,
                    "plugin": 2,
                    "plugin_open_result": 1,
                    "plugin_ptr": 1,
                    "result": 3,
                    "result_handle": 1,
                    "result_pointer": 1,
                    "result_ptr": 4,
                    "return_ptr": 1,
                    "return_value": 2,
                    "tmp_bfd_handle": 1,
                    "translated_error_msg": 1,
                    "translated_string_buffer": 1
                },
                "uVar6": {
                    "aux_variable1": 1,
                    "conversion_error_message": 1,
                    "convert_error_msg": 1,
                    "err_msg": 1,
                    "err_string": 1,
                    "error_message": 6,
                    "error_msg": 3,
                    "error_string": 2,
                    "func_result": 1,
                    "gettext_message": 1,
                    "localized_msg": 1,
                    "localized_string": 1,
                    "message": 3,
                    "message1": 1,
                    "msg": 2,
                    "msg_id": 1,
                    "string_param1": 1,
                    "tmp1": 1,
                    "translated_string_1": 1,
                    "translation_string1": 1
                },
                "uVar7": {
                    "aux_variable2": 1,
                    "conversion_error_parameter": 1,
                    "err_string2": 1,
                    "error_message": 5,
                    "error_message_format": 1,
                    "error_msg": 2,
                    "error_msg_2": 1,
                    "error_string": 1,
                    "file_name": 1,
                    "func_result": 1,
                    "gettext_message": 1,
                    "localized_ctx": 1,
                    "localized_string2": 1,
                    "message": 4,
                    "message2": 1,
                    "msg": 2,
                    "msg2": 1,
                    "msg_param": 1,
                    "string_param2": 1,
                    "tmp2": 1,
                    "translated_string_2": 1,
                    "translation_string2": 1
                }
            },
            "called": [
                "bfd_close",
                "FUN_00107920",
                "FUN_00102710",
                "FUN_00107c10",
                "FUN_0010315d",
                "bfd_set_error",
                "FUN_00103bd1",
                "FUN_00107690",
                "xexit",
                "bfd_openw",
                "bfd_set_format",
                "bfd_get_error",
                "bfd_check_format_matches",
                "bfd_openr_next_archived_file",
                "stat",
                "fprintf",
                "dcgettext",
                "bfd_openr",
                "perror",
                "FUN_00107c20",
                "__errno_location"
            ],
            "calling": [
                "FUN_00107650",
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nundefined8 * extract_and_convert_archived_files_00105300(char *filename,undefined8 *output)\n\n{\n  long *archived_file_ptr;\n  char *plugin_name;\n  byte is_thin_library;\n  char format_check_result;\n  int stat_result;\n  undefined8 error_message;\n  undefined8 error_message;\n  int *errno_ptr;\n  long archived_file;\n  undefined8 *result_ptr;\n  undefined8 buffer;\n  stat file_stat;\n  \n  bfd_set_error(0);\n  if (DAT_0010d5f0 == (char *)0x0) {\n    DAT_0010d5f0 = \"plugin\";\n  }\n  stat_result = stat(filename,&file_stat);\n  plugin_name = DAT_0010d618;\n  if (stat_result == 0) goto LAB_001053be;\n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    if (DAT_0010d604 == '\\0') {\n      fprintf(_stderr,\"%s: \",DAT_0010d660);\n      perror(filename);\n      FUN_0010315d();\n      return (undefined8 *)0x0;\n    }\n    if ((DAT_0010d5f0 == (char *)0x0) && (output != (undefined8 *)0x0)) {\n      result_ptr = (undefined8 *)FUN_00102710();\n      return result_ptr;\n    }\n    output = (undefined8 *)bfd_openw(filename,DAT_0010d5f0);\n    if (((output != (undefined8 *)0x0) && (format_check_result = bfd_set_format(output,2), format_check_result != '\\0')) &&\n       (format_check_result = bfd_close(output), format_check_result != '\\0')) {\n      plugin_name = filename;\n      if (_DAT_0010d610 == 0) goto LAB_00102826;\n      goto LAB_001053be;\n    }\n  }\n  FUN_00107c10(filename);\n  do {\n    is_thin_library = *(byte *)((long)output + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (is_thin_library != 0) {\n        error_message = *output;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        FUN_00107690(error_message,error_message);\n        goto LAB_00102812;\n      }\n    }\n    else if (is_thin_library == 0) {\n      error_message = *output;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      FUN_00107690(error_message,error_message);\nLAB_001027cb:\n      FUN_00107c20(filename);\n      stat_result = bfd_get_error();\n      if (stat_result == 0xd) {\nLAB_00102812:\n        FUN_00103bd1(buffer);\n      }\n                    \n      xexit(1);\n    }\n    do {\n      archived_file_ptr = output + 0x1e;\n      for (archived_file = bfd_openr_next_archived_file(output,0); archived_file != 0;\n          archived_file = bfd_openr_next_archived_file(output,archived_file)) {\n        *archived_file_ptr = archived_file;\n        archived_file_ptr = (long *)(archived_file + 0xf0);\n      }\n      *archived_file_ptr = 0;\n      stat_result = bfd_get_error();\n      if (stat_result == 9) {\n        return output;\n      }\n      do {\n        FUN_00107c10(filename);\nLAB_00102826:\n        error_message = dcgettext(0,\"creating %s\",5);\n        FUN_00107920(error_message,filename);\n        plugin_name = filename;\nLAB_001053be:\n        DAT_0010d618 = plugin_name;\n        output = (undefined8 *)bfd_openr(filename,DAT_0010d5f0);\n      } while (output == (undefined8 *)0x0);\n      format_check_result = bfd_check_format_matches(output,2,&buffer);\n      if (format_check_result == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (archived_file = bfd_openr_next_archived_file(output,0), archived_file == 0));\n  } while( true );\n}\n\n",
            "current_name": "extract_and_convert_archived_files_00105300",
            "entrypoint": "0x00105300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105300": "extract_and_convert_archived_files_00105300",
                "bVar3": "is_thin_library",
                "cVar4": "format_check_result",
                "iVar5": "stat_result",
                "lVar9": "archived_file",
                "local_a8": "file_stat",
                "local_b0": "buffer",
                "param_1": "filename",
                "param_2": "output",
                "pcVar2": "plugin_name",
                "piVar8": "errno_ptr",
                "plVar1": "archived_file_ptr",
                "puVar10": "result_ptr",
                "uVar6": "error_message",
                "uVar7": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105480": {
            "additional_data": {
                "DAT_0010d634": {
                    "flag": 1
                },
                "FUN_0010285f": {
                    "init": 1,
                    "initialize": 2
                },
                "FUN_00105480": {
                    "extract_archives": 1,
                    "extract_entries_from_archive": 2,
                    "extract_entries_from_binary": 1,
                    "iterate_and_process_entries": 1,
                    "process_archive_entries": 5,
                    "process_archived_entries": 1,
                    "process_archived_files": 1,
                    "process_archives": 3,
                    "process_entries": 15,
                    "process_files": 1
                },
                "FUN_00105830": {
                    "compare_filenames": 1,
                    "get_entry_info": 1,
                    "get_file_extension": 1,
                    "get_filename": 1
                },
                "_DAT_0010d630": {
                    "limit": 1
                },
                "__format": {
                    "err_msg": 1,
                    "error_format": 2,
                    "error_format_string": 1,
                    "error_message": 2,
                    "error_message_format": 2,
                    "error_msg": 1,
                    "error_msg_format": 1,
                    "format_str": 1,
                    "format_string": 10,
                    "message_format": 2,
                    "printf_format": 1
                },
                "_stderr": {
                    "error_stream": 1
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "filename_cmp": {
                    "compare_filenames": 3
                },
                "iVar1": {
                    "cmp_result": 1,
                    "comparison_result": 10
                },
                "lVar2": {
                    "current_entry": 28,
                    "current_file_ptr": 1,
                    "entry": 2
                },
                "local_c8": {
                    "buffer": 26,
                    "temp_buffer": 2,
                    "temporary_buffer": 3
                },
                "local_cc": {
                    "count": 3,
                    "counter": 22,
                    "entry_counter": 1,
                    "entry_index": 1,
                    "file_counter": 1,
                    "matching_count": 1,
                    "num_processed": 1,
                    "num_processed_entries": 1
                },
                "param_1": {
                    "archive": 7,
                    "archive_entries": 1,
                    "archive_handle": 1,
                    "archive_list": 2,
                    "archive_pointer": 2,
                    "archive_ptr": 2,
                    "archived_files_ptr": 1,
                    "binary_offset": 1,
                    "entries_ptr": 1,
                    "entry_data": 1,
                    "entry_list": 8,
                    "entry_pointer": 2,
                    "file_manager": 1,
                    "param1": 1
                },
                "param_2": {
                    "callback": 12,
                    "callback_func": 1,
                    "callback_function": 3,
                    "entry_callback": 4,
                    "entry_handler": 1,
                    "entry_processing_function": 1,
                    "entry_processor": 3,
                    "file_callback": 1,
                    "file_processing_function": 1,
                    "process_entry": 2,
                    "process_entry_fn": 1,
                    "process_func": 1
                },
                "param_3": {
                    "archive_entries": 1,
                    "archive_entry_names": 1,
                    "archive_list": 2,
                    "archive_paths": 1,
                    "entry_list": 7,
                    "entry_names": 4,
                    "file_list": 1,
                    "file_names": 2,
                    "file_names_ptr": 1,
                    "file_paths": 1,
                    "filename_list": 2,
                    "filenames": 7,
                    "filenames_ptr": 1
                },
                "param_4": {
                    "archive_count": 2,
                    "entry_count": 1,
                    "filename_count": 1,
                    "num_entries": 14,
                    "num_filenames": 2,
                    "num_files": 9,
                    "num_of_filenames": 1,
                    "num_paths": 1
                },
                "plVar3": {
                    "alternative_entry": 2,
                    "backup_entry": 1,
                    "backup_file_ptr": 1,
                    "default_entry": 5,
                    "fallback_entry": 9,
                    "last_entry": 1,
                    "next_entry": 4,
                    "next_entry_ptr": 1,
                    "parent_entry": 1,
                    "prev_entry": 1,
                    "previous_entry": 1,
                    "temp_entry": 2,
                    "temp_pointer": 1,
                    "tmp_entry": 1
                },
                "plVar5": {
                    "current_callback": 1,
                    "current_entry": 2,
                    "current_entry_container": 1,
                    "current_entry_ptr": 2,
                    "current_file_ptr": 1,
                    "current_node": 2,
                    "current_pointer": 2,
                    "entry": 6,
                    "entry_iterator": 1,
                    "entry_ptr": 10,
                    "linked_list_ptr": 1,
                    "next_entry": 1,
                    "tmp_pointer": 1
                },
                "uVar4": {
                    "cmp_result": 2,
                    "compare_result": 1,
                    "comparison_result": 6,
                    "comparison_result2": 1,
                    "entry_result": 1,
                    "filename_result": 2,
                    "result": 15,
                    "retval": 1,
                    "temp_variable": 1,
                    "tmp_variable": 1
                }
            },
            "called": [
                "FUN_0010285f",
                "filename_cmp",
                "FUN_00105830"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid process_archive_entries_00105480(long entry_list,code *callback,undefined8 *entry_list,int num_entries)\n\n{\n  int comparison_result;\n  char *format_string;\n  long current_entry;\n  long *fallback_entry;\n  undefined8 result;\n  long *entry_ptr;\n  int counter;\n  undefined buffer [152];\n  \n  current_entry = *(long *)(entry_list + 0xf0);\n  if (num_entries == 0) {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      (*callback)(current_entry);\n    }\n  }\n  else {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      *(undefined4 *)(current_entry + 0xac) = 0;\n    }\n    do {\n      entry_ptr = *(long **)(entry_list + 0xf0);\n      counter = 0;\n      for (; entry_ptr != (long *)0x0; entry_ptr = (long *)entry_ptr[0x1e]) {\n        if (*(int *)((long)entry_ptr + 0xac) == 0) {\n          current_entry = *entry_ptr;\n          if (current_entry == 0) {\n            fallback_entry = (long *)entry_ptr[0x1d];\n            if ((long *)entry_ptr[0x1d] == (long *)0x0) {\n              fallback_entry = entry_ptr;\n            }\n            (**(code **)(fallback_entry[1] + 0x1e8))(entry_ptr,buffer);\n          }\n          else if (((*(byte *)(entry_list + 0x49) & 0x10) == 0) ||\n                  (current_entry = FUN_00105830(current_entry,entry_list), current_entry != 0)) {\n            result = FUN_00105830(*entry_list,entry_list);\n            comparison_result = filename_cmp(result,current_entry);\n            if ((comparison_result == 0) &&\n               ((DAT_0010d634 == '\\0' || (counter = counter + 1, counter == _DAT_0010d630)))) {\n              (*callback)();\n              *(undefined4 *)((long)entry_ptr + 0xac) = 1;\n              goto LAB_0010553e;\n            }\n          }\n        }\n      }\n      result = *entry_list;\n      format_string = (char *)dcgettext(0,\"no entry %s in archive\\n\",5);\n      fprintf(error_stream,format_string,result);\nLAB_0010553e:\n      entry_list = entry_list + 1;\n      num_entries = num_entries + -1;\n    } while (num_entries != 0);\n  }\n  return;\n}\n\n",
            "current_name": "process_archive_entries_00105480",
            "entrypoint": "0x00105480",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105480": "process_archive_entries_00105480",
                "__format": "format_string",
                "_stderr": "error_stream",
                "dcgettext": "get_translated_string",
                "filename_cmp": "compare_filenames",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "local_c8": "buffer",
                "local_cc": "counter",
                "param_1": "entry_list",
                "param_2": "callback",
                "param_3": "entry_list",
                "param_4": "num_entries",
                "plVar3": "fallback_entry",
                "plVar5": "entry_ptr",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105570": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "data6": 1
                },
                "DAT_0010d5f8": {
                    "data5": 1
                },
                "DAT_0010d5f9": {
                    "data8": 1
                },
                "DAT_0010d5fa": {
                    "data7": 1
                },
                "DAT_0010d60c": {
                    "data4": 1
                },
                "DAT_0010d618": {
                    "data1": 1
                },
                "DAT_0010d620": {
                    "data3": 1
                },
                "DAT_0010d638": {
                    "data10": 1
                },
                "DAT_0010d640": {
                    "data2": 1
                },
                "DAT_0010d644": {
                    "data9": 1
                },
                "FUN_00102943": {
                    "get_error_message": 1
                },
                "FUN_00103172": {
                    "function5": 1
                },
                "FUN_00105570": {
                    "check_and_update_files": 1,
                    "extract_and_process_files": 1,
                    "parse_arguments": 1,
                    "process_arguments": 1,
                    "process_binary": 2,
                    "process_binary_files": 1,
                    "process_files": 4
                },
                "FUN_00105830": {
                    "function3": 1
                },
                "FUN_00105870": {
                    "function4": 1
                },
                "FUN_001058b0": {
                    "process_success": 1
                },
                "FUN_00105ae0": {
                    "function1": 1
                },
                "FUN_00105af0": {
                    "function2": 1
                },
                "FUN_00107690": {
                    "print_error": 1
                },
                "FUN_00107c10": {
                    "exit_function": 1
                },
                "__s": {
                    "base_file_name": 1,
                    "base_name": 4,
                    "base_name_2": 1,
                    "basename": 4,
                    "basename1": 1,
                    "basename_buffer2": 1,
                    "basename_output": 1,
                    "basename_path": 2,
                    "basename_ptr2": 1,
                    "basename_result": 1,
                    "basename_value_2": 1,
                    "char_pointer_4": 1,
                    "current_base_name": 1,
                    "file_name_temporary3": 1,
                    "input_string": 1,
                    "modified_current_file_name": 1,
                    "pointer_s": 1,
                    "ptr_char4": 1,
                    "ptr_char_4": 1,
                    "ptr_char_var_s": 1,
                    "ptr_to_char_var11": 1,
                    "string_var": 1,
                    "temp11": 1,
                    "tmp_s": 1
                },
                "auStack_158": {
                    "arr_au_stack_158": 1,
                    "array": 1,
                    "auto_stack_var158": 1,
                    "auxiliary_stack": 1,
                    "buffer": 4,
                    "local_array": 1,
                    "stack_array": 9,
                    "stack_buf": 1,
                    "stack_buffer": 3,
                    "stack_variable": 1,
                    "temp23": 1,
                    "temp_buffer": 1,
                    "temp_stack": 3,
                    "tmp_stack": 1,
                    "undefined_array": 1
                },
                "bVar19": {
                    "bool_flag": 2,
                    "bool_value": 4,
                    "bool_var": 7,
                    "bool_var1": 1,
                    "bool_var19": 4,
                    "boolean_flag": 1,
                    "dependency_flag": 1,
                    "flag2": 1,
                    "flag_3": 1,
                    "flag_condition": 1,
                    "flag_value": 1,
                    "flag_value2": 1,
                    "is_dependent": 2,
                    "is_external": 1,
                    "is_library": 1,
                    "temp20": 1,
                    "var19": 1
                },
                "bVar20": {
                    "byte_flag_2": 1,
                    "byte_index": 1,
                    "byte_val2": 2,
                    "byte_value": 2,
                    "byte_value2": 1,
                    "byte_value_2": 2,
                    "byte_var": 3,
                    "byte_var1": 1,
                    "byte_var2": 5,
                    "byte_var20": 4,
                    "byte_var_2": 1,
                    "flag_4": 1,
                    "local_byte_var": 1,
                    "temp21": 1,
                    "temp_byte_value": 1,
                    "temp_flag": 2,
                    "unused": 1,
                    "var20": 1
                },
                "bVar3": {
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_value": 5,
                    "byte_var": 10,
                    "byte_var1": 1,
                    "byte_var3": 5,
                    "compare_result": 1,
                    "file_opened_flag": 1,
                    "flag": 1,
                    "found_match": 1,
                    "is_dependency": 1,
                    "result": 1,
                    "temp3": 1,
                    "var3": 1
                },
                "bfd_openr": {
                    "open_file": 1
                },
                "dcgettext": {
                    "get_translation": 1
                },
                "filename_cmp": {
                    "compare_filenames": 1
                },
                "iVar4": {
                    "cmp_result": 1,
                    "comparison_result": 3,
                    "counter": 1,
                    "index": 8,
                    "index_val": 1,
                    "index_var": 3,
                    "int_value": 1,
                    "int_var": 3,
                    "int_var1": 1,
                    "int_var4": 4,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_var": 1,
                    "temp4": 1,
                    "var4": 1
                },
                "lStack_100": {
                    "file_time": 1,
                    "l_stack_var": 1,
                    "l_stack_variable": 1,
                    "last_modified_time": 5,
                    "latest_modified_time": 1,
                    "local_stack_value": 1,
                    "long_stack": 1,
                    "long_stack100": 1,
                    "long_stack_var100": 1,
                    "long_var100": 1,
                    "long_var3": 1,
                    "long_var_3": 1,
                    "long_var_l_stack_100": 1,
                    "previous_timestamp": 1,
                    "stack_long": 1,
                    "stack_pointer": 1,
                    "stack_var": 2,
                    "stack_var1": 1,
                    "stack_variable": 1,
                    "temp24": 1,
                    "temp_stack2": 1,
                    "temp_stack_long": 1,
                    "tim": 1,
                    "time": 1,
                    "time_stamp": 1,
                    "timestamp": 1
                },
                "lVar11": {
                    "current": 1,
                    "current_entry": 1,
                    "current_handle": 1,
                    "current_node": 3,
                    "current_path_ptr2": 1,
                    "current_ptr": 3,
                    "last_pointer": 1,
                    "long_value1": 1,
                    "long_var1": 2,
                    "long_var11": 4,
                    "long_var_1": 1,
                    "previous_file": 1,
                    "start": 1,
                    "temp1": 1,
                    "temp12": 1,
                    "temp_long_value": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 3,
                    "temp_var_11": 1,
                    "var11": 1
                },
                "lVar12": {
                    "current_file": 1,
                    "current_path_ptr3": 1,
                    "current_pointer": 1,
                    "file_pointer": 1,
                    "long_value2": 1,
                    "long_var12": 4,
                    "long_var2": 2,
                    "long_var_2": 1,
                    "next": 1,
                    "next_file": 1,
                    "next_file_path": 1,
                    "next_handle": 1,
                    "next_node": 3,
                    "next_ptr": 3,
                    "prev": 1,
                    "temp13": 1,
                    "temp2": 1,
                    "temp_value_2": 1,
                    "temp_var2": 3,
                    "temp_var_12": 1,
                    "var12": 1
                },
                "local_15a": {
                    "byte_local15a": 1,
                    "byte_var3": 2,
                    "byte_var_local_15a": 1,
                    "final_flag": 2,
                    "flag": 1,
                    "flag_value": 1,
                    "flag_var": 1,
                    "has_dependency": 1,
                    "is_any_modified": 1,
                    "local_bool_var": 1,
                    "local_byte": 2,
                    "local_byte_var": 1,
                    "local_byte_var15a": 1,
                    "local_flag": 8,
                    "local_var": 1,
                    "local_variable": 1,
                    "overall_match": 1,
                    "result_flag": 2,
                    "temp22": 1,
                    "var_local": 1
                },
                "param_1": {
                    "arg1": 5,
                    "argument1": 2,
                    "base_address": 2,
                    "binary": 1,
                    "binary_address": 1,
                    "binary_files": 1,
                    "binary_handle": 1,
                    "context": 2,
                    "file_manager": 2,
                    "function_param": 1,
                    "input": 5,
                    "input_arg": 1,
                    "input_param": 2,
                    "input_value": 2,
                    "param": 2,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 5,
                    "argument2": 2,
                    "file_list": 2,
                    "file_names": 1,
                    "file_paths": 15,
                    "files": 2,
                    "string_array": 3,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 5,
                    "argument3": 2,
                    "check_flag": 2,
                    "check_stat": 2,
                    "flag": 13,
                    "is_library": 1,
                    "is_recursive": 2,
                    "is_reverse": 2,
                    "process_all_files": 1,
                    "var3": 1
                },
                "pcVar10": {
                    "base_name2": 1,
                    "char_pointer3": 1,
                    "char_pointer_3": 1,
                    "current_file": 3,
                    "current_file_name": 1,
                    "current_file_path": 5,
                    "current_file_ptr": 1,
                    "current_filename": 1,
                    "current_path": 5,
                    "file_name_temporary2": 1,
                    "pointer5": 1,
                    "pointer_var10": 1,
                    "ptr_char3": 1,
                    "ptr_char_3": 1,
                    "ptr_char_var10": 1,
                    "ptr_to_char_var10": 1,
                    "ptr_value": 1,
                    "string_ptr10": 1,
                    "temp10": 1,
                    "temp_file_path": 1
                },
                "pcVar7": {
                    "basename1": 1,
                    "char_pointer1": 1,
                    "char_pointer_1": 1,
                    "current_file": 2,
                    "current_file_name": 1,
                    "current_file_path": 4,
                    "current_path": 1,
                    "file": 1,
                    "file_name": 3,
                    "file_path": 3,
                    "file_path1": 1,
                    "file_path_1": 2,
                    "filename1": 1,
                    "path": 1,
                    "pointer3": 1,
                    "pointer_var7": 1,
                    "ptr_char1": 1,
                    "ptr_char_1": 1,
                    "ptr_char_var7": 1,
                    "ptr_to_char_var7": 1,
                    "string_ptr7": 1,
                    "temp7": 1
                },
                "pcVar8": {
                    "base_file": 1,
                    "base_name": 3,
                    "base_name1": 1,
                    "base_path": 1,
                    "basename2": 1,
                    "basename_buffer": 1,
                    "basename_ptr": 1,
                    "basename_value": 1,
                    "char_pointer2": 1,
                    "char_pointer_2": 1,
                    "file_name_temporary": 1,
                    "file_path2": 1,
                    "file_path_2": 2,
                    "filename2": 1,
                    "modified_file": 1,
                    "modified_file_name": 1,
                    "modified_path": 1,
                    "pointer4": 1,
                    "pointer_var8": 1,
                    "processed_file_path": 1,
                    "ptr_char2": 1,
                    "ptr_char_2": 1,
                    "ptr_char_var8": 1,
                    "ptr_to_char_var8": 1,
                    "short_file_path": 1,
                    "string_ptr8": 1,
                    "temp8": 1,
                    "temp_file_path": 1
                },
                "piVar6": {
                    "errno": 1,
                    "errno_location": 11,
                    "errno_ptr": 6,
                    "error_num": 1,
                    "int_pointer": 1,
                    "int_ptr6": 1,
                    "int_ptr_var": 1,
                    "pointer2": 1,
                    "pointer_int": 1,
                    "pointer_to_errno": 1,
                    "pointer_var6": 1,
                    "ptr_int": 1,
                    "ptr_int1": 1,
                    "ptr_int_var6": 1,
                    "ptr_to_int_var6": 1,
                    "temp6": 1
                },
                "ppcVar1": {
                    "binary_files_ptr": 1,
                    "current_file": 6,
                    "current_file_path": 4,
                    "current_file_path_ptr": 1,
                    "current_path_ptr": 1,
                    "file_list": 1,
                    "file_paths_end": 1,
                    "file_paths_iterator": 1,
                    "file_paths_ptr": 1,
                    "file_ptr": 1,
                    "pointer1": 2,
                    "pointer_list1": 1,
                    "pointer_ptr1": 1,
                    "pointer_to_ppc_var1": 1,
                    "ptr_array1": 2,
                    "ptr_array_1": 1,
                    "ptr_file_paths": 1,
                    "ptr_to_ppc_var1": 1,
                    "temp1": 1,
                    "temp_pointer_1": 1,
                    "temp_ptr1": 1
                },
                "ppcVar15": {
                    "current_dep_ptr": 1,
                    "current_entry": 1,
                    "current_file_paths": 1,
                    "current_file_ptr": 1,
                    "current_ptr": 1,
                    "file": 1,
                    "file_entry": 1,
                    "file_list": 7,
                    "file_list_ptr": 2,
                    "file_node": 1,
                    "file_path_list": 1,
                    "file_ptr_2": 1,
                    "pointer2": 1,
                    "pointer6": 1,
                    "pointer_list2": 1,
                    "pointer_ptr15": 1,
                    "pointer_to_ppc_var15": 1,
                    "ptr_array2": 2,
                    "ptr_array_2": 1,
                    "ptr_to_ppc_var15": 1,
                    "temp16": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr2": 1
                },
                "ppcVar16": {
                    "current_entry_ptr": 1,
                    "current_file": 2,
                    "current_file_2": 1,
                    "current_file_list": 1,
                    "current_node": 1,
                    "current_node_pointer": 1,
                    "current_node_ptr": 1,
                    "current_ptr_2": 1,
                    "file_list_ptr": 1,
                    "file_list_ptr2": 1,
                    "file_ptr": 2,
                    "nested_entry": 1,
                    "next_dep_ptr": 1,
                    "next_file": 1,
                    "next_ptr": 1,
                    "pointer3": 1,
                    "pointer7": 1,
                    "pointer_list3": 1,
                    "pointer_ptr16": 1,
                    "pointer_to_ppc_var16": 1,
                    "prev_file_list": 1,
                    "ptr_array3": 2,
                    "ptr_array_3": 1,
                    "ptr_to_ppc_var16": 1,
                    "temp17": 1,
                    "temp_pointer_3": 1,
                    "temp_ptr3": 1,
                    "temp_var3": 1
                },
                "ppcVar18": {
                    "file_list_ptr3": 1,
                    "file_ptr_3": 1,
                    "last_node_ptr": 1,
                    "pointer4": 1,
                    "pointer8": 1,
                    "pointer_list4": 1,
                    "pointer_ptr18": 1,
                    "pointer_to_ppc_var18": 1,
                    "prev_file": 2,
                    "prev_file_list2": 1,
                    "previous_dep_ptr": 1,
                    "previous_entry_ptr": 1,
                    "previous_file": 3,
                    "previous_file_path": 1,
                    "previous_node": 1,
                    "previous_node_pointer": 1,
                    "previous_ptr": 2,
                    "ptr_array4": 2,
                    "ptr_array_4": 1,
                    "ptr_to_ppc_var18": 1,
                    "temp19": 1,
                    "temp_file_ptr": 1,
                    "temp_pointer_4": 1,
                    "temp_ptr4": 1,
                    "temp_var4": 1,
                    "updated_entry": 1
                },
                "sStack_c8": {
                    "file_stat": 6,
                    "file_stats": 3,
                    "s_stack_variable": 1,
                    "stack_stat": 1,
                    "stack_stat_result": 1,
                    "stat": 1,
                    "stat_info": 2,
                    "stat_stack_c8": 1,
                    "stat_stack_varc8": 1,
                    "stat_struct": 6,
                    "stat_struct_s_stack_c8": 1,
                    "stat_structure": 4,
                    "stat_var": 1,
                    "stat_variable": 1,
                    "temp25": 1
                },
                "sVar5": {
                    "filename_length": 1,
                    "length": 1,
                    "size": 6,
                    "size_t_var": 1,
                    "size_val": 1,
                    "size_value": 1,
                    "size_var": 5,
                    "size_var1": 1,
                    "size_var5": 4,
                    "str_length": 2,
                    "string_length": 5,
                    "string_size": 1,
                    "temp5": 1,
                    "var5": 1
                },
                "uVar13": {
                    "result": 4,
                    "result_var2": 1,
                    "return_val": 1,
                    "return_value": 13,
                    "temp14": 1,
                    "undefined_var13": 4,
                    "undefined_var3": 4,
                    "undefined_var_3": 1,
                    "undefined_variable_13": 1,
                    "var13": 1
                },
                "uVar14": {
                    "byte_val": 1,
                    "count": 1,
                    "count_var": 1,
                    "length": 3,
                    "limit": 2,
                    "max_length": 1,
                    "max_name_length": 1,
                    "max_str_length": 1,
                    "max_string_length": 1,
                    "size": 1,
                    "temp15": 1,
                    "ulong_value": 4,
                    "ulong_var": 6,
                    "ulong_var1": 1,
                    "ulong_var14": 4,
                    "undefined_variable_14": 1,
                    "var14": 1
                },
                "uVar17": {
                    "comparison_mode": 1,
                    "data_type": 1,
                    "dep_type": 1,
                    "file_system_flag": 1,
                    "file_type": 1,
                    "flag_2": 1,
                    "flag_value": 5,
                    "flag_var": 1,
                    "mode": 1,
                    "stat_type": 1,
                    "temp18": 1,
                    "temp_var3": 1,
                    "uint_value": 3,
                    "uint_var": 4,
                    "uint_var1": 1,
                    "uint_var17": 4,
                    "undefined_variable_17": 1,
                    "value": 1,
                    "var17": 1
                },
                "uVar2": {
                    "result": 3,
                    "return_value": 1,
                    "temp2": 1,
                    "undefined": 2,
                    "undefined_val": 1,
                    "undefined_value": 4,
                    "undefined_var": 10,
                    "undefined_var1": 1,
                    "undefined_var2": 5,
                    "undefined_variable_2": 1,
                    "var2": 1
                },
                "uVar9": {
                    "dependency_file": 1,
                    "extracted_file_path": 1,
                    "file_dep": 1,
                    "libdep_file_path": 1,
                    "libdep_path": 1,
                    "library_dependency": 1,
                    "result": 6,
                    "result2": 1,
                    "result_var1": 1,
                    "temp9": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "undefined_value": 1,
                    "undefined_var2": 4,
                    "undefined_var9": 4,
                    "undefined_var_2": 1,
                    "undefined_variable_9": 1,
                    "updated_dependency": 1,
                    "var9": 1
                }
            },
            "called": [
                "FUN_00102943"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nundefined8 extract_and_process_files_00105570(long input,char **file_paths,char flag)\n\n{\n  char **current_file;\n  undefined undefined_var;\n  byte byte_var;\n  int index;\n  size_t size;\n  int *errno_location;\n  char *current_file_path;\n  char *base_name;\n  undefined8 result;\n  char *current_file_path;\n  char *basename;\n  long long_var11;\n  long long_var12;\n  undefined8 return_value;\n  ulong ulong_var;\n  char **file_list;\n  char **current_file;\n  uint flag_value;\n  char **previous_file;\n  bool bool_var;\n  byte byte_var2;\n  byte local_flag;\n  undefined stack_array [88];\n  long last_modified_time;\n  stat file_stat;\n  \n  byte_var2 = 0;\n  current_file = (char **)(input + 0xf0);\n  local_flag = 0;\n  if (file_paths == (char **)0x0) {\n    return_value = FUN_00102943();\n    return return_value;\n  }\n  do {\n    current_file_path = *file_paths;\njoined_r0x001055aa:\n    if (current_file_path == (char *)0x0) {\n      if (local_flag != 0) {\n        return_value = FUN_001058b0(input);\n        return return_value;\n      }\n      DAT_0010d618 = 0;\n      return 0;\n    }\n    file_list = *(char ***)(input + 0xf0);\n    current_file = current_file;\n    if (flag != '\\0') {\nLAB_0010564c:\n      flag_value = DAT_0010d640;\n      if (DAT_0010d640 != 0) goto LAB_001028f5;\n      long_var12 = *(long *)(input + 0xf0);\n      if (*(long *)(input + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n      do {\n        long_var11 = long_var12;\n        long_var12 = *(long *)(long_var11 + 0xf0);\n      } while (long_var12 != 0);\n      current_file = (char **)(long_var11 + 0xf0);\n      current_file_path = *file_paths;\n      do {\n        if (DAT_0010d620 != 0) {\n          return_value = FUN_00105830(current_file_path,input);\n          index = filename_cmp(return_value,\"__.LIBDEP\");\n          if (index == 0) {\n            byte_var = FUN_00105ae0(current_file,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n            local_flag = byte_var | local_flag;\n            goto LAB_0010577e;\n          }\n          current_file_path = *file_paths;\n        }\n        undefined_var = DAT_0010d5f8;\n        bool_var = DAT_0010d60c != 0;\n        long_var12 = bfd_openr(current_file_path,DAT_0010d5f0);\n        if (long_var12 != 0) {\n          file_paths = file_paths + 1;\n          byte_var = FUN_00105af0(current_file,long_var12,(uint)bool_var,undefined_var);\n          local_flag = local_flag | byte_var;\n          current_file_path = *file_paths;\n          goto joined_r0x001055aa;\n        }\n        FUN_00107c10(current_file_path,0);\n        flag_value = (uint)bool_var;\nLAB_001028f5:\n        return_value = DAT_0010d638;\n        if (flag_value == 3) {\n          long_var12 = *(long *)(input + 0xf0);\n          if (*(long *)(input + 0xf0) != 0) goto LAB_00105670;\n        }\n        else {\n          for (; (undefined8 *)*current_file != (undefined8 *)0x0;\n              current_file = (char **)(*current_file + 0xf0)) {\n            index = filename_cmp(*(undefined8 *)*current_file,return_value);\n            if (index == 0) {\n              if (flag_value == 2) {\n                current_file = (char **)(*current_file + 0xf0);\n              }\n              break;\n            }\n          }\n        }\nLAB_0010571f:\n        current_file_path = *file_paths;\n      } while( true );\n    }\n    previous_file = current_file;\n    if (file_list == (char **)0x0) {\n      flag_value = DAT_0010d640;\n      if (DAT_0010d640 == 0) goto LAB_0010571f;\n      goto LAB_001028f5;\n    }\nLAB_001055d8:\n    if (DAT_0010d5f9 == '\\0') {\n      current_file_path = (char *)lbasename(*file_list);\n      base_name = current_file_path;\n      if (DAT_0010d5fa != '\\0') {\n        size = strlen(current_file_path);\n        ulong_var = (ulong)*(byte *)(*(long *)(input + 8) + 0x1e);\n        if (ulong_var < size) {\n          base_name = (char *)xmalloc(ulong_var + 1);\n          long_var12 = *(long *)(input + 8);\n          current_file_path = base_name;\n          for (ulong_var = (ulong)*(byte *)(long_var12 + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *current_file_path = *current_file_path;\n            current_file_path = current_file_path + (ulong)byte_var2 * -2 + 1;\n            current_file_path = current_file_path + (ulong)byte_var2 * -2 + 1;\n          }\n          base_name[*(byte *)(long_var12 + 0x1e)] = '\\0';\n        }\n        current_file_path = *file_paths;\n        current_file_path = base_name;\n        if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n        goto LAB_00102980;\n      }\n      current_file_path = *file_paths;\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n      basename = (char *)lbasename(current_file_path);\n      if (DAT_0010d5fa != '\\0') {\n        size = strlen(basename);\n        ulong_var = (ulong)*(byte *)(*(long *)(input + 8) + 0x1e);\n        current_file_path = basename;\n        current_file_path = base_name;\n        if (ulong_var < size) {\n          current_file_path = (char *)xmalloc(ulong_var + 1);\n          long_var12 = *(long *)(input + 8);\n          base_name = current_file_path;\n          for (ulong_var = (ulong)*(byte *)(long_var12 + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *base_name = *basename;\n            basename = basename + (ulong)byte_var2 * -2 + 1;\n            base_name = base_name + (ulong)byte_var2 * -2 + 1;\n          }\n          current_file_path[*(byte *)(long_var12 + 0x1e)] = '\\0';\n        }\n        goto LAB_00102980;\n      }\n      index = filename_cmp(basename,base_name);\n      if (index == 0) goto LAB_00102993;\nLAB_00105639:\n      previous_file = file_list + 0x1e;\n      file_list = (char **)file_list[0x1e];\n      if (file_list == (char **)0x0) goto LAB_0010564c;\n      goto LAB_001055d8;\n    }\n    current_file_path = *file_paths;\n    current_file_path = *file_list;\nLAB_00102980:\n    index = filename_cmp(current_file_path,current_file_path);\n    if (index != 0) goto LAB_00105639;\nLAB_00102993:\n    if (file_list[0x1c] == (char *)0x0) goto LAB_00105639;\n    if (_DAT_0010d644 != 0) {\n      index = stat(*file_paths,&file_stat);\n      if (index != 0) {\n        errno_location = __errno_location();\n        if (*errno_location != 2) {\n          FUN_00107c10(*file_paths);\nLAB_00102b7e:\n          current_file_path = *file_list;\n          return_value = dcgettext(0,\"internal stat error on %s\",5);\n          FUN_00107690(return_value,current_file_path);\n          free(file_paths);\n          return 0;\n        }\n        goto LAB_0010577e;\n      }\n      current_file = (char **)file_list[0x1d];\n      if ((char **)file_list[0x1d] == (char **)0x0) {\n        current_file = file_list;\n      }\n      index = (**(code **)(current_file[1] + 0x1e8))(file_list,stack_array);\n      if (index != 0) goto LAB_00102b7e;\n      if (file_stat.st_mtim.tv_sec <= last_modified_time) goto LAB_0010577e;\n    }\n    return_value = FUN_00105870(current_file,2,*file_list);\n    if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n      current_file_path = *file_paths;\n      bool_var = DAT_0010d60c != 0;\n      long_var12 = bfd_openr(current_file_path,DAT_0010d5f0);\n      if (long_var12 == 0) {\n        FUN_00107c10(current_file_path,0);\n        goto LAB_00102b3e;\n      }\n      byte_var = FUN_00103172(return_value,long_var12,bool_var);\n    }\n    else {\n      result = FUN_00105830(*file_paths,input);\n      index = filename_cmp(result,\"__.LIBDEP\");\n      if (index != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n      byte_var = FUN_00103172(return_value,DAT_0010d620,DAT_0010d60c != 0);\n    }\n    if (byte_var != 0) {\n      *previous_file = *(char **)(*previous_file + 0xf0);\n      local_flag = byte_var;\n    }\nLAB_0010577e:\n    file_paths = file_paths + 1;\n  } while( true );\n}\n\n",
            "current_name": "extract_and_process_files_00105570",
            "entrypoint": "0x00105570",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105570": "extract_and_process_files_00105570",
                "__s": "basename",
                "auStack_158": "stack_array",
                "bVar19": "bool_var",
                "bVar20": "byte_var2",
                "bVar3": "byte_var",
                "bfd_openr": "open_file",
                "dcgettext": "get_translation",
                "filename_cmp": "compare_filenames",
                "iVar4": "index",
                "lStack_100": "last_modified_time",
                "lVar11": "long_var11",
                "lVar12": "long_var12",
                "local_15a": "local_flag",
                "param_1": "input",
                "param_2": "file_paths",
                "param_3": "flag",
                "pcVar10": "current_file_path",
                "pcVar7": "current_file_path",
                "pcVar8": "base_name",
                "piVar6": "errno_location",
                "ppcVar1": "current_file",
                "ppcVar15": "file_list",
                "ppcVar16": "current_file",
                "ppcVar18": "previous_file",
                "sStack_c8": "file_stat",
                "sVar5": "size",
                "uVar13": "return_value",
                "uVar14": "ulong_var",
                "uVar17": "flag_value",
                "uVar2": "undefined_var",
                "uVar9": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001057a0": {
            "additional_data": {
                "FUN_001057a0": {
                    "create_temp_file": 6,
                    "create_temp_file_with_path": 3,
                    "create_temporary_file": 1,
                    "decompile_and_improve": 1,
                    "extract_file_from_path": 2,
                    "extract_file_name": 4,
                    "extract_file_name_and_create_temp_file": 1,
                    "extract_file_path": 1,
                    "extract_file_path_and_create_temporary_file": 1,
                    "extract_filename": 1,
                    "extract_filename_and_create_temp_file": 3,
                    "reverse_and_allocate_path": 1,
                    "reverse_and_store_file": 1,
                    "reverse_and_store_filepath": 1,
                    "reverse_file_path_and_create_temp_file": 1,
                    "reverse_file_path_and_create_temporary_file": 1,
                    "reverse_filepath_and_create_temp_file": 1
                },
                "__c": {
                    "c": 1
                },
                "__s": {
                    "s": 1
                },
                "__template": {
                    "template": 1
                },
                "auVar8": {
                    "result": 15,
                    "result_struct": 1,
                    "return_val": 1,
                    "return_value": 13
                },
                "bVar7": {
                    "byte_value": 2,
                    "char_index": 1,
                    "counter": 1,
                    "flag": 1,
                    "found_separator": 1,
                    "found_slash": 1,
                    "increment": 1,
                    "is_delimiter_present": 1,
                    "is_first_iteration": 1,
                    "is_found": 1,
                    "is_null": 3,
                    "is_slash": 2,
                    "is_slash_present": 1,
                    "is_slice_idx_positive": 1,
                    "iteration_variable": 1,
                    "loop_condition": 1,
                    "loop_counter": 1,
                    "loop_direction": 2,
                    "loop_increment": 3,
                    "path_increment": 1,
                    "slash_count": 1,
                    "slash_found": 1,
                    "temp_var": 1
                },
                "iVar1": {
                    "mkstemp_result": 1,
                    "result": 4,
                    "status": 1,
                    "temp_file_descriptor": 1
                },
                "lVar3": {
                    "file_name_length": 3,
                    "file_name_offset": 3,
                    "file_path_length": 3,
                    "filename_length": 2,
                    "filename_offset": 1,
                    "filepath_length": 1,
                    "len": 1,
                    "name_start_idx": 1,
                    "path_len": 1,
                    "path_length": 10,
                    "prefix_length": 2,
                    "slice_start": 1
                },
                "lVar4": {
                    "count": 1,
                    "counter": 1,
                    "i": 5,
                    "idx": 2,
                    "index": 9,
                    "iterator": 1,
                    "loop_counter": 6,
                    "loop_index": 1,
                    "offset": 1,
                    "slice_idx": 1,
                    "temp_index": 1,
                    "temp_len": 1
                },
                "lVar5": {
                    "difference": 1,
                    "dist": 1,
                    "file_name_index": 1,
                    "file_name_length": 1,
                    "file_path_length": 1,
                    "filename_length": 1,
                    "last_forward_slash_index": 1,
                    "last_slash_index": 9,
                    "last_slash_offset": 4,
                    "name_end_idx": 1,
                    "offset": 3,
                    "prefix_length": 1,
                    "relative_file_path_length": 1,
                    "separator_diff": 1,
                    "slash_index": 1,
                    "slash_offset": 1,
                    "slice_end": 1
                },
                "lvar3": {
                    "path_length": 1
                },
                "mkstemp": {
                    "create_temp_file": 6,
                    "create_temp_file_with_template": 1,
                    "create_temporary_file": 1,
                    "create_unique_file": 1,
                    "create_unique_temp_file": 2
                },
                "param_1": {
                    "file_path": 18,
                    "filepath": 2,
                    "path": 11
                },
                "param_2": {
                    "file_descriptor": 31
                },
                "param_3": {
                    "arg1": 3,
                    "arg3": 2,
                    "arg_1": 1,
                    "data_1": 1,
                    "input_1": 1,
                    "param1": 1,
                    "param_3": 4,
                    "unknown1": 1,
                    "unknown_arg1": 1,
                    "unknown_param_3": 1,
                    "unused1": 1,
                    "unused_1": 1,
                    "unused_param": 6,
                    "unused_param1": 1,
                    "unused_param_1": 3,
                    "unused_param_3": 2,
                    "unused_parameter_1": 1
                },
                "param_4": {
                    "arg2": 3,
                    "arg4": 2,
                    "arg_2": 1,
                    "data_2": 1,
                    "file_mode": 1,
                    "input_2": 1,
                    "input_value": 1,
                    "param2": 1,
                    "param_4": 4,
                    "temp_file_template": 1,
                    "unknown2": 1,
                    "unknown_arg2": 1,
                    "unknown_param_4": 1,
                    "unused2": 1,
                    "unused_2": 1,
                    "unused_param": 1,
                    "unused_param2": 2,
                    "unused_param_2": 3,
                    "unused_param_4": 2,
                    "unused_parameter_2": 1,
                    "user_data": 1
                },
                "pcVar2": {
                    "file_name": 1,
                    "filename": 1,
                    "last_delimiter": 1,
                    "last_forward_slash": 2,
                    "last_separator": 1,
                    "last_slash": 21,
                    "last_slash_in_path": 1,
                    "last_slash_index": 1,
                    "last_slash_pos": 1
                },
                "pcVar6": {
                    "allocated_path": 3,
                    "extracted_filename": 1,
                    "file_name": 1,
                    "new_file_name": 1,
                    "new_file_path": 8,
                    "new_path": 10,
                    "prefix": 1,
                    "temp_file_path": 1,
                    "temp_filename": 1,
                    "temp_filepath": 1,
                    "temp_path": 2
                },
                "strrchr": {
                    "find_last_delimiter": 1,
                    "find_last_forward_slash": 1,
                    "find_last_occurrence_of_character": 1,
                    "find_last_slash": 6
                },
                "xmalloc": {
                    "allocate_dynamic_memory": 1,
                    "allocate_memory": 10
                }
            },
            "called": [
                "strrchr",
                "FUN_00102ba1",
                "mkstemp",
                "xmalloc"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nundefined  [16] extract_filename_and_create_temp_file_001057a0(char *file_path,int *file_descriptor,undefined8 unused_param,undefined8 param_4)\n\n{\n  int result;\n  char *last_slash;\n  long path_length;\n  long index;\n  long last_slash_index;\n  char *new_path;\n  byte loop_increment;\n  undefined result [16];\n  \n  loop_increment = 0;\n  last_slash = strrchr(file_path,0x2f);\n  if (last_slash == (char *)0x0) {\n    last_slash = (char *)xmalloc(9);\n    path_length = 0;\n  }\n  else {\n    last_slash_index = (long)last_slash - (long)file_path;\n    last_slash = (char *)xmalloc(last_slash_index + 0xb);\n    path_length = last_slash_index + 1;\n    new_path = last_slash;\n    for (index = last_slash_index; index != 0; index = index + -1) {\n      *new_path = *file_path;\n      file_path = file_path + (ulong)loop_increment * -2 + 1;\n      new_path = new_path + (ulong)loop_increment * -2 + 1;\n    }\n    last_slash[last_slash_index] = '/';\n  }\n  *(undefined8 *)(last_slash + path_length) = 0x5858585858587473;\n  *(undefined *)((long)(last_slash + path_length) + 8) = 0;\n  result = mkstemp(last_slash);\n  if (result == -1) {\n    new_path = (char *)0x0;\n    free(last_slash);\n  }\n  else {\n    *file_descriptor = result;\n    new_path = last_slash;\n  }\n  result._8_8_ = param_4;\n  result._0_8_ = new_path;\n  return result;\n}\n\n",
            "current_name": "extract_filename_and_create_temp_file_001057a0",
            "entrypoint": "0x001057a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001057a0": "extract_filename_and_create_temp_file_001057a0",
                "auVar8": "result",
                "bVar7": "loop_increment",
                "iVar1": "result",
                "lVar3": "path_length",
                "lVar4": "index",
                "lVar5": "last_slash_index",
                "mkstemp": "create_temp_file",
                "param_1": "file_path",
                "param_2": "file_descriptor",
                "param_3": "unused_param",
                "pcVar2": "last_slash",
                "pcVar6": "new_path",
                "strrchr": "find_last_slash",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105830": {
            "additional_data": {
                "FUN_00105830": {
                    "decompiled_function": 1,
                    "extract_and_copy_string": 1,
                    "extract_and_copy_text": 1,
                    "extract_param": 1,
                    "extract_string": 7,
                    "extract_string_from_binary": 1,
                    "extract_string_from_memory": 1,
                    "extract_string_from_param": 1,
                    "extract_string_from_pointer": 1,
                    "extract_sub_string": 2,
                    "extract_substring": 5,
                    "get_basename": 1,
                    "get_modified_string": 1,
                    "parse_filename": 1,
                    "parse_parameter": 1,
                    "reverse_and_copy_string": 2,
                    "reverse_string": 2,
                    "update_string": 1
                },
                "__s": {
                    "base_name": 19,
                    "basename": 2,
                    "basename_result": 3,
                    "basename_string": 2,
                    "file_name": 1,
                    "input_string": 1,
                    "program_name": 1
                },
                "auVar6": {
                    "extracted_sub_string": 1,
                    "result": 14,
                    "return_value": 11
                },
                "bVar5": {
                    "boolean_flag": 1,
                    "byte_count": 2,
                    "byte_flag": 2,
                    "byte_value": 3,
                    "byte_var": 6,
                    "copy_condition": 1,
                    "counter": 1,
                    "flag": 1,
                    "increment": 2,
                    "increment_value": 2,
                    "is_negative": 4,
                    "is_reverse": 1,
                    "loop_counter": 4
                },
                "lVar1": {
                    "address": 1,
                    "entry_point_value": 1,
                    "input_data_ptr": 1,
                    "input_param_offset": 1,
                    "metadata_ptr": 1,
                    "source_string_pointer": 1,
                    "string_info_ptr": 1,
                    "string_ptr": 1,
                    "struct_address": 1,
                    "struct_offset": 1,
                    "struct_value": 1,
                    "sub_string_info_ptr": 1,
                    "text_info_value": 1
                },
                "param_1": {
                    "file_path": 4,
                    "filename": 2,
                    "input_string": 15,
                    "original_string": 4,
                    "output_string": 3,
                    "result": 1,
                    "source_text": 1,
                    "str": 1
                },
                "param_2": {
                    "binary_data": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "entry_point": 1,
                    "file_data_address": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_struct": 1,
                    "input_struct_ptr": 1,
                    "metadata": 1,
                    "param_address": 1,
                    "parameter_struct": 1,
                    "pointer_to_struct": 1,
                    "source_string": 1,
                    "string_info": 4,
                    "struct_address": 1,
                    "struct_pointer": 3,
                    "struct_ptr": 6,
                    "sub_string_info": 1,
                    "text_info": 1
                },
                "param_3": {
                    "arg1": 1,
                    "param_3": 4,
                    "param_a": 1,
                    "parameter_3": 1,
                    "ptr1": 1,
                    "unk1": 1,
                    "unknown_param": 1,
                    "unused_param": 9,
                    "unused_param1": 6,
                    "unused_param_1": 1,
                    "unused_parameter": 1,
                    "var1": 1,
                    "var3": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg2": 1,
                    "output_string": 2,
                    "output_variable": 1,
                    "param_4": 4,
                    "param_b": 1,
                    "parameter_4": 1,
                    "ptr2": 1,
                    "result": 2,
                    "return_value": 2,
                    "unk2": 1,
                    "unused_param": 3,
                    "unused_param2": 7,
                    "unused_param_2": 2,
                    "var2": 1,
                    "var4": 1,
                    "var_4": 1
                },
                "pcVar4": {
                    "copied_text": 1,
                    "dest_ptr": 3,
                    "dest_string": 1,
                    "destination_pointer": 1,
                    "modified_string_ptr": 1,
                    "new_filename_ptr": 1,
                    "new_string": 1,
                    "output_ptr": 1,
                    "output_string": 10,
                    "output_string_pointer": 1,
                    "output_string_ptr": 4,
                    "result_ptr": 1,
                    "sub_string": 1,
                    "sub_string_pointer": 1,
                    "substring_ptr": 2
                },
                "sVar2": {
                    "base_name_length": 5,
                    "basename_length": 2,
                    "file_path_length": 1,
                    "filename_len": 1,
                    "input_length": 2,
                    "input_string_length": 7,
                    "length": 1,
                    "name_len": 1,
                    "original_string_length": 3,
                    "source_string_length": 1,
                    "source_text_length": 1,
                    "string_length": 2
                },
                "uVar3": {
                    "byte_count": 1,
                    "byte_val": 1,
                    "byte_value": 2,
                    "copy_length": 2,
                    "limit": 2,
                    "max_chars": 1,
                    "max_copy_length": 2,
                    "max_len": 1,
                    "max_length": 10,
                    "max_string_length": 2,
                    "max_sub_string_length": 1,
                    "max_substring_length": 1,
                    "str_length": 1,
                    "sub_string_length": 1,
                    "substring_length": 2
                }
            },
            "called": [
                "lbasename",
                "FUN_00102bb0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105480",
                "FUN_00105db0"
            ],
            "code": "\nundefined  [16] extract_sub_string_00105830(char *input_string,long struct_ptr,undefined8 unused_param,undefined8 unused_param2)\n\n{\n  long input_data_ptr;\n  size_t input_string_length;\n  char *base_name;\n  ulong max_length;\n  char *output_string;\n  byte byte_var;\n  undefined result [16];\n  \n  byte_var = 0;\n  if (DAT_0010d5f9 == '\\0') {\n    base_name = (char *)lbasename();\n    input_string = base_name;\n    if ((DAT_0010d5fa != '\\0') && (struct_ptr != 0)) {\n      input_string_length = strlen(base_name);\n      max_length = (ulong)*(byte *)(*(long *)(struct_ptr + 8) + 0x1e);\n      if (max_length < input_string_length) {\n        input_string = (char *)xmalloc(max_length + 1);\n        input_data_ptr = *(long *)(struct_ptr + 8);\n        output_string = input_string;\n        for (max_length = (ulong)*(byte *)(input_data_ptr + 0x1e); max_length != 0; max_length = max_length - 1) {\n          *output_string = *base_name;\n          base_name = base_name + (ulong)byte_var * -2 + 1;\n          output_string = output_string + (ulong)byte_var * -2 + 1;\n        }\n        input_string[*(byte *)(input_data_ptr + 0x1e)] = '\\0';\n      }\n    }\n  }\n  result._8_8_ = unused_param2;\n  result._0_8_ = input_string;\n  return result;\n}\n\n",
            "current_name": "extract_sub_string_00105830",
            "entrypoint": "0x00105830",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105830": "extract_sub_string_00105830",
                "__s": "base_name",
                "auVar6": "result",
                "bVar5": "byte_var",
                "lVar1": "input_data_ptr",
                "param_1": "input_string",
                "param_2": "struct_ptr",
                "param_3": "unused_param",
                "param_4": "unused_param2",
                "pcVar4": "output_string",
                "sVar2": "input_string_length",
                "uVar3": "max_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105870": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "FUN_00105870": {
                    "find_file": 2,
                    "find_file_by_criteria": 1,
                    "find_file_by_name": 1,
                    "find_file_entry": 1,
                    "find_file_in_directory": 1,
                    "find_file_in_list": 1,
                    "find_file_in_memory": 2,
                    "find_file_offset": 1,
                    "find_filename": 3,
                    "find_last_file_ptr": 1,
                    "find_last_match": 3,
                    "find_last_matching": 1,
                    "find_last_matching_file": 1,
                    "find_last_matching_pointer": 1,
                    "find_last_occurrence": 1,
                    "find_last_occurrence_or_match": 1,
                    "find_matching_address": 1,
                    "find_matching_entry": 1,
                    "find_matching_file": 3,
                    "find_matching_filename": 1,
                    "find_matching_pointer": 1,
                    "find_matching_string": 1,
                    "find_next_matching_pointer": 1
                },
                "filename_cmp": {
                    "compare_filenames": 1
                },
                "iVar1": {
                    "cmp_result": 8,
                    "comparison_result": 20,
                    "result": 3
                },
                "iVar3": {
                    "case_option": 1,
                    "case_type": 1,
                    "case_value": 1,
                    "comparison_flag": 1,
                    "condition": 1,
                    "default_search_type": 1,
                    "entry_type": 1,
                    "file_count": 1,
                    "file_type": 2,
                    "list_mode": 1,
                    "loop_condition": 1,
                    "mode": 6,
                    "operation_type": 1,
                    "search_method": 1,
                    "search_mode": 4,
                    "search_option": 2,
                    "search_type": 3,
                    "type": 1
                },
                "param_1": {
                    "addresses": 1,
                    "array": 3,
                    "entry_list": 1,
                    "file_array": 3,
                    "file_directory": 1,
                    "file_entries": 1,
                    "file_list": 16,
                    "input_array": 1,
                    "offset_list": 1,
                    "pointer_array": 3
                },
                "param_2": {
                    "array_length": 2,
                    "array_size": 1,
                    "comparison_value": 1,
                    "count": 2,
                    "file_count": 8,
                    "length": 2,
                    "num_elements": 1,
                    "num_entries": 1,
                    "num_files": 5,
                    "number_of_files": 1,
                    "search_mode": 4,
                    "search_type": 3
                },
                "param_3": {
                    "desired_filename": 1,
                    "desired_value": 1,
                    "file_name": 1,
                    "filename": 8,
                    "search_directory": 1,
                    "search_file": 2,
                    "search_file_name": 2,
                    "search_filename": 1,
                    "search_key": 1,
                    "search_keyword": 1,
                    "search_string": 2,
                    "search_target": 1,
                    "search_value": 2,
                    "target": 1,
                    "target_file": 1,
                    "target_filename": 5
                },
                "uVar2": {
                    "default_file": 3,
                    "default_file_name": 2,
                    "default_filename": 9,
                    "default_name": 1,
                    "default_search_string": 1,
                    "search_key_copy": 1
                }
            },
            "called": [
                "FUN_00102cd9"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0"
            ],
            "code": "\nlong * find_last_matching_file_00105870(long *file_list,int file_count,undefined8 filename)\n\n{\n  int comparison_result;\n  undefined8 default_filename;\n  int mode;\n  \n  default_filename = DAT_0010d638;\n  mode = DAT_0010d640;\n  if (DAT_0010d640 == 0) {\n    default_filename = filename;\n    mode = file_count;\n  }\n  if (mode == 3) {\n    for (; *file_list != 0; file_list = (long *)(*file_list + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_list != (undefined8 *)0x0; file_list = (long *)(*file_list + 0xf0)) {\n      comparison_result = filename_cmp(*(undefined8 *)*file_list,default_filename);\n      if (comparison_result == 0) {\n        if (mode != 2) {\n          return file_list;\n        }\n        return (long *)(*file_list + 0xf0);\n      }\n    }\n  }\n  return file_list;\n}\n\n",
            "current_name": "find_last_matching_file_00105870",
            "entrypoint": "0x00105870",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105870": "find_last_matching_file_00105870",
                "filename_cmp": "compare_filenames",
                "iVar1": "comparison_result",
                "iVar3": "mode",
                "param_1": "file_list",
                "param_2": "file_count",
                "param_3": "filename",
                "uVar2": "default_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001058b0": {
            "additional_data": {
                "FUI_001057a0": {
                    "open_file_function": 1
                },
                "FUN_001058b0": {
                    "archive_file_info": 1,
                    "create_archive_entry": 1,
                    "create_archive_listing": 1,
                    "extract_and_print_archive_information": 1,
                    "extract_archive_details": 1,
                    "extract_archive_info": 1,
                    "extract_archive_metadata": 2,
                    "generate_archive_listing": 1,
                    "print_archive_info": 2,
                    "print_archive_information": 1,
                    "print_file_information": 1,
                    "process_archive": 1,
                    "process_archive_entry": 1,
                    "write_archive": 1,
                    "write_archive_data": 1,
                    "write_archive_entry": 1,
                    "write_archive_info": 5,
                    "write_archive_information": 1,
                    "write_archive_metadata": 2
                },
                "__format": {
                    "err_msg": 1,
                    "error_format": 2,
                    "error_message": 6,
                    "error_msg": 3,
                    "format": 3,
                    "format_str": 1,
                    "format_string": 9,
                    "string_format": 1,
                    "time_data_format": 1,
                    "time_error_msg": 2
                },
                "__ptr": {
                    "archive_file": 1,
                    "archive_path": 1,
                    "duplicate_file_paths": 1,
                    "duplicate_path": 1,
                    "duplicate_pointer": 1,
                    "duplicate_ptr": 3,
                    "duplicated_pointer": 1,
                    "duplicated_string": 1,
                    "entry_name": 1,
                    "file_name": 3,
                    "file_name_copy": 1,
                    "file_path": 5,
                    "file_path_copy": 2,
                    "file_str": 1,
                    "file_string": 1,
                    "path": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "str_dup": 1,
                    "temp_path": 1
                },
                "__stream": {
                    "archive_file": 7,
                    "archive_stream": 1,
                    "file": 3,
                    "file_pointer": 1,
                    "file_stream": 15,
                    "stream": 3
                },
                "cStack_31": {
                    "c2": 1,
                    "c_stack1": 1,
                    "c_stack31": 2,
                    "c_value2": 1,
                    "char2": 1,
                    "char_stack_31": 1,
                    "character2": 1,
                    "character31": 1,
                    "character_stack_variable_2": 1,
                    "file_perm_char": 1,
                    "file_permission_second_character": 1,
                    "flag_b": 1,
                    "hard_link": 1,
                    "is_link": 1,
                    "is_setgid": 2,
                    "is_setgid_char": 2,
                    "is_sgid": 1,
                    "is_writable": 1,
                    "permission_char2": 1,
                    "setgid_bit_char": 1,
                    "setgid_flag": 1,
                    "stack_char3": 1,
                    "stack_var_31": 1,
                    "temp_char2": 1,
                    "uppercase_w": 1,
                    "writable_flag": 1,
                    "write_permission": 2
                },
                "cStack_32": {
                    "c1": 1,
                    "c_stack2": 1,
                    "c_stack32": 2,
                    "c_value1": 1,
                    "char1": 1,
                    "char_stack_32": 1,
                    "character1": 1,
                    "character32": 1,
                    "character_stack_variable_1": 1,
                    "executable_flag": 1,
                    "file_mode_char": 1,
                    "file_permission": 1,
                    "flag_a": 1,
                    "is_directory": 1,
                    "is_readable": 1,
                    "is_setuid": 2,
                    "is_setuid_char": 2,
                    "is_suid": 1,
                    "permission_char1": 1,
                    "read_permission": 2,
                    "setuid_bit_char": 1,
                    "setuid_flag": 1,
                    "stack_char2": 1,
                    "stack_var_32": 1,
                    "symbolic_link": 1,
                    "temp_char1": 1,
                    "uppercase_r": 1
                },
                "cVar1": {
                    "char1": 1,
                    "char_val": 1,
                    "char_value": 2,
                    "char_var": 1,
                    "char_var1": 1,
                    "character": 1,
                    "character_variable": 1,
                    "flag": 2,
                    "result": 13,
                    "success_flag": 1
                },
                "iVar3": {
                    "dup_fd": 3,
                    "duplicate_fd": 2,
                    "fd": 3,
                    "file_descriptor": 9,
                    "int1": 1,
                    "int_val": 1,
                    "int_value": 1,
                    "int_var": 1,
                    "int_var3": 1,
                    "integer_variable": 1
                },
                "in_stack_00000028": {
                    "device_number": 1,
                    "file_inode": 1,
                    "file_owner": 1,
                    "file_owner_id": 1,
                    "file_size": 3,
                    "file_uid": 1,
                    "file_user_id": 1,
                    "high_order_size": 1,
                    "in_stack1": 1,
                    "in_stack28": 1,
                    "in_stack_value": 1,
                    "inode": 1,
                    "inode_number": 3,
                    "integer_stack_variable_1": 1,
                    "major_dev": 1,
                    "owner_id": 2,
                    "st_mtime": 1,
                    "stack28": 1,
                    "stack_28": 1,
                    "stack_int1": 1,
                    "stack_val2": 1,
                    "stack_value2": 1,
                    "stack_var2": 2,
                    "uid": 1
                },
                "in_stack_00000038": {
                    "another_in_stack_value": 1,
                    "file_group_id": 1,
                    "file_size": 10,
                    "group_id": 1,
                    "in_stack2": 1,
                    "in_stack38": 1,
                    "inode_number": 1,
                    "integer_stack_variable_2": 1,
                    "modification_time": 1,
                    "mtime": 1,
                    "st_size": 1,
                    "stack38": 1,
                    "stack_38": 1,
                    "stack_uint2": 1,
                    "stack_val3": 1,
                    "stack_value3": 1,
                    "stack_var3": 2,
                    "timestamp": 3
                },
                "local_3c": {
                    "archive_fd": 1,
                    "array_variable_1": 1,
                    "error": 1,
                    "error_buffer": 1,
                    "error_code": 2,
                    "error_info": 1,
                    "error_status": 1,
                    "error_status_array": 1,
                    "error_values": 1,
                    "fd_local": 1,
                    "file_descriptor_array": 1,
                    "file_descriptor_copy": 1,
                    "local_arr": 1,
                    "local_array": 3,
                    "local_int_array": 1,
                    "local_variables": 1,
                    "pipe_fds": 1,
                    "result": 2,
                    "status": 2,
                    "status_array": 1,
                    "temp_fd": 2,
                    "temp_file_descriptor": 1,
                    "temporary": 1
                },
                "param_1": {
                    "archive_entry_params": 1,
                    "archive_file": 1,
                    "archive_files": 1,
                    "archive_info": 1,
                    "archive_path": 1,
                    "arguments": 1,
                    "entry_list": 1,
                    "file_info": 3,
                    "file_params": 1,
                    "file_paths": 6,
                    "files": 1,
                    "info": 1,
                    "input_params": 2,
                    "param": 1,
                    "parameter": 1,
                    "parameters": 6,
                    "params": 1
                },
                "ppcVar5": {
                    "archive": 2,
                    "archive_data": 2,
                    "archive_file_data": 1,
                    "archive_file_ptr": 1,
                    "archive_format": 2,
                    "archive_fp": 1,
                    "archive_ptr": 1,
                    "archive_stream": 1,
                    "archived_file": 1,
                    "char_pointer": 1,
                    "char_pointer_pointer": 1,
                    "execution_line": 1,
                    "file_format": 1,
                    "file_format_pointer": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "format": 1,
                    "format_ptr": 2,
                    "opened_file": 2,
                    "output_params": 1,
                    "pointer_to_char": 1,
                    "ppc_var": 1,
                    "ppc_var5": 1,
                    "processed_file_stream": 1,
                    "str_arr": 1
                },
                "uStack0000000000000020": {
                    "file_mode": 6,
                    "file_mode_stack": 1,
                    "file_perm": 1,
                    "file_permission": 2,
                    "file_permissions": 6,
                    "file_stats": 2,
                    "permission_bits": 1,
                    "permission_flags": 1,
                    "stack_20": 1,
                    "stack_uint1": 1,
                    "stack_val1": 1,
                    "stack_value": 1,
                    "stack_var1": 2,
                    "u_stack1": 1,
                    "u_stack20": 2,
                    "unsigned_stack_variable_1": 1
                },
                "uStack_33": {
                    "file_mode": 1,
                    "file_permission": 1,
                    "file_type": 10,
                    "file_type_char": 4,
                    "file_type_indicator": 1,
                    "file_type_letter": 1,
                    "file_type_stack": 1,
                    "flag_value": 1,
                    "permission_char": 1,
                    "stack_char1": 1,
                    "stack_var_33": 1,
                    "type_indicator": 1,
                    "type_symbol": 1,
                    "u_stack2": 1,
                    "u_stack33": 2,
                    "unsigned_stack_variable_2": 1
                },
                "uVar2": {
                    "bitmask": 1,
                    "flag": 1,
                    "flags": 12,
                    "format_flag": 2,
                    "format_options": 1,
                    "new_access": 1,
                    "uint1": 1,
                    "uint_val": 1,
                    "uint_value": 2,
                    "uint_var": 1,
                    "uint_var2": 1,
                    "unsigned_variable": 1,
                    "var1": 1
                },
                "uVar4": {
                    "archive_size": 1,
                    "file_descriptor": 1,
                    "file_mode": 1,
                    "file_size": 1,
                    "format": 2,
                    "message": 1,
                    "param_3": 1,
                    "ptr_var": 1,
                    "stream_offset": 1,
                    "string_literal": 1,
                    "temp_error_msg": 1,
                    "temp_file": 1,
                    "temp_file_error": 1,
                    "temp_info": 1,
                    "time_data": 4,
                    "time_stamp": 1,
                    "u_value": 1,
                    "u_var4": 1,
                    "uint2": 1,
                    "uint_var4": 1,
                    "undefined_val": 1,
                    "unsigned_variable_2": 1
                }
            },
            "called": [
                "FUN_001057a0",
                "bfd_set_format",
                "FUN_00107c10",
                "dcgettext",
                "bfd_fdopenw",
                "close",
                "xstrdup"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00107650",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid write_archive_info_001058b0(undefined8 *parameters)\n\n{\n  char result;\n  uint flags;\n  int file_descriptor;\n  undefined8 time_data;\n  char *format_string;\n  void *file_path;\n  FILE *file_stream;\n  char **archive_data;\n  uint file_mode;\n  uint file_size;\n  undefined8 file_size;\n  int local_array [2];\n  undefined file_type;\n  char is_setuid_char;\n  char is_setgid;\n  \n  time_data = parameters[0x1e];\n  local_array[0] = -1;\n  file_path = (void *)xstrdup(*parameters);\n  file_stream = (FILE *)FUN_001057a0(file_path,local_array);\n  file_descriptor = local_array[0];\n  if (file_stream != (FILE *)0x0) {\n    DAT_0010d618 = file_stream;\n    archive_data = (char **)bfd_fdopenw(file_stream,*(undefined8 *)parameters[1],local_array[0]);\n    if (archive_data != (char **)0x0) {\n      DAT_0010d5e0 = archive_data;\n      bfd_set_format(archive_data,2);\n      flags = (~DAT_0010d648 >> 0x1f) << 3 | *(byte *)((long)archive_data + 0x49) & 0xfffffff7;\n      *(char *)((long)archive_data + 0x49) = (char)flags;\n      if (DAT_0010d5fa != '\\0') {\n        *(uint *)((long)archive_data + 0x44) = *(uint *)((long)archive_data + 0x44) | 0x400;\n      }\n      if (_DAT_0010d2d0 != 0) {\n        *(uint *)((long)archive_data + 0x44) = *(uint *)((long)archive_data + 0x44) | 0x2000;\n      }\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102d37;\n      while( true ) {\n        if ((DAT_0010d5f8 != '\\0') || ((*(byte *)((long)parameters + 0x49) & 0x10) != 0)) {\n          *(byte *)((long)archive_data + 0x49) = (byte)flags | 0x10;\n        }\n        result = bfd_set_archive_head(archive_data,time_data);\n        if (result != '\\0') break;\n        flags = FUN_00107c10(file_path);\nLAB_00102d37:\n        *(uint *)((long)archive_data + 0x44) = *(uint *)((long)archive_data + 0x44) | 0x100000;\n      }\n      file_descriptor = dup(file_descriptor);\n      result = bfd_close(archive_data);\n      if (result == '\\0') {\n        FUN_00107c10(file_path);\n        format_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(&stack0xffffffffffffffd8,format_string);\n        flags = file_mode & 0xf000;\n        if (flags == 0x4000) {\n          file_type = 100;\n        }\n        else if (flags == 0xa000) {\n          file_type = 0x6c;\n        }\n        else if (flags == 0x6000) {\n          file_type = 0x62;\n        }\n        else if (flags == 0x2000) {\n          file_type = 99;\n        }\n        else if (flags == 0xc000) {\n          file_type = 0x73;\n        }\n        else {\n          file_type = 0x70;\n          if (flags != 0x1000) {\n            file_type = 0x2d;\n          }\n        }\n        is_setuid_char = (-((_file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n        is_setgid = (-((_file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n        fprintf(file_stream,\"%s %ld/%ld %6lu %s \",&is_setuid_char,_file_mode >> 0x20,\n                (ulong)file_size,file_size,&stack0xffffffffffffffd8,\n                _file_mode & 0xffffffff);\n        fputs(*archive_data,file_stream);\n        if ((char)parameters != '\\0') {\n          if ((*(byte *)((long)archive_data + 0x49) & 0x10) == 0) {\n            if (archive_data[0xb] != (char *)0x0) {\n              fprintf(file_stream,\" 0x%lx\");\n            }\n          }\n          else if (archive_data[0xc] != (char *)0x0) {\n            fprintf(file_stream,\" 0x%lx\");\n          }\n        }\n        fputc(10,file_stream);\n        return;\n      }\n      DAT_0010d5e0 = (char **)0x0;\n      DAT_0010d618 = (FILE *)0x0;\n      bfd_close(parameters);\n      file_descriptor = FUN_00105bc0(file_stream,file_path,file_descriptor);\n      if (file_descriptor == 0) {\n        free(file_path);\n        free(file_stream);\n        return;\n      }\n      goto LAB_00102d7a;\n    }\n    close(file_descriptor);\n    FUN_00107c10(file_path);\n  }\n  time_data = dcgettext(0,\"could not create temporary file whilst writing archive\",5);\n  FUN_00107c10(time_data);\nLAB_00102d7a:\n                    \n  xexit(1);\n}\n\n",
            "current_name": "write_archive_info_001058b0",
            "entrypoint": "0x001058b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001058b0": "write_archive_info_001058b0",
                "__format": "format_string",
                "__ptr": "file_path",
                "__stream": "file_stream",
                "cStack_31": "is_setgid",
                "cStack_32": "is_setuid_char",
                "cVar1": "result",
                "iVar3": "file_descriptor",
                "in_stack_00000028": "file_size",
                "in_stack_00000038": "file_size",
                "local_3c": "local_array",
                "param_1": "parameters",
                "ppcVar5": "archive_data",
                "uStack0000000000000020": "file_mode",
                "uStack_33": "file_type",
                "uVar2": "flags",
                "uVar4": "time_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a20": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "base_output_path": 1
                },
                "DAT_0010d60c": {
                    "verbose_output": 1
                },
                "DAT_0010d618": {
                    "current_output_path": 1
                },
                "FUN_00105a20": {
                    "create_archive_file": 1,
                    "create_output_file": 1,
                    "decompose_pathname": 1,
                    "extract_and_process_file": 1,
                    "extract_archive_member": 7,
                    "extract_file": 4,
                    "extract_file_from_binary": 1,
                    "extract_output_file": 3,
                    "extract_output_path": 1,
                    "open_output_file": 1,
                    "parse_output_path": 1,
                    "process_archive_member_path": 1,
                    "process_file": 1,
                    "process_output": 1,
                    "process_output_path": 4,
                    "process_path": 1
                },
                "pFVar5": {
                    "file": 8,
                    "file_pointer": 13,
                    "file_ptr": 5,
                    "output_file": 5
                },
                "param_1": {
                    "file_path": 1,
                    "input_path": 4,
                    "output_path": 19,
                    "path": 5,
                    "pathname": 2
                },
                "pcVar1": {
                    "archive_path": 1,
                    "base_dir": 10,
                    "base_directory": 5,
                    "base_path": 12,
                    "base_pathname": 1,
                    "default_path": 1,
                    "parent_directory": 1
                },
                "pcVar2": {
                    "curr_char": 1,
                    "curr_path": 2,
                    "current": 1,
                    "current_component": 1,
                    "current_dir": 6,
                    "current_directory": 2,
                    "current_path": 15,
                    "current_path_segment": 1,
                    "current_pathname": 1,
                    "current_segment": 1
                },
                "sVar6": {
                    "archive_path_length": 1,
                    "base_dir_len": 1,
                    "base_dir_length": 7,
                    "base_directory_length": 4,
                    "base_len": 2,
                    "base_name_length": 2,
                    "base_path_length": 8,
                    "base_pathname_length": 1,
                    "length": 2,
                    "parent_directory_length": 1,
                    "path_len": 1,
                    "path_length": 1
                },
                "uVar3": {
                    "base": 1,
                    "base_file_name": 2,
                    "base_name": 15,
                    "base_pathname": 1,
                    "basename": 1,
                    "basename_result": 8,
                    "extracted_path": 2,
                    "resolved_path": 1
                },
                "uVar4": {
                    "error_message": 28,
                    "error_msg": 2,
                    "error_string": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid process_archive_member_path_00105a20(char *output_path)\n\n{\n  char *base_path;\n  char *current_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *file_pointer;\n  size_t base_path_length;\n  \n  base_path = DAT_0010d5e8;\n  DAT_0010d618 = output_path;\n  if (*output_path == '/') {\nLAB_00102e9a:\n    base_name = lbasename();\n    base_path = DAT_0010d618;\n    error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\",5);\n    FUN_00107920(error_message,base_path,base_name);\n    DAT_0010d618 = (char *)base_name;\n    FUN_00105a68();\n    return;\n  }\n  do {\n    if (*output_path == '\\0') {\n      if ((DAT_0010d5e8 != (char *)0x0) && (base_path_length = strlen(DAT_0010d5e8), base_path_length != 0)) {\n        if (base_path[base_path_length - 1] == '/') {\n          DAT_0010d618 = (char *)concat(base_path,DAT_0010d618,0);\n        }\n        else {\n          DAT_0010d618 = (char *)concat(base_path,&DAT_00108260,DAT_0010d618,0);\n        }\n      }\n      if (DAT_0010d60c != 0) {\n        printf(\"x - %s\\n\",DAT_0010d618);\n      }\n      file_pointer = fopen(DAT_0010d618,\"w\");\n      if (file_pointer == (FILE *)0x0) {\n        perror(DAT_0010d618);\n                    \n        xexit(1);\n      }\n      return;\n    }\n    current_path = output_path;\n    if ((*output_path == '.') && (current_path = output_path + 1, output_path[1] == '.')) {\n      current_path = output_path + 2;\n      if ((output_path[2] == '/') || (output_path[2] == '\\0')) goto LAB_00102e9a;\n    }\n    for (; (*current_path != '\\0' && (*current_path != '/')); current_path = current_path + 1) {\n    }\n    for (; output_path = current_path, *current_path == '/'; current_path = current_path + 1) {\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_archive_member_path_00105a20",
            "entrypoint": "0x00105a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a20": "process_archive_member_path_00105a20",
                "pFVar5": "file_pointer",
                "param_1": "output_path",
                "pcVar1": "base_path",
                "pcVar2": "current_path",
                "sVar6": "base_path_length",
                "uVar3": "base_name",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a68": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "directory_path": 1,
                    "file_path": 2
                },
                "DAT_0010d60c": {
                    "check_file_existence": 1,
                    "flag": 1,
                    "write_flag": 1
                },
                "DAT_0010d618": {
                    "concatenated_path": 1,
                    "file_path": 1,
                    "modified_file_path": 1
                },
                "FUN_00105a68": {
                    "create_and_write_file": 1,
                    "create_output_file": 6,
                    "generate_output_file": 3,
                    "initialize_file": 1,
                    "initialize_output_file": 1,
                    "prepare_and_write_to_file": 1,
                    "process_data": 1,
                    "process_file": 10,
                    "process_file_operation": 1,
                    "write_data_to_file": 1,
                    "write_to_file": 3
                },
                "concat": {
                    "concatenate": 1,
                    "concatenate_strings": 1
                },
                "fopen": {
                    "open_file": 2
                },
                "fprintf": {
                    "write_to_output_file": 1
                },
                "pFVar2": {
                    "file": 5,
                    "file_handle": 1,
                    "file_pointer": 17,
                    "file_ptr": 2,
                    "output_file": 6
                },
                "pcVar1": {
                    "base_directory": 2,
                    "current_directory": 1,
                    "data_path": 1,
                    "directory": 3,
                    "directory_path": 12,
                    "file_path": 7,
                    "input_directory": 2,
                    "path": 3
                },
                "perror": {
                    "print_error": 1
                },
                "printf": {
                    "print_message": 1,
                    "print_output": 1
                },
                "sVar3": {
                    "base_directory_length": 1,
                    "data_path_length": 1,
                    "directory_length": 3,
                    "directory_path_length": 4,
                    "file_length": 2,
                    "file_name_length": 1,
                    "file_path_length": 2,
                    "file_size": 3,
                    "input_directory_length": 1,
                    "input_length": 1,
                    "length": 2,
                    "path_length": 5,
                    "string_length": 5
                },
                "strlen": {
                    "string_length": 1
                },
                "write_to_output_file": {
                    "write_to_file": 1
                },
                "xexit": {
                    "exit_program": 2
                }
            },
            "called": [
                "xexit",
                "FUN_00102e57",
                "strlen",
                "printf",
                "perror",
                "concat",
                "fopen"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid process_file_operation_00105a68(void)\n\n{\n  char *directory_path;\n  FILE *file_pointer;\n  size_t strlen;\n  \n  directory_path = DAT_0010d5e8;\n  if (DAT_0010d5e8 != (char *)0x0) {\n    string_length = string_length(DAT_0010d5e8);\n    if (string_length != 0) {\n      if (directory_path[string_length - 1] == '/') {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,DAT_0010d618,0);\n      }\n      else {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,&DAT_00108260,DAT_0010d618,0);\n      }\n    }\n  }\n  if (DAT_0010d60c != 0) {\n    printf(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = fopen(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  perror(DAT_0010d618);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "process_file_operation_00105a68",
            "entrypoint": "0x00105a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a68": "process_file_operation_00105a68",
                "concat": "concatenate_strings",
                "fopen": "open_file",
                "pFVar2": "file_pointer",
                "pcVar1": "directory_path",
                "perror": "print_error",
                "printf": "print_output",
                "sVar3": "string_length",
                "strlen": "string_length",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105ae0": {
            "additional_data": {
                "FUN_00105ae0": {
                    "execute": 1,
                    "execute_function": 21,
                    "execute_sub_function": 1,
                    "initialize": 2,
                    "process_data": 1,
                    "update_values": 1
                },
                "FUN_00105af0": {
                    "calculate": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_data": 5,
                    "reverse_binary": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 1
                },
                "F_UNDECODED_FUNCTION": {
                    "decode_function": 1
                },
                "param_1": {
                    "arg1": 7,
                    "argument1": 2,
                    "array": 1,
                    "array_ptr": 1,
                    "data1": 2,
                    "data_1": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "function_param_1": 1,
                    "input1": 4,
                    "input_1": 2,
                    "input_arg_1": 1,
                    "input_array": 1,
                    "original_param": 1
                },
                "param_2": {
                    "arg2": 7,
                    "argument2": 2,
                    "array_length": 1,
                    "data2": 2,
                    "data_2": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "data_value": 1,
                    "function_param_2": 1,
                    "input2": 4,
                    "input_2": 2,
                    "input_arg_2": 1,
                    "reverse_param": 1,
                    "value": 4
                },
                "param_3": {
                    "char1": 3,
                    "char_1": 1,
                    "character1": 2,
                    "flag1": 16,
                    "flag_1": 6,
                    "function_param_3": 1
                },
                "param_4": {
                    "char2": 3,
                    "char_2": 1,
                    "character2": 2,
                    "flag2": 16,
                    "flag_2": 6,
                    "function_param_4": 1
                }
            },
            "called": [
                "FUN_00105af0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nvoid execute_sub_function_00105ae0(undefined8 arg1,undefined8 arg2,undefined flag1,undefined flag2)\n\n{\n  FUN_00105af0(arg1,arg2,flag1,flag2);\n  return;\n}\n\n",
            "current_name": "execute_sub_function_00105ae0",
            "entrypoint": "0x00105ae0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105ae0": "execute_sub_function_00105ae0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "flag1",
                "param_4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105af0": {
            "additional_data": {
                "FUN_00102f08": {
                    "execute_function": 1,
                    "extract_error": 1,
                    "generate_error": 1,
                    "generate_output": 1,
                    "handle_error": 1
                },
                "FUN_00105af0": {
                    "archive_file_search": 1,
                    "extract_archive_files": 1,
                    "extract_archived_file": 1,
                    "extract_archived_files": 19,
                    "extract_archives": 2,
                    "extract_archives_and_update": 1,
                    "process_archived_files": 2,
                    "process_archives": 1,
                    "process_file": 1,
                    "process_files": 2
                },
                "bfd_check_format": {
                    "check_binary_format": 1,
                    "check_file_format": 2,
                    "check_format": 1,
                    "is_bfd_format_supported": 1,
                    "is_valid_archive": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 4,
                    "get_next_file": 1
                },
                "cVar1": {
                    "check_result": 2,
                    "format_check_result": 6,
                    "format_checked": 1,
                    "format_supported": 1,
                    "format_valid": 1,
                    "is_bfd_format": 2,
                    "is_bfd_format_valid": 4,
                    "is_binary_format": 1,
                    "is_format_valid": 2,
                    "is_valid": 2,
                    "is_valid_format": 7,
                    "valid_format": 1
                },
                "lVar3": {
                    "archived_file": 20,
                    "archived_file_handle": 2,
                    "archived_file_ptr": 1,
                    "current_file": 1,
                    "file": 2,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_ptr": 1,
                    "next_file": 2
                },
                "param_1": {
                    "archive_files": 1,
                    "archive_files_ptr": 1,
                    "archive_list": 3,
                    "archive_list_ptr": 1,
                    "file_list": 17,
                    "file_list_ptr": 1,
                    "file_pointers": 1,
                    "file_table": 1,
                    "files": 1,
                    "input_files": 1,
                    "output_files": 1,
                    "result": 1,
                    "source_ptr": 1
                },
                "param_2": {
                    "archive": 6,
                    "archive_file": 16,
                    "archive_filename": 1,
                    "archive_handle": 2,
                    "archive_ptr": 1,
                    "current_file": 1,
                    "file": 3,
                    "file_ptr": 1
                },
                "param_3": {
                    "check_format": 11,
                    "check_format_flag": 4,
                    "extract_flag": 5,
                    "flag": 1,
                    "flag1": 9,
                    "option_1": 1
                },
                "param_4": {
                    "check_flag": 1,
                    "check_format": 2,
                    "check_format_flag": 2,
                    "extract_archived": 1,
                    "extract_archives": 1,
                    "extract_flag": 1,
                    "extract_nested": 3,
                    "extract_recursive": 1,
                    "extract_subarchives": 1,
                    "extract_subfiles": 1,
                    "flag2": 9,
                    "format_check_flag": 1,
                    "open_file_flag": 1,
                    "option_2": 1,
                    "process_archives": 1,
                    "recursive": 2,
                    "recursive_flag": 2
                },
                "uVar2": {
                    "extract_result": 2,
                    "extracted_count": 1,
                    "extracted_file": 1,
                    "extracted_files": 2,
                    "extracted_flag": 1,
                    "recursive_call_result": 1,
                    "recursive_result": 1,
                    "result": 16,
                    "sub_result": 5,
                    "subresult": 1
                },
                "uVar4": {
                    "extracted_count": 2,
                    "extracted_files_count": 5,
                    "num_archived_files": 1,
                    "num_extracted": 1,
                    "num_extracted_files": 4,
                    "recursive_call_result": 1,
                    "result": 7,
                    "return_val": 1,
                    "return_value": 5,
                    "success": 2,
                    "total_extracted": 1,
                    "total_extracted_files": 1
                }
            },
            "called": [
                "bfd_check_format",
                "FUN_00105af0",
                "FUN_00102f08",
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105af0",
                "FUN_00105ae0"
            ],
            "code": "\nulong extract_archived_files_00105af0(long *file_list,long archive_file,char check_format,char flag2)\n\n{\n  char is_valid_format;\n  uint result;\n  long archived_file;\n  ulong result;\n  \n  if (flag2 == '\\0') {\n    if (check_format != '\\0') {\n      result = FUN_00102f08();\n      return result;\n    }\n  }\n  else {\n    is_valid_format = bfd_check_format(archive_file,2);\n    if (is_valid_format != '\\0') {\n      result = 0;\n      for (archived_file = bfd_openr_next_archived_file(archive_file,0); archived_file != 0;\n          archived_file = bfd_openr_next_archived_file(archive_file,archived_file)) {\n        result = extract_archived_files_00105af0(file_list,archived_file,check_format,1);\n        if ((char)result != '\\0') {\n          result = (ulong)result;\n          file_list = (long *)(*file_list + 0xf0);\n        }\n      }\n      return result;\n    }\n    if (check_format != '\\0') {\n      result = FUN_00102f08();\n      return result;\n    }\n  }\n  *(long *)(archive_file + 0xf0) = *file_list;\n  *file_list = archive_file;\n  return 1;\n}\n\n",
            "current_name": "extract_archived_files_00105af0",
            "entrypoint": "0x00105af0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105af0": "extract_archived_files_00105af0",
                "bfd_check_format": "check_file_format",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "cVar1": "is_valid_format",
                "lVar3": "archived_file",
                "param_1": "file_list",
                "param_2": "archive_file",
                "param_3": "check_format",
                "param_4": "flag2",
                "uVar2": "result",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bb0": {
            "additional_data": {
                "DAT_": {
                    "dat_": 2
                },
                "FUN_00105bb0": {
                    "calculate_result": 1,
                    "check_return_value": 1,
                    "check_success": 3,
                    "get_one": 11,
                    "get_result": 2,
                    "get_return_value": 3,
                    "get_true_value": 1,
                    "initialize": 3,
                    "initialize_application": 1,
                    "initialize_game": 1,
                    "is_one": 2,
                    "return_one": 2
                },
                "PTR_": {
                    "ptr_": 2
                },
                "return": {
                    "result": 5,
                    "return_value": 1,
                    "status": 1
                },
                "return_value": {
                    "result": 2
                },
                "undefined8": {
                    "bool": 3,
                    "int": 2,
                    "uint64_t": 8,
                    "void": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint64_t get_one_00105bb0(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_one_00105bb0",
            "entrypoint": "0x00105bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bb0": "get_one_00105bb0",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bc0": {
            "additional_data": {
                "FUN_00105bc0": {
                    "copy_and_delete_file": 5,
                    "copy_and_remove_file": 3,
                    "copy_and_replace_file": 1,
                    "copy_and_unlink_file": 13,
                    "copy_file": 1,
                    "copy_file_and_remove_original": 1,
                    "copy_file_and_unlink": 5,
                    "copy_file_with_reason": 1
                },
                "auVar6": {
                    "output_values": 1,
                    "result": 13,
                    "result_struct": 2,
                    "return_value": 10,
                    "return_value_struct": 1,
                    "return_values": 3
                },
                "param_1": {
                    "existing_file_path": 1,
                    "source_file": 9,
                    "source_file_path": 18,
                    "source_filepath": 2,
                    "source_path": 1
                },
                "param_2": {
                    "dest_file": 1,
                    "destination_file": 8,
                    "destination_file_path": 18,
                    "destination_filepath": 2,
                    "destination_path": 1,
                    "new_file_path": 1
                },
                "param_3": {
                    "copy_flags": 2,
                    "copy_mode": 1,
                    "copy_options": 2,
                    "errno_value": 1,
                    "error_code": 10,
                    "error_flag": 1,
                    "file_copy_mode": 1,
                    "file_permission": 4,
                    "file_permissions": 3,
                    "flags": 1,
                    "param": 2,
                    "param1": 1,
                    "param3": 1,
                    "param_3": 1
                },
                "param_4": {
                    "error_code": 1,
                    "error_message": 1,
                    "file_size": 7,
                    "original_return_value": 1,
                    "original_value": 1,
                    "param2": 1,
                    "param4": 1,
                    "param_4": 1,
                    "reason": 1,
                    "result": 9,
                    "result_value": 1,
                    "return_value": 4,
                    "timestamp": 1,
                    "unlink_flags": 1
                },
                "pcVar3": {
                    "err_msg": 2,
                    "err_string": 1,
                    "error_description": 1,
                    "error_message": 16,
                    "error_msg": 1,
                    "error_string": 10
                },
                "piVar2": {
                    "err_location_ptr": 1,
                    "err_num_ptr": 1,
                    "errno_location": 15,
                    "errno_location_ptr": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 3,
                    "error_code_location": 1,
                    "error_code_ptr": 1,
                    "error_location": 4,
                    "error_location_ptr": 1,
                    "error_ptr": 1
                },
                "uVar1": {
                    "copy_result": 9,
                    "copy_success": 1,
                    "errno": 1,
                    "error": 1,
                    "error_code": 2,
                    "error_code_check": 1,
                    "error_code_result": 4,
                    "error_code_value": 3,
                    "file_copy_result": 3,
                    "file_copy_status": 1,
                    "flag": 1,
                    "permission_check": 1,
                    "result": 1,
                    "return_value": 1,
                    "status": 1
                },
                "uVar4": {
                    "error_formatted_message": 1,
                    "error_message": 9,
                    "error_message_format": 1,
                    "error_str": 1,
                    "error_string": 2,
                    "gettext_result": 1,
                    "localized_error_message": 5,
                    "message_id": 1,
                    "translated_error": 2,
                    "translated_error_message": 6,
                    "translated_message": 1,
                    "translated_msg": 1
                },
                "uVar5": {
                    "copy_result": 3,
                    "copy_size": 1,
                    "copy_status": 1,
                    "error_code": 2,
                    "error_code_converted": 1,
                    "error_value": 1,
                    "file_copy_result": 3,
                    "file_size": 1,
                    "unlink_result": 16,
                    "unlink_return_value": 1,
                    "unlink_status": 1
                }
            },
            "called": [
                "FUN_00105c00",
                "FUN_00102f1e"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102d2f"
            ],
            "code": "\nundefined  [16] copy_file_and_unlink_00105bc0(char *source_file_path,char *destination_file_path,undefined4 error_code,undefined8 result)\n\n{\n  uint copy_result;\n  int *errno_location;\n  char *error_message;\n  undefined8 error_message;\n  ulong unlink_result;\n  undefined result [16];\n  \n  if (destination_file_path == source_file_path) {\n    unlink_result = 0;\n  }\n  else {\n    copy_result = FUN_00105c00(error_code);\n    unlink_result = (ulong)copy_result;\n    if (copy_result != 0) {\n      errno_location = __errno_location();\n      error_message = strerror(*errno_location);\n      error_message = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n      FUN_00107920(error_message,destination_file_path,error_message);\n    }\n    unlink(source_file_path);\n  }\n  result._8_8_ = result;\n  result._0_8_ = unlink_result;\n  return result;\n}\n\n",
            "current_name": "copy_file_and_unlink_00105bc0",
            "entrypoint": "0x00105bc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bc0": "copy_file_and_unlink_00105bc0",
                "auVar6": "result",
                "param_1": "source_file_path",
                "param_2": "destination_file_path",
                "param_3": "error_code",
                "param_4": "result",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "uVar1": "copy_result",
                "uVar4": "error_message",
                "uVar5": "unlink_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105c00": {
            "additional_data": {
                "FUN_00105c00": {
                    "copy_and_save_file_to_destination": 1,
                    "copy_file": 1,
                    "copy_file_contents": 3,
                    "copy_file_data": 1,
                    "extract_and_save": 1,
                    "extract_and_save_content": 1,
                    "extract_and_save_data": 1,
                    "extract_and_save_to_file": 1,
                    "extract_binary_data": 1,
                    "reverse_and_copy_file": 2,
                    "reverse_and_save_file": 5,
                    "reverse_and_write": 2,
                    "reverse_and_write_to_file": 1,
                    "reverse_binary": 2
                },
                "_Var3": {
                    "current_offset": 3,
                    "current_position": 4,
                    "file_offset": 2,
                    "file_position": 4,
                    "file_size": 5,
                    "initial_position": 1,
                    "offset": 6,
                    "seek_offset": 1,
                    "source_file_offset": 3,
                    "source_file_size": 2
                },
                "__errno_location": {
                    "get_error_code": 1
                },
                "__fd": {
                    "copied_file_descriptor": 1,
                    "dest_file_descriptor": 1,
                    "destination_fd": 2,
                    "destination_file_descriptor": 8,
                    "file_descriptor2": 2,
                    "new_file_descriptor": 2,
                    "output_fd": 3,
                    "output_file_descriptor": 12
                },
                "__off_t": {
                    "offset": 1
                },
                "__offset": {
                    "offset": 1
                },
                "__whence": {
                    "whence": 1
                },
                "auStack_2038": {
                    "buffer": 26,
                    "data_buffer": 2,
                    "read_buffer": 1
                },
                "iVar1": {
                    "close_error": 2,
                    "errno": 1,
                    "errno_value": 4,
                    "error": 4,
                    "error_code": 6,
                    "error_code1": 3,
                    "error_code_1": 1,
                    "error_number": 2,
                    "error_value": 2,
                    "original_errno": 2,
                    "original_error_code": 2,
                    "read_error": 1
                },
                "iVar2": {
                    "bytes_processed": 1,
                    "bytes_read": 3,
                    "bytes_read_1": 1,
                    "bytes_read_written": 1,
                    "bytes_to_write": 1,
                    "error_code": 1,
                    "error_code2": 2,
                    "num_bytes": 1,
                    "read_bytes": 3,
                    "read_result": 11,
                    "read_size": 2,
                    "return_value": 2,
                    "temp_variable": 1
                },
                "param_1": {
                    "binary_file_descriptor": 1,
                    "file_descriptor": 15,
                    "file_descriptor1": 1,
                    "input_fd": 3,
                    "input_file_descriptor": 2,
                    "source_fd": 2,
                    "source_file_descriptor": 7
                },
                "param_2": {
                    "destination_file": 2,
                    "destination_file_name": 1,
                    "destination_file_path": 7,
                    "file_name": 5,
                    "file_path": 4,
                    "filename": 4,
                    "output_file": 3,
                    "output_file_name": 2,
                    "output_file_path": 1,
                    "output_filename": 2
                },
                "piVar6": {
                    "errno_address": 1,
                    "errno_location": 3,
                    "errno_pointer": 1,
                    "errno_ptr": 5,
                    "errno_value": 1,
                    "error": 1,
                    "error_code": 4,
                    "error_code_location": 1,
                    "error_code_ptr": 1,
                    "error_location": 4,
                    "error_location_pointer": 1,
                    "error_pointer": 5,
                    "error_ptr": 2
                },
                "sVar5": {
                    "bytes_read": 3,
                    "bytes_written": 20,
                    "bytes_written_check": 1,
                    "num_bytes_written": 1,
                    "write_bytes": 1,
                    "write_result": 3,
                    "write_size": 2
                },
                "uVar4": {
                    "bytes_copied": 4,
                    "bytes_read": 15,
                    "bytes_read_written": 1,
                    "bytes_written": 4,
                    "copy_size": 1,
                    "num_bytes_read": 1,
                    "result": 2,
                    "return_value": 2
                }
            },
            "called": [
                "open",
                "read",
                "FUN_00102f55",
                "lseek",
                "write",
                "close",
                "__errno_location"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nulong reverse_and_save_file_00105c00(int file_descriptor,char *destination_file_path)\n\n{\n  int error_code;\n  int output_file_descriptor;\n  int read_result;\n  offset offset;\n  ulong bytes_read;\n  size_t bytes_written;\n  int *error_pointer;\n  undefined buffer [8200];\n  \n  if ((-1 < file_descriptor) && (offset = lseek(file_descriptor,0,0), offset == 0)) {\n    output_file_descriptor = open(destination_file_path,0x201);\n    if (output_file_descriptor < 0) {\n      bytes_read = FUN_00102f55();\n      return bytes_read;\n    }\n    do {\n      bytes_read = read(file_descriptor,buffer,0x2000);\n      read_result = (int)bytes_read;\n      if (read_result < 1) {\n        error_pointer = __errno_location();\n        error_code = *error_pointer;\n        close(file_descriptor);\n        close(output_file_descriptor);\n        if (read_result != 0) {\n          *error_pointer = error_code;\n          return 0xffffffff;\n        }\n        return bytes_read & 0xffffffff;\n      }\n      bytes_written = write(output_file_descriptor,buffer,(long)read_result);\n    } while (bytes_written == (long)read_result);\n    error_pointer = __errno_location();\n    read_result = *error_pointer;\n    close(file_descriptor);\n    close(output_file_descriptor);\n    *error_pointer = read_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "reverse_and_save_file_00105c00",
            "entrypoint": "0x00105c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105c00": "reverse_and_save_file_00105c00",
                "_Var3": "offset",
                "__errno_location": "get_error_code",
                "__fd": "output_file_descriptor",
                "__off_t": "offset",
                "auStack_2038": "buffer",
                "iVar1": "error_code",
                "iVar2": "read_result",
                "param_1": "file_descriptor",
                "param_2": "destination_file_path",
                "piVar6": "error_pointer",
                "sVar5": "bytes_written",
                "uVar4": "bytes_read"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105cf0": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d03) */\n/* WARNING: Removing unreachable block (ram,0x00105d0f) */\n\nvoid FUNC_00105cf0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105cf0",
            "entrypoint": "0x00105cf0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105cf0": "FUNC_00105cf0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105d20": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d44) */\n/* WARNING: Removing unreachable block (ram,0x00105d50) */\n\nvoid FUNC_00105d20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105d20",
            "entrypoint": "0x00105d20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105d20": "FUNC_00105d20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105db0": {
            "additional_data": {
                "CASE_D_0": {
                    "case_d0": 1
                },
                "CASE_D_1": {
                    "case_d1": 1
                },
                "CASE_D_2": {
                    "case_d2": 1
                },
                "CASE_D_3": {
                    "case_d3": 1
                },
                "CASE_D_4": {
                    "case_d4": 1
                },
                "CASE_D_5": {
                    "case_d5": 1
                },
                "CASE_D_68": {
                    "case_d68": 1
                },
                "ExtraOut_EDX": {
                    "extra_out_edx": 1
                },
                "FUN_00105db0": {
                    "decompile_and_improve": 3,
                    "decompiled_function": 2,
                    "handle_at_files": 1,
                    "parse_command_line": 1,
                    "parse_command_line_arguments": 1,
                    "process_files": 4
                },
                "PPUVar31": {
                    "undefined_ptr_ptr_1": 1
                },
                "__ptr": {
                    "byte_array2": 1,
                    "byte_pointer": 7,
                    "byte_pointer2": 3,
                    "byte_pointer_2": 1,
                    "byte_ptr": 8,
                    "byte_ptr2": 2,
                    "byte_ptr_1": 1,
                    "byte_ptr_2": 1,
                    "dynamic_array": 1,
                    "ptr1": 1,
                    "ptr_byte2": 2,
                    "ptr_var4": 1,
                    "temp_pointer2": 1
                },
                "bVar13": {
                    "byte_2": 1,
                    "byte_var": 9,
                    "byte_var1": 1,
                    "byte_var13": 4,
                    "byte_var2": 9,
                    "byte_var_2": 1,
                    "byte_variable": 1,
                    "byte_variable_2": 1,
                    "current_char": 1,
                    "temp_byte": 1
                },
                "bVar3": {
                    "byte_1": 1,
                    "byte_flag": 1,
                    "byte_var": 16,
                    "byte_var1": 4,
                    "byte_var3": 3,
                    "byte_variable": 2,
                    "char_flag": 1,
                    "current_byte_flag": 1,
                    "temp_byte": 1
                },
                "bVar46": {
                    "byte_var3": 1
                },
                "bVar47": {
                    "bool_var": 1,
                    "bool_var3": 4,
                    "bool_var47": 2,
                    "bool_variable": 1
                },
                "bVar48": {
                    "byte_var": 1,
                    "byte_var2": 2,
                    "byte_var3": 3,
                    "byte_var48": 3,
                    "byte_variable": 1
                },
                "bVar8": {
                    "bool_1": 1,
                    "bool_var": 6,
                    "bool_var1": 12,
                    "bool_var8": 5,
                    "bool_var_1": 1,
                    "bool_variable": 1,
                    "bool_variable_1": 1,
                    "flag1": 1,
                    "temp_bool": 1,
                    "unknown_flag1": 1
                },
                "bVar9": {
                    "bool_2": 1,
                    "bool_var": 6,
                    "bool_var2": 12,
                    "bool_var9": 5,
                    "bool_var_2": 1,
                    "bool_variable": 1,
                    "bool_variable_2": 1,
                    "temp_bool": 1,
                    "unknown_flag2": 1
                },
                "bvar9": {
                    "flag2": 1
                },
                "cVar14": {
                    "char_1": 1,
                    "char_var": 15,
                    "char_var1": 5,
                    "char_var14": 5,
                    "char_variable": 2,
                    "current_char2": 1,
                    "temp_char": 1
                },
                "cVar47": {
                    "bool_var3": 1
                },
                "extraout_EDX": {
                    "extra_out_edx": 2,
                    "extra_output_edx": 1,
                    "extraout_edx": 3,
                    "extraout_edx_var1": 1,
                    "temp_var4": 1,
                    "uint_var": 3,
                    "uint_var2": 2,
                    "uint_var3": 1,
                    "uint_var7": 1,
                    "uint_variable": 1,
                    "uint_variable_2": 1,
                    "unknown8": 1
                },
                "iVar15": {
                    "current_int2": 1,
                    "int_1": 1,
                    "int_var": 11,
                    "int_var1": 7,
                    "int_var15": 5,
                    "int_var2": 1,
                    "int_variable": 2,
                    "temp_int": 1,
                    "temp_var": 1
                },
                "iVar45": {
                    "int_var": 6,
                    "int_var2": 7,
                    "int_var3": 1,
                    "int_var45": 5,
                    "int_var_2": 1,
                    "int_variable": 1,
                    "int_variable_2": 1,
                    "temp_int": 1,
                    "temp_var9": 1
                },
                "lVar24": {
                    "long_1": 1,
                    "long_var": 9,
                    "long_var1": 9,
                    "long_var24": 5,
                    "long_var3": 1,
                    "long_variable": 2,
                    "temp_long": 2,
                    "temp_long2": 1
                },
                "lVar33": {
                    "long_var": 1
                },
                "lVar34": {
                    "long_var": 7,
                    "long_var2": 8,
                    "long_var3": 1,
                    "long_var34": 5,
                    "long_var4": 1,
                    "long_var_2": 1,
                    "long_variable": 1,
                    "long_variable_2": 1,
                    "temp_long": 1,
                    "temp_long4": 1
                },
                "lVar35": {
                    "long_var": 6,
                    "long_var3": 8,
                    "long_var35": 5,
                    "long_var4": 1,
                    "long_var5": 1,
                    "long_variable": 1,
                    "long_variable_3": 1,
                    "temp_long": 1,
                    "temp_long2": 1,
                    "temp_long3": 1
                },
                "lVar45": {
                    "long_var4": 1
                },
                "local_100": {
                    "local_long1": 1,
                    "local_long_var": 4,
                    "local_variable100": 1,
                    "long_var": 6,
                    "long_var100": 2,
                    "long_var2": 1,
                    "long_var4": 5,
                    "long_var_3": 1,
                    "long_variable": 1,
                    "long_variable_4": 1,
                    "temp_long": 1
                },
                "local_108": {
                    "local_size": 1,
                    "local_size_t1": 1,
                    "local_size_var": 3,
                    "local_variable108": 1,
                    "size_t_var": 4,
                    "size_t_var108": 1,
                    "size_t_var3": 4,
                    "size_t_var_3": 1,
                    "size_t_variable": 1,
                    "size_t_variable_3": 1,
                    "size_var": 2,
                    "size_var108": 1,
                    "size_var3": 2,
                    "temp_size": 1
                },
                "local_110": {
                    "char_double_pointer": 2,
                    "char_double_pointer110": 1,
                    "char_double_pointer4": 1,
                    "char_double_pointer_4": 1,
                    "char_double_ptr": 2,
                    "char_double_ptr2": 1,
                    "char_pointer_pointer": 2,
                    "char_pointer_pointer4": 2,
                    "char_ptr_list": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr110": 1,
                    "char_ptr_ptr4": 1,
                    "char_ptr_ptr_2": 1,
                    "char_ptr_ptr_var": 1,
                    "local_char_ptr_ptr": 2,
                    "local_ppc_var": 1,
                    "local_ptr_char1": 1,
                    "local_ptr_ptr_char": 1,
                    "local_variable110": 1
                },
                "local_118": {
                    "byte_pointer": 3,
                    "byte_pointer3": 1,
                    "byte_pointer5": 2,
                    "byte_pointer_5": 1,
                    "byte_ptr": 4,
                    "byte_ptr118": 1,
                    "byte_ptr3": 1,
                    "byte_ptr5": 1,
                    "byte_ptr_4": 1,
                    "byte_var118": 1,
                    "byte_variable": 1,
                    "local_byte1": 1,
                    "local_byte_ptr": 2,
                    "local_byte_var": 1,
                    "local_data_ptr": 1,
                    "local_variable118": 1
                },
                "local_128": {
                    "file_pointer": 2,
                    "file_pointer5": 1,
                    "file_pointer6": 1,
                    "file_pointer_5": 1,
                    "file_ptr": 2,
                    "file_ptr4": 1,
                    "file_var": 2,
                    "file_var128": 1,
                    "file_var2": 1,
                    "file_var4": 1,
                    "file_var_5": 1,
                    "file_variable": 1,
                    "input_file_pointer5": 1,
                    "input_file_ptr": 1,
                    "local_file2": 1,
                    "local_file_ptr": 2,
                    "local_file_var2": 2,
                    "local_ptr128": 1,
                    "local_variable128": 1
                },
                "local_130": {
                    "file_pointer": 1,
                    "file_pointer5": 1,
                    "file_ptr3": 1,
                    "file_var1": 1,
                    "file_var_4": 1,
                    "input_file_pointer4": 1,
                    "local_data": 1,
                    "local_file1": 1,
                    "local_file_object": 1,
                    "local_file_var": 2,
                    "local_ptr130": 1,
                    "local_variable130": 1,
                    "output_file_ptr": 1,
                    "temp_long": 1,
                    "undefined8_ptr": 1,
                    "undefined8_var": 3,
                    "undefined8_var130": 1,
                    "undefined8_var3": 2,
                    "undefined8_variable": 1,
                    "undefined8_variable_3": 1
                },
                "local_b0": {
                    "local_u_int1": 1,
                    "local_u_int_var": 1,
                    "local_uint_var": 3,
                    "local_variable_b0": 1,
                    "temp_uint": 1,
                    "uint_var": 7,
                    "uint_var3": 1,
                    "uint_var4": 1,
                    "uint_var5": 3,
                    "uint_var6": 1,
                    "uint_var_4": 1,
                    "uint_var_b0": 1,
                    "uint_varb0": 1,
                    "uint_variable": 1,
                    "uint_variable_5": 1
                },
                "local_c8": {
                    "local_2byte_var": 1,
                    "local_undef_data": 1,
                    "local_undefined_var": 1,
                    "local_variable_c8": 1,
                    "temp_undefined": 1,
                    "undefined2_arr": 1,
                    "undefined2_array": 1,
                    "undefined2_var": 1,
                    "undefined_arr": 1,
                    "undefined_arr1": 1,
                    "undefined_array": 2,
                    "undefined_array1": 2,
                    "undefined_var": 3,
                    "undefined_var1": 1,
                    "undefined_var_2": 1,
                    "undefined_var_c8": 1,
                    "undefined_varc8": 1,
                    "undefined_variable": 1
                },
                "pFVar18": {
                    "current_file": 1,
                    "file_pointer": 8,
                    "file_pointer1": 2,
                    "file_pointer18": 1,
                    "file_ptr": 4,
                    "file_ptr_1": 1,
                    "file_var": 6,
                    "file_var1": 1,
                    "file_var18": 2,
                    "input_file_pointer": 1,
                    "output_file": 1,
                    "p_file_var18": 1,
                    "ptr_file1": 1
                },
                "pFVar22": {
                    "file1": 1,
                    "file_pointer": 5,
                    "file_pointer2": 3,
                    "file_pointer22": 1,
                    "file_pointer_2": 1,
                    "file_ptr": 2,
                    "file_ptr1": 1,
                    "file_ptr2": 2,
                    "file_ptr_2": 1,
                    "file_var": 3,
                    "file_var2": 3,
                    "file_var22": 2,
                    "file_var_2": 1,
                    "input_file_pointer2": 1,
                    "p_file_var22": 1,
                    "ptr_file2": 1,
                    "temp_file_pointer": 1
                },
                "pFVar28": {
                    "file2": 1,
                    "file_pointer": 4,
                    "file_pointer28": 1,
                    "file_pointer3": 3,
                    "file_pointer_3": 1,
                    "file_ptr": 2,
                    "file_ptr2": 1,
                    "file_ptr3": 1,
                    "file_ptr_3": 1,
                    "file_var": 3,
                    "file_var28": 1,
                    "file_var3": 3,
                    "file_var_3": 1,
                    "filed_ptr3": 1,
                    "input_file_pointer3": 1,
                    "p_file_var28": 1,
                    "ptr_file3": 1,
                    "temp_file_pointer3": 1,
                    "unaff_r12_copy": 1,
                    "unknown6": 1
                },
                "pFVar31": {
                    "file_var": 1
                },
                "pPVar32": {
                    "char_ptr_ptr_2": 1
                },
                "param_1": {
                    "arg1": 2,
                    "argc": 6,
                    "input_flag": 1,
                    "input_param": 8,
                    "input_parameter": 1,
                    "num": 1,
                    "num_args": 1,
                    "param": 1,
                    "param1": 4,
                    "param_1": 1,
                    "parameter1": 1,
                    "parameter_1": 1,
                    "uint_param": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 2,
                    "argv": 6,
                    "file": 3,
                    "file_param": 8,
                    "file_parameter": 1,
                    "file_pointer": 1,
                    "input_file": 2,
                    "param2": 4,
                    "param_2": 1,
                    "parameter2": 1,
                    "parameter_2": 1
                },
                "pbVar1": {
                    "buffer": 1,
                    "byte_array": 3,
                    "byte_array_1": 1,
                    "byte_pointer": 7,
                    "byte_pointer1": 3,
                    "byte_ptr": 4,
                    "byte_ptr1": 3,
                    "current_byte": 1,
                    "data_ptr": 1,
                    "ptr": 1,
                    "ptr_byte": 1,
                    "ptr_byte1": 4
                },
                "pbVar32": {
                    "byte_pointer": 1
                },
                "pbVar33": {
                    "byte_pointer": 2,
                    "byte_pointer3": 2,
                    "byte_pointer33": 1,
                    "byte_pointer4": 1,
                    "byte_pointer_3": 1,
                    "byte_ptr": 4,
                    "byte_ptr3": 1,
                    "byte_ptr33": 1,
                    "byte_ptr_2": 1,
                    "byte_var3": 1,
                    "byte_var33": 1,
                    "input_pointer": 1,
                    "ptr_byte33": 1,
                    "ptr_byte_var33": 1
                },
                "pbVar38": {
                    "byte_pointer": 4,
                    "byte_pointer2": 1,
                    "byte_pointer38": 1,
                    "byte_pointer4": 2,
                    "byte_pointer5": 1,
                    "byte_pointer_4": 1,
                    "byte_ptr": 3,
                    "byte_ptr38": 1,
                    "byte_ptr4": 1,
                    "byte_ptr_3": 1,
                    "byte_var38": 1,
                    "byte_var4": 1,
                    "ptr_byte2": 1,
                    "ptr_byte3": 2,
                    "ptr_byte38": 1,
                    "ptr_byte_var38": 1
                },
                "pcVar23": {
                    "char_pointer": 5,
                    "char_pointer1": 2,
                    "char_pointer23": 1,
                    "char_ptr": 2,
                    "char_ptr23": 1,
                    "char_ptr_1": 1,
                    "char_var": 3,
                    "char_var2": 3,
                    "char_var23": 2,
                    "char_var3": 1,
                    "char_var_2": 1,
                    "char_var_ptr": 1,
                    "ptr_char": 2,
                    "ptr_char1": 1,
                    "ptr_char23": 1,
                    "str_ptr": 1,
                    "temp_char_pointer": 1
                },
                "pcVar39": {
                    "char_pointer": 3,
                    "char_pointer2": 1,
                    "char_pointer3": 2,
                    "char_pointer39": 1,
                    "char_pointer_3": 1,
                    "char_ptr_2": 1,
                    "char_ptr_var39": 1,
                    "char_var": 3,
                    "char_var39": 3,
                    "char_var4": 1,
                    "char_var_ptr": 1,
                    "message": 1,
                    "ptr_char2": 1,
                    "ptr_char3": 2
                },
                "pcVar43": {
                    "char_pointer": 2,
                    "char_pointer4": 2,
                    "char_pointer_4": 1,
                    "char_ptr2": 1,
                    "char_ptr_var2": 1,
                    "char_var": 1,
                    "char_var43": 2,
                    "char_var_ptr": 1,
                    "pc_var43": 2,
                    "ptr_char4": 1,
                    "temp_string3": 1
                },
                "pcVar46": {
                    "char_pointer": 1,
                    "char_pointer5": 1,
                    "char_ptr": 1,
                    "char_ptr_var46": 1,
                    "char_var_ptr": 1,
                    "pc_var46": 1
                },
                "piVar11": {
                    "current_int": 1,
                    "int_pointer": 9,
                    "int_pointer1": 2,
                    "int_pointer11": 1,
                    "int_ptr": 5,
                    "int_ptr1": 2,
                    "int_ptr11": 1,
                    "int_ptr_1": 1,
                    "int_var": 1,
                    "int_var_ptr": 1,
                    "integer_variable": 1,
                    "ptr_int": 2,
                    "ptr_int1": 1,
                    "ptr_int11": 1
                },
                "plVar21": {
                    "long_pointer": 5,
                    "long_pointer2": 4,
                    "long_pointer21": 2,
                    "long_pointer_2": 1,
                    "long_ptr": 4,
                    "long_ptr1": 1,
                    "long_ptr2": 2,
                    "long_ptr21": 1,
                    "long_ptr_1": 1,
                    "long_ptr_2": 1,
                    "long_var2": 1,
                    "ptr_long2": 3,
                    "ptr_long21": 1,
                    "ptr_long_var21": 1,
                    "temp_long": 1,
                    "temp_ptr": 1
                },
                "plVar29": {
                    "long_pointer_double_pointer": 1,
                    "long_pointer_pointer1": 1,
                    "long_pointer_pointer29": 1,
                    "long_ptr_ptr": 1,
                    "long_ptr_ptr1": 1,
                    "temp_longs_pointer": 1
                },
                "plVar4": {
                    "current_long": 1,
                    "long_array_1": 1,
                    "long_pointer": 9,
                    "long_pointer1": 2,
                    "long_pointer4": 1,
                    "long_ptr": 6,
                    "long_ptr1": 2,
                    "long_ptr4": 1,
                    "long_var": 1,
                    "ptr_long": 3,
                    "ptr_long1": 1,
                    "ptr_long4": 1,
                    "ptr_var4": 1
                },
                "ppcVar10": {
                    "array_of_strings": 1,
                    "char_double_pointer": 7,
                    "char_double_ptr": 1,
                    "char_double_ptr1": 1,
                    "char_pointer_pointer": 2,
                    "char_pointer_pointer1": 2,
                    "char_pointer_pointer10": 1,
                    "char_ptr_ptr": 4,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr10": 1,
                    "char_ptr_ptr_1": 1,
                    "file_list": 1,
                    "filename_list": 1,
                    "ptr_ptr_char": 1,
                    "ptr_ptr_char1": 1,
                    "ptr_ptr_char10": 1,
                    "ptr_to_char_ptr": 1,
                    "ptr_to_ptr_char": 1
                },
                "ppcVar31": {
                    "char_double_pointer": 1,
                    "char_double_pointer2": 1,
                    "char_double_pointer31": 1,
                    "char_double_pointer_2": 1,
                    "char_pointer_pointer2": 2,
                    "char_pointer_pointer31": 1,
                    "char_ptr_ptr": 3,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr31": 1,
                    "filenames_pointer": 1,
                    "ptr_ptr_char2": 1,
                    "ptr_ptr_char31": 1,
                    "ptr_ptr_char_var31": 1,
                    "ptr_to_char_ptr2": 1,
                    "temp_char_ptr": 1
                },
                "ppcVar32": {
                    "char_double_pointer": 1,
                    "char_double_pointer3": 1,
                    "char_double_pointer32": 1,
                    "char_double_pointer_3": 1,
                    "char_pointer_pointer3": 2,
                    "char_pointer_pointer32": 1,
                    "char_ptr_ptr": 3,
                    "char_ptr_ptr3": 1,
                    "char_ptr_ptr32": 1,
                    "ptr_ptr_char3": 1,
                    "ptr_ptr_char32": 1,
                    "ptr_ptr_char_var32": 1,
                    "temp_filenames_pointer": 1
                },
                "ppiVar29": {
                    "temp_double_ptr": 1
                },
                "pplVar29": {
                    "local_130": 1,
                    "long_double_pointer": 4,
                    "long_double_pointer29": 1,
                    "long_double_ptr1": 1,
                    "long_pointer_pointer": 2,
                    "long_pointer_pointer1": 1,
                    "long_ptr_ptr": 3,
                    "long_ptr_ptr29": 1,
                    "long_ptr_ptr_1": 1,
                    "ptr_ptr_long": 1,
                    "ptr_ptr_long_var29": 1
                },
                "ppuVar36": {
                    "ptr_ptr_undefined_var36": 1,
                    "ptr_ptr_void36": 1,
                    "ptr_to_ptr": 1,
                    "undefined8_pointer3": 1,
                    "undefined_double_pointer": 3,
                    "undefined_double_pointer36": 1,
                    "undefined_pointer_pointer": 1,
                    "undefined_pointer_pointer1": 2,
                    "undefined_pointer_pointer36": 1,
                    "undefined_ptr_ptr": 3,
                    "undefined_ptr_ptr1": 1,
                    "undefined_ptr_ptr36": 1
                },
                "puVar12": {
                    "ptr_undef": 1,
                    "ptr_undef1": 1,
                    "ptr_var3": 1,
                    "ptr_void": 1,
                    "ptr_void12": 1,
                    "temp_pointer": 1,
                    "undefined_pointer": 9,
                    "undefined_pointer1": 2,
                    "undefined_pointer12": 1,
                    "undefined_ptr": 6,
                    "undefined_ptr1": 2,
                    "undefined_ptr12": 1,
                    "undefined_ptr_1": 1,
                    "unknown_variable": 1
                },
                "puVar2": {
                    "buffer_ptr": 1,
                    "current_word": 1,
                    "flag_ptr": 1,
                    "ptr_u_int": 1,
                    "ptr_u_int1": 1,
                    "ptr_u_int2": 1,
                    "ptr_uint": 2,
                    "ptr_var": 1,
                    "uint_array_1": 1,
                    "uint_pointer": 9,
                    "uint_pointer1": 2,
                    "uint_pointer2": 1,
                    "uint_ptr": 5,
                    "uint_ptr1": 2,
                    "uint_ptr2": 1
                },
                "puVar26": {
                    "ptr_u_int8": 1,
                    "ptr_uint82": 1,
                    "ptr_undef82": 1,
                    "ptr_undef8_2": 1,
                    "ptr_undefined8_var26": 1,
                    "ptr_var5": 1,
                    "temp_ptr3": 1,
                    "uint64_pointer": 1,
                    "undefined8_pointer": 4,
                    "undefined8_pointer2": 3,
                    "undefined8_pointer26": 2,
                    "undefined8_pointer_2": 1,
                    "undefined8_ptr": 4,
                    "undefined8_ptr2": 2,
                    "undefined8_ptr26": 1,
                    "undefined8_ptr_2": 2,
                    "undefined_pointer2": 1,
                    "undefined_var_ptr": 1,
                    "unknown4": 1
                },
                "puVar46": {
                    "ptr_void8_local130": 1,
                    "undefined8_ptr3": 1
                },
                "puVar5": {
                    "current_pointer": 1,
                    "ptr_uint8": 1,
                    "ptr_undef8": 1,
                    "ptr_undef8_1": 1,
                    "ptr_undefined8": 1,
                    "ptr_var2": 1,
                    "ptr_var5": 1,
                    "ptr_void8": 1,
                    "uint64_pointer": 1,
                    "ulonglong_pointer": 1,
                    "undefined8_pointer": 7,
                    "undefined8_pointer1": 2,
                    "undefined8_pointer5": 1,
                    "undefined8_ptr": 6,
                    "undefined8_ptr1": 2,
                    "undefined8_ptr5": 1,
                    "void_ptr": 1
                },
                "sVar19": {
                    "current_size_t": 1,
                    "size": 1,
                    "size_t_1": 1,
                    "size_t_var": 4,
                    "size_t_var1": 5,
                    "size_t_var19": 1,
                    "size_t_variable": 2,
                    "size_var": 7,
                    "size_var1": 3,
                    "size_var19": 4,
                    "temp_int": 1
                },
                "sVar20": {
                    "read_size": 1,
                    "size2": 1,
                    "size_t_2": 1,
                    "size_t_var": 3,
                    "size_t_var2": 5,
                    "size_t_var20": 1,
                    "size_t_var_2": 1,
                    "size_t_variable": 1,
                    "size_t_variable_2": 1,
                    "size_var": 4,
                    "size_var2": 6,
                    "size_var20": 4,
                    "temp_int": 1
                },
                "uStack_c5": {
                    "stack_undef_data2": 1,
                    "stack_var1": 1,
                    "u_stack_c5": 1,
                    "u_stack_undefined5_var": 1,
                    "uint_var": 1,
                    "uint_var7": 1,
                    "undefined5_var": 6,
                    "undefined5_var1": 4,
                    "undefined5_var_u_stack_c5": 1,
                    "undefined5_variable": 1,
                    "undefined8_var": 1,
                    "undefined_var6": 1
                },
                "uStack_c6": {
                    "stack_undef_data": 1,
                    "stack_var2": 1,
                    "u_stack_c6": 1,
                    "u_stack_char_var": 1,
                    "uint_var6": 1,
                    "undefined5_varc6": 1,
                    "undefined8_var": 1,
                    "undefined_var": 3,
                    "undefined_var1": 1,
                    "undefined_var4": 3,
                    "undefined_var5": 1,
                    "undefined_var8": 1,
                    "undefined_var_3": 1,
                    "undefined_var_u_stack_c6": 1,
                    "undefined_variable": 1
                },
                "uVar16": {
                    "current_uint": 1,
                    "index": 1,
                    "temp_uint": 1,
                    "uint_1": 1,
                    "uint_var": 10,
                    "uint_var1": 7,
                    "uint_var16": 5,
                    "uint_var3": 2,
                    "uint_variable": 2
                },
                "uVar17": {
                    "temp_uint": 1,
                    "temp_var2": 1,
                    "uint32_var": 1,
                    "uint_var17": 2,
                    "uint_var2": 1,
                    "uint_var3": 1,
                    "uint_var4": 2,
                    "ulong_var3": 1,
                    "undef4_var3": 1,
                    "undefined4_3": 1,
                    "undefined4_var": 6,
                    "undefined4_var17": 3,
                    "undefined4_var3": 5,
                    "undefined4_var_2": 1,
                    "undefined4_variable": 1,
                    "undefined4_variable_2": 1,
                    "unknown3": 1
                },
                "uVar25": {
                    "current_ulong": 1,
                    "temp_length2": 1,
                    "temp_ulong": 1,
                    "ulong_1": 1,
                    "ulong_var": 10,
                    "ulong_var1": 8,
                    "ulong_var25": 5,
                    "ulong_var4": 1,
                    "ulong_variable": 2
                },
                "uVar27": {
                    "temp_string2": 1,
                    "temp_uint": 1,
                    "uint_var27": 1,
                    "uint_var3": 1,
                    "uint_var5": 1,
                    "undef8_var1": 1,
                    "undef_var1": 1,
                    "undefined8_1": 1,
                    "undefined8_var": 7,
                    "undefined8_var1": 6,
                    "undefined8_var27": 4,
                    "undefined8_variable": 2,
                    "undefined_var": 1,
                    "undefined_var1": 1,
                    "unknown5": 1
                },
                "uVar30": {
                    "temp_var3": 1,
                    "uint_var6": 1,
                    "ulong_var30": 1,
                    "undefined8_2": 1,
                    "undefined8_var": 5,
                    "undefined8_var2": 6,
                    "undefined8_var30": 4,
                    "undefined8_variable": 1,
                    "undefined8_variable_2": 1,
                    "unknown7": 1
                },
                "uVar37": {
                    "uint_var": 6,
                    "uint_var2": 2,
                    "uint_var3": 3,
                    "uint_var37": 5,
                    "uint_var4": 2,
                    "uint_var8": 1,
                    "uint_var_2": 1,
                    "uint_variable": 1,
                    "uint_variable_3": 1
                },
                "uVar40": {
                    "temp_ulong": 1,
                    "temp_var5": 1,
                    "ulong_var": 6,
                    "ulong_var2": 8,
                    "ulong_var40": 5,
                    "ulong_var5": 1,
                    "ulong_var_2": 1,
                    "ulong_variable": 1,
                    "ulong_variable_2": 1
                },
                "uVar41": {
                    "temp_ulong": 1,
                    "temp_var6": 1,
                    "ulong_var": 6,
                    "ulong_var2": 1,
                    "ulong_var3": 8,
                    "ulong_var41": 5,
                    "ulong_var6": 1,
                    "ulong_var_3": 1,
                    "ulong_variable": 1,
                    "ulong_variable_3": 1
                },
                "uVar42": {
                    "temp_ulong": 1,
                    "temp_var7": 1,
                    "ulong_var": 6,
                    "ulong_var3": 1,
                    "ulong_var4": 8,
                    "ulong_var42": 5,
                    "ulong_var7": 1,
                    "ulong_var_4": 1,
                    "ulong_variable": 1,
                    "ulong_variable_4": 1
                },
                "uVar44": {
                    "temp_uint": 1,
                    "temp_var8": 1,
                    "uint_var": 6,
                    "uint_var2": 1,
                    "uint_var3": 2,
                    "uint_var4": 4,
                    "uint_var44": 5,
                    "uint_var5": 2,
                    "uint_var9": 1,
                    "uint_var_3": 1,
                    "uint_variable": 1,
                    "uint_variable_4": 1
                },
                "uVar6": {
                    "temp1": 1,
                    "temp_uint": 1,
                    "uint1": 1,
                    "uint32_var": 1,
                    "uint_var1": 3,
                    "uint_var6": 3,
                    "ulong_var1": 1,
                    "undef4_var1": 1,
                    "undefined4_1": 1,
                    "undefined4_var": 7,
                    "undefined4_var1": 5,
                    "undefined4_var6": 2,
                    "undefined4_variable": 2,
                    "unknown1": 1
                },
                "uVar7": {
                    "temp2": 1,
                    "temp_uint": 1,
                    "uint2": 1,
                    "uint32_var": 1,
                    "uint_var2": 3,
                    "uint_var7": 3,
                    "ulong_var2": 1,
                    "undef4_var2": 1,
                    "undefined4_2": 1,
                    "undefined4_var": 7,
                    "undefined4_var2": 5,
                    "undefined4_var7": 2,
                    "undefined4_variable": 2,
                    "unknown2": 1
                },
                "unaff_R12": {
                    "file_pointer": 1,
                    "file_pointer4": 2,
                    "file_pointer_4": 1,
                    "file_ptr": 2,
                    "file_ptr4": 2,
                    "file_unaff_r12": 1,
                    "file_var": 1,
                    "file_var4": 1,
                    "file_var_r12": 1,
                    "file_variable": 1,
                    "temp_file_pointer4": 1,
                    "unaff_r12": 2
                },
                "unaff_RBP": {
                    "char_pointer": 5,
                    "char_pointer2": 2,
                    "char_pointer_2": 1,
                    "char_ptr": 5,
                    "char_ptr1": 1,
                    "char_ptr_unaff_rbp": 1,
                    "char_var_rbp": 1,
                    "char_variable": 1,
                    "param_3": 1,
                    "ptr_char2": 2,
                    "ptr_char_var": 1,
                    "unaff_param": 1,
                    "unaff_rbp": 2
                },
                "undefinedTempPointer": {
                    "temp_pointer3": 1
                }
            },
            "called": [
                "free",
                "FUN_0010342d",
                "setlocale",
                "fileno",
                "fclose",
                "FUN_00105870",
                "FUN_001052a0",
                "FUN_001058b0",
                "bfd_make_readable",
                "FUN_00107650",
                "open",
                "isatty",
                "FUN_00107640",
                "FUN_00103e95",
                "xrealloc",
                "FUN_00107730",
                "dcgettext",
                "bfd_close",
                "getopt_long",
                "printf",
                "FUN_00107c10",
                "FUN_0010394a",
                "bfd_plugin_set_program_name",
                "bfd_set_error",
                "FUN_00107690",
                "bfd_set_format",
                "bfd_check_format_matches",
                "strtol",
                "bindtextdomain",
                "FUN_001075e0",
                "fprintf",
                "FUN_00105570",
                "stat",
                "ftell",
                "fopen",
                "xstrdup",
                "filename_cmp",
                "memcpy",
                "FUN_00105480",
                "bfd_set_default_target",
                "lbasename",
                "FUN_00107cc0",
                "malloc",
                "FUN_00103bd1",
                "xexit",
                "bfd_get_error",
                "strlen",
                "fread",
                "bfd_plugin_set_plugin",
                "FUN_00105300",
                "FUN_00107c20",
                "ferror",
                "xmalloc_set_program_name",
                "xmalloc",
                "bfd_bwrite",
                "FUN_00107920",
                "bfd_fdopenr",
                "memmove",
                "bfd_find_target",
                "FUN_00107890",
                "strcmp",
                "bfd_errmsg",
                "bfd_make_writable",
                "FUN_00107740",
                "textdomain",
                "fseek",
                "bfd_set_error_program_name",
                "FUN_00105830",
                "bfd_init",
                "FUN_00103a78",
                "bfd_create"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid process_files_00105db0(uint input_param,FILE *file_param)\n\n{\n  byte *byte_pointer;\n  uint *uint_pointer;\n  byte byte_var;\n  long *long_pointer;\n  undefined8 *undefined8_pointer;\n  undefined4 undefined4_var;\n  undefined4 undefined4_var;\n  bool bool_var1;\n  bool bool_var2;\n  char **char_double_pointer;\n  int *int_pointer;\n  undefined *undefined_pointer;\n  byte byte_var2;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined4 undefined4_var;\n  FILE *file_pointer;\n  size_t size_var;\n  size_t size_var2;\n  byte *byte_ptr;\n  long *long_pointer;\n  FILE *file_pointer;\n  char *char_pointer;\n  long long_var;\n  ulong ulong_var;\n  undefined8 *undefined8_ptr;\n  undefined8 undefined8_var;\n  FILE *file_pointer;\n  long **long_double_pointer;\n  undefined8 undefined8_var2;\n  char **char_ptr_ptr;\n  uint uint_var;\n  char **char_ptr_ptr;\n  byte *byte_ptr;\n  long long_var2;\n  long long_var3;\n  undefined **undefined_ptr_ptr;\n  uint uint_var;\n  char *char_pointer;\n  byte *byte_pointer;\n  char *char_pointer;\n  ulong ulong_var2;\n  ulong ulong_var3;\n  ulong ulong_var4;\n  FILE *unaff_r12;\n  char *char_pointer;\n  uint uint_var;\n  int int_var2;\n  char *pc_var46;\n  bool bool_var3;\n  byte byte_var48;\n  undefined8 undefined8_var;\n  FILE *local_file_var2;\n  byte *byte_ptr;\n  char **local_char_ptr_ptr;\n  size_t size_t_var;\n  long long_var;\n  undefined undefined_var [2];\n  undefined undefined_var;\n  undefined5 undefined5_var;\n  uint uint_var;\n  \n  byte_var48 = 0;\n  pc_var46 = (char *)(ulong)input_param;\n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_0010d660 = *(long **)file_param;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_0010d660);\n  bfd_plugin_set_program_name(DAT_0010d660);\n  char_pointer = (char *)file_param;\n  file_pointer = file_param;\n  if ((int)input_param < 2) goto LAB_001062c6;\n  local_char_ptr_ptr = (char **)0x7d0;\n  unaff_r12 = (FILE *)0x1;\n  local_file_var2 = (FILE *)0x0;\n  file_pointer = file_param;\n  do {\n    uint_var = (uint)unaff_r12;\n    char_pointer = (char *)(long)(int)uint_var;\n    undefined8_var = (FILE *)((long)char_pointer * 8);\n    char_pointer = (char *)file_pointer;\n    if (**(char **)(&file_pointer->_flags + (long)char_pointer * 2) == '@') {\n      uint_var = (int)local_char_ptr_ptr - 1;\n      local_char_ptr_ptr = (char **)(ulong)uint_var;\n      if (uint_var == 0) {\n        long_pointer = *(long **)file_pointer;\n        pc_var46 = \"%s: error: too many @-files encountered\\n\";\nLAB_00106ffe:\n        fprintf(_stderr,pc_var46,long_pointer);\nLAB_0010700f:\n                    \n        xexit(1);\n      }\n      char_pointer = *(char **)(&file_pointer->_flags + (long)char_pointer * 2) + 1;\n      int_var = stat(char_pointer,(stat *)undefined_var);\n      if (-1 < int_var) {\n        if ((uint_var & 0xf000) == 0x4000) {\n          long_pointer = *(long **)file_pointer;\n          pc_var46 = \"%s: error: @-file refers to a directory\\n\";\n          goto LAB_00106ffe;\n        }\n        file_pointer = fopen(char_pointer,\"r\");\n        if (file_pointer != (FILE *)0x0) {\n          int_var = fseek(file_pointer,0,2);\n          if (((int_var != -1) && (size_var = ftell(file_pointer), size_var != 0xffffffffffffffff)) &&\n             (int_var = fseek(file_pointer,0,0), int_var != -1)) {\n            byte_ptr = (byte *)xmalloc(size_var + 1);\n            size_var2 = fread(byte_ptr,1,size_var,file_pointer);\n            if ((size_var == size_var2) || (int_var = ferror(file_pointer), int_var == 0)) {\n              byte_ptr[size_var2] = 0;\n              byte_var2 = *byte_ptr;\n              byte_ptr = byte_ptr;\n              while( true ) {\n                if (byte_var2 == 0) goto LAB_00106814;\n                if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) == 0) break;\n                byte_var2 = byte_ptr[1];\n                byte_ptr = byte_ptr + 1;\n              }\n              size_var = strlen((char *)byte_ptr);\n              byte_ptr = (byte *)xmalloc(size_var + 1);\n              file_pointer = (FILE *)0x0;\n              int_var = 0;\n              bool_var2 = false;\n              bool_var3 = false;\n              bool_var1 = false;\n              long_var = 0;\n              byte_ptr = byte_ptr;\n              do {\n                while (((&_sch_istable)[(ulong)*byte_ptr * 2] & 0x40) != 0) {\n                  byte_ptr = byte_ptr + 1;\n                }\n                if ((int_var == 0) || (int_var + -1 <= (int)long_var)) {\n                  if (file_pointer == (FILE *)0x0) {\n                    int_var = 8;\n                    file_pointer = (FILE *)xmalloc(0x40);\n                    char_ptr_ptr = (char **)((long)&file_pointer->_flags + long_var * 8);\n                    *char_ptr_ptr = (char *)0x0;\n                  }\n                  else {\n                    int_var = int_var * 2;\n                    file_pointer = (FILE *)xrealloc(file_pointer,(long)int_var << 3);\n                    char_ptr_ptr = (char **)((long)&file_pointer->_flags + long_var * 8);\n                    *char_ptr_ptr = (char *)0x0;\n                  }\n                }\n                else {\n                  char_ptr_ptr = (char **)((long)&file_pointer->_flags + long_var * 8);\n                }\n                byte_var2 = *byte_ptr;\n                byte_pointer = byte_ptr;\n                while (byte_var2 != 0) {\n                  while( true ) {\n                    if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                       (!(bool)(bool_var2 | bool_var1 | bool_var3))) {\n                      bool_var1 = false;\n                      bool_var2 = false;\n                      bool_var3 = false;\n                      goto LAB_0010606f;\n                    }\n                    if (!bool_var1) break;\n                    byte_ptr = byte_ptr + 1;\n                    *byte_pointer = byte_var2;\n                    byte_pointer = byte_pointer + 1;\n                    bool_var1 = false;\n                    byte_var2 = *byte_ptr;\n                    if (byte_var2 == 0) goto LAB_0010606f;\n                  }\n                  if (byte_var2 == 0x5c) {\n                    bool_var1 = true;\n                  }\n                  else if (bool_var3) {\n                    if (byte_var2 == 0x27) {\n                      bool_var3 = false;\n                    }\n                    else {\nLAB_001061f1:\n                      *byte_pointer = byte_var2;\n                      byte_pointer = byte_pointer + 1;\n                    }\n                  }\n                  else if (bool_var2) {\n                    if (byte_var2 != 0x22) goto LAB_001061f1;\n                    bool_var2 = false;\n                  }\n                  else if (byte_var2 == 0x27) {\n                    bool_var3 = true;\n                  }\n                  else {\n                    if (byte_var2 != 0x22) goto LAB_001061f1;\n                    bool_var2 = true;\n                  }\n                  byte_pointer = byte_ptr + 1;\n                  byte_ptr = byte_ptr + 1;\n                  byte_var2 = *byte_pointer;\n                }\nLAB_0010606f:\n                *byte_pointer = 0;\n                long_pointer = (long *)xstrdup(byte_ptr);\n                *char_ptr_ptr = (char *)long_pointer;\n                *(undefined8 *)(file_pointer->_shortbuf + long_var * 8 + -0x7b) = 0;\n                byte_var2 = *byte_ptr;\n                byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n                while ((byte_var & 0x40) != 0) {\n                  byte_var2 = byte_ptr[1];\n                  byte_ptr = byte_ptr + 1;\n                  byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n                }\n                long_var = long_var + 1;\n                if (byte_var2 == 0) {\n                  free(byte_ptr);\n                  if (file_pointer == file_param) goto LAB_00106834;\n                  goto LAB_0010610a;\n                }\n              } while( true );\n            }\n            free(byte_ptr);\n          }\n          fclose(file_pointer);\n        }\n      }\n    }\n    if ((int)pc_var46 <= (int)(uint_var + 1)) {\nLAB_001062c6:\n      do {\n        if (_DAT_0010d65c < 0) goto LAB_001073cc;\nLAB_001062d3:\n        uint_var = (uint)unaff_r12;\n        int_var = bfd_init();\n        char_pointer = \"fatal error: libbfd ABI mismatch\";\n        if (int_var != 0x118) goto LAB_00106803;\n        char_pointer = \"x86_64-pc-linux-gnu\";\n        uint_var = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n        undefined_pointer = PTR_DAT_0010d2e0;\n        unaff_r12 = (FILE *)(ulong)uint_var;\n        if ((char)uint_var != '\\0') {\n          if (__xexit_cleanup == (code *)0x0) {\n            __xexit_cleanup = FUN_00107cc0;\n          }\n          if (*(int *)(PTR_DAT_0010d2e0 + 8) < 0x20) {\nLAB_0010632b:\n            undefined_pointer = PTR_DAT_0010d2e0;\n            int_var = *(int *)(PTR_DAT_0010d2e0 + 8);\n            *(int *)(PTR_DAT_0010d2e0 + 8) = int_var + 1;\n            *(code **)(undefined_pointer + (long)int_var * 8 + 0x10) = FUN_00107730;\n          }\n          else {\n            undefined8_ptr = (undefined8 *)malloc(0x110);\n            if (undefined8_ptr != (undefined8 *)0x0) {\n              *undefined8_ptr = undefined_pointer;\n              *(undefined4 *)(undefined8_ptr + 1) = 0;\n              PTR_DAT_0010d2e0 = (undefined *)undefined8_ptr;\n              goto LAB_0010632b;\n            }\n          }\n          long_var = 1;\n          do {\n            long_var3 = long_var;\n            int_var = (int)pc_var46;\n            if (int_var <= (int)long_var3) break;\n            char_var = FUN_00107640(*(undefined8 *)((int *)char_pointer + long_var3 * 2));\n            long_var = long_var3 + 1;\n          } while (char_var != '\\0');\n          pc_var46 = (char *)((long)char_pointer + long_var3 * 8 + -8);\n          uint_var = int_var - ((int)long_var3 + -1);\n          file_pointer = (FILE *)(ulong)uint_var;\n          if (_DAT_0010d65c != 0) {\n            char_pointer = \"DhHUvVt\";\n            uint_var = 0;\n            while (int_var = getopt_long(file_pointer,pc_var46,\"DhHUvVt\",&PTR_DAT_0010d300), int_var != -1)\n            {\n              if (int_var < 0x77) {\n                if (0x43 < int_var) {\n                  switch(int_var) {\n                  case 0x44:\n                    _DAT_0010d2d0 = 1;\n                    break;\n                  case 0x48:\n                  case 0x68:\n                    _DAT_0010d658 = 1;\n                    break;\n                  case 0x55:\n                    _DAT_0010d2d0 = 0;\n                    break;\n                  case 0x56:\n                  case 0x76:\n                    _DAT_0010d654 = 1;\n                    break;\n                  case 0x74:\n                    uint_var = uint_var;\n                  }\n                }\n              }\n              else if (int_var == 0xc9) {\n                bfd_plugin_set_plugin(_optarg);\n              }\n            }\n            if ((int)uint_var < 2) {\nLAB_00107125:\n              char_pointer = (char *)0x0;\n              FUN_0010394a();\n            }\n            else {\n              if (_DAT_0010d658 != 0) {\nLAB_0010711b:\n                FUN_0010394a();\n                goto LAB_00107125;\n              }\n              if (_DAT_0010d654 != 0) {\n                FUN_001075e0(\"ranlib\");\n                goto LAB_0010711b;\n              }\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\n              unaff_r12 = (FILE *)0x0;\n              char_pointer = (char *)(long)_optind;\n              while( true ) {\n                if ((int)uint_var <= (int)char_pointer) goto LAB_00106f8b;\n                char_pointer = *(char **)((int *)pc_var46 + (long)char_pointer * 2);\n                if ((char)uint_var != '\\0') break;\n                uint_var = FUN_00107650();\n                char_pointer = (char *)((long)(int *)char_pointer + 1);\n                unaff_r12 = (FILE *)(ulong)((uint)unaff_r12 | uint_var);\n              }\n            }\n            while (long_var = FUN_001052a0(char_pointer), long_var < 1) {\n              uint_var = 1;\nLAB_001071c4:\n              int_pointer = (int *)char_pointer;\n              char_pointer = (char *)((long)int_pointer + 1);\n              unaff_r12 = (FILE *)(ulong)((uint)unaff_r12 | uint_var);\n              if ((int)uint_var <= (int)char_pointer) {\nLAB_00106f8b:\n                    \n                xexit(unaff_r12);\n              }\n              char_pointer = *(char **)((char *)((long)pc_var46 + 0x83) + (long)int_pointer * 8 + -0x7b);\n            }\n            int_var = open(char_pointer,2,0);\n            if (int_var < 0) {\n              bfd_set_error(1);\n              FUN_00107c10(char_pointer);\nLAB_0010737f:\n              FUN_00107c10(char_pointer);\nLAB_00107387:\n              FUN_00107c20(char_pointer);\n              int_var = bfd_get_error();\n              if (int_var == 0xd) {\n                FUN_00103bd1(CONCAT53(undefined5_var,\n                                      CONCAT12(undefined_var,CONCAT11(undefined_var[1],undefined_var[0]))));\n              }\n              goto LAB_0010700f;\n            }\n            char_pointer = (char *)bfd_fdopenr(char_pointer,0);\n            if ((FILE *)char_pointer == (FILE *)0x0) goto LAB_0010737f;\n            char_var = bfd_check_format_matches(char_pointer,2,undefined_var);\n            if (char_var == '\\0') goto LAB_00107387;\n            if ((*(byte *)((long)((long)char_pointer + 0x48) + 1) & 8) != 0) {\n              if (_DAT_0010d2d0 != 0) {\n                uint_pointer = (uint *)((long)((long)char_pointer + 0x40) + 4);\n                *uint_pointer = *uint_pointer | 0x2000;\n              }\n              (**(code **)(*(char **)((long)char_pointer + 8) + 0x1f0))(char_pointer);\n              char_var = bfd_close(char_pointer);\n              if (char_var != '\\0') {\n                uint_var = 0;\n                goto LAB_001071c4;\n              }\n              goto LAB_0010737f;\n            }\n            undefined8_var = dcgettext(0,\"%s: no archive map to update\",5);\n            FUN_00107690(undefined8_var,char_pointer);\nLAB_001073cc:\n            char_pointer = (char *)lbasename(DAT_0010d660);\n            size_var = strlen(char_pointer);\n            if ((size_var < 6) ||\n               (int_var = filename_cmp(char_pointer + (size_var - 6),\"ranlib\"), int_var != 0)) {\n              _DAT_0010d65c = 0;\n            }\n            else {\n              _DAT_0010d65c = 1;\n            }\n            goto LAB_001062d3;\n          }\n          undefined_ptr_ptr = &PTR_DAT_0010d300;\n          char_pointer = \"hdmpqrtxl:coOVsSuvabiMNfPTDU\";\n          char_pointer = (char *)&DAT_001096a0;\n          file_pointer = (FILE *)char_pointer;\n          file_pointer = file_pointer;\n          if ((int)uint_var < 2) goto switchD_00107462_caseD_1;\n          undefined8_var = (FILE *)CONCAT71(undefined8_var._1_7_,(char)uint_var);\nLAB_001063a3:\n          file_pointer = (FILE *)char_pointer;\n          if (**(char **)((long)pc_var46 + 8) != '-') {\n            undefined_var[0] = 0x2d;\n            undefined_var = 0;\n            size_var = strlen(*(char **)((long)pc_var46 + 8));\n            int_var = (int)size_var + (int)file_pointer;\n            unaff_r12 = (FILE *)xmalloc((long)int_var * 8);\n            undefined4_var = *(undefined4 *)((long)pc_var46 + 4);\n            unaff_r12->_flags = *(int *)pc_var46;\n            *(undefined4 *)&unaff_r12->field_0x4 = undefined4_var;\n            char_ptr_ptr = *(char ***)((long)pc_var46 + 8);\n            local_file_var2 = (FILE *)((long)pc_var46 + 0x10);\n            local_char_ptr_ptr = char_ptr_ptr;\n            if (*(char *)char_ptr_ptr == '\\0') {\n              char_ptr_ptr = &unaff_r12->_IO_read_ptr;\n            }\n            else {\n              byte_ptr = undefined_var;\n              undefined_var[1] = *(char *)char_ptr_ptr;\n              char_pointer = (char *)xstrdup();\n              char_ptr_ptr = &unaff_r12->_IO_read_end;\n              unaff_r12->_IO_read_ptr = char_pointer;\n              if (*(char *)((long)char_ptr_ptr + 1) != '\\0') {\n                undefined_var[1] = *(char *)((long)char_ptr_ptr + 1);\n                char_pointer = (char *)xstrdup(byte_ptr);\n                char_ptr_ptr = &unaff_r12->_IO_read_base;\n                unaff_r12->_IO_read_end = char_pointer;\n                if (*(char *)((long)char_ptr_ptr + 2) != '\\0') {\n                  undefined_var[1] = *(char *)((long)char_ptr_ptr + 2);\n                  char_pointer = (char *)xstrdup(byte_ptr);\n                  char_ptr_ptr = &unaff_r12->_IO_write_base;\n                  unaff_r12->_IO_read_base = char_pointer;\n                  if (*(char *)((long)char_ptr_ptr + 3) != '\\0') {\n                    char_ptr_ptr = &unaff_r12->_IO_write_ptr;\n                    undefined_var[1] = *(char *)((long)char_ptr_ptr + 3);\n                    char_pointer = (char *)xstrdup(byte_ptr);\n                    unaff_r12->_IO_write_base = char_pointer;\n                    char_var = *(char *)((long)char_ptr_ptr + 4);\n                    local_char_ptr_ptr = char_ptr_ptr;\n                    if (char_var != '\\0') {\n                      char_pointer = (char *)((long)char_ptr_ptr + 4);\n                      char_ptr_ptr = char_ptr_ptr;\n                      do {\n                        char_ptr_ptr = char_ptr_ptr + 1;\n                        undefined_var[1] = char_var;\n                        char_pointer = (char *)xstrdup(byte_ptr);\n                        char_pointer = char_pointer + 1;\n                        *char_ptr_ptr = char_pointer;\n                        char_var = *char_pointer;\n                        char_ptr_ptr = char_ptr_ptr;\n                        local_char_ptr_ptr = char_ptr_ptr;\n                      } while (char_var != '\\0');\n                    }\n                  }\n                }\n              }\n            }\n            long_var = (long)(int)file_pointer;\n            int_pointer = (int *)pc_var46 + long_var * 2;\n            if (local_file_var2 < int_pointer) {\n              ulong_var = long_var * 8 - 0x11;\n              if ((ulong_var < 0x18) || (char_ptr_ptr == (char **)((long)pc_var46 + 0x18))) {\n                *char_ptr_ptr = *(char **)((long)pc_var46 + 0x10);\n                if (((char **)((long)pc_var46 + 0x18) < int_pointer) &&\n                   ((((char_ptr_ptr[1] = *(char **)((long)pc_var46 + 0x18),\n                      (char **)((long)pc_var46 + 0x20) < int_pointer &&\n                      (char_ptr_ptr[2] = *(char **)((long)pc_var46 + 0x20),\n                      (char **)((long)pc_var46 + 0x28) < int_pointer)) &&\n                     (char_ptr_ptr[3] = *(char **)((long)pc_var46 + 0x28),\n                     (char **)((long)pc_var46 + 0x30) < int_pointer)) &&\n                    (char_ptr_ptr[4] = *(char **)((long)pc_var46 + 0x30),\n                    (char **)((long)pc_var46 + 0x38) < int_pointer)))) {\n                  char_ptr_ptr[5] = *(char **)((long)pc_var46 + 0x38);\n                  char_double_pointer = char_ptr_ptr + 6;\n                  for (char_ptr_ptr = (char **)((long)pc_var46 + 0x40); char_ptr_ptr < int_pointer;\n                      char_ptr_ptr = char_ptr_ptr + (ulong)byte_var48 * -2 + 1) {\n                    *char_double_pointer = *char_ptr_ptr;\n                    char_double_pointer = char_double_pointer + (ulong)byte_var48 * -2 + 1;\n                  }\n                }\n              }\n              else {\n                undefined4_var = *(undefined4 *)((long)((long)pc_var46 + 0x10) + 4);\n                undefined4_var = *(undefined4 *)((long)pc_var46 + 0x18);\n                undefined4_var = *(undefined4 *)((long)((long)pc_var46 + 0x18) + 4);\n                ulong_var2 = (ulong_var >> 3) + 1;\n                *(undefined4 *)char_ptr_ptr = *(undefined4 *)((long)pc_var46 + 0x10);\n                *(undefined4 *)((long)char_ptr_ptr + 4) = undefined4_var;\n                *(undefined4 *)(char_ptr_ptr + 1) = undefined4_var;\n                *(undefined4 *)((long)char_ptr_ptr + 0xc) = undefined4_var;\n                undefined4_var = *(undefined4 *)((long)((long)pc_var46 + 0x20) + 4);\n                undefined4_var = *(undefined4 *)((long)pc_var46 + 0x28);\n                undefined4_var = *(undefined4 *)((long)((long)pc_var46 + 0x28) + 4);\n                ulong_var = ulong_var2 >> 1;\n                *(undefined4 *)(char_ptr_ptr + 2) = *(undefined4 *)((long)pc_var46 + 0x20);\n                *(undefined4 *)((long)char_ptr_ptr + 0x14) = undefined4_var;\n                *(undefined4 *)(char_ptr_ptr + 3) = undefined4_var;\n                *(undefined4 *)((long)char_ptr_ptr + 0x1c) = undefined4_var;\n                if (ulong_var != 2) {\n                  undefined4_var = *(undefined4 *)((long)((long)pc_var46 + 0x30) + 4);\n                  undefined4_var = *(undefined4 *)((long)pc_var46 + 0x38);\n                  undefined4_var = *(undefined4 *)((long)((long)pc_var46 + 0x38) + 4);\n                  *(undefined4 *)(char_ptr_ptr + 4) = *(undefined4 *)((long)pc_var46 + 0x30);\n                  *(undefined4 *)((long)char_ptr_ptr + 0x24) = undefined4_var;\n                  *(undefined4 *)(char_ptr_ptr + 5) = undefined4_var;\n                  *(undefined4 *)((long)char_ptr_ptr + 0x2c) = undefined4_var;\n                  if (ulong_var != 3) {\n                    ulong_var3 = 3;\n                    do {\n                      ulong_var4 = ulong_var3 + 1;\n                      char_pointer = (char *)((long)pc_var46 + 0x83) + ulong_var3 * 0x10 + -0x73;\n                      undefined4_var = *(undefined4 *)(char_pointer + 4);\n                      undefined4_var = *(undefined4 *)(char_pointer + 8);\n                      undefined4_var = *(undefined4 *)(char_pointer + 0xc);\n                      char_ptr_ptr = char_ptr_ptr + ulong_var3 * 2;\n                      *(undefined4 *)char_ptr_ptr = *(undefined4 *)char_pointer;\n                      *(undefined4 *)((long)char_ptr_ptr + 4) = undefined4_var;\n                      *(undefined4 *)(char_ptr_ptr + 1) = undefined4_var;\n                      *(undefined4 *)((long)char_ptr_ptr + 0xc) = undefined4_var;\n                      ulong_var3 = ulong_var4;\n                    } while (ulong_var4 != ulong_var);\n                  }\n                }\n                if ((ulong_var2 & 1) != 0) {\n                  char_ptr_ptr[ulong_var2 & 0xfffffffffffffffe] =\n                       *(char **)((long)local_file_var2 + (ulong_var2 & 0xfffffffffffffffe) * 8);\n                }\n              }\n              char_ptr_ptr = char_ptr_ptr + long_var + -2;\n            }\n            file_pointer = (FILE *)(ulong)(int_var - 1);\n            *char_ptr_ptr = (char *)0x0;\n            pc_var46 = (char *)unaff_r12;\n          }\nLAB_001065a2:\n          while( true ) {\n            uint_var = (uint)unaff_r12;\n            uint_var = getopt_long((ulong)file_pointer & 0xffffffff,pc_var46,file_pointer,undefined_ptr_ptr,0);\n            char_pointer = (char *)file_pointer;\n            if (uint_var == 0xffffffff) break;\n            if (((uint_var - 100 < 0x15) && ((0x117201UL >> ((ulong)(uint_var - 100) & 0x3f) & 1) != 0))\n               && (DAT_0010d64c != 0)) goto LAB_001067f7;\n            file_pointer = (FILE *)pc_var46;\n            if (uint_var < 0xcc) {\n                    /* WARNING: Could not recover jumptable at 0x001065eb. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              (*(code *)((long)(int *)char_pointer + (long)((int *)char_pointer)[uint_var]))();\n              return;\n            }\nswitchD_00107462_caseD_1:\n            FUN_0010342d(0);\n            pc_var46 = (char *)file_pointer;\nswitchD_00107462_caseD_68:\n            _DAT_0010d658 = 1;\n          }\nLAB_00106680:\n          uint_var = DAT_0010d64c;\n          file_pointer = (FILE *)char_pointer;\n          if (DAT_0010d64c == 0) {\n            if (((DAT_0010d648 == 1) || (_DAT_0010d650 != 0)) ||\n               (((int)file_pointer <= _optind || (_optind < 1)))) {\n              uint_var = 0;\n              goto LAB_001066aa;\n            }\n            pc_var46 = (char *)((long)pc_var46 + (long)_optind * 8 + -8);\n            uint_var = (int)file_pointer - (_optind + -1);\n            file_pointer = (FILE *)(ulong)uint_var;\n            _optind = 0;\n            if (1 < (int)uint_var) goto LAB_001063a3;\n            goto LAB_001065a2;\n          }\nLAB_001066aa:\n          unaff_r12 = (FILE *)((ulong)undefined8_var & 0xff);\n          uint_var = (uint)unaff_r12;\n          undefined_ptr_ptr = (undefined **)((int *)pc_var46 + (long)_optind * 2);\n          if (_DAT_0010d658 == 0) {\n            if (_DAT_0010d654 != 0) {\n              FUN_001075e0(&DAT_0010807c);\n              goto LAB_00107591;\n            }\n            if (_DAT_0010d650 == 0) {\n              file_pointer = (FILE *)pc_var46;\n              if (*undefined_ptr_ptr == (undefined *)0x0) goto switchD_00107462_caseD_1;\n              if (DAT_0010d64c == 7) {\n                if (DAT_0010d648 == 0) {\n                  if (uint_var == 3) goto LAB_00106abc;\n                  if (uint_var != 0) goto LAB_00106700;\nLAB_00106eff:\n                  char_pointer = \"no operation specified\";\n                  goto LAB_00106803;\n                }\n                DAT_0010d64c = 2;\n                if (_DAT_0010d644 != 0) goto LAB_0010704f;\n              }\n              else if ((uint_var == 3) || (uint_var == 0)) {\n                if (DAT_0010d648 == 1) {\n                  undefined4_var = FUN_00107650();\n                    \n                  xexit(undefined4_var);\n                }\nLAB_00106abc:\n                if (uint_var == 0) goto LAB_00106eff;\n                if (_DAT_0010d644 != 0) {\nLAB_00106ad1:\n                  char_pointer = \"`u\\' is only meaningful with the `r\\' option.\";\n                  goto LAB_00106803;\n                }\n              }\n              else {\nLAB_00106700:\n                if (_DAT_0010d644 != 0) goto LAB_00107548;\n              }\nLAB_0010670d:\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\nLAB_00106720:\n              char_pointer = (char *)0x0;\n              if (DAT_0010d640 != 0) {\n                DAT_0010d638 = (long)*undefined_ptr_ptr;\n                char_pointer = (char *)0x1;\n                char_pointer = \"missing position arg.\";\n                if (DAT_0010d638 == 0) goto LAB_00106803;\n              }\n              if (DAT_0010d634 != '\\0') {\n                char_pointer = \"`N\\' is only meaningful with the `x\\' and `d\\' options.\";\n                if ((DAT_0010d64c & 0xfffffffb) == 1) {\n                  int_var = (int)char_pointer;\n                  if (*(char **)((long)undefined_ptr_ptr + (long)int_var * 2 * 4) == (char *)0x0) {\n                    undefined8_var = dcgettext(0,\"`N\\' missing value.\",5);\n                    FUN_00107690(undefined8_var);\n                    uint_var = uint_var;\nLAB_00107548:\n                    if (uint_var == 2) {\nLAB_0010704f:\n                      char_pointer = \"`u\\' is not meaningful with the `D\\' option.\";\n                      if (_DAT_0010d2d0 < 1) goto code_r0x00107068;\n                      goto LAB_00106803;\n                    }\n                    goto LAB_00106ad1;\n                  }\n                  char_pointer = (char *)(ulong)(int_var + 1);\n                  long_var = strtol(*(char **)((long)undefined_ptr_ptr + (long)int_var * 2 * 4),(char **)0x0,10)\n                  ;\n                  char_pointer = \"Value for `N\\' must be positive.\";\n                  _DAT_0010d630 = (int)long_var;\n                  if (0 < _DAT_0010d630) goto LAB_0010673c;\n                }\n                goto LAB_00106803;\n              }\nLAB_0010673c:\n              long_var = (long)(int)char_pointer;\n              file_pointer = (FILE *)char_pointer;\n              if (*(long *)(int *)((long)undefined_ptr_ptr + long_var * 2 * 4) == 0)\n              goto switchD_00107462_caseD_1;\n              file_pointer = (FILE *)((long)undefined_ptr_ptr + (long_var + 1) * 2 * 4);\n              if (*(FILE **)file_pointer == (FILE *)0x0) {\n                char_pointer = (char *)0x0;\n                file_pointer = (FILE *)0x0;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 2) * 2 * 4) == 0) {\n                char_pointer = (char *)0x1;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 3) * 2 * 4) == 0) {\n                char_pointer = (char *)0x2;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 4) * 2 * 4) == 0) {\n                char_pointer = (char *)0x3;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 5) * 2 * 4) == 0) {\n                char_pointer = (char *)0x4;\n              }\n              else {\n                file_pointer = (FILE *)0x5;\n                do {\n                  char_pointer = (char *)file_pointer;\n                  file_pointer = (FILE *)((long)(int *)char_pointer + 1);\n                } while (*(long *)((int *)((long)undefined_ptr_ptr + long_var * 2 * 4) + (long)file_pointer * 2) !=\n                         0);\n              }\n              undefined8_ptr = (undefined8 *)FUN_00105300();\n              file_pointer = file_pointer;\n              if (DAT_0010d64c == 5) {\n                char_pointer = \"`x\\' cannot be used on thin archives.\";\n                if ((*(byte *)((long)undefined8_ptr + 0x49) & 0x10) == 0) {\n                  char_pointer = (char *)file_pointer;\n                  if (DAT_0010d628 != (char *)0x0) goto LAB_00106d5c;\nswitchD_00106ed8_caseD_5:\n                  FUN_00105480(undefined8_ptr,FUN_00107740,char_pointer,(ulong)char_pointer & 0xffffffff);\n                  goto LAB_0010696c;\n                }\n                goto LAB_00106803;\n              }\n              if (DAT_0010d628 != (char *)0x0) {\nLAB_00106d5c:\n                size_var = strlen(DAT_0010d628);\n                pc_var46 = \"__.LIBDEP\";\n                char_pointer = (char *)(size_var + 1);\n                DAT_0010d620 = bfd_create(\"__.LIBDEP\",undefined8_ptr);\n                if (DAT_0010d620 == 0) {\n                  char_pointer = \"Cannot create libdeps record.\";\n                }\n                else {\n                  long_var = bfd_find_target(\"binary\",DAT_0010d620);\n                  char_pointer = \"Cannot set libdeps record type to binary.\";\n                  if (long_var != 0) {\n                    char_var = bfd_set_format(DAT_0010d620,1,5);\n                    char_pointer = \"Cannot set libdeps object format.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    char_var = bfd_make_writable(DAT_0010d620,\"Cannot set libdeps object format.\",5);\n                    char_pointer = \"Cannot make libdeps object writable.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    file_pointer = (FILE *)bfd_bwrite(DAT_0010d628,char_pointer,DAT_0010d620);\n                    char_pointer = \"Cannot write libdeps record.\";\n                    if (file_pointer != (FILE *)char_pointer) goto LAB_00106803;\n                    char_var = bfd_make_readable(DAT_0010d620,\"Cannot write libdeps record.\",5);\n                    char_pointer = \"Cannot make libdeps object readable.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    long_var = bfd_find_target(\"plugin\",DAT_0010d620,5);\n                    char_pointer = \"Cannot reset libdeps record type.\";\n                    if (long_var == 0) goto LAB_00106803;\n                    int_var = (int)char_pointer;\n                    undefined8_var = (FILE *)((long)(int_var + 2) * 8);\n                    char_pointer = (char *)xmalloc(undefined8_var,\"Cannot reset libdeps record type.\");\n                    if (int_var == 0) {\n                      long_var = 0;\n                    }\n                    else {\n                      undefined4_var = *(undefined4 *)&file_pointer->field_0x4;\n                      *(int *)char_pointer = file_pointer->_flags;\n                      *(undefined4 *)((long)char_pointer + 4) = undefined4_var;\n                      long_var = 8;\n                      char_ptr_ptr = (char **)((long)char_pointer + 8);\n                      for (char_pointer = undefined8_var[-1]._unused2 + 4; char_pointer != (char *)0x0;\n                          char_pointer = char_pointer + -1) {\n                        *(undefined *)char_ptr_ptr = *(undefined *)&file_pointer->_flags;\n                        file_pointer = (FILE *)((long)file_pointer + (ulong)byte_var48 * -2 + 1);\n                        char_ptr_ptr = (char **)((long)char_ptr_ptr + (ulong)byte_var48 * -2 + 1);\n                      }\n                    }\n                    *(char **)((long)(char **)char_pointer + long_var) = \"__.LIBDEP\";\n                    char_pointer = (char *)(ulong)(int_var + 1);\n                    *(undefined8 *)\n                     (((FILE *)((long)char_pointer + -0xd8))->_unused2 + 0xc + (long)undefined8_var) = 0;\n                    switch(DAT_0010d64c) {\n                    case 1:\n                      goto switchD_00106ed8_caseD_1;\n                    case 2:\n                    case 7:\n                      break;\n                    case 3:\n                      goto switchD_00106ed8_caseD_3;\n                    case 4:\n                      goto switchD_00106ed8_caseD_4;\n                    case 5:\n                      goto switchD_00106ed8_caseD_5;\n                    case 6:\n                      file_pointer = (FILE *)char_pointer;\n                      if (_DAT_0010d610 == 0) goto LAB_00106afb;\n                      break;\n                    default:\n                      goto switchD_001067e8_caseD_5;\n                    }\n                    goto switchD_00106ed8_caseD_2;\n                  }\n                }\n                goto LAB_00106803;\n              }\n              switch(DAT_0010d64c) {\n              case 1:\n                char_pointer = (char *)file_pointer;\n                if (file_pointer == (FILE *)0x0) break;\nswitchD_00106ed8_caseD_1:\n                file_pointer = (FILE *)0x0;\n                goto LAB_00106b89;\n              case 2:\n              case 7:\nswitchD_001067e8_caseD_2:\n                char_pointer = (char *)file_pointer;\n                if ((file_pointer != (FILE *)0x0) || (0 < DAT_0010d648)) {\nswitchD_00106ed8_caseD_2:\n                  FUN_00105570(undefined8_ptr,char_pointer,DAT_0010d64c == 7);\n                  goto LAB_0010696c;\n                }\n                break;\n              case 3:\n                char_pointer = (char *)file_pointer;\nswitchD_00106ed8_caseD_3:\n                FUN_00105480(undefined8_ptr,FUN_00107890,char_pointer,(ulong)char_pointer & 0xffffffff);\n                goto LAB_0010696c;\n              case 4:\n                char_pointer = (char *)file_pointer;\nswitchD_00106ed8_caseD_4:\n                FUN_00105480(undefined8_ptr,FUN_00103a78,char_pointer,(ulong)char_pointer & 0xffffffff);\n                goto LAB_0010696c;\n              default:\nswitchD_001067e8_caseD_5:\n                char_pointer = \"internal error -- this option not implemented\";\n                goto LAB_00106803;\n              case 6:\n                if (_DAT_0010d610 != 0) goto switchD_001067e8_caseD_2;\n                if (file_pointer == (FILE *)0x0) break;\nLAB_00106afb:\n                file_pointer = (FILE *)(undefined8_ptr + 0x1e);\n                do {\n                  unaff_r12 = file_pointer;\n                  if (*(FILE **)file_pointer == (FILE *)0x0) {\nLAB_00106b9f:\n                    FUN_001058b0(undefined8_ptr);\n                    goto LAB_0010696c;\n                  }\n                  while( true ) {\n                    long_pointer = *(long **)unaff_r12;\n                    pc_var46 = *(char **)file_pointer;\n                    if (long_pointer == (long *)0x0) {\n                      undefined8_var = *undefined8_ptr;\n                      undefined8_var2 = dcgettext(0,\"no entry %s in archive %s!\",5);\n                      FUN_00107690(undefined8_var2,pc_var46,undefined8_var);\n                      char_pointer = (char *)0x0;\n                      goto LAB_00107293;\n                    }\n                    long_var = *long_pointer;\n                    undefined8_var = FUN_00105830(pc_var46,undefined8_ptr);\n                    int_var = filename_cmp(undefined8_var,long_var);\n                    if (int_var == 0) break;\n                    unaff_r12 = (FILE *)(*(long **)unaff_r12 + 0x1e);\n                  }\n                  *(long **)unaff_r12 = (long *)long_pointer[0x1e];\n                  long_double_pointer = (long **)FUN_00105870(file_pointer,3,0);\n                  bool_var3 = DAT_0010d60c != 0;\n                  long_pointer = *long_double_pointer;\n                  *long_double_pointer = long_pointer;\n                  long_pointer[0x1e] = (long)long_pointer;\n                  if (bool_var3) {\n                    printf(\"m - %s\\n\",*(FILE **)file_pointer);\n                  }\n                  file_pointer = (FILE *)&file_pointer->_IO_read_ptr;\n                } while( true );\n              }\n              goto LAB_00106d4e;\n            }\n            if (-1 < _DAT_0010d2d0) goto LAB_0010755f;\n          }\n          else {\nLAB_00107591:\n            FUN_0010342d(1);\n          }\n          _DAT_0010d2d0 = 1;\nLAB_0010755f:\n          int_var = fileno(_stdin);\n          _DAT_0010d608 = isatty(int_var);\n          FUN_00103e95();\nLAB_0010696c:\n                    \n          xexit(0);\n        }\n        undefined4_var = bfd_get_error();\n        file_pointer = (FILE *)bfd_errmsg(undefined4_var);\n        undefined8_var = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n        int_var = FUN_00107690(undefined8_var,\"x86_64-pc-linux-gnu\",file_pointer);\nLAB_0010751b:\n        if (DAT_0010d64c == 0) {\nLAB_00107447:\n          undefined_ptr_ptr = (undefined **)char_pointer;\n          file_pointer = (FILE *)pc_var46;\n          switch(int_var) {\n          case 0:\n            goto switchD_00107462_caseD_0;\n          default:\n            goto switchD_00107462_caseD_1;\n          case 0x44:\n            _DAT_0010d2d0 = 1;\n            goto LAB_001065a2;\n          case 0x4d:\n            _DAT_0010d650 = 1;\n            goto LAB_001065a2;\n          case 0x4e:\n            DAT_0010d634 = '\\x01';\n            goto LAB_001065a2;\n          case 0x4f:\n            _DAT_0010d5fc = 1;\n            goto LAB_001065a2;\n          case 0x50:\n            DAT_0010d5f9 = 1;\n            goto LAB_001065a2;\n          case 0x53:\n            DAT_0010d648 = -1;\n            goto LAB_001065a2;\n          case 0x54:\n            DAT_0010d5f8 = 1;\n            goto LAB_001065a2;\n          case 0x55:\n            _DAT_0010d2d0 = 0;\n            goto LAB_001065a2;\n          case 0x56:\n            _DAT_0010d654 = 1;\n            goto LAB_001065a2;\n          case 0x61:\n            DAT_0010d640 = 2;\n            goto LAB_001065a2;\n          case 0x62:\n          case 0x69:\n            DAT_0010d640 = 1;\n            goto LAB_001065a2;\n          case 99:\n            _DAT_0010d610 = 1;\n            goto LAB_001065a2;\n          case 100:\n            DAT_0010d64c = 1;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x66:\n            DAT_0010d5fa = 1;\n            goto LAB_001065a2;\n          case 0x68:\n            goto switchD_00107462_caseD_68;\n          case 0x6c:\n            if (DAT_0010d628 == (char *)0x0) {\n              DAT_0010d628 = _optarg;\n              goto LAB_001065a2;\n            }\nLAB_00107293:\n            uint_var = (uint)unaff_r12;\n            char_pointer = \"libdeps specified more than once\";\n            char_pointer = (char *)file_pointer;\n            break;\n          case 0x6d:\n            DAT_0010d64c = 6;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x6f:\n            _DAT_0010d600 = 1;\n            goto LAB_001065a2;\n          case 0x70:\n            DAT_0010d64c = 4;\n            goto LAB_001065a2;\n          case 0x71:\n            DAT_0010d64c = 7;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x72:\n            DAT_0010d64c = 2;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x73:\n            DAT_0010d648 = 1;\n            goto LAB_001065a2;\n          case 0x74:\n            DAT_0010d64c = 3;\n            goto LAB_001065a2;\n          case 0x75:\n            _DAT_0010d644 = 1;\n            goto LAB_001065a2;\n          case 0x76:\n            DAT_0010d60c = 1;\n            goto LAB_001065a2;\n          case 0x78:\n            DAT_0010d64c = 5;\n            goto LAB_001065a2;\n          case 0xc9:\n            bfd_plugin_set_plugin(_optarg);\n            goto LAB_001065a2;\n          case 0xca:\n            DAT_0010d5f0 = _optarg;\n            goto LAB_001065a2;\n          case 0xcb:\n            DAT_0010d5e8 = _optarg;\n            goto LAB_001065a2;\n          }\n          goto LAB_00106803;\n        }\nLAB_001067f7:\n        char_pointer = \"two different operation options specified\";\n        char_pointer = (char *)file_pointer;\nLAB_00106803:\n        undefined8_var = dcgettext(0,char_pointer,5);\n        FUN_00107690(undefined8_var);\nLAB_00106814:\n        int_var = (int)pc_var46;\n        file_pointer = (FILE *)xmalloc(8);\n        *(long **)file_pointer = (long *)0x0;\n        if ((FILE *)char_pointer == file_param) {\nLAB_00106834:\n          if (*(long **)char_pointer == (long *)0x0) {\n            int_var = 0;\n          }\n          else {\n            long_var = 1;\n            do {\n              int_var = (int)long_var;\n              long_var3 = long_var * 2;\n              long_var = long_var + 1;\n            } while (*(long *)((int *)char_pointer + long_var3) != 0);\n          }\n          file_pointer = (FILE *)xmalloc((long)(int_var + 1) << 3);\n          long_pointer = *(long **)char_pointer;\n          long_var = 0;\n          while (long_pointer != (long *)0x0) {\n            undefined8_var = xstrdup();\n            *(undefined8 *)((long)&file_pointer->_flags + long_var) = undefined8_var;\n            long_pointer = *(long **)((char *)((long)char_pointer + 0x83) + long_var + -0x7b);\n            long_var = long_var + 8;\n          }\n          *(undefined8 *)((long)&file_pointer->_flags + long_var) = 0;\nLAB_0010610a:\n          int_var = (int)pc_var46;\n          char_pointer = (char *)file_pointer;\n          if (*(long **)file_pointer == (long *)0x0) goto LAB_00106a80;\n          long_var = 0;\n          do {\n            long_var2 = long_var + 1;\n            long_var3 = long_var * 8;\n            long_var = long_var2;\n          } while (*(long *)(file_pointer->_shortbuf + long_var3 + -0x7b) != 0);\n          size_t_var = long_var2 * 8;\n        }\n        else {\nLAB_00106a80:\n          long_var2 = 0;\n          size_t_var = 0;\n        }\n        long_var = (long)char_pointer * 2;\n        char_pointer = (char *)((long)(char **)char_pointer + long_var2);\n        free(*(void **)((int *)char_pointer + long_var));\n        file_pointer = (FILE *)xrealloc(char_pointer,(long_var2 + 1 + (long)int_var) * 8);\n        uint_var = int_var + -1 + (int)long_var2;\n        pc_var46 = (char *)(ulong)uint_var;\n        memmove(&file_pointer->_flags + (long)char_pointer * 2,\n                (void *)((long)&file_pointer->_IO_read_ptr + (long)undefined8_var),\n                (long)(int)(int_var - uint_var) << 3);\n        memcpy((void *)((long)&undefined8_var->_flags + (long)&file_pointer->_flags),file_pointer,size_t_var);\n        free(file_pointer);\n        free(byte_ptr);\n        fclose(file_pointer);\n        uint_var = (int)local_file_var2 + 1;\n        unaff_r12 = undefined8_var;\n        char_pointer = (char *)file_pointer;\n        undefined8_var = file_pointer;\n        if ((int)uint_var < (int)uint_var) goto LAB_001061ce;\n      } while( true );\n    }\n    uint_var = uint_var + 1;\n    local_file_var2 = unaff_r12;\nLAB_001061ce:\n    unaff_r12 = (FILE *)(ulong)uint_var;\n  } while( true );\nswitchD_00107462_caseD_0:\n  int_var = getopt_long((ulong)file_pointer & 0xffffffff,pc_var46,file_pointer,\"x86_64-pc-linux-gnu\");\n  char_pointer = (char *)file_pointer;\n  if (int_var == -1) goto LAB_00106680;\n  if ((0x14 < int_var - 100U) || ((0x117201UL >> ((byte)(int_var - 100U) & 0x3f) & 1) == 0))\n  goto LAB_00107447;\n  goto LAB_0010751b;\ncode_r0x00107068:\n  if (_DAT_0010d2d0 != 0) goto code_r0x0010706e;\n  goto LAB_00106720;\ncode_r0x0010706e:\n  undefined8_var = dcgettext(0,\"`u\\' modifier ignored since `D\\' is the default (see `U\\')\",5);\n  FUN_00107920(undefined8_var);\n  goto LAB_0010670d;\nLAB_00106b89:\n  if (*(FILE **)char_pointer == (FILE *)0x0) {\n    if ((char)file_pointer != '\\0') goto LAB_00106b9f;\nLAB_00106d4e:\n    DAT_0010d618 = 0;\n    goto LAB_0010696c;\n  }\n  int_var2 = 0;\n  int_var = strcmp((char *)*(FILE **)char_pointer,\"__.SYMDEF\");\n  undefined8_pointer = undefined8_ptr;\n  if (int_var == 0) {\n    *(byte *)((long)undefined8_ptr + 0x49) = *(byte *)((long)undefined8_ptr + 0x49) & 0xf7;\n    DAT_0010d648 = -1;\n  }\n  else {\n    while( true ) {\n      long_pointer = undefined8_pointer + 0x1e;\n      if ((undefined8 *)*long_pointer == (undefined8 *)0x0) break;\n      undefined8_var = *(undefined8 *)*long_pointer;\n      undefined8_var2 = FUN_00105830(*(FILE **)char_pointer,undefined8_ptr);\n      int_var = filename_cmp(undefined8_var2,undefined8_var);\n      if ((int_var == 0) &&\n         ((DAT_0010d634 == '\\0' || (int_var2 = int_var2 + 1, int_var2 == _DAT_0010d630)))) {\n        if (DAT_0010d60c != 0) {\n          printf(\"d - %s\\n\",*(FILE **)char_pointer);\n        }\n        *long_pointer = *(long *)(*long_pointer + 0xf0);\n        file_pointer = unaff_r12;\n        goto LAB_00106d38;\n      }\n      undefined8_pointer = (undefined8 *)*long_pointer;\n    }\n    if (DAT_0010d60c != 0) {\n      file_pointer = *(FILE **)char_pointer;\n      pc_var46 = (char *)dcgettext(0,\"No member named `%s\\'\\n\",5);\n      printf(pc_var46,file_pointer);\n    }\n  }\nLAB_00106d38:\n  char_pointer = (char *)((long)char_pointer + 8);\n  goto LAB_00106b89;\n}\n\n",
            "current_name": "process_files_00105db0",
            "entrypoint": "0x00105db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105db0": "process_files_00105db0",
                "__ptr": "byte_ptr",
                "bVar13": "byte_var2",
                "bVar3": "byte_var",
                "bVar47": "bool_var3",
                "bVar48": "byte_var48",
                "bVar8": "bool_var1",
                "bVar9": "bool_var2",
                "cVar14": "char_var",
                "extraout_EDX": "uint_var",
                "iVar15": "int_var",
                "iVar45": "int_var2",
                "lVar24": "long_var",
                "lVar34": "long_var2",
                "lVar35": "long_var3",
                "local_100": "long_var",
                "local_108": "size_t_var",
                "local_110": "local_char_ptr_ptr",
                "local_118": "byte_ptr",
                "local_128": "local_file_var2",
                "local_130": "undefined8_var",
                "local_b0": "uint_var",
                "local_c8": "undefined_var",
                "pFVar18": "file_pointer",
                "pFVar22": "file_pointer",
                "pFVar28": "file_pointer",
                "param_1": "input_param",
                "param_2": "file_param",
                "pbVar1": "byte_pointer",
                "pbVar33": "byte_ptr",
                "pbVar38": "byte_pointer",
                "pcVar23": "char_pointer",
                "pcVar39": "char_pointer",
                "pcVar43": "char_pointer",
                "pcVar46": "pc_var46",
                "piVar11": "int_pointer",
                "plVar21": "long_pointer",
                "plVar29": "long_ptr_ptr",
                "plVar4": "long_pointer",
                "ppcVar10": "char_double_pointer",
                "ppcVar31": "char_ptr_ptr",
                "ppcVar32": "char_ptr_ptr",
                "pplVar29": "long_double_pointer",
                "ppuVar36": "undefined_ptr_ptr",
                "puVar12": "undefined_pointer",
                "puVar2": "uint_pointer",
                "puVar26": "undefined8_ptr",
                "puVar5": "undefined8_pointer",
                "sVar19": "size_var",
                "sVar20": "size_var2",
                "uStack_c5": "undefined5_var",
                "uStack_c6": "undefined_var",
                "uVar16": "uint_var",
                "uVar17": "undefined4_var",
                "uVar25": "ulong_var",
                "uVar27": "undefined8_var",
                "uVar30": "undefined8_var2",
                "uVar37": "uint_var",
                "uVar40": "ulong_var2",
                "uVar41": "ulong_var3",
                "uVar42": "ulong_var4",
                "uVar44": "uint_var",
                "uVar6": "undefined4_var",
                "uVar7": "undefined4_var",
                "unaff_R12": "unaff_r12",
                "unaff_RBP": "char_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001075e0": {
            "additional_data": {
                "FUN_001075e0": {
                    "print_and_exit": 1,
                    "print_binutils_version": 1,
                    "print_program_info": 3,
                    "print_version": 1,
                    "print_version_info": 25
                },
                "param_1": {
                    "binary_name": 1,
                    "binutils_version": 2,
                    "compiler_name": 1,
                    "os_name": 2,
                    "package_name": 1,
                    "platform": 1,
                    "program_name": 8,
                    "tool_name": 3,
                    "version": 10,
                    "version_string": 2
                },
                "pcVar1": {
                    "copy_notice": 1,
                    "copy_right_message": 3,
                    "copy_right_msg": 2,
                    "copy_right_notice": 1,
                    "copy_right_string": 1,
                    "copy_right_text": 1,
                    "copyright": 1,
                    "copyright_message": 5,
                    "copyright_msg": 3,
                    "copyright_notice": 2,
                    "copyright_text": 2,
                    "license_notice": 1,
                    "localized_text": 1,
                    "message": 7
                }
            },
            "called": [
                "exit",
                "printf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid print_version_info_001075e0(undefined8 version)\n\n{\n  char *message;\n  \n  printf(\"GNU %s %s\\n\",version,\"(GNU Binutils for Debian) 2.40\");\n  message = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n  printf(message);\n  message = (char *)dcgettext(0,\n                             \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                             ,5);\n  printf(message);\n                    \n  exit(0);\n}\n\n",
            "current_name": "print_version_info_001075e0",
            "entrypoint": "0x001075e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001075e0": "print_version_info_001075e0",
                "param_1": "version",
                "pcVar1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107640": {
            "additional_data": {
                "FUN_00107640": {
                    "clear_result": 1,
                    "get_default_value": 6,
                    "get_initial_value": 1,
                    "initialize": 14,
                    "initialize_application": 2,
                    "initialize_data": 2,
                    "initialize_default_value": 1,
                    "initialize_system": 1,
                    "initialize_value": 1,
                    "return_zero": 2
                },
                "return": {
                    "result": 2,
                    "return_value": 1
                },
                "return_undefined8": {
                    "result": 1
                },
                "undefined8": {
                    "uint64_t": 2,
                    "void": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid initialize_application_00107640(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_00107640",
            "entrypoint": "0x00107640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107640": "initialize_application_00107640",
                "return": "result",
                "undefined8": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107650": {
            "additional_data": {
                "DAT_0010d648": {
                    "flag": 1,
                    "some_variable": 1
                },
                "FUN_001052a0": {
                    "get_count": 8,
                    "get_data_count": 3,
                    "get_data_length": 1,
                    "get_function_result": 1,
                    "get_input_length": 1,
                    "get_input_status": 3,
                    "get_line_number": 1,
                    "get_result": 1,
                    "get_status": 2,
                    "get_total_elements": 1,
                    "get_value": 2
                },
                "FUN_00105300": {
                    "check_line_validity": 1,
                    "process_data": 10,
                    "process_data_helper": 1,
                    "process_input": 11,
                    "process_input_data": 2
                },
                "FUN_001058b0": {
                    "cleanup": 11,
                    "cleanup_data": 3,
                    "cleanup_memory": 2,
                    "cleanup_processed_data": 1,
                    "cleanup_resources": 4,
                    "free_resources": 1,
                    "process_line": 1,
                    "release_memory": 1,
                    "release_resources": 1
                },
                "FUN_00107650": {
                    "check_and_exit": 3,
                    "check_and_exit_if_zero": 1,
                    "check_and_initialize": 3,
                    "check_and_process": 1,
                    "check_and_process_binary": 1,
                    "check_and_process_data": 7,
                    "check_and_process_input": 6,
                    "check_input_and_process": 1,
                    "check_validity": 1,
                    "execute_function": 1,
                    "load_data_and_process": 1,
                    "process_data": 1,
                    "validate_and_handle_param": 1,
                    "validate_and_process_data": 1,
                    "validate_and_process_input": 1
                },
                "lVar2": {
                    "count": 2,
                    "data_length": 1,
                    "flag": 2,
                    "function_result": 1,
                    "line_number": 1,
                    "result": 8,
                    "return_value": 6,
                    "status": 8,
                    "value": 2
                },
                "param_1": {
                    "binary_filename": 1,
                    "data": 6,
                    "input": 8,
                    "input_data": 10,
                    "input_param": 5,
                    "user_input": 1
                },
                "param_2": {
                    "output_data": 1
                },
                "uVar1": {
                    "result": 20,
                    "result_status": 1,
                    "return_value": 8,
                    "status_code": 1
                },
                "xexit": {
                    "emergency_exit": 1,
                    "exit_program": 21,
                    "exit_with_error": 1,
                    "terminate_program": 2
                }
            },
            "called": [
                "xexit",
                "FUN_0010284b",
                "FUN_001052a0",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nundefined8 check_and_process_data_00107650(undefined8 input_data)\n\n{\n  undefined8 result;\n  long status;\n  \n  status = FUN_001052a0();\n  if (status < 1) {\n    result = 1;\n  }\n  else {\n    DAT_0010d648 = 1;\n    status = FUN_00105300(input_data,0);\n    if (status == 0) {\n                    \n      xexit(1);\n    }\n    FUN_001058b0(status);\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_00107650",
            "entrypoint": "0x00107650",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107650": "check_and_process_data_00107650",
                "lVar2": "status",
                "param_1": "input_data",
                "uVar1": "result",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107690": {
            "additional_data": {
                "FUN_00107690": {
                    "execute_and_exit": 1,
                    "execute_function": 1,
                    "extract_and_exit": 4,
                    "initialize_variables": 1,
                    "process_data": 8,
                    "process_function": 1,
                    "process_parameters": 1,
                    "process_parameters_and_call_exit": 1,
                    "reverse_and_exit": 2
                },
                "FUN_001078c0": {
                    "call_function": 1,
                    "call_sub_function": 1,
                    "copy_data": 1,
                    "copy_data_and_exit": 1,
                    "copy_data_function": 1,
                    "execute_sub_function": 1,
                    "extract_data_from_buffer": 1,
                    "print_formatted_string": 1,
                    "process_data": 1,
                    "process_sub_function": 1
                },
                "in_AL": {
                    "boolean_condition": 1,
                    "boolean_flag": 2,
                    "condition": 4,
                    "condition_flag": 1,
                    "condition_passed": 1,
                    "continue_execution": 1,
                    "do_extract": 1,
                    "flag": 8,
                    "input_flag": 4,
                    "is_condition_true": 1
                },
                "local_18": {
                    "arg8": 1,
                    "arg8_alt": 1,
                    "copied_input8": 1,
                    "copied_param_8": 1,
                    "data_8_copy": 1,
                    "eighth_local": 1,
                    "input8_copy": 1,
                    "input_8_copied": 1,
                    "input_8_copy": 2,
                    "input_param8_copy": 1,
                    "input_param_8_copy": 1,
                    "local_8": 1,
                    "local_argument8": 1,
                    "local_condition8": 1,
                    "local_input8": 1,
                    "local_param8": 3,
                    "local_var12": 1,
                    "local_var8": 1,
                    "local_var_8": 1,
                    "new_data8": 1,
                    "new_value8": 1,
                    "param14": 1,
                    "param_8": 1,
                    "ptr_to_param8_copy": 1,
                    "saved_input8": 1,
                    "value8_copy": 1,
                    "var_13": 1
                },
                "local_28": {
                    "arg7": 1,
                    "arg7_alt": 1,
                    "copied_input7": 1,
                    "copied_param_7": 1,
                    "data_7_copy": 1,
                    "input7_copy": 1,
                    "input_7_copied": 1,
                    "input_7_copy": 2,
                    "input_param7_copy": 1,
                    "input_param_7_copy": 1,
                    "local_7": 1,
                    "local_argument7": 1,
                    "local_condition7": 1,
                    "local_input7": 1,
                    "local_param7": 3,
                    "local_var11": 1,
                    "local_var7": 1,
                    "local_var_7": 1,
                    "new_data7": 1,
                    "new_value7": 1,
                    "param13": 1,
                    "param_7": 1,
                    "ptr_to_param7_copy": 1,
                    "saved_input7": 1,
                    "seventh_local": 1,
                    "value7_copy": 1,
                    "var_12": 1
                },
                "local_38": {
                    "arg6": 1,
                    "arg6_alt": 1,
                    "copied_input6": 1,
                    "copied_param_6": 1,
                    "data_6_copy": 1,
                    "input6_copy": 1,
                    "input_6_copied": 1,
                    "input_6_copy": 2,
                    "input_param6_copy": 1,
                    "input_param_6_copy": 1,
                    "local_6": 1,
                    "local_argument6": 1,
                    "local_condition6": 1,
                    "local_input6": 1,
                    "local_param6": 3,
                    "local_var10": 1,
                    "local_var6": 1,
                    "local_var_6": 1,
                    "new_data6": 1,
                    "new_value6": 1,
                    "param12": 1,
                    "param_6": 1,
                    "ptr_to_param6_copy": 1,
                    "saved_input6": 1,
                    "sixth_local": 1,
                    "value6_copy": 1,
                    "var_11": 1
                },
                "local_48": {
                    "arg5": 1,
                    "arg5_alt": 1,
                    "copied_input5": 1,
                    "copied_param_5": 1,
                    "data_5_copy": 1,
                    "fifth_local": 1,
                    "input5_copy": 1,
                    "input_5_copied": 1,
                    "input_5_copy": 2,
                    "input_param5_copy": 1,
                    "input_param_5_copy": 1,
                    "local_5": 1,
                    "local_argument5": 1,
                    "local_condition5": 1,
                    "local_input5": 1,
                    "local_param5": 3,
                    "local_var5": 1,
                    "local_var9": 1,
                    "local_var_5": 1,
                    "new_data5": 1,
                    "new_value5": 1,
                    "param11": 1,
                    "param_5": 1,
                    "ptr_to_param5_copy": 1,
                    "saved_input5": 1,
                    "value5_copy": 1,
                    "var_10": 1
                },
                "local_58": {
                    "arg4": 1,
                    "arg4_alt": 1,
                    "copied_input4": 1,
                    "copied_param_4": 1,
                    "data_4_copy": 1,
                    "fourth_local": 1,
                    "input4_copy": 1,
                    "input_4_copied": 1,
                    "input_4_copy": 2,
                    "input_param4_copy": 1,
                    "input_param_4_copy": 1,
                    "local_4": 1,
                    "local_argument4": 1,
                    "local_condition4": 1,
                    "local_input4": 1,
                    "local_param4": 3,
                    "local_var4": 1,
                    "local_var8": 1,
                    "local_var_4": 1,
                    "new_data4": 1,
                    "new_value4": 1,
                    "param10": 1,
                    "param_4": 1,
                    "ptr_to_param4_copy": 1,
                    "saved_input4": 1,
                    "value4_copy": 1,
                    "var_9": 1
                },
                "local_68": {
                    "arg3": 1,
                    "arg3_alt": 1,
                    "copied_input3": 1,
                    "copied_param_3": 1,
                    "data_3_copy": 1,
                    "input3_copy": 1,
                    "input_3_copied": 1,
                    "input_3_copy": 2,
                    "input_param3_copy": 1,
                    "input_param_3_copy": 1,
                    "local_3": 1,
                    "local_argument3": 1,
                    "local_condition3": 1,
                    "local_input3": 1,
                    "local_param3": 3,
                    "local_var3": 1,
                    "local_var7": 1,
                    "local_var_3": 1,
                    "new_data3": 1,
                    "new_value3": 1,
                    "param9": 1,
                    "param_3": 1,
                    "ptr_to_param3_copy": 1,
                    "saved_input3": 1,
                    "third_local": 1,
                    "value3_copy": 1,
                    "var_8": 1
                },
                "local_78": {
                    "arg2": 1,
                    "arg2_alt": 1,
                    "copied_input2": 1,
                    "copied_param_2": 1,
                    "data_2_copy": 1,
                    "input2_copy": 1,
                    "input_2_copied": 1,
                    "input_2_copy": 2,
                    "input_param2_copy": 1,
                    "input_param_2_copy": 1,
                    "local_2": 1,
                    "local_argument2": 1,
                    "local_condition2": 1,
                    "local_input2": 1,
                    "local_param2": 3,
                    "local_var2": 1,
                    "local_var6": 1,
                    "local_var_2": 1,
                    "new_data2": 1,
                    "new_value2": 1,
                    "param8": 1,
                    "param_2": 1,
                    "ptr_to_param2_copy": 1,
                    "saved_input2": 1,
                    "second_local": 1,
                    "value2_copy": 1,
                    "var_7": 1
                },
                "local_88": {
                    "arg1": 1,
                    "arg1_alt": 1,
                    "copied_input1": 1,
                    "copied_param_1": 1,
                    "data_1_copy": 1,
                    "first_local": 1,
                    "input1_copy": 1,
                    "input_1_copied": 1,
                    "input_1_copy": 2,
                    "input_param1_copy": 1,
                    "input_param_1_copy": 1,
                    "local_1": 1,
                    "local_argument1": 1,
                    "local_condition1": 1,
                    "local_input1": 1,
                    "local_param1": 3,
                    "local_var1": 1,
                    "local_var5": 1,
                    "local_var_1": 1,
                    "new_data1": 1,
                    "new_value1": 1,
                    "param7": 1,
                    "param_1": 1,
                    "ptr_to_param1_copy": 1,
                    "saved_input1": 1,
                    "value1_copy": 1,
                    "var_6": 1
                },
                "local_90": {
                    "arg5": 3,
                    "buffer_5": 1,
                    "buffer_param5": 1,
                    "data_6_copy": 1,
                    "function_arg_5": 1,
                    "local_param14": 3,
                    "local_pointer5": 1,
                    "param14_arg2": 1,
                    "param14_copy": 1,
                    "param6": 3,
                    "param6_copy": 1,
                    "param_14": 3,
                    "param_14_address": 1,
                    "param_14_copy": 3,
                    "param_value14_copy": 1,
                    "param_var5": 1,
                    "pointer_param_6_new": 1,
                    "string_param6_copy": 1,
                    "value5": 1,
                    "var_5": 1,
                    "variable_14": 1
                },
                "local_98": {
                    "arg4": 3,
                    "buffer_4": 1,
                    "buffer_param4": 1,
                    "data_5_copy": 1,
                    "function_arg_4": 1,
                    "local_param13": 3,
                    "local_pointer4": 1,
                    "param13_arg2": 1,
                    "param13_copy": 1,
                    "param5": 3,
                    "param5_copy": 1,
                    "param_13": 3,
                    "param_13_address": 1,
                    "param_13_copy": 3,
                    "param_value13_copy": 1,
                    "param_var4": 1,
                    "pointer_param_5_new": 1,
                    "string_param5_copy": 1,
                    "value4": 1,
                    "var_4": 1,
                    "variable_13": 1
                },
                "local_a0": {
                    "arg3": 3,
                    "buffer_3": 1,
                    "buffer_param3": 1,
                    "data_4_copy": 1,
                    "function_arg_3": 1,
                    "local_param12": 3,
                    "local_pointer3": 1,
                    "param12_arg2": 1,
                    "param12_copy": 1,
                    "param4": 3,
                    "param4_copy": 1,
                    "param_12": 3,
                    "param_12_address": 1,
                    "param_12_copy": 3,
                    "param_value12_copy": 1,
                    "param_var3": 1,
                    "pointer_param_4_new": 1,
                    "string_param4_copy": 1,
                    "value3": 1,
                    "var_3": 1,
                    "variable_12": 1
                },
                "local_a8": {
                    "arg2": 3,
                    "buffer_2": 1,
                    "buffer_param2": 1,
                    "data_3_copy": 1,
                    "function_arg_2": 1,
                    "local_param11": 3,
                    "local_pointer2": 1,
                    "param11_arg2": 1,
                    "param11_copy": 1,
                    "param3": 3,
                    "param3_copy": 1,
                    "param_11": 3,
                    "param_11_address": 1,
                    "param_11_copy": 3,
                    "param_value11_copy": 1,
                    "param_var2": 1,
                    "pointer_param_3_new": 1,
                    "string_param3_copy": 1,
                    "value2": 1,
                    "var_2": 1,
                    "variable_11": 1
                },
                "local_b0": {
                    "arg1": 3,
                    "buffer_1": 1,
                    "buffer_param1": 1,
                    "data_2_copy": 1,
                    "function_arg_1": 1,
                    "local_param10": 3,
                    "local_pointer1": 1,
                    "param10_arg2": 1,
                    "param10_copy": 1,
                    "param2": 3,
                    "param2_copy": 1,
                    "param_10": 3,
                    "param_10_address": 1,
                    "param_10_copy": 3,
                    "param_value10_copy": 1,
                    "param_var1": 1,
                    "pointer_param_2_new": 1,
                    "string_param2_copy": 1,
                    "value1": 1,
                    "var_1": 1,
                    "variable_10": 1
                },
                "local_b8": {
                    "buffer": 5,
                    "copy_buffer": 1,
                    "data": 1,
                    "local_array": 5,
                    "local_buffer": 10,
                    "local_data": 1,
                    "local_var2": 1,
                    "result_buffer": 1,
                    "temp_buffer": 1,
                    "temporary_buffer": 2
                },
                "local_c8": {
                    "b8_ptr": 1,
                    "buffer": 6,
                    "buffer_ptr": 1,
                    "char_array": 1,
                    "data": 1,
                    "local_array": 1,
                    "local_array2": 1,
                    "local_array_ptr2": 1,
                    "local_buffer": 11,
                    "local_string": 1,
                    "pointer2": 2,
                    "str_buffer": 1,
                    "temp_buffer": 1,
                    "temp_pointer2": 1
                },
                "local_d0": {
                    "buffer": 7,
                    "buffer_pointer": 1,
                    "data": 1,
                    "local_array": 1,
                    "local_array1": 1,
                    "local_array_ptr": 2,
                    "local_param": 1,
                    "local_var3": 1,
                    "pointer": 1,
                    "pointer1": 3,
                    "pointer_to_memory": 1,
                    "pointer_to_stack": 1,
                    "stack_offset_ptr": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 5,
                    "temp_pointer1": 1
                },
                "local_d4": {
                    "array_length": 1,
                    "b8_size": 1,
                    "buffer_size": 4,
                    "constant": 3,
                    "copy_length": 1,
                    "counter": 1,
                    "data_size": 1,
                    "length": 2,
                    "length2": 1,
                    "local_buffer_size": 1,
                    "local_size2": 2,
                    "local_var4": 1,
                    "offset": 2,
                    "size": 1,
                    "size2": 1
                },
                "local_d8": {
                    "array_length": 1,
                    "buffer_size": 4,
                    "byte_count": 1,
                    "count": 1,
                    "length": 4,
                    "length1": 1,
                    "local_size": 3,
                    "local_size1": 1,
                    "local_var1": 1,
                    "memory_size": 1,
                    "offset": 1,
                    "size": 8,
                    "size1": 1,
                    "stack_offset": 1,
                    "stack_size": 2
                },
                "param_1": {
                    "arg1": 2,
                    "argument1": 1,
                    "condition1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_param1": 1,
                    "data_pointer": 1,
                    "destination": 1,
                    "first_parameter": 1,
                    "input1": 5,
                    "input_1": 4,
                    "input_param1": 3,
                    "input_param_1": 3,
                    "param1": 1,
                    "param_1": 1,
                    "ptr_to_param1": 1,
                    "value1": 2
                },
                "param_10": {
                    "address_2": 1,
                    "arg_2": 1,
                    "data_2": 1,
                    "function_param_1": 1,
                    "param10": 5,
                    "param10_arg1": 1,
                    "param2": 4,
                    "param_10": 2,
                    "param_b": 1,
                    "param_pointer2": 1,
                    "param_ptr2": 1,
                    "param_value10": 1,
                    "pointer2": 2,
                    "pointer_param_2": 1,
                    "second_param": 1,
                    "string_param2": 1,
                    "value_2": 1
                },
                "param_11": {
                    "address_3": 1,
                    "arg_3": 1,
                    "data_3": 1,
                    "function_param_2": 1,
                    "param11": 5,
                    "param11_arg1": 1,
                    "param3": 4,
                    "param_11": 2,
                    "param_c": 1,
                    "param_pointer3": 1,
                    "param_ptr3": 1,
                    "param_value11": 1,
                    "pointer3": 2,
                    "pointer_param_3": 1,
                    "string_param3": 1,
                    "third_param": 1,
                    "value_3": 1
                },
                "param_12": {
                    "address_4": 1,
                    "arg_4": 1,
                    "data_4": 1,
                    "fourth_param": 1,
                    "function_param_3": 1,
                    "param12": 5,
                    "param12_arg1": 1,
                    "param4": 4,
                    "param_12": 2,
                    "param_d": 1,
                    "param_pointer4": 1,
                    "param_ptr4": 1,
                    "param_value12": 1,
                    "pointer4": 2,
                    "pointer_param_4": 1,
                    "string_param4": 1,
                    "value_4": 1
                },
                "param_13": {
                    "address_5": 1,
                    "arg_5": 1,
                    "data_5": 1,
                    "fifth_param": 1,
                    "function_param_4": 1,
                    "param13": 5,
                    "param13_arg1": 1,
                    "param5": 4,
                    "param_13": 2,
                    "param_e": 1,
                    "param_pointer5": 1,
                    "param_ptr5": 1,
                    "param_value13": 1,
                    "pointer5": 2,
                    "pointer_param_5": 1,
                    "string_param5": 1,
                    "value_5": 1
                },
                "param_14": {
                    "address_6": 1,
                    "arg_6": 1,
                    "data_6": 1,
                    "function_param_5": 1,
                    "param14": 5,
                    "param14_arg1": 1,
                    "param6": 4,
                    "param_14": 2,
                    "param_f": 1,
                    "param_pointer6": 1,
                    "param_ptr6": 1,
                    "param_value14": 1,
                    "pointer6": 2,
                    "pointer_param_6": 1,
                    "sixth_param": 1,
                    "string_param6": 1,
                    "value_6": 1
                },
                "param_1_copy": {
                    "buffer": 1
                },
                "param_2": {
                    "arg2": 2,
                    "argument2": 1,
                    "arguments": 1,
                    "condition2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_param2": 1,
                    "input2": 5,
                    "input_2": 3,
                    "input_param2": 3,
                    "input_param_2": 3,
                    "param2": 1,
                    "param_2": 1,
                    "ptr_to_param2": 1,
                    "second_parameter": 1,
                    "source": 1,
                    "va_list": 1,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 2,
                    "argument3": 1,
                    "condition3": 1,
                    "data3": 1,
                    "data_3": 1,
                    "data_param3": 1,
                    "input3": 5,
                    "input_3": 4,
                    "input_param3": 3,
                    "input_param_3": 3,
                    "param3": 1,
                    "param_3": 1,
                    "ptr_to_param3": 1,
                    "third_param": 1,
                    "third_parameter": 1,
                    "value3": 2
                },
                "param_4": {
                    "arg4": 2,
                    "argument4": 1,
                    "condition4": 1,
                    "data4": 1,
                    "data_4": 1,
                    "data_param4": 1,
                    "fourth_param": 1,
                    "fourth_parameter": 1,
                    "input4": 5,
                    "input_4": 4,
                    "input_param4": 3,
                    "input_param_4": 3,
                    "param4": 1,
                    "param_4": 1,
                    "ptr_to_param4": 1,
                    "value4": 2
                },
                "param_5": {
                    "arg5": 2,
                    "argument5": 1,
                    "condition5": 1,
                    "data5": 1,
                    "data_5": 1,
                    "data_param5": 1,
                    "fifth_param": 1,
                    "fifth_parameter": 1,
                    "input5": 5,
                    "input_5": 4,
                    "input_param5": 3,
                    "input_param_5": 3,
                    "param5": 1,
                    "param_5": 1,
                    "ptr_to_param5": 1,
                    "value5": 2
                },
                "param_6": {
                    "arg6": 2,
                    "argument6": 1,
                    "condition6": 1,
                    "data6": 1,
                    "data_6": 1,
                    "data_param6": 1,
                    "input6": 5,
                    "input_6": 4,
                    "input_param6": 3,
                    "input_param_6": 3,
                    "param6": 1,
                    "param_6": 1,
                    "ptr_to_param6": 1,
                    "sixth_param": 1,
                    "sixth_parameter": 1,
                    "value6": 2
                },
                "param_7": {
                    "arg7": 2,
                    "argument7": 1,
                    "condition7": 1,
                    "data7": 1,
                    "data_7": 1,
                    "data_param7": 1,
                    "input7": 5,
                    "input_7": 4,
                    "input_param7": 3,
                    "input_param_7": 3,
                    "param7": 1,
                    "param_7": 1,
                    "ptr_to_param7": 1,
                    "seventh_param": 1,
                    "seventh_parameter": 1,
                    "value7": 2
                },
                "param_8": {
                    "arg8": 2,
                    "argument8": 1,
                    "condition8": 1,
                    "data8": 1,
                    "data_8": 1,
                    "data_param8": 1,
                    "eighth_param": 1,
                    "eighth_parameter": 1,
                    "input8": 5,
                    "input_8": 4,
                    "input_param8": 3,
                    "input_param_8": 3,
                    "param8": 1,
                    "param_8": 1,
                    "ptr_to_param8": 1,
                    "value8": 2
                },
                "param_9": {
                    "address_1": 1,
                    "arg_1": 1,
                    "data_1": 1,
                    "first_param": 1,
                    "param1": 4,
                    "param9": 5,
                    "param9_arg1": 1,
                    "param_9": 3,
                    "param_a": 1,
                    "param_pointer1": 1,
                    "param_ptr1": 1,
                    "param_value9": 1,
                    "pointer1": 2,
                    "pointer_param_1": 1,
                    "src_data": 1,
                    "string_param1": 1,
                    "value_1": 1
                },
                "stack0x00000008": {
                    "dst_data": 1
                },
                "xexit": {
                    "exit_program": 2
                }
            },
            "called": [
                "xexit",
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\nvoid process_data_00107690(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 buffer_size;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param_10;\n  undefined8 param3;\n  undefined8 local_param12;\n  undefined8 arg4;\n  undefined8 arg5;\n  undefined4 local_param1;\n  undefined4 local_param2;\n  undefined4 local_param3;\n  undefined4 local_param4;\n  undefined4 local_param5;\n  undefined4 local_param6;\n  undefined4 local_param7;\n  undefined4 local_param8;\n  \n  if (flag != '\\0') {\n    local_param1 = input1;\n    local_param2 = input2;\n    local_param3 = input3;\n    local_param4 = input4;\n    local_param5 = input5;\n    local_param6 = input6;\n    local_param7 = input7;\n    local_param8 = input8;\n  }\n  buffer = &dst_data;\n  size = 8;\n  local_buffer = local_buffer;\n  buffer_size = 0x30;\n  param_10 = param10;\n  param3 = param11;\n  local_param12 = param12;\n  arg4 = param13;\n  arg5 = param14;\n  FUN_001078c0(param9,&size);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "process_data_00107690",
            "entrypoint": "0x00107690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107690": "process_data_00107690",
                "in_AL": "flag",
                "local_18": "local_param8",
                "local_28": "local_param7",
                "local_38": "local_param6",
                "local_48": "local_param5",
                "local_58": "local_param4",
                "local_68": "local_param3",
                "local_78": "local_param2",
                "local_88": "local_param1",
                "local_90": "arg5",
                "local_98": "arg4",
                "local_a0": "local_param12",
                "local_a8": "param3",
                "local_b0": "param_10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "buffer_size",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param9",
                "stack0x00000008": "dst_data",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107730": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_handle": 1,
                    "file_pointer": 4
                },
                "DAT_0010d5e0": {
                    "cache_flag": 1,
                    "is_cache_enabled": 2,
                    "is_cache_open": 2
                },
                "DAT_0010d618": {
                    "file_path": 4,
                    "filename": 1
                },
                "FUN_00102bf5": {
                    "clean_up_cache": 1,
                    "close_bf_dcache": 1,
                    "close_bfd": 1,
                    "close_bfd_cache": 2,
                    "close_cache": 1,
                    "deallocate_resources": 1,
                    "extra_cleanup": 1,
                    "initialize_cache": 1,
                    "perform_additional_actions": 1,
                    "perform_additional_cleanup": 1,
                    "release_resources": 1,
                    "reverse_bits": 1,
                    "reverse_file": 1
                },
                "FUN_00107730": {
                    "clean_up_function": 1,
                    "cleanup": 6,
                    "cleanup_and_close": 2,
                    "cleanup_and_close_file": 1,
                    "cleanup_and_delete_file": 3,
                    "cleanup_and_remove_file": 5,
                    "cleanup_file": 1,
                    "cleanup_files": 3,
                    "cleanup_function": 5,
                    "cleanup_resources": 1,
                    "close_file": 1,
                    "close_file_and_remove_if_necessary": 1,
                    "close_file_and_unlink": 1
                },
                "bfd_cache_close": {
                    "close_cache": 5
                },
                "fclose": {
                    "close_file": 2
                },
                "unlink_if_ordinary": {
                    "delete_file": 4,
                    "remove": 1,
                    "remove_file": 15,
                    "unlink_file": 2
                }
            },
            "called": [
                "FUN_00102bf5"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid cleanup_function_00107730(void)\n\n{\n  if (DAT_0010d618 == 0) {\n    return;\n  }\n  if (DAT_0010d5e0 != 0) {\n    bfd_cache_close();\n  }\n  if (DAT_0010d5d8 != (FILE *)0x0) {\n    fclose(DAT_0010d5d8);\n  }\n  unlink_if_ordinary(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_function_00107730",
            "entrypoint": "0x00107730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107730": "cleanup_function_00107730",
                "bfd_cache_close": "close_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107740": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "archive_file": 1,
                    "file_handle": 2,
                    "file_ptr1": 1,
                    "output_file": 2
                },
                "DAT_0010d600": {
                    "flag": 2,
                    "flag1": 1
                },
                "DAT_0010d618": {
                    "archive_filename": 1,
                    "file_name": 2,
                    "file_name_path": 1,
                    "file_path": 1,
                    "input_file": 1
                },
                "DAT_0010d638": {
                    "default_error_message": 2,
                    "error_message": 2,
                    "flag2": 1
                },
                "FUN_00107740": {
                    "extract_and_process_archive": 1,
                    "extract_and_process_files": 1,
                    "extract_and_read_file_contents": 1,
                    "extract_and_write_archive_contents": 1,
                    "extract_archive": 7,
                    "extract_archive_contents": 2,
                    "extract_archive_file": 1,
                    "extract_archive_files": 1,
                    "extract_archived_files": 3,
                    "extract_archives": 2,
                    "extract_data_from_binary": 1,
                    "extract_file_from_archive": 1,
                    "extract_valid_archive_entry": 1,
                    "find_file_in_archive": 1,
                    "process_archive": 2,
                    "process_binary": 2,
                    "process_binary_function": 1,
                    "process_file": 1
                },
                "_DAT_0010d600": {
                    "debug_flag": 1,
                    "flag": 2
                },
                "_DAT_0010d638": {
                    "default_error_message": 1
                },
                "_Stack_b0": {
                    "file_mode": 4,
                    "file_permission": 5,
                    "file_permissions": 15,
                    "mode": 1,
                    "new_mode": 1,
                    "new_permissions": 1,
                    "permissions": 4
                },
                "__n": {
                    "buffer_size": 1,
                    "bytes_read": 25,
                    "read_bytes": 1,
                    "read_size": 4
                },
                "__ptr": {
                    "buffer": 22,
                    "buffer_pointer": 4,
                    "buffer_ptr": 4,
                    "file_buffer": 1
                },
                "iVar1": {
                    "cmp_result": 5,
                    "compare_result": 1,
                    "comparison_result": 23,
                    "filename_comparison_result": 2
                },
                "iVar2": {
                    "error_code": 8,
                    "error_flag": 1,
                    "error_status": 1,
                    "function_result": 1,
                    "result": 1,
                    "return_value": 2,
                    "stat_error": 3,
                    "stat_error_code": 2,
                    "stat_result": 3,
                    "status": 8
                },
                "lVar7": {
                    "counter": 2,
                    "file_offset": 2,
                    "increment": 1,
                    "index": 1,
                    "loop_counter": 7,
                    "loop_index": 1,
                    "loop_variable": 1,
                    "offset": 13,
                    "size": 1,
                    "temp_size": 1,
                    "temp_value": 1
                },
                "local_c8": {
                    "empty_array": 1,
                    "error_code_array": 1,
                    "file_mode": 1,
                    "flag_array": 1,
                    "initialized_array": 1,
                    "local_array": 11,
                    "local_values": 2,
                    "local_variables": 4,
                    "local_vars": 1,
                    "padding_array": 1,
                    "zero_array": 3,
                    "zero_buffer_array": 1,
                    "zeroes_array": 1
                },
                "param_1": {
                    "archive": 12,
                    "archive_contents": 1,
                    "archive_entry": 1,
                    "archive_file": 1,
                    "archive_files": 1,
                    "archive_ptr": 1,
                    "archives": 1,
                    "binary_data": 3,
                    "file_list": 2,
                    "file_ptr": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_files": 1,
                    "parameter": 1,
                    "parameters": 1
                },
                "pcVar4": {
                    "err_string": 1,
                    "error_message": 8,
                    "error_str": 1,
                    "error_string": 18
                },
                "piVar3": {
                    "errno_location": 8,
                    "errno_location_ptr": 1,
                    "errno_pointer": 3,
                    "errno_ptr": 10,
                    "error": 1,
                    "error_location": 1,
                    "error_number": 4,
                    "error_ptr": 1
                },
                "plVar8": {
                    "current_address": 1,
                    "current_archive": 1,
                    "current_data": 1,
                    "current_entry": 4,
                    "current_file": 5,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "entry_ptr": 1,
                    "file": 1,
                    "file_entry": 2,
                    "file_pointer": 5,
                    "file_ptr": 5,
                    "ptr_data": 1,
                    "result_pointer": 1
                },
                "pplVar6": {
                    "actual_archive": 1,
                    "archive": 1,
                    "archive_contents": 1,
                    "archive_data_ptr": 1,
                    "archive_files": 1,
                    "archive_pointer": 1,
                    "archive_ptr": 4,
                    "archived_files": 1,
                    "current_entry": 1,
                    "current_file": 1,
                    "data_pointer": 2,
                    "extracted_archives": 1,
                    "file_list_pointer": 1,
                    "file_ptr": 2,
                    "file_ptr_ptr": 2,
                    "file_table": 1,
                    "first_entry": 1,
                    "null_pointer": 1,
                    "pointer_array": 3,
                    "ppl_var": 1,
                    "ptr_ptr_data": 1,
                    "ptr_to_input_array": 1,
                    "working_archive": 1
                },
                "puVar9": {
                    "initialized_values": 1,
                    "local_array": 9,
                    "local_array_pointer": 1,
                    "local_array_ptr": 4,
                    "local_values_pointer": 1,
                    "local_values_ptr": 2,
                    "local_var_pointer": 1,
                    "local_variable_array": 1,
                    "local_variable_pointer": 1,
                    "local_variables": 1,
                    "local_vars": 1,
                    "local_vars_ptr": 2,
                    "memset_ptr": 1,
                    "ptr_local_array": 1,
                    "temporary_array": 1,
                    "var_array_ptr": 1,
                    "zero_buffer": 1
                },
                "sVar11": {
                    "available_bytes": 1,
                    "buffer_size": 1,
                    "bytes_to_process": 2,
                    "bytes_to_read": 18,
                    "chunk_size": 2,
                    "copy_size": 1,
                    "read_size": 1,
                    "remaining_bytes": 1,
                    "write_size": 3
                },
                "uStack_70": {
                    "archive_name": 2,
                    "archive_offset": 1,
                    "archive_path": 1,
                    "archive_reader": 1,
                    "error_message": 1,
                    "file_name": 1,
                    "file_size_plus_offset2": 1,
                    "filename_original": 1,
                    "function_argument_2": 1,
                    "function_result2": 1,
                    "function_return_value": 1,
                    "local_variable2": 1,
                    "primary_stack_element": 1,
                    "second_file": 1,
                    "second_value": 1,
                    "stack_value2": 1,
                    "success_message": 1,
                    "temp2": 1,
                    "temp_stack2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "temp_variable2": 3,
                    "temporary_variable2": 2,
                    "tmp_var2": 1,
                    "translated_string_result": 1,
                    "var_u_stack_70": 1,
                    "yet_another_stack_variable": 1
                },
                "uStack_80": {
                    "another_stack_variable": 1,
                    "archive_file_size": 1,
                    "archive_name": 1,
                    "archive_writer": 1,
                    "error_filename": 1,
                    "error_message": 1,
                    "file_name_copy": 1,
                    "file_path": 1,
                    "file_size_plus_offset": 1,
                    "filename_buffer": 1,
                    "filename_translated": 1,
                    "first_file": 1,
                    "first_value": 1,
                    "function_argument": 1,
                    "function_result1": 1,
                    "function_return_value": 1,
                    "local_variable1": 1,
                    "secondary_stack_element": 1,
                    "stack_value1": 1,
                    "temp": 1,
                    "temp_stack1": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_variable1": 3,
                    "temporary_variable1": 2,
                    "tmp_var1": 1,
                    "translated_string_temp": 1,
                    "var_u_stack_80": 1
                },
                "uStack_98": {
                    "archive_size": 11,
                    "file_size": 16,
                    "input_size": 1,
                    "total_bytes": 2,
                    "total_size": 1
                },
                "uVar10": {
                    "bytes_processed": 10,
                    "bytes_read": 3,
                    "bytes_remaining": 4,
                    "bytes_written": 1,
                    "remaining_bytes": 1,
                    "total_bytes": 1,
                    "total_bytes_read": 6,
                    "total_read": 3
                },
                "uVar5": {
                    "error_format": 1,
                    "error_identifier": 1,
                    "error_message": 8,
                    "error_string": 3,
                    "gettext_message": 1,
                    "gettext_result": 1,
                    "internal_error_message": 1,
                    "localized_err_string": 1,
                    "localized_error_message": 1,
                    "message": 6,
                    "text": 2,
                    "translated_error_string": 2,
                    "translated_string": 2
                }
            },
            "called": [
                "FUN_00102c25"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong * extract_and_write_archive_contents_00107740(long **archive)\n\n{\n  int comparison_result;\n  int error_code;\n  int *errno_ptr;\n  char *error_string;\n  undefined8 error_message;\n  long **archive_ptr;\n  void *buffer;\n  size_t bytes_read;\n  long offset;\n  long *current_file;\n  undefined4 *local_array;\n  ulong bytes_processed;\n  size_t bytes_to_read;\n  undefined4 local_array [6];\n  __mode_t file_permissions;\n  ulong file_size;\n  undefined8 temp_variable1;\n  undefined8 temp_variable2;\n  \n  if (_DAT_0010d600 != 0) {\n    local_array = local_array;\n    for (offset = 0x24; offset != 0; offset = offset + -1) {\n      *local_array = 0;\n      local_array = local_array + 1;\n    }\n  }\n  archive_ptr = (long **)archive[0x1d];\n  if ((long **)archive[0x1d] == (long **)0x0) {\n    archive_ptr = archive;\n  }\n  error_code = (*(code *)archive_ptr[1][0x3d])(archive,local_array);\n  if (error_code != 0) {\n    current_file = *archive;\n    error_message = dcgettext(0,\"internal stat error on %s\",5);\n    error_code = FUN_00107690(error_message,current_file);\n    error_message = DAT_0010d638;\n    if (error_code == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = filename_cmp(*(undefined8 *)*current_file,error_message);\n        if (comparison_result == 0) {\n          if (error_code != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  bfd_seek(archive,0,0);\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (file_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive);\n  }\n  else {\n    bytes_processed = 0;\n    buffer = (void *)xmalloc(0x2000);\n    do {\n      bytes_to_read = file_size - bytes_processed;\n      if (0x2000 < bytes_to_read) {\n        bytes_to_read = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,bytes_to_read,archive);\n      if (bytes_to_read != bytes_read) {\nLAB_00102c78:\n        archive = (long **)*archive[0x1d];\n        error_message = dcgettext(0,\"%s is not a valid archive\",5);\n        FUN_00107690(error_message,archive);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive);\n      }\n      bytes_to_read = fwrite(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_to_read != bytes_read) {\n        errno_ptr = __errno_location();\n        error_string = strerror(*errno_ptr);\n        FUN_00107690(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      bytes_processed = bytes_processed + bytes_read;\n    } while (bytes_processed < file_size);\n    free(buffer);\n  }\n  fclose(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  chmod(DAT_0010d618,file_permissions);\n  if (_DAT_0010d600 != 0) {\n    temp_variable1 = temp_variable2;\n    FUN_00107c80(error_string,local_array);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_write_archive_contents_00107740",
            "entrypoint": "0x00107740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107740": "extract_and_write_archive_contents_00107740",
                "_Stack_b0": "file_permissions",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "iVar1": "comparison_result",
                "iVar2": "error_code",
                "lVar7": "offset",
                "local_c8": "local_array",
                "param_1": "archive",
                "pcVar4": "error_string",
                "piVar3": "errno_ptr",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "local_array",
                "sVar11": "bytes_to_read",
                "uStack_70": "temp_variable2",
                "uStack_80": "temp_variable1",
                "uStack_98": "file_size",
                "uVar10": "bytes_processed",
                "uVar5": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107890": {
            "additional_data": {
                "FUN_00107890": {
                    "output_function": 1,
                    "print_data": 1,
                    "print_file_content": 1,
                    "print_file_output": 1,
                    "print_file_parameters": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_function_results": 1,
                    "print_info_to_std_out": 1,
                    "print_message": 1,
                    "print_out_to_file": 1,
                    "print_output": 10,
                    "print_output_to_console": 1,
                    "print_param": 1,
                    "print_param_to_stdout": 1,
                    "print_status_message": 1,
                    "print_to_file": 1,
                    "print_to_standard_output": 1,
                    "print_to_stdout": 3,
                    "print_with_flags": 1
                },
                "FUN_001079c0": {
                    "display_output": 1,
                    "format_and_print": 3,
                    "format_output": 1,
                    "print_content": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_formatting": 1,
                    "print_message": 1,
                    "print_message_to_file": 2,
                    "print_param_to_stream_with_flags": 1,
                    "print_to_file": 9,
                    "print_to_stdout": 1,
                    "print_to_stream": 1,
                    "print_with_flags": 1
                },
                "_stdout": {
                    "stdout": 1
                },
                "param_1": {
                    "file": 11,
                    "file_descriptor": 1,
                    "file_pointer": 1,
                    "file_ptr": 2,
                    "message": 1,
                    "output": 4,
                    "output_file": 3,
                    "output_stream": 1,
                    "output_text": 1,
                    "stdout": 3,
                    "stream": 3
                },
                "param_2": {
                    "content": 1,
                    "file": 2,
                    "file_names": 2,
                    "lines": 1,
                    "message": 4,
                    "message_array": 1,
                    "message_ptr": 1,
                    "messages": 3,
                    "output_data": 1,
                    "output_string": 1,
                    "param": 1,
                    "strings": 8,
                    "strings_array": 1,
                    "text": 1,
                    "text_array": 1,
                    "text_to_print": 1
                },
                "param_3": {
                    "check_condition1": 1,
                    "check_flag1": 1,
                    "condition1": 7,
                    "flag1": 10,
                    "flag_1": 1,
                    "is_check1_enabled": 1,
                    "is_condition1": 2,
                    "is_condition1_met": 1,
                    "is_condition_1": 1,
                    "is_condition_met": 1,
                    "is_condition_one_true": 1,
                    "is_condition_true": 2,
                    "is_conditional_output": 1,
                    "is_enabled": 1
                },
                "param_4": {
                    "check_condition2": 1,
                    "check_flag2": 1,
                    "condition2": 7,
                    "flag2": 10,
                    "flag_2": 1,
                    "is_check2_enabled": 1,
                    "is_condition2": 2,
                    "is_condition2_met": 1,
                    "is_condition_2": 1,
                    "is_condition_two_true": 1,
                    "is_data_available": 2,
                    "is_data_valid": 3
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_output_to_console_00107890(undefined8 file)\n\n{\n  FUN_001079c0(stdout,file,DAT_0010d60c != 0,_DAT_0010d5fc != 0);\n  return;\n}\n\n",
            "current_name": "print_output_to_console_00107890",
            "entrypoint": "0x00107890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107890": "print_output_to_console_00107890",
                "_stdout": "stdout",
                "param_1": "file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001078c0": {
            "additional_data": {
                "FUN_001078c0": {
                    "print_error_message": 30,
                    "print_formatted_message": 1
                },
                "__arg": {
                    "argument": 1,
                    "argument_list": 2,
                    "arguments": 5,
                    "va_arguments": 1
                },
                "__c": {
                    "character": 12
                },
                "__format": {
                    "format": 5,
                    "format_specifier": 1,
                    "format_string": 6
                },
                "__gnuc_va_list": {
                    "va_list": 1,
                    "var_args": 2
                },
                "__s": {
                    "output_stream": 2,
                    "s": 2,
                    "stream": 8
                },
                "__stream": {
                    "file_stream": 2,
                    "output_file": 1,
                    "output_stream": 5,
                    "stream": 4
                },
                "_stderr": {
                    "error_stream": 2,
                    "standard_error": 3
                },
                "_stdout": {
                    "standard_output": 3
                },
                "fflush": {
                    "clear_output_buffer": 1,
                    "flush_output": 6,
                    "flush_standard_output": 1,
                    "flush_stream": 5
                },
                "fprintf": {
                    "format_and_write_to_output": 1,
                    "format_print": 2,
                    "formatted_print": 1,
                    "print_formatted": 2,
                    "print_formatted_output": 1,
                    "print_to_stream": 1,
                    "write_error_message": 1,
                    "write_format": 1,
                    "write_formatted": 1,
                    "write_to_stream": 1
                },
                "fputs": {
                    "write_to_standard_error": 1
                },
                "param_1": {
                    "error_message": 20,
                    "format_string": 1,
                    "message": 9,
                    "message_format": 1
                },
                "param_2": {
                    "args": 11,
                    "arguments": 16
                },
                "putc": {
                    "put_character": 5,
                    "write_char_to_standard_error": 1,
                    "write_character": 6,
                    "write_character_to_stream": 1
                },
                "vfprintf": {
                    "format_and_write_to_output_with_args": 1,
                    "print_formatted_output_with_args": 1,
                    "print_to_standard_error_with_args": 1,
                    "print_to_stream_with_args": 1,
                    "print_variable_formatted": 2,
                    "variable_format_print": 1,
                    "variable_formatted_print": 1,
                    "write_error_message_with_arguments": 1,
                    "write_formatted_arguments": 1,
                    "write_to_stream_with_arguments": 1,
                    "write_var_format": 1
                }
            },
            "called": [
                "fflush",
                "putc",
                "fprintf",
                "vfprintf"
            ],
            "calling": [
                "FUN_00107690",
                "FUN_00107920"
            ],
            "code": "\n\n\nvoid print_error_message_001078c0(char *error_message,var_args arguments)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_0010d660);\n  vfprintf(standard_error,error_message,arguments);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_001078c0",
            "entrypoint": "0x001078c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001078c0": "print_error_message_001078c0",
                "__gnuc_va_list": "var_args",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "print_formatted",
                "param_1": "error_message",
                "param_2": "arguments",
                "putc": "write_character",
                "vfprintf": "print_variable_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107920": {
            "additional_data": {
                "FUN_001078c0": {
                    "copy_data": 1,
                    "perform_operation": 1,
                    "process_arguments": 1,
                    "process_data": 1,
                    "process_data_helper": 2,
                    "process_input": 1,
                    "process_output": 1,
                    "process_sub_function": 2
                },
                "FUN_00107920": {
                    "convert_data": 1,
                    "extract_data": 5,
                    "extract_data_from_binary": 2,
                    "extract_parameters_and_call_function": 1,
                    "initialize_function": 3,
                    "initialize_variables": 1,
                    "parse_input": 1,
                    "process_data": 14,
                    "process_function": 1
                },
                "in_AL": {
                    "check_flag": 1,
                    "condition": 5,
                    "condition_flag": 1,
                    "condition_met": 1,
                    "flag": 10,
                    "input_bool": 1,
                    "input_flag": 4,
                    "input_flag2": 1,
                    "is_param_valid": 1
                },
                "local_18": {
                    "arg8_copy": 2,
                    "copy8": 1,
                    "copy_of_argument8": 1,
                    "data8_copy": 1,
                    "data_8_new": 1,
                    "input8_copy": 2,
                    "input8_local": 1,
                    "input_8_copy": 2,
                    "input_param_8": 1,
                    "local_data8": 1,
                    "local_input8": 1,
                    "local_input_8": 3,
                    "local_input_param8": 1,
                    "local_param_8": 1,
                    "local_value8": 1,
                    "local_var15": 1,
                    "local_variable15": 1,
                    "local_variable8": 1,
                    "param_8_local": 1,
                    "temp_input8": 1,
                    "value8_copy": 1,
                    "var22": 1,
                    "variable8": 1
                },
                "local_28": {
                    "arg7_copy": 2,
                    "copy7": 1,
                    "copy_of_argument7": 1,
                    "data7_copy": 1,
                    "data_7_new": 1,
                    "input7_copy": 2,
                    "input7_local": 1,
                    "input_7_copy": 2,
                    "input_param_7": 1,
                    "local_data7": 1,
                    "local_input7": 1,
                    "local_input_7": 3,
                    "local_input_param7": 1,
                    "local_param_7": 1,
                    "local_value7": 1,
                    "local_var14": 1,
                    "local_variable14": 1,
                    "local_variable7": 1,
                    "param_7_local": 1,
                    "temp_input7": 1,
                    "value7_copy": 1,
                    "var21": 1,
                    "variable7": 1
                },
                "local_38": {
                    "arg6_copy": 2,
                    "copy6": 1,
                    "copy_of_argument6": 1,
                    "data6_copy": 1,
                    "data_6_new": 1,
                    "input6_copy": 2,
                    "input6_local": 1,
                    "input_6_copy": 2,
                    "input_param_6": 1,
                    "local_data6": 1,
                    "local_input6": 1,
                    "local_input_6": 3,
                    "local_input_param6": 1,
                    "local_param_6": 1,
                    "local_value6": 1,
                    "local_var13": 1,
                    "local_variable13": 1,
                    "local_variable6": 1,
                    "param_6_local": 1,
                    "temp_input6": 1,
                    "value6_copy": 1,
                    "var20": 1,
                    "variable6": 1
                },
                "local_48": {
                    "arg5_copy": 2,
                    "copy5": 1,
                    "copy_of_argument5": 1,
                    "data5_copy": 1,
                    "data_5_new": 1,
                    "input5_copy": 2,
                    "input5_local": 1,
                    "input_5_copy": 2,
                    "input_param_5": 1,
                    "local_data5": 1,
                    "local_input5": 1,
                    "local_input_5": 3,
                    "local_input_param5": 1,
                    "local_param_5": 1,
                    "local_value5": 1,
                    "local_var12": 1,
                    "local_variable12": 1,
                    "local_variable5": 1,
                    "param_5_local": 1,
                    "temp_input5": 1,
                    "value5_copy": 1,
                    "var19": 1,
                    "variable5": 1
                },
                "local_58": {
                    "arg4_copy": 2,
                    "copy4": 1,
                    "copy_of_argument4": 1,
                    "data4_copy": 1,
                    "data_4_new": 1,
                    "input4_copy": 2,
                    "input4_local": 1,
                    "input_4_copy": 2,
                    "input_param_4": 1,
                    "local_data4": 1,
                    "local_input4": 1,
                    "local_input_4": 3,
                    "local_input_param4": 1,
                    "local_offset_param": 1,
                    "local_param_4": 1,
                    "local_value4": 1,
                    "local_var11": 1,
                    "local_variable11": 1,
                    "local_variable4": 1,
                    "param_4_local": 1,
                    "temp_input4": 1,
                    "value4_copy": 1,
                    "var18": 1,
                    "variable4": 1
                },
                "local_68": {
                    "arg3_copy": 2,
                    "copy3": 1,
                    "copy_of_argument3": 1,
                    "data3_copy": 1,
                    "data_3_new": 1,
                    "input3_copy": 2,
                    "input3_local": 1,
                    "input_3_copy": 2,
                    "input_param_3": 1,
                    "local_data3": 1,
                    "local_input3": 1,
                    "local_input_3": 3,
                    "local_input_param3": 1,
                    "local_param_3": 1,
                    "local_size_param": 1,
                    "local_value3": 1,
                    "local_var10": 1,
                    "local_variable10": 1,
                    "local_variable3": 1,
                    "param_3_local": 1,
                    "temp_input3": 1,
                    "value3_copy": 1,
                    "var17": 1,
                    "variable3": 1
                },
                "local_78": {
                    "arg2_copy": 2,
                    "copy2": 1,
                    "copy_of_argument2": 1,
                    "data2_copy": 1,
                    "data_2_new": 1,
                    "input2_copy": 2,
                    "input2_local": 1,
                    "input_2_copy": 2,
                    "input_param_2": 1,
                    "local_buffer_param": 1,
                    "local_data2": 1,
                    "local_input2": 1,
                    "local_input_2": 3,
                    "local_input_param2": 1,
                    "local_param_2": 1,
                    "local_value2": 1,
                    "local_var9": 1,
                    "local_variable2": 1,
                    "local_variable9": 1,
                    "param_2_local": 1,
                    "temp_input2": 1,
                    "value2_copy": 1,
                    "var16": 1,
                    "variable2": 1
                },
                "local_88": {
                    "arg1_copy": 2,
                    "buffer_size_local_param": 1,
                    "copy1": 1,
                    "copy_of_argument1": 1,
                    "data1_copy": 1,
                    "data_1_new": 1,
                    "input1_copy": 2,
                    "input1_local": 1,
                    "input_1_copy": 2,
                    "input_param_1": 1,
                    "local_data1": 1,
                    "local_input": 1,
                    "local_input1": 1,
                    "local_input_1": 3,
                    "local_input_param1": 1,
                    "local_param_1": 1,
                    "local_value1": 1,
                    "local_var8": 1,
                    "local_variable1": 1,
                    "local_variable8": 1,
                    "temp_input1": 1,
                    "value1_copy": 1,
                    "var15": 1,
                    "variable1": 1
                },
                "local_90": {
                    "arg14": 1,
                    "arg_6_copy": 1,
                    "arg_f": 1,
                    "array_param_5": 1,
                    "buffer5": 1,
                    "data6": 2,
                    "local5": 1,
                    "local_output_5": 1,
                    "local_param14": 2,
                    "local_param_14": 3,
                    "local_var7": 1,
                    "local_variable7": 1,
                    "param14": 1,
                    "param14_copy": 1,
                    "param6": 1,
                    "param_14": 1,
                    "param_14_copy": 2,
                    "param_14_local": 1,
                    "param_14_new": 1,
                    "param_ptr_5": 1,
                    "temp5": 1,
                    "temp_input5": 1,
                    "value14_copy": 1,
                    "value5": 1,
                    "var14": 1,
                    "variable5": 1
                },
                "local_98": {
                    "arg13": 1,
                    "arg_5_copy": 1,
                    "arg_e": 1,
                    "array_param_4": 1,
                    "buffer4": 1,
                    "data5": 2,
                    "local4": 1,
                    "local_output_4": 1,
                    "local_param13": 2,
                    "local_param_13": 3,
                    "local_var6": 1,
                    "local_variable6": 1,
                    "param13": 1,
                    "param13_copy": 1,
                    "param5": 1,
                    "param_13": 1,
                    "param_13_copy": 2,
                    "param_13_local": 1,
                    "param_13_new": 1,
                    "param_ptr_4": 1,
                    "temp4": 1,
                    "temp_input4": 1,
                    "value13_copy": 1,
                    "value4": 1,
                    "var13": 1,
                    "variable4": 1
                },
                "local_a0": {
                    "arg12": 1,
                    "arg_4_copy": 1,
                    "arg_d": 1,
                    "array_param_3": 1,
                    "buffer3": 1,
                    "data4": 2,
                    "local3": 1,
                    "local_output_3": 1,
                    "local_param12": 2,
                    "local_param_12": 3,
                    "local_var5": 1,
                    "local_variable5": 1,
                    "param12": 1,
                    "param12_copy": 1,
                    "param4": 1,
                    "param_12": 1,
                    "param_12_copy": 2,
                    "param_12_local": 1,
                    "param_12_new": 1,
                    "param_ptr_3": 1,
                    "temp3": 1,
                    "temp_input3": 1,
                    "value12_copy": 1,
                    "value3": 1,
                    "var12": 1,
                    "variable3": 1
                },
                "local_a8": {
                    "arg11": 1,
                    "arg_3_copy": 1,
                    "arg_c": 1,
                    "array_param_2": 1,
                    "buffer2": 1,
                    "data3": 2,
                    "local2": 1,
                    "local_output_2": 1,
                    "local_param11": 2,
                    "local_param_11": 3,
                    "local_var4": 1,
                    "local_variable4": 1,
                    "param11": 1,
                    "param11_copy": 1,
                    "param3": 1,
                    "param_11": 1,
                    "param_11_copy": 2,
                    "param_11_local": 1,
                    "param_11_new": 1,
                    "param_ptr_2": 1,
                    "temp2": 1,
                    "temp_input2": 1,
                    "value11_copy": 1,
                    "value2": 1,
                    "var11": 1,
                    "variable2": 1
                },
                "local_b0": {
                    "arg10": 1,
                    "arg_2_copy": 1,
                    "arg_b": 1,
                    "array_param_1": 1,
                    "buffer1": 1,
                    "data2": 2,
                    "local1": 1,
                    "local_output_1": 1,
                    "local_param10": 2,
                    "local_param_10": 3,
                    "local_var3": 1,
                    "local_variable3": 1,
                    "param10": 1,
                    "param10_copy": 1,
                    "param2": 1,
                    "param_10": 1,
                    "param_10_copy": 2,
                    "param_10_local": 1,
                    "param_10_new": 1,
                    "param_ptr_1": 1,
                    "temp1": 1,
                    "temp_input1": 1,
                    "value1": 1,
                    "value10_copy": 1,
                    "var10": 1,
                    "variable1": 1
                },
                "local_b8": {
                    "_local_array": 1,
                    "buffer": 2,
                    "buffer_array": 1,
                    "destination_buffer": 1,
                    "local_array": 3,
                    "local_buf": 1,
                    "local_buffer": 8,
                    "output_buffer": 1,
                    "temp_array": 1,
                    "temp_buffer": 7,
                    "temporary_buffer": 1,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "_local_buffer": 1,
                    "buffer": 5,
                    "buffer2": 1,
                    "destination_pointer": 1,
                    "local_array": 2,
                    "local_array2": 1,
                    "local_buf_ptr": 1,
                    "local_buffer": 10,
                    "local_buffer_pointer": 1,
                    "local_ptr2": 2,
                    "local_ptr_2": 1,
                    "local_string_2": 1,
                    "local_temp": 1,
                    "pointer2": 1,
                    "temp_buffer": 1
                },
                "local_d0": {
                    "_buffer": 1,
                    "buffer": 8,
                    "buffer1": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 4,
                    "local_array1": 1,
                    "local_buffer": 1,
                    "local_ptr1": 2,
                    "local_ptr_1": 1,
                    "local_string_1": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_to_stack": 1,
                    "source_pointer": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 3
                },
                "local_d4": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "byte_count": 1,
                    "constant": 1,
                    "iteration": 1,
                    "length": 1,
                    "local_4": 1,
                    "local_offset": 1,
                    "local_size": 1,
                    "local_var2": 1,
                    "local_variable2": 1,
                    "loop_count": 1,
                    "offset": 4,
                    "size": 3,
                    "size2": 2,
                    "temp_variable": 1,
                    "value": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 5,
                    "buffer_size_local": 1,
                    "byte_count": 1,
                    "count": 2,
                    "length": 4,
                    "local_length": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "size": 11,
                    "size1": 1
                },
                "param_1": {
                    "arg1": 3,
                    "argument1": 1,
                    "buffer_size": 1,
                    "data1": 3,
                    "data_1": 1,
                    "data_param": 1,
                    "input1": 7,
                    "input_1": 7,
                    "input_flag": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "value1": 2,
                    "var1": 1
                },
                "param_10": {
                    "arg10": 1,
                    "arg2": 1,
                    "arg_2": 1,
                    "array_param_1": 1,
                    "data2": 2,
                    "data_pointer2": 1,
                    "input2": 1,
                    "input_param9": 1,
                    "input_value2": 1,
                    "output2": 1,
                    "output_param_1": 1,
                    "param10": 3,
                    "param2": 3,
                    "param_10": 6,
                    "param_b": 1,
                    "param_ptr_1": 1,
                    "parameter10": 1,
                    "pointer_2": 1,
                    "value10": 1
                },
                "param_11": {
                    "arg11": 1,
                    "arg3": 1,
                    "arg_3": 1,
                    "array_param_2": 1,
                    "data3": 2,
                    "data_pointer3": 1,
                    "input3": 1,
                    "input_param10": 1,
                    "input_value3": 1,
                    "output3": 1,
                    "output_param_2": 1,
                    "param11": 3,
                    "param3": 3,
                    "param_11": 6,
                    "param_c": 1,
                    "param_ptr_2": 1,
                    "parameter11": 1,
                    "pointer_3": 1,
                    "value11": 1
                },
                "param_12": {
                    "arg12": 1,
                    "arg4": 1,
                    "arg_4": 1,
                    "array_param_3": 1,
                    "data4": 2,
                    "data_pointer4": 1,
                    "input4": 1,
                    "input_param11": 1,
                    "input_value4": 1,
                    "output4": 1,
                    "output_param_3": 1,
                    "param12": 3,
                    "param4": 3,
                    "param_12": 6,
                    "param_d": 1,
                    "param_ptr_3": 1,
                    "parameter12": 1,
                    "pointer_4": 1,
                    "value12": 1
                },
                "param_13": {
                    "arg13": 1,
                    "arg5": 1,
                    "arg_5": 1,
                    "array_param_4": 1,
                    "data5": 2,
                    "data_pointer5": 1,
                    "input5": 1,
                    "input_param12": 1,
                    "input_value5": 1,
                    "output5": 1,
                    "output_param_4": 1,
                    "param13": 3,
                    "param5": 3,
                    "param_13": 6,
                    "param_e": 1,
                    "param_ptr_4": 1,
                    "parameter13": 1,
                    "pointer_5": 1,
                    "value13": 1
                },
                "param_14": {
                    "arg14": 1,
                    "arg6": 1,
                    "arg_6": 1,
                    "array_param_5": 1,
                    "data6": 2,
                    "data_pointer6": 1,
                    "input6": 1,
                    "input_param13": 1,
                    "input_value6": 1,
                    "output6": 1,
                    "output_param_5": 1,
                    "param14": 3,
                    "param6": 3,
                    "param_14": 6,
                    "param_f": 1,
                    "param_ptr_5": 1,
                    "parameter14": 1,
                    "pointer_6": 1,
                    "value14": 1
                },
                "param_2": {
                    "arg2": 3,
                    "argument2": 1,
                    "buffer_param": 1,
                    "data2": 3,
                    "data_2": 1,
                    "input2": 7,
                    "input_2": 7,
                    "input_param1": 1,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "param_2": 1,
                    "value2": 2,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "argument3": 1,
                    "data3": 3,
                    "data_3": 1,
                    "input3": 7,
                    "input_3": 7,
                    "input_param2": 1,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "param_3": 1,
                    "size_param": 1,
                    "value3": 2,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "argument4": 1,
                    "data4": 3,
                    "data_4": 1,
                    "input4": 7,
                    "input_4": 7,
                    "input_param3": 1,
                    "input_param4": 1,
                    "input_param_4": 2,
                    "offset_param": 1,
                    "param_4": 1,
                    "value4": 2,
                    "var4": 1
                },
                "param_5": {
                    "arg5": 3,
                    "argument5": 1,
                    "data5": 3,
                    "data_5": 1,
                    "input5": 7,
                    "input_5": 7,
                    "input_param4": 1,
                    "input_param5": 1,
                    "input_param_5": 2,
                    "param_5": 2,
                    "value5": 2,
                    "var5": 1
                },
                "param_6": {
                    "arg6": 3,
                    "argument6": 1,
                    "data6": 3,
                    "data_6": 1,
                    "input6": 7,
                    "input_6": 7,
                    "input_param5": 1,
                    "input_param6": 1,
                    "input_param_6": 2,
                    "param_6": 2,
                    "value6": 2,
                    "var6": 1
                },
                "param_7": {
                    "arg7": 3,
                    "argument7": 1,
                    "data7": 3,
                    "data_7": 1,
                    "input7": 7,
                    "input_7": 7,
                    "input_param6": 1,
                    "input_param7": 1,
                    "input_param_7": 2,
                    "param_7": 2,
                    "value7": 2,
                    "var7": 1
                },
                "param_8": {
                    "arg8": 3,
                    "argument8": 1,
                    "data8": 3,
                    "data_8": 1,
                    "input8": 7,
                    "input_8": 7,
                    "input_param7": 1,
                    "input_param8": 1,
                    "input_param_8": 2,
                    "param_8": 2,
                    "value8": 2,
                    "var8": 1
                },
                "param_9": {
                    "arg1": 1,
                    "arg9": 1,
                    "arg_1": 1,
                    "data1": 2,
                    "data_pointer": 2,
                    "data_pointer1": 1,
                    "data_ptr": 1,
                    "input1": 1,
                    "input_param": 1,
                    "input_param8": 1,
                    "input_param_9": 1,
                    "input_value1": 1,
                    "output1": 1,
                    "param1": 3,
                    "param9": 1,
                    "param_9": 5,
                    "param_a": 1,
                    "parameter9": 1,
                    "pointer_1": 1,
                    "source_data": 1,
                    "value9": 1
                }
            },
            "called": [
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_00102e6f",
                "FUN_001052a0",
                "FUN_00105300",
                "FUN_00102fd7",
                "FUN_00105db0",
                "FUN_001025a0",
                "FUN_00102f1e"
            ],
            "code": "\nvoid process_data_00107920(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input_6,undefined4 input_7,undefined4 input8,\n                 undefined8 param_9,undefined8 input10,undefined8 input11,undefined8 input12,\n                 undefined8 input13,undefined8 input14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 offset;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 local_param_10;\n  undefined8 local_param_11;\n  undefined8 local_param_12;\n  undefined8 local_param_13;\n  undefined8 local_param_14;\n  undefined4 local_input_1;\n  undefined4 local_input_2;\n  undefined4 local_input_3;\n  undefined4 local_input_4;\n  undefined4 local_input_5;\n  undefined4 local_input_6;\n  undefined4 local_input_7;\n  undefined4 local_input_8;\n  \n  if (flag != '\\0') {\n    local_input_1 = input1;\n    local_input_2 = input2;\n    local_input_3 = input3;\n    local_input_4 = input4;\n    local_input_5 = input5;\n    local_input_6 = input_6;\n    local_input_7 = input_7;\n    local_input_8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  offset = 0x30;\n  local_param_10 = input10;\n  local_param_11 = input11;\n  local_param_12 = input12;\n  local_param_13 = input13;\n  local_param_14 = input14;\n  FUN_001078c0(param_9,&size);\n  return;\n}\n\n",
            "current_name": "process_data_00107920",
            "entrypoint": "0x00107920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107920": "process_data_00107920",
                "in_AL": "flag",
                "local_18": "local_input_8",
                "local_28": "local_input_7",
                "local_38": "local_input_6",
                "local_48": "local_input_5",
                "local_58": "local_input_4",
                "local_68": "local_input_3",
                "local_78": "local_input_2",
                "local_88": "local_input_1",
                "local_90": "local_param_14",
                "local_98": "local_param_13",
                "local_a0": "local_param_12",
                "local_a8": "local_param_11",
                "local_b0": "local_param_10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "offset",
                "local_d8": "size",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input_6",
                "param_7": "input_7",
                "param_8": "input8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001079c0": {
            "additional_data": {
                "DAT_": {
                    "_": 1
                },
                "DAT_b": {
                    "print_hex_address": 1
                },
                "DAT_x49": {
                    "flag_byte": 1
                },
                "FUN_001079c0": {
                    "format_and_print_file_info": 1,
                    "print_file_data": 1,
                    "print_file_info": 25,
                    "print_file_information": 2,
                    "print_file_metadata": 1
                },
                "__format": {
                    "format_string": 1
                },
                "__s": {
                    "buffer": 1,
                    "formatted_info": 1
                },
                "__timer": {
                    "time_ptr": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "byte_value": {
                    "metadata_byte": 1
                },
                "cStack_ea": {
                    "execute_other": 1,
                    "file_type_char9": 1,
                    "has_other_execute": 1,
                    "is_group_exec": 1,
                    "is_group_execute": 2,
                    "is_other_execute": 1,
                    "is_other_readable": 1,
                    "is_set_other_execute": 1,
                    "other_exec": 1,
                    "other_executable": 1,
                    "other_execute": 3,
                    "other_execute_permission": 2,
                    "other_execution_permission": 1,
                    "others_execute": 1,
                    "others_read_permission": 1,
                    "permission": 1,
                    "permission9": 1,
                    "permission_char9": 1,
                    "permission_execute_others": 1,
                    "permission_s": 1,
                    "special_permissions6": 1,
                    "symbol9": 1
                },
                "cStack_eb": {
                    "file_type_char8": 1,
                    "group_executable": 1,
                    "group_write_permission": 1,
                    "has_other_write": 1,
                    "is_group_write": 3,
                    "is_other_writable": 1,
                    "is_other_write": 1,
                    "is_set_other_write": 1,
                    "other_write": 4,
                    "other_write_permission": 3,
                    "others_write": 1,
                    "permission": 1,
                    "permission8": 1,
                    "permission_char8": 1,
                    "permission_t": 1,
                    "permission_write_others": 1,
                    "special_permissions5": 1,
                    "symbol8": 1,
                    "write_other": 1
                },
                "cStack_ec": {
                    "file_type_char7": 1,
                    "group_read_permission": 1,
                    "has_other_read": 1,
                    "is_group_read": 3,
                    "is_other_executable": 1,
                    "is_other_read": 1,
                    "is_set_other_read": 1,
                    "other_read": 4,
                    "other_read_permission": 3,
                    "others_read": 1,
                    "permission": 1,
                    "permission7": 1,
                    "permission_char7": 1,
                    "permission_read_others": 1,
                    "permission_s": 1,
                    "read_other": 1,
                    "special_permissions4": 1,
                    "symbol7": 1,
                    "user_executable": 1
                },
                "cStack_ed": {
                    "execute_group": 1,
                    "file_type_char6": 1,
                    "group_exec": 1,
                    "group_execute": 4,
                    "group_execute_permission": 2,
                    "group_execution_permission": 1,
                    "has_group_execute": 1,
                    "is_group_execute": 1,
                    "is_group_readable": 1,
                    "is_owner_exec": 1,
                    "is_owner_execute": 2,
                    "is_set_group_execute": 1,
                    "other_writable": 1,
                    "owner_write_permission": 1,
                    "permission": 1,
                    "permission6": 1,
                    "permission_char6": 1,
                    "permission_execute_group": 1,
                    "permission_x": 1,
                    "special_permissions3": 1,
                    "symbol6": 1
                },
                "cStack_ee": {
                    "file_type_char5": 1,
                    "group_writable": 1,
                    "group_write": 5,
                    "group_write_permission": 3,
                    "has_group_write": 1,
                    "is_group_writable": 1,
                    "is_group_write": 1,
                    "is_owner_write": 3,
                    "is_set_group_write": 1,
                    "owner_read_permission": 1,
                    "permission": 1,
                    "permission5": 1,
                    "permission_char5": 1,
                    "permission_w": 1,
                    "permission_write_group": 1,
                    "special_permissions2": 1,
                    "symbol5": 1,
                    "write_group": 1
                },
                "cStack_ef": {
                    "directory_permission": 1,
                    "file_type_char4": 1,
                    "group_read": 5,
                    "group_read_permission": 3,
                    "has_group_read": 1,
                    "is_group_executable": 1,
                    "is_group_read": 1,
                    "is_owner_read": 3,
                    "is_set_group_read": 1,
                    "permission": 1,
                    "permission4": 1,
                    "permission_char4": 1,
                    "permission_r": 1,
                    "permission_read_group": 1,
                    "read_group": 1,
                    "special_permissions1": 1,
                    "symbol4": 1,
                    "user_writable": 1
                },
                "cStack_f0": {
                    "execute_permission": 1,
                    "execute_user": 1,
                    "file_type_char3": 1,
                    "has_user_execute": 1,
                    "is_set_user_execute": 1,
                    "is_sticky": 3,
                    "is_user_execute": 1,
                    "is_user_readable": 1,
                    "other_readable": 1,
                    "owner_exec": 1,
                    "owner_execute": 2,
                    "permission": 1,
                    "permission3": 1,
                    "permission_char3": 1,
                    "permission_execute_owner": 1,
                    "permission_x": 1,
                    "symbol3": 1,
                    "symbolic_other_permissions": 1,
                    "user_execute": 2,
                    "user_execute_permission": 2,
                    "user_execution_permission": 1
                },
                "cStack_f1": {
                    "file_type_char2": 1,
                    "group_readable": 1,
                    "has_user_write": 1,
                    "is_set_gid": 1,
                    "is_set_user_write": 1,
                    "is_setgid": 2,
                    "is_user_writable": 1,
                    "is_user_write": 1,
                    "owner_write": 3,
                    "permission": 1,
                    "permission2": 1,
                    "permission_char2": 1,
                    "permission_w": 1,
                    "permission_write_owner": 1,
                    "symbol2": 1,
                    "symbolic_group_permissions": 1,
                    "user_write": 2,
                    "user_write_permission": 3,
                    "write_permission": 1,
                    "write_user": 1
                },
                "cStack_f2": {
                    "file_type_char1": 1,
                    "has_user_read": 1,
                    "is_set_uid": 1,
                    "is_set_user_read": 1,
                    "is_setuid": 2,
                    "is_user_executable": 1,
                    "is_user_read": 1,
                    "owner_read": 3,
                    "permission": 1,
                    "permission1": 1,
                    "permission_char1": 1,
                    "permission_r": 1,
                    "permission_read_owner": 1,
                    "read_permission": 1,
                    "read_user": 1,
                    "symbol1": 1,
                    "symbolic_user_permissions": 1,
                    "user_read": 2,
                    "user_read_permission": 3,
                    "user_readable": 1
                },
                "cStack_f3": {
                    "file_type_symbol": 1
                },
                "ctime": {
                    "get_current_time": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "write_to_output": 1
                },
                "fputc": {
                    "write_char_to_output": 1,
                    "write_new_line": 1
                },
                "fputc_value": {
                    "new_line": 1
                },
                "fputs": {
                    "write_file_data": 1,
                    "write_string_to_output": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "operation_result": 1,
                    "result": 20,
                    "return_value": 5,
                    "status": 1
                },
                "local_100": {
                    "current_date_time": 2,
                    "current_file_time": 1,
                    "current_time": 19,
                    "current_time_formatted": 1,
                    "current_time_stamp": 1,
                    "current_timestamp": 4,
                    "file_time": 2
                },
                "local_60": {
                    "current_file_time": 1,
                    "current_file_time2": 1,
                    "current_time": 4,
                    "current_time_copy": 1,
                    "current_time_variable": 1,
                    "file_creation_time": 1,
                    "file_mod_time": 1,
                    "file_modification_time": 1,
                    "file_modified_time": 3,
                    "file_time": 4,
                    "last_modified": 1,
                    "local_time": 1,
                    "modification_time": 1,
                    "modified_date_time": 1,
                    "modified_time": 1,
                    "time": 1,
                    "time_buffer": 1,
                    "time_value": 1,
                    "timestamp": 2,
                    "timestamp2": 1
                },
                "local_b8": {
                    "buffer": 3,
                    "local_buf": 1,
                    "time_buffer": 1
                },
                "local_e8": {
                    "date_string": 1,
                    "file_info": 1,
                    "file_time_str": 1,
                    "formatted_date_time": 1,
                    "formatted_file_details": 1,
                    "formatted_file_info": 1,
                    "formatted_metadata": 1,
                    "formatted_permission": 1,
                    "formatted_time": 17,
                    "formatted_timestamp": 1,
                    "time_format": 1,
                    "time_info": 1,
                    "time_string": 2
                },
                "param_1": {
                    "file": 15,
                    "file_pointer": 3,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "output_file": 10
                },
                "param_2": {
                    "args": 1,
                    "data": 1,
                    "file_data": 3,
                    "file_details": 1,
                    "file_info": 19,
                    "file_info_array": 1,
                    "line": 1,
                    "metadata": 2,
                    "strings": 1
                },
                "param_3": {
                    "enable_info": 1,
                    "enable_time": 1,
                    "has_file_info": 1,
                    "has_permissions": 1,
                    "include_file_details": 1,
                    "include_header": 1,
                    "include_time": 4,
                    "is_detailed": 1,
                    "is_time_corrupt": 1,
                    "is_verbose": 2,
                    "print_details": 1,
                    "print_header": 4,
                    "print_time": 5,
                    "print_time_info": 1,
                    "print_timestamp": 2,
                    "should_print_file_info": 1,
                    "show_file_info": 1,
                    "show_timestamp": 1
                },
                "param_4": {
                    "enable_address": 1,
                    "enable_hex": 1,
                    "include_addr": 1,
                    "include_address": 2,
                    "include_hex": 1,
                    "include_hex_offset": 1,
                    "include_memory_addresses": 1,
                    "is_hex": 1,
                    "is_hex_dump": 1,
                    "output_hex": 1,
                    "print_address": 13,
                    "print_hex": 1,
                    "should_print_hex": 1,
                    "show_address": 3,
                    "show_hex_address": 1
                },
                "pcVar2": {
                    "file_info_ptr": 1
                },
                "pcVar3": {
                    "current_time": 3,
                    "formatted_time": 3,
                    "time_data": 2,
                    "time_str": 5,
                    "time_string": 14,
                    "timestamp": 3
                },
                "ppcVar2": {
                    "arg2": 1,
                    "file_data_ptr": 1,
                    "file_details": 1,
                    "file_header": 1,
                    "file_info": 1,
                    "file_info_ptr": 6,
                    "file_ptr": 6,
                    "file_strings": 1,
                    "func_array": 1,
                    "func_ptr": 3,
                    "function_pointer": 3,
                    "info_ptr": 1,
                    "metadata_ptr": 1,
                    "optional_file_details": 1,
                    "optional_file_info": 1
                },
                "sprintf": {
                    "formatted_output": 1
                },
                "uStack_88": {
                    "file_inode": 1,
                    "file_links": 1,
                    "file_size": 13,
                    "file_size3": 1,
                    "inode_number": 5,
                    "last_modified_time": 1,
                    "link_count": 1,
                    "param_z": 1,
                    "size": 2,
                    "third_argument": 1,
                    "timestamp": 3
                },
                "uStack_98": {
                    "device": 1,
                    "device_number": 2,
                    "file_gid": 1,
                    "file_group": 1,
                    "file_group_id": 1,
                    "file_size": 1,
                    "file_size2": 1,
                    "file_size_low": 3,
                    "gid": 1,
                    "group_id": 5,
                    "hi_bits2": 1,
                    "minor": 1,
                    "minor_device": 1,
                    "minor_device_id": 1,
                    "minor_device_number": 2,
                    "param_y": 1,
                    "second_argument": 1,
                    "size": 1,
                    "time_stamp2": 1,
                    "u_stack98": 1,
                    "user": 2
                },
                "uStack_9c": {
                    "file_owner": 1,
                    "file_owner_id": 1,
                    "file_size1": 1,
                    "file_size_high": 3,
                    "file_uid": 1,
                    "first_argument": 1,
                    "hi_bits1": 1,
                    "inode": 1,
                    "inode_number": 2,
                    "link_count": 1,
                    "links": 1,
                    "major": 1,
                    "major_device": 1,
                    "major_device_id": 1,
                    "major_device_number": 2,
                    "nlink": 1,
                    "num_links": 1,
                    "param_x": 1,
                    "time_stamp1": 1,
                    "u_stack9c": 1,
                    "uid": 1,
                    "user_id": 5
                },
                "uStack_a0": {
                    "address_permissions": 1,
                    "file_attributes": 1,
                    "file_mode": 9,
                    "file_number": 1,
                    "file_permissions": 5,
                    "file_size": 9,
                    "file_type": 1,
                    "permission_bits": 1,
                    "permissions": 2
                },
                "uStack_e9": {
                    "undefined": 1,
                    "unspecified": 1
                },
                "uStack_f3": {
                    "file_indicator": 1,
                    "file_mode": 1,
                    "file_perm": 1,
                    "file_permission": 6,
                    "file_permission_code": 1,
                    "file_permissions": 1,
                    "file_type": 9,
                    "file_type_char": 2,
                    "file_type_char1": 1,
                    "file_type_symbol": 1,
                    "permission_code": 1,
                    "permission_symbol": 1,
                    "permissions": 1
                },
                "uVar4": {
                    "file_mode": 2,
                    "file_perm": 3,
                    "file_permissions": 7,
                    "file_type": 17,
                    "permission": 1
                }
            },
            "called": [
                "FUN_00102d8c",
                "sprintf",
                "ctime"
            ],
            "calling": [
                "FUN_00103ddc",
                "FUN_00107890"
            ],
            "code": "\nvoid format_and_print_file_info_001079c0(FILE *file,char **file_info,char print_time,char print_address)\n\n{\n  int result;\n  char **file_ptr;\n  char *time_string;\n  uint file_type;\n  time_t current_time;\n  undefined file_type;\n  char owner_read;\n  char owner_write;\n  char is_sticky;\n  char group_read;\n  char group_write;\n  char group_execute;\n  char other_read;\n  char other_write;\n  char other_execute;\n  undefined undefined;\n  char formatted_time [48];\n  undefined buffer [24];\n  uint file_mode;\n  uint user_id;\n  uint group_id;\n  undefined8 file_size;\n  time_t current_time;\n  \n  if (print_time != '\\0') {\n    file_ptr = (char **)file_info[0x1d];\n    if ((char **)file_info[0x1d] == (char **)0x0) {\n      file_ptr = file_info;\n    }\n    result = (**(code **)(file_ptr[1] + 0x1e8))(file_info,buffer);\n    if (result == 0) {\n      current_time = current_time;\n      time_string = ctime(&current_time);\n      if (time_string == (char *)0x0) {\n        time_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(formatted_time,time_string);\n      }\n      else {\n        sprintf(formatted_time,\"%.12s %.4s\",time_string + 4);\n      }\n      file_type = file_mode & 0xf000;\n      if (file_type == 0x4000) {\n        file_type = 100;\n      }\n      else if (file_type == 0xa000) {\n        file_type = 0x6c;\n      }\n      else if (file_type == 0x6000) {\n        file_type = 0x62;\n      }\n      else if (file_type == 0x2000) {\n        file_type = 99;\n      }\n      else if (file_type == 0xc000) {\n        file_type = 0x73;\n      }\n      else {\n        file_type = 0x70;\n        if (file_type != 0x1000) {\n          file_type = 0x2d;\n        }\n      }\n      owner_read = (-((file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n      owner_write = (-((file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n      is_sticky = (-((file_mode & 0x40) == 0) & 0xb5U) + 0x78;\n      group_read = (-((file_mode & 0x20) == 0) & 0xbbU) + 0x72;\n      group_write = (-((file_mode & 0x10) == 0) & 0xb6U) + 0x77;\n      group_execute = (-((file_mode & 8) == 0) & 0xb5U) + 0x78;\n      other_read = (-((file_mode & 4) == 0) & 0xbbU) + 0x72;\n      other_write = (-((file_mode & 2) == 0) & 0xb6U) + 0x77;\n      other_execute = (-((file_mode & 1) == 0) & 0xb5U) + 0x78;\n      if ((file_mode & 0x800) != 0) {\n        if (is_sticky == 'x') {\n          is_sticky = 's';\n        }\n        else {\n          is_sticky = 'S';\n        }\n      }\n      if ((file_mode & 0x400) != 0) {\n        if (group_execute == 'x') {\n          group_execute = 's';\n        }\n        else {\n          group_execute = 'S';\n        }\n      }\n      if ((file_mode & 0x200) != 0) {\n        if (other_execute == 'x') {\n          other_execute = 't';\n        }\n        else {\n          other_execute = 'T';\n        }\n      }\n      undefined = 0;\n      fprintf(file,\"%s %ld/%ld %6lu %s \",&owner_read,(ulong)user_id,(ulong)group_id,file_size,\n              formatted_time,(ulong)file_mode);\n    }\n  }\n  fputs(*file_info,file);\n  if (print_address != '\\0') {\n    if ((*(byte_value *)((long)file_info + 0x49) & 0x10) == 0) {\n      if (file_info[0xb] != (char *)0x0) {\n        fprintf(file,\" 0x%lx\");\n      }\n    }\n    else if (file_info[0xc] != (char *)0x0) {\n      fprintf(file,\" 0x%lx\");\n    }\n  }\n  fputc(10,file);\n  return;\n}\n\n",
            "current_name": "format_and_print_file_info_001079c0",
            "entrypoint": "0x001079c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001079c0": "format_and_print_file_info_001079c0",
                "byte": "byte_value",
                "cStack_ea": "other_execute",
                "cStack_eb": "other_write",
                "cStack_ec": "other_read",
                "cStack_ed": "group_execute",
                "cStack_ee": "group_write",
                "cStack_ef": "group_read",
                "cStack_f0": "is_sticky",
                "cStack_f1": "owner_write",
                "cStack_f2": "owner_read",
                "ctime": "get_current_time",
                "fprintf": "print_formatted",
                "fputc": "write_char_to_output",
                "fputs": "write_string_to_output",
                "iVar1": "result",
                "local_100": "current_time",
                "local_60": "current_time",
                "local_b8": "buffer",
                "local_e8": "formatted_time",
                "param_1": "file",
                "param_2": "file_info",
                "param_3": "print_time",
                "param_4": "print_address",
                "pcVar2": "file_info_ptr",
                "pcVar3": "time_string",
                "ppcVar2": "file_ptr",
                "sprintf": "formatted_output",
                "uStack_88": "file_size",
                "uStack_98": "group_id",
                "uStack_9c": "user_id",
                "uStack_a0": "file_mode",
                "uStack_e9": "undefined",
                "uStack_f3": "file_type",
                "uVar4": "file_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c10": {
            "additional_data": {
                "FUN_00107c10": {
                    "execute_and_exit": 3,
                    "execute_cleanup_and_exit": 1,
                    "execute_exit_function": 1,
                    "exit_program": 2,
                    "exit_with_error": 7,
                    "initialize_and_exit": 2,
                    "initialize_program": 2,
                    "main_function": 1,
                    "perform_cleanup": 1,
                    "perform_cleanup_and_exit": 3,
                    "perform_critical_action": 1,
                    "perform_exit": 3,
                    "perform_exit_procedure": 1,
                    "program_exit": 1,
                    "terminate_program": 2
                },
                "FUN_00107c20": {
                    "call_exit": 1,
                    "call_exit_function": 1,
                    "clean_up_resources": 1,
                    "cleanup": 1,
                    "cleanup_and_exit": 2,
                    "execute_cleanup": 1,
                    "execute_exit": 3,
                    "execute_function": 1,
                    "execute_with_param": 1,
                    "execute_with_parameter": 1,
                    "exit_program": 1,
                    "handle_error": 1,
                    "invoke_exit": 1,
                    "log_error_message": 1,
                    "log_exit_error": 1,
                    "perform_action": 2,
                    "perform_cleanup": 6,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "perform_partial_cleanup": 1,
                    "sub_function": 1,
                    "terminate_program": 1
                },
                "param_1": {
                    "action_param": 2,
                    "cleanup_argument": 1,
                    "cleanup_param": 1,
                    "cleanup_parameter": 3,
                    "error_code": 3,
                    "exit_code": 1,
                    "exit_parameter": 1,
                    "exit_status_code": 1,
                    "input": 1,
                    "param": 2,
                    "parameter": 1,
                    "resource_id": 1
                },
                "xexit": {
                    "exit": 2,
                    "exit_function": 1,
                    "exit_program": 4,
                    "perform_exit": 1
                }
            },
            "called": [
                "xexit",
                "FUN_00107c20"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_001058b0",
                "FUN_00102d2f"
            ],
            "code": "\nvoid execute_cleanup_and_exit_00107c10(void)\n\n{\n  FUN_00107c20();\n                    \n  xexit(1);\n}\n\n",
            "current_name": "execute_cleanup_and_exit_00107c10",
            "entrypoint": "0x00107c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c10": "execute_cleanup_and_exit_00107c10",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c20": {
            "additional_data": {
                "BFD_ERRMSG_CONSTANT": {
                    "error_message": 1
                },
                "BFD_GET_ERROR_CONSTANT": {
                    "no_error": 1
                },
                "DAT_0010d660": {
                    "program_name": 2
                },
                "DCGETTEXT_CONSTANT": {
                    "unknown_cause": 1
                },
                "FUN_00102f96": {
                    "flush_standard_output": 1
                },
                "FUN_00107c20": {
                    "print_bfd_error_message": 1,
                    "print_error": 7,
                    "print_error_message": 23
                },
                "_stderr": {
                    "standard_error": 3,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 3,
                    "stdout": 1
                },
                "bfd_errmsg": {
                    "get_bfd_error_message": 4
                },
                "bfd_get_error": {
                    "get_bfd_error": 3,
                    "get_bfd_error_code": 1
                },
                "dcgettext": {
                    "get_localized_message": 3
                },
                "fflush": {
                    "flush_standard_output": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_to_standard_error": 1
                },
                "iVar1": {
                    "error": 12,
                    "error_code": 11,
                    "error_status": 6,
                    "error_type": 1
                },
                "in_R10": {
                    "additional_info": 1,
                    "additional_message": 1,
                    "extra_arg": 1,
                    "extra_parameter": 1,
                    "unknown": 3,
                    "unknown_argument": 1,
                    "unknown_cause": 2,
                    "unknown_variable": 1,
                    "unspecified_variable": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "unused_variable": 3
                },
                "param_1": {
                    "error": 1,
                    "error_code": 3,
                    "error_description": 2,
                    "error_file_name": 1,
                    "error_message": 11,
                    "error_msg": 1,
                    "error_string": 1,
                    "error_type": 7,
                    "file_error_code": 1,
                    "file_name": 2,
                    "message": 1
                },
                "uVar2": {
                    "error_description": 1,
                    "error_message": 20,
                    "error_message_text": 4,
                    "error_message_translated": 1,
                    "error_msg": 2,
                    "error_str": 1,
                    "error_string": 2
                }
            },
            "called": [
                "bfd_get_error",
                "bfd_errmsg",
                "FUN_00102f96"
            ],
            "calling": [
                "FUN_00107c10",
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00107c20(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 unknown;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_message != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_0010d660,error_message,error_message,unknown);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_0010d660,error_message,unknown);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00107c20",
            "entrypoint": "0x00107c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c20": "print_bfd_error_message_00107c20",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bfd_errmsg": "get_bfd_error_message",
                "bfd_get_error": "get_bfd_error",
                "dcgettext": "get_localized_message",
                "fflush": "flush_standard_output",
                "fprintf": "print_to_standard_error",
                "iVar1": "error",
                "in_R10": "unknown",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c80": {
            "additional_data": {
                "FUN_00107c80": {
                    "set_file_modification_time": 3,
                    "set_file_modified_time": 3,
                    "set_file_time": 18,
                    "set_file_times": 2,
                    "set_file_timestamp": 3,
                    "set_file_timestamps": 1,
                    "set_time_of_file": 1
                },
                "iVar1": {
                    "result": 25,
                    "result_code": 2,
                    "return_value": 1,
                    "status": 1
                },
                "local_28": {
                    "access_time": 1,
                    "backup_access_time": 1,
                    "creation_time_sec": 1,
                    "file_access_time": 1,
                    "modification_time": 1,
                    "modification_time_spec": 1,
                    "stack_var4": 1,
                    "timespec_buffer_5": 1,
                    "utimensat_arg1": 1
                },
                "local_38": {
                    "access_time": 9,
                    "access_time_lo": 1,
                    "access_time_spec": 1,
                    "atime": 1,
                    "creation_time": 1,
                    "file_time": 1,
                    "modification_time": 2,
                    "modification_time_sec": 1,
                    "time_spec1": 3,
                    "timespec_buf": 1,
                    "timespec_buffer_1": 1,
                    "utime_buffer": 1
                },
                "param_1": {
                    "file_path": 30,
                    "filename": 1
                },
                "param_2": {
                    "file_data": 3,
                    "file_info": 21,
                    "file_info_address": 1,
                    "file_info_ptr": 4,
                    "info_ptr": 1,
                    "struct_address": 1
                },
                "pcVar3": {
                    "err_msg": 1,
                    "err_string": 2,
                    "error_message": 8,
                    "error_msg": 5,
                    "error_str": 3,
                    "error_string": 10
                },
                "piVar2": {
                    "err_code_ptr": 1,
                    "err_num": 1,
                    "errno_location": 7,
                    "errno_ptr": 10,
                    "error_code": 2,
                    "error_num": 2,
                    "error_num_ptr": 1,
                    "error_number_ptr": 1,
                    "error_ptr": 4
                },
                "uStack_1c": {
                    "backup_creation_time": 1,
                    "file_status_time": 1,
                    "timespec_buffer_8": 1,
                    "utimensat_arg4": 1
                },
                "uStack_20": {
                    "backup_change_time": 1,
                    "file_modification_time": 1,
                    "timespec_buffer_7": 1,
                    "utimensat_arg3": 1
                },
                "uStack_24": {
                    "backup_modification_time": 1,
                    "file_change_time": 1,
                    "timespec_buffer_6": 1,
                    "utimensat_arg2": 1
                },
                "uStack_2c": {
                    "backup_time": 2,
                    "btime": 1,
                    "create_time": 1,
                    "creation_time": 4,
                    "metadata_time": 1,
                    "modification_time_nsec": 1,
                    "modify_time_hi": 1,
                    "stack_var3": 1,
                    "temp3": 1,
                    "time_spec4": 3,
                    "timespec_buffer_4": 1,
                    "unspecified": 1,
                    "unused": 2
                },
                "uStack_30": {
                    "change_time": 5,
                    "ctime": 1,
                    "file_modification_time1": 1,
                    "modification_time": 2,
                    "modify_time_lo": 1,
                    "stack_var2": 1,
                    "status_change_time": 1,
                    "temp2": 1,
                    "time_spec3": 3,
                    "timespec_buffer_3": 1,
                    "unspecified": 1,
                    "unused": 1
                },
                "uStack_34": {
                    "access_time": 1,
                    "access_time_hi": 1,
                    "access_time_nsec": 1,
                    "file_modification_time2": 1,
                    "modification_time": 5,
                    "modified_time": 1,
                    "modify_time": 1,
                    "mtime": 1,
                    "stack_var1": 1,
                    "temp1": 1,
                    "time_spec2": 3,
                    "timespec_buffer_2": 1,
                    "unspecified": 1,
                    "unused": 1
                },
                "uVar4": {
                    "error_format": 1,
                    "error_format_string": 1,
                    "error_message": 5,
                    "error_msg": 3,
                    "error_str": 1,
                    "error_string": 1,
                    "localized_error": 1,
                    "localized_error_message": 2,
                    "translated_error_message": 3,
                    "translated_error_msg": 1,
                    "translated_message": 5,
                    "translated_msg": 1,
                    "translated_str": 1,
                    "translated_string": 3
                }
            },
            "called": [
                "utimensat",
                "FUN_00102fd7"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid set_file_modified_time_00107c80(char *file_path,long file_info)\n\n{\n  int result;\n  int *errno_ptr;\n  char *error_string;\n  undefined8 translated_message;\n  undefined4 access_time;\n  undefined4 modification_time;\n  undefined4 change_time;\n  undefined4 creation_time;\n  undefined4 timespec_buffer_5;\n  undefined4 utimensat_arg2;\n  undefined4 backup_change_time;\n  undefined4 utimensat_arg4;\n  \n  timespec_buffer_5 = *(undefined4 *)(file_info + 0x58);\n  utimensat_arg2 = *(undefined4 *)(file_info + 0x5c);\n  backup_change_time = *(undefined4 *)(file_info + 0x60);\n  utimensat_arg4 = *(undefined4 *)(file_info + 100);\n  access_time = *(undefined4 *)(file_info + 0x48);\n  modification_time = *(undefined4 *)(file_info + 0x4c);\n  change_time = *(undefined4 *)(file_info + 0x50);\n  creation_time = *(undefined4 *)(file_info + 0x54);\n  result = utimensat(-100,file_path,(timespec *)&access_time,0);\n  if (result != 0) {\n    errno_ptr = __errno_location();\n    error_string = strerror(*errno_ptr);\n    translated_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n    FUN_00107920(translated_message,file_path,error_string);\n  }\n  return;\n}\n\n",
            "current_name": "set_file_modified_time_00107c80",
            "entrypoint": "0x00107c80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c80": "set_file_modified_time_00107c80",
                "iVar1": "result",
                "local_28": "timespec_buffer_5",
                "local_38": "access_time",
                "param_1": "file_path",
                "param_2": "file_info",
                "pcVar3": "error_string",
                "piVar2": "errno_ptr",
                "uStack_1c": "utimensat_arg4",
                "uStack_20": "backup_change_time",
                "uStack_24": "utimensat_arg2",
                "uStack_2c": "creation_time",
                "uStack_30": "change_time",
                "uStack_34": "modification_time",
                "uVar4": "translated_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107cc0": {
            "additional_data": {
                "FUN_00107cc0": {
                    "execute_function_and_children": 1,
                    "execute_function_chain": 2,
                    "execute_functions": 8,
                    "execute_reverse": 1,
                    "process_binary_function": 1,
                    "reverse_code": 1
                },
                "PTR_DAT_0010d2e0": {
                    "function_list": 2
                },
                "lVar1": {
                    "count": 1,
                    "counter": 1,
                    "current_index": 6,
                    "idx1": 1,
                    "index": 13,
                    "index1": 5,
                    "last_index": 2,
                    "temp1": 1,
                    "temp_var1": 1
                },
                "lVar2": {
                    "current_index": 1,
                    "current_last_index": 1,
                    "i": 1,
                    "idx2": 1,
                    "index2": 5,
                    "inner_index": 1,
                    "prev_index": 9,
                    "previous_index": 6,
                    "second_last_index": 1,
                    "secondary_index": 1,
                    "temp2": 1,
                    "temp_counter": 1,
                    "temp_index": 1,
                    "temp_var2": 1
                },
                "lVar3": {
                    "current_index": 2,
                    "idx3": 1,
                    "index3": 5,
                    "inner_index2": 1,
                    "inner_temp_counter": 1,
                    "j": 1,
                    "loop_index": 1,
                    "nested_index": 1,
                    "prev_index2": 1,
                    "temp3": 1,
                    "temp_index": 13,
                    "temp_var3": 1,
                    "tertiary_index": 1,
                    "third_last_index": 1
                },
                "plVar4": {
                    "code_pointer_list": 1,
                    "data_ptr": 1,
                    "function_array": 1,
                    "function_chain": 1,
                    "function_list": 9,
                    "function_pointer": 7,
                    "function_pointer_array": 1,
                    "function_pointer_list": 2,
                    "function_pointers": 3,
                    "function_ptr": 2,
                    "pointer_list": 1
                },
                "uVar5": {
                    "count": 5,
                    "counter": 9,
                    "function_count": 1,
                    "function_index": 1,
                    "index": 5,
                    "loop_count": 1,
                    "loop_counter": 5,
                    "num_function_calls": 1,
                    "num_functions": 1,
                    "num_iterations": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid execute_functions_00107cc0(void)\n\n{\n  long index;\n  long prev_index;\n  long temp_index;\n  long *function_list;\n  uint counter;\n  \n  function_list = (long *)PTR_DAT_0010d2e0;\n  if (PTR_DAT_0010d2e0 != (undefined *)0x0) {\n    do {\n      counter = *(int *)(function_list + 1) - 1;\n      if (-1 < (int)counter) {\n        index = (long)(int)counter;\n        counter = counter & 7;\n        (*(code *)function_list[index + 2])();\n        prev_index = index + -1;\n        if (-1 < (int)prev_index) {\n          temp_index = prev_index;\n          if (counter != 0) {\n            if (counter != 1) {\n              if (counter != 2) {\n                if (counter != 3) {\n                  if (counter != 4) {\n                    if (counter != 5) {\n                      if (counter != 6) {\n                        (*(code *)function_list[index + 1])();\n                        prev_index = index + -2;\n                      }\n                      (*(code *)function_list[prev_index + 2])();\n                      prev_index = prev_index + -1;\n                    }\n                    (*(code *)function_list[prev_index + 2])();\n                    prev_index = prev_index + -1;\n                  }\n                  (*(code *)function_list[prev_index + 2])();\n                  prev_index = prev_index + -1;\n                }\n                (*(code *)function_list[prev_index + 2])();\n                prev_index = prev_index + -1;\n              }\n              (*(code *)function_list[prev_index + 2])();\n              prev_index = prev_index + -1;\n            }\n            (*(code *)function_list[prev_index + 2])();\n            temp_index = prev_index + -1;\n            if ((int)(prev_index + -1) < 0) goto LAB_00107d96;\n          }\n          do {\n            (*(code *)function_list[temp_index + 2])();\n            index = temp_index + -1;\n            (*(code *)function_list[temp_index + 1])();\n            (*(code *)function_list[temp_index])();\n            (*(code *)function_list[index])();\n            (*(code *)function_list[temp_index + -2])();\n            (*(code *)function_list[temp_index + -3])();\n            (*(code *)function_list[temp_index + -4])();\n            (*(code *)function_list[temp_index + -5])();\n            temp_index = temp_index + -8;\n          } while (-1 < (int)index + -7);\n        }\n      }\nLAB_00107d96:\n      function_list = (long *)*function_list;\n    } while (function_list != (long *)0x0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_functions_00107cc0",
            "entrypoint": "0x00107cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107cc0": "execute_functions_00107cc0",
                "lVar1": "index",
                "lVar2": "prev_index",
                "lVar3": "temp_index",
                "plVar4": "function_list",
                "uVar5": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x00107da8",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "__cxa_finalize",
                "FUN_00105cf0"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_0010d400 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010d2c8);\n  FUNC_00105cf0();\n  DAT_0010d400 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x00105d60",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00105d20"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00105d20();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x00105da0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102590",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_001031cf",
                "FUN_00105c00",
                "FUN_00103e95",
                "FUN_00102f55",
                "FUN_00103c60",
                "FUN_00102fd7",
                "FUN_00105300",
                "FUN_001025a0",
                "FUN_00102f1e",
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_bread": {
            "called": [
                "bfd_bread"
            ],
            "calling": [
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\nvoid bfd_bread(void)\n\n{\n  bfd_bread();\n  return;\n}\n\n",
            "current_name": "bfd_bread",
            "entrypoint": "0x00102540",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_bwrite": {
            "called": [
                "bfd_bwrite"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_bwrite(void)\n\n{\n  bfd_bwrite();\n  return;\n}\n\n",
            "current_name": "bfd_bwrite",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_cache_close": {
            "called": [
                "bfd_cache_close"
            ],
            "calling": [
                "FUN_00102bf5",
                "FUN_00103e95"
            ],
            "code": "\nvoid bfd_cache_close(void)\n\n{\n  bfd_cache_close();\n  return;\n}\n\n",
            "current_name": "bfd_cache_close",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00102710",
                "FUN_00105af0",
                "FUN_00103c60"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00102520",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x001024c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_00102710",
                "FUN_00103e95",
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00102d2f"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x00102490",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_create": {
            "called": [
                "bfd_create"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_create(void)\n\n{\n  bfd_create();\n  return;\n}\n\n",
            "current_name": "bfd_create",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c20"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x001024d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fdopenr": {
            "called": [
                "bfd_fdopenr"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_fdopenr(void)\n\n{\n  bfd_fdopenr();\n  return;\n}\n\n",
            "current_name": "bfd_fdopenr",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fdopenw": {
            "called": [
                "bfd_fdopenw"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nvoid bfd_fdopenw(void)\n\n{\n  bfd_fdopenw();\n  return;\n}\n\n",
            "current_name": "bfd_fdopenw",
            "entrypoint": "0x00102570",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_find_target": {
            "called": [
                "bfd_find_target"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_find_target(void)\n\n{\n  bfd_find_target();\n  return;\n}\n\n",
            "current_name": "bfd_find_target",
            "entrypoint": "0x001024e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00107c20"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_make_readable": {
            "called": [
                "bfd_make_readable"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_readable(void)\n\n{\n  bfd_make_readable();\n  return;\n}\n\n",
            "current_name": "bfd_make_readable",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_make_writable": {
            "called": [
                "bfd_make_writable"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_writable(void)\n\n{\n  bfd_make_writable();\n  return;\n}\n\n",
            "current_name": "bfd_make_writable",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00102710",
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_00105af0",
                "FUN_00103c60",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x00102530",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openw": {
            "called": [
                "bfd_openw"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openw(void)\n\n{\n  bfd_openw();\n  return;\n}\n\n",
            "current_name": "bfd_openw",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_plugin": {
            "called": [
                "bfd_plugin_set_plugin"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_plugin",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_program_name": {
            "called": [
                "bfd_plugin_set_program_name"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_program_name",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_seek": {
            "called": [
                "bfd_seek"
            ],
            "calling": [
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\nvoid bfd_seek(void)\n\n{\n  bfd_seek();\n  return;\n}\n\n",
            "current_name": "bfd_seek",
            "entrypoint": "0x00102580",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_archive_head": {
            "called": [
                "bfd_set_archive_head"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid bfd_set_archive_head(void)\n\n{\n  bfd_set_archive_head();\n  return;\n}\n\n",
            "current_name": "bfd_set_archive_head",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error": {
            "called": [
                "bfd_set_error"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "bfd_set_error",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_format": {
            "called": [
                "bfd_set_format"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_001058b0"
            ],
            "code": "\nvoid bfd_set_format(void)\n\n{\n  bfd_set_format();\n  return;\n}\n\n",
            "current_name": "bfd_set_format",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_0010266f"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "calloc": {
            "called": [
                "calloc"
            ],
            "calling": [
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = calloc(__nmemb,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "calloc",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "chmod": {
            "called": [
                "chmod"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\n\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = chmod(__file,__mode);\n  return iVar1;\n}\n\n",
            "current_name": "chmod",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "clearerr": {
            "called": [
                "clearerr"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid clearerr(FILE *__stream)\n\n{\n  clearerr(__stream);\n  return;\n}\n\n",
            "current_name": "clearerr",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "close": {
            "called": [
                "close"
            ],
            "calling": [
                "FUN_00105c00",
                "FUN_00102f55",
                "FUN_001058b0"
            ],
            "code": "\n\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = close(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "close",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "concat": {
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00102e57",
                "FUN_00105a68"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "concat",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ctime": {
            "called": [
                "ctime"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\n\n\nchar * ctime(time_t *__timer)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = ctime(__timer);\n  return pcVar1;\n}\n\n",
            "current_name": "ctime",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_0010342d",
                "FUN_001031a5",
                "FUN_00103c60",
                "FUN_0010266f",
                "FUN_00102d8c",
                "FUN_001052a0",
                "FUN_00102fd7",
                "FUN_0010394a",
                "FUN_00105db0",
                "FUN_001025a0",
                "FUN_00102f96",
                "FUN_001058b0",
                "FUN_00102c25",
                "FUN_00103bd1",
                "FUN_0010285f",
                "FUN_001028ed",
                "FUN_001032a8",
                "FUN_00102e6f",
                "FUN_0010336b",
                "FUN_00103e95",
                "FUN_001075e0",
                "FUN_00105300",
                "FUN_00102f1e",
                "FUN_00103a78"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dup": {
            "called": [
                "dup"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102d2f"
            ],
            "code": "\n\n\nint dup(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = dup(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "dup",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "__libc_start_main",
                "FUN_00105db0"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_00105db0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00105cc0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_001075e0",
                "FUN_001033b0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x00102500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_00102bf5",
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00102c25"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_00103bd1",
                "FUN_001078c0",
                "FUN_00102f96",
                "FUN_00103ba8"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "filename_cmp": {
            "called": [
                "filename_cmp"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_001032a8",
                "FUN_00102cd9",
                "FUN_00103e95",
                "FUN_00105480",
                "FUN_00105db0"
            ],
            "code": "\nvoid filename_cmp(void)\n\n{\n  filename_cmp();\n  return;\n}\n\n",
            "current_name": "filename_cmp",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fileno": {
            "called": [
                "fileno"
            ],
            "calling": [
                "FUN_001031cf",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fileno(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fileno",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105a68",
                "FUN_00105db0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102470",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_001078c0",
                "FUN_0010342d",
                "FUN_00103c60",
                "FUN_0010266f",
                "FUN_00102d8c",
                "FUN_0010394a",
                "FUN_00105db0",
                "FUN_00102f96",
                "FUN_00103bd1",
                "FUN_0010285f",
                "FUN_001032a8",
                "FUN_0010336b",
                "FUN_00103e95",
                "FUN_00105300",
                "FUN_001033b0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_00103bd1",
                "FUN_0010266f",
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputs": {
            "called": [
                "fputs"
            ],
            "calling": [
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputs",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_00103bd1",
                "FUN_00102ba1",
                "FUN_00103e95",
                "FUN_0010266f",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fwrite": {
            "called": [
                "fwrite"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "fwrite",
            "entrypoint": "0x00102510",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getc": {
            "called": [
                "getc"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "getc",
            "entrypoint": "0x00102560",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "isatty": {
            "called": [
                "isatty"
            ],
            "calling": [
                "FUN_001031cf",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "isatty",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "lbasename": {
            "called": [
                "lbasename"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00102e6f",
                "FUN_00105830",
                "FUN_00105db0"
            ],
            "code": "\nvoid lbasename(void)\n\n{\n  lbasename();\n  return;\n}\n\n",
            "current_name": "lbasename",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "lseek": {
            "called": [
                "lseek"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = lseek(__fd,__offset,__whence);\n  return _Var1;\n}\n\n",
            "current_name": "lseek",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "malloc": {
            "called": [
                "malloc"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001033d6",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(__size);\n  return pvVar1;\n}\n\n",
            "current_name": "malloc",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "mkstemp": {
            "called": [
                "mkstemp"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(__template);\n  return iVar1;\n}\n\n",
            "current_name": "mkstemp",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "open": {
            "called": [
                "open"
            ],
            "calling": [
                "FUN_00105c00",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = open(__file,__oflag);\n  return iVar1;\n}\n\n",
            "current_name": "open",
            "entrypoint": "0x00102460",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "perror": {
            "called": [
                "perror"
            ],
            "calling": [
                "FUN_00105a68",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n",
            "current_name": "perror",
            "entrypoint": "0x001024a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001075e0",
                "FUN_001031a5",
                "FUN_00102f08",
                "FUN_00105a68",
                "FUN_00105db0",
                "FUN_00103172",
                "FUN_00103a78",
                "FUN_00103ba8"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "read": {
            "called": [
                "read"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = read(__fd,__buf,__nbytes);\n  return sVar1;\n}\n\n",
            "current_name": "read",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "realloc": {
            "called": [
                "realloc"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = realloc(__ptr,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "realloc",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_001079c0",
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001024f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00103e95",
                "FUN_001052a0",
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_00102fd7",
                "FUN_001025a0",
                "FUN_00102f1e",
                "FUN_00103a78",
                "FUN_00102c25"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102550",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105a68",
                "FUN_00105db0",
                "FUN_00102bb0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strrchr": {
            "called": [
                "strrchr"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strrchr",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtol": {
            "called": [
                "strtol"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "strtol",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "unlink": {
            "called": [
                "unlink"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102f1e"
            ],
            "code": "\n\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = unlink(__name);\n  return iVar1;\n}\n\n",
            "current_name": "unlink",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "unlink_if_ordinary": {
            "called": [
                "unlink_if_ordinary"
            ],
            "calling": [
                "FUN_00102bf5"
            ],
            "code": "\nvoid unlink_if_ordinary(void)\n\n{\n  unlink_if_ordinary();\n  return;\n}\n\n",
            "current_name": "unlink_if_ordinary",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "utimensat": {
            "called": [
                "utimensat"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\n\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = utimensat(__fd,__path,__times,__flags);\n  return iVar1;\n}\n\n",
            "current_name": "utimensat",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x001024b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "write": {
            "called": [
                "write"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = write(__fd,__buf,__n);\n  return sVar1;\n}\n\n",
            "current_name": "write",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00107690",
                "FUN_0010342d",
                "FUN_00107650",
                "FUN_00107c10",
                "FUN_00105a68",
                "FUN_00105300",
                "FUN_0010394a",
                "FUN_00105db0",
                "FUN_0010315d",
                "FUN_00102d2f"
            ],
            "code": "\nvoid xexit(void)\n\n{\n                    \n  xexit();\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102480",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_001057a0",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00103a78",
                "FUN_00102bb0",
                "FUN_00102c25"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00105db0",
                "FUN_001058b0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_001025a0",
            "FUN_0010266f",
            "FUN_00102710",
            "FUN_0010284b",
            "FUN_0010285f",
            "FUN_001028ed",
            "FUN_00102943",
            "FUN_00102ba1",
            "FUN_00102bb0",
            "FUN_00102bf5",
            "FUN_00102c25",
            "FUN_00102cd9",
            "FUN_00102d2f",
            "FUN_00102d8c",
            "FUN_00102e57",
            "FUN_00102e6f",
            "FUN_00102f08",
            "FUN_00102f1e",
            "FUN_00102f55",
            "FUN_00102f96",
            "FUN_00102fd7",
            "FUN_0010300e",
            "FUN_001030ed",
            "FUN_0010312d",
            "FUN_0010315d",
            "FUN_00103172",
            "FUN_001031a5",
            "FUN_001031cf",
            "FUN_001032a8",
            "FUN_0010336b",
            "FUN_001033b0",
            "FUN_001033d6",
            "FUN_0010342d",
            "FUN_0010394a",
            "FUN_00103a78",
            "FUN_00103ba8",
            "FUN_00103bd1",
            "FUN_00103c60",
            "FUN_00103ddc",
            "FUN_00103df9",
            "FUN_00103e95",
            "FUN_001052a0",
            "FUN_00105300",
            "FUN_00105480",
            "FUN_00105570",
            "FUN_001057a0",
            "FUN_00105830",
            "FUN_00105870",
            "FUN_001058b0",
            "FUN_00105a20",
            "FUN_00105a68",
            "FUN_00105ae0",
            "FUN_00105af0",
            "FUN_00105bb0",
            "FUN_00105bc0",
            "FUN_00105c00",
            "FUN_00105db0",
            "FUN_001075e0",
            "FUN_00107640",
            "FUN_00107650",
            "FUN_00107690",
            "FUN_00107730",
            "FUN_00107740",
            "FUN_00107890",
            "FUN_001078c0",
            "FUN_00107920",
            "FUN_001079c0",
            "FUN_00107c10",
            "FUN_00107c20",
            "FUN_00107c80",
            "FUN_00107cc0"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 390515
}