{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_00102000": {
                    "initialize": 6,
                    "initialize_application": 3,
                    "initialize_gmon": 3,
                    "initialize_monitoring": 4,
                    "initialize_program": 14,
                    "start_program": 1
                },
                "__gmon_start__": {
                    "initialize_monitoring": 1,
                    "initialize_profiling": 2,
                    "monitor_start": 1,
                    "perform_global_monitoring": 1,
                    "perform_performance_analysis": 1,
                    "start_gmon": 3,
                    "start_monitoring": 8,
                    "start_performance_analysis": 1,
                    "start_performance_monitor": 1,
                    "start_performance_monitoring": 4,
                    "start_performance_profiler": 1,
                    "start_performance_profiling": 1,
                    "start_profiling": 1
                },
                "original_variable_name_1": {
                    "ptr": 1
                },
                "original_variable_name_2": {
                    "dat": 1
                },
                "original_variable_name_n": {
                    "result": 1
                },
                "return": {
                    "": 1,
                    "end_initialization": 1
                }
            },
            "called": [
                "FUN_0010c158"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00102000(void)\n\n{\n  start_monitoring();\n  return;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "FUN_00102020": {
                    "execute_code_at_address": 1,
                    "execute_function": 3,
                    "execute_indirect": 1,
                    "execute_indirect_call": 7,
                    "execute_indirect_function": 4,
                    "execute_indirect_jump": 15
                },
                "PTR_0": {
                    "target_function_pointer": 1
                },
                "code": {
                    "code_to_execute": 1,
                    "function_pointer": 1,
                    "indirect_function": 1,
                    "indirect_function_ptr": 1,
                    "indirect_jump_function": 1
                },
                "undefined": {
                    "function_address": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "target_address": 5,
                    "target_function": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(indirect_function *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "indirect_function",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_0010c000"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_0010c008"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_00105110",
                "FUN_00103ca0",
                "FUN_00104670",
                "FUN_00103b5d",
                "FUN_001047d0",
                "FUN_00104d5b",
                "FUN_00103238",
                "FUN_001055f0",
                "FUN_0010268b"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_0010c010"
            ],
            "calling": [
                "FUN_001064b0",
                "FUN_001035a2"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_0010c018"
            ],
            "calling": [
                "FUN_001047d0"
            ],
            "code": "\nvoid reconcat(void)\n\n{\n  reconcat();\n  return;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_0010c028"
            ],
            "calling": [
                "FUN_00102fd2"
            ],
            "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_0010c030"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_001043d0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_0010c048"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_0010c050"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_0010c058"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  qsort(__base,__nmemb,__size,__compar);\n  return;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_0010c060"
            ],
            "calling": [
                "FUN_0010268b"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_0010c068"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_0010c070"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_0010c078"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_001064b0",
                "FUN_001053c0"
            ],
            "code": "\nvoid bfd_is_undefined_symclass(void)\n\n{\n  bfd_is_undefined_symclass();\n  return;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_0010c080"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_0010c088"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_0010c090"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_0010c098"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_0010c0a8"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_0010c0b0"
            ],
            "calling": [
                "FUN_001048e0",
                "FUN_00103729",
                "FUN_00104370",
                "FUN_00103ca0",
                "FUN_0010249f",
                "FUN_001043d0",
                "FUN_00103a78",
                "FUN_00104d5b",
                "FUN_00102450",
                "FUN_001053c0",
                "FUN_00102f19",
                "FUN_0010370a",
                "FUN_00103b5d",
                "FUN_00103abf",
                "FUN_001055f0"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_0010c0b8"
            ],
            "calling": [
                "FUN_00103ca0",
                "FUN_00102fd2",
                "FUN_001055f0",
                "FUN_0010268b"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_0010c0c0"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_0010c0c8"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_0010c0d0"
            ],
            "calling": [
                "FUN_00103463",
                "FUN_00103729",
                "FUN_00102670",
                "FUN_001043d0",
                "FUN_001047d0",
                "FUN_001036a7",
                "FUN_0010351b",
                "FUN_001053c0",
                "FUN_001036e0",
                "FUN_00102f19",
                "FUN_00103573",
                "FUN_001064b0",
                "FUN_00105110",
                "FUN_001035a2",
                "FUN_00103b2b",
                "FUN_001054d0",
                "FUN_00103abf",
                "FUN_001055f0",
                "FUN_001062d0",
                "FUN_00102739",
                "FUN_00102f7b"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_0010c0d8"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_001055f0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_0010c0e0"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_001025f5"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_0010c0f0"
            ],
            "calling": [
                "FUN_00103ca0"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_0010c0f8"
            ],
            "calling": [
                "FUN_001048e0",
                "FUN_001043d0",
                "FUN_00106540",
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_0010c100"
            ],
            "calling": [
                "FUN_00105110",
                "FUN_00103c00",
                "FUN_00104d5b",
                "FUN_00103238",
                "FUN_001055f0",
                "FUN_0010268b"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_0010c108"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_0010c110"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_0010c118"
            ],
            "calling": [
                "FUN_00103ca0",
                "FUN_00103b5d"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_0010c120"
            ],
            "calling": [
                "FUN_00104670"
            ],
            "code": "\nvoid bfd_get_arch_size(void)\n\n{\n  bfd_get_arch_size();\n  return;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_0010c128"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_0010c130"
            ],
            "calling": [
                "FUN_00103463",
                "FUN_00104670",
                "FUN_00104d5b",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_0010c138"
            ],
            "calling": [
                "FUN_001063a0",
                "FUN_00103463"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_0010c148"
            ],
            "calling": [
                "FUN_001063a0",
                "FUN_00103ca0",
                "FUN_00103b5d",
                "FUN_001055f0",
                "FUN_00106540",
                "FUN_00102450"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_0010c150"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_0010c160"
            ],
            "calling": [
                "FUN_001043d0",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_0010c168"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_0010c170"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_0010c178"
            ],
            "calling": [
                "FUN_001063a0",
                "FUN_00103b5d",
                "FUN_00106540"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "called": [
                "FUN_0010c188"
            ],
            "calling": [
                "FUN_00104fa0"
            ],
            "code": "\n\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcoll(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022d0": {
            "called": [
                "FUN_0010c198"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022d0",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022e0": {
            "called": [
                "FUN_0010c1a0"
            ],
            "calling": [
                "FUN_00103729"
            ],
            "code": "\n\n\nint asprintf(char **__ptr,char *__fmt,...)\n\n{\n  int iVar1;\n  \n  iVar1 = asprintf(__ptr,__fmt);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022e0",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022f0": {
            "called": [
                "FUN_0010c1a8"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_001022f0",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102300": {
            "called": [
                "FUN_0010c1b0"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102300",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102310": {
            "called": [
                "FUN_0010c1b8"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102310",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102320": {
            "called": [
                "FUN_0010c1c0"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n",
            "current_name": "FUN_00102320",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "called": [
                "FUN_0010c1c8"
            ],
            "calling": [
                "FUN_00103729"
            ],
            "code": "\nvoid xstrerror(void)\n\n{\n  xstrerror();\n  return;\n}\n\n",
            "current_name": "FUN_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102340": {
            "called": [
                "FUN_0010c1d0"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_00102340",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102350": {
            "called": [
                "FUN_0010c1d8"
            ],
            "calling": [
                "FUN_00106300",
                "FUN_00106530",
                "FUN_001055f0"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "FUN_00102350",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "called": [
                "FUN_0010c1e0"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "FUN_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102370": {
            "called": [
                "FUN_0010c1e8"
            ],
            "calling": [
                "FUN_001063a0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102370",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102380": {
            "called": [
                "FUN_0010c1f0"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "FUN_00102380",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102390": {
            "called": [
                "FUN_0010c1f8"
            ],
            "calling": [
                "FUN_00106540",
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "FUN_00102390",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023a0": {
            "called": [
                "FUN_0010c200"
            ],
            "calling": [
                "FUN_00103c00"
            ],
            "code": "\nvoid bfd_canonicalize_reloc(void)\n\n{\n  bfd_canonicalize_reloc();\n  return;\n}\n\n",
            "current_name": "FUN_001023a0",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023b0": {
            "called": [
                "FUN_0010c208"
            ],
            "calling": [
                "FUN_0010268b"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023b0",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023c0": {
            "called": [
                "FUN_0010c210"
            ],
            "calling": [
                "FUN_00103ca0",
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_001023c0",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023d0": {
            "called": [
                "FUN_0010c218"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "FUN_001023d0",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023e0": {
            "called": [
                "FUN_0010c220"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "FUN_001023e0",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023f0": {
            "called": [
                "FUN_0010c230"
            ],
            "calling": [
                "FUN_00103c00"
            ],
            "code": "\nvoid bfd_get_reloc_upper_bound(void)\n\n{\n  bfd_get_reloc_upper_bound();\n  return;\n}\n\n",
            "current_name": "FUN_001023f0",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102400": {
            "called": [
                "FUN_0010c238"
            ],
            "calling": [
                "FUN_00103238"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "FUN_00102400",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102410": {
            "called": [
                "FUN_0010c240"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102410",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102420": {
            "called": [
                "FUN_0010c248"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_00102fd2"
            ],
            "code": "\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strstr(__haystack,__needle);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102420",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102430": {
            "called": [
                "FUN_0010c250"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_get_next_mapent(void)\n\n{\n  bfd_get_next_mapent();\n  return;\n}\n\n",
            "current_name": "FUN_00102430",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102440": {
            "called": [
                "FUN_0010c260"
            ],
            "calling": [
                "FUN_001055a0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102440",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102450": {
            "additional_data": {
                "FUN_00102450": {
                    "display_supported_targets": 1,
                    "print_supported_targets": 29,
                    "print_target_list": 1
                },
                "__ptr": {
                    "target_list": 31
                },
                "bfd_target_list": {
                    "get_target_list": 1
                },
                "dcgettext": {
                    "get_message": 2,
                    "get_translated_message": 1
                },
                "exit": {
                    "exit_program": 2
                },
                "fprintf": {
                    "write_to_output": 1,
                    "write_to_output_file": 1
                },
                "fputc": {
                    "write_new_line": 1,
                    "write_newline_to_output_file": 1
                },
                "free": {
                    "free_memory": 2
                },
                "in_stack_00000008": {
                    "bug_report_flag": 1,
                    "error_code": 2,
                    "error_flag": 1,
                    "error_status": 1,
                    "exit_code": 22,
                    "exit_status": 2,
                    "report_bugs_flag": 1
                },
                "lVar1": {
                    "current_element": 1,
                    "current_target": 3,
                    "current_target_value": 6,
                    "target": 10,
                    "target_value": 1
                },
                "pcVar2": {
                    "header_text": 1,
                    "message": 11,
                    "msg_ptr": 1,
                    "supported_targets_msg": 1,
                    "supported_targets_str": 1,
                    "supported_targets_string": 1,
                    "target_message": 4,
                    "target_string": 4,
                    "target_text": 1,
                    "translation": 3,
                    "translation_string": 1,
                    "translation_text": 1
                },
                "plVar3": {
                    "current_target": 23,
                    "list_pointer": 1,
                    "ptr": 3,
                    "target": 1,
                    "target_pointer": 1,
                    "target_ptr": 1
                },
                "unaff_RBX": {
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "output_file": 28
                }
            },
            "called": [
                "FUN_00102260",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_00103ca0"
            ],
            "code": "\nvoid print_supported_targets_00102450(void)\n\n{\n  long target;\n  char *message;\n  long *target_list;\n  FILE *output_file;\n  long *current_target;\n  int exit_code;\n  \n  message = (char *)get_message(0,\"Supported targets:\",5);\n  write_to_output_file(output_file,message);\n  target_list = (long *)get_target_list();\n  current_target = target_list;\n  while( true ) {\n    target = *current_target;\n    current_target = current_target + 1;\n    if (target == 0) break;\n    write_to_output_file(output_file,\" %s\");\n  }\n  write_newline_to_output_file(10,output_file);\n  free_memory(target_list);\n  if (exit_code == 0) {\n    message = (char *)get_message(0,\"Report bugs to %s.\\n\",5);\n    write_to_output_file(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_supported_targets_00102450",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102450": "print_supported_targets_00102450",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_message",
                "exit": "exit_program",
                "fprintf": "write_to_output_file",
                "fputc": "write_newline_to_output_file",
                "free": "free_memory",
                "in_stack_00000008": "exit_code",
                "lVar1": "target",
                "pcVar2": "message",
                "plVar3": "current_target",
                "unaff_RBX": "output_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102475": {
            "additional_data": {
                "FUN_00102475": {
                    "print_object_filename": 1
                },
                "object_index": {
                    "file_index": 1,
                    "index": 7
                },
                "param_1": {
                    "arg1": 2,
                    "config_param1": 1,
                    "file_descriptor": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "file_pointer": 1,
                    "filename": 13,
                    "filename_arg": 1,
                    "filename_ptr": 1,
                    "object": 1,
                    "object1": 1,
                    "object_file": 1,
                    "param1": 2,
                    "param_1": 1,
                    "print_object": 2,
                    "print_object_pointer": 1
                },
                "param_2": {
                    "arg2": 2,
                    "config_data": 1,
                    "config_param2": 1,
                    "file_data": 1,
                    "filename": 3,
                    "index": 2,
                    "object": 2,
                    "object2": 1,
                    "object_arg": 1,
                    "object_data": 1,
                    "object_index": 6,
                    "object_name": 3,
                    "object_pointer": 1,
                    "object_ptr": 1,
                    "param2": 2,
                    "param_2": 1,
                    "print_mode": 1,
                    "print_option": 1
                },
                "set_print_object_filename_00104397": {
                    "set_print_filename": 1,
                    "set_print_object_filename": 4
                },
                "switchD_00104393": {
                    "configure_print_object": 1,
                    "configure_print_object_filename": 1,
                    "initialize_print_object_filename": 1,
                    "print_object_filename": 1,
                    "set_print_object_filename": 2
                }
            },
            "called": [
                "FUN_00104397"
            ],
            "calling": [
                "FUN_00104370"
            ],
            "code": "\nvoid set_print_object_filename_00102475::print_object_filename_00102475(undefined8 filename,undefined8 object_index)\n\n{\n  set_print_object_filename_00102475(filename,object_index,3);\n  return;\n}\n\n",
            "current_name": "print_object_filename_00102475",
            "entrypoint": "0x00102475",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102475": "print_object_filename_00102475",
                "param_1": "filename",
                "param_2": "object_index",
                "set_print_object_filename_00104397": "set_print_object_filename",
                "switchD_00104393": "set_print_object_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010249f": {
            "additional_data": {
                "FUN_0010249f": {
                    "check_file_is_ordinary": 1,
                    "display_file_not_ordinary_warning": 2,
                    "display_file_type_error": 1,
                    "display_file_warning": 1,
                    "display_non_ordinary_file_warning": 2,
                    "display_not_ordinary_file_warning": 1,
                    "display_warning": 3,
                    "display_warning_message": 7,
                    "handle_non_ordinary_file_warning": 1,
                    "print_file_warning": 2,
                    "print_non_ordinary_file_warning": 4,
                    "print_not_ordinary_file_warning": 1,
                    "print_warning": 3,
                    "print_warning_and_exit": 1,
                    "print_warning_message": 1
                },
                "dcgettext": {
                    "get_localized_message": 2,
                    "get_message": 1,
                    "get_translated_message": 2,
                    "get_translated_string": 1,
                    "get_warning_message": 1,
                    "retrieve_message": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 6,
                    "report_error": 2
                },
                "param_1": {
                    "arg1": 1
                },
                "param_2": {
                    "arg2": 1
                },
                "param_3": {
                    "arg3": 1
                },
                "param_4": {
                    "arg4": 1
                },
                "uVar1": {
                    "error_message": 2,
                    "warning_message": 26,
                    "warning_msg": 3
                }
            },
            "called": [
                "FUN_00106400",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nundefined8 display_warning_message_0010249f(void)\n\n{\n  undefined8 warning_message;\n  \n  warning_message = get_translated_message(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n  handle_non_fatal_error(warning_message);\n  return 0;\n}\n\n",
            "current_name": "display_warning_message_0010249f",
            "entrypoint": "0x0010249f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010249f": "display_warning_message_0010249f",
                "dcgettext": "get_translated_message",
                "non_fatal": "handle_non_fatal_error",
                "uVar1": "warning_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025f5": {
            "additional_data": {
                "FUN_001025f5": {
                    "concatenate_and_assign": 2,
                    "concatenate_and_save": 1,
                    "concatenate_and_store": 1,
                    "concatenate_strings": 27
                },
                "concat": {
                    "concatenate": 2
                },
                "param_1": {
                    "address": 1,
                    "first_string": 1,
                    "input1": 1,
                    "input_param1": 1,
                    "input_string": 1,
                    "input_string1": 5,
                    "prefix": 5,
                    "prefix_string": 1,
                    "source_string": 2,
                    "string1": 6,
                    "string_to_concatenate": 1,
                    "unused_param": 3,
                    "unused_parameter": 3
                },
                "param_2": {
                    "additional_string": 3,
                    "appended_string": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "input_string": 4,
                    "input_string2": 5,
                    "second_string": 1,
                    "string2": 6,
                    "string_to_add": 1,
                    "string_to_append": 1,
                    "string_to_concatenate": 1,
                    "suffix": 5,
                    "suffix_string": 1
                }
            },
            "called": [
                "FUN_001021b0"
            ],
            "calling": [
                "FUN_00104670"
            ],
            "code": "\nvoid concatenate_strings_001025f5(undefined8 string1,undefined8 string2)\n\n{\n  DAT_0010b7a0 = concatenate(&DAT_001071d7,string2,&DAT_001071ca,0);\n  return;\n}\n\n",
            "current_name": "concatenate_strings_001025f5",
            "entrypoint": "0x001025f5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025f5": "concatenate_strings_001025f5",
                "concat": "concatenate",
                "param_1": "string1",
                "param_2": "string2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102670": {
            "additional_data": {
                "FUN_00102670": {
                    "display_if_initialized": 1,
                    "output_message_if_initialized": 1,
                    "print_if_certain_condition_met": 1,
                    "print_if_data_available": 1,
                    "print_if_data_exists": 1,
                    "print_if_debug_mode": 1,
                    "print_if_debugger_not_attached": 1,
                    "print_if_enabled": 2,
                    "print_if_flag_is_set": 1,
                    "print_if_flag_not_zero": 1,
                    "print_if_flag_set": 2,
                    "print_if_global_flag_set": 1,
                    "print_if_initialized": 7,
                    "print_if_not_zero": 1,
                    "print_if_valid": 1,
                    "print_message": 3,
                    "print_message_if_flag_set": 4,
                    "print_message_if_not_disabled": 1
                },
                "_DAT_0010b7c4": {
                    "disable_flag": 1,
                    "flag": 5,
                    "global_flag": 1,
                    "is_initialized": 1
                },
                "param_1": {
                    "message": 31
                },
                "printf": {
                    "print_formatted_message": 2
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_message_if_flag_set_00102670(undefined8 message)\n\n{\n  if (_DAT_0010b7c4 != 0) {\n    print_formatted_message(\"\\n%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_flag_set_00102670",
            "entrypoint": "0x00102670",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102670": "print_message_if_flag_set_00102670",
                "param_1": "message",
                "printf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010268b": {
            "additional_data": {
                "DAT_0010b790": {
                    "buffer": 1
                },
                "DAT_0010b7e0": {
                    "encoding_mode": 1
                },
                "FUN_0010268b": {
                    "decode_and_print_string": 1,
                    "print_decoded_string": 2,
                    "print_decompiled_function": 2,
                    "print_encoded_string": 13,
                    "print_escaped_string": 4,
                    "print_formatted_string": 2,
                    "print_modified_string": 1,
                    "print_unicode_string": 1,
                    "process_and_print_string": 1,
                    "reverse_and_print_string": 1
                },
                "_DAT_0010b798": {
                    "buffer_size": 1
                },
                "__s": {
                    "char2": 1,
                    "char_pointer2": 1,
                    "char_ptr3": 1,
                    "char_ptr_2": 1,
                    "char_var2": 2,
                    "format_buffer": 1,
                    "new_char_ptr": 1,
                    "output_string": 1,
                    "pc_var7_inner": 1,
                    "s_var": 1,
                    "str": 1,
                    "str2": 1,
                    "str_ptr": 1,
                    "str_var": 1,
                    "string": 1,
                    "string_pointer": 1,
                    "string_ptr": 3,
                    "string_var": 2,
                    "temp_char": 1,
                    "temp_str": 4,
                    "temp_str2": 1,
                    "temp_string": 3
                },
                "_sch_istable": {
                    "char_table": 1
                },
                "bVar15": {
                    "byte2": 1,
                    "byte3": 3,
                    "byte_3": 1,
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_var": 4,
                    "byte_var15": 1,
                    "byte_var3": 3,
                    "byte_var_3": 1,
                    "exit_loop_flag": 1,
                    "flag": 4,
                    "loop_condition": 1,
                    "loop_flag": 1,
                    "special_char_flag2": 1,
                    "temp_byte": 5,
                    "to_be_continued": 1,
                    "zero_byte": 1
                },
                "bVar2": {
                    "byte": 2,
                    "byte1": 15,
                    "byte_1": 1,
                    "byte_value": 1,
                    "byte_var": 2,
                    "byte_var1": 3,
                    "byte_var2": 1,
                    "current_byte": 5,
                    "current_char": 1
                },
                "bVar3": {
                    "byte": 1,
                    "byte2": 16,
                    "byte_2": 1,
                    "byte_var2": 3,
                    "byte_var3": 1,
                    "byte_var_2": 1,
                    "next_byte": 6,
                    "next_char2": 1,
                    "second_byte_value": 1
                },
                "iVar4": {
                    "int1": 1,
                    "int_val": 1,
                    "int_var": 7,
                    "int_var4": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "is_terminal": 8,
                    "is_tty": 3,
                    "is_tty_output": 1,
                    "result": 5,
                    "terminal_output": 1,
                    "tty_result": 1
                },
                "in_stack_00000038": {
                    "additional_argument": 1,
                    "argument": 1,
                    "dummy_variable": 1,
                    "extra_arg": 1,
                    "flag": 1,
                    "format_arg": 1,
                    "in_arg": 1,
                    "in_parameter_38": 1,
                    "in_stack_variable": 1,
                    "input_arg": 1,
                    "input_char": 1,
                    "input_var": 1,
                    "internal_stack_variable": 1,
                    "stack_param": 1,
                    "stack_parameter": 1,
                    "stack_value": 1,
                    "stack_var": 5,
                    "stack_var1": 1,
                    "stack_variable": 1,
                    "temp_var": 3,
                    "undefined_var2": 1,
                    "user_input": 1
                },
                "isatty": {
                    "isatty": 1
                },
                "lVar13": {
                    "additional_string_length": 1,
                    "counter": 1,
                    "input_length": 1,
                    "len": 1,
                    "length": 2,
                    "long1": 1,
                    "long2": 1,
                    "long_val": 1,
                    "long_var": 8,
                    "long_var13": 1,
                    "long_var2": 1,
                    "loop_counter": 1,
                    "loop_counter2": 1,
                    "loop_length": 1,
                    "loop_var": 3,
                    "loop_var2": 1,
                    "loop_variable": 1,
                    "num_loop": 1,
                    "num_opening_chars": 1,
                    "special_chunk_length": 1
                },
                "pcVar7": {
                    "char1": 1,
                    "char_pointer": 3,
                    "char_ptr": 4,
                    "char_ptr7": 1,
                    "char_var": 2,
                    "char_var1": 1,
                    "converted_str": 1,
                    "format_ptr": 1,
                    "format_string_ptr": 1,
                    "formatted_string": 1,
                    "output": 1,
                    "output_char_ptr": 1,
                    "str": 1,
                    "str_ptr": 4,
                    "string": 1,
                    "string_ptr": 1,
                    "string_result": 1,
                    "temp_char": 1,
                    "temp_str": 1,
                    "temp_string": 3
                },
                "puVar1": {
                    "dest_pointer": 1,
                    "next_char": 1,
                    "pointer": 2,
                    "pointer1": 4,
                    "pointer_1": 1,
                    "ptr": 16,
                    "ptr1": 5,
                    "ptr_var1": 1
                },
                "puVar10": {
                    "bracket_char_ptr": 1,
                    "concat_delimeter": 1,
                    "concat_ptr": 1,
                    "concat_str": 1,
                    "concat_string": 4,
                    "concatenated_string_ptr": 1,
                    "constant_pointer": 1,
                    "delimiter": 1,
                    "delimiter_ptr": 1,
                    "pointer": 1,
                    "pointer3": 4,
                    "pointer_3": 1,
                    "ptr10": 1,
                    "ptr3": 6,
                    "ptr_3": 1,
                    "ptr_var10": 1,
                    "separator": 1,
                    "special_char_pointer": 1,
                    "special_str": 1,
                    "string_prefix": 1
                },
                "puVar11": {
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "input_ptr": 8,
                    "input_string": 1,
                    "new_ptr2": 1,
                    "pointer4": 4,
                    "pointer_4": 1,
                    "ptr1": 1,
                    "ptr11": 1,
                    "ptr3": 1,
                    "ptr4": 6,
                    "ptr_4": 1,
                    "ptr_var11": 1,
                    "src_pointer": 1,
                    "src_ptr": 1,
                    "temp_ptr": 1
                },
                "puVar12": {
                    "decoded_string": 3,
                    "final_ptr": 1,
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "new_ptr2": 1,
                    "output_buffer": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_string": 7,
                    "pointer_5": 1,
                    "ptr5": 4,
                    "ptr_5": 1,
                    "result_pointer": 2,
                    "result_ptr": 4,
                    "result_string_ptr": 1
                },
                "puVar6": {
                    "dest_pointer2": 1,
                    "dest_ptr": 1,
                    "encoded_ptr": 1,
                    "new_ptr": 2,
                    "new_string_ptr": 1,
                    "output_ptr": 5,
                    "pointer2": 4,
                    "pointer_2": 1,
                    "ptr2": 11,
                    "ptr_2": 1,
                    "ptr_var6": 1,
                    "temp_pointer": 1
                },
                "sVar5": {
                    "encoded_length": 1,
                    "input_length": 2,
                    "length": 2,
                    "size": 5,
                    "str_len": 2,
                    "str_length": 2,
                    "string_len": 1,
                    "string_length": 14,
                    "string_size": 2
                },
                "uVar14": {
                    "additional_string_size": 1,
                    "byte_count": 1,
                    "case_var": 1,
                    "int_var": 1,
                    "length_or_count": 1,
                    "loop_count": 1,
                    "loop_counter2": 1,
                    "loop_iterations": 1,
                    "loop_length": 1,
                    "num_bytes_to_inspect": 1,
                    "num_iterations": 1,
                    "size": 2,
                    "special_char_flag": 1,
                    "special_chunk_size": 1,
                    "special_count": 1,
                    "switch_variable": 1,
                    "u_var": 1,
                    "uint": 1,
                    "uint1": 1,
                    "uint_val": 1,
                    "uint_var": 8,
                    "uint_var14": 1
                },
                "uVar8": {
                    "count": 5,
                    "counter": 1,
                    "iteration_count": 1,
                    "loop_counter": 3,
                    "loop_var": 2,
                    "num_bytes": 2,
                    "num_chars_to_print": 1,
                    "output_length": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "ulong": 1,
                    "ulong1": 1,
                    "ulong_val": 1,
                    "ulong_var": 8,
                    "ulong_var8": 1
                },
                "uVar9": {
                    "brace_char": 1,
                    "bracket_char": 1,
                    "char_code": 3,
                    "char_value": 1,
                    "char_var": 2,
                    "character": 1,
                    "opening_char": 1,
                    "special_char": 4,
                    "special_character": 1,
                    "symbol": 1,
                    "temp_undefined": 1,
                    "temp_var2": 1,
                    "ulong2": 1,
                    "ulong_var2": 6,
                    "ulong_var9": 1,
                    "ulong_var_2": 2,
                    "undefined_val": 1,
                    "undefined_var": 1,
                    "unicode_char": 1
                },
                "unaff_R12": {
                    "end_marker": 1,
                    "flag_ptr": 2,
                    "out_char": 1,
                    "output_char": 1,
                    "output_flag": 2,
                    "ptr3": 1,
                    "reg_val2": 1,
                    "register2": 1,
                    "register_r12": 5,
                    "result": 1,
                    "result_flag": 1,
                    "result_flag_pointer": 1,
                    "result_ptr": 1,
                    "unaff_arg2": 1,
                    "unaff_param": 1,
                    "unaff_ptr1": 1,
                    "unaff_r12": 3,
                    "unaff_var2": 1,
                    "unaffected_r12": 2,
                    "undefined1": 1
                },
                "unaff_R13": {
                    "encoded_string": 2,
                    "input_buffer": 1,
                    "input_pointer": 1,
                    "input_str": 1,
                    "input_string": 11,
                    "input_string_ptr": 1,
                    "original_str": 1,
                    "ptr6": 1,
                    "reg_val3": 1,
                    "register_r13": 5,
                    "src_string_pointer": 1,
                    "str_ptr": 1,
                    "unaff_param_2": 1,
                    "unaff_ptr2": 1,
                    "unaff_r13": 1,
                    "unaff_var3": 1
                },
                "unaff_R14": {
                    "char_ptr2": 1,
                    "format": 3,
                    "format_str": 2,
                    "format_string": 13,
                    "output_format": 1,
                    "print_format": 1,
                    "print_format_str": 1,
                    "reg_val4": 1,
                    "register_r14": 4,
                    "unaff_ptr3": 1,
                    "unaff_r14": 2,
                    "unaff_var4": 1
                },
                "unaff_R15": {
                    "callee_frame_ptr": 1,
                    "context_pointer": 1,
                    "first_arg": 1,
                    "func_pointer": 1,
                    "function_call": 1,
                    "function_pointer": 3,
                    "long3": 1,
                    "long_var3": 1,
                    "ptr_r15": 1,
                    "reg_val5": 1,
                    "register15": 2,
                    "register3": 1,
                    "register_r15": 5,
                    "string_address": 1,
                    "table_ptr": 1,
                    "temp_pointer": 1,
                    "unaff_arg3": 1,
                    "unaff_arg4": 1,
                    "unaff_param_3": 1,
                    "unaff_r15": 2,
                    "unaff_var5": 1,
                    "unaffected_r15": 2
                },
                "unaff_RBP": {
                    "base_pointer": 5,
                    "base_ptr": 1,
                    "base_register": 1,
                    "caller_frame_ptr": 1,
                    "long1": 1,
                    "long_var1": 1,
                    "previous_rbp": 1,
                    "ptr_rbp": 1,
                    "rbp": 1,
                    "rbp_var": 1,
                    "reg_val1": 1,
                    "register1": 1,
                    "register_base_pointer": 1,
                    "register_bp": 2,
                    "register_rbp": 3,
                    "stack_frame": 2,
                    "stack_frame_pointer": 1,
                    "unaff_arg1": 1,
                    "unaff_rbp": 1,
                    "unaff_var1": 1,
                    "unaffected_rbp": 2
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_001020c0",
                "FUN_001047d0",
                "FUN_001021e0",
                "FUN_001023b0",
                "FUN_00102160"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\n\n\nvoid print_encoded_string_0010268b(void)\n\n{\n  undefined8 *ptr;\n  byte byte1;\n  byte byte2;\n  int is_terminal;\n  size_t string_length;\n  undefined8 *ptr2;\n  char *char_ptr;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  undefined *ptr3;\n  undefined8 *input_ptr;\n  long base_pointer;\n  undefined8 *output_string;\n  undefined *register_r12;\n  undefined8 *input_string;\n  long long_var;\n  uint uint_var;\n  char *format_string;\n  long register_r15;\n  byte temp_byte;\n  char *temp_str;\n  undefined8 stack_var;\n  \n  temp_byte = 0;\n  output_string = input_string;\n  if (DAT_0010b7e0 != 0) {\n    do {\n      byte1 = *(byte *)output_string;\n      if (byte1 == 0) goto LAB_0010485e;\n    } while ((((&char_table)[(ulong)byte1 * 2] & 2) == 0) &&\n            (output_string = (undefined8 *)((long)output_string + 1), byte1 < 0xc0));\n    string_length = strlen((char *)input_string);\n    output_string = DAT_0010b790;\n    input_ptr = input_string;\n    if (_DAT_0010b798 < string_length * 9) {\n      free(DAT_0010b790);\n      string_length = strlen((char *)input_string);\n      _DAT_0010b798 = string_length * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      output_string = DAT_0010b790;\n    }\n    while( true ) {\n      input_string = DAT_0010b790;\n      byte1 = *(byte *)input_ptr;\n      ptr = (undefined8 *)((long)input_ptr + 1);\n      if (byte1 == 0) break;\n      if (((&char_table)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)output_string = byte1;\n          output_string = (undefined8 *)((long)output_string + 1);\n          input_ptr = ptr;\n        }\n        else {\n          byte2 = *(byte *)((long)input_ptr + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = output_string;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                is_terminal = isatty(1);\n                if (is_terminal == 0) {\n                  byte2 = *(byte *)((long)input_ptr + 1);\n                }\n                else {\n                  *(undefined *)(output_string + 1) = 0;\n                  *output_string = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)input_ptr + 1);\n                  ptr2 = output_string + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)input_ptr >> 2 & 7),\n                        (ulong)((*(byte *)input_ptr & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)input_ptr + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)ptr2 = *(undefined *)input_ptr;\n                    input_ptr = (undefined8 *)((long)input_ptr + (ulong)temp_byte * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)temp_byte * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  sprintf((char *)output_string,\"%c\",ulong_var2);\n                  *(undefined *)((long)output_string + 3) = 0;\n                  ptr2 = (undefined8 *)(long_var + (long)input_ptr);\n                  *(undefined2 *)((long)output_string + 1) = 0x7830;\n                  char_ptr = (char *)((long)output_string + 3);\n                  do {\n                    temp_str = char_ptr;\n                    byte1 = *(byte *)input_ptr;\n                    input_ptr = (undefined8 *)((long)input_ptr + 1);\n                    sprintf(temp_str,\"%02x\",(ulong)byte1);\n                    char_ptr = temp_str + 2;\n                  } while (input_ptr != ptr2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(temp_str + 2,\"%c\",ulong_var2);\n                  ptr2 = (undefined8 *)(temp_str + 3);\n                  break;\n                case 4:\n                  is_terminal = isatty(1);\n                  if (is_terminal == 0) {\n                    byte2 = *(byte *)((long)input_ptr + 2);\n                  }\n                  else {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)input_ptr + 2);\n                    ptr2 = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)input_ptr & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)input_ptr + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)input_ptr + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (is_terminal = isatty(1), is_terminal != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)input_ptr + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  is_terminal = isatty(1);\n                  if (is_terminal != 0) {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    ptr2 = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  is_terminal = sprintf((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)input_ptr & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)input_ptr + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)input_ptr + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)input_ptr + 2) >> 2 & 0xfU));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)is_terminal);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)ptr2 - (int)output_string);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)output_string = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          output_string = (undefined8 *)((long)output_string + ulong_var);\n          input_ptr = (undefined8 *)((long)ptr + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)output_string = 0x5e;\n        *(byte *)((long)output_string + 1) = byte1 + 0x40;\n        output_string = (undefined8 *)((long)output_string + 2);\n        input_ptr = ptr;\n      }\n    }\n    *(undefined *)output_string = 0;\n  }\nLAB_0010485e:\n  output_string = (undefined8 *)0x0;\n  if ((((base_pointer != 0) && (*(long *)(base_pointer + 0x10) != 0)) && (DAT_0010b234 != 0)) &&\n     ((char_ptr = (char *)(**(code **)(*(long *)(register_r15 + 8) + 0x220))\n                                  (register_r15,*(long *)(base_pointer + 0x10),0,\n                                   (long)&stack0x00000038 + 7), char_ptr != (char *)0x0 &&\n      (*char_ptr != '\\0')))) {\n    ptr3 = &DAT_001071e0;\n    if ((stack_var._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(base_pointer + 0x10) + 0x20) != 0x10c2a8)) {\n      ptr3 = &DAT_001071df;\n    }\n    output_string = (undefined8 *)reconcat(0,input_string,ptr3,char_ptr,0);\n    input_string = output_string;\n  }\n  printf(format_string,input_string);\n  if (register_r12 != (undefined *)0x0) {\n    *register_r12 = 0x40;\n  }\n  free(output_string);\n  return;\n}\n\n",
            "current_name": "print_encoded_string_0010268b",
            "entrypoint": "0x0010268b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010268b": "print_encoded_string_0010268b",
                "__s": "temp_str",
                "_sch_istable": "char_table",
                "bVar15": "temp_byte",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "iVar4": "is_terminal",
                "in_stack_00000038": "stack_var",
                "lVar13": "long_var",
                "pcVar7": "char_ptr",
                "puVar1": "ptr",
                "puVar10": "ptr3",
                "puVar11": "input_ptr",
                "puVar12": "output_string",
                "puVar6": "ptr2",
                "sVar5": "string_length",
                "uVar14": "uint_var",
                "uVar8": "ulong_var",
                "uVar9": "ulong_var2",
                "unaff_R12": "register_r12",
                "unaff_R13": "input_string",
                "unaff_R14": "format_string",
                "unaff_R15": "register_r15",
                "unaff_RBP": "base_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102739": {
            "additional_data": {
                "DAT_0010b790": {
                    "data_pointer": 1
                },
                "DAT_0010b7e0": {
                    "data_value": 1
                },
                "DAT_0010b814": {
                    "data_flag": 1
                },
                "FUN_00102739": {
                    "decode_and_print": 2,
                    "decode_and_print_string": 11,
                    "parse_and_print_string": 1,
                    "print_decoded_string": 3,
                    "print_demangled_output": 1,
                    "print_encoded_string": 2,
                    "process_string": 5,
                    "reverse_and_print_string": 1
                },
                "_DAT_0010b798": {
                    "data_value2": 1
                },
                "__ptr": {
                    "decoded_string": 6,
                    "decoded_string_ptr": 1,
                    "final_output_pointer": 1,
                    "final_output_ptr": 1,
                    "free_str_ptr": 1,
                    "new_pointer": 1,
                    "output": 1,
                    "output_ptr": 1,
                    "output_string": 1,
                    "pointer3": 2,
                    "pointer5": 3,
                    "pointer7": 1,
                    "ptr3": 2,
                    "result": 1,
                    "result_ptr": 4,
                    "result_string": 1
                },
                "__s": {
                    "__s": 1,
                    "char_arr": 1,
                    "char_pointer3": 1,
                    "char_pointer4": 2,
                    "char_ptr": 1,
                    "char_ptr3": 1,
                    "char_ptr4": 1,
                    "char_var3": 1,
                    "output_str": 1,
                    "output_temp_string": 1,
                    "pc_var8": 1,
                    "pointer11": 1,
                    "pointer12": 1,
                    "pointer8": 1,
                    "pointer_to_string": 1,
                    "str": 1,
                    "str1": 1,
                    "str_ptr": 1,
                    "str_ptr3": 2,
                    "str_ptr4": 1,
                    "string": 2,
                    "string_var": 1,
                    "temp_string": 1
                },
                "bVar15": {
                    "byte3": 15,
                    "byte_var": 2,
                    "byte_var1": 1,
                    "flag": 4,
                    "is_escape": 1,
                    "is_mangle_needed": 1,
                    "is_multi_byte_char": 1,
                    "is_null_byte": 1,
                    "loop_variable": 1
                },
                "bVar2": {
                    "byte1": 17,
                    "byte_value": 1,
                    "byte_value1": 1,
                    "byte_var2": 1,
                    "byte_var_2": 1,
                    "current_byte": 7,
                    "first_byte": 2
                },
                "bVar3": {
                    "byte2": 17,
                    "byte_value2": 1,
                    "byte_var3": 1,
                    "byte_var_3": 1,
                    "next_byte": 8,
                    "second_byte": 2
                },
                "iVar4": {
                    "index": 1,
                    "int1": 3,
                    "int_value": 1,
                    "int_var": 10,
                    "int_var1": 1,
                    "integer1": 1,
                    "is_terminal": 4,
                    "is_tty": 3,
                    "output_length": 1,
                    "result": 1,
                    "temp_variable": 1,
                    "tmp3": 1,
                    "variable4": 1
                },
                "in_stack_00000038": {
                    "additional_parameter": 1,
                    "format_string": 1,
                    "func_param_4": 1,
                    "parameter1": 1,
                    "stack": 1,
                    "stack_param": 1,
                    "stack_value": 2,
                    "stack_var": 5,
                    "stack_variable": 2,
                    "var1": 1,
                    "variable12": 1
                },
                "lVar13": {
                    "encoding_length": 1,
                    "for_loop_counter": 1,
                    "length": 3,
                    "length2": 1,
                    "length_variable": 1,
                    "long1": 1,
                    "long2": 3,
                    "long_value": 1,
                    "long_var": 8,
                    "long_var1": 2,
                    "long_var2": 2,
                    "loop_counter": 1,
                    "output_length": 1,
                    "string_length_long": 1,
                    "tmp6": 1
                },
                "pcVar6": {
                    "at_char": 1,
                    "at_sign_location": 1,
                    "at_symbol": 1,
                    "at_symbol_location": 1,
                    "at_symbol_pos": 1,
                    "at_symbol_position": 2,
                    "at_symbol_ptr": 3,
                    "char_pointer1": 3,
                    "char_ptr": 2,
                    "char_ptr1": 1,
                    "char_var1": 1,
                    "pointer1": 1,
                    "pointer2": 4,
                    "pointer3": 1,
                    "ptr1": 2,
                    "str_ptr": 3,
                    "strchr_result": 1,
                    "unmangled_string": 1
                },
                "pcVar8": {
                    "additional_string": 1,
                    "char_pointer2": 3,
                    "char_ptr": 1,
                    "char_ptr2": 3,
                    "char_var2": 1,
                    "decoded_string": 2,
                    "demangled_str": 1,
                    "demangled_string": 1,
                    "function_output": 1,
                    "loop_var": 1,
                    "output_string": 2,
                    "pointer2": 1,
                    "pointer4": 4,
                    "pointer5": 1,
                    "ptr2": 2,
                    "result_string": 1,
                    "str_ptr2": 3
                },
                "puVar1": {
                    "current_byte_ptr": 1,
                    "next_char": 1,
                    "next_output_ptr": 1,
                    "next_ptr": 1,
                    "output": 1,
                    "output_pointer": 1,
                    "pointer": 1,
                    "pointer1": 8,
                    "ptr1": 6,
                    "temp_address": 1,
                    "tmp2": 1
                },
                "puVar11": {
                    "auxiliary_data": 1,
                    "concatenation_mode": 1,
                    "concatenation_str": 1,
                    "concatenation_variable": 1,
                    "free_memory_pointer": 1,
                    "pointer3": 3,
                    "pointer4": 3,
                    "pointer5": 1,
                    "pointer6": 4,
                    "pointer_var": 1,
                    "prefix": 1,
                    "ptr": 1,
                    "ptr3": 4,
                    "ptr4": 2,
                    "reconcat_flag": 1,
                    "special_char_ptr": 1,
                    "special_characters": 1,
                    "string_modifier": 1
                },
                "puVar12": {
                    "current_pointer": 1,
                    "decoded_string_ptr": 1,
                    "dst_ptr": 1,
                    "encoded_string": 1,
                    "output_buffer": 1,
                    "output_end": 1,
                    "output_next": 1,
                    "output_pointer": 2,
                    "output_ptr": 2,
                    "output_str_ptr": 1,
                    "output_string_pointer": 1,
                    "pointer2": 1,
                    "pointer4": 4,
                    "pointer5": 2,
                    "pointer6": 1,
                    "pointer7": 1,
                    "pointer8": 2,
                    "ptr4": 4,
                    "ptr5": 2,
                    "tmp5": 1
                },
                "puVar7": {
                    "concatenation_variable_ptr": 1,
                    "output_ptr": 1,
                    "output_start": 1,
                    "output_string_pointer": 2,
                    "pointer2": 5,
                    "pointer3": 4,
                    "pointer5": 1,
                    "ptr2": 6,
                    "temp_buffer": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2
                },
                "sVar5": {
                    "input_string_length": 1,
                    "length": 1,
                    "size": 12,
                    "size1": 1,
                    "size_var": 3,
                    "size_var1": 1,
                    "string_length": 8
                },
                "uVar10": {
                    "additional_variable": 1,
                    "auxiliary_byte": 1,
                    "character": 1,
                    "codepoint": 1,
                    "hex_value": 1,
                    "special_char": 1,
                    "specifier": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "tmp4": 1,
                    "u_var": 1,
                    "u_var10": 1,
                    "ulong2": 4,
                    "ulong_value2": 1,
                    "ulong_var2": 8,
                    "ulong_var_2": 1,
                    "unicode_char": 2,
                    "unsigned_var2": 1,
                    "unsigned_var3": 1
                },
                "uVar14": {
                    "byte_count": 1,
                    "count": 1,
                    "loop_counter": 1,
                    "loop_counter_uint": 1,
                    "num_bytes": 2,
                    "num_chars": 1,
                    "offset": 1,
                    "option": 1,
                    "tmp7": 1,
                    "u_var14": 1,
                    "uint1": 4,
                    "uint_val": 1,
                    "uint_var": 9,
                    "unsigned_value": 1,
                    "unsigned_var1": 1,
                    "unsigned_var3": 1
                },
                "uVar9": {
                    "byte_count": 2,
                    "byte_size": 1,
                    "bytes_processed": 1,
                    "bytes_written": 1,
                    "length": 1,
                    "loop_counter_ulong": 1,
                    "num_bytes": 1,
                    "output_length": 1,
                    "output_string_length": 1,
                    "size": 2,
                    "size2": 1,
                    "ulong1": 4,
                    "ulong_val": 1,
                    "ulong_value": 1,
                    "ulong_var": 5,
                    "ulong_var1": 4,
                    "unsigned_var1": 1,
                    "unsigned_var2": 1
                },
                "unaff_R1": {
                    "tmp1": 1
                },
                "unaff_R12": {
                    "encoded_string": 1
                },
                "unaff_R13": {
                    "arg2": 1,
                    "current_char": 1,
                    "current_pointer": 1,
                    "input": 1,
                    "input_ptr": 1,
                    "input_string": 2,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer5": 1,
                    "pointer6": 2,
                    "pointer9": 2,
                    "ptr6": 2,
                    "reg_r13": 1,
                    "register2": 1,
                    "register_r13": 1,
                    "src_ptr": 1,
                    "string_pointer": 3,
                    "string_ptr": 4,
                    "unaff_r13": 2,
                    "unaff_var2": 1,
                    "unaffected_r13": 1
                },
                "unaff_R14": {
                    "arg3": 1,
                    "char_pointer3": 2,
                    "char_ptr3": 1,
                    "format_string": 12,
                    "pointer10": 2,
                    "pointer3": 1,
                    "ptr3": 1,
                    "reg_r14": 1,
                    "register14": 1,
                    "register3": 1,
                    "register_r14": 1,
                    "str1": 1,
                    "str_ptr3": 1,
                    "unaff_r14": 2,
                    "unaff_var3": 1,
                    "unaffected_r14": 1
                },
                "unaff_R15": {
                    "arg1": 1,
                    "arg2": 1,
                    "arg4": 1,
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "context": 1,
                    "context_pointer": 1,
                    "frame_pointer": 1,
                    "func_param_1": 1,
                    "function_pointer": 1,
                    "long2": 1,
                    "long3": 3,
                    "long_var3": 2,
                    "pointer11": 1,
                    "pointer2": 1,
                    "r15": 1,
                    "reg_r15": 1,
                    "register15": 1,
                    "register4": 1,
                    "register_r15": 1,
                    "stack_base": 1,
                    "str2": 1,
                    "unaff_r15": 3,
                    "unaff_var4": 1,
                    "unaffected_r15": 1
                },
                "unaff_RBP": {
                    "arg1": 2,
                    "arg2": 1,
                    "base_pointer": 7,
                    "base_ptr": 1,
                    "func_param_3": 1,
                    "long1": 3,
                    "long_var1": 2,
                    "memory_ptr": 1,
                    "pointer7": 1,
                    "previous_base_pointer": 1,
                    "reg_bp": 1,
                    "register1": 1,
                    "register_bp": 1,
                    "stack_frame_pointer": 1,
                    "unaff_rbp": 3,
                    "unaff_var1": 1,
                    "unaffected_rbp": 1,
                    "variable7": 1
                }
            },
            "called": [
                "FUN_00102320",
                "FUN_00102180",
                "FUN_001047d0",
                "FUN_00102190",
                "FUN_0010268b"
            ],
            "calling": [
                "FUN_00104740"
            ],
            "code": "\n\n\nvoid decode_and_print_string_00102739(void)\n\n{\n  undefined8 *pointer1;\n  byte byte1;\n  byte byte2;\n  int int_var;\n  size_t size;\n  char *pointer2;\n  undefined8 *ptr2;\n  char *pointer4;\n  undefined8 *decoded_string;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  undefined *pointer6;\n  long base_pointer;\n  undefined8 *pointer4;\n  undefined8 *string_ptr;\n  long long_var;\n  uint uint_var;\n  char *format_string;\n  long unaff_r15;\n  byte byte3;\n  char *str_ptr3;\n  undefined8 stack_var;\n  \n  byte3 = 0;\n  pointer4 = string_ptr;\n  if (*(int *)(*(long *)(unaff_r15 + 8) + 8) != 5) {\n    if (DAT_0010b814 != 0) {\n      pointer2 = (char *)0x0;\n      goto LAB_0010482b;\n    }\n    pointer2 = (char *)0x0;\n    if (DAT_0010b7e0 == 0) {\nLAB_00104794:\n      decoded_string = (undefined8 *)0x0;\n    }\n    else {\n      decoded_string = (undefined8 *)0x0;\n      if (string_ptr != (undefined8 *)0x0) goto LAB_0010269d;\n      decoded_string = (undefined8 *)0x0;\n      string_ptr = (undefined8 *)0x1073a6;\n    }\n    goto joined_r0x00104799;\n  }\n  pointer2 = strchr((char *)string_ptr,0x40);\n  if (pointer2 == (char *)0x0) {\n    if (DAT_0010b814 != 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 == 0) {\n      if (base_pointer == 0) {\n        decoded_string = (undefined8 *)0x0;\n        printf(format_string);\n      }\n      else {\n        if (*(long *)(base_pointer + 0x10) != 0) {\n          print_output_and_free_memory_001047d0();\n          return;\n        }\n        decoded_string = (undefined8 *)0x0;\n        printf(format_string);\n      }\n      goto LAB_001047ba;\n    }\nLAB_00102698:\n    pointer4 = string_ptr;\n    decoded_string = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      byte1 = *(byte *)pointer4;\n      if (byte1 == 0) goto joined_r0x00104799;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) &&\n            (pointer4 = (undefined8 *)((long)pointer4 + 1), byte1 < 0xc0));\n    size = strlen((char *)string_ptr);\n    pointer4 = DAT_0010b790;\n    if (_DAT_0010b798 < size * 9) {\n      free(DAT_0010b790);\n      size = strlen((char *)string_ptr);\n      _DAT_0010b798 = size * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      pointer4 = DAT_0010b790;\n    }\n    while( true ) {\n      ptr2 = DAT_0010b790;\n      byte1 = *(byte *)string_ptr;\n      pointer1 = (undefined8 *)((long)string_ptr + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)pointer4 = byte1;\n          pointer4 = (undefined8 *)((long)pointer4 + 1);\n          string_ptr = pointer1;\n        }\n        else {\n          byte2 = *(byte *)((long)string_ptr + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = pointer4;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                int_var = isatty(1);\n                if (int_var == 0) {\n                  byte2 = *(byte *)((long)string_ptr + 1);\n                }\n                else {\n                  *(undefined *)(pointer4 + 1) = 0;\n                  *pointer4 = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)string_ptr + 1);\n                  ptr2 = pointer4 + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)string_ptr >> 2 & 7)\n                        ,(ulong)((*(byte *)string_ptr & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)string_ptr + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)ptr2 = *(undefined *)string_ptr;\n                    string_ptr = (undefined8 *)((long)string_ptr + (ulong)byte3 * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)byte3 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  sprintf((char *)pointer4,\"%c\",ulong_var2);\n                  *(undefined *)((long)pointer4 + 3) = 0;\n                  ptr2 = (undefined8 *)(long_var + (long)string_ptr);\n                  *(undefined2 *)((long)pointer4 + 1) = 0x7830;\n                  pointer4 = (char *)((long)pointer4 + 3);\n                  do {\n                    str_ptr3 = pointer4;\n                    byte1 = *(byte *)string_ptr;\n                    string_ptr = (undefined8 *)((long)string_ptr + 1);\n                    sprintf(str_ptr3,\"%02x\",(ulong)byte1);\n                    pointer4 = str_ptr3 + 2;\n                  } while (string_ptr != ptr2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(str_ptr3 + 2,\"%c\",ulong_var2);\n                  ptr2 = (undefined8 *)(str_ptr3 + 3);\n                  break;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)string_ptr + 2);\n                  }\n                  else {\n                    *(undefined *)(pointer4 + 1) = 0;\n                    *pointer4 = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)string_ptr + 2);\n                    ptr2 = pointer4 + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)string_ptr & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)string_ptr + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)string_ptr + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (int_var = isatty(1), int_var != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)string_ptr + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var != 0) {\n                    *(undefined *)(pointer4 + 1) = 0;\n                    *pointer4 = 0x6d37343b31335b1b;\n                    ptr2 = pointer4 + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  int_var = sprintf((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)string_ptr & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)string_ptr + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)string_ptr + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)string_ptr + 2) >> 2 & 0xfU));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)int_var);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)ptr2 - (int)pointer4);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)pointer4 = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          pointer4 = (undefined8 *)((long)pointer4 + ulong_var);\n          string_ptr = (undefined8 *)((long)pointer1 + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)pointer4 = 0x5e;\n        *(byte *)((long)pointer4 + 1) = byte1 + 0x40;\n        pointer4 = (undefined8 *)((long)pointer4 + 2);\n        string_ptr = pointer1;\n      }\n    }\n    *(undefined *)pointer4 = 0;\n    string_ptr = ptr2;\n  }\n  else {\n    *pointer2 = '\\0';\n    if (DAT_0010b814 == 0) {\n      if (DAT_0010b7e0 == 0) goto LAB_00104794;\n      decoded_string = (undefined8 *)0x0;\n      goto LAB_0010269d;\n    }\nLAB_0010482b:\n    if ((*(char *)string_ptr == '\\0') ||\n       (pointer4 = (undefined8 *)bfd_demangle(), pointer4 == (undefined8 *)0x0)) {\n      if (DAT_0010b7e0 != 0) goto LAB_00102698;\n      decoded_string = (undefined8 *)0x0;\n    }\n    else {\n      string_ptr = pointer4;\n      decoded_string = pointer4;\n      if (DAT_0010b7e0 != 0) goto LAB_0010269d;\n    }\n  }\njoined_r0x00104799:\n  if ((((base_pointer != 0) && (*(long *)(base_pointer + 0x10) != 0)) && (DAT_0010b234 != 0)) &&\n     ((pointer4 = (char *)(**(code **)(*(long *)(unaff_r15 + 8) + 0x220))\n                                  (unaff_r15,*(long *)(base_pointer + 0x10),0,\n                                   (long)&stack0x00000038 + 7), pointer4 != (char *)0x0 &&\n      (*pointer4 != '\\0')))) {\n    pointer6 = &DAT_001071e0;\n    if ((stack_var._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(base_pointer + 0x10) + 0x20) != 0x10c2a8)) {\n      pointer6 = &DAT_001071df;\n    }\n    decoded_string = (undefined8 *)reconcat(decoded_string,string_ptr,pointer6,pointer4,0);\n    string_ptr = decoded_string;\n  }\n  printf(format_string,string_ptr);\n  if (pointer2 != (char *)0x0) {\n    *pointer2 = '@';\n  }\nLAB_001047ba:\n  free(decoded_string);\n  return;\n}\n\n",
            "current_name": "decode_and_print_string_00102739",
            "entrypoint": "0x00102739",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102739": "decode_and_print_string_00102739",
                "__ptr": "decoded_string",
                "__s": "str_ptr3",
                "bVar15": "byte3",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "iVar4": "int_var",
                "in_stack_00000038": "stack_var",
                "lVar13": "long_var",
                "pcVar6": "pointer2",
                "pcVar8": "pointer4",
                "puVar1": "pointer1",
                "puVar11": "pointer6",
                "puVar12": "pointer4",
                "puVar7": "ptr2",
                "sVar5": "size",
                "uVar10": "ulong_var2",
                "uVar14": "uint_var",
                "uVar9": "ulong_var",
                "unaff_R1": "tmp1",
                "unaff_R13": "string_ptr",
                "unaff_R14": "format_string",
                "unaff_R15": "unaff_r15",
                "unaff_RBP": "base_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c19": {
            "additional_data": {
                "FUN_00102c19": {
                    "decompile_and_improve": 1,
                    "decompiled_function": 2,
                    "process_binary_data": 3,
                    "process_lto_object": 6,
                    "process_symbols": 1,
                    "reverse_and_print_symbols": 1,
                    "reverse_symbol_table": 1
                },
                "__ptr": {
                    "dynamic_ptr": 1,
                    "pointer": 1,
                    "pointer_ptr": 1,
                    "pointer_var": 2,
                    "pointer_var3": 1,
                    "pointer_variable3": 2,
                    "symbol_name": 1,
                    "temp_ptr2": 1,
                    "temporary_pointer": 1
                },
                "bVar16": {
                    "bool_flag": 1,
                    "bool_value": 1,
                    "bool_var": 7,
                    "boolean_flag": 1,
                    "boolean_value": 2,
                    "boolean_var": 2,
                    "boolean_variable": 5,
                    "boolean_variable_16": 1,
                    "condition": 1,
                    "has_plugin": 2,
                    "is_true": 1
                },
                "bVar17": {
                    "boolean_variable": 1,
                    "byte_flag": 1,
                    "byte_value": 5,
                    "byte_var": 8,
                    "byte_variable": 5,
                    "byte_variable_17": 1,
                    "dummy": 1,
                    "flag": 1,
                    "found_matching_symbol": 1,
                    "loop_counter": 1
                },
                "cVar3": {
                    "char_value": 4,
                    "char_var": 6,
                    "char_variable": 2,
                    "character": 3,
                    "character_value": 1,
                    "character_var": 2,
                    "character_variable": 2,
                    "character_variable_3": 1,
                    "check_result": 1,
                    "comparison_result": 1,
                    "flag": 1,
                    "found_plugin": 1,
                    "result": 1
                },
                "iVar4": {
                    "comparison_result": 7,
                    "comparison_variable": 1,
                    "int_value": 1,
                    "int_var": 6,
                    "int_variable": 1,
                    "integer_value": 2,
                    "integer_var": 3,
                    "integer_variable": 4,
                    "integer_variable_4": 1,
                    "strcmp_result": 1,
                    "string_comparison": 1
                },
                "in_R8": {
                    "element_size": 1,
                    "in_r8": 1,
                    "pointer_r8": 1,
                    "pointer_unsigned_long_7": 1,
                    "pointer_variable7": 1,
                    "reg_r8": 1,
                    "register_r8": 2,
                    "size_1": 1,
                    "source_size": 1
                },
                "in_R9": {
                    "comparison_function": 1,
                    "element_size": 1,
                    "in_r9": 1,
                    "pointer_in_r9": 1,
                    "pointer_r9": 1,
                    "pointer_unsigned_long_9": 1,
                    "pointer_variable9": 1,
                    "reg_r9": 1,
                    "register_r9": 2,
                    "size_2": 1
                },
                "in_stack_00000008": {
                    "default_translation": 1,
                    "in_stack_00000008": 1,
                    "in_stack_8": 1,
                    "parameter1": 1,
                    "print_flags": 1,
                    "print_symbol_arg": 1,
                    "some_data_1": 1,
                    "stack_arg1": 1,
                    "stack_argument1": 1,
                    "stack_parameter": 1,
                    "stack_value1": 5,
                    "stack_var1": 1,
                    "stack_var_1": 1,
                    "stack_variable1": 3,
                    "stack_variable_1": 1,
                    "stack_variable_8": 1,
                    "undefined8_stack_var1": 1,
                    "unsigned_long_variable_4": 1,
                    "value_to_print": 1,
                    "var1": 1,
                    "variable_stack1": 1
                },
                "in_stack_00000010": {
                    "forward_comparison_function": 1,
                    "in_stack_00000010": 1,
                    "in_stack_16": 1,
                    "new_array": 1,
                    "parameter2": 1,
                    "pointer_array1": 1,
                    "pointer_unsigned_long_16": 1,
                    "ptr_stack10": 1,
                    "sorted_symbols": 1,
                    "sorted_symbols_ptr": 1,
                    "stack_arg2": 1,
                    "stack_argument2": 1,
                    "stack_pointer1": 1,
                    "stack_value2": 4,
                    "stack_var2": 1,
                    "stack_var_2": 1,
                    "stack_variable2": 3,
                    "stack_variable_10": 1,
                    "stack_variable_2": 1,
                    "symbol_table": 1,
                    "undefined8_stack_var2": 1,
                    "variable_stack2": 1
                },
                "in_stack_00000018": {
                    "in_stack_00000018": 1,
                    "in_stack_24": 1,
                    "parameter3": 1,
                    "pointer_array2": 1,
                    "pointer_unsigned_long_17": 1,
                    "ptr_stack18": 1,
                    "stack_arg3": 1,
                    "stack_data": 1,
                    "stack_pointer2": 1,
                    "stack_value3": 4,
                    "stack_var3": 1,
                    "stack_var_3": 1,
                    "stack_variable3": 3,
                    "stack_variable_18": 1,
                    "stack_variable_3": 1,
                    "symbol": 1,
                    "symbol_data_ptr": 1,
                    "symbol_locations": 1,
                    "symbol_ptr": 1,
                    "unaff_rbx_copy": 1,
                    "undefined8_stack_var3": 1,
                    "variable_stack3": 1
                },
                "in_stack_00000038": {
                    "data_size": 1,
                    "element_arguments": 1,
                    "in_stack_00000038": 1,
                    "in_stack_56": 1,
                    "parameter4": 1,
                    "size_attributes": 1,
                    "size_offset": 1,
                    "stack_arg4": 1,
                    "stack_index": 1,
                    "stack_value2": 1,
                    "stack_value4": 4,
                    "stack_var4": 1,
                    "stack_var_4": 1,
                    "stack_variable4": 3,
                    "stack_variable_38": 1,
                    "stack_variable_4": 1,
                    "symbol_size": 1,
                    "symbol_sort_function_size": 1,
                    "undefined8_stack_var4": 1,
                    "unsigned_long_variable_5": 1,
                    "var2": 1,
                    "variable_stack4": 1
                },
                "in_stack_00000040": {
                    "dynamic_memory_allocation": 1,
                    "in_stack_00000040": 1,
                    "in_stack_64": 1,
                    "input_data": 1,
                    "lto_object": 1,
                    "lto_plugin_data": 1,
                    "parameter5": 1,
                    "ptr_stack40": 1,
                    "realloc_ptr": 1,
                    "some_data_2": 1,
                    "stack_arg5": 1,
                    "stack_pointer3": 1,
                    "stack_value5": 4,
                    "stack_var5": 1,
                    "stack_var_5": 1,
                    "stack_variable5": 3,
                    "stack_variable_40": 1,
                    "stack_variable_5": 1,
                    "temp_memory": 1,
                    "variable_stack5": 1,
                    "void_ptr_variable": 1,
                    "void_stack_var": 1
                },
                "in_stack_00000048": {
                    "array_data": 1,
                    "in_stack_00000048": 1,
                    "in_stack_72": 1,
                    "other_data": 1,
                    "output_data": 1,
                    "parameter6": 1,
                    "pointer_array_result": 1,
                    "pointer_unsigned_long_18": 1,
                    "ptr_stack48": 1,
                    "sorted_translations": 1,
                    "stack_arg6": 1,
                    "stack_pointer4": 1,
                    "stack_value6": 4,
                    "stack_var6": 1,
                    "stack_var_6": 1,
                    "stack_variable6": 3,
                    "stack_variable_48": 1,
                    "stack_variable_6": 1,
                    "symbol_data": 1,
                    "symbol_data_ptr": 1,
                    "undefined8_stack_var5": 1,
                    "variable_stack6": 1
                },
                "lVar7": {
                    "long_value": 3,
                    "long_var": 9,
                    "long_variable": 5,
                    "long_variable_7": 1,
                    "loop_counter": 5,
                    "loop_counter2": 1,
                    "result_value": 1,
                    "symbol_data_size": 1,
                    "symbol_index": 1,
                    "symbol_value": 1
                },
                "lVar9": {
                    "found_symbol_size": 1,
                    "function_address": 1,
                    "length_value": 1,
                    "long_value2": 3,
                    "long_var1": 1,
                    "long_var2": 5,
                    "long_var_1": 1,
                    "long_var_2": 2,
                    "long_variable2": 3,
                    "long_variable_2": 2,
                    "long_variable_9": 1,
                    "loop_counter": 1,
                    "pointer_offset": 1,
                    "symbol_size": 1,
                    "temp_long_var": 1
                },
                "pcVar1": {
                    "char_pointer": 2,
                    "char_pointer1": 1,
                    "char_ptr1": 1,
                    "character_pointer": 1,
                    "character_pointer_1": 1,
                    "current_char": 1,
                    "function_pointer": 1,
                    "pc_var": 1,
                    "pointer1": 2,
                    "pointer_char_1": 1,
                    "pointer_to_char": 1,
                    "pointer_to_char1": 1,
                    "pointer_to_symbol_name": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "string_value": 1,
                    "symbol_name": 8,
                    "symbol_name_char": 1
                },
                "pcVar2": {
                    "code_pointer": 2,
                    "func_ptr": 1,
                    "function_pointer": 6,
                    "function_pointer_1": 1,
                    "function_pointer_2": 1,
                    "function_ptr": 2,
                    "pointer2": 2,
                    "pointer_to_code": 2,
                    "pointer_to_function": 1,
                    "print_func": 1,
                    "print_symbol": 3,
                    "print_symbol_func": 1,
                    "print_symbol_function": 1,
                    "symbol_function": 1,
                    "symbol_printing_function": 1
                },
                "pcVar3": {
                    "char_flag": 1
                },
                "puVar10": {
                    "lto_object_handle": 1,
                    "matching_symbol_data": 1,
                    "pointer_offset_result": 1,
                    "pointer_to_undefined8_2": 1,
                    "pointer_to_unsigned8_2": 1,
                    "pointer_unsigned_long_2": 1,
                    "pointer_value2": 3,
                    "pointer_var2": 4,
                    "pointer_variable2": 3,
                    "pointer_variable_10": 1,
                    "pointer_variable_2": 2,
                    "prev_symbol_info": 1,
                    "ptr2": 1,
                    "ptr_var10": 1,
                    "ptr_var2": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temporary_ptr": 1
                },
                "puVar11": {
                    "current": 1,
                    "current_symbol_data": 1,
                    "pointer_result": 1,
                    "pointer_to_undefined8_3": 1,
                    "pointer_to_unsigned8_3": 1,
                    "pointer_unsigned_long_3": 1,
                    "pointer_value3": 2,
                    "pointer_var3": 3,
                    "pointer_variable4": 2,
                    "pointer_variable_11": 1,
                    "pointer_variable_3": 2,
                    "ptr5": 1,
                    "ptr_var3": 1,
                    "symbol_info": 3,
                    "symbol_table": 1,
                    "temp_pointer3": 1,
                    "temp_ptr2": 1,
                    "variable2": 1,
                    "variable_1": 1
                },
                "puVar12": {
                    "base_pointer": 1,
                    "current_argument": 1,
                    "current_element": 1,
                    "current_symbol": 1,
                    "end": 1,
                    "plugin_data": 1,
                    "pointer1": 1,
                    "pointer_to_undefined8_4": 1,
                    "pointer_to_unsigned8_4": 1,
                    "pointer_unsigned_long_4": 1,
                    "pointer_value4": 1,
                    "pointer_var4": 3,
                    "pointer_variable5": 2,
                    "pointer_variable_12": 1,
                    "pointer_variable_4": 2,
                    "ptr6": 1,
                    "ptr_var4": 1,
                    "register_bp": 1,
                    "symbol_data_array": 1,
                    "symbol_entry": 1,
                    "temp_ptr3": 1,
                    "variable3": 1,
                    "variable_2": 1
                },
                "puVar13": {
                    "loop_counter1": 1,
                    "lto_data": 1,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer_to_undefined8_5": 1,
                    "pointer_to_unsigned8_5": 1,
                    "pointer_unsigned_long_5": 1,
                    "pointer_value4": 1,
                    "pointer_value5": 1,
                    "pointer_var5": 3,
                    "pointer_variable6": 2,
                    "pointer_variable_13": 1,
                    "pointer_variable_5": 2,
                    "ptr7": 1,
                    "ptr_var5": 1,
                    "second_symbol_ptr": 1,
                    "symbol1": 1,
                    "temp_ptr4": 1,
                    "variable4": 1,
                    "variable_4": 1
                },
                "puVar14": {
                    "loop_counter2": 1,
                    "num_symbols": 1,
                    "plugin_data": 1,
                    "pointer2": 1,
                    "pointer_result": 1,
                    "pointer_to_unsigned8_6": 1,
                    "pointer_unsigned_long_6": 1,
                    "pointer_value5": 1,
                    "pointer_value6": 1,
                    "pointer_var6": 3,
                    "pointer_variable7": 1,
                    "pointer_variable8": 1,
                    "pointer_variable_6": 1,
                    "ptr8": 1,
                    "ptr_var6": 1,
                    "symbol2": 1,
                    "temp_ptr5": 1,
                    "variable5": 1,
                    "variable_5": 1
                },
                "puVar15": {
                    "allocated_memory": 1,
                    "pointer3": 1,
                    "pointer_result": 1,
                    "pointer_to_unsigned8_7": 1,
                    "pointer_unsigned_long_8": 1,
                    "pointer_value6": 1,
                    "pointer_value7": 1,
                    "pointer_var7": 2,
                    "pointer_variable10": 1,
                    "pointer_variable_15": 1,
                    "pointer_variable_6": 1,
                    "pointer_variable_7": 1,
                    "ptr9": 1,
                    "ptr_var7": 1,
                    "sorted_array": 1,
                    "sorted_symbol_data_array": 1,
                    "sorted_symbols": 3,
                    "symbols": 1,
                    "temp_ptr6": 1,
                    "variable6": 1,
                    "variable_3": 1
                },
                "puVar8": {
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "plugin": 1,
                    "plugin_function": 2,
                    "pointer1": 1,
                    "pointer_to_undefined8": 1,
                    "pointer_to_unsigned8": 1,
                    "pointer_unsigned_long_1": 1,
                    "pointer_value": 3,
                    "pointer_var": 1,
                    "pointer_var1": 3,
                    "pointer_variable": 2,
                    "pointer_variable1": 2,
                    "pointer_variable_1": 1,
                    "pointer_variable_8": 1,
                    "ptr_value": 1,
                    "ptr_var1": 1,
                    "ptr_var8": 1,
                    "result": 1,
                    "result_ptr": 1,
                    "symbol_data": 1,
                    "temp_pointer": 1
                },
                "puVar9": {
                    "check_symbol_function": 1,
                    "pointer2": 1,
                    "ptr1": 1,
                    "tmp_address2": 1
                },
                "uVar18": {
                    "is_lto_object": 1,
                    "is_plugin_needed": 1,
                    "length_result": 1,
                    "return_check": 1,
                    "temp_result": 1,
                    "temp_var": 1,
                    "uint_var2": 1,
                    "ulong_value": 1,
                    "ulong_var": 1,
                    "ulong_var2": 2,
                    "unsigned_long_value3": 1,
                    "unsigned_long_var": 1,
                    "unsigned_long_var_2": 1,
                    "unsigned_long_variable_18": 1,
                    "unsigned_long_variable_3": 1,
                    "unsigned_value3": 1,
                    "unsigned_var": 1,
                    "unsigned_var2": 1,
                    "unsigned_variable3": 3,
                    "unsigned_variable_3": 1
                },
                "uVar5": {
                    "boolean_result": 1,
                    "boolean_value": 1,
                    "check_result": 1,
                    "comparison_flag": 1,
                    "comparison_result": 1,
                    "is_correct_version": 1,
                    "is_gnu_lto_slim": 1,
                    "is_lto_object": 1,
                    "is_lto_slim": 1,
                    "is_match": 1,
                    "temp_var_2": 1,
                    "uint_var": 5,
                    "unsigned_int_value": 1,
                    "unsigned_integer_var": 2,
                    "unsigned_integer_variable": 1,
                    "unsigned_integer_variable_5": 1,
                    "unsigned_value": 2,
                    "unsigned_var": 1,
                    "unsigned_variable": 4
                },
                "uVar6": {
                    "eight_byte_value": 1,
                    "error_message": 3,
                    "error_string": 2,
                    "localized_string": 1,
                    "result_var": 1,
                    "return_value": 2,
                    "temp_var_3": 1,
                    "translation": 2,
                    "ulong_var": 3,
                    "undefined8_var": 1,
                    "undefined_var": 1,
                    "unsigned_long_value": 1,
                    "unsigned_long_var": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_long_variable_6": 1,
                    "unsigned_value2": 1,
                    "unsigned_var": 1,
                    "unsigned_variable2": 3,
                    "unsigned_variable_2": 1
                },
                "unaff_R12": {
                    "count": 1,
                    "iteration_counter": 1,
                    "length": 1,
                    "num_copies": 1,
                    "num_elements": 2,
                    "num_symbols": 2,
                    "number_symbols": 1,
                    "pointer4": 1,
                    "pointer_r12": 2,
                    "pointer_unsigned_long_12": 1,
                    "pointer_variable_r12": 1,
                    "ptr_r12": 1,
                    "reg_r12": 1,
                    "register_r12": 5,
                    "register_value3": 1,
                    "register_var3": 1,
                    "register_variable3": 1,
                    "size_pointer": 1,
                    "translation_count": 1,
                    "unaff_r12": 1,
                    "unaffected_register_12": 1,
                    "unaffected_register_r12": 1
                },
                "unaff_R13": {
                    "iter_symbol_ptr": 1,
                    "iterator1": 1,
                    "pointer": 1,
                    "pointer3": 1,
                    "pointer_r13": 2,
                    "pointer_unsigned_long_13": 1,
                    "pointer_variable_r13": 1,
                    "ptr_r13": 1,
                    "reg_r13": 1,
                    "register_r13": 5,
                    "register_value4": 1,
                    "register_var4": 1,
                    "register_variable4": 1,
                    "source_offset": 1,
                    "source_pointer": 2,
                    "source_pointer1": 1,
                    "src_ptr": 1,
                    "symbol_data": 1,
                    "symbol_data_pointer1": 1,
                    "symbol_iterator": 1,
                    "symbol_table": 1,
                    "unaff_r13": 1,
                    "unaffected_register_13": 1,
                    "unaffected_register_r13": 1
                },
                "unaff_R14": {
                    "block_size": 1,
                    "chunk_size": 1,
                    "copy_size": 1,
                    "element_count": 1,
                    "increments": 1,
                    "iterator2": 1,
                    "pointer6": 1,
                    "pointer_r14": 2,
                    "pointer_unsigned_long_14": 1,
                    "pointer_variable_r14": 1,
                    "ptr_r14": 1,
                    "reg_r14": 1,
                    "register_r14": 5,
                    "register_value5": 1,
                    "register_var5": 1,
                    "register_variable5": 1,
                    "size_value1": 1,
                    "symbol_count": 1,
                    "symbol_data_pointer2": 1,
                    "symbol_end": 1,
                    "symbol_size": 1,
                    "unaff_r14": 1,
                    "unaffected_register_14": 1,
                    "unaffected_register_r14": 1
                },
                "unaff_R15": {
                    "iterator3": 1,
                    "plugin_handle": 1,
                    "pointer": 1,
                    "pointer5": 1,
                    "pointer_r15": 2,
                    "pointer_unsigned_long_15": 1,
                    "pointer_variable_r15": 1,
                    "print_data": 1,
                    "ptr_r15": 1,
                    "reg_r15": 1,
                    "register_r15": 5,
                    "register_value6": 1,
                    "register_var6": 1,
                    "register_variable6": 1,
                    "source_pointer2": 1,
                    "symbol_data": 1,
                    "symbol_data_pointer3": 1,
                    "symbol_sort_function": 1,
                    "temporary_data": 1,
                    "tmp_address": 1,
                    "unaff_r15": 1,
                    "unaffected_register_15": 1,
                    "unaffected_register_r15": 1
                },
                "unaff_RBP": {
                    "array": 1,
                    "base_pointer": 2,
                    "base_pointer2": 1,
                    "bfd": 1,
                    "binary_data": 1,
                    "destination": 1,
                    "frame_pointer": 1,
                    "function_arguments": 1,
                    "function_parameters": 1,
                    "header_data": 1,
                    "pointer2": 1,
                    "pointer_rbp": 2,
                    "pointer_unsigned_long_11": 1,
                    "pointer_variable_rbp": 1,
                    "ptr4": 1,
                    "ptr_rbp": 1,
                    "reg_rbp": 1,
                    "register_bp": 3,
                    "register_rbp": 1,
                    "register_value2": 1,
                    "register_var2": 1,
                    "register_variable2": 1,
                    "unaff_rbp": 1,
                    "unaffected_register_bp": 2
                },
                "unaff_RBX": {
                    "current_symbol": 1,
                    "destination_pointer": 3,
                    "destination_pointer1": 1,
                    "dst_ptr": 1,
                    "pointer1": 1,
                    "pointer_rbx": 2,
                    "pointer_unsigned_long_10": 1,
                    "pointer_variable_rbx": 1,
                    "ptr3": 1,
                    "ptr_rbx": 1,
                    "reg_rbx": 1,
                    "register_bx": 4,
                    "register_rbx": 1,
                    "register_value1": 1,
                    "register_var1": 1,
                    "register_variable1": 1,
                    "source": 1,
                    "symbol_data_pointer": 1,
                    "symbol_location": 1,
                    "symbol_ptr": 1,
                    "symbol_table_entry": 1,
                    "unaff_rbx": 1,
                    "unaffected_register_bx": 2
                },
                "unaff_retaddr": {
                    "buffer_size": 1,
                    "dummy_ret": 1,
                    "register_ret_addr": 1,
                    "register_retaddr": 1,
                    "ret_addr": 2,
                    "ret_addr_var": 1,
                    "ret_address": 1,
                    "return_address": 11,
                    "returned_address": 1,
                    "u_var18": 1,
                    "ulong_ret_addr": 1,
                    "unaff_retaddr": 2,
                    "unaffected_register_retaddr": 1,
                    "unaffected_ret_addr": 1,
                    "unaffected_return_address": 1,
                    "unsigned_long_value2": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_long_variable_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid process_lto_object_00102c19(void)\n\n{\n  char *symbol_name;\n  code *function_pointer;\n  char char_var;\n  int comparison_result;\n  uint uint_var;\n  undefined8 unsigned_variable2;\n  long long_var;\n  undefined8 *pointer_value;\n  long long_var2;\n  undefined8 *pointer_var2;\n  undefined8 *register_bx;\n  undefined8 *pointer_variable3;\n  undefined8 *register_bp;\n  undefined8 *symbol_info;\n  undefined8 *pointer_var4;\n  undefined8 *register_r8;\n  undefined8 *pointer_var5;\n  undefined8 *register_r9;\n  undefined8 *pointer_var6;\n  undefined8 *register_r12;\n  undefined8 *sorted_symbols;\n  undefined8 *register_r13;\n  undefined8 *register_r14;\n  undefined8 *register_r15;\n  bool bool_var;\n  byte byte_var;\n  ulong return_address;\n  ulong unsigned_variable3;\n  undefined8 stack_value1;\n  undefined8 *stack_value2;\n  undefined8 *stack_value3;\n  undefined8 stack_value4;\n  void *stack_value5;\n  undefined8 *stack_value6;\n  \n  byte_var = 0;\n  if (_DAT_0010b760 == 0) goto LAB_001049c3;\nLAB_00104a7b:\n  do {\n    if (register_bx != register_r13) {\n      if (register_r14 == (undefined8 *)0x8) {\n        *register_bx = *register_r13;\n        process_symbols_001049c0();\n        return;\n      }\n      for (; register_r14 != (undefined8 *)0x0; register_r14 = (undefined8 *)((long)register_r14 + -1)) {\n        *(undefined *)register_bx = *(undefined *)register_r13;\n        register_r13 = (undefined8 *)((long)register_r13 + (ulong)byte_var * -2 + 1);\n        register_bx = (undefined8 *)((long)register_bx + (ulong)byte_var * -2 + 1);\n      }\n      process_symbols_001049c0();\n      return;\n    }\n    register_bx = (undefined8 *)((long)register_bx + (long)register_r14);\nLAB_001049c3:\n    do {\n      do {\n        register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n        sorted_symbols = register_r12;\n        pointer_var4 = register_bp;\n        if (register_r12 <= register_r13) goto LAB_00104b15;\nLAB_001049cf:\n        pointer_value = (undefined8 *)\n                 (**(code **)(register_bp[1] + 0x270))\n                           (register_bp,return_address & 0xffffffff,register_r13,register_r15);\n        symbol_info = register_bp;\n        pointer_var4 = register_r13;\n        sorted_symbols = register_r15;\n        if (pointer_value == (undefined8 *)0x0) goto LAB_00102eb0;\n        symbol_name = (char *)pointer_value[1];\n        if (((symbol_name == (char *)0x0) || (*symbol_name != '_')) || (symbol_name[1] != '_')) {\nLAB_00104a03:\n          if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uint_var = (uint)(pointer_value[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uint_var != 0) goto LAB_00104a2d;\n          register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n          sorted_symbols = register_r12;\n          pointer_var4 = register_bp;\n          if (register_r12 <= register_r13) {\nLAB_00104b15:\n            register_bx = (undefined8 *)((long)register_bx - (long)stack_value3);\n            if (register_r14 == (undefined8 *)0x8) {\n              long_var2 = pointer_var4[1];\n              symbol_info = (undefined8 *)((long)register_bx + 7);\n              if (-1 < (long)register_bx) {\n                symbol_info = register_bx;\n              }\n              register_r8 = (undefined8 *)(ulong)DAT_0010b800;\n              function_pointer = *(code **)(long_var2 + 0x208);\n              symbol_info = (undefined8 *)((long)symbol_info >> 3);\n            }\n            else {\n              symbol_info = (undefined8 *)((long)register_bx / (long)register_r14);\n              long_var2 = pointer_var4[1];\n              function_pointer = *(code **)(long_var2 + 0x208);\n            }\n            register_bp = pointer_var4;\n            if (DAT_0010b800 == 0) {\n              DAT_0010b778 = DAT_0010b80c != 0;\n              DAT_0010b780 = pointer_var4;\n              DAT_0010b770 = (undefined8 *)(*function_pointer)(pointer_var4);\n              DAT_0010b768 = (undefined8 *)(**(code **)(pointer_var4[1] + 0x208))(pointer_var4);\n              register_bx = stack_value6;\n              if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n                bfd_fatal(*pointer_var4);\n                pointer_variable3 = register_r15;\n                goto LAB_00102d8e;\n              }\n              register_r12 = (undefined8 *)(ulong)stack_value4._4_4_;\n              if (DAT_0010b7f8 != 0) {\n                unsigned_variable3 = (ulong)(DAT_0010b80c != 0);\n                qsort(stack_value6,(size_t)symbol_info,(size_t)register_r12,size_forward1);\n                sorted_symbols = (undefined8 *)xmalloc((long)symbol_info << 4);\n                pointer_var5 = DAT_0010b770;\n                register_bp = DAT_0010b768;\n                register_r14 = (undefined8 *)((long)symbol_info * (long)register_r12 + (long)register_bx);\n                pointer_value = DAT_0010b770;\n                register_r9 = DAT_0010b768;\n                if (register_r14 <= register_bx) goto LAB_00102ec2;\n                symbol_info = (undefined8 *)\n                          (**(code **)(pointer_var4[1] + 0x270))(pointer_var4,unsigned_variable3 & 0xffffffff,register_bx);\n                pointer_variable3 = register_bx;\n                register_r8 = register_r12;\n                stack_value2 = sorted_symbols;\n                if (symbol_info == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(stack_value6,(size_t)symbol_info,(size_t)register_r12,\n                    (__compar_fn_t)\n                    (&PTR_non_numeric_forward_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]\n                   );\n              long_var2 = pointer_var4[1];\n            }\n            pointer_variable3 = (undefined8 *)0x0;\n            do {\n              pointer_var4 = stack_value6;\n              pointer_value = (undefined8 *)(ulong)DAT_0010b7f8;\n              register_r14 = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n              if (DAT_0010b7f8 != 0) {\n                sorted_symbols = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n                if (sorted_symbols == (undefined8 *)0x0) goto LAB_00102ed2;\n                register_bx = pointer_variable3 + (long)symbol_info * 2;\n                symbol_info = pointer_variable3;\n                do {\n                  if (register_bx <= symbol_info) {\nLAB_00104c75:\n                    if (stack_value5 == (void *)0x0) {\n                      free(stack_value6);\n                      free(pointer_variable3);\n                      return;\n                    }\n                    free(stack_value5);\n                    free(stack_value6);\n                    free(pointer_variable3);\n                    return;\n                  }\n                  pointer_value = sorted_symbols;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,*symbol_info);\n                  if (long_var2 == 0) {\n                    bfd_fatal(*register_bp,0);\nLAB_00102ed2:\n                    pointer_var4 = (undefined8 *)*register_bp;\n                    bfd_fatal();\n                    pointer_var5 = register_r8;\n                    pointer_var6 = register_r9;\n                    goto LAB_00102edb;\n                  }\n                  pointer_var4 = symbol_info + 1;\n                  symbol_info = symbol_info + 2;\n                  print_symbol(register_bp,long_var2,*pointer_var4,stack_value1);\n                } while( true );\n              }\n              register_r12 = (undefined8 *)(ulong)stack_value4._4_4_;\n              register_r15 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n              if (register_r15 == (undefined8 *)0x0) {\n                bfd_fatal(*register_bp);\n                pointer_var4 = register_r12;\n                if (DAT_0010b80c == 0) {\n                  long_var2 = (**(code **)(register_bp[1] + 0x350))(register_bp);\n                  symbol_info = stack_value6;\n                  sorted_symbols = register_r12;\n                  if (long_var2 < 1) {\n                    pointer_value = (undefined8 *)0x0;\n                    register_bx = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    register_bx = (undefined8 *)xmalloc();\n                    pointer_value = (undefined8 *)(**(code **)(register_bp[1] + 0x358))(register_bp,register_bx);\n                    pointer_var4 = sorted_symbols;\n                    if ((long)pointer_value < 0) {\n                      pointer_var4 = (undefined8 *)*register_bp;\n                      symbol_info = (undefined8 *)bfd_fatal(pointer_var4,sorted_symbols);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  pointer_value = register_r12;\n                  register_bx = stack_value6;\n                  symbol_info = (undefined8 *)0x0;\n                  sorted_symbols = (undefined8 *)0x0;\n                }\n                register_r9 = &stack0x00000040;\n                register_r8 = register_bx;\n                long_var2 = (**(code **)(register_bp[1] + 0x360))(register_bp,sorted_symbols,symbol_info,pointer_value);\n                register_r12 = pointer_var4;\n                if (0 < long_var2) {\n                  register_r12 = (undefined8 *)((long)pointer_var4 + long_var2);\n                  stack_value6 = (undefined8 *)xrealloc(stack_value6);\n                  long_var = 0;\n                  do {\n                    stack_value6[(long)((long)pointer_var4 + long_var)] =\n                         (void *)(long_var * 0x30 + (long)stack_value5);\n                    long_var = long_var + 1;\n                  } while (long_var2 != long_var);\n                  stack_value6[(long)((long)pointer_var4 + long_var2)] = 0;\n                }\n                if ((DAT_0010b80c == 0) && (register_bx != (undefined8 *)0x0)) {\n                  free(register_bx);\n                }\n                if ((*(byte *)((long)register_bp + 0x4a) & 0x10) != 0) {\n                  register_bx = (undefined8 *)*register_bp;\n                  DAT_0010b230 = '\\0';\n                  unsigned_variable2 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  non_fatal(unsigned_variable2);\n                }\n                register_r14 = (undefined8 *)(ulong)stack_value4._4_4_;\n                bool_var = DAT_0010b80c != 0;\n                symbol_info = (undefined8 *)(ulong)bool_var;\n                pointer_value = stack_value6;\n                stack_value3 = stack_value6;\n                register_r15 = (undefined8 *)(**(code **)(register_bp[1] + 0x208))(register_bp);\n                if (register_r15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                symbol_info = (undefined8 *)((long)symbol_info * (long)register_r12 + (long)pointer_var4);\n                register_bx = pointer_var4;\n                while( true ) {\n                  if (symbol_info <= register_bx) goto LAB_00104c75;\n                  pointer_value = register_r15;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,register_bx);\n                  if (long_var2 == 0) break;\n                  register_bx = (undefined8 *)((long)register_bx + (long)register_r12);\n                  print_symbol(register_bp,long_var2,0,stack_value1);\n                }\n                bfd_fatal(*register_bp,0);\n              }\n              bfd_fatal(*register_bp);\n              pointer_var4 = register_bp;\n              sorted_symbols = register_r15;\nLAB_00102eb0:\n              bfd_fatal(*symbol_info);\nLAB_00102eb9:\n              bfd_fatal(*pointer_var4);\nLAB_00102ec2:\n              symbol_info = (undefined8 *)0x0;\n              pointer_variable3 = register_bx;\n              register_r8 = register_r12;\n              pointer_var5 = pointer_value;\n              register_bp = register_r9;\n              stack_value2 = sorted_symbols;\nLAB_00104e35:\n              while (register_r9 = pointer_var5, pointer_variable3 < register_r14) {\n                register_bx = (undefined8 *)((long)pointer_variable3 + (long)register_r8);\n                if (register_bx < register_r14) {\n                  pointer_value = register_bp;\n                  pointer_var5 = register_r8;\n                  pointer_var6 = register_r9;\n                  pointer_var2 = (undefined8 *)(**(code **)(pointer_var4[1] + 0x270))();\n                  if (pointer_var2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    register_r9 = pointer_var6;\n                    register_r8 = pointer_var5;\n                    pointer_var4 = (undefined8 *)*pointer_var4;\n                    pointer_var2 = (undefined8 *)bfd_fatal();\n                  }\n                  else {\n                    pointer_value = (undefined8 *)symbol_info[4];\n                    if ((*(uint *)(symbol_info + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  long_var2 = symbol_info[2];\nLAB_00102ee7:\n                  if (pointer_value == (undefined8 *)pointer_var2[4]) {\n                    long_var2 = pointer_var2[2] - long_var2;\n                    pointer_var5 = register_bp;\n                    pointer_var6 = pointer_variable3;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  long_var2 = pointer_value[8] - long_var2;\n                  pointer_var5 = register_bp;\n                  pointer_var6 = pointer_variable3;\n                }\n                else {\n                  pointer_value = (undefined8 *)symbol_info[4];\n                  if ((*(uint *)(symbol_info + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    long_var2 = symbol_info[2];\n                    pointer_var2 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  pointer_var2 = (undefined8 *)0x0;\nLAB_00104e95:\n                  pointer_var5 = register_bp;\n                  pointer_var6 = pointer_variable3;\n                  if (*(int *)(pointer_var4[1] + 8) == 5) {\n                    long_var2 = symbol_info[7];\n                  }\n                  else {\n                    long_var2 = symbol_info[2];\n                    if ((*(byte *)((long)pointer_value + 0x25) & 0x10) == 0) {\n                      if (register_bx < register_r14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                symbol_info = pointer_var2;\n                pointer_variable3 = register_bx;\n                register_bp = register_r9;\n                if (long_var2 != 0) {\n                  *sorted_symbols = pointer_var6;\n                  sorted_symbols[1] = long_var2;\n                  sorted_symbols = sorted_symbols + 2;\n                }\n              }\n              symbol_info = (undefined8 *)((long)sorted_symbols - (long)stack_value2 >> 4);\n              qsort(stack_value2,(size_t)symbol_info,0x10,size_forward2);\n              long_var2 = pointer_var4[1];\n              register_bx = pointer_variable3;\n              register_bp = pointer_var4;\n              pointer_variable3 = stack_value2;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        comparison_result = strcmp(symbol_name + (symbol_name[2] == '_'),\"__gnu_lto_slim\");\n        stack_value2 = pointer_value;\n        if (comparison_result == 0) {\n          if (DAT_0010b230 != '\\0') {\n            stack_value2 = (undefined8 *)*register_bp;\n            DAT_0010b230 = '\\0';\n            unsigned_variable2 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            non_fatal(unsigned_variable2,stack_value2);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 == 0) {\n          if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n          uint_var = (*(uint *)(pointer_value + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(pointer_value + 3) & 0x800082) == 0) && (pointer_value[4] != 0x10c2a8)) &&\n           ((*(byte *)(pointer_value[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c != 0) {\n          if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nprocess_lto_symbols_00104d5b:\n          if ((pointer_value[4] != 0x10c2a8) && (pointer_value[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(pointer_value + 3) & 4) != 0);\n      if (DAT_0010b7f8 != 0) goto process_lto_symbols_00104d5b;\nLAB_00104a53:\n      register_r9 = (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 == 0) {\n        char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n        if (char_var != '\\0') {\n          process_lto_object_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (pointer_value[4] == 0x10c2a8);\nLAB_00104cba:\n    char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n    if (char_var != '\\0') {\n      process_lto_object_00102c19();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  sorted_symbols = (undefined8 *)((long)register_r12 * (long)register_r14);\n  register_r12 = (undefined8 *)((long)stack_value3 + (long)sorted_symbols);\n  register_bx = stack_value3;\n  pointer_var4 = register_bp;\n  if (stack_value3 < register_r12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)bool_var;\n  register_r13 = stack_value3;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_lto_object_00102c19",
            "entrypoint": "0x00102c19",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c19": "process_lto_object_00102c19",
                "__ptr": "pointer_variable3",
                "bVar16": "bool_var",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "iVar4": "comparison_result",
                "in_R8": "register_r8",
                "in_R9": "register_r9",
                "in_stack_00000008": "stack_value1",
                "in_stack_00000010": "stack_value2",
                "in_stack_00000018": "stack_value3",
                "in_stack_00000038": "stack_value4",
                "in_stack_00000040": "stack_value5",
                "in_stack_00000048": "stack_value6",
                "lVar7": "long_var",
                "lVar9": "long_var2",
                "pcVar1": "symbol_name",
                "pcVar2": "function_pointer",
                "puVar10": "pointer_var2",
                "puVar11": "symbol_info",
                "puVar12": "pointer_var4",
                "puVar13": "pointer_var5",
                "puVar14": "pointer_var6",
                "puVar15": "sorted_symbols",
                "puVar8": "pointer_value",
                "uVar18": "unsigned_variable3",
                "uVar5": "uint_var",
                "uVar6": "unsigned_variable2",
                "unaff_R12": "register_r12",
                "unaff_R13": "register_r13",
                "unaff_R14": "register_r14",
                "unaff_R15": "register_r15",
                "unaff_RBP": "register_bp",
                "unaff_RBX": "register_bx",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f19": {
            "additional_data": {
                "DAT_0010b7a8": {
                    "size_flag": 2
                },
                "DAT_0010b7e8": {
                    "undefined_symbols_flag": 2
                },
                "FUN_00102f19": {
                    "print_symbol_info": 4,
                    "print_symbol_information": 6,
                    "print_symbol_list": 1,
                    "print_symbol_table": 2,
                    "print_symbols": 11,
                    "print_symbols_from_binary": 1,
                    "print_symbols_info": 1,
                    "print_symbols_information": 1,
                    "print_undefined_symbols": 4
                },
                "dcgettext": {
                    "get_locale_string": 1,
                    "get_translated_string": 4,
                    "get_translated_text": 2,
                    "translate": 1,
                    "translate_message": 1,
                    "translate_text": 1
                },
                "param_1": {
                    "file_name": 7,
                    "file_path": 4,
                    "filename": 10,
                    "source_file_path": 1,
                    "symbol_file": 4,
                    "symbol_file_path": 3,
                    "symbol_name": 1,
                    "symbol_path": 1
                },
                "pcVar1": {
                    "format_string": 16,
                    "header_format": 1,
                    "message": 8,
                    "message_format": 1,
                    "message_string": 2,
                    "message_template": 1,
                    "text": 1,
                    "title": 1
                },
                "pcVar2": {
                    "symbol_header": 1
                },
                "pcVar3": {
                    "symbol_body": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted_string": 1,
                    "print_message": 1,
                    "print_output": 1
                }
            },
            "called": [
                "FUN_00102150",
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\nvoid print_undefined_symbols_00102f19(undefined8 filename)\n\n{\n  char *format_string;\n  \n  format_string = \"\\n\\nUndefined symbols from %s:\\n\\n\";\n  if (DAT_0010b7e8 == 0) {\n    format_string = \"\\n\\nSymbols from %s:\\n\\n\";\n  }\n  format_string = (char *)get_translated_string(0,format_string,5);\n  print(format_string,filename);\n  format_string = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 != 0x20) {\n    format_string = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  format_string = (char *)get_translated_string(0,format_string,5);\n  print(format_string);\n  return;\n}\n\n",
            "current_name": "print_undefined_symbols_00102f19",
            "entrypoint": "0x00102f19",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f19": "print_undefined_symbols_00102f19",
                "dcgettext": "get_translated_string",
                "param_1": "filename",
                "pcVar1": "format_string",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f7b": {
            "additional_data": {
                "DAT_0010b818": {
                    "check_flag": 1,
                    "condition": 1,
                    "condition2": 1,
                    "condition_2": 2,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_unset": 1,
                    "is_disabled": 1,
                    "is_not_valid_flag": 1,
                    "is_print_disabled": 1,
                    "other_flag": 1
                },
                "FUN_00102f7b": {
                    "print_if_condition_met": 5,
                    "print_if_condition_true": 1,
                    "print_if_conditions_met": 2,
                    "print_if_enabled": 3,
                    "print_if_flag_not_set": 3,
                    "print_if_flag_set": 6,
                    "print_if_global_enabled": 1,
                    "print_if_not_debug_mode": 1,
                    "print_if_not_loading": 1,
                    "print_if_possible": 1,
                    "print_if_ready": 1,
                    "print_if_valid": 2,
                    "print_message": 2,
                    "print_message_if_enabled": 2
                },
                "_DAT_0010b7c4": {
                    "condition1": 1,
                    "condition_1": 2,
                    "flag": 3,
                    "flag1": 1,
                    "flag_1": 1,
                    "flag_set": 1,
                    "is_enabled": 1,
                    "is_flag_set": 1,
                    "is_valid_flag": 1
                },
                "param_1": {
                    "message": 31
                },
                "param_10": {
                    "unused_param": 1
                },
                "param_11": {
                    "unused_param": 1
                },
                "param_12": {
                    "unused_param": 1
                },
                "param_13": {
                    "unused_param": 1
                },
                "param_14": {
                    "unused_param": 1
                },
                "param_15": {
                    "unused_param": 1
                },
                "param_16": {
                    "unused_param": 1
                },
                "param_17": {
                    "unused_param": 1
                },
                "param_18": {
                    "unused_param": 1
                },
                "param_19": {
                    "unused_param": 1
                },
                "param_2": {
                    "unused_param": 1
                },
                "param_20": {
                    "unused_param": 1
                },
                "param_21": {
                    "unused_param": 1
                },
                "param_22": {
                    "unused_param": 1
                },
                "param_23": {
                    "unused_param": 1
                },
                "param_24": {
                    "unused_param": 1
                },
                "param_25": {
                    "unused_param": 1
                },
                "param_26": {
                    "unused_param": 1
                },
                "param_27": {
                    "unused_param": 1
                },
                "param_28": {
                    "unused_param": 1
                },
                "param_29": {
                    "unused_param": 1
                },
                "param_3": {
                    "unused_param": 1
                },
                "param_30": {
                    "unused_param": 1
                },
                "param_31": {
                    "unused_param": 1
                },
                "param_32": {
                    "unused_param": 1
                },
                "param_33": {
                    "unused_param": 1
                },
                "param_34": {
                    "unused_param": 1
                },
                "param_35": {
                    "unused_param": 1
                },
                "param_36": {
                    "unused_param": 1
                },
                "param_37": {
                    "unused_param": 1
                },
                "param_38": {
                    "unused_param": 1
                },
                "param_39": {
                    "unused_param": 1
                },
                "param_4": {
                    "unused_param": 1
                },
                "param_40": {
                    "unused_param": 1
                },
                "param_41": {
                    "unused_param": 1
                },
                "param_42": {
                    "unused_param": 1
                },
                "param_43": {
                    "unused_param": 1
                },
                "param_44": {
                    "unused_param": 1
                },
                "param_45": {
                    "unused_param": 1
                },
                "param_46": {
                    "unused_param": 1
                },
                "param_47": {
                    "unused_param": 1
                },
                "param_48": {
                    "unused_param": 1
                },
                "param_49": {
                    "unused_param": 1
                },
                "param_5": {
                    "unused_param": 1
                },
                "param_50": {
                    "unused_param": 1
                },
                "param_51": {
                    "unused_param": 1
                },
                "param_52": {
                    "unused_param": 1
                },
                "param_53": {
                    "unused_param": 1
                },
                "param_54": {
                    "unused_param": 1
                },
                "param_55": {
                    "unused_param": 1
                },
                "param_56": {
                    "unused_param": 1
                },
                "param_57": {
                    "unused_param": 1
                },
                "param_58": {
                    "unused_param": 1
                },
                "param_59": {
                    "unused_param": 1
                },
                "param_6": {
                    "unused_param": 1
                },
                "param_60": {
                    "unused_param": 1
                },
                "param_61": {
                    "unused_param": 1
                },
                "param_62": {
                    "unused_param": 1
                },
                "param_63": {
                    "unused_param": 1
                },
                "param_64": {
                    "unused_param": 1
                },
                "param_7": {
                    "unused_param": 1
                },
                "param_8": {
                    "unused_param": 1
                },
                "param_9": {
                    "unused_param": 1
                },
                "param_n": {
                    "unused_param": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted_message": 1
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\n\n\nvoid print_if_flag_not_set_00102f7b(undefined8 message)\n\n{\n  if ((_DAT_0010b7c4 != 0) && (DAT_0010b818 == 0)) {\n    print_formatted_message(\"%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_if_flag_not_set_00102f7b",
            "entrypoint": "0x00102f7b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f7b": "print_if_flag_not_set_00102f7b",
                "param_1": "message",
                "printf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f9f": {
            "additional_data": {
                "FUN_00102f9f": {
                    "bfd_fatal_error": 1,
                    "decode_error_message": 1,
                    "decoding_failed": 1,
                    "decompile_and_fatal_error": 1,
                    "decompiled_function": 1,
                    "extract_and_fatal_error": 1,
                    "extract_binary_data": 1,
                    "extract_data_from_binary": 1,
                    "extract_retaddr": 1,
                    "handle_fatal_error": 2,
                    "initialize_and_fatal_error": 1,
                    "initialize_bfd": 1,
                    "initialize_system": 1,
                    "load_and_return_address": 1,
                    "read_binary_and_print_error": 1,
                    "reverse_bfd_fatal": 2,
                    "reverse_binary": 1,
                    "reverse_binary_error": 1,
                    "reverse_codesegment": 1
                },
                "FUN_00106530": {
                    "do_something": 1,
                    "initialize_logging": 1
                },
                "auVar1": {
                    "auxiliary_variable": 1,
                    "decoded_error": 1,
                    "extracted_data": 1,
                    "result": 12,
                    "ret_val": 1,
                    "return_value": 6,
                    "reversed_bytes": 1,
                    "stack_frame": 1,
                    "temp_variable": 1
                },
                "unaff_retaddr": {
                    "caller_address": 1,
                    "retrieved_return_address": 1,
                    "return_address": 27
                }
            },
            "called": [
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00104fa0"
            ],
            "code": "\nundefined  [16] extract_and_fatal_error_00102f9f(void)\n\n{\n  undefined result [16];\n  undefined8 return_address;\n  \n  bfd_fatal(*DAT_0010b780);\n  result._8_8_ = return_address;\n  result._0_8_ = 0xffffffff;\n  return result;\n}\n\n",
            "current_name": "extract_and_fatal_error_00102f9f",
            "entrypoint": "0x00102f9f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f9f": "extract_and_fatal_error_00102f9f",
                "auVar1": "result",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fc3": {
            "additional_data": {
                "FUN_00102fc3": {
                    "analyze_binary": 1,
                    "check_and_compare_versions": 1,
                    "check_binary_compatibility": 4,
                    "check_binary_compilability": 1,
                    "check_binary_compilation": 1,
                    "check_binary_compiled_with_gcc": 1,
                    "check_compatibility": 1,
                    "check_compiled_files": 1,
                    "check_compiled_flags": 1,
                    "check_compiled_status": 3,
                    "check_compiled_versions": 1,
                    "check_compiler_extension": 1,
                    "check_compiler_version": 1,
                    "check_file_compatibility": 3,
                    "check_file_extension": 1,
                    "check_file_extensions": 1,
                    "check_file_version": 1,
                    "parse_binary": 1,
                    "validate_binary_compatibility": 1
                },
                "__s": {
                    "binary_string": 1,
                    "file1_content": 2,
                    "file1_str": 1,
                    "file1_string": 1,
                    "file_1_contents": 1,
                    "file_1_name": 1,
                    "file_extension_1": 1,
                    "first_binary": 1,
                    "first_declaration": 1,
                    "source_file_1": 1,
                    "source_file_path": 2,
                    "str1": 6,
                    "string1": 8,
                    "string_1": 2,
                    "symbol1": 1
                },
                "__s_00": {
                    "file2_content": 2,
                    "file2_str": 1,
                    "file2_string": 1,
                    "file_2_contents": 1,
                    "file_2_name": 1,
                    "file_extension_2": 1,
                    "object_string": 1,
                    "second_binary": 1,
                    "second_declaration": 1,
                    "source_file_2": 1,
                    "str2": 6,
                    "string2": 8,
                    "string_2": 2,
                    "symbol2": 1,
                    "target_file_path": 2
                },
                "bVar14": {
                    "comparison": 1,
                    "comparison_result": 4,
                    "flag2": 1,
                    "is_compiled": 1,
                    "is_condition_met": 1,
                    "is_equal": 3,
                    "is_less": 4,
                    "is_match": 2,
                    "is_offset_comparison_valid": 1,
                    "is_true": 1,
                    "needs_conversion": 1,
                    "result": 1
                },
                "cVar1": {
                    "last_char": 10,
                    "last_character": 5
                },
                "lVar4": {
                    "bfd_handle_1": 1,
                    "binary_info1": 1,
                    "compiler_status1": 1,
                    "data_size1": 1,
                    "file1": 2,
                    "file1_len": 1,
                    "file1_metadata": 1,
                    "file_1": 1,
                    "file_1_header": 1,
                    "file_1_info": 1,
                    "file_ptr_value1": 1,
                    "first_binary_result": 1,
                    "ptr1": 1,
                    "result1": 5,
                    "result_1": 2,
                    "source_file": 1,
                    "source_file_handle": 1,
                    "symbol1_data": 1,
                    "var3": 1
                },
                "lVar5": {
                    "bfd_handle_2": 1,
                    "binary_info2": 1,
                    "compiler_status2": 1,
                    "data_size2": 1,
                    "file2": 2,
                    "file2_len": 1,
                    "file2_metadata": 1,
                    "file_2": 1,
                    "file_2_header": 1,
                    "file_2_info": 1,
                    "file_ptr_value2": 1,
                    "ptr2": 1,
                    "result2": 5,
                    "result_2": 2,
                    "second_binary_result": 1,
                    "symbol_size2": 1,
                    "target_file": 1,
                    "target_file_handle": 1,
                    "var4": 1
                },
                "param_1": {
                    "arg1": 5,
                    "argument_1": 2,
                    "binary_data": 1,
                    "binary_file": 2,
                    "binary_file_1": 1,
                    "binary_handle": 1,
                    "binary_path": 2,
                    "file1": 4,
                    "file_info_1": 1,
                    "file_path_1": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "param1": 2,
                    "param_1": 1,
                    "parameter1": 1,
                    "ptr_binary": 1,
                    "ptr_lvar4": 1,
                    "source_file": 1
                },
                "param_2": {
                    "arg2": 5,
                    "argument_2": 2,
                    "binary_declarations": 1,
                    "binary_file_2": 1,
                    "file2": 4,
                    "file_info_2": 1,
                    "file_name": 1,
                    "file_path_2": 1,
                    "flags": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 1,
                    "object_file": 1,
                    "output_param": 1,
                    "param2": 2,
                    "param_2": 1,
                    "parameter2": 1,
                    "ptr_info": 1,
                    "ptr_lvar5": 1,
                    "symbol_name": 1,
                    "target_file": 2
                },
                "pcVar8": {
                    "compilation_tag_1": 1,
                    "compilation_type_ptr1": 1,
                    "first_substring_result": 1,
                    "found_str": 1,
                    "found_string1": 1,
                    "found_string_ptr_1": 1,
                    "gnu_compiled_ptr": 3,
                    "keyword_found": 1,
                    "match1": 3,
                    "pattern_match1": 1,
                    "ptr1": 1,
                    "ptr_gnu_compiled": 1,
                    "ptr_keyword_found": 1,
                    "search1": 1,
                    "search_result1": 1,
                    "source_file_marker": 1,
                    "source_file_substr": 1,
                    "str1_compiled": 1,
                    "str1_result": 1,
                    "str_ptr1": 1,
                    "str_ptr_1": 1,
                    "strstr_result_1": 2,
                    "substring1": 2,
                    "substring_1": 1
                },
                "pcVar9": {
                    "compilation_tag_2": 1,
                    "compilation_type_ptr2": 1,
                    "found_str_2": 1,
                    "found_string2": 1,
                    "found_string_ptr_2": 1,
                    "gcc2_compiled_ptr": 2,
                    "gcc_compiled_ptr": 1,
                    "match2": 3,
                    "pattern_match2": 1,
                    "ptr2": 1,
                    "ptr_gcc2_compiled": 1,
                    "ptr_keyword_found_gcc": 1,
                    "search2": 1,
                    "search_result2": 1,
                    "second_keyword_found": 1,
                    "second_substring_result": 1,
                    "str2_compiled": 1,
                    "str2_result": 1,
                    "str_ptr2": 1,
                    "str_ptr_2": 1,
                    "strstr_result_2": 2,
                    "substring2": 2,
                    "substring_2": 1,
                    "target_file_marker": 1,
                    "target_file_substr": 1
                },
                "sVar6": {
                    "binary_string_length": 1,
                    "file1_content_length": 1,
                    "file1_name_len": 1,
                    "file1_string_length": 1,
                    "first_binary_length": 1,
                    "first_declaration_size": 1,
                    "len1": 4,
                    "len_info1": 1,
                    "len_str1": 1,
                    "len_string1": 1,
                    "length1": 1,
                    "length_1": 2,
                    "source_file_1_len": 1,
                    "source_file_length": 1,
                    "source_file_path_length": 1,
                    "str1_length": 1,
                    "string1_length": 3,
                    "string_length1": 1,
                    "symbol1_length": 1
                },
                "sVar7": {
                    "file2_content_length": 1,
                    "file2_name_len": 1,
                    "file2_string_length": 1,
                    "len2": 4,
                    "len_info2": 1,
                    "len_str2": 1,
                    "len_string2": 1,
                    "length2": 1,
                    "length_2": 2,
                    "object_string_length": 1,
                    "second_binary_length": 1,
                    "second_declaration_size": 1,
                    "source_file_2_len": 1,
                    "str2_length": 1,
                    "string2_length": 3,
                    "string_length2": 1,
                    "symbol2_length": 1,
                    "target_file_length": 1,
                    "target_file_path_length": 1
                },
                "uVar10": {
                    "bfd_offset_1": 1,
                    "file1_compiled": 1,
                    "file1_size": 1,
                    "file1_start_offset": 1,
                    "forward1": 1,
                    "forward_result": 2,
                    "forward_value": 1,
                    "fwd_result_1": 1,
                    "non_numeric_forward_result": 1,
                    "numeric_forward_result": 1,
                    "numeric_value_1": 1,
                    "offset1": 2,
                    "result": 10,
                    "result1": 1,
                    "result1_updated": 1,
                    "return_value": 1,
                    "source_file_forward": 1,
                    "symbol_offset1": 1,
                    "val1": 2
                },
                "uVar11": {
                    "address2": 2,
                    "bfd_address_2": 1,
                    "cumulative_offset2": 1,
                    "file2_compiled": 1,
                    "file2_offset": 1,
                    "file2_start_offset": 1,
                    "file_2_offset": 1,
                    "file_offset_2": 1,
                    "forward2": 1,
                    "fwd_result_2": 1,
                    "numeric_value_2": 1,
                    "offset1": 1,
                    "offset_data2": 1,
                    "result2": 1,
                    "second_binary_address_plus_offset": 1,
                    "second_declaration_address": 1,
                    "str2_ptr": 1,
                    "string2_offset": 1,
                    "symbol_offset2": 1,
                    "target_file_forward": 1,
                    "target_file_offset_new": 1,
                    "temp1": 1,
                    "temp_value1": 1,
                    "total2": 1,
                    "val2": 1,
                    "value2": 1
                },
                "uVar12": {
                    "added_value_1": 1,
                    "addr1": 1,
                    "address1": 2,
                    "bfd_address_1": 1,
                    "calc_result_1": 1,
                    "file1_end_address": 1,
                    "file1_end_offset": 1,
                    "file1_offset": 1,
                    "file_1_offset": 1,
                    "file_offset_1": 1,
                    "first_binary_address_plus_offset": 1,
                    "first_declaration_address": 1,
                    "offset1": 1,
                    "offset2": 1,
                    "offset_data1": 1,
                    "result3": 1,
                    "source_file_offset": 1,
                    "source_file_offset_new": 1,
                    "str1_ptr": 1,
                    "string1_offset": 1,
                    "sum": 2,
                    "symbol_end1": 1,
                    "temp2": 1,
                    "temp_value2": 1,
                    "total1": 1
                },
                "uVar13": {
                    "base_address": 1,
                    "bfd": 1,
                    "bfd_data": 1,
                    "bfd_handle": 2,
                    "bfd_library_handle": 1,
                    "binary_data": 1,
                    "binary_handle": 2,
                    "compiled_data": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "file_ptr": 1,
                    "pointer": 5,
                    "ptr": 3,
                    "ptr3": 1,
                    "unk_ptr": 1,
                    "var5": 1
                },
                "uVar2": {
                    "bfd_offset_2": 1,
                    "binary_declarations_size": 1,
                    "compiled_status1": 1,
                    "file2_content_size": 1,
                    "file2_size": 2,
                    "file_2_size": 1,
                    "file_info_1_size": 1,
                    "length2": 1,
                    "offset2": 3,
                    "offset_info2": 1,
                    "result2_updated": 1,
                    "second_binary_address": 1,
                    "size_1": 1,
                    "source_file_length": 1,
                    "string2_length": 1,
                    "symbol_size1": 1,
                    "target_file_offset": 1,
                    "val2": 1,
                    "value1": 1,
                    "var1": 1,
                    "version1": 1
                },
                "uVar3": {
                    "file_2_attributes": 1,
                    "file_2_flags": 1,
                    "flag": 17,
                    "flag_result": 1,
                    "flags": 2,
                    "object_file_flags": 1,
                    "string2_flag": 1,
                    "target_file_flags": 1,
                    "var2": 1,
                    "version2": 1
                },
                "unaff_R13": {
                    "addr2": 1,
                    "bfd_handle_temp": 1,
                    "binary_data_address": 1,
                    "data_pointer": 1,
                    "file2_address": 1,
                    "file2_info": 1,
                    "file_data": 1,
                    "l_offset": 1,
                    "l_var5": 1,
                    "pointer": 1,
                    "pointer2": 2,
                    "ptr2": 2,
                    "ptr4": 1,
                    "result": 2,
                    "result_3": 1,
                    "result_ptr": 1,
                    "string1_address": 1,
                    "string2_ptr": 1,
                    "symbol2_data": 1,
                    "target_file_header": 1,
                    "target_file_offset": 1,
                    "unaff_data": 1,
                    "unaff_val": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00105050"
            ],
            "code": "\nulong check_binary_compatibility_00102fc3(undefined8 arg1,undefined8 arg2)\n\n{\n  char last_char;\n  ulong offset2;\n  char *string1;\n  char *string2;\n  uint flag;\n  long result1;\n  long result2;\n  size_t len1;\n  size_t len2;\n  char *match1;\n  char *match2;\n  ulong result;\n  ulong address2;\n  ulong sum;\n  undefined8 pointer;\n  long result;\n  bool is_less;\n  \n  pointer = *DAT_0010b780;\n  bfd_fatal();\n  result1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,pointer,DAT_0010b770);\n  result2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,arg2,DAT_0010b768);\n  if ((result1 == 0) || (result = result2, result2 == 0)) {\n    result2 = bfd_fatal(*DAT_0010b780);\n  }\n  if ((*(long *)(result1 + 0x20) == 0x10c2a8) || (*(long *)(result2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  result = *(ulong *)(*(long *)(result1 + 0x20) + 0x30);\n  offset2 = *(ulong *)(*(long *)(result2 + 0x20) + 0x30);\n  sum = *(long *)(result1 + 0x10) + result;\n  address2 = *(long *)(result + 0x10) + offset2;\n  is_less = sum < address2;\n  if ((sum != address2) || (is_less = result < offset2, result != offset2)) {\n    return (ulong)(-(uint)is_less | 1);\n  }\n  string1 = *(char **)(result1 + 8);\n  string2 = *(char **)(result + 8);\n  len1 = strlen(string1);\n  len2 = strlen(string2);\n  match1 = strstr(string1,\"gnu_compiled\");\n  if (match1 == (char *)0x0) {\n    match2 = strstr(string1,\"gcc2_compiled\");\n    match1 = strstr(string2,\"gnu_compiled\");\n    if ((match1 == (char *)0x0) && (match1 = strstr(string2,\"gcc2_compiled\"), match1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (match2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    match1 = strstr(string2,\"gnu_compiled\");\n    if (match1 == (char *)0x0) {\n      match2 = strstr(string2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (match2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(result + 0x18) & 0x4000;\n  if ((*(byte *)(result1 + 0x19) & 0x40) == 0) {\n    if ((len1 < 3) || (string1[len1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((len2 < 3) || (string2[len2 - 2] != '.')) goto LAB_00103202;\n      is_less = false;\n      goto LAB_001031e7;\n    }\n    last_char = string1[len1 - 1];\n    is_less = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((len2 < 3) || (string2[len2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (len2 < 3) {\n      return 0xffffffff;\n    }\n    if (string2[len2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_less = true;\nLAB_001031e7:\n    if ((string2[len2 - 1] != 'o') && (string2[len2 - 1] != 'a')) {\n      if (is_less) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_less) {\n    return 1;\n  }\nLAB_00103202:\n  result = non_numeric_forward(pointer,arg2);\n  return result;\n}\n\n",
            "current_name": "check_binary_compatibility_00102fc3",
            "entrypoint": "0x00102fc3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fc3": "check_binary_compatibility_00102fc3",
                "__s": "string1",
                "__s_00": "string2",
                "bVar14": "is_less",
                "cVar1": "last_char",
                "lVar4": "result1",
                "lVar5": "result2",
                "param_1": "arg1",
                "param_2": "arg2",
                "pcVar8": "match1",
                "pcVar9": "match2",
                "sVar6": "len1",
                "sVar7": "len2",
                "uVar10": "result",
                "uVar11": "address2",
                "uVar12": "sum",
                "uVar13": "pointer",
                "uVar2": "offset2",
                "uVar3": "flag",
                "unaff_R13": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd2": {
            "additional_data": {
                "BVar13": {
                    "check_string": 1
                },
                "FUN_00102fd2": {
                    "analyze_binary_files": 3,
                    "check_binary": 1,
                    "check_binary_compatibility": 3,
                    "check_binary_compiled_with_gcc": 1,
                    "check_compatibility": 5,
                    "check_compilation": 4,
                    "check_compiled_code": 1,
                    "check_compiled_code_compatibility": 1,
                    "check_compiled_files": 1,
                    "check_compiled_versions": 1,
                    "check_compiler_compatibility": 2,
                    "check_compiler_version": 1,
                    "check_compiler_versions": 1,
                    "check_file_compatibility": 2,
                    "check_file_compiled_with_gcc": 1,
                    "check_file_extension": 1,
                    "check_file_formats": 1
                },
                "__s": {
                    "binary_1_str": 1,
                    "compiler_info_1": 1,
                    "content1": 1,
                    "file1_name": 1,
                    "file1_str": 2,
                    "file1_string": 2,
                    "source1": 2,
                    "source_code1": 2,
                    "source_file_1": 1,
                    "str1": 2,
                    "str_1": 1,
                    "string1": 7,
                    "string_1": 5
                },
                "__s_00": {
                    "binary_2_str": 1,
                    "compiler_info_2": 1,
                    "content2": 1,
                    "file2_name": 1,
                    "file2_str": 2,
                    "file2_string": 2,
                    "source2": 2,
                    "source_code2": 2,
                    "source_file_2": 1,
                    "str2": 2,
                    "str_2": 1,
                    "string2": 7,
                    "string_2": 5
                },
                "bVar13": {
                    "comparison": 1,
                    "comparison_result": 1,
                    "compile_error": 1,
                    "flag2": 1,
                    "is_compatible": 2,
                    "is_compiled_with_gcc": 1,
                    "is_different": 1,
                    "is_equal": 4,
                    "is_flag_set": 1,
                    "is_forward": 1,
                    "is_greater": 2,
                    "is_less": 1,
                    "is_match": 1,
                    "is_offset_less": 1,
                    "is_true": 1,
                    "is_valid": 1
                },
                "cVar1": {
                    "compiler_extension": 1,
                    "last_char": 12,
                    "last_char_binary_1_str": 1,
                    "last_char_of_file1": 1,
                    "last_character": 2
                },
                "lVar4": {
                    "bfd_1_ptr": 1,
                    "bfd_data_1": 1,
                    "bfd_handle1": 2,
                    "bfd_status_1": 1,
                    "binary_1": 1,
                    "binary_header_1": 1,
                    "file1": 2,
                    "file1_descriptor": 1,
                    "file1_handle": 2,
                    "file1_handler": 1,
                    "file1_info": 4,
                    "file1_ptr": 1,
                    "file_1": 1,
                    "file_descriptor1": 1,
                    "file_info_1": 1,
                    "handle_1": 1
                },
                "lVar5": {
                    "bfd_2_ptr": 1,
                    "bfd_data_2": 1,
                    "bfd_handle2": 2,
                    "bfd_status_2": 1,
                    "binary_2": 1,
                    "binary_header_1_length": 1,
                    "file2": 2,
                    "file2_descriptor": 1,
                    "file2_handle": 2,
                    "file2_handler": 1,
                    "file2_info": 4,
                    "file2_ptr": 1,
                    "file_2": 1,
                    "file_descriptor2": 1,
                    "file_info_2": 1,
                    "handle_2": 1
                },
                "param_1": {
                    "binary_file1": 2,
                    "binary_file_1": 2,
                    "binary_file_path1": 1,
                    "binary_path1": 3,
                    "binary_path_1": 4,
                    "file1": 10,
                    "file_path1": 1,
                    "file_path_1": 4,
                    "input1": 1,
                    "input_file1": 1,
                    "input_param_1": 1,
                    "program_name1": 1
                },
                "param_2": {
                    "binary_file2": 2,
                    "binary_file_2": 2,
                    "binary_file_path2": 1,
                    "binary_path2": 3,
                    "binary_path_2": 4,
                    "file2": 10,
                    "file_path2": 1,
                    "file_path_2": 4,
                    "input2": 1,
                    "input_file2": 1,
                    "input_param_2": 1,
                    "program_name2": 1
                },
                "pcVar8": {
                    "binary_1_str_match": 1,
                    "comp_gnu_ptr1": 1,
                    "compilation_type": 1,
                    "compilation_type1": 2,
                    "file1_match": 1,
                    "file1_substring": 1,
                    "first_occurrence": 1,
                    "found_pattern": 1,
                    "found_substring1": 1,
                    "gcc_compiled_ptr": 1,
                    "gnu_compiled_str": 1,
                    "gnu_compiled_text": 1,
                    "match1": 1,
                    "match_string1": 1,
                    "matched_string1": 1,
                    "ptr1": 5,
                    "str": 1,
                    "str1": 1,
                    "string_ptr": 1,
                    "strstr_result_1": 2,
                    "substring1": 1,
                    "substring_1": 1,
                    "token_1": 1
                },
                "pcVar9": {
                    "binary_2_str_match": 1,
                    "comp_gnu_ptr2": 1,
                    "compilation_type2": 3,
                    "file2_match": 1,
                    "file2_substring": 1,
                    "found_pattern_2": 1,
                    "found_substring2": 1,
                    "gcc2_compiled_str": 1,
                    "gcc2_compiled_text": 1,
                    "gnu_compiled_ptr": 1,
                    "match2": 1,
                    "match_string2": 1,
                    "matched_string2": 1,
                    "ptr2": 5,
                    "second_occurrence": 1,
                    "str2": 1,
                    "str_2": 1,
                    "string_ptr2": 1,
                    "strstr_result_2": 2,
                    "substring2": 1,
                    "substring_2": 1,
                    "token_2": 1
                },
                "sVar6": {
                    "binary_1_str_len": 1,
                    "code_length1": 1,
                    "file1_len": 3,
                    "file1_length": 1,
                    "file1_name_length": 2,
                    "info_length_1": 1,
                    "length1": 5,
                    "length_1": 2,
                    "source1_length": 2,
                    "source_file_1_length": 1,
                    "source_len1": 1,
                    "str1_length": 2,
                    "str_len_1": 1,
                    "string1_length": 2,
                    "string_1_length": 2,
                    "string_length_1": 1
                },
                "sVar7": {
                    "binary_2_str_len": 1,
                    "code_length2": 1,
                    "file2_len": 3,
                    "file2_length": 1,
                    "file2_name_length": 2,
                    "info_length_2": 1,
                    "length2": 5,
                    "length_2": 2,
                    "source2_length": 2,
                    "source_file_2_length": 1,
                    "source_len2": 1,
                    "str2_length": 2,
                    "str_len_2": 1,
                    "string2_length": 2,
                    "string_2_length": 2,
                    "string_length_2": 1
                },
                "uVar10": {
                    "binary_1_end_address": 1,
                    "forward_result_file1": 1,
                    "non_numeric_result_1": 1,
                    "offset1": 4,
                    "offset_1": 1,
                    "result": 22,
                    "return_value": 1
                },
                "uVar11": {
                    "binary_2_data_end_address": 1,
                    "comparison_result": 1,
                    "data_section_end_2": 1,
                    "end1": 1,
                    "end2": 2,
                    "end_addr2": 1,
                    "end_address2": 1,
                    "end_address_2": 1,
                    "end_offset1": 1,
                    "file1_end": 1,
                    "file2_offset": 1,
                    "file2_start": 1,
                    "forward_result_file2": 1,
                    "offset1": 1,
                    "offset2": 1,
                    "offset_1": 1,
                    "other_binary_value2": 1,
                    "size_1": 1,
                    "source2_offset": 1,
                    "source_file_2_offset": 1,
                    "string_1_end": 1,
                    "string_2_offset": 1,
                    "sum1": 1,
                    "sum_1": 1,
                    "version_code1": 1
                },
                "uVar12": {
                    "binary_1_data_end_address": 1,
                    "binary_value_plus_offset": 1,
                    "data_section_end_1": 1,
                    "end1": 3,
                    "end2": 1,
                    "end_addr1": 1,
                    "end_addr_file1": 1,
                    "end_address1": 1,
                    "end_address_1": 1,
                    "end_offset2": 1,
                    "file1_offset": 1,
                    "file1_start": 1,
                    "file2_end": 1,
                    "offset1": 1,
                    "offset2": 1,
                    "offset_2": 1,
                    "size_2": 1,
                    "source1_offset": 1,
                    "source_file_1_offset": 1,
                    "start_addr1": 1,
                    "string_1_offset": 1,
                    "string_2_end": 1,
                    "sum2": 1,
                    "sum_2": 1
                },
                "uVar2": {
                    "binary_2_end_address": 1,
                    "length_2": 1,
                    "non_numeric_result_2": 1,
                    "offset2": 3,
                    "offset_2": 1,
                    "other_binary_value": 1,
                    "size2": 1,
                    "source_file_2_length": 1,
                    "start_addr_file2": 1,
                    "string_2_length": 1,
                    "version_code2": 1
                },
                "uVar3": {
                    "binary_2_flag": 1,
                    "define_flag": 1,
                    "flag": 15,
                    "flags": 6,
                    "is_flagged": 1,
                    "section_flags": 1
                },
                "unaff_R13": {
                    "bfd_data_2": 1,
                    "bfd_fatal_ptr": 1,
                    "binary2_ptr": 1,
                    "binary_2_unaff_r13": 1,
                    "binary_data_2": 2,
                    "binary_header_2": 1,
                    "elf_header2": 1,
                    "end2": 1,
                    "file2_address": 2,
                    "file2_data": 1,
                    "file2_data_offset": 1,
                    "file2_offset": 1,
                    "file_2": 1,
                    "file_descriptor3": 1,
                    "file_info_2": 1,
                    "pointer": 1,
                    "processed_file1": 1,
                    "ptr_file_2": 1,
                    "result": 2,
                    "return_val": 1,
                    "temp": 1,
                    "unaff_pointer": 1,
                    "unaff_r13": 1
                }
            },
            "called": [
                "FUN_00104fa0",
                "FUN_00106530",
                "FUN_00102070",
                "FUN_00102160",
                "FUN_00102420"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nulong check_binary_compatibility_00102fd2(undefined8 file1,undefined8 file2)\n\n{\n  char last_char;\n  ulong offset2;\n  char *string1;\n  char *string2;\n  uint flag;\n  long file1_info;\n  long file2_info;\n  size_t length1;\n  size_t length2;\n  char *ptr1;\n  char *ptr2;\n  ulong result;\n  ulong end2;\n  ulong end1;\n  long result;\n  bool is_equal;\n  \n  file1_info = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file1,DAT_0010b770);\n  file2_info = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file2,DAT_0010b768);\n  if ((file1_info == 0) || (result = file2_info, file2_info == 0)) {\n    file2_info = bfd_fatal(*DAT_0010b780);\n  }\n  if ((*(long *)(file1_info + 0x20) == 0x10c2a8) || (*(long *)(file2_info + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  result = *(ulong *)(*(long *)(file1_info + 0x20) + 0x30);\n  offset2 = *(ulong *)(*(long *)(file2_info + 0x20) + 0x30);\n  end1 = *(long *)(file1_info + 0x10) + result;\n  end2 = *(long *)(result + 0x10) + offset2;\n  is_equal = end1 < end2;\n  if ((end1 != end2) || (is_equal = result < offset2, result != offset2)) {\n    return (ulong)(-(uint)is_equal | 1);\n  }\n  string1 = *(char **)(file1_info + 8);\n  string2 = *(char **)(result + 8);\n  length1 = strlen(string1);\n  length2 = strlen(string2);\n  ptr1 = strstr(string1,\"gnu_compiled\");\n  if (ptr1 == (char *)0x0) {\n    ptr2 = strstr(string1,\"gcc2_compiled\");\n    ptr1 = strstr(string2,\"gnu_compiled\");\n    if ((ptr1 == (char *)0x0) && (ptr1 = strstr(string2,\"gcc2_compiled\"), ptr1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (ptr2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    ptr1 = strstr(string2,\"gnu_compiled\");\n    if (ptr1 == (char *)0x0) {\n      ptr2 = strstr(string2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (ptr2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(result + 0x18) & 0x4000;\n  if ((*(byte *)(file1_info + 0x19) & 0x40) == 0) {\n    if ((length1 < 3) || (string1[length1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((length2 < 3) || (string2[length2 - 2] != '.')) goto LAB_00103202;\n      is_equal = false;\n      goto LAB_001031e7;\n    }\n    last_char = string1[length1 - 1];\n    is_equal = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((length2 < 3) || (string2[length2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (length2 < 3) {\n      return 0xffffffff;\n    }\n    if (string2[length2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_equal = true;\nLAB_001031e7:\n    if ((string2[length2 - 1] != 'o') && (string2[length2 - 1] != 'a')) {\n      if (is_equal) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_equal) {\n    return 1;\n  }\nLAB_00103202:\n  result = non_numeric_forward(file1,file2);\n  return result;\n}\n\n",
            "current_name": "check_binary_compatibility_00102fd2",
            "entrypoint": "0x00102fd2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd2": "check_binary_compatibility_00102fd2",
                "__s": "string1",
                "__s_00": "string2",
                "bVar13": "is_equal",
                "cVar1": "last_char",
                "lVar4": "file1_info",
                "lVar5": "file2_info",
                "param_1": "file1",
                "param_2": "file2",
                "pcVar8": "ptr1",
                "pcVar9": "ptr2",
                "sVar6": "length1",
                "sVar7": "length2",
                "uVar10": "result",
                "uVar11": "end2",
                "uVar12": "end1",
                "uVar2": "offset2",
                "uVar3": "flag",
                "unaff_R13": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103238": {
            "additional_data": {
                "DAT_0010b738": {
                    "malloc_pointer2": 1
                },
                "DAT_0010b740": {
                    "result_pointer": 1
                },
                "DAT_0010b748": {
                    "result_size": 1
                },
                "DAT_0010b750": {
                    "malloc_pointer": 1
                },
                "FUN_00103238": {
                    "check_and_print_matching_sections": 1,
                    "find_and_print_matches": 4,
                    "find_and_print_matching_sections": 1,
                    "find_and_print_matching_strings": 1,
                    "find_matching_functions": 1,
                    "find_matching_section": 1,
                    "find_matching_sections": 2,
                    "find_matching_strings": 4,
                    "handle_sections": 1,
                    "print_matching_sections": 2,
                    "process_data": 3,
                    "reconstruct_data": 1,
                    "reverse_and_print_matches": 1,
                    "reverse_and_print_results": 1,
                    "reverse_and_print_sections": 1,
                    "reverse_section_mappings": 1,
                    "reverse_sections_and_print": 1,
                    "section_search_and_print": 1
                },
                "_DAT_0010b7b0": {
                    "previous_section": 1
                },
                "__ptr": {
                    "current_address": 1,
                    "current_function": 1,
                    "current_ptr": 1,
                    "current_section": 1,
                    "current_section_ptr": 1,
                    "ptr": 10,
                    "section_data": 1,
                    "section_pointer": 8,
                    "section_ptr": 7
                },
                "__s1": {
                    "current_section": 1,
                    "current_string": 1,
                    "input_string": 3,
                    "search_string": 4,
                    "section_name": 10,
                    "str": 3,
                    "string": 2,
                    "string1": 2,
                    "string_to_compare": 1,
                    "symbol_name": 1,
                    "target_section": 1,
                    "target_section_name": 1,
                    "target_string": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 2,
                    "stdout": 2
                },
                "bfd_map_over_sections": {
                    "map_over_sections": 1
                },
                "cVar3": {
                    "char1": 2,
                    "char_value": 2,
                    "char_var": 1,
                    "char_var3": 1,
                    "character": 1,
                    "compare_result": 1,
                    "comparison_result": 6,
                    "flag": 1,
                    "is_matching": 1,
                    "is_section_match": 1,
                    "result": 10,
                    "result_char": 1,
                    "return_value": 1,
                    "section_match": 1,
                    "temporary_var2": 1
                },
                "free": {
                    "release_memory": 1
                },
                "iVar4": {
                    "cmp_result": 1,
                    "comparison_result": 13,
                    "int_var": 1,
                    "int_var4": 1,
                    "section_comparison_result": 1,
                    "strcmp_result": 5,
                    "string_comparison": 2,
                    "string_comparison_result": 4,
                    "symbol_comparison_result": 1,
                    "var2": 2
                },
                "lVar2": {
                    "current_ptr_offset": 1,
                    "current_string_address": 1,
                    "data_pointer": 1,
                    "entry_address": 1,
                    "function_address": 1,
                    "function_pointer": 1,
                    "inner_value": 1,
                    "long_var2": 1,
                    "ptr_value": 1,
                    "section_address": 4,
                    "section_entry_value": 1,
                    "section_info": 1,
                    "section_ptr_value": 1,
                    "section_size": 1,
                    "section_value": 2,
                    "sub_function_address": 1,
                    "symbol_addr": 1,
                    "symbol_address": 1,
                    "temp_value": 1,
                    "temporary_var1": 1,
                    "tmp": 1,
                    "value": 1,
                    "value2": 1,
                    "var1": 3,
                    "var2": 1
                },
                "lVar7": {
                    "counter": 2,
                    "current_mapped_section_index": 1,
                    "entry_counter": 1,
                    "i": 1,
                    "index": 1,
                    "inner_index": 1,
                    "inner_loop_index": 1,
                    "iteration_counter": 1,
                    "iteration_index": 1,
                    "long_value": 1,
                    "long_var7": 1,
                    "loop_counter": 4,
                    "loop_var": 2,
                    "nested_index": 1,
                    "section_index": 4,
                    "section_index2": 1,
                    "section_iterator": 1,
                    "symbol_index": 1,
                    "value_2": 1,
                    "var3": 1,
                    "var5": 1,
                    "var7": 1
                },
                "map_over_sections": {
                    "iterate_over_sections": 1
                },
                "param_10": {
                    "file_offset": 1,
                    "line_number": 1,
                    "param": 1,
                    "param1": 1,
                    "param10": 4,
                    "param10_value": 1,
                    "param_10": 3,
                    "param_value": 10,
                    "param_value1": 1,
                    "section_address": 1,
                    "section_index": 1,
                    "section_size": 3,
                    "section_value": 1,
                    "symbol_size": 1,
                    "symbol_value": 1
                },
                "param_12": {
                    "current_section": 1,
                    "output": 1,
                    "output_string": 1,
                    "param12": 4,
                    "param12_value": 1,
                    "param2": 1,
                    "param_data": 1,
                    "param_pointer": 2,
                    "param_ptr": 2,
                    "param_value2": 1,
                    "result_array": 1,
                    "section_base_address": 1,
                    "section_data": 1,
                    "section_file_name": 1,
                    "section_location": 2,
                    "section_name": 4,
                    "section_name_ptr": 1,
                    "section_names": 1,
                    "section_pointer": 1,
                    "section_ptr": 2,
                    "section_text": 1
                },
                "param_2": {
                    "arg2": 1,
                    "param_value": 1
                },
                "param_3": {
                    "callback_function": 1
                },
                "param_4": {
                    "arg4": 1
                },
                "plVar1": {
                    "array_pointer": 1,
                    "current_pointer": 1,
                    "current_section_ptr": 1,
                    "current_string": 1,
                    "entry_pointer": 1,
                    "function_pointer": 1,
                    "inner_pointer": 1,
                    "ptr1": 2,
                    "ptr_arr": 1,
                    "ptr_value": 1,
                    "ptr_var1": 3,
                    "section_data": 1,
                    "section_entry": 1,
                    "section_pointer": 2,
                    "section_ptr": 1,
                    "section_ptr_entry": 1,
                    "string_pointer": 1,
                    "sub_function_pointer": 1,
                    "symbol": 1,
                    "symbol_ptr": 1,
                    "temp_ptr": 1
                },
                "print": {
                    "print_section": 1
                },
                "printf": {
                    "print_section_name": 1
                },
                "putchar": {
                    "print_new_line": 1
                },
                "pvVar5": {
                    "allocated_memory": 1,
                    "allocation_ptr": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "pointer": 1,
                    "ptr_array": 1,
                    "ptr_value2": 1,
                    "ptr_var5": 2,
                    "section_allocation": 1,
                    "section_array": 1,
                    "section_array_entry": 1,
                    "section_array_ptr": 1,
                    "section_data": 3,
                    "section_data_array": 1,
                    "section_list": 1,
                    "section_pointer": 1,
                    "section_pointer_array": 1,
                    "section_table": 1,
                    "sections_array": 2,
                    "var3": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "uVar6": {
                    "counter": 2,
                    "entry_index": 1,
                    "index": 8,
                    "iteration_index": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "outer_counter": 1,
                    "section_counter": 1,
                    "section_index": 9,
                    "var4": 1
                },
                "unaff_R13": {
                    "binary_base_address": 2,
                    "binary_file": 1,
                    "current_binary": 1,
                    "current_structure": 1,
                    "data_structure": 1,
                    "elf_file_handler": 1,
                    "elf_handle": 1,
                    "function_metadata": 1,
                    "image": 1,
                    "mapped_sections_array": 1,
                    "param2": 1,
                    "param_2": 1,
                    "program_info": 1,
                    "ptr_value_3": 1,
                    "r13": 4,
                    "section_data": 3,
                    "section_handler_pointer": 1,
                    "section_header": 2,
                    "section_index": 1,
                    "section_parameter": 1,
                    "section_table": 1,
                    "section_table_pointer": 1,
                    "unaff_ptr": 1,
                    "unaff_r13": 1
                },
                "unaff_RBX": {
                    "binary_data": 3,
                    "binary_header": 1,
                    "binary_ptr": 1,
                    "context": 1,
                    "function_table": 1,
                    "param1": 1,
                    "param_1": 1,
                    "ptr_array": 1,
                    "ptr_value_2": 1,
                    "rbx": 4,
                    "section_address": 1,
                    "section_array": 2,
                    "section_list_pointer": 1,
                    "section_pointer": 1,
                    "section_table": 1,
                    "section_table_pointer": 1,
                    "sections": 1,
                    "sections_array": 2,
                    "sections_pointer": 1,
                    "symbol_ptr_array": 1,
                    "symbol_table_entry": 1,
                    "unaff_int": 1,
                    "unaff_rbx": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_001021e0",
                "FUN_00103c00",
                "FUN_00102400"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\n\n\nvoid find_and_print_matching_strings_00103238(void)\n\n{\n  long *ptr_var1;\n  void *ptr;\n  char *section_name;\n  long section_address;\n  char result;\n  int comparison_result;\n  long rbx;\n  void *section_data;\n  uint section_index;\n  long r13;\n  long section_index;\n  ulong param_value;\n  void *section_name;\n  \n  section_data = DAT_0010b750;\n  if (_DAT_0010b7b0 == r13) {\n    if (DAT_0010b750 != (void *)0x0) goto LAB_00103296;\n  }\n  else {\n    section_index = 0;\n    if (DAT_0010b750 != (void *)0x0) {\n      for (; section_index < DAT_0010b748; section_index = section_index + 1) {\n        ptr = *(void **)((long)section_data + (ulong)section_index * 8);\n        if (ptr != (void *)0x0) {\n          release_memory(ptr);\n        }\n      }\n      release_memory(DAT_0010b740);\n      release_memory(section_data);\n      release_memory(DAT_0010b738);\n      DAT_0010b740 = (void *)0x0;\n      DAT_0010b750 = (void *)0x0;\n      DAT_0010b738 = (void *)0x0;\n    }\n  }\n  DAT_0010b748 = *(uint *)(r13 + 0xa0);\n  DAT_0010b740 = (void *)allocate_memory((ulong)DAT_0010b748 * 8);\n  DAT_0010b750 = (void *)allocate_memory((ulong)DAT_0010b748 << 3);\n  DAT_0010b738 = (void *)allocate_memory((ulong)DAT_0010b748 << 3);\n  section_name = DAT_0010b740;\n  map_over_sections();\n  _DAT_0010b7b0 = r13;\nLAB_00103296:\n  section_name = *(char **)(rbx + 8);\n  section_index = 0;\n  do {\n    if (DAT_0010b748 <= section_index) {\n      putc(10,stdout);\n      return;\n    }\n    section_data = DAT_0010b738;\n    for (section_index = 0; ptr_var1 = (long *)((long)section_data + (ulong)section_index * 8),\n        *ptr_var1 != section_index && section_index <= *ptr_var1; section_index = section_index + 1) {\n      ptr_var1 = **(long ***)(*(long *)((long)DAT_0010b750 + (ulong)section_index * 8) + section_index * 8);\n      if ((((ptr_var1 != (long *)0x0) &&\n           (section_address = *ptr_var1, *(long *)(section_address + 0x20) == *(long *)(rbx + 0x20))) &&\n          (*(long *)(section_address + 0x10) == *(long *)(rbx + 0x10))) &&\n         (((comparison_result = compare_strings(section_name,*(char **)(section_address + 8)), comparison_result == 0 &&\n           (result = (**(code **)(*(long *)(r13 + 8) + 0x240))(), section_data = DAT_0010b738,\n           result != '\\0')) && (section_name != (void *)0x0)))) {\n        print_section_name(\"\\t%s:%u\",section_name,param_value >> 0x20);\n        section_index = DAT_0010b748;\n        break;\n      }\n    }\n    section_index = section_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "find_and_print_matching_strings_00103238",
            "entrypoint": "0x00103238",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103238": "find_and_print_matching_strings_00103238",
                "__ptr": "ptr",
                "__s1": "section_name",
                "_stdout": "stdout",
                "bfd_map_over_sections": "map_over_sections",
                "cVar3": "result",
                "free": "release_memory",
                "iVar4": "comparison_result",
                "lVar2": "section_address",
                "lVar7": "section_index",
                "map_over_sections": "iterate_over_sections",
                "param_10": "param_value",
                "param_12": "section_name",
                "plVar1": "ptr_var1",
                "print": "print_section",
                "printf": "print_section_name",
                "pvVar5": "section_data",
                "strcmp": "compare_strings",
                "uVar6": "section_index",
                "unaff_R13": "r13",
                "unaff_RBX": "rbx",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103463": {
            "additional_data": {
                "FUN_00103463": {
                    "decompiled_function": 1,
                    "extract_and_print_matches": 1,
                    "find_and_print_match": 1,
                    "find_and_print_matched_entries": 1,
                    "find_and_print_matching_data": 1,
                    "find_and_print_matching_items": 1,
                    "find_matching_data": 1,
                    "find_matching_entries": 1,
                    "find_matching_entry": 1,
                    "find_matching_record": 1,
                    "find_matching_records": 2,
                    "find_matching_string": 1,
                    "find_matching_values": 1,
                    "print_matching_records": 2,
                    "process_data": 2,
                    "process_input": 1,
                    "reverse_and_print": 2,
                    "reverse_and_print_results": 1,
                    "search_and_print_matches": 1
                },
                "_stdout": {
                    "standard_output": 1
                },
                "cVar3": {
                    "char_value": 2,
                    "char_variable": 1,
                    "compare_result": 2,
                    "comparison_result": 14,
                    "function_result": 1,
                    "is_record_matched": 1,
                    "result": 9
                },
                "iVar4": {
                    "comparison_result": 10,
                    "int_variable": 1,
                    "str_comparison_result": 1,
                    "strcmp_result": 7,
                    "string_compare_result": 2,
                    "string_comparison": 3,
                    "string_comparison_result": 6
                },
                "in_stack_00000050": {
                    "file_line": 1,
                    "file_name": 5,
                    "file_path": 1,
                    "filename": 1,
                    "int_parameter": 1,
                    "line_num": 1,
                    "line_number": 19,
                    "stack_value": 1
                },
                "lVar15": {
                    "unaff_r15": 1
                },
                "lVar2": {
                    "curr_value": 1,
                    "current_address": 1,
                    "current_data": 2,
                    "current_data_ptr": 1,
                    "current_entry": 1,
                    "current_file_address": 1,
                    "current_function_address": 1,
                    "current_line_data": 1,
                    "current_record": 1,
                    "current_record_address": 1,
                    "current_record_value": 2,
                    "current_value": 5,
                    "data_pointer": 1,
                    "entry": 1,
                    "entry_value": 2,
                    "long_variable": 1,
                    "ptr_value": 1,
                    "record": 1,
                    "record_ptr": 1,
                    "temp": 1,
                    "value": 2,
                    "value1": 1
                },
                "lVar5": {
                    "base_address": 7,
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "base_value": 1,
                    "constant1": 1,
                    "dat_0010b738": 1,
                    "data_address": 1,
                    "data_array_ptr": 1,
                    "data_start": 1,
                    "data_start_ptr": 1,
                    "entry_base": 1,
                    "file_data_start_address": 1,
                    "first_data_address": 1,
                    "function_table": 1,
                    "global_var1": 1,
                    "long_variable_2": 1,
                    "match_count": 1,
                    "pointer_offset": 1,
                    "record_array": 1,
                    "record_list": 1,
                    "record_list_address": 1,
                    "start_address": 2,
                    "start_value": 1
                },
                "lVar6": {
                    "constant2": 1,
                    "counter": 2,
                    "current_index": 1,
                    "i": 2,
                    "index": 4,
                    "iteration": 1,
                    "iteration_index": 1,
                    "iterator": 1,
                    "line_index": 1,
                    "local_var1": 1,
                    "long_variable_3": 1,
                    "loop_counter": 7,
                    "loop_index": 5,
                    "loop_var": 1
                },
                "param_10": {
                    "address": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "data_value": 1,
                    "file_permissions": 1,
                    "file_size": 2,
                    "item_count": 1,
                    "limit": 2,
                    "line_number": 1,
                    "line_number_offset": 1,
                    "param_value": 1,
                    "record_address": 1,
                    "record_count": 1,
                    "record_offset": 1,
                    "record_size": 1,
                    "shifted_value": 1,
                    "ulong_parameter": 1,
                    "value": 12
                },
                "param_8": {
                    "count": 2,
                    "counter": 11,
                    "current_index": 2,
                    "entry_index": 1,
                    "index": 10,
                    "iteration_count": 1,
                    "record_counter": 1,
                    "record_index": 3
                },
                "plVar1": {
                    "current_data": 2,
                    "current_data_ptr": 1,
                    "current_entry": 2,
                    "current_file": 1,
                    "current_function": 1,
                    "current_line": 1,
                    "current_pointer": 6,
                    "current_ptr": 2,
                    "current_record": 3,
                    "current_record_ptr": 2,
                    "entry": 1,
                    "entry_pointer": 1,
                    "long_pointer": 1,
                    "long_ptr": 1,
                    "pointer": 3,
                    "pointer_to_value": 1,
                    "ptr": 1
                },
                "unaff_R12": {
                    "current_string": 1,
                    "file_name": 3,
                    "filename": 5,
                    "input_string": 5,
                    "param1": 1,
                    "record_name": 4,
                    "search_string": 5,
                    "search_term": 1,
                    "string": 1,
                    "string_parameter": 2,
                    "string_ptr": 1,
                    "string_to_find": 1,
                    "target_string": 1
                },
                "unaff_R13": {
                    "bfd_file": 1,
                    "bfd_handle": 5,
                    "file": 2,
                    "file_buffer": 1,
                    "file_descriptor": 1,
                    "file_handle": 4,
                    "file_pointer": 4,
                    "file_ptr": 3,
                    "function_pointer_parameter": 1,
                    "function_ptr": 1,
                    "output_file": 2,
                    "output_stream": 3,
                    "param2": 1,
                    "pointer_parameter": 1,
                    "stdout": 1
                },
                "unaff_R15": {
                    "base_address": 5,
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "comparison_data": 1,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_record": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "entry_pointer": 1,
                    "file_data": 1,
                    "file_info": 1,
                    "input_object": 1,
                    "long_parameter": 1,
                    "object_parameter": 1,
                    "original_data": 1,
                    "original_function_address": 1,
                    "param3": 1,
                    "record": 1,
                    "record_data": 1,
                    "record_to_find": 1,
                    "record_to_match": 1,
                    "reference_pointer": 1,
                    "structure_pointer": 1
                }
            },
            "called": [
                "FUN_00102240",
                "FUN_00106530",
                "FUN_00102250",
                "FUN_00102190"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\n\n\nvoid reverse_and_print_results_00103463(void)\n\n{\n  long *current_pointer;\n  long current_value;\n  char comparison_result;\n  int comparison_result;\n  long base_address;\n  char *search_string;\n  undefined8 *bfd_handle;\n  long loop_counter;\n  long base_address;\n  undefined8 counter;\n  ulong value;\n  long line_number;\n  \n  bfd_fatal(*bfd_handle);\n  do {\n    counter._4_4_ = counter._4_4_ + 1;\n    if (DAT_0010b748 <= counter._4_4_) {\n      putc(10,standard_output);\n      return;\n    }\n    base_address = DAT_0010b738;\n    for (loop_counter = 0; current_pointer = (long *)(base_address + (ulong)counter._4_4_ * 8),\n        *current_pointer != loop_counter && loop_counter <= *current_pointer; loop_counter = loop_counter + 1) {\n      current_pointer = **(long ***)(*(long *)(DAT_0010b750 + (ulong)counter._4_4_ * 8) + loop_counter * 8);\n      if ((((current_pointer != (long *)0x0) &&\n           (current_value = *current_pointer, *(long *)(current_value + 0x20) == *(long *)(base_address + 0x20))) &&\n          (*(long *)(current_value + 0x10) == *(long *)(base_address + 0x10))) &&\n         (((comparison_result = strcmp(search_string,*(char **)(current_value + 8)), comparison_result == 0 &&\n           (comparison_result = (**(code **)(bfd_handle[1] + 0x240))(), base_address = DAT_0010b738, comparison_result != '\\0')) &&\n          (line_number != 0)))) {\n        printf(\"\\t%s:%u\",line_number,value >> 0x20);\n        counter._4_4_ = DAT_0010b748;\n        break;\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "reverse_and_print_results_00103463",
            "entrypoint": "0x00103463",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103463": "reverse_and_print_results_00103463",
                "_stdout": "standard_output",
                "cVar3": "comparison_result",
                "iVar4": "comparison_result",
                "in_stack_00000050": "line_number",
                "lVar2": "current_value",
                "lVar5": "base_address",
                "lVar6": "loop_counter",
                "param_10": "value",
                "param_8": "counter",
                "plVar1": "current_pointer",
                "unaff_R12": "search_string",
                "unaff_R13": "bfd_handle",
                "unaff_R15": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010351b": {
            "additional_data": {
                "": {
                    "": 2,
                    "line_break": 1
                },
                "DAT_0010b818": {
                    "condition_variable": 1,
                    "debug_mode_enabled": 1,
                    "flag": 3,
                    "flag_variable": 2,
                    "function_status": 1,
                    "status_variable": 1,
                    "variable_flag": 1
                },
                "DAT_y": {
                    "dat_y": 1
                },
                "FUN_0010351b": {
                    "check_and_print_message": 1,
                    "print_function_name": 10,
                    "print_function_name_if_flag_is_zero": 1,
                    "print_function_name_if_not_zero": 4,
                    "print_function_name_if_zero": 1,
                    "print_function_status": 1,
                    "print_if_condition_false": 1,
                    "print_if_data_available": 1,
                    "print_if_data_flag_not_set": 1,
                    "print_if_data_not_zero": 1,
                    "print_if_data_valid": 1,
                    "print_if_debug_mode": 1,
                    "print_if_flag_zero": 1,
                    "print_if_not_zero": 1,
                    "print_message_if_dat_zero": 1,
                    "print_message_if_not_zero": 1,
                    "print_message_or_skip": 1,
                    "print_or_return_function_name": 2
                },
                "PRINTF": {
                    "printf": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "PTR_0010b818": {
                    "flag": 1,
                    "pointer_to_flag": 1
                },
                "PTR_x": {
                    "ptr_x": 1
                },
                "PTR_xxxx": {
                    "unchanged": 1
                },
                "msg": {
                    "message": 1
                },
                "printFormatString": {
                    "printf_format_string": 1
                },
                "printf": {
                    "print": 7,
                    "print_formatted_line": 1,
                    "print_formatted_message": 1,
                    "print_formatted_string": 3,
                    "print_message": 1,
                    "print_statement": 1,
                    "print_text": 1,
                    "printf": 1
                },
                "str_format": {
                    "format_string": 1
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid print_function_name_if_not_zero_0010351b(void)\n\n{\n  if (DAT_0010b818 == 0) {\n    print(\"\\n%s:\\n\");\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_function_name_if_not_zero_0010351b",
            "entrypoint": "0x0010351b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010351b": "print_function_name_if_not_zero_0010351b",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103533": {
            "additional_data": {
                "FUN_00103533": {
                    "compare_and_call": 2,
                    "compare_and_execute": 14,
                    "compare_and_execute_function": 4,
                    "compare_param1_param2": 1,
                    "compare_param_values": 2,
                    "compare_params": 3,
                    "compare_params_and_call_function": 1,
                    "compare_values": 3,
                    "compare_values_and_invoke": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array1": 1,
                    "first_array": 2,
                    "first_input": 1,
                    "first_operand": 1,
                    "first_param": 4,
                    "first_parameter": 1,
                    "input1": 5,
                    "input_1": 2,
                    "input_data_1": 1,
                    "pointer1": 1,
                    "value1": 9,
                    "value_1": 1,
                    "values1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array2": 1,
                    "input2": 5,
                    "input_2": 2,
                    "input_data_2": 1,
                    "pointer2": 1,
                    "second_array": 2,
                    "second_input": 1,
                    "second_operand": 1,
                    "second_param": 4,
                    "second_parameter": 1,
                    "value2": 9,
                    "value_2": 1,
                    "values2": 1
                },
                "uVar1": {
                    "result": 25,
                    "return_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nulong compare_and_execute_function_00103533(undefined8 *value1,undefined8 *value2)\n\n{\n  ulong result;\n  \n  if ((ulong)value1[1] < (ulong)value2[1]) {\n    return (ulong)(-(uint)(DAT_0010b7f4 == 0) | 1);\n  }\n  if ((ulong)value2[1] < (ulong)value1[1]) {\n    return (ulong)((-(uint)(DAT_0010b7f4 == 0) & 2) - 1);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00103571. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  result = (*(code *)(&PTR_non_numeric_forward_0010acc0)[DAT_0010b7f4])(*value1,*value2);\n  return result;\n}\n\n",
            "current_name": "compare_and_execute_function_00103533",
            "entrypoint": "0x00103533",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103533": "compare_and_execute_function_00103533",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103573": {
            "additional_data": {
                "FUN_00103573": {
                    "print_formatted_strings": 1,
                    "print_function_names": 1,
                    "print_information": 2,
                    "print_message": 2,
                    "print_param_strings": 2,
                    "print_param_values": 1,
                    "print_parameters": 1,
                    "print_string": 1,
                    "print_string_params": 1,
                    "print_string_with_label": 1,
                    "print_string_with_separator": 1,
                    "print_strings": 14,
                    "print_strings_with_colon": 1,
                    "print_strings_with_prefix": 1,
                    "print_values": 1
                },
                "param_1": {
                    "first_parameter": 1,
                    "first_string": 1,
                    "label": 3,
                    "label_param": 1,
                    "message1": 2,
                    "message_1": 1,
                    "string1": 6,
                    "string1_ptr": 1,
                    "string_1": 10,
                    "string_param": 1,
                    "string_param1": 1,
                    "string_param_1": 1,
                    "string_ptr_1": 1,
                    "title": 1
                },
                "param_2": {
                    "message": 1,
                    "message2": 2,
                    "message_2": 1,
                    "name": 1,
                    "second_parameter": 1,
                    "second_string": 1,
                    "string": 1,
                    "string2": 6,
                    "string2_ptr": 1,
                    "string_2": 10,
                    "string_param2": 1,
                    "string_param_2": 1,
                    "string_param_with_suffix": 1,
                    "string_ptr_2": 1,
                    "text_param": 1,
                    "value": 1
                },
                "param_3": {
                    "additional_parameter": 1,
                    "param3": 5,
                    "param_3": 3,
                    "separator": 1,
                    "unused": 4,
                    "unused_param": 14,
                    "unused_param_3": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_string": 1,
                    "delimiter": 1,
                    "extra_param": 1,
                    "extra_parameter": 1,
                    "extra_string": 1,
                    "integer_param_1": 1,
                    "param4": 5,
                    "param_4": 3,
                    "param_suffix": 1,
                    "string3": 2,
                    "string_3": 7,
                    "suffix": 1,
                    "unused_param": 1,
                    "unused_param_2": 3,
                    "unused_param_4": 1,
                    "variable": 1
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001053b0"
            ],
            "code": "\nvoid print_param_strings_00103573(undefined8 *string_1,undefined8 *string_2,undefined8 unused_param,undefined8 string_3)\n\n{\n  if (string_1 != (undefined8 *)0x0) {\n    printf(\"%s:\",*string_1);\n  }\n  printf(\"%s:\",*string_2,string_3);\n  return;\n}\n\n",
            "current_name": "print_param_strings_00103573",
            "entrypoint": "0x00103573",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103573": "print_param_strings_00103573",
                "param_1": "string_1",
                "param_2": "string_2",
                "param_3": "unused_param",
                "param_4": "string_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001035a2": {
            "additional_data": {
                "DAT_0010712c": {
                    "symbol_name_1": 2
                },
                "DAT_0010b238": {
                    "format_1": 1,
                    "format_string_1": 1
                },
                "DAT_0010b23d": {
                    "format_2": 1,
                    "format_string_2": 1
                },
                "FUN_001035a2": {
                    "print_formatted_data": 1,
                    "print_formatted_info": 1,
                    "print_formatted_output": 2,
                    "print_formatted_value": 3,
                    "print_info": 2,
                    "print_information": 1,
                    "print_symbol": 1,
                    "print_symbol_data": 1,
                    "print_symbol_info": 9,
                    "print_symbol_information": 3,
                    "print_symbol_value": 1,
                    "print_symmetric_value": 2,
                    "print_value": 1,
                    "print_value_and_symbol": 3
                },
                "FUN_00104740": {
                    "print_symname": 1
                },
                "FUN_001054d0": {
                    "print_value_constprop": 1
                },
                "lVar1": {
                    "address": 1,
                    "selected_value": 1,
                    "symbol_address": 11,
                    "symbol_name_ptr": 1,
                    "symbol_value": 1,
                    "value": 16
                },
                "param_1": {
                    "char_ptr": 1,
                    "info_string": 1,
                    "str": 1,
                    "string": 2,
                    "string_pointer": 1,
                    "symbol": 3,
                    "symbol_name": 1
                },
                "param_2": {
                    "arguments": 1,
                    "array": 2,
                    "array_2": 1,
                    "array_pointer2": 1,
                    "data_ptr": 1,
                    "info": 1,
                    "info_values": 1,
                    "long_arr_ptr": 1,
                    "symbol_info": 1
                },
                "param_3": {
                    "array_3": 1,
                    "constants": 1,
                    "info_names": 1,
                    "name": 1,
                    "output_ptr": 1,
                    "pointer_array": 2,
                    "pointer_pointer": 1,
                    "print_format": 1,
                    "undefined8_ptr": 1
                },
                "param_4": {
                    "info_length": 1,
                    "length": 1,
                    "parameter": 1,
                    "size": 3,
                    "value": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "print_symname": {
                    "print_symbol": 3,
                    "print_symbol_name": 15
                },
                "print_value_constprop_0": {
                    "print_const_value": 1,
                    "print_constant_value": 1,
                    "print_symbol_value": 1,
                    "print_value": 17
                },
                "printf": {
                    "output_formatted": 1,
                    "print_formatted": 8,
                    "print_formatted_string": 5,
                    "print_formatted_text": 1
                },
                "putchar": {
                    "output_char": 1,
                    "print_char": 2,
                    "print_character": 12,
                    "put_character": 1
                },
                "unaff_RBX": {
                    "arr_ptr": 1,
                    "array": 1,
                    "array_pointer": 3,
                    "array_ptr": 4,
                    "base_address": 1,
                    "data_ptr": 2,
                    "info_ptr": 1,
                    "pointer": 1,
                    "ptr_values": 1,
                    "rbx": 4,
                    "symbol_address": 1,
                    "symbol_data": 1,
                    "symbol_info": 6,
                    "symbol_info_ptr": 2,
                    "symbol_information": 1,
                    "symbols": 1
                },
                "undefined8": {
                    "unknown_type": 1
                }
            },
            "called": [
                "FUN_00102050",
                "FUN_00104740",
                "FUN_001054d0",
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001053c0"
            ],
            "code": "\nvoid print_symbol_info_001035a2(void)\n\n{\n  long *symbol_info;\n  long value;\n  \n  if (symbol_info[2] == 0) {\n    value = symbol_info[1];\n  }\n  else {\n    value = *(long *)(symbol_info[2] + 0x38);\n  }\n  if (value != 0) {\n    print_character(0x20);\n    if (symbol_info[2] == 0) {\n      value = symbol_info[1];\n    }\n    else {\n      value = *(long *)(symbol_info[2] + 0x38);\n    }\n    print_value(value);\n  }\n  print_formatted(\" %c\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) != '-') {\n    print_symbol_name(&DAT_0010712c);\n    return;\n  }\n  print_character(0x20);\n  print_formatted(&DAT_0010b238,(ulong)(uint)(int)*(char *)(*symbol_info + 0x19));\n  print_character(0x20);\n  print_formatted(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n  print_formatted(\" %5s\",*(unknown_type *)(*symbol_info + 0x20));\n  print_symbol_name(&DAT_0010712c);\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001035a2",
            "entrypoint": "0x001035a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001035a2": "print_symbol_info_001035a2",
                "lVar1": "value",
                "print_symname": "print_symbol_name",
                "print_value_constprop_0": "print_value",
                "printf": "print_formatted",
                "putchar": "print_character",
                "unaff_RBX": "symbol_info",
                "undefined8": "unknown_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001036a7": {
            "additional_data": {
                "DAT_0010b818": {
                    "flag": 1
                },
                "FUN_001036a7": {
                    "print_arguments": 1,
                    "print_data": 2,
                    "print_formatted_strings": 1,
                    "print_function": 2,
                    "print_headers": 1,
                    "print_info": 4,
                    "print_information": 1,
                    "print_message": 3,
                    "print_param_strings": 2,
                    "print_parameter": 1,
                    "print_parameters": 3,
                    "print_params": 1,
                    "print_string_list": 1,
                    "print_string_parameters": 2,
                    "print_strings": 5,
                    "print_strings_with_label": 1
                },
                "param_1": {
                    "data1": 2,
                    "file_name": 2,
                    "first_string": 1,
                    "header1": 1,
                    "label": 2,
                    "label_string": 1,
                    "message": 1,
                    "message1": 4,
                    "message_1": 4,
                    "message_prefix": 1,
                    "parameter_1": 1,
                    "string1": 4,
                    "string1_ptr": 2,
                    "string_1": 1,
                    "string_param_1": 1,
                    "strings": 1,
                    "title": 2
                },
                "param_2": {
                    "data": 2,
                    "data2": 2,
                    "data_string": 1,
                    "header2": 1,
                    "message": 6,
                    "message2": 4,
                    "message_2": 4,
                    "more_strings": 1,
                    "parameter_2": 1,
                    "second_string": 1,
                    "string2": 4,
                    "string2_ptr": 2,
                    "string_2": 1,
                    "string_param_2": 1
                },
                "param_3": {
                    "extra_param": 1,
                    "ignored": 1,
                    "param3": 10,
                    "param_3": 3,
                    "parameter_3": 1,
                    "unused": 4,
                    "unused_param": 7,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_param": 1,
                    "another_param": 1,
                    "extra_info": 2,
                    "integer_param": 1,
                    "message_3": 1,
                    "message_suffix": 1,
                    "param4": 10,
                    "param_4": 4,
                    "parameter_4": 1,
                    "separator": 1,
                    "string3": 2,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_param_2": 2,
                    "unused_parameter": 1
                },
                "printf": {
                    "print": 1
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\nvoid print_param_strings_001036a7(undefined8 *message1,undefined8 *message,undefined8 param3,undefined8 param4)\n\n{\n  if (DAT_0010b818 != 0) {\n    if (message1 != (undefined8 *)0x0) {\n      print(\"%s:\",*message1);\n    }\n    print(\"%s:\",*message,param4);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_param_strings_001036a7",
            "entrypoint": "0x001036a7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001036a7": "print_param_strings_001036a7",
                "param_1": "message1",
                "param_2": "message",
                "param_3": "param3",
                "param_4": "param4",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001036e0": {
            "additional_data": {
                "FUN_001036e0": {
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_log_message": 2,
                    "print_message": 26,
                    "print_message_based_on_param": 1
                },
                "param_1": {
                    "console_title": 1,
                    "header": 3,
                    "info_message": 1,
                    "label": 1,
                    "log_prefix": 2,
                    "log_text": 1,
                    "message1": 3,
                    "message_header": 1,
                    "message_prefix": 1,
                    "module_name": 4,
                    "name_array": 1,
                    "prefix": 2,
                    "sender": 1,
                    "sender_name": 2,
                    "severity": 1,
                    "source": 2,
                    "source_message": 1,
                    "subject": 1,
                    "tag": 1,
                    "title": 1
                },
                "param_2": {
                    "default_header": 1,
                    "default_message": 2,
                    "default_module_name": 1,
                    "default_name": 1,
                    "default_sender": 1,
                    "default_title": 1,
                    "error_message": 3,
                    "file_name": 2,
                    "log_message": 2,
                    "message": 13,
                    "message2": 3,
                    "suffix": 1
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001064a0"
            ],
            "code": "\nvoid print_log_message_001036e0(undefined8 *module_name,undefined8 *message)\n\n{\n  if (module_name != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*module_name);\n    return;\n  }\n  printf(\"%s: \",*message);\n  return;\n}\n\n",
            "current_name": "print_log_message_001036e0",
            "entrypoint": "0x001036e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001036e0": "print_log_message_001036e0",
                "param_1": "module_name",
                "param_2": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010370a": {
            "additional_data": {
                "DAT_0010b23d": {
                    "format_string1": 1
                },
                "DAT_0010b728": {
                    "processor_specific_format": 1
                },
                "DAT_0010b730": {
                    "unknown_symbol_format": 1
                },
                "DAT_0010b7a8": {
                    "some_constant": 1
                },
                "FUN_0010370a": {
                    "print_sym_info": 10,
                    "print_sym_information": 1,
                    "print_symbol": 2,
                    "print_symbol_details": 1,
                    "print_symbol_info": 9,
                    "print_symbol_information": 4,
                    "print_syminfo": 2,
                    "print_symname_and_value": 2
                },
                "__errno_location": {
                    "errno_location": 1,
                    "get_errno_location": 2
                },
                "asprintf": {
                    "asprintf": 1,
                    "format_string": 1
                },
                "bVar8": {
                    "byte_flag": 1,
                    "byte_value": 3,
                    "class_type": 1,
                    "data_type_byte": 1,
                    "data_type_class": 1,
                    "data_type_identifier": 1,
                    "section_type": 1,
                    "sym_class": 3,
                    "sym_type": 5,
                    "symbol_class": 4,
                    "symbol_type_flags": 1,
                    "tmp6": 1,
                    "type": 2,
                    "type_byte": 1,
                    "type_class": 2,
                    "type_code": 1,
                    "type_value": 1
                },
                "bfd_is_undefined_symclass": {
                    "check_undefined_symbol_class": 1,
                    "is_undefined_class": 1,
                    "is_undefined_symclass": 1
                },
                "cVar1": {
                    "is_undefined": 22,
                    "is_undefined_sym": 1,
                    "is_undefined_sym_class": 1,
                    "is_undefined_symbol_class": 1,
                    "is_undefined_symclass": 6
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_text": 1,
                    "get_translated_string": 1
                },
                "fatal": {
                    "display_fatal_error": 1,
                    "fatal": 1,
                    "print_fatal_error": 1
                },
                "free": {
                    "free_memory": 1
                },
                "get_text": {
                    "get_text": 1
                },
                "iVar3": {
                    "asprintf_res": 1,
                    "asprintf_result": 20,
                    "format_result": 1,
                    "format_ret": 1,
                    "i_var3": 1,
                    "result": 1,
                    "sprintf_result": 1,
                    "tmp2": 1
                },
                "is_undefined_class": {
                    "is_undefined_class": 1
                },
                "is_undefined_symclass": {
                    "is_undefined_symclass": 1
                },
                "lVar7": {
                    "category_ptr": 1,
                    "class_ptr": 1,
                    "class_value_ptr": 1,
                    "data_offset": 1,
                    "data_type_info": 1,
                    "format_param": 1,
                    "info_ptr": 1,
                    "ptr_l_var": 1,
                    "section_info": 1,
                    "some_value": 1,
                    "sym_address": 1,
                    "sym_attribute": 1,
                    "sym_data": 1,
                    "sym_info": 1,
                    "sym_info_ptr": 1,
                    "sym_obj": 1,
                    "sym_value": 1,
                    "symbol_flags": 1,
                    "symbol_info": 2,
                    "symbol_offset": 1,
                    "temp_long": 2,
                    "temp_value": 1,
                    "temp_var": 1,
                    "tmp5": 1,
                    "tmp_ptr": 1,
                    "type_data": 1,
                    "type_details": 1,
                    "value": 1,
                    "var7": 1
                },
                "param_1": {
                    "print_width": 2,
                    "width": 1
                },
                "param_2": {
                    "unaff_rbx": 2
                },
                "pcVar10": {
                    "data_type": 3,
                    "section_name": 1,
                    "sym_category": 4,
                    "sym_class": 3,
                    "sym_type": 2,
                    "sym_type_name": 1,
                    "sym_type_str": 1,
                    "symbol_category": 1,
                    "symbol_class": 3,
                    "symbol_type": 6,
                    "symclass": 1,
                    "symclass_name": 1,
                    "symclass_string": 1,
                    "type_name": 1,
                    "type_str": 2
                },
                "piVar5": {
                    "errno_location": 12,
                    "errno_location_ptr": 1,
                    "errno_location_result": 1,
                    "errno_ptr": 2,
                    "error_num": 1,
                    "error_number": 6,
                    "error_position": 1,
                    "error_val": 1,
                    "pi_var5": 1,
                    "ptr_errno": 1,
                    "tmp3": 1
                },
                "plVar4": {
                    "error_message": 2,
                    "error_msg": 1,
                    "message": 1,
                    "message_pointer": 1,
                    "print_info_ptr": 1,
                    "print_width": 18,
                    "ptr_translation": 1,
                    "sym_data": 1,
                    "sym_info": 2,
                    "sym_ptr": 1,
                    "width_ptr": 2
                },
                "print_constval": {
                    "print_constval": 1
                },
                "print_name": {
                    "print_name": 1
                },
                "print_spaces1": {
                    "print_spaces1": 1
                },
                "print_spaces2": {
                    "print_spaces2": 1
                },
                "print_sym_info": {
                    "print_sym_info": 1
                },
                "print_symname": {
                    "print_name": 1,
                    "print_symbol_name": 2
                },
                "print_value": {
                    "print_value": 1
                },
                "print_value_constprop_0": {
                    "print_const_property_value": 1,
                    "print_symbol_value": 1,
                    "print_value": 1
                },
                "print_width": {
                    "print_width": 1
                },
                "printf": {
                    "print_formatted": 2,
                    "print_formatted_output": 1
                },
                "printf_2": {
                    "print_formatted_output": 1
                },
                "printf_3": {
                    "print_formatted_output": 1
                },
                "uVar2": {
                    "class_flag": 1,
                    "data_type_code": 1,
                    "data_type_value": 1,
                    "shifted_value": 1,
                    "short_value": 1,
                    "sym_class": 4,
                    "sym_class_value": 1,
                    "sym_flags": 1,
                    "sym_type": 3,
                    "symbol_class": 2,
                    "symbol_type": 2,
                    "symclass_value": 2,
                    "symvalue": 1,
                    "tmp": 1,
                    "tmp1": 1,
                    "type": 2,
                    "type_code": 1,
                    "type_flag": 3,
                    "type_val": 1,
                    "u_var2": 1
                },
                "uVar6": {
                    "error_message": 3,
                    "error_str": 1,
                    "error_string": 4,
                    "str_error": 1,
                    "strerror_result": 3,
                    "tmp4": 1,
                    "u_var6": 1,
                    "xstr_error": 1,
                    "xstrerror_result": 3
                },
                "uVar9": {
                    "filtered_rbx": 1,
                    "info_mask": 1,
                    "mask_rbx": 1,
                    "masked_rbx": 15,
                    "masked_value": 3,
                    "modulus_rbx": 1,
                    "print_width_masked": 1,
                    "rbx": 1,
                    "rbx_mask": 2,
                    "rbx_masked": 1,
                    "symbol_value": 1,
                    "tmp7": 1,
                    "u_value": 1,
                    "u_var9": 1
                },
                "unaff_RBX": {
                    "input_rbx": 1,
                    "input_value": 2,
                    "rbx": 4,
                    "rbx_value": 4,
                    "some_value": 1,
                    "unaff_rbx": 2,
                    "unaff_rbx_value": 1,
                    "unaff_value": 1
                },
                "xstrerror": {
                    "get_error_string": 2,
                    "str_error": 1
                }
            },
            "called": [
                "FUN_00106300",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_001054d0"
            ],
            "code": "\nvoid print_symbol_info_0010370a(void)\n\n{\n  char is_undefined;\n  ushort sym_class;\n  int asprintf_result;\n  long *print_width;\n  int *errno_location;\n  undefined8 error_string;\n  long symbol_info;\n  ulong rbx;\n  byte sym_type;\n  ulong masked_rbx;\n  char *symbol_type;\n  \n  print_width = (long *)get_localized_message(0,\"Print width has not been initialized (%d)\",5);\n  masked_rbx = rbx & 0xffffffff;\n  print_fatal_error(print_width,masked_rbx);\n  print_symbol_name(\"%-20s|\",print_width,0,masked_rbx);\n  is_undefined = is_undefined_symclass((int)*(char *)(*print_width + 8));\n  if (is_undefined == '\\0') {\n    print_const_property_value(*(undefined8 *)*print_width);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    print_formatted(\"        \");\n  }\n  else {\n    print_formatted(\"                \");\n  }\n  print_formatted(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*print_width + 8));\n  if (*(char *)(*print_width + 8) == '-') {\n    print_formatted(\"%18s|  \",*(undefined8 *)(*print_width + 0x20));\n    print_formatted(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*print_width + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (print_width[2] == 0) {\n    if (print_width[3] != 0) {\n      symbol_info = *(long *)(print_width[3] + 0x30);\n      is_undefined = *(char *)(symbol_info + 0x28);\n      if (is_undefined == 'g') goto LAB_00103983;\n      if (is_undefined == 'h') {\n        symbol_type = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        symbol_type = \"Block\";\n      }\n      else if (*(ushort *)(symbol_info + 0x26) == 0) {\n        symbol_type = \"None\";\n      }\n      else {\n        sym_class = *(ushort *)(symbol_info + 0x26) >> 4 & 3;\n        if (sym_class == 2) {\n          symbol_type = \"Function\";\n        }\n        else if (sym_class == 3) {\n          symbol_type = \"Array\";\n        }\n        else {\n          if (sym_class != 1) {\n            free_memory(DAT_0010b730);\n            sym_class = *(ushort *)(symbol_info + 0x26);\n            sym_type = *(byte *)(symbol_info + 0x28);\n            symbol_type = (char *)get_localized_message(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = format_string(&DAT_0010b730,symbol_type,(ulong)sym_type,(ulong)sym_class);\n            symbol_type = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          symbol_type = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    print_formatted(\"                  |\");\n  }\n  else {\n    sym_type = *(byte *)(print_width[2] + 0x48) & 0xf;\n    switch(sym_type) {\n    case 0:\n      symbol_type = \"NOTYPE\";\n      break;\n    case 1:\n      symbol_type = \"OBJECT\";\n      break;\n    case 2:\n      symbol_type = \"FUNC\";\n      break;\n    case 3:\n      symbol_type = \"SECTION\";\n      break;\n    case 4:\n      symbol_type = \"FILE\";\n      break;\n    case 5:\n      symbol_type = \"COMMON\";\n      break;\n    case 6:\n      symbol_type = \"TLS\";\n      break;\n    default:\n      free_memory(DAT_0010b728);\n      symbol_type = \"<processor specific>: %d\";\n      if ((2 < sym_type - 0xd) && (symbol_type = \"<OS specific>: %d\", 2 < sym_type - 10)) {\n        symbol_type = \"<unknown>: %d\";\n      }\n      symbol_type = (char *)get_localized_message(0,symbol_type,5);\n      asprintf_result = format_string(&DAT_0010b728,symbol_type,(ulong)sym_type);\n      symbol_type = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_location = get_errno_location();\n        error_string = get_error_string(*errno_location);\n        print_fatal_error(&DAT_0010712d,error_string);\nLAB_00103983:\n        symbol_type = \"File\";\n      }\n    }\nLAB_001039c0:\n    print_formatted(\"%18s|\",symbol_type);\n  }\n  if (print_width[2] == 0) {\n    if (print_width[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      print_formatted(\"        \");\n    }\n    else {\n      print_formatted(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(print_width[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_const_property_value();\n  }\n  symbol_info = print_width[2];\n  if ((symbol_info != 0) || (symbol_info = print_width[3], symbol_info != 0)) {\n    print_formatted(\"|     |%s\",**(undefined8 **)(symbol_info + 0x20));\n    return;\n  }\nLAB_00103a54:\n  print_formatted(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_symbol_info_0010370a",
            "entrypoint": "0x0010370a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010370a": "print_symbol_info_0010370a",
                "__errno_location": "get_errno_location",
                "asprintf": "format_string",
                "bVar8": "sym_type",
                "bfd_is_undefined_symclass": "is_undefined_symclass",
                "cVar1": "is_undefined",
                "dcgettext": "get_localized_message",
                "fatal": "print_fatal_error",
                "free": "free_memory",
                "iVar3": "asprintf_result",
                "lVar7": "symbol_info",
                "pcVar10": "symbol_type",
                "piVar5": "errno_location",
                "plVar4": "print_width",
                "print_symname": "print_symbol_name",
                "print_value_constprop_0": "print_const_property_value",
                "printf": "print_formatted",
                "uVar2": "sym_class",
                "uVar6": "error_string",
                "uVar9": "masked_rbx",
                "unaff_RBX": "rbx",
                "xstrerror": "get_error_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103729": {
            "additional_data": {
                "DAT_0010712d": {
                    "error_msg": 1,
                    "format_string_2": 1
                },
                "DAT_0010b23d": {
                    "format1": 1,
                    "format_string": 1,
                    "format_string_1": 1
                },
                "DAT_0010b728": {
                    "str_buffer2": 1
                },
                "DAT_0010b730": {
                    "dynamic_string": 1,
                    "str_buffer1": 1,
                    "unknown_data_1": 1
                },
                "DAT_0010b7a8": {
                    "constant_val_1": 1,
                    "flag_1": 1,
                    "value_1": 1
                },
                "FUN_00103729": {
                    "print_symbol": 1,
                    "print_symbol_details": 2,
                    "print_symbol_info": 18,
                    "print_symbol_information": 10
                },
                "LAB_00103a54": {
                    "label_1": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_location": 1
                },
                "asprintf": {
                    "format_string": 2
                },
                "bVar7": {
                    "b_var": 1,
                    "byte_val": 3,
                    "byte_value": 2,
                    "char_value": 1,
                    "data_type": 1,
                    "kind": 1,
                    "section_type": 1,
                    "sym_type": 1,
                    "symbol_attribute": 1,
                    "symbol_class": 1,
                    "symbol_type": 1,
                    "symclass": 1,
                    "type": 5,
                    "type_byte": 1,
                    "type_code": 1,
                    "type_flag": 2,
                    "type_id": 1,
                    "type_identifier": 1,
                    "type_value": 4,
                    "var7": 1
                },
                "bfd_is_undefined_symclass": {
                    "is_undefined_symclass": 3
                },
                "cVar1": {
                    "is_defined": 1,
                    "is_sym_undefined": 1,
                    "is_undefined": 20,
                    "is_undefined_class": 1,
                    "is_undefined_symbol": 2,
                    "is_undefined_symclass": 6
                },
                "dcgettext": {
                    "get_text_val": 1,
                    "get_translation": 1
                },
                "fatal": {
                    "print_fatal_error": 1,
                    "terminate": 1
                },
                "free": {
                    "free_memory": 1,
                    "release": 1
                },
                "funct": {
                    "function": 1
                },
                "goto": {
                    "jump": 1
                },
                "iVar3": {
                    "asprintf_result": 18,
                    "asprintf_ret": 2,
                    "asprintf_ret_val": 1,
                    "asprintf_return": 1,
                    "asprintf_status": 1,
                    "index": 1,
                    "output_length": 1,
                    "result": 3,
                    "status": 2,
                    "var3": 1
                },
                "joined_r0x00103964": {
                    "append_info": 1
                },
                "lVar6": {
                    "data_offset": 1,
                    "data_ptr": 1,
                    "data_value": 1,
                    "extra_info": 1,
                    "info": 1,
                    "info_offset": 1,
                    "info_ptr": 5,
                    "l_var6": 1,
                    "param_1_2": 1,
                    "part_info": 1,
                    "sym_info": 1,
                    "symbol_data": 4,
                    "symbol_info": 7,
                    "temp": 1,
                    "tmp_value": 1,
                    "value": 1,
                    "value2": 1,
                    "var6": 1
                },
                "param_1": {
                    "symbol": 11,
                    "symbol_data": 1,
                    "symbol_info": 11,
                    "symbol_info_ptr": 1,
                    "symbol_information": 1,
                    "symbol_ptr": 3,
                    "symbols": 3
                },
                "param_2": {
                    "additional_info": 1,
                    "address": 2,
                    "file_offset": 1,
                    "format": 1,
                    "info": 1,
                    "param": 12,
                    "param_2": 10,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 1
                },
                "pcVar8": {
                    "code_str": 1,
                    "data_type_string": 1,
                    "kind_str": 1,
                    "section_name": 1,
                    "sym_class": 1,
                    "sym_type": 1,
                    "sym_type_name": 1,
                    "symbol_category": 1,
                    "symbol_class": 1,
                    "symbol_name": 2,
                    "symbol_type": 1,
                    "symbol_type_string": 1,
                    "symclass_string": 1,
                    "type_description": 2,
                    "type_name": 3,
                    "type_str": 1,
                    "type_string": 10,
                    "var8": 1
                },
                "piVar4": {
                    "err_num": 1,
                    "errno": 1,
                    "errno_loc": 4,
                    "errno_location": 12,
                    "errno_location_ptr": 2,
                    "errno_ptr": 2,
                    "error_code": 2,
                    "error_location": 1,
                    "error_num": 3,
                    "error_number": 2,
                    "var4": 1
                },
                "print_symname": {
                    "print_symbol_name": 3
                },
                "print_value_constprop_0": {
                    "print_constant_propagation_value": 1,
                    "print_constant_value": 1,
                    "print_value": 1
                },
                "printf": {
                    "output": 1,
                    "print_formatted_data": 1,
                    "print_function": 1
                },
                "uVar2": {
                    "class": 5,
                    "class_type": 2,
                    "class_value": 2,
                    "data_type": 1,
                    "sym_class": 6,
                    "sym_type": 1,
                    "symbol_class": 4,
                    "symbol_type": 3,
                    "symclass": 1,
                    "symclass_val": 1,
                    "symclass_value": 2,
                    "type_flag": 1,
                    "value": 1,
                    "var2": 1
                },
                "uVar5": {
                    "error": 1,
                    "error_message": 5,
                    "error_msg": 4,
                    "error_string": 4,
                    "str_error": 2,
                    "strerror_msg": 1,
                    "strerror_ret": 1,
                    "var5": 1,
                    "xstr_error": 1,
                    "xstrerror": 1,
                    "xstrerror_result": 7,
                    "xstrerror_ret": 1,
                    "xstrerror_ret_val": 1,
                    "xstrerror_return": 1
                },
                "xstrerror": {
                    "get_error_message": 1,
                    "get_error_string": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_00102330",
                "FUN_00106300",
                "FUN_001022e0",
                "FUN_00102080",
                "FUN_00104740",
                "FUN_001020f0",
                "FUN_001054d0",
                "FUN_00102150",
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\nvoid print_symbol_info_00103729(long *symbol,undefined8 param)\n\n{\n  char is_undefined;\n  ushort sym_class;\n  int asprintf_result;\n  int *errno_location;\n  undefined8 xstrerror_result;\n  long symbol_info;\n  byte type;\n  char *type_string;\n  \n  print_symbol_name(\"%-20s|\",symbol,0,param);\n  is_undefined = is_undefined_symclass((int)*(char *)(*symbol + 8));\n  if (is_undefined == '\\0') {\n    print_value(*(undefined8 *)*symbol);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    print_formatted_data(\"        \");\n  }\n  else {\n    print_formatted_data(\"                \");\n  }\n  print_formatted_data(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*symbol + 8));\n  if (*(char *)(*symbol + 8) == '-') {\n    print_formatted_data(\"%18s|  \",*(undefined8 *)(*symbol + 0x20));\n    print_formatted_data(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol + 0x1a));\n    jump label_1;\n  }\n  if (symbol[2] == 0) {\n    if (symbol[3] != 0) {\n      symbol_info = *(long *)(symbol[3] + 0x30);\n      is_undefined = *(char *)(symbol_info + 0x28);\n      if (is_undefined == 'g') jump LAB_00103983;\n      if (is_undefined == 'h') {\n        type_string = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        type_string = \"Block\";\n      }\n      else if (*(ushort *)(symbol_info + 0x26) == 0) {\n        type_string = \"None\";\n      }\n      else {\n        sym_class = *(ushort *)(symbol_info + 0x26) >> 4 & 3;\n        if (sym_class == 2) {\n          type_string = \"Function\";\n        }\n        else if (sym_class == 3) {\n          type_string = \"Array\";\n        }\n        else {\n          if (sym_class != 1) {\n            release(DAT_0010b730);\n            sym_class = *(ushort *)(symbol_info + 0x26);\n            type = *(byte *)(symbol_info + 0x28);\n            type_string = (char *)get_translation(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = format_string(&DAT_0010b730,type_string,(ulong)type,(ulong)sym_class);\n            type_string = DAT_0010b730;\n            jump append_info;\n          }\n          type_string = \"Pointer\";\n        }\n      }\n      jump LAB_001039c0;\n    }\n    print_formatted_data(\"                  |\");\n  }\n  else {\n    type = *(byte *)(symbol[2] + 0x48) & 0xf;\n    switch(type) {\n    case 0:\n      type_string = \"NOTYPE\";\n      break;\n    case 1:\n      type_string = \"OBJECT\";\n      break;\n    case 2:\n      type_string = \"FUNC\";\n      break;\n    case 3:\n      type_string = \"SECTION\";\n      break;\n    case 4:\n      type_string = \"FILE\";\n      break;\n    case 5:\n      type_string = \"COMMON\";\n      break;\n    case 6:\n      type_string = \"TLS\";\n      break;\n    default:\n      release(DAT_0010b728);\n      type_string = \"<processor specific>: %d\";\n      if ((2 < type - 0xd) && (type_string = \"<OS specific>: %d\", 2 < type - 10)) {\n        type_string = \"<unknown>: %d\";\n      }\n      type_string = (char *)get_translation(0,type_string,5);\n      asprintf_result = format_string(&DAT_0010b728,type_string,(ulong)type);\n      type_string = DAT_0010b728;\nappend_info:\n      if (asprintf_result < 0) {\n        errno_location = get_error_location();\n        xstrerror_result = get_error_string(*errno_location);\n        print_fatal_error(&DAT_0010712d,xstrerror_result);\nLAB_00103983:\n        type_string = \"File\";\n      }\n    }\nLAB_001039c0:\n    print_formatted_data(\"%18s|\",type_string);\n  }\n  if (symbol[2] == 0) {\n    if (symbol[1] != 0) jump LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      print_formatted_data(\"        \");\n    }\n    else {\n      print_formatted_data(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(symbol[2] + 0x38) == 0) jump LAB_00103a02;\nLAB_001039fb:\n    print_value();\n  }\n  symbol_info = symbol[2];\n  if ((symbol_info != 0) || (symbol_info = symbol[3], symbol_info != 0)) {\n    print_formatted_data(\"|     |%s\",**(undefined8 **)(symbol_info + 0x20));\n    return;\n  }\nlabel_1:\n  print_formatted_data(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_symbol_info_00103729",
            "entrypoint": "0x00103729",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103729": "print_symbol_info_00103729",
                "LAB_00103a54": "label_1",
                "__errno_location": "get_error_location",
                "asprintf": "format_string",
                "bVar7": "type",
                "bfd_is_undefined_symclass": "is_undefined_symclass",
                "cVar1": "is_undefined",
                "dcgettext": "get_translation",
                "fatal": "print_fatal_error",
                "free": "release",
                "goto": "jump",
                "iVar3": "asprintf_result",
                "joined_r0x00103964": "append_info",
                "lVar6": "symbol_info",
                "param_1": "symbol",
                "param_2": "param",
                "pcVar8": "type_string",
                "piVar4": "errno_location",
                "print_symname": "print_symbol_name",
                "print_value_constprop_0": "print_value",
                "printf": "print_formatted_data",
                "uVar2": "sym_class",
                "uVar5": "xstrerror_result",
                "xstrerror": "get_error_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a66": {
            "additional_data": {
                "FUN_00103a66": {
                    "check_and_print_constant": 1,
                    "check_and_print_constant_value": 16,
                    "check_and_print_value": 3,
                    "check_for_non_zero_value": 1,
                    "check_if_constant_value_exists": 3,
                    "check_if_pointer_not_null": 1,
                    "check_if_value_exists": 1,
                    "check_if_value_is_constant": 1,
                    "check_if_value_is_not_null": 1,
                    "check_print_constant_value": 1,
                    "check_value_and_print": 1,
                    "check_variable_and_print": 1
                },
                "print_constant_value_0010651a": {
                    "print_constant_value": 2
                },
                "unaff_RBX": {
                    "base_address": 23,
                    "parameter": 1,
                    "pointer": 1,
                    "pointer_to_rbx": 1,
                    "pointer_to_value": 1,
                    "ptr": 1,
                    "rbx": 1,
                    "value_pointer": 1,
                    "variable_to_check": 1
                }
            },
            "called": [
                "FUN_0010651a"
            ],
            "calling": [
                "FUN_001064b0"
            ],
            "code": "\nvoid check_and_print_constant_value_00103a66(void)\n\n{\n  long base_address;\n  \n  if (*(long *)(base_address + 8) != 0) {\n    print_constant_value();\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_print_constant_value_00103a66",
            "entrypoint": "0x00103a66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a66": "check_and_print_constant_value_00103a66",
                "print_constant_value_0010651a": "print_constant_value",
                "unaff_RBX": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "FUN_00103a78": {
                    "print_error": 1,
                    "print_error_info": 1,
                    "print_error_message": 29
                },
                "uVar1": {
                    "error_message": 19,
                    "error_string": 3,
                    "error_text": 2
                },
                "unaff_RBX": {
                    "error_code": 19,
                    "error_condition": 1,
                    "error_flag": 6,
                    "error_status": 1,
                    "error_type": 3,
                    "return_value": 1
                },
                "unaff_retaddr": {
                    "return_addr": 1,
                    "return_address": 30
                }
            },
            "called": [
                "FUN_00102150"
            ],
            "calling": [
                "FUN_00106540"
            ],
            "code": "\n\n\nvoid print_error_message_00103a78(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "print_error_message_00103a78",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ab9": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103ab9(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103ab9",
            "entrypoint": "0x00103ab9",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103ab9": "FUNC_00103ab9"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103aba": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103aba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103aba",
            "entrypoint": "0x00103aba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103aba": "FUNC_00103aba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abb": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abb(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abb",
            "entrypoint": "0x00103abb",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abb": "FUNC_00103abb"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abc": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abc",
            "entrypoint": "0x00103abc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abc": "FUNC_00103abc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abd": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abd(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abd",
            "entrypoint": "0x00103abd",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abd": "FUNC_00103abd"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abe": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abe(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abe",
            "entrypoint": "0x00103abe",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abe": "FUNC_00103abe"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abf": {
            "additional_data": {
                "DAT_0010b7a8": {
                    "header_size": 1
                },
                "DAT_0010b7e8": {
                    "is_undefined_symbols_zero": 1
                },
                "FUN_00103abf": {
                    "print_symbol_data": 1,
                    "print_symbol_info": 9,
                    "print_symbol_information": 4,
                    "print_symbol_table": 2,
                    "print_symbols": 5,
                    "print_undefined_symbols": 10
                },
                "dcgettext": {
                    "get_localized_text": 2,
                    "get_message": 1,
                    "get_translated_string": 3,
                    "get_translated_text": 1
                },
                "param_1": {
                    "binary_name": 3,
                    "file": 1,
                    "file_name": 5,
                    "file_path": 5,
                    "filename": 4,
                    "library_name": 4,
                    "module": 1,
                    "module_name": 1,
                    "program_name": 1,
                    "source": 1,
                    "source_file": 2,
                    "source_file_name": 1,
                    "symbol": 1,
                    "symbol_name": 1
                },
                "param_2": {
                    "binary_name": 1,
                    "file_name": 5,
                    "filename": 2,
                    "function_name": 1,
                    "library": 3,
                    "library_name": 5,
                    "object_file": 1,
                    "process_name": 1,
                    "section_name": 3,
                    "source": 1,
                    "symbol": 1,
                    "symbol_location": 1,
                    "symbol_name": 5,
                    "symbol_value": 1
                },
                "pcVar1": {
                    "error_format": 1,
                    "error_message": 1,
                    "format": 1,
                    "format_string": 21,
                    "message": 4,
                    "message_format": 1,
                    "message_template": 1,
                    "symbol_format": 1
                },
                "pcVar2": {
                    "header_format": 1,
                    "symbol_table_header": 1
                },
                "printf": {
                    "print_formatted_output": 1
                }
            },
            "called": [
                "FUN_00102150",
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\nvoid print_undefined_symbols_00103abf(undefined8 file_path,undefined8 library_name)\n\n{\n  char *format_string;\n  \n  format_string = \"\\n\\nUndefined symbols from %s[%s]:\\n\\n\";\n  if (DAT_0010b7e8 == 0) {\n    format_string = \"\\n\\nSymbols from %s[%s]:\\n\\n\";\n  }\n  format_string = (char *)get_translated_string(0,format_string,5);\n  print_formatted_output(format_string,file_path,library_name);\n  format_string = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 != 0x20) {\n    format_string = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  format_string = (char *)get_translated_string(0,format_string,5);\n  print_formatted_output(format_string);\n  return;\n}\n\n",
            "current_name": "print_undefined_symbols_00103abf",
            "entrypoint": "0x00103abf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103abf": "print_undefined_symbols_00103abf",
                "dcgettext": "get_translated_string",
                "param_1": "file_path",
                "param_2": "library_name",
                "pcVar1": "format_string",
                "printf": "print_formatted_output"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b2b": {
            "additional_data": {
                "FUN_00103b2b": {
                    "print_debug_message": 1,
                    "print_function": 2,
                    "print_function_name": 1,
                    "print_if_data_flag_set": 1,
                    "print_if_debug_enabled": 2,
                    "print_if_debug_mode": 1,
                    "print_if_enabled": 1,
                    "print_if_flag_set": 1,
                    "print_if_initialized": 1,
                    "print_if_not_zero": 2,
                    "print_log_message": 4,
                    "print_logging_message": 1,
                    "print_message": 10,
                    "print_message_if_condition_met": 1,
                    "print_message_if_enabled": 1,
                    "print_message_if_flag_not_set": 1
                },
                "param_1": {
                    "file_name": 1,
                    "format": 1,
                    "function_name": 1,
                    "log_id": 1,
                    "log_level": 1,
                    "log_message": 1,
                    "log_prefix": 1,
                    "message": 10,
                    "message_prefix": 1,
                    "message_title": 1,
                    "message_type": 4,
                    "module_name": 6,
                    "tag": 1,
                    "title": 1
                },
                "param_2": {
                    "additional_info": 1,
                    "content": 1,
                    "data": 1,
                    "details": 1,
                    "error_message": 1,
                    "format": 1,
                    "function_name": 2,
                    "label": 1,
                    "log_level": 1,
                    "log_message": 5,
                    "message": 5,
                    "message_content": 2,
                    "message_suffix": 1,
                    "parameter_name": 1,
                    "source": 1,
                    "tag": 4,
                    "value": 2
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "printf": {
                    "display_message": 1,
                    "print": 1,
                    "print_formatted_message": 2
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\nvoid print_log_message_00103b2b(undefined8 message,undefined8 log_message)\n\n{\n  if (DAT_0010b818 == 0) {\n    print_formatted_message(\"%s[%s]:\\n\",message,log_message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_log_message_00103b2b",
            "entrypoint": "0x00103b2b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b2b": "print_log_message_00103b2b",
                "param_1": "message",
                "param_2": "log_message",
                "printf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b49": {
            "additional_data": {
                "DAT_0010712d": {
                    "dat_0010712d": 1,
                    "symbol_data": 1,
                    "symbol_name": 1,
                    "symbol_name_data": 1
                },
                "FUN_00103b49": {
                    "print_and_return_symname": 1,
                    "print_symbol_name": 20,
                    "print_symname": 2,
                    "print_symname_wrapper": 8
                },
                "FUN_00104740": {
                    "parse_string": 2,
                    "parse_symbol": 1,
                    "parse_symbol_and_parameters": 1,
                    "parse_symbol_data": 1,
                    "parse_symbol_information": 1,
                    "parse_symbol_name": 2,
                    "print_symname": 2,
                    "process_data": 4,
                    "process_parameters": 2,
                    "process_string": 1,
                    "process_symbol": 3,
                    "reverse_string": 1
                },
                "param_1": {
                    "data": 2,
                    "data_buffer": 1,
                    "input_1": 1,
                    "input_param": 1,
                    "input_string": 3,
                    "name": 1,
                    "param_1": 4,
                    "param_address": 1,
                    "str": 1,
                    "string_param": 1,
                    "symbol": 1,
                    "symbol_address": 3,
                    "symbol_data": 2,
                    "symbol_info": 1,
                    "symbol_name": 5,
                    "symbol_name_ptr": 1,
                    "symbol_str": 1,
                    "symbol_string": 1
                },
                "param_2": {
                    "address": 2,
                    "data_buffer": 1,
                    "data_length": 2,
                    "data_pointer": 1,
                    "input_2": 1,
                    "length": 3,
                    "length_param": 1,
                    "output_param": 1,
                    "output_value": 3,
                    "param": 1,
                    "param2": 1,
                    "param_2": 7,
                    "param_size": 1,
                    "parameter_list": 1,
                    "symbol_address": 2,
                    "symbol_length": 1,
                    "symbol_list": 1,
                    "unknown_parameter": 1
                },
                "param_3": {
                    "address": 1,
                    "address_pointer": 1,
                    "data_info": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "param3": 1,
                    "param_3": 2,
                    "pointer_list": 1,
                    "print_options": 1,
                    "result": 3,
                    "symbol_info": 2,
                    "symbol_pointer": 1,
                    "undefined_param": 1,
                    "unknown_parameter_2": 1
                },
                "param_4": {
                    "buffer_size": 2,
                    "data_length": 1,
                    "info_length": 1,
                    "input_length": 1,
                    "max_length": 1,
                    "param4": 1,
                    "param_4": 5,
                    "param_count": 1,
                    "param_length": 1,
                    "size": 3,
                    "size_param": 1,
                    "some_value": 1,
                    "string_length": 1,
                    "symbol_length": 1,
                    "symbol_size": 1,
                    "unknown_parameter_3": 1
                },
                "print_symname": {
                    "print_symbol_name": 15
                }
            },
            "called": [
                "FUN_00104740"
            ],
            "calling": [],
            "code": "\nvoid print_symbol_name_00103b49(undefined8 symbol_name,undefined8 param_2)\n\n{\n  print_symbol_name_00103b49(&DAT_0010712d,symbol_name,0,param_2);\n  return;\n}\n\n",
            "current_name": "print_symbol_name_00103b49",
            "entrypoint": "0x00103b49",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b49": "print_symbol_name_00103b49",
                "param_1": "symbol_name",
                "print_symname": "print_symbol_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b5d": {
            "additional_data": {
                "FUN_00103b5d": {
                    "print_matching_formats": 31
                },
                "__format": {
                    "error_message": 1,
                    "format_message": 4,
                    "format_string": 20,
                    "formats_message": 1,
                    "formatted_msg": 1,
                    "sentence_format": 1
                },
                "_stderr": {
                    "standard_error": 3,
                    "stderr": 2
                },
                "_stdout": {
                    "standard_output": 3,
                    "stdout": 2
                },
                "param_1": {
                    "format_list": 3,
                    "format_strings": 11,
                    "formats": 14,
                    "formats_list": 1,
                    "matching_formats": 1
                },
                "plVar2": {
                    "current_format": 22,
                    "current_format_string": 1,
                    "current_string": 2,
                    "format_iterator": 1,
                    "format_ptr": 1,
                    "ptr_format_string": 1
                },
                "uVar1": {
                    "data": 1,
                    "data_ptr": 1,
                    "data_to_print": 1,
                    "default_format": 3,
                    "format": 3,
                    "format_message": 1,
                    "format_string": 1,
                    "matching_formats": 5,
                    "matching_formats_header": 1,
                    "saved_value": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_001022b0",
                "FUN_00102210",
                "FUN_00102260",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103b5d(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_0010b820;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103b5d",
            "entrypoint": "0x00103b5d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b5d": "print_matching_formats_00103b5d",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bec": {
            "additional_data": {
                "FUN_00103bec": {
                    "calculate_negative_result": 4,
                    "calculate_negative_sum": 1,
                    "calculate_negative_value": 1,
                    "calculate_output": 1,
                    "calculate_result": 18,
                    "calculate_return_value": 1,
                    "calculate_reversed_value": 1,
                    "calculate_value": 1,
                    "numeric_backward": 1,
                    "reverse_numeric": 2
                },
                "auVar2": {
                    "final_result": 1,
                    "new_result": 3,
                    "output": 4,
                    "output_array": 2,
                    "result": 8,
                    "result_array": 1,
                    "result_buffer": 1,
                    "return_value": 2,
                    "reversed_array": 1
                },
                "iVar1": {
                    "forward_result": 7,
                    "forward_value": 1,
                    "numeric_forward_result": 2,
                    "numeric_result": 11,
                    "result": 8
                },
                "in_RAX": {
                    "accumulator": 1,
                    "input": 3,
                    "input_value": 21,
                    "result": 2,
                    "return_value": 1,
                    "user_data": 1
                },
                "numeric_forward": {
                    "calculate_numeric_value": 1,
                    "get_numeric_forward_value": 1,
                    "get_numeric_value": 2
                }
            },
            "called": [
                "FUN_00105050"
            ],
            "calling": [],
            "code": "\nundefined  [16] calculate_negative_result_00103bec(void)\n\n{\n  int numeric_result;\n  undefined8 input_value;\n  undefined result [16];\n  \n  numeric_result = get_numeric_value();\n  result._0_4_ = -numeric_result;\n  result._4_4_ = 0;\n  result._8_8_ = input_value;\n  return result;\n}\n\n",
            "current_name": "calculate_negative_result_00103bec",
            "entrypoint": "0x00103bec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bec": "calculate_negative_result_00103bec",
                "auVar2": "result",
                "iVar1": "numeric_result",
                "in_RAX": "input_value",
                "numeric_forward": "get_numeric_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bf6": {
            "additional_data": {
                "FUN_00103bf6": {
                    "calculate_negative": 1,
                    "calculate_result": 28,
                    "reverse_non_numeric_forward": 1,
                    "reverse_numeric_value": 1
                },
                "auVar2": {
                    "modified_result": 3,
                    "output": 2,
                    "output_array": 1,
                    "output_result": 2,
                    "result": 13,
                    "result_array": 2,
                    "result_buffer": 1,
                    "result_info": 1,
                    "result_variable": 1,
                    "reverse_result": 1,
                    "reversed_output": 1,
                    "reversed_value": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "forward_result": 10,
                    "forward_value": 5,
                    "negative_i_var": 1,
                    "negative_i_var1": 1,
                    "negative_result": 1,
                    "non_numeric_result": 3,
                    "numeric_forward_result": 1,
                    "numeric_value": 2,
                    "result": 5,
                    "result_1": 1
                },
                "in_RAX": {
                    "input3": 1,
                    "input_value": 9,
                    "result": 3,
                    "result_value": 1
                },
                "non_numeric_forward": {
                    "get_forward_value": 1,
                    "get_numeric_value": 2
                },
                "param_1": {
                    "in_param_1": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_param1": 3,
                    "input_param_1": 3,
                    "input_value_1": 1
                },
                "param_2": {
                    "in_param_2": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 3,
                    "input_param_2": 3,
                    "input_value_2": 1
                }
            },
            "called": [
                "FUN_00104fa0"
            ],
            "calling": [],
            "code": "\nundefined  [16] calculate_result_00103bf6(void)\n\n{\n  int forward_result;\n  undefined8 input_value;\n  undefined result [16];\n  \n  forward_result = get_numeric_value();\n  result._0_4_ = -forward_result;\n  result._4_4_ = 0;\n  result._8_8_ = input_value;\n  return result;\n}\n\n",
            "current_name": "calculate_result_00103bf6",
            "entrypoint": "0x00103bf6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bf6": "calculate_result_00103bf6",
                "auVar2": "result",
                "iVar1": "forward_result",
                "in_RAX": "input_value",
                "non_numeric_forward": "get_numeric_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c00": {
            "additional_data": {
                "FUN_00103c00": {
                    "decode_and_update_data": 1,
                    "extract_reloc_data": 1,
                    "extract_relocation_data": 1,
                    "extract_relocation_information": 1,
                    "parse_relocation": 1,
                    "process_binary": 1,
                    "process_binary_data": 2,
                    "process_binary_function": 1,
                    "process_reloc": 3,
                    "process_relocation": 13,
                    "process_relocations": 1,
                    "reloc_canonicalization": 1,
                    "relocate_and_initialize": 1,
                    "update_relocation": 1,
                    "update_relocation_values": 1,
                    "update_relocations": 1
                },
                "LAB_00103c7c": {
                    "jump_to_end": 1
                },
                "auVar2": {
                    "array": 1,
                    "au_variable": 1,
                    "aux_data": 1,
                    "aux_var": 3,
                    "auxiliary": 1,
                    "avar2": 1,
                    "canonicalized_reloc": 1,
                    "new_array": 1,
                    "new_buffer": 1,
                    "new_relocation_data": 1,
                    "new_values": 1,
                    "reloc_data": 1,
                    "reloc_info": 1,
                    "reloc_metadata": 1,
                    "reloc_struct": 1,
                    "reloc_temp": 1,
                    "temp": 4,
                    "temp_array": 5,
                    "temp_buffer": 1,
                    "temp_var": 2,
                    "updated_reloc_info": 1
                },
                "bfd_canonicalize_reloc": {
                    "canonicalize_reloc": 2
                },
                "bfd_fatal": {
                    "fatal_error": 1
                },
                "bfd_get_reloc_upper_bound": {
                    "get_reloc_upper_bound": 1
                },
                "lVar3": {
                    "bound_size": 1,
                    "len": 1,
                    "length": 6,
                    "length_var": 1,
                    "local_variable": 1,
                    "reloc_bound": 1,
                    "reloc_byte_size": 1,
                    "reloc_size": 2,
                    "reloc_upper_bound": 2,
                    "relocation_size": 1,
                    "size": 3,
                    "temp_value": 1,
                    "upper_bound": 10
                },
                "param_1": {
                    "arg1": 1,
                    "bfd_handle": 2,
                    "bfd_handler": 1,
                    "binary": 2,
                    "binary_files": 1,
                    "binary_handle": 2,
                    "data_ptr": 1,
                    "file": 1,
                    "file_handle": 4,
                    "input": 1,
                    "input_param": 1,
                    "output_file": 1,
                    "param": 2,
                    "param_1": 1,
                    "param_array": 2,
                    "param_elf_handle": 1,
                    "param_pointer": 4,
                    "param_ptr": 3
                },
                "param_2": {
                    "address": 2,
                    "arg2": 1,
                    "array_length": 1,
                    "base_address": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "input_file": 1,
                    "offset": 2,
                    "param_2": 1,
                    "param_length": 1,
                    "param_section_start": 1,
                    "param_value": 4,
                    "reloc_addr": 2,
                    "reloc_offset": 1,
                    "reloc_param": 1,
                    "relocation_address": 1,
                    "relocation_index": 1,
                    "relocation_offset": 2,
                    "relocation_val": 1,
                    "relocation_value": 1,
                    "symbol_address": 1,
                    "symbol_table_offset": 1,
                    "value": 1
                },
                "param_3": {
                    "data": 2,
                    "data_array": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "param_3": 1,
                    "param_array": 4,
                    "param_array2": 1,
                    "param_reloc_info": 1,
                    "reloc_buffer": 1,
                    "reloc_data": 4,
                    "reloc_data_ptr": 1,
                    "reloc_info": 7,
                    "relocation": 1,
                    "relocation_data": 1,
                    "relocation_info": 1,
                    "result": 1
                },
                "param_4": {
                    "arg1": 1,
                    "arg3": 1,
                    "arg4": 1,
                    "param4": 6,
                    "param_4": 11,
                    "param_arg1": 1,
                    "param_external_target": 1,
                    "param_value1": 2,
                    "param_value2": 1,
                    "param_var1": 1,
                    "unknown_param": 1,
                    "unused_parameter_1": 1,
                    "var1": 2,
                    "var4": 1
                },
                "param_5": {
                    "arg2": 1,
                    "arg4": 1,
                    "arg5": 1,
                    "param5": 6,
                    "param_5": 11,
                    "param_arg2": 1,
                    "param_return_value": 1,
                    "param_value2": 2,
                    "param_value3": 1,
                    "param_var2": 1,
                    "return_value": 2,
                    "unused_parameter_2": 1,
                    "var2": 2
                },
                "puVar1": {
                    "destination_ptr": 1,
                    "dst_buffer": 1,
                    "new_pointer": 1,
                    "output_ptr": 1,
                    "pointer1": 2,
                    "pointer_var1": 2,
                    "ptr": 1,
                    "ptr1": 7,
                    "ptr_array": 1,
                    "ptr_canonicalize_reloc": 1,
                    "ptr_to_output_data": 1,
                    "ptr_var1": 1,
                    "pu_variable": 1,
                    "reloc_buffer": 1,
                    "reloc_data_ptr": 1,
                    "reloc_ptr": 4,
                    "target_ptr": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 1
                },
                "uVar4": {
                    "alloc_ptr": 1,
                    "alloc_result": 1,
                    "allocated_buffer": 2,
                    "allocated_data": 1,
                    "allocated_mem": 2,
                    "allocated_memory": 4,
                    "allocated_reloc": 1,
                    "allocated_reloc_data": 1,
                    "allocated_var": 1,
                    "allocation": 1,
                    "malloc_result": 2,
                    "malloced_reloc": 1,
                    "mem_allocation": 1,
                    "ptr2": 2,
                    "reloc_result": 1,
                    "temp1": 2,
                    "temp_value2": 1,
                    "temp_var1": 2,
                    "u_var4": 1,
                    "u_variable1": 1,
                    "value1": 1,
                    "x_allocated": 1
                },
                "uVar5": {
                    "canonical_reloc_value": 1,
                    "canonicalized": 1,
                    "canonicalized_reloc": 9,
                    "canonicalized_reloc_data": 1,
                    "canonicalized_result": 2,
                    "canonicalized_var": 1,
                    "ptr3": 2,
                    "relocated_buffer": 1,
                    "relocated_data": 3,
                    "relocated_memory": 1,
                    "relocation": 1,
                    "temp2": 2,
                    "temp_value3": 1,
                    "temp_var2": 2,
                    "u_var5": 1,
                    "u_variable2": 1,
                    "value2": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "FUN_001023a0",
                "FUN_001023f0",
                "FUN_00106530",
                "FUN_001021e0"
            ],
            "calling": [
                "FUN_00103238"
            ],
            "code": "\nundefined8\nprocess_relocation_00103c00(undefined8 *file_handle,long param_value,undefined (*reloc_info) [16],undefined8 param_4,\n            undefined8 param_5)\n\n{\n  undefined8 *ptr1;\n  undefined temp_array [16];\n  long upper_bound;\n  undefined8 allocated_memory;\n  undefined8 canonicalized_reloc;\n  \n  **(long **)*reloc_info = param_value;\n  if ((*(byte *)(param_value + 0x24) & 4) == 0) {\n    **(undefined8 **)(*reloc_info + 8) = 0;\n    **(undefined8 **)reloc_info[1] = 0;\n  }\n  else {\n    upper_bound = get_reloc_upper_bound();\n    if (-1 < upper_bound) {\n      ptr1 = *(undefined8 **)(*reloc_info + 8);\n      allocated_memory = allocate_memory(upper_bound);\n      canonicalized_reloc = *(undefined8 *)(reloc_info[1] + 8);\n      *ptr1 = allocated_memory;\n      ptr1 = *(undefined8 **)reloc_info[1];\n      canonicalized_reloc = canonicalize_reloc(file_handle,param_value,**(undefined8 **)(*reloc_info + 8),canonicalized_reloc);\n      *ptr1 = canonicalized_reloc;\n      if (-1 < **(long **)reloc_info[1]) goto jump_to_end;\n    }\n    fatal_error(*file_handle);\n  }\njump_to_end:\n  upper_bound = *(long *)(*reloc_info + 8) + 8;\n  *(long *)reloc_info[1] = *(long *)reloc_info[1] + 8;\n  temp_array._8_4_ = (int)upper_bound;\n  temp_array._0_8_ = *(long *)*reloc_info + 8;\n  temp_array._12_4_ = (int)((ulong)upper_bound >> 0x20);\n  *reloc_info = temp_array;\n  return param_5;\n}\n\n",
            "current_name": "process_relocation_00103c00",
            "entrypoint": "0x00103c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c00": "process_relocation_00103c00",
                "LAB_00103c7c": "jump_to_end",
                "auVar2": "temp_array",
                "bfd_canonicalize_reloc": "canonicalize_reloc",
                "bfd_fatal": "fatal_error",
                "bfd_get_reloc_upper_bound": "get_reloc_upper_bound",
                "lVar3": "upper_bound",
                "param_1": "file_handle",
                "param_2": "param_value",
                "param_3": "reloc_info",
                "puVar1": "ptr1",
                "uVar4": "allocated_memory",
                "uVar5": "canonicalized_reloc",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ca0": {
            "additional_data": {
                "FUN_00102450": {
                    "print_supported_targets": 1
                },
                "FUN_00103ca0": {
                    "display_help_information": 1,
                    "display_usage": 6,
                    "display_usage_info": 1,
                    "print_symbol_info": 2,
                    "print_symbol_information": 3,
                    "print_symbol_list": 2,
                    "print_symbols": 1,
                    "print_symbols_usage": 2,
                    "print_usage": 13
                },
                "__ptr": {
                    "bfd_target_list": 1,
                    "bfd_targets": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_array1": 1,
                    "target_list": 24,
                    "target_list_ptr": 1,
                    "targets": 1
                },
                "bfd_target_list": {
                    "get_bfd_targets": 1
                },
                "dcgettext": {
                    "get_message": 1,
                    "get_translated_text": 1
                },
                "exit": {
                    "exit_program": 1,
                    "terminate_program": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "write_to_file": 1
                },
                "fputc": {
                    "put_character": 1,
                    "write_to_stdout": 1
                },
                "free": {
                    "free_memory": 2
                },
                "iVar2": {
                    "char_count": 1,
                    "format_length": 2,
                    "format_result": 1,
                    "fprintf_ret_val1": 1,
                    "int_var2": 1,
                    "iteration_variable1": 1,
                    "local_variable2": 1,
                    "num_chars": 1,
                    "output_size": 1,
                    "symbol_count": 1,
                    "total_characters": 3,
                    "total_characters_printed": 1,
                    "total_chars": 7,
                    "total_chars_printed": 3,
                    "total_length": 4,
                    "total_written": 1,
                    "variable1": 1
                },
                "iVar3": {
                    "character_count": 1,
                    "characters_printed": 1,
                    "chars_printed": 4,
                    "chars_written": 5,
                    "current_character_count": 1,
                    "fprintf_count": 1,
                    "fprintf_length": 1,
                    "fprintf_result": 1,
                    "fprintf_ret_val2": 1,
                    "int_var3": 1,
                    "iteration_variable2": 1,
                    "length": 2,
                    "local_variable3": 1,
                    "num_chars2": 1,
                    "string_length": 1,
                    "symbol_chars": 1,
                    "symbol_count": 1,
                    "symbol_length": 2,
                    "symbol_size": 1,
                    "symbol_written": 1,
                    "total_characters_in_line": 1,
                    "variable2": 1
                },
                "lVar1": {
                    "default_target": 3,
                    "language": 1,
                    "language_code": 1,
                    "language_support": 1,
                    "language_var1": 1,
                    "language_variable": 1,
                    "local_variable1": 1,
                    "message": 1,
                    "supported_targets": 3,
                    "target": 6,
                    "target_name": 9,
                    "target_object": 1,
                    "target_string": 2
                },
                "lVar5": {
                    "char_index": 2,
                    "count": 2,
                    "counter": 2,
                    "current_character_index": 1,
                    "current_length": 1,
                    "increment_val": 1,
                    "index": 12,
                    "iterator": 1,
                    "language_var2": 1,
                    "length": 1,
                    "local_variable5": 1,
                    "loop_counter": 1,
                    "loop_variable": 1,
                    "space_count": 3,
                    "str_index": 1
                },
                "local_3c": {
                    "count": 2,
                    "counter2": 1,
                    "indentation": 1,
                    "indentation_level": 2,
                    "leading_spaces": 1,
                    "length": 1,
                    "local_var": 2,
                    "local_variable": 4,
                    "local_variable4": 1,
                    "num_spaces": 2,
                    "offset": 1,
                    "padding": 2,
                    "space_count": 5,
                    "space_counter": 1,
                    "space_offset": 1,
                    "spaces": 1,
                    "spaces_count": 1,
                    "spaces_to_skip": 1
                },
                "param_1": {
                    "file": 13,
                    "file_pointer": 4,
                    "file_ptr": 1,
                    "output_file": 12,
                    "output_file_ptr": 1
                },
                "param_2": {
                    "error_code": 2,
                    "exit_code": 28,
                    "exit_status": 1
                },
                "pcVar4": {
                    "format_string": 3,
                    "localized_string": 2,
                    "message": 13,
                    "print_var1": 1,
                    "string": 1,
                    "text": 11
                },
                "pcVar9": {
                    "delimiter": 7,
                    "demangler_format": 1,
                    "demangler_suffix": 1,
                    "joining_variable": 1,
                    "print_var2": 1,
                    "separator": 20
                },
                "plVar7": {
                    "current_target": 1,
                    "list_ptr": 1,
                    "pointer": 1,
                    "pointer_array2": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 8,
                    "ptr_bfd_targets": 1,
                    "ptr_target": 1,
                    "ptr_target_list": 1,
                    "ptr_to_list": 1,
                    "target": 5,
                    "target_pointer": 3,
                    "target_ptr": 5
                },
                "ppcVar8": {
                    "demangle_list": 1,
                    "demangler": 4,
                    "demangler_list": 2,
                    "demangler_list_ptr": 1,
                    "demangler_ptr": 4,
                    "demanglers": 4,
                    "demanglers_list": 3,
                    "demanglers_ptr": 1,
                    "demangling_style": 1,
                    "plugin": 1,
                    "plugin_name": 1,
                    "pointer_array3": 1,
                    "pointer_pointer": 1,
                    "pointer_to_pointer": 1,
                    "ppc_symbol": 1,
                    "ptr_demangler": 1,
                    "ptr_demanglers": 2,
                    "ptr_to_demanglers_array": 1
                },
                "sVar6": {
                    "format_string_length": 2,
                    "length": 4,
                    "name_length": 6,
                    "size": 1,
                    "size_var": 1,
                    "string_length": 10,
                    "string_size": 1,
                    "strlen": 1,
                    "symbol_length": 5
                },
                "strlen": {
                    "get_length": 1,
                    "string_length": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_001021c0",
                "FUN_001023c0",
                "FUN_0010c198",
                "FUN_00102210",
                "FUN_00102260",
                "FUN_00102160",
                "FUN_00102150",
                "FUN_00102450"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid print_symbols_usage_00103ca0(FILE *file,int exit_code)\n\n{\n  long target_name;\n  int total_chars;\n  int chars_written;\n  char *message;\n  long index;\n  size_t string_length;\n  long *target_list;\n  long *ptr;\n  char **demanglers;\n  char *separator;\n  uint space_count;\n  \n  target_name = DAT_0010b820;\n  message = (char *)get_message(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  write_to_file(file,message,target_name);\n  message = (char *)get_message(0,\" List symbols in [file(s)] (a.out by default).\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\" The options are:\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -a, --debug-syms       Display debugger-only symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"  -A, --print-file-name  Print name of the input file before every symbol\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -B                     Same as --format=bsd\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -C, --demangle[=STYLE] Decode mangled/processed symbol names\\n\",5)\n  ;\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"                           STYLE can be \",5);\n  if (*message == ' ') {\n    target_name = 1;\n    do {\n      index = target_name;\n      target_name = index + 1;\n    } while (message[index] == ' ');\n    space_count = (uint)index;\n  }\n  else {\n    space_count = 0;\n  }\n  total_chars = write_to_file(file,\"%s\",message);\n  separator = \"\";\n  for (demanglers = (char **)&libiberty_demanglers; *demanglers != (char *)0x0; demanglers = demanglers + 3) {\n    string_length = get_length(*demanglers);\n    if (0x4a < (long)total_chars + string_length) {\n      write_to_file(file,\"%.1s\\n\",separator);\n      separator = \"\";\n      total_chars = write_to_file(file,\"%.*s\",(ulong)space_count,message);\n    }\n    chars_written = write_to_file(file,\"%s\\\"%s\\\"\",separator,*demanglers);\n    total_chars = total_chars + chars_written;\n    separator = \", \";\n  }\n  write_to_stdout(10,file);\n  message = (char *)get_message(0,\"      --no-demangle      Do not demangle low-level symbol names\\n\",5\n                            );\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"      --recurse-limit    Enable a demangling recursion limit.  (default)\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"      --no-recurse-limit Disable a demangling recursion limit.\\n\",5)\n  ;\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -e                     (ignored)\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"  -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd\\',\\n                           `sysv\\', `posix\\' or \\'just-symbols\\'.\\n                           The default is `bsd\\'\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -g, --extern-only      Display only external symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -j, --just-symbols     Same as --format=just-symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"  -l, --line-numbers     Use debugging information to find a filename and\\n                           line number for each symbol\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -n, --numeric-sort     Sort symbols numerically by address\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -o                     Same as -A\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -p, --no-sort          Do not sort the symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -P, --portability      Same as --format=posix\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -r, --reverse-sort     Reverse the sense of the sort\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"      --plugin NAME      Load the specified plugin\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -S, --print-size       Print size of defined symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"  -s, --print-armap      Include index for symbols from archive members\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"      --size-sort        Sort symbols by size\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"      --special-syms     Include special symbols in the output\\n\",5)\n  ;\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"      --synthetic        Display synthetic symbols as well\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -t, --radix=RADIX      Use RADIX for printing symbol values\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"      --target=BFDNAME   Specify the target object format as BFDNAME\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -u, --undefined-only   Display only undefined symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -U, --defined-only     Display only defined symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"      --unicode={default|show|invalid|hex|escape|highlight}\\n                         Specify how to treat UTF-8 encoded unicode characters\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -W, --no-weak          Ignore weak symbols\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\n                             \"      --with-symbol-versions  Display version strings after symbol names\\n\"\n                             ,5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -X 32_64               (ignored)\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  @FILE                  Read options from FILE\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -h, --help             Display this information\\n\",5);\n  write_to_file(file,message);\n  message = (char *)get_message(0,\"  -V, --version          Display this program\\'s version number\\n\",5\n                            );\n  write_to_file(file,message);\n  target_name = DAT_0010b820;\n  if (DAT_0010b820 == 0) {\n    message = (char *)get_message(0,\"Supported targets:\",5);\n    write_to_file(file,message);\n  }\n  else {\n    message = (char *)get_message(0,\"%s: supported targets:\",5);\n    write_to_file(file,message,target_name);\n  }\n  target_list = (long *)get_bfd_targets();\n  ptr = target_list;\n  while( true ) {\n    target_name = *ptr;\n    ptr = ptr + 1;\n    if (target_name == 0) break;\n    write_to_file(file,\" %s\");\n  }\n  write_to_stdout(10,file);\n  free_memory(target_list);\n  if (exit_code == 0) {\n    message = (char *)get_message(0,\"Report bugs to %s.\\n\",5);\n    write_to_file(file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_symbols_usage_00103ca0",
            "entrypoint": "0x00103ca0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ca0": "print_symbols_usage_00103ca0",
                "__ptr": "target_list",
                "bfd_target_list": "get_bfd_targets",
                "dcgettext": "get_message",
                "exit": "exit_program",
                "fprintf": "write_to_file",
                "fputc": "write_to_stdout",
                "free": "free_memory",
                "iVar2": "total_chars",
                "iVar3": "chars_written",
                "lVar1": "target_name",
                "lVar5": "index",
                "local_3c": "space_count",
                "param_1": "file",
                "param_2": "exit_code",
                "pcVar4": "message",
                "pcVar9": "separator",
                "plVar7": "ptr",
                "ppcVar8": "demanglers",
                "sVar6": "string_length",
                "strlen": "get_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104370": {
            "additional_data": {
                "DAT_0010b7c0": {
                    "error_flag": 1,
                    "output_format_flag": 1
                },
                "FUN_00104370": {
                    "choose_print_object_filename": 3,
                    "format_selection": 1,
                    "get_print_object_filename": 7,
                    "handle_output_format": 2,
                    "process_output_format": 3,
                    "select_output_format": 2,
                    "select_print_filename_format": 1,
                    "select_print_object_filename": 4,
                    "set_object_filename_and_return": 1,
                    "set_output_format": 1,
                    "set_print_object_filename": 6
                },
                "PTR_PTR_print_object_filename_bsd_0010b260": {
                    "bsd_print_object_filename": 2,
                    "default_print_object_filename": 1,
                    "object_filename": 1,
                    "object_filename_pointer": 1,
                    "print_object_filename": 1,
                    "print_object_filename_bsd": 1,
                    "print_object_filename_pointer": 2
                },
                "PTR_print_object_filename_bsd_0010ace0": {
                    "default_print_object_filename": 1,
                    "print_object_filename_bsd": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_localized_message": 1,
                    "get_localized_text": 2,
                    "get_message": 1
                },
                "error_code": {
                    "error_code": 2
                },
                "fatal": {
                    "print_fatal_error": 6
                },
                "non_fatal": {
                    "print_non_fatal_error": 3,
                    "print_non_fatal_warning": 3
                },
                "object_index": {
                    "index": 1,
                    "object_index": 1
                },
                "param2": {
                    "param2": 2
                },
                "param3": {
                    "param3": 2
                },
                "param4": {
                    "param4": 2
                },
                "param_1": {
                    "format": 12,
                    "format_code": 3,
                    "format_specifier": 3,
                    "format_type": 2,
                    "input_format": 1,
                    "output_format": 10
                },
                "param_2": {
                    "file_name": 1,
                    "file_type": 1,
                    "filename": 3,
                    "index": 2,
                    "object_index": 16,
                    "output_format": 1,
                    "param": 5,
                    "param2": 2
                },
                "ppuVar2": {
                    "filename_ptr": 1,
                    "output_filename": 1,
                    "print_object_filename": 7,
                    "print_object_filename_result": 1,
                    "result": 17,
                    "result_ptr": 1,
                    "return_val": 1
                },
                "print_error_message_00106300": {
                    "print_error_message": 15
                },
                "set_print_object_filename_00104397": {
                    "set_print_object_filename": 16,
                    "set_print_object_filename_helper": 1,
                    "set_print_object_filename_with_index": 1,
                    "set_print_object_name": 1
                },
                "switchD_00104393": {
                    "switch_d": 1
                },
                "uVar1": {
                    "err_msg": 2,
                    "error_message": 24,
                    "error_msg": 2,
                    "error_string": 1
                }
            },
            "called": [
                "FUN_00106300",
                "FUN_00104397",
                "FUN_00102475",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nundefined ** get_print_object_filename_00104370(undefined *format,undefined8 object_index)\n\n{\n  undefined8 error_message;\n  undefined **result;\n  \n  switch(*format) {\n  case 0x42:\n  case 0x62:\n    DAT_0010b7c0 = 0;\n    PTR_PTR_print_object_filename_bsd_0010b260 =\n         (undefined *)&PTR_print_object_filename_bsd_0010ace0;\n    return &PTR_print_object_filename_bsd_0010ace0;\n  default:\n    error_message = get_localized_text(0,\"%s: invalid output format\",5);\n    print_fatal_error(error_message,format);\n    error_message = get_localized_text(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n    print_non_fatal_error(error_message);\n    return (undefined **)0x0;\n  case 0x4a:\n  case 0x6a:\n    result = (undefined **)set_print_object_filename(format,object_index,3);\n    return result;\n  case 0x50:\n  case 0x70:\n    result = (undefined **)set_print_object_filename(format,object_index,2);\n    return result;\n  case 0x53:\n  case 0x73:\n    result = (undefined **)set_print_object_filename(format,object_index,1);\n    return result;\n  }\n}\n\n",
            "current_name": "get_print_object_filename_00104370",
            "entrypoint": "0x00104370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104370": "get_print_object_filename_00104370",
                "dcgettext": "get_localized_text",
                "fatal": "print_fatal_error",
                "non_fatal": "print_non_fatal_error",
                "param_1": "format",
                "param_2": "object_index",
                "ppuVar2": "result",
                "set_print_object_filename_00104397": "set_print_object_filename",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104397": {
            "additional_data": {
                "FUN_00104397": {
                    "initialize_object_data": 1,
                    "initialize_print_object": 1,
                    "initialize_print_object_filename": 7,
                    "set_filename": 1,
                    "set_filename_and_param": 1,
                    "set_filename_pointer": 1,
                    "set_object_file_params": 1,
                    "set_object_filename": 2,
                    "set_print_object_filename": 15,
                    "setup_object_filename": 1
                },
                "PTR_PTR_print_object_filename_bsd_0010b260": {
                    "print_object_filename": 2,
                    "print_object_filenames": 1
                },
                "PTR_print_object_filename_bsd_0010ace0": {
                    "object_filenames": 1,
                    "print_object_filename_base_address": 1,
                    "print_object_filenames_base": 1
                },
                "param_1": {
                    "arg1": 6,
                    "file_name": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "filename": 1,
                    "filename_pointer": 2,
                    "first_param": 1,
                    "input_param1": 2,
                    "object_file_ptr": 1,
                    "param1": 8,
                    "param_1": 6
                },
                "param_2": {
                    "arg2": 6,
                    "file_path": 1,
                    "filename_ptr": 1,
                    "input_param2": 2,
                    "object_name": 1,
                    "object_pointer": 3,
                    "object_ptr": 1,
                    "param2": 9,
                    "param_2": 6,
                    "second_param": 1
                },
                "param_3": {
                    "count": 2,
                    "file_index": 2,
                    "filename_index": 1,
                    "index": 8,
                    "int_value": 1,
                    "num_iterations": 1,
                    "number_of_files": 1,
                    "object_count": 1,
                    "object_index": 10,
                    "param3": 2,
                    "param_index": 1,
                    "print_object_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104370",
                "FUN_00102475"
            ],
            "code": "\nvoid set_print_object_filename_00104397(undefined8 param1,undefined8 param2,int object_index)\n\n{\n  DAT_0010b7c0 = object_index;\n  PTR_PTR_print_object_filename_bsd_0010b260 =\n       (undefined *)(&PTR_print_object_filename_bsd_0010ace0 + (long)object_index * 5);\n  return;\n}\n\n",
            "current_name": "set_print_object_filename_00104397",
            "entrypoint": "0x00104397",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104397": "set_print_object_filename_00104397",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "object_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001043d0": {
            "additional_data": {
                "BUFSIZ": {
                    "bufsiz": 1
                },
                "DAT_0010b260": {
                    "print_object_filename_bsd": 1,
                    "print_object_filename_func_ptr": 1
                },
                "DAT_0010b7b0": {
                    "cleanup_flag": 1
                },
                "DAT_0010b7b8": {
                    "close_flag": 1
                },
                "DAT_0010b7d0": {
                    "bfd_plugin_mode": 1,
                    "is_plugin": 2,
                    "plugin_option": 1
                },
                "DAT_0010b7f0": {
                    "archive_flag": 1,
                    "is_archive": 1
                },
                "DAT_0010b804": {
                    "force_load_plugin": 1,
                    "is_set_flag": 1,
                    "set_print_width_flag": 1
                },
                "DFLAG": {
                    "print_width_flag": 1
                },
                "ENOENT": {
                    "enoent": 1
                },
                "FUN_0010249f": {
                    "get_error_message": 1
                },
                "FUN_00102670": {
                    "non_fatal": 1
                },
                "FUN_0010351b": {
                    "set_print_width": 1
                },
                "FUN_00103b5d": {
                    "get_next_mapent": 1
                },
                "FUN_001043d0": {
                    "check_and_display_file_info": 1,
                    "check_and_display_file_stats": 1,
                    "check_and_process_file": 1,
                    "check_file": 20,
                    "check_file_and_display_contents": 1,
                    "check_file_stats": 1,
                    "validate_and_display_file": 1,
                    "validate_and_display_object_file": 1,
                    "validate_file": 3,
                    "validate_file_and_display_info": 1
                },
                "FUN_00104670": {
                    "print_symname": 1
                },
                "FUN_00104740": {
                    "print_rel_file": 1
                },
                "FUN_001048e0": {
                    "handle_file": 1
                },
                "FUN_001062d0": {
                    "bfd_nonfatal": 1
                },
                "FUN_00106400": {
                    "list_matching_formats": 1
                },
                "FUN_00106530": {
                    "display_rel_file": 1
                },
                "FUN_00106540": {
                    "bfd_fatal": 1
                },
                "PTR_PTR_print_object_filename_bsd_0010b260": {
                    "print_fn_ptrs": 1,
                    "print_function_table": 1,
                    "print_object_filename_function": 1,
                    "print_object_filename_function_pointer": 1
                },
                "_ARCHIVED_FILE": {
                    "archived_file": 1
                },
                "_DAT_0010b7b0": {
                    "bfd_close_error_code": 1,
                    "bfd_error": 1,
                    "bfd_fatal_flag": 1,
                    "cleanup_flag": 1,
                    "flag_5": 1,
                    "unnamed_variable2": 1
                },
                "_DAT_0010b7b8": {
                    "bfd_close_error": 1,
                    "bfd_close_flag": 1,
                    "bfd_error": 1,
                    "close_flag": 1,
                    "flag_4": 1,
                    "unnamed_variable1": 1
                },
                "_DAT_0010b7d0": {
                    "bfd_plugin_mode": 1,
                    "flag": 1,
                    "plugin_flag": 1
                },
                "_DAT_0010b7f0": {
                    "archive_flag": 1,
                    "archive_index_flag": 1,
                    "display_rel_file_flag": 1,
                    "flag_3": 1,
                    "print_info": 1
                },
                "_DAT_0010b804": {
                    "flag_2": 1,
                    "print_width_flag": 1,
                    "set_flag": 1
                },
                "_STAT_DIR": {
                    "stat_dir": 1
                },
                "_STAT_FILE": {
                    "stat_file": 1
                },
                "bfd_check_format": {
                    "bfd_check_format": 1
                },
                "bfd_check_format_matches": {
                    "bfd_check_format_matches": 1
                },
                "bfd_close": {
                    "bfd_close": 1
                },
                "bfd_fatal": {
                    "bfd_fatal_error": 1
                },
                "bfd_get_error": {
                    "bfd_get_error": 1
                },
                "bfd_get_next_mapent": {
                    "bfd_get_next_mapent": 1
                },
                "bfd_nonfatal": {
                    "bfd_nonfatal": 1
                },
                "bfd_openr": {
                    "bfd_openr": 1
                },
                "bfd_openr_next_archived_file": {
                    "bfd_openr_next_archived_file": 1
                },
                "cVar1": {
                    "check_format_result": 1,
                    "check_result": 4,
                    "format_check": 14,
                    "format_check_result": 10,
                    "format_match": 1,
                    "format_valid": 1
                },
                "dcgettext": {
                    "get_translation": 1
                },
                "display_rel_file": {
                    "display_rel_file": 1
                },
                "fprintf": {
                    "print": 1
                },
                "fun_PRINT_OBJECT_FILENAME_BSD": {
                    "print_object_filename": 1
                },
                "get_error_string": {
                    "get_error_string": 1
                },
                "iVar2": {
                    "error_code": 2,
                    "error_flag": 1,
                    "result": 10,
                    "result_code": 1,
                    "return_code": 1,
                    "return_value": 1,
                    "stat_result": 6,
                    "status": 9
                },
                "lVar7": {
                    "archive_file_map_entry": 1,
                    "archive_index": 1,
                    "file_map_entry": 1,
                    "map_ent": 1,
                    "map_entry": 14,
                    "map_entry_index": 3,
                    "mapent": 1,
                    "next_map_ent": 1,
                    "next_map_entry": 2
                },
                "list_matching_formats": {
                    "list_matching_formats": 1
                },
                "local_c8": {
                    "file_info": 4,
                    "file_stat": 9,
                    "file_stat_info": 1,
                    "file_stats": 15
                },
                "non_fatal": {
                    "non_fatal_error": 1
                },
                "param_1": {
                    "file_name": 2,
                    "file_path": 22,
                    "filename": 7
                },
                "param_2": {
                    "param_2": 1
                },
                "param_3": {
                    "param_3": 1
                },
                "param_4": {
                    "param_4": 1
                },
                "pcVar8": {
                    "err_msg": 3,
                    "error_details": 1,
                    "error_message": 7,
                    "error_msg": 3,
                    "error_reason": 9,
                    "error_str": 1,
                    "error_string": 3,
                    "reason": 1,
                    "str_error": 1
                },
                "piVar4": {
                    "err_msg": 1,
                    "err_num_ptr": 1,
                    "errno_location": 5,
                    "errno_pointer": 1,
                    "errno_ptr": 12,
                    "error_code": 5,
                    "error_location": 1,
                    "error_num": 1,
                    "error_ptr": 4
                },
                "print_matching_formats": {
                    "print_matching_formats": 1
                },
                "print_object_filename": {
                    "print_object_filename": 1
                },
                "print_symname": {
                    "print_symname": 1
                },
                "printf": {
                    "print": 1
                },
                "puVar10": {
                    "archive_file_temp_pointer": 1,
                    "archived_file_last": 1,
                    "archived_file_previous_handler": 1,
                    "current_archived_file_ptr": 1,
                    "current_file": 1,
                    "prev_archive_entry_handle": 1,
                    "prev_archive_file_handle": 1,
                    "prev_archive_handle": 1,
                    "prev_archived_file": 6,
                    "prev_archived_file_descriptor": 2,
                    "prev_archived_file_handle": 3,
                    "prev_archived_file_ptr": 1,
                    "prev_file_handle": 1,
                    "previous_archived_file": 1,
                    "previous_archived_file_descriptor": 2,
                    "previous_archived_file_handle": 4,
                    "previous_file": 2,
                    "previous_handle": 1
                },
                "puVar5": {
                    "bfd_handle": 1
                },
                "puVar6": {
                    "archived_file": 1,
                    "bfd_file": 4,
                    "bfd_file_pointer": 1,
                    "bfd_handle": 12,
                    "bfd_handler": 1,
                    "bfd_object": 1,
                    "file": 1,
                    "file_descriptor": 4,
                    "file_handle": 4,
                    "file_ptr": 2
                },
                "puVar9": {
                    "archive_entry_handle": 1,
                    "archive_file_handle": 1,
                    "archive_file_pointer": 1,
                    "archive_handle": 1,
                    "archived_file": 10,
                    "archived_file_descriptor": 4,
                    "archived_file_handle": 7,
                    "archived_file_handler": 1,
                    "archived_file_next": 1,
                    "archived_file_ptr": 2,
                    "archived_handle": 1,
                    "next_file_handle": 1
                },
                "set_print_width": {
                    "set_print_width": 1
                },
                "stat": {
                    "get_file_info": 1
                },
                "strcmp": {
                    "string_compare": 1
                },
                "strerror": {
                    "get_error_string": 1
                },
                "uVar3": {
                    "result": 10,
                    "return_value": 15,
                    "status": 2,
                    "success": 3,
                    "success_flag": 1
                },
                "uVar5": {
                    "err_msg": 2,
                    "error_message": 16,
                    "error_msg": 4,
                    "localized_message": 1,
                    "localized_text": 1,
                    "message": 2,
                    "warning_message": 1
                }
            },
            "called": [
                "FUN_00102360",
                "FUN_001048e0",
                "FUN_00102120",
                "FUN_00102670",
                "FUN_0010249f",
                "FUN_00102380",
                "FUN_00102080",
                "FUN_00102280",
                "FUN_00106400",
                "FUN_00104740",
                "FUN_00102150",
                "FUN_0010351b",
                "FUN_00102190",
                "FUN_001023d0",
                "FUN_00102430",
                "FUN_00104670",
                "FUN_00106530",
                "FUN_00103b5d",
                "FUN_001023e0",
                "FUN_00102410",
                "FUN_00106540",
                "FUN_001062d0",
                "FUN_001021d0"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nundefined4 check_and_display_file_stats_001043d0(char *file_path)\n\n{\n  char format_check;\n  int result;\n  undefined4 return_value;\n  int *errno_ptr;\n  undefined8 error_message;\n  undefined8 *bfd_handle;\n  long map_entry;\n  char *error_reason;\n  undefined8 *archived_file;\n  undefined8 *prev_archived_file;\n  get_file_info file_stats;\n  \n  if (file_path != (char *)0x0) {\n    result = get_file_info(file_path,&file_stats);\n    if (result < 0) {\nLAB_00102522:\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = get_translation(0,\"\\'%s\\': No such file\",5);\n        non_fatal_error(error_message,file_path);\n      }\n      else {\n        error_reason = get_error_string(*errno_ptr);\n        error_message = get_translation(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        non_fatal_error(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x4000) {\n      error_message = get_translation(0,\"Warning: \\'%s\\' is a directory\",5);\n      non_fatal_error(error_message,file_path);\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x8000) {\n      if (file_stats.st_size < 0) {\n        error_message = get_translation(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        non_fatal_error(error_message,file_path);\n      }\n      else if (file_stats.st_size != 0) {\n        if (DAT_0010b7d0 == 0) {\n          bfd_handle = (undefined8 *)bfd_openr(file_path,\"plugin\");\n        }\n        else {\n          bfd_handle = (undefined8 *)bfd_openr(file_path);\n        }\n        if (bfd_handle != (undefined8 *)0x0) {\n          if (DAT_0010b804 != 0) {\n            *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x8000;\n          }\n          format_check = bfd_check_format(bfd_handle,2);\n          if (format_check == '\\0') {\n            return_value = bfd_check_format_matches(bfd_handle,1,&file_stats);\n            if ((char)return_value == '\\0') goto LAB_001025ac;\n            set_print_width(bfd_handle);\n            (**(code **)PTR_PTR_print_object_filename_bsd_0010b260)(file_path);\n            display_rel_file(bfd_handle,0);\n          }\n          else {\n            (**(code **)(PTR_PTR_print_object_filename_bsd_0010b260 + 8))(*bfd_handle);\n            if ((_DAT_0010b7f0 != 0) &&\n               (map_entry = bfd_get_next_mapent(bfd_handle,0xffffffffffffffff,&file_stats), map_entry != -1)) {\n              error_reason = (char *)get_translation(0,\"\\nArchive index:\\n\",5);\n              print(error_reason);\n              do {\n                archived_file = (undefined8 *)(**(code **)(bfd_handle[1] + 0x1e0))(bfd_handle,map_entry);\n                if (archived_file == (undefined8 *)0x0) goto LAB_00102516;\n                if (*(long *)file_stats.st_dev != 0) {\n                  print_symname(&DAT_0010712d,0,*(long *)file_stats.st_dev,bfd_handle);\n                  print(\" in %s\\n\",*archived_file);\n                }\n                map_entry = bfd_get_next_mapent(bfd_handle,map_entry,&file_stats);\n              } while (map_entry != -1);\n            }\n            archived_file = (undefined8 *)0x0;\n            do {\n              do {\n                prev_archived_file = archived_file;\n                archived_file = (undefined8 *)bfd_openr_next_archived_file(bfd_handle,prev_archived_file);\n                if (archived_file == (undefined8 *)0x0) {\n                  result = bfd_get_error();\n                  if (result != 9) {\n                    bfd_fatal_error(*bfd_handle);\nLAB_00102516:\n                    bfd_fatal_error(\"bfd_get_elt_at_index\");\n                    goto LAB_00102522;\n                  }\n                  if (prev_archived_file != (undefined8 *)0x0) {\n                    bfd_close(prev_archived_file);\n                    _DAT_0010b7b8 = 0;\n                    _DAT_0010b7b0 = 0;\n                  }\n                  goto LAB_001044b4;\n                }\n                format_check = bfd_check_format_matches(archived_file,1,&file_stats);\n                if (format_check == '\\0') {\n                  bfd_nonfatal(*archived_file);\n                  result = bfd_get_error();\n                  if (result == 0xd) {\n                    list_matching_formats(file_stats.st_dev);\n                  }\n                }\n                else {\n                  set_print_width(archived_file);\n                  (**(code **)(PTR_PTR_print_object_filename_bsd_0010b260 + 0x10))(*bfd_handle,*archived_file);\n                  display_rel_file(archived_file,bfd_handle);\n                }\n              } while (prev_archived_file == (undefined8 *)0x0);\n              bfd_close(prev_archived_file);\n              _DAT_0010b7b8 = 0;\n              _DAT_0010b7b0 = 0;\n            } while (prev_archived_file != archived_file);\n          }\nLAB_001044b4:\n          return_value = 1;\n          while (format_check = bfd_close(bfd_handle), format_check == '\\0') {\n            bfd_fatal_error(file_path);\nLAB_001025ac:\n            bfd_nonfatal(file_path);\n            result = bfd_get_error();\n            if (result == 0xd) {\n              list_matching_formats(file_stats.st_dev);\n            }\n          }\n          _DAT_0010b7b0 = 0;\n          _DAT_0010b7b8 = 0;\n          return return_value;\n        }\n        bfd_nonfatal(file_path);\n      }\n    }\n    else {\n      error_message = get_translation(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      non_fatal_error(error_message,file_path);\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_display_file_stats_001043d0",
            "entrypoint": "0x001043d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001043d0": "check_and_display_file_stats_001043d0",
                "bfd_fatal": "bfd_fatal_error",
                "cVar1": "format_check",
                "dcgettext": "get_translation",
                "iVar2": "result",
                "lVar7": "map_entry",
                "local_c8": "file_stats",
                "non_fatal": "non_fatal_error",
                "param_1": "file_path",
                "pcVar8": "error_reason",
                "piVar4": "errno_ptr",
                "printf": "print",
                "puVar10": "prev_archived_file",
                "puVar6": "bfd_handle",
                "puVar9": "archived_file",
                "stat": "get_file_info",
                "strerror": "get_error_string",
                "uVar3": "return_value",
                "uVar5": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104670": {
            "additional_data": {
                "DAT_0010b244": {
                    "another_constant_value": 1,
                    "comparison_val": 1,
                    "comparison_value": 1,
                    "comparison_value2": 1,
                    "comparison_variable": 1,
                    "constant2": 1,
                    "constant_value": 1,
                    "constant_value2": 2,
                    "dat_0010b244": 1,
                    "file_type_to_check": 1,
                    "length_flag": 1,
                    "variable3": 1
                },
                "DAT_0010b7a0": {
                    "allocated_memory": 1,
                    "arch_pointer": 1,
                    "arch_size_flag": 1,
                    "arch_size_to_free": 1,
                    "arch_string": 1,
                    "architecture_info": 1,
                    "architecture_variable": 1,
                    "concat_var": 1,
                    "concatenated_str": 1,
                    "concatenated_string": 2,
                    "dynamic_allocation": 1,
                    "dynamic_memory": 1,
                    "memory_block": 1
                },
                "DAT_0010b7a8": {
                    "arch_size": 4,
                    "arch_size_result": 1,
                    "arch_size_to_check": 1,
                    "arch_size_var": 1,
                    "arch_size_variable": 2,
                    "architecture_size": 4,
                    "architecture_size_variable": 1
                },
                "DAT_0010b7c0": {
                    "comparison_value": 1,
                    "comparison_variable": 1,
                    "constant": 1,
                    "constant_value": 7,
                    "dat_0010b7c0": 1,
                    "data_size": 1,
                    "length_var": 1,
                    "variable1": 1
                },
                "FUN_00104670": {
                    "analyze_architecture": 1,
                    "calculate_architecture_type": 1,
                    "determine_arch_size": 1,
                    "determine_arch_size_and_format": 1,
                    "determine_architecture": 3,
                    "determine_architecture_size": 1,
                    "extract_architecture": 1,
                    "get_arch_size": 1,
                    "get_arch_size_and_concat": 1,
                    "get_architecture": 1,
                    "get_architecture_from_param": 1,
                    "get_architecture_size": 2,
                    "initialize_arch_size": 6,
                    "initialize_architecture": 3,
                    "update_arch_size": 1
                },
                "concat": {
                    "concatenate_strings": 1
                },
                "iVar1": {
                    "arch_size": 20,
                    "architecture_size": 3,
                    "architecture_type": 2,
                    "comparison_result": 3,
                    "flag_value": 1,
                    "size_flag": 2
                },
                "param_1": {
                    "arg1": 1,
                    "binary": 1,
                    "binary_data": 1,
                    "binary_file": 2,
                    "binary_path": 1,
                    "file_info": 1,
                    "input": 1,
                    "input_address": 1,
                    "input_param": 9,
                    "input_parameter": 4,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "input_value": 2,
                    "param": 3,
                    "parameter": 1
                },
                "pcVar2": {
                    "arch64": 1,
                    "arch64_ptr": 1,
                    "arch64str": 1,
                    "arch_format": 1,
                    "arch_str": 2,
                    "arch_string": 1,
                    "arch_substr": 1,
                    "arch_substring": 3,
                    "architecture_str": 1,
                    "architecture_string": 6,
                    "found_64_bit": 1,
                    "found_substring": 1,
                    "matched_string": 1,
                    "ptr64": 1,
                    "ptr64_string": 1,
                    "ptr_substring": 1,
                    "ptr_to_substring": 1,
                    "str64": 1,
                    "str_occurrence": 1,
                    "substring": 1,
                    "substring_pointer": 2,
                    "substring_ptr": 1
                },
                "pcVar4": {
                    "arch_code": 1,
                    "arch_option": 1,
                    "arch_string": 1,
                    "arch_suffix_substring": 1,
                    "arch_type": 1,
                    "arch_version": 1,
                    "binary_name": 1,
                    "binary_string": 1,
                    "current_arch": 1,
                    "file_extension": 1,
                    "file_type": 1,
                    "input_string": 4,
                    "param_str": 1,
                    "ptr_search_string": 1,
                    "ptr_to_search_string": 1,
                    "search_result": 1,
                    "search_string": 3,
                    "str_ptr": 1,
                    "sub_string": 1,
                    "sub_string_result": 1,
                    "substring": 1,
                    "substring_pointer": 1,
                    "substring_result": 1,
                    "substring_start": 1,
                    "temp_str": 1,
                    "temp_string": 1
                },
                "puVar3": {
                    "arch_type_string": 1,
                    "concat_param": 3,
                    "concat_str": 2,
                    "concat_string": 3,
                    "concat_value": 1,
                    "concatenated_string": 3,
                    "concatenation_data": 1,
                    "concatenation_pointer": 2,
                    "concatenation_ptr": 2,
                    "concatenation_result": 3,
                    "concatenation_string": 1,
                    "concatenation_var": 2,
                    "format_str": 1,
                    "output_ptr": 1,
                    "output_string": 2,
                    "output_string_ptr": 1,
                    "ptr_concat": 1,
                    "string_pointer": 1
                }
            },
            "called": [
                "FUN_00102240",
                "FUN_00102040",
                "FUN_001021b0",
                "FUN_001025f5",
                "FUN_00102420",
                "FUN_00102220"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid initialize_arch_size_00104670(long input_param)\n\n{\n  int arch_size;\n  char *architecture_string;\n  undefined *concat_param;\n  char *input_string;\n  \n  DAT_0010b7a8 = bfd_get_arch_size();\n  if (DAT_0010b7a8 == -1) {\n    input_string = **(char ***)(input_param + 8);\n    architecture_string = strstr(input_string,\"64\");\n    arch_size = 0x40;\n    if (architecture_string == (char *)0x0) {\n      arch_size = strcmp(input_string,\"mmo\");\n      arch_size = (-(uint)(arch_size == 0) & 0x20) + 0x20;\n    }\n    DAT_0010b7a8 = arch_size;\n    free(DAT_0010b7a0);\n  }\n  else {\n    free(DAT_0010b7a0);\n  }\n  if (DAT_0010b7c0 - 2U < 2) {\n    input_string = \"\";\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    input_string = \"08\";\n  }\n  else {\n    input_string = \"016\";\n  }\n  concat_param = &DAT_001071d0;\n  if (DAT_0010b244 != 0x10) {\n    if (DAT_0010b244 < 0x11) {\n      if (DAT_0010b244 == 8) {\n        concat_param = &DAT_001071ca;\n      }\n      else {\n        if (DAT_0010b244 != 10) {\n          DAT_0010b7a0 = (void *)concatenate_strings(&DAT_001071d7,input_string,0,0);\n          return;\n        }\n        concat_param = &DAT_001071cd;\n      }\n    }\n    else {\n      concat_param = (undefined *)0x0;\n    }\n  }\n  DAT_0010b7a0 = (void *)concatenate_strings(&DAT_001071d7,input_string,concat_param,0);\n  return;\n}\n\n",
            "current_name": "initialize_arch_size_00104670",
            "entrypoint": "0x00104670",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104670": "initialize_arch_size_00104670",
                "concat": "concatenate_strings",
                "iVar1": "arch_size",
                "param_1": "input_param",
                "pcVar2": "architecture_string",
                "pcVar4": "input_string",
                "puVar3": "concat_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104740": {
            "additional_data": {
                "FUN_00104740": {
                    "decode_and_print": 1,
                    "decode_and_print_string": 4,
                    "improved_print_string": 1,
                    "print_decoded_string": 4,
                    "print_encoded_string": 1,
                    "print_formatted_string": 15,
                    "print_string": 1
                },
                "__ptr": {
                    "concatenated_string": 2,
                    "decoded_string": 2,
                    "formatted_string": 1,
                    "new_pointer": 2,
                    "new_string": 3,
                    "new_string_pointer": 1,
                    "output_pointer2": 1,
                    "output_string": 2,
                    "output_string_ptr": 1,
                    "pointer3": 1,
                    "pointer_to_uncertain_type": 1,
                    "processed_string": 1,
                    "ptr_var": 1,
                    "reconstructed_string": 2,
                    "result": 3,
                    "result_ptr": 1,
                    "result_str": 1,
                    "result_string": 4,
                    "temporary_pointer1": 1
                },
                "__s": {
                    "char_pointer": 1,
                    "char_ptr3": 1,
                    "char_ptr_var": 1,
                    "new_s": 1,
                    "new_str": 1,
                    "new_string_2": 1,
                    "new_string_temp": 1,
                    "pointer_to_char3": 1,
                    "ptr6": 1,
                    "str": 1,
                    "string_pointer": 1,
                    "string_pointer2": 1,
                    "string_ptr2": 1,
                    "sub_string": 1,
                    "temp_str1": 1,
                    "temp_string": 1,
                    "temporary_pointer2": 1
                },
                "__s_00": {
                    "char_pointer00": 1,
                    "char_ptr4": 1,
                    "char_ptr_var1": 1,
                    "new_s2": 1,
                    "new_str2": 1,
                    "new_string_3": 1,
                    "pointer_to_char4": 1,
                    "ptr7": 1,
                    "result_str": 1,
                    "string_pointer3": 1,
                    "string_pointer_2": 1,
                    "string_ptr3": 1,
                    "sub_string2": 1,
                    "temp_str2": 1,
                    "temp_string": 1,
                    "temp_string_2": 1,
                    "temporary_pointer3": 1
                },
                "acStack_39": {
                    "array_stack": 1,
                    "char_arr1": 1,
                    "char_array": 5,
                    "character_array": 2,
                    "stack_arr": 1,
                    "stack_array": 13,
                    "stack_array1": 1,
                    "stack_buffer": 1,
                    "stack_var": 1,
                    "temp_arr": 1,
                    "temp_array": 1,
                    "temp_stack": 1,
                    "temp_stack_array": 1
                },
                "bVar15": {
                    "byte3": 3,
                    "byte_3": 1,
                    "byte_temp_3": 1,
                    "byte_val": 1,
                    "byte_val3": 1,
                    "byte_value_3": 1,
                    "byte_var": 5,
                    "byte_var1": 1,
                    "byte_var15": 6,
                    "byte_var3": 6,
                    "byte_var_3": 1,
                    "byte_variable": 1,
                    "flag": 1,
                    "flag1": 1,
                    "temp_byte3": 1
                },
                "bVar2": {
                    "byte1": 11,
                    "byte_1": 2,
                    "byte_temp_1": 1,
                    "byte_val1": 1,
                    "byte_value": 1,
                    "byte_var1": 6,
                    "byte_var2": 7,
                    "byte_var_1": 1,
                    "temp_byte1": 1
                },
                "bVar3": {
                    "byte2": 11,
                    "byte_2": 2,
                    "byte_temp_2": 1,
                    "byte_val2": 1,
                    "byte_value_2": 1,
                    "byte_var2": 6,
                    "byte_var3": 7,
                    "byte_var_2": 1,
                    "temp_byte2": 1
                },
                "iVar4": {
                    "i_var": 1,
                    "index": 1,
                    "int1": 2,
                    "int_temp": 1,
                    "int_val": 1,
                    "int_value": 2,
                    "int_var": 11,
                    "int_var1": 1,
                    "int_var4": 7,
                    "int_variable": 1,
                    "integer_1": 1,
                    "temp_int": 1,
                    "temp_var": 1
                },
                "lVar13": {
                    "long_1": 1,
                    "long_temp": 1,
                    "long_val": 1,
                    "long_val1": 1,
                    "long_value_2": 1,
                    "long_var": 12,
                    "long_var1": 3,
                    "long_var13": 5,
                    "long_variable": 1,
                    "size": 1,
                    "temp_long": 1,
                    "temp_var4": 1
                },
                "param_1": {
                    "format_string": 30,
                    "string_format": 1
                },
                "param_2": {
                    "address_params": 1,
                    "arg_array": 1,
                    "arg_list": 1,
                    "argument_list": 1,
                    "buffer": 1,
                    "data_pointers": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "memory_block": 2,
                    "memory_pointer": 2,
                    "param_array": 2,
                    "pointer_1": 1,
                    "pointer_array": 1,
                    "pointer_list": 1,
                    "ptr": 1,
                    "ptr_array": 1,
                    "ptr_to_string": 1,
                    "string_data": 3,
                    "string_info": 4,
                    "string_list": 1,
                    "string_pointer": 3
                },
                "param_3": {
                    "custom_string": 1,
                    "custom_string_pointer": 1,
                    "decoded_string": 5,
                    "demangled_string": 2,
                    "encoded_string": 1,
                    "optional_string": 1,
                    "output_pointer": 1,
                    "pointer": 1,
                    "pointer_2": 1,
                    "ptr_to_string_data": 1,
                    "str": 2,
                    "str_array": 1,
                    "string": 2,
                    "string_data": 1,
                    "string_pointer": 6,
                    "string_ptr": 1,
                    "string_to_print": 1,
                    "type_name": 1,
                    "type_string": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_info": 1,
                    "additional_param": 1,
                    "base_address": 1,
                    "context": 3,
                    "extra_data": 1,
                    "length": 2,
                    "long_value": 1,
                    "param": 1,
                    "param4": 1,
                    "param_4": 13,
                    "param_size": 1,
                    "parameter": 2,
                    "size": 1,
                    "str_length": 1
                },
                "pcVar6": {
                    "at_sign": 1,
                    "at_symbol": 1,
                    "char_pointer": 4,
                    "char_pointer_var6": 1,
                    "char_ptr": 2,
                    "char_ptr1": 6,
                    "char_ptr_1": 2,
                    "char_ptr_var6": 1,
                    "character": 1,
                    "character_pointer": 1,
                    "pointer_char1": 1,
                    "pointer_to_char": 1,
                    "pointer_to_char_var6": 1,
                    "pointer_var6": 1,
                    "ptr2": 1,
                    "ptr_temp2": 1,
                    "str_ptr": 2,
                    "substring": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 1
                },
                "pcVar8": {
                    "char_pointer2": 4,
                    "char_pointer_var8": 1,
                    "char_ptr2": 7,
                    "char_ptr_2": 2,
                    "char_ptr_var8": 1,
                    "character_2": 1,
                    "character_pointer_2": 1,
                    "output_string": 1,
                    "pointer_char2": 1,
                    "pointer_to_char2": 1,
                    "pointer_to_char_var8": 1,
                    "pointer_var8": 1,
                    "ptr_temp4": 1,
                    "str_ptr2": 2,
                    "temp_pointer3": 1,
                    "temp_ptr4": 1
                },
                "puVar1": {
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 2,
                    "pointer_to_variable1": 2,
                    "pointer_var1": 5,
                    "ptr1": 11,
                    "ptr_1": 1,
                    "ptr_temp": 1,
                    "ptr_var1": 3,
                    "string_pointer": 1,
                    "temp_pointer": 2,
                    "temp_ptr1": 1
                },
                "puVar11": {
                    "concatenation_indicator": 1,
                    "pointer4": 1,
                    "pointer_3": 3,
                    "pointer_to_data": 1,
                    "pointer_to_variable3": 1,
                    "pointer_var": 1,
                    "pointer_var11": 4,
                    "pointer_var2": 1,
                    "pointer_var3": 1,
                    "ptr3": 8,
                    "ptr4": 1,
                    "ptr_3": 1,
                    "ptr_temp5": 1,
                    "ptr_var11": 1,
                    "ptr_var3": 2,
                    "temp_ptr5": 1,
                    "undefined_pointer": 1,
                    "undefined_ptr": 1
                },
                "puVar12": {
                    "current_ptr": 1,
                    "decoded_string": 1,
                    "formatted_string2": 1,
                    "formatted_string_temp": 1,
                    "output_pointer3": 1,
                    "pointer5": 1,
                    "pointer_4": 3,
                    "pointer_to_variable4": 1,
                    "pointer_var12": 4,
                    "pointer_var3": 1,
                    "ptr3": 1,
                    "ptr4": 5,
                    "ptr5": 1,
                    "ptr_4": 1,
                    "ptr_temp6": 1,
                    "ptr_var12": 1,
                    "ptr_var4": 2,
                    "result": 1,
                    "string_pointer": 1,
                    "temp_pointer3": 1,
                    "temp_ptr6": 1
                },
                "puVar7": {
                    "formatted_string": 1,
                    "pointer2": 1,
                    "pointer_2": 3,
                    "pointer_to_variable2": 1,
                    "pointer_var1": 1,
                    "pointer_var2": 1,
                    "pointer_var7": 4,
                    "ptr2": 10,
                    "ptr3": 1,
                    "ptr_2": 1,
                    "ptr_temp3": 1,
                    "ptr_var2": 2,
                    "ptr_var7": 1,
                    "string_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr3": 1
                },
                "sVar5": {
                    "length": 1,
                    "size": 14,
                    "size_t_temp": 1,
                    "size_var": 2,
                    "size_var5": 6,
                    "str_len": 2,
                    "string_len": 1,
                    "string_length": 4
                },
                "uVar10": {
                    "char_value": 1,
                    "temp_u_int": 1,
                    "temp_var": 1,
                    "temp_var3": 1,
                    "u_val2": 1,
                    "u_var10": 1,
                    "ulong_2": 1,
                    "ulong_temp2": 1,
                    "ulong_value_2": 1,
                    "ulong_var10": 5,
                    "ulong_var2": 10,
                    "ulong_var_2": 1,
                    "ulong_variable_2": 1,
                    "undefined8_val": 1,
                    "undefined8_var": 2,
                    "undefined_var": 2
                },
                "uVar14": {
                    "count2": 1,
                    "temp_u_int2": 1,
                    "temp_var5": 1,
                    "u_val3": 1,
                    "uint_1": 1,
                    "uint_temp": 1,
                    "uint_val": 1,
                    "uint_value": 1,
                    "uint_var": 13,
                    "uint_var1": 3,
                    "uint_var14": 5,
                    "uint_variable": 1
                },
                "uVar9": {
                    "count": 1,
                    "temp_u_int64": 1,
                    "temp_var2": 1,
                    "u_val1": 1,
                    "ulong_1": 1,
                    "ulong_temp": 1,
                    "ulong_val": 1,
                    "ulong_value": 1,
                    "ulong_var": 8,
                    "ulong_var1": 8,
                    "ulong_var9": 5,
                    "ulong_var_1": 1,
                    "ulong_variable": 1
                }
            },
            "called": [
                "FUN_00102739"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_001064b0",
                "FUN_001043d0",
                "FUN_001035a2",
                "FUN_00103b49"
            ],
            "code": "\n\n\nvoid print_formatted_string_00104740(char *format_string,long *string_info,undefined8 *string_pointer,long param_4)\n\n{\n  undefined8 *ptr1;\n  byte byte1;\n  byte byte2;\n  int int_var;\n  size_t size;\n  char *char_ptr1;\n  undefined8 *ptr2;\n  char *char_ptr2;\n  undefined8 *result_string;\n  ulong ulong_var1;\n  undefined8 ulong_var2;\n  undefined *ptr3;\n  undefined8 *ptr4;\n  char *string_pointer;\n  undefined8 *result_str;\n  long long_var;\n  uint uint_var;\n  byte byte_var15;\n  char stack_array [9];\n  \n  byte_var15 = 0;\n  if (string_pointer == (undefined8 *)0x0) {\n    string_pointer = *(undefined8 **)(*string_info + 0x10);\n    if (DAT_0010b234 == 0) {\n      decode_and_print_string_00102739();\n      return;\n    }\nLAB_00104775:\n    ptr4 = string_pointer;\n    if (DAT_0010b814 == 0) {\n      char_ptr1 = (char *)0x0;\n      if (DAT_0010b7e0 == 0) {\nLAB_00104794:\n        ptr4 = string_pointer;\n        result_string = (undefined8 *)0x0;\n      }\n      else {\n        result_string = (undefined8 *)0x0;\n        if (string_pointer != (undefined8 *)0x0) goto LAB_0010269d;\n        ptr4 = (undefined8 *)0x1073a6;\n      }\n    }\n    else {\n      char_ptr1 = (char *)0x0;\nLAB_0010482b:\n      if ((*(char *)ptr4 == '\\0') ||\n         (string_pointer = (undefined8 *)bfd_demangle(param_4,ptr4,DAT_0010b248),\n         string_pointer == (undefined8 *)0x0)) {\n        string_pointer = ptr4;\n        if (DAT_0010b7e0 != 0) goto LAB_00102698;\n        result_string = (undefined8 *)0x0;\n      }\n      else {\n        ptr4 = string_pointer;\n        result_string = string_pointer;\n        if (DAT_0010b7e0 != 0) goto LAB_0010269d;\n      }\n    }\n  }\n  else {\n    ptr4 = string_pointer;\n    if (DAT_0010b234 == 0) {\n      if (*(int *)(*(long *)(param_4 + 8) + 8) != 5) goto LAB_00104775;\n      char_ptr1 = strchr((char *)string_pointer,0x40);\n      if (char_ptr1 == (char *)0x0) {\n        if (DAT_0010b814 == 0) {\n          if (DAT_0010b7e0 == 0) {\n            if (string_info == (long *)0x0) {\n              result_string = (undefined8 *)0x0;\n              printf(format_string,string_pointer);\n            }\n            else {\n              if (string_info[2] != 0) {\n                print_output_and_free_memory_001047d0();\n                return;\n              }\n              result_string = (undefined8 *)0x0;\n              printf(format_string,string_pointer);\n            }\n            goto LAB_001047ba;\n          }\n          goto LAB_00102698;\n        }\n      }\n      else {\n        *char_ptr1 = '\\0';\n        if (DAT_0010b814 == 0) {\n          if (DAT_0010b7e0 == 0) goto LAB_00104794;\n          result_string = (undefined8 *)0x0;\n          goto LAB_0010269d;\n        }\n      }\n      goto LAB_0010482b;\n    }\n    char_ptr1 = (char *)0x0;\n    if (DAT_0010b814 != 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 == 0) goto LAB_00104794;\nLAB_00102698:\n    ptr4 = string_pointer;\n    result_string = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      byte1 = *(byte *)string_pointer;\n      string_pointer = (undefined8 *)((long)string_pointer + 1);\n      if (byte1 == 0) goto joined_r0x00104864;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) && (byte1 < 0xc0));\n    size = strlen((char *)ptr4);\n    result_str = DAT_0010b790;\n    if (_DAT_0010b798 < size * 9) {\n      free(DAT_0010b790);\n      size = strlen((char *)ptr4);\n      _DAT_0010b798 = size * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      result_str = DAT_0010b790;\n    }\n    while( true ) {\n      ptr2 = DAT_0010b790;\n      byte1 = *(byte *)ptr4;\n      ptr1 = (undefined8 *)((long)ptr4 + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)result_str = byte1;\n          result_str = (undefined8 *)((long)result_str + 1);\n          ptr4 = ptr1;\n        }\n        else {\n          byte2 = *(byte *)((long)ptr4 + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = result_str;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                int_var = isatty(1);\n                if (int_var == 0) {\n                  byte2 = *(byte *)((long)ptr4 + 1);\n                }\n                else {\n                  *(undefined *)(result_str + 1) = 0;\n                  *result_str = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)ptr4 + 1);\n                  ptr2 = result_str + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)ptr4 >> 2 & 7),\n                        (ulong)((*(byte *)ptr4 & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)ptr4 + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var1 = (ulong)uint_var; ulong_var1 != 0; ulong_var1 = ulong_var1 - 1) {\n                    *(undefined *)ptr2 = *(undefined *)ptr4;\n                    ptr4 = (undefined8 *)((long)ptr4 + (ulong)byte_var15 * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)byte_var15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  sprintf((char *)result_str,\"%c\",ulong_var2);\n                  *(undefined *)((long)result_str + 3) = 0;\n                  ptr2 = (undefined8 *)(long_var + (long)ptr4);\n                  *(undefined2 *)((long)result_str + 1) = 0x7830;\n                  char_ptr2 = (char *)((long)result_str + 3);\n                  do {\n                    string_pointer = char_ptr2;\n                    byte1 = *(byte *)ptr4;\n                    ptr4 = (undefined8 *)((long)ptr4 + 1);\n                    sprintf(string_pointer,\"%02x\",(ulong)byte1);\n                    char_ptr2 = string_pointer + 2;\n                  } while (ptr4 != ptr2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(string_pointer + 2,\"%c\",ulong_var2);\n                  ptr2 = (undefined8 *)(string_pointer + 3);\n                  break;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)ptr4 + 2);\n                  }\n                  else {\n                    *(undefined *)(result_str + 1) = 0;\n                    *result_str = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)ptr4 + 2);\n                    ptr2 = result_str + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)ptr4 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)ptr4 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)ptr4 + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (int_var = isatty(1), int_var != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                byte2 = *(byte *)((long)ptr4 + 3);\n                if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)ptr4 + 3);\n                  }\n                  else {\n                    *(undefined *)(result_str + 1) = 0;\n                    *result_str = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)ptr4 + 3);\n                    ptr2 = result_str + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  int_var = sprintf((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)ptr4 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr4 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)ptr4 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr4 + 2) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)ptr4 + 2) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)int_var);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var1 = (ulong)(uint)((int)ptr2 - (int)result_str);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)result_str = byte1;\n            uint_var = 1;\n            ulong_var1 = 1;\n          }\n          result_str = (undefined8 *)((long)result_str + ulong_var1);\n          ptr4 = (undefined8 *)((long)ptr1 + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)result_str = 0x5e;\n        *(byte *)((long)result_str + 1) = byte1 + 0x40;\n        result_str = (undefined8 *)((long)result_str + 2);\n        ptr4 = ptr1;\n      }\n    }\n    *(undefined *)result_str = 0;\n    ptr4 = ptr2;\n  }\njoined_r0x00104864:\n  if ((((string_info != (long *)0x0) && (string_info[2] != 0)) && (DAT_0010b234 != 0)) &&\n     ((char_ptr2 = (char *)(**(code **)(*(long *)(param_4 + 8) + 0x220))\n                                  (param_4,string_info[2],0,stack_array), char_ptr2 != (char *)0x0 &&\n      (*char_ptr2 != '\\0')))) {\n    ptr3 = &DAT_001071e0;\n    if ((stack_array[0] == '\\0') && (*(long *)(string_info[2] + 0x20) != 0x10c2a8)) {\n      ptr3 = &DAT_001071df;\n    }\n    result_string = (undefined8 *)reconcat(result_string,ptr4,ptr3,char_ptr2,0);\n    ptr4 = result_string;\n  }\n  printf(format_string,ptr4);\n  if (char_ptr1 != (char *)0x0) {\n    *char_ptr1 = '@';\n  }\nLAB_001047ba:\n  free(result_string);\n  return;\n}\n\n",
            "current_name": "print_formatted_string_00104740",
            "entrypoint": "0x00104740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104740": "print_formatted_string_00104740",
                "__ptr": "result_string",
                "__s": "string_pointer",
                "__s_00": "result_str",
                "acStack_39": "stack_array",
                "bVar15": "byte_var15",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "iVar4": "int_var",
                "lVar13": "long_var",
                "param_1": "format_string",
                "param_2": "string_info",
                "param_3": "string_pointer",
                "pcVar6": "char_ptr1",
                "pcVar8": "char_ptr2",
                "puVar1": "ptr1",
                "puVar11": "ptr3",
                "puVar12": "ptr4",
                "puVar7": "ptr2",
                "sVar5": "size",
                "uVar10": "ulong_var2",
                "uVar14": "uint_var",
                "uVar9": "ulong_var1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001047d0": {
            "additional_data": {
                "FUN_001047d0": {
                    "print_and_free": 10,
                    "print_and_free_data": 1,
                    "print_and_free_memory": 8,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 6,
                    "print_formatted_text": 1,
                    "print_output_and_free_memory": 1,
                    "print_result": 1,
                    "print_with_format": 1
                },
                "pcVar1": {
                    "function_result": 1,
                    "pointer_result": 1,
                    "ptr_result": 1,
                    "reconstruction_status": 1,
                    "result": 3,
                    "result_of_function_call": 1,
                    "result_string": 5
                },
                "reconcat": {
                    "reconcatenate_strings": 1
                },
                "unaff_R12": {
                    "callback_function": 1,
                    "error_flag": 1,
                    "flag": 2,
                    "flag_pointer": 1,
                    "flag_ptr": 4,
                    "format_ptr": 1,
                    "is_null_check": 1,
                    "output_buffer": 1,
                    "output_byte": 1,
                    "output_char": 1,
                    "output_error": 1,
                    "output_flag": 8,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "print_flag": 1,
                    "print_flag_ptr": 1,
                    "result_pointer": 1,
                    "status": 1,
                    "status_flag": 2
                },
                "unaff_R13": {
                    "allocated_memory": 1,
                    "concatenated_data": 1,
                    "concatenated_ptr": 1,
                    "concatenated_string": 3,
                    "concatenated_string_pointer": 1,
                    "concatenated_string_ptr": 1,
                    "formatted_data": 1,
                    "formatted_message": 1,
                    "formatted_str": 1,
                    "formatted_string": 1,
                    "formatted_text": 1,
                    "new_string": 1,
                    "output_buffer": 1,
                    "output_str": 2,
                    "output_string": 4,
                    "print_string": 1,
                    "printed_string": 1,
                    "reallocated_string": 1,
                    "reconstructed_ptr": 1,
                    "reconstruction_result": 1,
                    "result": 2,
                    "resultant_string": 1,
                    "temporary_buffer": 1,
                    "temporary_string": 1
                },
                "unaff_R14": {
                    "format_str": 3,
                    "format_string": 28
                },
                "unaff_R15": {
                    "address": 1,
                    "address_offset": 1,
                    "arg": 1,
                    "base_address": 2,
                    "context": 1,
                    "context_info": 1,
                    "data_address": 1,
                    "data_structure": 1,
                    "function_address": 1,
                    "function_arg": 1,
                    "function_base_address": 1,
                    "function_context": 2,
                    "function_param": 1,
                    "function_parameter": 1,
                    "function_pointer": 9,
                    "input_object": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "pointer_to_function": 1,
                    "source_address": 1,
                    "stack_pointer": 1
                },
                "unaff_RBX": {
                    "buffer": 3,
                    "concatenated_string": 11,
                    "memory_block": 1,
                    "memory_location": 1,
                    "modified_ptr": 1,
                    "ptr": 1,
                    "reallocated_buffer": 1,
                    "reallocated_memory": 1,
                    "reconcat_memory": 1,
                    "reconcatenated_str": 1,
                    "reconcatenated_string": 2,
                    "reconstructed_object": 1,
                    "reconstructed_string": 2,
                    "result": 2,
                    "result_string": 1,
                    "string_buffer": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_00102060",
                "FUN_00102190"
            ],
            "calling": [
                "FUN_0010268b",
                "FUN_00102739"
            ],
            "code": "\nvoid print_output_and_free_memory_001047d0(void)\n\n{\n  char *result_string;\n  void *concatenated_string;\n  undefined *output_flag;\n  void *output_string;\n  char *format_string;\n  long function_pointer;\n  \n  if (((DAT_0010b234 != 0) &&\n      (result_string = (char *)(**(code **)(*(long *)(function_pointer + 8) + 0x220))(), result_string != (char *)0x0))\n     && (*result_string != '\\0')) {\n    concatenated_string = (void *)reconcatenate_strings();\n    output_string = concatenated_string;\n  }\n  printf(format_string,output_string);\n  if (output_flag != (undefined *)0x0) {\n    *output_flag = 0x40;\n  }\n  free(concatenated_string);\n  return;\n}\n\n",
            "current_name": "print_output_and_free_memory_001047d0",
            "entrypoint": "0x001047d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001047d0": "print_output_and_free_memory_001047d0",
                "pcVar1": "result_string",
                "reconcat": "reconcatenate_strings",
                "unaff_R12": "output_flag",
                "unaff_R13": "output_string",
                "unaff_R14": "format_string",
                "unaff_R15": "function_pointer",
                "unaff_RBX": "concatenated_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001048e0": {
            "additional_data": {
                "DAT_0010b230": {
                    "unimportant_var4": 1
                },
                "DAT_0010b768": {
                    "unimportant_var15": 1
                },
                "DAT_0010b770": {
                    "unimportant_var14": 1
                },
                "DAT_0010b778": {
                    "unimportant_var12": 1
                },
                "DAT_0010b780": {
                    "unimportant_var13": 1
                },
                "DAT_0010b788": {
                    "unimportant_var3": 1
                },
                "DAT_0010b7d8": {
                    "unimportant_var17": 1
                },
                "DAT_0010b7e4": {
                    "unimportant_var8": 1
                },
                "DAT_0010b7e8": {
                    "unimportant_var6": 1
                },
                "DAT_0010b7f4": {
                    "unimportant_var10": 1
                },
                "DAT_0010b7f8": {
                    "unimportant_var7": 1
                },
                "DAT_0010b7fc": {
                    "unimportant_var9": 1
                },
                "DAT_0010b800": {
                    "unimportant_var11": 1
                },
                "DAT_0010b808": {
                    "unimportant_var16": 1
                },
                "DAT_0010b80c": {
                    "unimportant_var2": 1
                },
                "DAT_0010b810": {
                    "unimportant_var1": 1
                },
                "DAT_0010b81c": {
                    "unimportant_var5": 1
                },
                "FUN_001048e0": {
                    "analyze_binary": 1,
                    "extract_and_process_symbols": 1,
                    "process_object_file": 1,
                    "process_object_symbols": 1,
                    "process_symbols": 6
                },
                "bVar1": {
                    "byte_var": 12,
                    "byte_var1": 7,
                    "byte_var_1": 1,
                    "byte_variable": 4,
                    "flag": 5,
                    "flag_byte": 1,
                    "symbol_flag": 1
                },
                "bVar19": {
                    "bool_flag": 2,
                    "bool_var": 19,
                    "bool_var1": 1,
                    "bool_var_1": 1,
                    "bool_variable": 3,
                    "boolean_var": 1,
                    "boolean_variable": 2,
                    "symbol_flag": 1
                },
                "bVar20": {
                    "bool_var2": 1,
                    "byte_flag": 1,
                    "byte_var": 4,
                    "byte_var2": 13,
                    "byte_var20": 1,
                    "byte_var_2": 4,
                    "byte_variable": 1,
                    "byte_variable2": 2,
                    "byte_variable_2": 1,
                    "byte_variable_20": 1,
                    "symbol_flag": 1
                },
                "cVar3": {
                    "char_var": 22,
                    "char_var3": 1,
                    "char_var_1": 1,
                    "char_variable": 4,
                    "character_variable": 1
                },
                "iVar4": {
                    "error_code": 2,
                    "int_var": 22,
                    "int_var4": 1,
                    "int_var_1": 1,
                    "int_variable": 3,
                    "integer_variable": 2
                },
                "lVar10": {
                    "arr_length": 1,
                    "long_count": 1,
                    "long_var10": 1,
                    "long_var2": 15,
                    "long_var_2": 5,
                    "long_variable2": 2,
                    "long_variable_10": 1,
                    "long_variable_2": 1,
                    "loop_counter": 1,
                    "loop_variable": 2,
                    "temp_long": 1
                },
                "lVar7": {
                    "long_var": 21,
                    "long_var1": 2,
                    "long_var7": 1,
                    "long_var_1": 1,
                    "long_variable": 5,
                    "loop_counter": 1
                },
                "local_40": {
                    "local_arr": 1,
                    "local_arr_11": 1,
                    "local_arr_ptr": 1,
                    "local_array": 11,
                    "local_array1": 3,
                    "local_array2": 1,
                    "local_double_pointer_variable_40": 1,
                    "local_pointer_1": 1,
                    "local_pointer_arr": 1,
                    "local_symbol_list": 1,
                    "local_var_3": 1,
                    "local_var_array": 1,
                    "local_variable40": 1,
                    "pointer_array_var": 1,
                    "symbol_array": 1,
                    "symbol_buffers": 1,
                    "symbol_list_array": 1,
                    "symbol_table_array": 1
                },
                "local_48": {
                    "local_48": 1,
                    "local_array": 1,
                    "local_pointer_data": 1,
                    "local_ptr_1": 1,
                    "local_ulong_var": 1,
                    "local_var2": 14,
                    "local_var48": 1,
                    "local_var_2": 2,
                    "local_variable2": 3,
                    "local_variable48": 1,
                    "local_variable_2": 1,
                    "local_variable_48": 1,
                    "ulong_pointer_var": 1,
                    "ulong_ptr_var": 1
                },
                "local_4c": {
                    "local_4c": 1,
                    "local_uint_var": 2,
                    "local_var": 2,
                    "local_var1": 13,
                    "local_var4c": 1,
                    "local_var_1": 3,
                    "local_variable": 1,
                    "local_variable1": 2,
                    "local_variable4c": 1,
                    "local_variable_1": 1,
                    "local_variable_4c": 1,
                    "uint_var2": 2
                },
                "param_1": {
                    "arg1": 1,
                    "arguments": 1,
                    "binary": 1,
                    "binary_data": 4,
                    "data_array": 1,
                    "first_parameter": 2,
                    "input1": 1,
                    "input_array": 1,
                    "input_data": 7,
                    "input_data_ptr": 1,
                    "input_params": 2,
                    "object": 1,
                    "object_file": 1,
                    "param_list": 1,
                    "parameter1": 2,
                    "parameter_1": 1,
                    "symbol_table": 3
                },
                "param_2": {
                    "arg2": 1,
                    "input1": 4,
                    "input2": 1,
                    "input_param1": 1,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "param2": 11,
                    "param_2": 4,
                    "parameter2": 2,
                    "parameter_2": 1,
                    "second_parameter": 2
                },
                "param_3": {
                    "arg3": 1,
                    "input2": 4,
                    "input3": 1,
                    "input_param2": 1,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "param3": 11,
                    "param_3": 4,
                    "parameter3": 2,
                    "parameter_3": 1,
                    "third_parameter": 2
                },
                "param_4": {
                    "arg4": 1,
                    "fourth_parameter": 2,
                    "input3": 4,
                    "input4": 1,
                    "input_param3": 1,
                    "input_param4": 2,
                    "input_param_4": 2,
                    "param4": 11,
                    "param_4": 4,
                    "parameter4": 2,
                    "parameter_4": 1
                },
                "param_5": {
                    "additional_data_array": 1,
                    "arg5": 1,
                    "data_1": 1,
                    "fifth_parameter": 2,
                    "input4": 1,
                    "input_param_5": 1,
                    "memory_block1": 1,
                    "object_file": 1,
                    "output1": 3,
                    "output_array1": 1,
                    "output_data": 2,
                    "output_data1": 4,
                    "output_data_ptr": 1,
                    "parameter5": 2,
                    "parameter_5": 1,
                    "stack_param_1": 1,
                    "symbol_list": 2,
                    "symbol_list1": 1,
                    "symbol_table": 4
                },
                "param_6": {
                    "additional_data": 1,
                    "another_data_array": 1,
                    "arg6": 1,
                    "data_2": 1,
                    "input5": 1,
                    "input_param_6": 1,
                    "lto_object_list": 1,
                    "memory_block2": 1,
                    "output2": 3,
                    "output_array2": 1,
                    "output_data2": 4,
                    "output_file": 1,
                    "param6": 1,
                    "param_6": 1,
                    "parameter6": 2,
                    "parameter_6": 1,
                    "parse_table": 1,
                    "sixth_parameter": 2,
                    "stack_param_2": 1,
                    "strings_table": 1,
                    "symbol_data": 1,
                    "symbol_list2": 1,
                    "temp_data_ptr": 1,
                    "temp_symbol_table": 1
                },
                "pcVar2": {
                    "code_pointer": 3,
                    "code_ptr": 3,
                    "code_var": 1,
                    "code_var_1": 1,
                    "comparison_function": 1,
                    "func_ptr": 2,
                    "function_pointer": 12,
                    "function_ptr": 6,
                    "function_ptr_var": 1
                },
                "ppuStack_78": {
                    "data_array_pointer10": 1,
                    "double_pointer_variable14": 1,
                    "double_pointer_variable_stack_78": 1,
                    "local_arr_10": 1,
                    "pointer_pointer10": 1,
                    "pointer_pointer_stack_var": 1,
                    "pointer_pointer_var3": 1,
                    "pointer_pointer_var_5": 1,
                    "pointer_pointer_variable_stack": 1,
                    "pointer_to_pointer_stack_1": 1,
                    "pointer_to_pointer_stack_var": 1,
                    "pp_result": 1,
                    "pp_uint_var3": 1,
                    "ppu_stack_var": 1,
                    "ppu_var_stack_78": 1,
                    "ptr_stack78": 1,
                    "ptr_stack_var": 1,
                    "stack_pointer": 1,
                    "stack_pointer_var": 1,
                    "stack_var1": 1,
                    "symbol_data_temp": 1,
                    "symbol_stack": 1,
                    "temp_arr_ptr6": 1,
                    "temp_array11": 1,
                    "temp_data_ptr_2": 1,
                    "temp_pointer3": 1,
                    "temp_ptr1": 1,
                    "temp_ptr4": 1,
                    "temp_ptr_ptr_3": 1,
                    "temp_symbol_ptr2": 1
                },
                "ppuVar12": {
                    "array_pointer3": 1,
                    "current_symbol": 1,
                    "data_array_pointer3": 1,
                    "double_pointer_variable3": 1,
                    "double_pointer_variable_12": 1,
                    "dst_symbol_table": 1,
                    "local_arr_3": 1,
                    "pointer_pointer3": 1,
                    "pointer_pointer_var3": 2,
                    "pointer_pointer_var_3": 1,
                    "pointer_pointer_variable3": 1,
                    "pointer_to_pointer_data_3": 1,
                    "pointer_to_pointer_var3": 1,
                    "pp_current_symbol": 1,
                    "ppu_var2": 1,
                    "ptr_to_ptr3": 1,
                    "result3": 1,
                    "start_symbol_ptr": 1,
                    "symbol_list_temp3": 1,
                    "temp_array4": 1,
                    "unaff_ptr2": 1
                },
                "ppuVar13": {
                    "array_pointer4": 1,
                    "binary_data_temp": 1,
                    "current_symbol_table": 1,
                    "data_array_pointer4": 1,
                    "double_pointer_variable4": 1,
                    "double_pointer_variable_13": 1,
                    "input_params": 1,
                    "local_arr_4": 1,
                    "pointer_pointer4": 1,
                    "pointer_pointer_var4": 2,
                    "pointer_pointer_var_4": 1,
                    "pointer_pointer_variable4": 1,
                    "pointer_to_pointer_data_4": 1,
                    "pointer_to_pointer_var4": 1,
                    "ppu_var3": 1,
                    "ptr_to_ptr4": 1,
                    "result4": 1,
                    "symbol_ptr2": 1,
                    "symbol_table": 1,
                    "temp_array5": 1,
                    "unaff_ptr3": 1
                },
                "ppuVar14": {
                    "array_pointer5": 1,
                    "buffer": 1,
                    "data_array_pointer5": 1,
                    "double_pointer_variable5": 1,
                    "double_pointer_variable_14": 1,
                    "local_arr_5": 1,
                    "pointer_pointer5": 1,
                    "pointer_pointer_var5": 2,
                    "pointer_pointer_variable5": 1,
                    "pointer_to_pointer_data_5": 1,
                    "pointer_to_pointer_var5": 1,
                    "pp_buffer": 1,
                    "ppu_var4": 1,
                    "ptr_to_ptr5": 1,
                    "result5": 1,
                    "symbol_list_temp4": 1,
                    "symbol_ptr3": 1,
                    "symbol_ptr_2": 1,
                    "temp_arr_ptr1": 1,
                    "temp_array6": 1
                },
                "ppuVar15": {
                    "array_pointer6": 1,
                    "copy_loop_length": 1,
                    "data_array_pointer6": 1,
                    "double_pointer_variable6": 1,
                    "double_pointer_variable_15": 1,
                    "end_symbol_ptr": 1,
                    "local_arr_6": 1,
                    "pointer_pointer6": 1,
                    "pointer_pointer_var6": 2,
                    "pointer_pointer_variable6": 1,
                    "pointer_to_pointer_data_6": 1,
                    "pointer_to_pointer_var6": 1,
                    "pp_start": 1,
                    "ppu_var5": 1,
                    "ptr_to_ptr6": 1,
                    "result6": 1,
                    "symbol_list_temp5": 1,
                    "temp_arr_ptr2": 1,
                    "temp_array7": 1,
                    "unaff_r14": 1
                },
                "ppuVar16": {
                    "array_pointer7": 1,
                    "copy_loop_length2": 1,
                    "data_array_pointer7": 1,
                    "double_pointer_variable7": 1,
                    "double_pointer_variable_16": 1,
                    "local_arr_7": 1,
                    "param6_ptr": 1,
                    "pointer_pointer7": 1,
                    "pointer_pointer_var7": 2,
                    "pointer_pointer_variable7": 1,
                    "pointer_to_pointer_data_7": 1,
                    "pointer_to_pointer_var7": 1,
                    "pp_param6": 1,
                    "ppu_var6": 1,
                    "ptr_to_ptr7": 1,
                    "result7": 1,
                    "symbol_list_temp6": 1,
                    "temp_arr_ptr3": 1,
                    "temp_array8": 1,
                    "unaff_r15": 1
                },
                "ppuVar17": {
                    "array_pointer8": 1,
                    "copy_loop_offset": 1,
                    "data_array_pointer8": 1,
                    "double_pointer_variable8": 1,
                    "double_pointer_variable_17": 1,
                    "local_arr_8": 1,
                    "pointer_pointer8": 1,
                    "pointer_pointer_var8": 2,
                    "pointer_pointer_variable8": 1,
                    "pointer_to_pointer_data_8": 1,
                    "pointer_to_pointer_var8": 1,
                    "pp_buffer": 1,
                    "ppu_var7": 1,
                    "ppu_var_17": 1,
                    "ptr_to_ptr8": 1,
                    "result8": 1,
                    "symbol_list_temp7": 1,
                    "symbol_ptr4": 1,
                    "temp_arr_ptr4": 1,
                    "temp_array9": 1
                },
                "ppuVar18": {
                    "array_pointer9": 1,
                    "data_array_pointer9": 1,
                    "double_pointer_variable9": 1,
                    "double_pointer_variable_18": 1,
                    "local_arr_9": 1,
                    "pointer_pointer9": 1,
                    "pointer_pointer_var9": 2,
                    "pointer_pointer_variable9": 1,
                    "pointer_to_pointer_data_9": 1,
                    "pointer_to_pointer_var9": 1,
                    "pp_result": 1,
                    "ppu_var8": 1,
                    "ppu_var_18": 1,
                    "ptr_to_ptr9": 1,
                    "result9": 1,
                    "symbol_list_temp8": 1,
                    "temp_arr_ptr5": 1,
                    "temp_array10": 1,
                    "temp_symbol_ptr": 1,
                    "unneeded_segment": 1
                },
                "ppuVar19": {
                    "symbol_name": 1
                },
                "ppuVar8": {
                    "array_pointer1": 1,
                    "current_symbol": 1,
                    "data_array_pointer1": 1,
                    "data_ptr_8byte": 1,
                    "double_pointer_variable": 1,
                    "double_pointer_variable_8": 1,
                    "input_arr_ptr": 1,
                    "local_arr_1": 1,
                    "num_symbols": 1,
                    "pointer_pointer1": 1,
                    "pointer_pointer_var": 1,
                    "pointer_pointer_var1": 2,
                    "pointer_pointer_var_1": 1,
                    "pointer_pointer_variable1": 1,
                    "pointer_to_pointer_data_1": 1,
                    "pointer_to_pointer_var1": 1,
                    "pp_uint_var1": 1,
                    "ptr_ptr1": 1,
                    "ptr_ptr_var1": 1,
                    "ptr_to_ptr1": 1,
                    "result1": 1,
                    "result_pointer": 1,
                    "src_symbol_table": 1,
                    "symbol_list_temp": 1,
                    "symbol_ptr1": 1,
                    "symbol_table_ptr1": 1,
                    "temp_array1": 1,
                    "temp_pointer1": 1,
                    "temp_ptr1": 1,
                    "temp_ptr_ptr": 1
                },
                "ppuVar9": {
                    "array_pointer2": 1,
                    "data_array_pointer2": 1,
                    "data_ptr": 1,
                    "double_pointer_variable2": 1,
                    "double_pointer_variable_9": 1,
                    "local_arr_2": 1,
                    "local_error_code": 1,
                    "local_vars": 1,
                    "output_arr_ptr": 1,
                    "pointer_pointer2": 1,
                    "pointer_pointer_var2": 3,
                    "pointer_pointer_var_2": 1,
                    "pointer_pointer_variable2": 1,
                    "pointer_to_pointer_data_2": 1,
                    "pointer_to_pointer_var2": 1,
                    "pp_buffer": 1,
                    "pp_uint_var2": 1,
                    "ppu_var1": 1,
                    "ptr_ptr_var2": 1,
                    "ptr_to_ptr2": 1,
                    "result2": 1,
                    "symbol_list_temp2": 1,
                    "symbol_ptr2": 1,
                    "symbol_table_ptr2": 1,
                    "temp": 1,
                    "temp_array2": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 1,
                    "temp_ptr_ptr_2": 1
                },
                "puVar11": {
                    "long_ptr": 1,
                    "pointer_data": 1,
                    "pointer_var": 7,
                    "pointer_var1": 1,
                    "pointer_var_1": 1,
                    "pointer_variable": 4,
                    "pointer_variable_11": 1,
                    "ptr_to_data": 1,
                    "ptr_var": 4,
                    "symbol_data": 1,
                    "symbol_ptr": 2,
                    "temp_ptr3": 1,
                    "ulong_pointer": 1,
                    "ulong_ptr": 2,
                    "ulong_var": 1,
                    "ulong_var_ptr": 1
                },
                "uVar5": {
                    "bool_value": 1,
                    "uint_var": 22,
                    "uint_var5": 1,
                    "uint_var_1": 1,
                    "uint_variable": 3,
                    "unsigned_integer_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1
                },
                "uVar6": {
                    "res_var": 1,
                    "result": 1,
                    "return_value": 2,
                    "translated_var": 1,
                    "u_var": 1,
                    "uint_var6": 1,
                    "ulong_var": 12,
                    "ulong_var_1": 1,
                    "ulong_variable": 2,
                    "undefined8_var": 5,
                    "undefined_var": 1,
                    "unknown_var": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_variable2": 1
                },
                "unaff_R14": {
                    "count_param": 1,
                    "double_pointer_variable12": 1,
                    "pointer_pointer_data_3": 1,
                    "pointer_reg_3": 1,
                    "pointer_var2": 1,
                    "pointer_var3": 1,
                    "ptr_ptr4": 1,
                    "ptr_reg_r14": 1,
                    "register_r14": 1,
                    "register_var3": 1,
                    "temporary_register2": 1,
                    "ulong_ptr3": 1,
                    "unaff_ptr5": 1,
                    "unaffected_pointer3": 1,
                    "unaffected_r14": 1,
                    "unaffected_r14_var": 1,
                    "unaffected_register3": 1,
                    "unaffected_register_14": 1
                },
                "unaff_R15": {
                    "data_ptr": 1,
                    "double_pointer_variable13": 1,
                    "pointer_pointer_data_4": 1,
                    "pointer_reg_4": 1,
                    "pointer_var3": 1,
                    "pointer_var4": 1,
                    "pp_symbol": 1,
                    "ptr_ptr5": 1,
                    "ptr_reg_r15": 1,
                    "register_r15": 1,
                    "register_var4": 1,
                    "temporary_register3": 1,
                    "ulong_ptr4": 1,
                    "unaff_ptr6": 1,
                    "unaffected_pointer4": 1,
                    "unaffected_r15": 1,
                    "unaffected_r15_var": 1,
                    "unaffected_register4": 1,
                    "unaffected_register_15": 1
                },
                "unaff_RBP": {
                    "double_pointer_variable11": 1,
                    "flag2": 1,
                    "flag_param": 1,
                    "pointer_pointer_data_2": 1,
                    "pointer_reg_2": 1,
                    "pointer_var2": 1,
                    "ptr_ptr3": 1,
                    "ptr_reg_bp": 1,
                    "register_rbp": 1,
                    "register_var2": 1,
                    "ulong_ptr2": 1,
                    "unaff_ptr4": 1,
                    "unaffected_pointer2": 1,
                    "unaffected_rbp": 1,
                    "unaffected_rbp_var": 1,
                    "unaffected_register2": 1
                },
                "unaff_RBX": {
                    "double_pointer_variable10": 1,
                    "object_file_copy": 1,
                    "pointer_pointer_data": 1,
                    "pointer_reg_1": 1,
                    "pointer_var1": 2,
                    "pp_symbol": 1,
                    "ptr_ptr2": 1,
                    "ptr_reg_bx": 1,
                    "register_rbx": 1,
                    "register_var": 1,
                    "symbol_ptr5": 1,
                    "temp_array3": 1,
                    "temporary_register1": 1,
                    "unaff_ptr1": 1,
                    "unaffected_pointer1": 1,
                    "unaffected_rb_var": 1,
                    "unaffected_rbx": 1,
                    "unaffected_register1": 1
                }
            },
            "called": [
                "FUN_00106400",
                "FUN_00106530",
                "FUN_00102150",
                "FUN_001021d0"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid process_object_symbols_001048e0(ulong **input_data,undefined8 param2,undefined8 param3,undefined8 param4,\n                 ulong **symbol_table,ulong **output_data2)\n\n{\n  byte byte_var;\n  code *function_pointer;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 ulong_var;\n  long long_var;\n  ulong **pointer_pointer_var1;\n  ulong **pointer_pointer_var2;\n  long long_var2;\n  ulong *pointer_var;\n  ulong **pointer_var1;\n  ulong **pointer_pointer_var3;\n  ulong **pointer_pointer_var4;\n  ulong **ulong_ptr2;\n  ulong **pointer_pointer_var5;\n  ulong **pointer_pointer_var6;\n  ulong **pointer_pointer_var7;\n  ulong **pointer_pointer_var8;\n  ulong **pointer_pointer_var9;\n  ulong **ptr_ptr4;\n  ulong **pointer_pointer_data_4;\n  bool bool_var;\n  byte byte_var2;\n  ulong **ptr_stack_var;\n  uint local_var1;\n  ulong *local_var2;\n  ulong **local_array [2];\n  \n  byte_var2 = 0;\n  local_var2 = (ulong *)0x0;\n  if ((DAT_0010b80c != 0) || ((*(byte *)((long)input_data + 0x44) & 0x10) != 0)) {\n    pointer_pointer_var2 = (ulong **)&local_var1;\n    pointer_pointer_var1 = (ulong **)(*(code *)input_data[1][0x4d])(input_data,DAT_0010b80c != 0,local_array);\n    if ((long)pointer_pointer_var1 < 0) {\n      if ((DAT_0010b80c != 0) && (int_var = bfd_get_error(), int_var == 7)) {\n        if (_DAT_0010b810 != 0) {\n          return;\n        }\n        pointer_var = *input_data;\n        ulong_var = dcgettext(0,\"%s: no symbols\",5);\n        non_fatal(ulong_var,pointer_var);\n        return;\n      }\n      bfd_fatal(*input_data);\n      goto LAB_00102e9e;\n    }\n    if (pointer_pointer_var1 != (ulong **)0x0) {\n      if (DAT_0010b788 != 0) {\n        if (local_var1 == 8) goto LAB_00102d06;\n        goto LAB_00102cc2;\n      }\n      byte_var = *(byte *)((long)input_data + 0x4a);\n      pointer_pointer_var4 = input_data;\n      do {\n        if ((byte_var & 0x10) != 0) {\n          pointer_var1 = (ulong **)*pointer_pointer_var4;\n          DAT_0010b230 = '\\0';\n          ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          non_fatal(ulong_var);\n        }\n        pointer_pointer_var5 = local_array[0];\n        ptr_ptr4 = (ulong **)(ulong)local_var1;\n        bool_var = DAT_0010b80c != 0;\n        pointer_pointer_var2 = local_array[0];\n        pointer_pointer_data_4 = (ulong **)(*(code *)pointer_pointer_var4[1][0x41])(pointer_pointer_var4);\n        pointer_pointer_var3 = pointer_var1;\n        ulong_ptr2 = (ulong **)(ulong)bool_var;\n        input_data = pointer_pointer_var4;\n        if (pointer_pointer_data_4 == (ulong **)0x0) goto LAB_00102ea7;\n        pointer_pointer_var8 = (ulong **)((long)pointer_pointer_var1 * (long)ptr_ptr4);\n        pointer_pointer_var1 = (ulong **)((long)pointer_pointer_var5 + (long)pointer_pointer_var8);\n        input_data = pointer_pointer_var5;\n        pointer_pointer_var3 = pointer_pointer_var5;\njoined_r0x001049a4:\n        if (input_data < pointer_pointer_var1) {\n          do {\n            pointer_pointer_var2 = (ulong **)(*(code *)pointer_pointer_var4[1][0x4e])(pointer_pointer_var4,bool_var,input_data,pointer_pointer_data_4);\n            pointer_pointer_var8 = pointer_pointer_data_4;\n            if (pointer_pointer_var2 == (ulong **)0x0) goto LAB_00102eb0;\n            pointer_var = pointer_pointer_var2[1];\n            pointer_pointer_var8 = pointer_pointer_var1;\n            if (((pointer_var == (ulong *)0x0) || (*(char *)pointer_var != '_')) ||\n               (*(char *)((long)pointer_var + 1) != '_')) {\nLAB_00104a03:\n              if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n              uint_var = (uint)(pointer_pointer_var2[4] == (ulong *)0x10c2a8);\nLAB_00104af9:\n              if (uint_var == 0) goto code_r0x00104b01;\nLAB_00104a2d:\n              if (DAT_0010b81c == 0) {\n                if ((*(byte *)(pointer_pointer_var2 + 3) & 4) == 0) {\n                  if (DAT_0010b7f8 != 0) goto process_lto_symbols_00104d5b;\nLAB_00104a53:\n                  output_data2 = (ulong **)(ulong)DAT_0010b7e4;\n                  if (DAT_0010b7e4 == 0) {\n                    char_var = (*(code *)pointer_pointer_var4[1][0x46])(pointer_pointer_var4,pointer_pointer_var2);\n                    if (char_var != '\\0') {\n                      display_rel_file_cold();\n                      return;\n                    }\n                    goto LAB_00104a7b;\n                  }\n                  if (pointer_pointer_var2[4] != (ulong *)0x10c2a8) goto LAB_00104cba;\n                }\n              }\n              else {\n                if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nprocess_lto_symbols_00104d5b:\n                if ((pointer_pointer_var2[4] == (ulong *)0x10c2a8) || (pointer_pointer_var2[4] == (ulong *)0x10c3c0))\n                goto LAB_001049c3;\nLAB_00104cba:\n                char_var = (*(code *)pointer_pointer_var4[1][0x46])(pointer_pointer_var4,pointer_pointer_var2);\n                if (char_var != '\\0') {\n                  display_rel_file_cold();\n                  return;\n                }\nLAB_00104a7b:\n                if (pointer_pointer_var3 != input_data) {\n                  if (ptr_ptr4 == (ulong **)0x8) {\n                    *pointer_pointer_var3 = *input_data;\n                    process_symbols_001049c0();\n                    return;\n                  }\n                  for (; ptr_ptr4 != (ulong **)0x0; ptr_ptr4 = (ulong **)((long)ptr_ptr4 + -1)) {\n                    *(undefined *)pointer_pointer_var3 = *(undefined *)input_data;\n                    input_data = (ulong **)((long)input_data + (ulong)byte_var2 * -2 + 1);\n                    pointer_pointer_var3 = (ulong **)((long)pointer_pointer_var3 + (ulong)byte_var2 * -2 + 1);\n                  }\n                  process_symbols_001049c0();\n                  return;\n                }\n                pointer_pointer_var3 = (ulong **)((long)pointer_pointer_var3 + (long)ptr_ptr4);\n              }\n            }\n            else {\n              int_var = strcmp((char *)((long)pointer_var + (ulong)(*(char *)((long)pointer_var + 2) == '_')),\n                             \"__gnu_lto_slim\");\n              ptr_stack_var = pointer_pointer_var2;\n              if (int_var == 0) {\n                if (DAT_0010b230 != '\\0') {\n                  ptr_stack_var = (ulong **)*pointer_pointer_var4;\n                  DAT_0010b230 = '\\0';\n                  ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  non_fatal(ulong_var,ptr_stack_var);\n                }\n                goto LAB_00104a03;\n              }\n              if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n              if (DAT_0010b808 == 0) {\n                if (DAT_0010b7d8 != 0) {\n                  uint_var = (*(uint *)(pointer_pointer_var2 + 3) >> 7 ^ 1) & 1;\n                  goto LAB_00104af9;\n                }\n                goto LAB_00104a2d;\n              }\n              if ((((*(uint *)(pointer_pointer_var2 + 3) & 0x800082) != 0) || (pointer_pointer_var2[4] == (ulong *)0x10c2a8))\n                 || ((*(byte *)((long)pointer_pointer_var2[4] + 0x25) & 0x10) != 0)) goto LAB_00104a2d;\n            }\nLAB_001049c3:\n            input_data = (ulong **)((long)input_data + (long)ptr_ptr4);\n            if (pointer_pointer_var1 <= input_data) break;\n          } while( true );\n        }\n        pointer_pointer_var3 = (ulong **)((long)pointer_pointer_var3 - (long)pointer_pointer_var5);\n        if (ptr_ptr4 == (ulong **)0x8) {\n          pointer_var = pointer_pointer_var4[1];\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var3 + 7);\n          if (-1 < (long)pointer_pointer_var3) {\n            pointer_pointer_var5 = pointer_pointer_var3;\n          }\n          symbol_table = (ulong **)(ulong)DAT_0010b800;\n          function_pointer = (code *)pointer_var[0x41];\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var5 >> 3);\n        }\n        else {\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var3 / (long)ptr_ptr4);\n          pointer_var = pointer_pointer_var4[1];\n          function_pointer = (code *)pointer_var[0x41];\n        }\n        if (DAT_0010b800 != 0) goto LAB_00104be2;\n        DAT_0010b778 = DAT_0010b80c != 0;\n        DAT_0010b780 = pointer_pointer_var4;\n        DAT_0010b770 = (ulong **)(*function_pointer)(pointer_pointer_var4);\n        DAT_0010b768 = (ulong **)(*(code *)pointer_pointer_var4[1][0x41])(pointer_pointer_var4);\n        pointer_pointer_var3 = local_array[0];\n        if ((DAT_0010b770 != (ulong **)0x0) && (DAT_0010b768 != (ulong **)0x0)) {\n          pointer_pointer_var1 = (ulong **)(ulong)local_var1;\n          if (DAT_0010b7f8 != 0) {\n            bool_var = DAT_0010b80c != 0;\n            qsort(local_array[0],(size_t)pointer_pointer_var5,(size_t)pointer_pointer_var1,size_forward1);\n            pointer_pointer_var8 = (ulong **)xmalloc((long)pointer_pointer_var5 << 4);\n            pointer_pointer_var9 = DAT_0010b770;\n            input_data = DAT_0010b768;\n            ptr_ptr4 = (ulong **)((long)pointer_pointer_var5 * (long)pointer_pointer_var1 + (long)pointer_pointer_var3);\n            pointer_pointer_var2 = DAT_0010b770;\n            if (ptr_ptr4 <= pointer_pointer_var3) goto LAB_00102ec2;\n            output_data2 = DAT_0010b768;\n            pointer_pointer_var5 = (ulong **)(*(code *)pointer_pointer_var4[1][0x4e])(pointer_pointer_var4,bool_var,pointer_pointer_var3);\n            symbol_table = pointer_pointer_var1;\n            ptr_stack_var = pointer_pointer_var8;\n            if (pointer_pointer_var5 == (ulong **)0x0) goto LAB_00102eb9;\n            goto LAB_00104e35;\n          }\n          qsort(local_array[0],(size_t)pointer_pointer_var5,(size_t)pointer_pointer_var1,\n                (__compar_fn_t)\n                (&PTR_non_numeric_forward_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n          pointer_var = pointer_pointer_var4[1];\nLAB_00104be2:\n          input_data = pointer_pointer_var4;\n          pointer_pointer_var9 = (ulong **)0x0;\n          goto LAB_00104be5;\n        }\n        bfd_fatal(*pointer_pointer_var4);\n        input_data = pointer_pointer_var4;\n        pointer_pointer_var3 = pointer_pointer_data_4;\n        while( true ) {\n          pointer_var1 = (ulong **)xmalloc();\n          pointer_pointer_var1 = (ulong **)(*(code *)input_data[1][0x6b])(input_data,pointer_var1);\n          pointer_pointer_var2 = pointer_pointer_var8;\n          if (-1 < (long)pointer_pointer_var1) break;\n          pointer_pointer_var4 = (ulong **)*input_data;\n          pointer_pointer_var5 = (ulong **)bfd_fatal(pointer_pointer_var4,pointer_pointer_var8);\nLAB_00102dbe:\n          pointer_var = pointer_pointer_var5[2];\n          pointer_pointer_var2 = (ulong **)0x0;\nLAB_00102dc4:\n          pointer_var = (ulong *)((long)pointer_pointer_var1[8] - (long)pointer_var);\n          pointer_pointer_var9 = input_data;\n          pointer_pointer_var6 = pointer_pointer_var3;\nLAB_00104ea7:\n          pointer_pointer_var5 = pointer_pointer_var2;\n          pointer_pointer_var3 = pointer_var1;\n          input_data = output_data2;\n          if (pointer_var != (ulong *)0x0) {\n            *pointer_pointer_var8 = (ulong *)pointer_pointer_var6;\n            pointer_pointer_var8[1] = pointer_var;\n            pointer_pointer_var8 = pointer_pointer_var8 + 2;\n          }\nLAB_00104e35:\n          output_data2 = pointer_pointer_var9;\n          if (pointer_pointer_var3 < ptr_ptr4) goto code_r0x00104e3e;\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var8 - (long)ptr_stack_var >> 4);\n          qsort(ptr_stack_var,(size_t)pointer_pointer_var5,0x10,size_forward2);\n          pointer_var = pointer_pointer_var4[1];\n          input_data = pointer_pointer_var4;\n          pointer_pointer_var9 = ptr_stack_var;\nLAB_00104be5:\n          pointer_var1 = local_array[0];\n          pointer_pointer_var1 = (ulong **)(ulong)DAT_0010b7f8;\n          ptr_ptr4 = (ulong **)(ulong)(DAT_0010b80c != 0);\n          if (DAT_0010b7f8 != 0) {\n            pointer_pointer_var8 = (ulong **)(*(code *)pointer_var[0x41])(input_data);\n            if (pointer_pointer_var8 == (ulong **)0x0) goto LAB_00102ed2;\n            pointer_pointer_var3 = pointer_pointer_var9 + (long)pointer_pointer_var5 * 2;\n            pointer_pointer_var5 = pointer_pointer_var9;\n            goto LAB_00104ee9;\n          }\n          pointer_pointer_var1 = (ulong **)(ulong)local_var1;\n          pointer_pointer_data_4 = (ulong **)(*(code *)pointer_var[0x41])(input_data);\n          if (pointer_pointer_data_4 != (ulong **)0x0) {\n            ulong_ptr2 = (ulong **)((long)pointer_pointer_var5 * (long)pointer_pointer_var1 + (long)pointer_var1);\n            if (pointer_var1 < ulong_ptr2) goto LAB_00104c38;\n            goto LAB_00104c75;\n          }\n          bfd_fatal(*input_data);\n          pointer_pointer_data_4 = pointer_pointer_var9;\nLAB_00102d06:\n          pointer_pointer_var2 = pointer_pointer_var1;\n          if (DAT_0010b80c != 0) {\n            pointer_var1 = local_array[0];\n            pointer_pointer_var5 = (ulong **)0x0;\n            pointer_pointer_var8 = (ulong **)0x0;\n            break;\n          }\n          long_var2 = (*(code *)input_data[1][0x6a])(input_data);\n          pointer_pointer_var5 = local_array[0];\n          pointer_pointer_var8 = pointer_pointer_var1;\n          pointer_pointer_var3 = pointer_pointer_data_4;\n          if (long_var2 < 1) {\n            pointer_pointer_var1 = (ulong **)0x0;\n            pointer_var1 = (ulong **)0x0;\n            break;\n          }\n        }\n        output_data2 = &local_var2;\n        symbol_table = pointer_var1;\n        long_var2 = (*(code *)input_data[1][0x6c])(input_data,pointer_pointer_var8,pointer_pointer_var5,pointer_pointer_var1);\n        pointer_pointer_var1 = pointer_pointer_var2;\n        if (0 < long_var2) {\n          pointer_pointer_var1 = (ulong **)((long)pointer_pointer_var2 + long_var2);\n          local_array[0] = (ulong **)xrealloc(local_array[0]);\n          long_var = 0;\n          do {\n            local_array[0][(long)pointer_pointer_var2 + long_var] = local_var2 + long_var * 6;\n            long_var = long_var + 1;\n          } while (long_var2 != long_var);\n          local_array[0][(long)pointer_pointer_var2 + long_var2] = (ulong *)0x0;\n        }\n        if ((DAT_0010b80c == 0) && (pointer_var1 != (ulong **)0x0)) {\n          free(pointer_var1);\n        }\nLAB_00102cc2:\n        byte_var = *(byte *)((long)input_data + 0x4a);\n        pointer_pointer_var4 = input_data;\n      } while( true );\n    }\n  }\n  if (_DAT_0010b810 == 0) {\n    pointer_var = *input_data;\n    ulong_var = dcgettext(0,\"%s: no symbols\",5);\n    non_fatal(ulong_var,pointer_var);\n  }\n  return;\ncode_r0x00104b01:\n  input_data = (ulong **)((long)input_data + (long)ptr_ptr4);\n  goto joined_r0x001049a4;\ncode_r0x00104e3e:\n  pointer_var1 = (ulong **)((long)pointer_pointer_var3 + (long)symbol_table);\n  if (ptr_ptr4 <= pointer_var1) {\n    pointer_pointer_var1 = (ulong **)pointer_pointer_var5[4];\n    if ((*(uint *)(pointer_pointer_var5 + 3) & 0x200100) != 0) goto LAB_00102dbe;\n    pointer_pointer_var2 = (ulong **)0x0;\nLAB_00104e95:\n    pointer_pointer_var9 = input_data;\n    pointer_pointer_var6 = pointer_pointer_var3;\n    if (*(int *)(pointer_pointer_var4[1] + 1) == 5) {\n      pointer_var = pointer_pointer_var5[7];\n      goto LAB_00104ea7;\n    }\n    pointer_var = pointer_pointer_var5[2];\n    if ((*(byte *)((long)pointer_pointer_var1 + 0x25) & 0x10) != 0) goto LAB_00104ea7;\n    if (ptr_ptr4 <= pointer_var1) goto LAB_00102dc4;\n    goto LAB_00102ee7;\n  }\n  pointer_pointer_var1 = input_data;\n  pointer_pointer_var6 = symbol_table;\n  pointer_pointer_var7 = output_data2;\n  pointer_pointer_var2 = (ulong **)(*(code *)pointer_pointer_var4[1][0x4e])();\n  pointer_pointer_var9 = pointer_pointer_var3;\n  if (pointer_pointer_var2 == (ulong **)0x0) goto LAB_00102edb;\n  pointer_pointer_var1 = (ulong **)pointer_pointer_var5[4];\n  if ((*(uint *)(pointer_pointer_var5 + 3) & 0x200100) == 0) goto LAB_00104e95;\n  goto LAB_00102ee3;\nLAB_00104ee9:\n  if (pointer_pointer_var3 <= pointer_pointer_var5) {\nLAB_00104c75:\n    if (local_var2 == (ulong *)0x0) {\n      free(local_array[0]);\n      free(pointer_pointer_var9);\n      return;\n    }\n    free(local_var2);\n    free(local_array[0]);\n    free(pointer_pointer_var9);\n    return;\n  }\n  pointer_pointer_var1 = pointer_pointer_var8;\n  long_var2 = (*(code *)input_data[1][0x4e])(input_data,ptr_ptr4,*pointer_pointer_var5);\n  if (long_var2 == 0) goto LAB_00102ec9;\n  pointer_pointer_var1 = pointer_pointer_var5 + 1;\n  pointer_pointer_var5 = pointer_pointer_var5 + 2;\n  print_symbol(input_data,long_var2,*pointer_pointer_var1,param2);\n  goto LAB_00104ee9;\nLAB_00102ec9:\n  bfd_fatal(*input_data,0);\nLAB_00102ed2:\n  pointer_pointer_var4 = (ulong **)*input_data;\n  bfd_fatal();\n  pointer_var1 = pointer_pointer_var3;\n  pointer_pointer_var6 = symbol_table;\n  pointer_pointer_var7 = output_data2;\nLAB_00102edb:\n  output_data2 = pointer_pointer_var7;\n  symbol_table = pointer_pointer_var6;\n  pointer_pointer_var4 = (ulong **)*pointer_pointer_var4;\n  pointer_pointer_var2 = (ulong **)bfd_fatal();\n  pointer_pointer_var3 = pointer_pointer_var9;\nLAB_00102ee3:\n  pointer_var = pointer_pointer_var5[2];\nLAB_00102ee7:\n  if (pointer_pointer_var1 != (ulong **)pointer_pointer_var2[4]) goto LAB_00102dc4;\n  pointer_var = (ulong *)((long)pointer_pointer_var2[2] - (long)pointer_var);\n  pointer_pointer_var9 = input_data;\n  pointer_pointer_var6 = pointer_pointer_var3;\n  goto LAB_00104ea7;\nLAB_00104c38:\n  while (pointer_pointer_var2 = pointer_pointer_data_4, long_var2 = (*(code *)input_data[1][0x4e])(input_data,ptr_ptr4,pointer_var1),\n        long_var2 != 0) {\n    pointer_var1 = (ulong **)((long)pointer_var1 + (long)pointer_pointer_var1);\n    print_symbol(input_data,long_var2,0,param2);\n    if (ulong_ptr2 <= pointer_var1) goto LAB_00104c75;\n  }\nLAB_00102e9e:\n  bfd_fatal(*input_data);\n  pointer_pointer_var3 = pointer_var1;\nLAB_00102ea7:\n  pointer_pointer_var4 = ulong_ptr2;\n  bfd_fatal(*input_data);\n  pointer_pointer_var8 = pointer_pointer_data_4;\nLAB_00102eb0:\n  bfd_fatal(*pointer_pointer_var4);\n  pointer_pointer_var4 = input_data;\nLAB_00102eb9:\n  bfd_fatal(*pointer_pointer_var4);\n  input_data = output_data2;\nLAB_00102ec2:\n  pointer_pointer_var5 = (ulong **)0x0;\n  symbol_table = pointer_pointer_var1;\n  pointer_pointer_var9 = pointer_pointer_var2;\n  ptr_stack_var = pointer_pointer_var8;\n  goto LAB_00104e35;\n}\n\n",
            "current_name": "process_object_symbols_001048e0",
            "entrypoint": "0x001048e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001048e0": "process_object_symbols_001048e0",
                "bVar1": "byte_var",
                "bVar19": "bool_var",
                "bVar20": "byte_var2",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "lVar10": "long_var2",
                "lVar7": "long_var",
                "local_40": "local_array",
                "local_48": "local_var2",
                "local_4c": "local_var1",
                "param_1": "input_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "symbol_table",
                "param_6": "output_data2",
                "pcVar2": "function_pointer",
                "ppuStack_78": "ptr_stack_var",
                "ppuVar12": "pointer_pointer_var3",
                "ppuVar13": "pointer_pointer_var4",
                "ppuVar14": "pointer_pointer_var5",
                "ppuVar15": "pointer_pointer_var6",
                "ppuVar16": "pointer_pointer_var7",
                "ppuVar17": "pointer_pointer_var8",
                "ppuVar18": "pointer_pointer_var9",
                "ppuVar8": "pointer_pointer_var1",
                "ppuVar9": "pointer_pointer_var2",
                "puVar11": "pointer_var",
                "uVar5": "uint_var",
                "uVar6": "ulong_var",
                "unaff_R14": "ptr_ptr4",
                "unaff_R15": "pointer_pointer_data_4",
                "unaff_RBP": "ulong_ptr2",
                "unaff_RBX": "pointer_var1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001049c0": {
            "additional_data": {
                "FUN_001049c0": {
                    "decode_and_display_symbols": 1,
                    "decompile_and_improve": 1,
                    "parse_binary": 1,
                    "process_lto_object": 1,
                    "process_object_file": 1,
                    "process_symbol_data": 1,
                    "process_symbols": 10,
                    "reverse_and_print_symbols": 2,
                    "symbol_analysis": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "pointer": 2,
                    "pointer8": 1,
                    "pointer_variable3": 1,
                    "pointer_variable4": 1,
                    "ptr60": 1,
                    "ptr_var113": 1,
                    "return_ptr": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temporary_variable_3": 1,
                    "tmp_ptr": 1,
                    "undefined8_ptr3": 1
                },
                "bVar16": {
                    "b_var16": 1,
                    "bool_var": 4,
                    "bool_var1": 1,
                    "bool_var16": 1,
                    "bool_variable": 1,
                    "boolean_flag": 1,
                    "boolean_value": 1,
                    "boolean_var": 1,
                    "boolean_var2": 1,
                    "boolean_variable": 1,
                    "carry_flag": 1,
                    "flag": 1,
                    "is_incrementing": 1,
                    "is_lto_enabled": 1,
                    "is_lto_object": 1,
                    "is_negative": 1,
                    "loop_condition": 1,
                    "symbol_bool": 1,
                    "symbol_found": 1,
                    "symbol_readability_condition": 1
                },
                "bVar17": {
                    "b_var17": 1,
                    "b_var2": 1,
                    "bool_var17": 1,
                    "bool_var2": 1,
                    "boolean_var1": 1,
                    "byte_counter": 1,
                    "byte_multiplier": 1,
                    "byte_value": 2,
                    "byte_var": 6,
                    "byte_variable": 2,
                    "flag3": 1,
                    "increment": 2,
                    "increment_value": 1,
                    "is_plugin_needed": 1,
                    "loop_condition": 1,
                    "loop_increment": 1,
                    "symbol_array_increment_condition": 1,
                    "symbol_byte": 1,
                    "temp_flag": 1,
                    "tmp_byte": 1
                },
                "cVar3": {
                    "char_value": 2,
                    "char_var": 5,
                    "char_variable": 1,
                    "character": 2,
                    "character_variable": 1,
                    "comparison_result": 1,
                    "flag": 4,
                    "is_plugin_needed": 1,
                    "plugin_needed": 1,
                    "result": 1,
                    "should_display_related_file": 1,
                    "should_handle_lto_object": 1,
                    "status": 2,
                    "symbol_char": 1,
                    "temp_char": 1
                },
                "iVar4": {
                    "comparison_result": 7,
                    "int_value": 1,
                    "int_var": 5,
                    "int_var1": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "integer_variable": 1,
                    "result": 1,
                    "strcmp_result": 1,
                    "string_comparison_result": 3,
                    "symbol_comparison_result": 1,
                    "symbol_int": 1,
                    "temp_int": 1
                },
                "in_R8": {
                    "count": 1,
                    "input_register8": 1,
                    "param_9": 1,
                    "pointer7": 1,
                    "ptr64": 1,
                    "register_r8": 1,
                    "symbol_name_length": 1,
                    "symbol_pointer8": 1,
                    "temp_ptr": 1
                },
                "in_R9": {
                    "param_10": 1,
                    "ptr63": 1,
                    "size": 1,
                    "temp_ptr": 1
                },
                "in_stack_00000008": {
                    "additional_data": 1,
                    "argument": 1,
                    "extra_data": 1,
                    "in_stack_00000008": 1,
                    "input_param1": 1,
                    "output_size": 1,
                    "param_1": 1,
                    "parameter1": 1,
                    "print_format": 1,
                    "stack_arg1": 1,
                    "stack_data_1": 1,
                    "stack_var1": 3,
                    "stack_var8": 1,
                    "stack_variable1": 5,
                    "symbol_stack1": 1,
                    "value_in_stack_8": 1,
                    "var1": 1
                },
                "in_stack_00000010": {
                    "array1": 1,
                    "buffer_pointer": 1,
                    "param_2": 1,
                    "ptr62": 1,
                    "sorted_symbol_table": 1,
                    "stack_arg2": 1,
                    "stack_data_2": 1,
                    "stack_var10": 1,
                    "stack_var2": 3,
                    "stack_variable2": 5,
                    "symbol_array": 2,
                    "symbol_stack2": 1,
                    "symbol_table_offset": 1,
                    "temporary_memory": 1,
                    "unaff_retaddr": 1,
                    "value_in_stack_10": 1,
                    "var2": 1
                },
                "in_stack_00000018": {
                    "array2": 1,
                    "in_stack_00000018": 1,
                    "param_3": 1,
                    "ptr81": 1,
                    "source_buffer": 1,
                    "stack_arg3": 1,
                    "stack_data_3": 1,
                    "stack_var18": 1,
                    "stack_var3": 3,
                    "stack_variable3": 5,
                    "symbol_array_pos": 1,
                    "symbol_array_size": 1,
                    "symbol_buffer2_pointer": 1,
                    "symbol_stack3": 1,
                    "symbol_table": 1,
                    "symbol_table_size": 1,
                    "value_in_stack_18": 1,
                    "var3": 1
                },
                "in_stack_00000038": {
                    "array_size": 1,
                    "buffer_size": 1,
                    "data_type": 1,
                    "in_stack_00000038": 1,
                    "lto_object_flag": 1,
                    "param_4": 1,
                    "source_buffer_size": 1,
                    "stack_arg4": 1,
                    "stack_data_4": 1,
                    "stack_struct": 1,
                    "stack_var38": 1,
                    "stack_var4": 3,
                    "stack_variable4": 4,
                    "symbol_size_multiplier": 1,
                    "symbol_stack4": 1,
                    "type": 1,
                    "value_in_stack_38": 1,
                    "var4": 1
                },
                "in_stack_00000040": {
                    "extra_data_ptr": 1,
                    "in_stack_00000040": 1,
                    "memory": 1,
                    "param_5": 1,
                    "rel_file": 1,
                    "related_file_buffer": 1,
                    "stack_arg5": 1,
                    "stack_data_5": 1,
                    "stack_var40": 1,
                    "stack_var5": 3,
                    "stack_variable4": 1,
                    "stack_variable5": 4,
                    "symbol_data_buffer": 1,
                    "symbol_stack5": 1,
                    "temp_buffer": 1,
                    "temporary_buffer": 1,
                    "value_in_stack_40": 1,
                    "var5": 1
                },
                "in_stack_00000048": {
                    "buffer": 1,
                    "in_stack_00000048": 1,
                    "original_symbol_array": 1,
                    "param_6": 1,
                    "ptr32": 1,
                    "stack_arg6": 1,
                    "stack_data_6": 1,
                    "stack_var48": 1,
                    "stack_var6": 3,
                    "stack_variable5": 1,
                    "stack_variable6": 4,
                    "symbol_buffer3_pointer": 1,
                    "symbol_data_output": 1,
                    "symbol_stack6": 1,
                    "symbol_table": 1,
                    "target_buffer": 1,
                    "temp_array": 1,
                    "value_in_stack_48": 1,
                    "var6": 1
                },
                "lVar7": {
                    "count": 1,
                    "counter": 1,
                    "index": 1,
                    "iterations": 1,
                    "long_value": 1,
                    "long_var": 5,
                    "long_var1": 1,
                    "long_var8": 1,
                    "long_variable": 2,
                    "offset": 1,
                    "size": 1,
                    "symbol_address": 2,
                    "symbol_length": 2,
                    "symbol_long": 1,
                    "symbol_offset": 1,
                    "symbol_table_index": 1,
                    "temp": 2,
                    "temp_long": 1
                },
                "lVar9": {
                    "elf_object_ptr": 1,
                    "length": 1,
                    "long_value2": 1,
                    "long_var1": 1,
                    "long_var2": 2,
                    "long_var3": 1,
                    "long_var39": 1,
                    "long_variable2": 2,
                    "loop_var": 1,
                    "lto_object_handle": 1,
                    "pointer_var9": 1,
                    "symbol_address": 1,
                    "symbol_index": 1,
                    "symbol_long1": 1,
                    "symbol_size": 1,
                    "temp2": 1,
                    "temp_value": 1,
                    "var1": 1,
                    "variable_1": 1
                },
                "lambda": {
                    "ptr65": 1
                },
                "pcVar1": {
                    "char_pointer": 1,
                    "char_pointer1": 1,
                    "char_ptr": 1,
                    "char_var1": 1,
                    "character_pointer": 1,
                    "character_variable": 1,
                    "pc_var": 1,
                    "pointer_to_char": 1,
                    "symbol": 1,
                    "symbol_name": 12,
                    "symbol_pointer": 1,
                    "symbol_ptr": 1,
                    "symbol_string": 1
                },
                "pcVar2": {
                    "callback_function": 1,
                    "code_pointer": 1,
                    "code_var1": 1,
                    "function_pointer": 3,
                    "function_ptr": 2,
                    "pointer_to_code": 1,
                    "print_symbol": 4,
                    "print_symbol_fn": 1,
                    "print_symbol_func": 3,
                    "print_symbol_function": 2,
                    "symbol_compare_fn": 1,
                    "symbol_function": 1,
                    "symbol_function_ptr": 1,
                    "symbol_handler": 1,
                    "symbol_print_fn": 1
                },
                "pcVar3": {
                    "char_var2": 1
                },
                "prev_ptr": {
                    "ptr82": 1
                },
                "ptr11": {
                    "ptr88": 1
                },
                "ptr12": {
                    "ptr85": 1
                },
                "ptr13": {
                    "ptr87": 1
                },
                "ptr14": {
                    "ptr89": 1
                },
                "ptr17": {
                    "ptr91": 1
                },
                "ptr18": {
                    "ptr92": 1
                },
                "ptr19": {
                    "ptr93": 1
                },
                "ptr20": {
                    "ptr86": 1
                },
                "ptr22": {
                    "ptr95": 1
                },
                "ptr23": {
                    "ptr94": 1
                },
                "ptr24": {
                    "ptr90": 1
                },
                "ptr4": {
                    "ptr84": 1
                },
                "ptr8": {
                    "ptr83": 1
                },
                "puVar1": {
                    "ptr13": 1
                },
                "puVar10": {
                    "matching_data": 1,
                    "plugin_result": 1,
                    "pointer_to_unsigned_long2": 1,
                    "pointer_var10": 1,
                    "pointer_var2": 2,
                    "pointer_var3": 1,
                    "pointer_variable2": 2,
                    "ptr1": 1,
                    "ptr61": 1,
                    "ptr_var2": 2,
                    "ptr_var30": 1,
                    "result": 1,
                    "symbol_compare_result": 1,
                    "symbol_pointer2": 1,
                    "symbol_ptr": 1,
                    "symbol_ptr_iter": 1,
                    "temp_ptr": 2,
                    "temporary_variable_1": 1,
                    "undefined8_ptr2": 1,
                    "var2": 1
                },
                "puVar11": {
                    "current": 1,
                    "current_data": 1,
                    "current_ptr": 1,
                    "current_symbol": 2,
                    "current_symbol_data": 1,
                    "pointer_to_symbol": 1,
                    "pointer_to_unsigned_long3": 1,
                    "pointer_var11": 1,
                    "pointer_var3": 2,
                    "pointer_var4": 1,
                    "pointer_variable4": 1,
                    "pointer_variable6": 1,
                    "ptr2": 1,
                    "ptr57": 1,
                    "ptr_var103": 1,
                    "ptr_var3": 2,
                    "result_ptr": 1,
                    "symbol_array": 1,
                    "symbol_data_start": 1,
                    "symbol_info2": 1,
                    "symbol_list": 1,
                    "symbol_pointer5": 1,
                    "symbol_ptr2": 1,
                    "unaff_rbp": 1
                },
                "puVar12": {
                    "base_ptr": 1,
                    "current_source": 1,
                    "current_symbol_index": 1,
                    "pointer_to_unsigned_long4": 1,
                    "pointer_var12": 1,
                    "pointer_var4": 2,
                    "pointer_var5": 1,
                    "pointer_variable5": 1,
                    "pointer_variable7": 1,
                    "ptr1": 1,
                    "ptr79": 1,
                    "ptr_var104": 1,
                    "ptr_var4": 2,
                    "symbol_data": 1,
                    "symbol_info3": 1,
                    "symbol_list": 2,
                    "symbol_pointer": 1,
                    "symbol_pointer2": 1,
                    "symbol_pointer6": 1,
                    "symbol_ptr_end": 1,
                    "symbol_table": 1,
                    "symbol_table_pointer": 1,
                    "temp_ptr": 1,
                    "temporary_variable_4": 1,
                    "unaff_rbp2": 1
                },
                "puVar13": {
                    "buffer": 1,
                    "current_symbol": 1,
                    "input_buffer": 1,
                    "pointer_to_buffer": 1,
                    "pointer_to_unsigned_long5": 1,
                    "pointer_var13": 1,
                    "pointer_var5": 2,
                    "pointer_var6": 1,
                    "pointer_variable6": 1,
                    "pointer_variable8": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr54": 1,
                    "ptr_var109": 1,
                    "ptr_var5": 2,
                    "symbol_data_2": 1,
                    "symbol_index": 1,
                    "symbol_info4": 1,
                    "symbol_pointer7": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temp_ptr2": 1,
                    "temporary_variable_5": 1,
                    "tmp_symbol": 1,
                    "undefined8_ptr4": 1
                },
                "puVar14": {
                    "pointer_to_buffer2": 1,
                    "pointer_var14": 1,
                    "pointer_var6": 2,
                    "pointer_var7": 1,
                    "pointer_variable7": 1,
                    "ptr3": 1,
                    "ptr49": 1,
                    "ptr_var110": 1,
                    "ptr_var6": 1,
                    "secondary_symbol_data": 1,
                    "source": 1,
                    "static_symbol_list": 1,
                    "symbol_count": 1,
                    "symbol_info5": 1,
                    "symbol_pointer9": 1,
                    "symbol_table_entry": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 1,
                    "temporary_variable_6": 1,
                    "tmp_symbol2": 1,
                    "undefined8_ptr5": 1
                },
                "puVar15": {
                    "new_symbol_list": 1,
                    "output": 1,
                    "output_data": 1,
                    "output_ptr": 1,
                    "output_symbols": 1,
                    "pointer_var15": 1,
                    "pointer_var7": 2,
                    "pointer_var8": 1,
                    "pointer_variable8": 1,
                    "ptr4": 1,
                    "ptr56": 1,
                    "ptr_var105": 1,
                    "ptr_var7": 1,
                    "sorted_symbol_array": 3,
                    "sorted_symbol_table": 1,
                    "symbol_array": 1,
                    "symbol_buffer": 1,
                    "symbol_pointer10": 1,
                    "temp_ptr": 1,
                    "temporary_variable_2": 1,
                    "unaff_r12": 1
                },
                "puVar2": {
                    "ptr14": 1
                },
                "puVar20": {
                    "ptr33": 1
                },
                "puVar23": {
                    "ptr34": 1
                },
                "puVar25": {
                    "ptr35": 1
                },
                "puVar3": {
                    "ptr15": 1
                },
                "puVar4": {
                    "ptr16": 1
                },
                "puVar8": {
                    "pointer": 1,
                    "pointer_to_unsigned_long": 1,
                    "pointer_var": 1,
                    "pointer_var1": 2,
                    "pointer_var8": 1,
                    "pointer_variable": 1,
                    "pointer_variable1": 1,
                    "ptr": 1,
                    "ptr42": 1,
                    "ptr_var": 1,
                    "ptr_var1": 1,
                    "ptr_var108": 1,
                    "result": 2,
                    "result_ptr": 1,
                    "symbol": 4,
                    "symbol_data": 1,
                    "symbol_info": 5,
                    "symbol_pointer1": 1,
                    "undefined8_ptr": 1
                },
                "puVar9": {
                    "itr1": 1,
                    "pointer_var2": 1,
                    "symbol_list": 1
                },
                "uVar18": {
                    "count2": 1,
                    "flag": 1,
                    "is_plugin_needed": 1,
                    "loop_variable": 1,
                    "num_plugins": 1,
                    "symbol_ulong2": 1,
                    "uint_var18": 1,
                    "uint_var2": 1,
                    "ulong_var1": 2,
                    "ulong_variable3": 1,
                    "unsigned_long2": 1,
                    "unsigned_var1": 1,
                    "unsigned_var3": 1,
                    "unsigned_variable3": 1,
                    "variable1": 1
                },
                "uVar5": {
                    "boolean_result": 1,
                    "boolean_value": 1,
                    "flag": 1,
                    "flag2": 2,
                    "is_lto_slim_plugin": 1,
                    "is_match": 2,
                    "is_matching_symbol": 1,
                    "is_slim_lto": 1,
                    "is_slim_lto_object": 1,
                    "is_slim_lto_symbol": 1,
                    "symbol_is_lto": 1,
                    "symbol_uint": 1,
                    "temp_uint": 1,
                    "uint_value": 1,
                    "uint_var": 4,
                    "uint_var1": 1,
                    "uint_variable": 1,
                    "unsigned_integer": 1,
                    "unsigned_var": 1,
                    "unsigned_var2": 1,
                    "unsigned_variable": 1
                },
                "uVar6": {
                    "err_msg": 1,
                    "error_message": 2,
                    "error_string": 2,
                    "error_text": 1,
                    "plugin_error_message": 1,
                    "plugin_handle_error": 1,
                    "result": 1,
                    "return_value": 2,
                    "symbol_uint2": 1,
                    "temp_ulong": 1,
                    "temporary_result": 1,
                    "translation": 2,
                    "uint64_var1": 1,
                    "ulong_var": 2,
                    "ulong_variable": 1,
                    "undefined8_var": 1,
                    "undefined_var": 1,
                    "unsigned_long": 1,
                    "unsigned_var2": 1,
                    "unsigned_variable2": 1
                },
                "unaff_R12": {
                    "count": 2,
                    "end": 1,
                    "num_iterations": 1,
                    "num_symbol_table_entries": 1,
                    "num_symbols": 2,
                    "pointer5": 2,
                    "pointer_variable9": 1,
                    "ptr3": 1,
                    "ptr30": 1,
                    "ptr7": 1,
                    "r12": 2,
                    "reg_var3": 1,
                    "register12": 2,
                    "register_r12": 1,
                    "symbol_array_size": 2,
                    "symbol_count": 1,
                    "symbol_pointer11": 1,
                    "symbol_table_size": 1,
                    "temporary_variable_7": 1,
                    "unaff_r12_2": 1,
                    "unaffected_register_12": 1
                },
                "unaff_R13": {
                    "base_pointer3": 1,
                    "current": 1,
                    "current_address": 1,
                    "current_symbol": 3,
                    "current_symbol_pointer": 1,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer_variable10": 1,
                    "ptr4": 1,
                    "ptr8": 1,
                    "ptr80": 1,
                    "r13": 2,
                    "reg_var4": 1,
                    "register13": 2,
                    "register_r13": 1,
                    "symbol": 1,
                    "symbol_array_index": 1,
                    "symbol_index": 1,
                    "symbol_pointer12": 1,
                    "symbol_pointer3": 1,
                    "symbol_ptr": 1,
                    "symbol_table_address": 1,
                    "temporary_variable_8": 1,
                    "unaff_r13": 1,
                    "unaffected_register_13": 1
                },
                "unaff_R14": {
                    "base_pointer4": 1,
                    "buffer_size": 1,
                    "increment": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer_variable11": 1,
                    "ptr5": 1,
                    "ptr76": 1,
                    "ptr9": 1,
                    "r14": 2,
                    "reg_var5": 1,
                    "register14": 2,
                    "register_r14": 1,
                    "step_size": 1,
                    "symbol_array_increment": 2,
                    "symbol_count": 1,
                    "symbol_pointer13": 1,
                    "symbol_pointer4": 1,
                    "symbol_size": 4,
                    "symbol_table_entry_size": 1,
                    "temporary_variable_9": 1,
                    "unaff_r14": 1,
                    "unaffected_register_14": 1
                },
                "unaff_R15": {
                    "base_pointer5": 1,
                    "output_buffer": 2,
                    "output_ptr": 1,
                    "pointer6": 2,
                    "pointer_variable12": 1,
                    "ptr10": 1,
                    "ptr6": 1,
                    "ptr68": 1,
                    "r15": 2,
                    "reg_var6": 1,
                    "register15": 2,
                    "register_r15": 1,
                    "related_file_handle": 1,
                    "symbol_array_increment_2": 1,
                    "symbol_list_start": 1,
                    "symbol_pointer14": 1,
                    "symbol_pointer5": 1,
                    "symbol_table_end": 1,
                    "symbol_table_size": 1,
                    "temp_ptr": 1,
                    "temp_ptr5": 1,
                    "temporary_variable_10": 1,
                    "unaff_r15": 2,
                    "unaffected_register_15": 1
                },
                "unaff_RBP": {
                    "base_pointer": 4,
                    "base_pointer2": 1,
                    "base_ptr2": 1,
                    "bfd_data": 1,
                    "elf_object": 1,
                    "object_data": 1,
                    "object_info": 1,
                    "pointer2": 1,
                    "pointer4": 1,
                    "pointer_variable5": 1,
                    "ptr2": 1,
                    "ptr6": 1,
                    "ptr72": 1,
                    "rbp": 2,
                    "reg_var2": 1,
                    "register_bp": 3,
                    "symbol_pointer4": 1,
                    "symbol_ptr": 1,
                    "symbol_ptr2": 1,
                    "symbol_table": 2,
                    "symbol_table_start": 1,
                    "unaff_rbp3": 1,
                    "unaffected_register_bp": 1
                },
                "unaff_RBX": {
                    "accumulator": 1,
                    "base_pointer": 1,
                    "current_index": 1,
                    "current_symbol": 2,
                    "current_symbol_ptr": 1,
                    "pointer1": 2,
                    "pointer_variable3": 1,
                    "ptr1": 1,
                    "ptr5": 1,
                    "ptr77": 1,
                    "rbx": 2,
                    "reg_var1": 1,
                    "register_bx": 2,
                    "register_x1": 1,
                    "symbol_array": 1,
                    "symbol_array_index": 1,
                    "symbol_buffer_pointer": 1,
                    "symbol_list_ptr": 2,
                    "symbol_pointer": 1,
                    "symbol_pointer3": 1,
                    "symbol_pointer6": 1,
                    "symbol_ptr1": 1,
                    "temporary_variable_11": 1,
                    "unaff_rbx": 1,
                    "unaffected_register_bx": 1
                },
                "unaff_retaddr": {
                    "register_return_address": 1,
                    "ret_addr": 3,
                    "ret_address": 1,
                    "retaddr": 1,
                    "return_address": 8,
                    "return_value": 5,
                    "symbol_return_address": 1,
                    "symbol_ulong": 1,
                    "temporary_variable_12": 1,
                    "u_var1": 1,
                    "ulong_variable2": 1,
                    "unaff_retaddr": 1,
                    "unaff_return_address": 1,
                    "unaffected_register_return_address": 1,
                    "unsigned_long_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nvoid process_symbols_001049c0(void)\n\n{\n  char *symbol_name;\n  code *print_symbol;\n  char char_var;\n  int comparison_result;\n  uint uint_var;\n  undefined8 translation;\n  long long_var;\n  undefined8 *symbol_info;\n  long long_var2;\n  undefined8 *pointer_variable2;\n  undefined8 *pointer1;\n  undefined8 *pointer;\n  undefined8 *base_pointer;\n  undefined8 *ptr_var3;\n  undefined8 *pointer_var4;\n  undefined8 *register_r8;\n  undefined8 *ptr_var5;\n  undefined8 *param_10;\n  undefined8 *pointer_var6;\n  undefined8 *sorted_symbol_array;\n  undefined8 *pointer5;\n  undefined8 *current_symbol;\n  undefined8 *symbol_size;\n  undefined8 *output_buffer;\n  bool bool_var;\n  byte byte_var;\n  ulong return_address;\n  ulong ulong_var1;\n  undefined8 stack_variable1;\n  undefined8 *stack_variable2;\n  undefined8 *stack_variable3;\n  undefined8 stack_variable4;\n  void *stack_variable5;\n  undefined8 *stack_variable6;\n  \n  byte_var = 0;\n  do {\n    pointer1 = (undefined8 *)((long)pointer1 + (long)symbol_size);\nLAB_001049c3:\n    do {\n      do {\n        current_symbol = (undefined8 *)((long)current_symbol + (long)symbol_size);\n        sorted_symbol_array = pointer5;\n        pointer_var4 = base_pointer;\n        if (pointer5 <= current_symbol) goto LAB_00104b15;\nLAB_001049cf:\n        symbol_info = (undefined8 *)\n                 (**(code **)(base_pointer[1] + 0x270))\n                           (base_pointer,return_address & 0xffffffff,current_symbol,output_buffer);\n        ptr_var3 = base_pointer;\n        pointer_var4 = current_symbol;\n        sorted_symbol_array = output_buffer;\n        if (symbol_info == (undefined8 *)0x0) goto LAB_00102eb0;\n        symbol_name = (char *)symbol_info[1];\n        if (((symbol_name == (char *)0x0) || (*symbol_name != '_')) || (symbol_name[1] != '_')) {\nLAB_00104a03:\n          if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uint_var = (uint)(symbol_info[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uint_var != 0) goto LAB_00104a2d;\n          current_symbol = (undefined8 *)((long)current_symbol + (long)symbol_size);\n          sorted_symbol_array = pointer5;\n          pointer_var4 = base_pointer;\n          if (pointer5 <= current_symbol) {\nLAB_00104b15:\n            pointer1 = (undefined8 *)((long)pointer1 - (long)stack_variable3);\n            if (symbol_size == (undefined8 *)0x8) {\n              long_var2 = pointer_var4[1];\n              ptr_var3 = (undefined8 *)((long)pointer1 + 7);\n              if (-1 < (long)pointer1) {\n                ptr_var3 = pointer1;\n              }\n              register_r8 = (undefined8 *)(ulong)DAT_0010b800;\n              print_symbol = *(code **)(long_var2 + 0x208);\n              ptr_var3 = (undefined8 *)((long)ptr_var3 >> 3);\n            }\n            else {\n              ptr_var3 = (undefined8 *)((long)pointer1 / (long)symbol_size);\n              long_var2 = pointer_var4[1];\n              print_symbol = *(code **)(long_var2 + 0x208);\n            }\n            base_pointer = pointer_var4;\n            if (DAT_0010b800 == 0) {\n              DAT_0010b778 = DAT_0010b80c != 0;\n              DAT_0010b780 = pointer_var4;\n              DAT_0010b770 = (undefined8 *)(*print_symbol)(pointer_var4);\n              DAT_0010b768 = (undefined8 *)(**(code **)(pointer_var4[1] + 0x208))(pointer_var4);\n              pointer1 = stack_variable6;\n              if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n                bfd_fatal(*pointer_var4);\n                pointer = output_buffer;\n                goto LAB_00102d8e;\n              }\n              pointer5 = (undefined8 *)(ulong)stack_variable4._4_4_;\n              if (DAT_0010b7f8 != 0) {\n                ulong_var1 = (ulong)(DAT_0010b80c != 0);\n                qsort(stack_variable6,(size_t)ptr_var3,(size_t)pointer5,size_forward1);\n                sorted_symbol_array = (undefined8 *)xmalloc((long)ptr_var3 << 4);\n                ptr_var5 = DAT_0010b770;\n                base_pointer = DAT_0010b768;\n                symbol_size = (undefined8 *)((long)ptr_var3 * (long)pointer5 + (long)pointer1);\n                symbol_info = DAT_0010b770;\n                param_10 = DAT_0010b768;\n                if (symbol_size <= pointer1) goto LAB_00102ec2;\n                ptr_var3 = (undefined8 *)\n                          (**(code **)(pointer_var4[1] + 0x270))(pointer_var4,ulong_var1 & 0xffffffff,pointer1);\n                pointer = pointer1;\n                register_r8 = pointer5;\n                stack_variable2 = sorted_symbol_array;\n                if (ptr_var3 == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(stack_variable6,(size_t)ptr_var3,(size_t)pointer5,\n                    (__compar_fn_t)\n                    (&PTR_non_numeric_forward_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]\n                   );\n              long_var2 = pointer_var4[1];\n            }\n            pointer = (undefined8 *)0x0;\n            do {\n              pointer_var4 = stack_variable6;\n              symbol_info = (undefined8 *)(ulong)DAT_0010b7f8;\n              symbol_size = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n              if (DAT_0010b7f8 != 0) {\n                sorted_symbol_array = (undefined8 *)(**(code **)(long_var2 + 0x208))(base_pointer);\n                if (sorted_symbol_array == (undefined8 *)0x0) goto LAB_00102ed2;\n                pointer1 = pointer + (long)ptr_var3 * 2;\n                ptr_var3 = pointer;\n                do {\n                  if (pointer1 <= ptr_var3) {\nLAB_00104c75:\n                    if (stack_variable5 == (void *)0x0) {\n                      free(stack_variable6);\n                      free(pointer);\n                      return;\n                    }\n                    free(stack_variable5);\n                    free(stack_variable6);\n                    free(pointer);\n                    return;\n                  }\n                  symbol_info = sorted_symbol_array;\n                  long_var2 = (**(code **)(base_pointer[1] + 0x270))(base_pointer,symbol_size,*ptr_var3);\n                  if (long_var2 == 0) {\n                    bfd_fatal(*base_pointer,0);\nLAB_00102ed2:\n                    pointer_var4 = (undefined8 *)*base_pointer;\n                    bfd_fatal();\n                    ptr_var5 = register_r8;\n                    pointer_var6 = param_10;\n                    goto LAB_00102edb;\n                  }\n                  pointer_var4 = ptr_var3 + 1;\n                  ptr_var3 = ptr_var3 + 2;\n                  print_symbol(base_pointer,long_var2,*pointer_var4,stack_variable1);\n                } while( true );\n              }\n              pointer5 = (undefined8 *)(ulong)stack_variable4._4_4_;\n              output_buffer = (undefined8 *)(**(code **)(long_var2 + 0x208))(base_pointer);\n              if (output_buffer == (undefined8 *)0x0) {\n                bfd_fatal(*base_pointer);\n                pointer_var4 = pointer5;\n                if (DAT_0010b80c == 0) {\n                  long_var2 = (**(code **)(base_pointer[1] + 0x350))(base_pointer);\n                  ptr_var3 = stack_variable6;\n                  sorted_symbol_array = pointer5;\n                  if (long_var2 < 1) {\n                    symbol_info = (undefined8 *)0x0;\n                    pointer1 = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    pointer1 = (undefined8 *)xmalloc();\n                    symbol_info = (undefined8 *)(**(code **)(base_pointer[1] + 0x358))(base_pointer,pointer1);\n                    pointer_var4 = sorted_symbol_array;\n                    if ((long)symbol_info < 0) {\n                      pointer_var4 = (undefined8 *)*base_pointer;\n                      ptr_var3 = (undefined8 *)bfd_fatal(pointer_var4,sorted_symbol_array);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  symbol_info = pointer5;\n                  pointer1 = stack_variable6;\n                  ptr_var3 = (undefined8 *)0x0;\n                  sorted_symbol_array = (undefined8 *)0x0;\n                }\n                param_10 = &stack0x00000040;\n                register_r8 = pointer1;\n                long_var2 = (**(code **)(base_pointer[1] + 0x360))(base_pointer,sorted_symbol_array,ptr_var3,symbol_info);\n                pointer5 = pointer_var4;\n                if (0 < long_var2) {\n                  pointer5 = (undefined8 *)((long)pointer_var4 + long_var2);\n                  stack_variable6 = (undefined8 *)xrealloc(stack_variable6);\n                  long_var = 0;\n                  do {\n                    stack_variable6[(long)((long)pointer_var4 + long_var)] =\n                         (void *)(long_var * 0x30 + (long)stack_variable5);\n                    long_var = long_var + 1;\n                  } while (long_var2 != long_var);\n                  stack_variable6[(long)((long)pointer_var4 + long_var2)] = 0;\n                }\n                if ((DAT_0010b80c == 0) && (pointer1 != (undefined8 *)0x0)) {\n                  free(pointer1);\n                }\n                if ((*(byte *)((long)base_pointer + 0x4a) & 0x10) != 0) {\n                  pointer1 = (undefined8 *)*base_pointer;\n                  DAT_0010b230 = '\\0';\n                  translation = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  non_fatal(translation);\n                }\n                symbol_size = (undefined8 *)(ulong)stack_variable4._4_4_;\n                bool_var = DAT_0010b80c != 0;\n                ptr_var3 = (undefined8 *)(ulong)bool_var;\n                symbol_info = stack_variable6;\n                stack_variable3 = stack_variable6;\n                output_buffer = (undefined8 *)(**(code **)(base_pointer[1] + 0x208))(base_pointer);\n                if (output_buffer != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                ptr_var3 = (undefined8 *)((long)ptr_var3 * (long)pointer5 + (long)pointer_var4);\n                pointer1 = pointer_var4;\n                while( true ) {\n                  if (ptr_var3 <= pointer1) goto LAB_00104c75;\n                  symbol_info = output_buffer;\n                  long_var2 = (**(code **)(base_pointer[1] + 0x270))(base_pointer,symbol_size,pointer1);\n                  if (long_var2 == 0) break;\n                  pointer1 = (undefined8 *)((long)pointer1 + (long)pointer5);\n                  print_symbol(base_pointer,long_var2,0,stack_variable1);\n                }\n                bfd_fatal(*base_pointer,0);\n              }\n              bfd_fatal(*base_pointer);\n              pointer_var4 = base_pointer;\n              sorted_symbol_array = output_buffer;\nLAB_00102eb0:\n              bfd_fatal(*ptr_var3);\nLAB_00102eb9:\n              bfd_fatal(*pointer_var4);\nLAB_00102ec2:\n              ptr_var3 = (undefined8 *)0x0;\n              pointer = pointer1;\n              register_r8 = pointer5;\n              ptr_var5 = symbol_info;\n              base_pointer = param_10;\n              stack_variable2 = sorted_symbol_array;\nLAB_00104e35:\n              while (param_10 = ptr_var5, pointer < symbol_size) {\n                pointer1 = (undefined8 *)((long)pointer + (long)register_r8);\n                if (pointer1 < symbol_size) {\n                  symbol_info = base_pointer;\n                  ptr_var5 = register_r8;\n                  pointer_var6 = param_10;\n                  pointer_variable2 = (undefined8 *)(**(code **)(pointer_var4[1] + 0x270))();\n                  if (pointer_variable2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    param_10 = pointer_var6;\n                    register_r8 = ptr_var5;\n                    pointer_var4 = (undefined8 *)*pointer_var4;\n                    pointer_variable2 = (undefined8 *)bfd_fatal();\n                  }\n                  else {\n                    symbol_info = (undefined8 *)ptr_var3[4];\n                    if ((*(uint *)(ptr_var3 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  long_var2 = ptr_var3[2];\nLAB_00102ee7:\n                  if (symbol_info == (undefined8 *)pointer_variable2[4]) {\n                    long_var2 = pointer_variable2[2] - long_var2;\n                    ptr_var5 = base_pointer;\n                    pointer_var6 = pointer;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  long_var2 = symbol_info[8] - long_var2;\n                  ptr_var5 = base_pointer;\n                  pointer_var6 = pointer;\n                }\n                else {\n                  symbol_info = (undefined8 *)ptr_var3[4];\n                  if ((*(uint *)(ptr_var3 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    long_var2 = ptr_var3[2];\n                    pointer_variable2 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  pointer_variable2 = (undefined8 *)0x0;\nLAB_00104e95:\n                  ptr_var5 = base_pointer;\n                  pointer_var6 = pointer;\n                  if (*(int *)(pointer_var4[1] + 8) == 5) {\n                    long_var2 = ptr_var3[7];\n                  }\n                  else {\n                    long_var2 = ptr_var3[2];\n                    if ((*(byte *)((long)symbol_info + 0x25) & 0x10) == 0) {\n                      if (pointer1 < symbol_size) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                ptr_var3 = pointer_variable2;\n                pointer = pointer1;\n                base_pointer = param_10;\n                if (long_var2 != 0) {\n                  *sorted_symbol_array = pointer_var6;\n                  sorted_symbol_array[1] = long_var2;\n                  sorted_symbol_array = sorted_symbol_array + 2;\n                }\n              }\n              ptr_var3 = (undefined8 *)((long)sorted_symbol_array - (long)stack_variable2 >> 4);\n              qsort(stack_variable2,(size_t)ptr_var3,0x10,size_forward2);\n              long_var2 = pointer_var4[1];\n              pointer1 = pointer;\n              base_pointer = pointer_var4;\n              pointer = stack_variable2;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        comparison_result = strcmp(symbol_name + (symbol_name[2] == '_'),\"__gnu_lto_slim\");\n        stack_variable2 = symbol_info;\n        if (comparison_result == 0) {\n          if (DAT_0010b230 != '\\0') {\n            stack_variable2 = (undefined8 *)*base_pointer;\n            DAT_0010b230 = '\\0';\n            translation = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            non_fatal(translation,stack_variable2);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 == 0) {\n          if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n          uint_var = (*(uint *)(symbol_info + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(symbol_info + 3) & 0x800082) == 0) && (symbol_info[4] != 0x10c2a8)) &&\n           ((*(byte *)(symbol_info[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c != 0) {\n          if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nprocess_lto_symbols_00104d5b:\n          if ((symbol_info[4] != 0x10c2a8) && (symbol_info[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(symbol_info + 3) & 4) != 0);\n      if (DAT_0010b7f8 != 0) goto process_lto_symbols_00104d5b;\nLAB_00104a53:\n      param_10 = (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 == 0) {\n        char_var = (**(code **)(base_pointer[1] + 0x230))(base_pointer);\n        if (char_var != '\\0') {\n          display_rel_file_cold();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (symbol_info[4] == 0x10c2a8);\nLAB_00104cba:\n    char_var = (**(code **)(base_pointer[1] + 0x230))(base_pointer);\n    if (char_var != '\\0') {\n      display_rel_file_cold();\n      return;\n    }\nLAB_00104a7b:\n    if (pointer1 != current_symbol) {\n      if (symbol_size == (undefined8 *)0x8) {\n        *pointer1 = *current_symbol;\n        process_symbols_001049c0();\n        return;\n      }\n      for (; symbol_size != (undefined8 *)0x0; symbol_size = (undefined8 *)((long)symbol_size + -1)) {\n        *(undefined *)pointer1 = *(undefined *)current_symbol;\n        current_symbol = (undefined8 *)((long)current_symbol + (ulong)byte_var * -2 + 1);\n        pointer1 = (undefined8 *)((long)pointer1 + (ulong)byte_var * -2 + 1);\n      }\n      process_symbols_001049c0();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  sorted_symbol_array = (undefined8 *)((long)pointer5 * (long)symbol_size);\n  pointer5 = (undefined8 *)((long)stack_variable3 + (long)sorted_symbol_array);\n  pointer1 = stack_variable3;\n  pointer_var4 = base_pointer;\n  if (stack_variable3 < pointer5) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)bool_var;\n  current_symbol = stack_variable3;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_symbols_001049c0",
            "entrypoint": "0x001049c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001049c0": "process_symbols_001049c0",
                "__ptr": "pointer",
                "bVar16": "bool_var",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "iVar4": "comparison_result",
                "in_R8": "register_r8",
                "in_R9": "param_10",
                "in_stack_00000008": "stack_variable1",
                "in_stack_00000010": "stack_variable2",
                "in_stack_00000018": "stack_variable3",
                "in_stack_00000038": "stack_variable4",
                "in_stack_00000040": "stack_variable5",
                "in_stack_00000048": "stack_variable6",
                "lVar7": "long_var",
                "lVar9": "long_var2",
                "pcVar1": "symbol_name",
                "pcVar2": "print_symbol",
                "puVar1": "ptr13",
                "puVar10": "pointer_variable2",
                "puVar11": "ptr_var3",
                "puVar12": "pointer_var4",
                "puVar13": "ptr_var5",
                "puVar14": "pointer_var6",
                "puVar15": "sorted_symbol_array",
                "puVar8": "symbol_info",
                "uVar18": "ulong_var1",
                "uVar5": "uint_var",
                "uVar6": "translation",
                "unaff_R12": "pointer5",
                "unaff_R13": "current_symbol",
                "unaff_R14": "symbol_size",
                "unaff_R15": "output_buffer",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "pointer1",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104d5b": {
            "additional_data": {
                "FUN_00104d5b": {
                    "process_binary": 1,
                    "process_lto_binary": 1,
                    "process_lto_information": 1,
                    "process_lto_object": 3,
                    "process_lto_objects": 4,
                    "process_lto_symbols": 2,
                    "process_object": 1,
                    "process_object_symbols": 1,
                    "process_symbolic_analysis": 1,
                    "process_symbols": 15
                },
                "FUN_00105110": {
                    "initialize_parameters": 1,
                    "parse_symbol_table": 1,
                    "print_symbol": 2,
                    "process_data": 1,
                    "process_symbol_internal": 1
                },
                "FUn_00104d5b": {
                    "process_symbols": 1
                },
                "__ptr": {
                    "dynamic_memory": 1,
                    "error_message": 1,
                    "pointer": 2,
                    "symbol_array_ptr": 1,
                    "symbol_table": 1,
                    "temp_pointer": 1,
                    "temp_var8": 1
                },
                "bVar16": {
                    "bool_variable": 1,
                    "has_plugin": 1,
                    "is_executable_symbol": 1,
                    "is_lto_object": 2,
                    "is_lto_plugin": 1,
                    "is_plugin": 1
                },
                "bVar17": {
                    "array_direction": 1,
                    "copy_direction": 1,
                    "flag": 2,
                    "increment_value": 1,
                    "is_lto_slim": 1,
                    "is_matching": 1,
                    "symbol_copied": 1,
                    "symbol_copy_direction": 1,
                    "symbol_counter": 1,
                    "symbol_increment": 2,
                    "symbol_size_byte": 1,
                    "temp_byte": 2
                },
                "cVar3": {
                    "boolean_value": 1,
                    "char_value": 1,
                    "compare_result": 1,
                    "is_error": 2,
                    "process_result": 1,
                    "result": 1,
                    "status": 1,
                    "symbol_char": 1,
                    "symbol_check_result": 1,
                    "symbol_compare_result": 1
                },
                "check_binary_compatibility_00102fd2": {
                    "check_binary_compatibility": 6
                },
                "compare_and_execute_function_00103533": {
                    "compare_and_execute": 1,
                    "compare_and_execute_function": 5
                },
                "file1": {
                    "ptr_file1": 1
                },
                "file2": {
                    "ptr_file2": 1
                },
                "iVar4": {
                    "compare_result": 1,
                    "comparison_result": 10,
                    "strcmp_result": 1,
                    "symbol_compare_result": 1,
                    "symbol_name_comparison_result": 1,
                    "symbol_result": 1,
                    "temp_var4": 1
                },
                "in_R12": {
                    "num_symbols": 1
                },
                "in_R13": {
                    "current_symbol": 1
                },
                "in_R14": {
                    "symbol_size": 1
                },
                "in_R15": {
                    "object_file": 1,
                    "symbol_comparison_function": 1
                },
                "in_R8": {
                    "num_files": 1,
                    "number_of_symbols": 1,
                    "symbol_count": 1,
                    "symbol_size": 1,
                    "symbol_size_1": 1
                },
                "in_R9": {
                    "compare": 1,
                    "compare_functions": 1,
                    "size": 1,
                    "symbol_processor": 1,
                    "symbol_size_2": 1,
                    "symbol_table": 1
                },
                "in_RBP": {
                    "file": 1,
                    "function_context": 1,
                    "symbol_index": 1
                },
                "in_RBX": {
                    "param_2": 1,
                    "symbol_array": 2,
                    "symbol_table": 1
                },
                "in_RCX": {
                    "current_symbol": 1,
                    "file": 1,
                    "input_arguments": 1,
                    "input_array": 1,
                    "input_symbols": 1,
                    "lto_object": 1,
                    "obj_file": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "symbol": 2,
                    "symbol_array": 1,
                    "symbol_info": 1,
                    "symbol_table": 4,
                    "symbol_table_entry": 1
                },
                "in_RSI": {
                    "output_file": 1
                },
                "in_stack_00000038": {
                    "array_size_arg": 1,
                    "element_size": 1,
                    "input_size": 1,
                    "num_elements": 1,
                    "param_5": 1,
                    "size_variable": 1,
                    "stack_var": 1,
                    "symbol_array_size": 1,
                    "symbol_count": 1,
                    "symbol_size": 1,
                    "symbol_table_entry_count": 1
                },
                "input1": {
                    "param1": 1,
                    "param_1": 2
                },
                "input2": {
                    "param2": 1,
                    "param_2": 2
                },
                "input3": {
                    "param3": 1,
                    "param_3": 2
                },
                "input4": {
                    "param4": 1,
                    "param_4": 2
                },
                "lVar10": {
                    "symbol_size": 1
                },
                "lVar11": {
                    "symbols_count": 1
                },
                "lVar12": {
                    "symbol_value": 1
                },
                "lVar8": {
                    "long_var": 1,
                    "loop_counter": 4,
                    "num_symbols": 1,
                    "offset": 1,
                    "symbol_address": 1,
                    "symbol_index": 1,
                    "symbol_offset": 1,
                    "symbol_value": 2,
                    "temp_var9": 1
                },
                "lVar9": {
                    "file_descriptor": 1,
                    "file_index": 1,
                    "long_var2": 1,
                    "loop_counter2": 1,
                    "loop_variable": 1,
                    "symbol_address": 5,
                    "symbol_data": 1,
                    "temp_value": 1,
                    "temp_var3": 1,
                    "temp_variable": 1,
                    "value": 1,
                    "var1": 1
                },
                "param_1": {
                    "input1": 2,
                    "value1": 1
                },
                "param_13": {
                    "alloc_ptr": 1,
                    "extra_symbol_buffer": 1,
                    "lto_data_buffer": 1,
                    "lto_object": 1,
                    "lto_object_data": 1,
                    "lto_symbol_list": 1,
                    "object_data": 1,
                    "param13": 1,
                    "param_13": 1,
                    "param_6": 1,
                    "plugin": 1,
                    "rel_file": 1,
                    "rel_file_start": 1,
                    "symbol_data_1": 1,
                    "symbol_data_copy": 1,
                    "symbol_name_array": 1,
                    "symbol_table": 1,
                    "symbol_value_array": 1,
                    "symbol_values": 1,
                    "temp_ptr": 1
                },
                "param_14": {
                    "input_files": 1,
                    "lto_data_size": 1,
                    "lto_object": 2,
                    "lto_reference_list": 1,
                    "malloc_ptr": 1,
                    "object_code": 1,
                    "param14": 1,
                    "param_14": 1,
                    "rel_file": 1,
                    "rel_file_end": 1,
                    "symbol_data": 1,
                    "symbol_data_2": 1,
                    "symbol_data_to_print": 1,
                    "symbol_index": 1,
                    "symbol_name_array": 1,
                    "symbol_name_lengths": 1,
                    "symbol_table_copy_2": 1,
                    "symbols_array": 1,
                    "temp_array": 1,
                    "unsorted_data": 1
                },
                "param_2": {
                    "input2": 2,
                    "symbol_offset2": 1,
                    "value2": 1
                },
                "param_3": {
                    "input3": 2,
                    "symbol_size": 1,
                    "unknown_param_2": 1
                },
                "param_4": {
                    "input4": 2,
                    "symbol_array2": 1,
                    "unknown_param_3": 1
                },
                "param_7": {
                    "comparison_result": 1,
                    "file_size": 1,
                    "function_argument": 1,
                    "param7": 1,
                    "param_7": 1,
                    "param_ptr": 1,
                    "param_size": 1,
                    "param_to_print": 1,
                    "param_unused": 1,
                    "plugin_name": 1,
                    "print_flags": 1,
                    "printer_argument": 1,
                    "size": 1,
                    "symbol_data": 3,
                    "symbol_info": 1,
                    "unknown_param": 1
                },
                "param_8": {
                    "input_param": 1,
                    "input_ptr": 1,
                    "new_symbol_table": 1,
                    "param8": 1,
                    "param_2": 1,
                    "sorted_array": 1,
                    "sorted_data": 2,
                    "sorted_symbols": 4,
                    "symbol_buffer": 1,
                    "symbol_count": 1,
                    "symbol_data": 1,
                    "symbol_sorted": 1,
                    "symbol_table": 1,
                    "symbol_table_copy": 1,
                    "symbols": 1,
                    "temp": 1,
                    "temp_array": 1,
                    "temp_symbol": 1,
                    "temporary_array": 1,
                    "tmp_buffer": 1
                },
                "param_9": {
                    "array_ptr": 2,
                    "num_symbols": 1,
                    "param9": 1,
                    "param_3": 1,
                    "source_array": 1,
                    "source_data": 1,
                    "symbol_array": 4,
                    "symbol_buffer": 1,
                    "symbol_buffer_size": 1,
                    "symbol_data": 2,
                    "symbol_data_to_process": 1,
                    "symbol_reference": 1,
                    "symbol_size": 1,
                    "symbol_table_end": 1,
                    "symbols": 1,
                    "unprocessed_symbols": 1,
                    "unsorted_symbols": 1
                },
                "pcVar1": {
                    "file_name": 2,
                    "function_name": 1,
                    "symbol": 2,
                    "symbol_name": 7
                },
                "pcVar2": {
                    "compare_and_execute_function": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "print_function": 1,
                    "print_symbol": 1,
                    "print_symbol_callback": 1,
                    "symbol_action": 1,
                    "symbol_function": 1,
                    "symbol_print_function": 1
                },
                "print_error_message_and_exit_00106530": {
                    "print_error_and_exit": 2,
                    "print_error_message_and_exit": 4
                },
                "print_symbol": {
                    "print_symbol": 1
                },
                "process_lto_object_00102c19": {
                    "process_lto_object": 5,
                    "process_lto_objects": 1
                },
                "process_symbols_001049c0": {
                    "process_symbols": 2
                },
                "puVar10": {
                    "compare_result": 1,
                    "comparison_symbol": 1,
                    "function_ptr": 1,
                    "parsed_field": 1,
                    "ptr_variable2": 1,
                    "symbol_data": 1,
                    "symbol_data_ptr": 1,
                    "temp_pointer_2": 1,
                    "temp_variable_2": 1
                },
                "puVar11": {
                    "array_ptr": 1,
                    "current_symbol": 1,
                    "ptr_variable3": 1,
                    "result_buffer": 1,
                    "sorted_array": 1,
                    "symbol": 3,
                    "symbol_compare_result": 1,
                    "symbol_info": 1,
                    "symbol_table_entry": 1,
                    "temp_ptr": 1,
                    "unaff_rbx": 1
                },
                "puVar12": {
                    "bfd_error": 1,
                    "current_bfd": 1,
                    "current_buffer": 1,
                    "current_file": 1,
                    "current_object": 1,
                    "data": 1,
                    "file": 1,
                    "file_info": 1,
                    "input_file": 1,
                    "param": 1,
                    "ptr_variable4": 1,
                    "symbol_table": 2,
                    "symbol_table_end": 1,
                    "symbol_table_start": 1,
                    "unaff_rbp": 1
                },
                "puVar13": {
                    "array_info": 1,
                    "file": 1,
                    "input_buffer": 1,
                    "param_1": 1,
                    "ptr_variable5": 1,
                    "sorted_symbols": 1,
                    "start_position": 1,
                    "symbol_index": 1,
                    "symbol_list": 1,
                    "symbol_table_end": 1,
                    "symbol_table_entry_temp": 1
                },
                "puVar14": {
                    "processed_symbols": 1,
                    "ptr_variable6": 1,
                    "symbol_increment": 1,
                    "symbol_ptr_2": 1,
                    "symbol_table_entry_temp2": 1,
                    "temp_pointer_3": 1
                },
                "puVar15": {
                    "current_symbol": 1,
                    "output_data": 1,
                    "processed_symbols": 1,
                    "ptr_variable7": 1,
                    "sorted_array": 1,
                    "sorted_symbol_names": 1,
                    "sorted_symbol_table": 1,
                    "sorted_symbols": 1,
                    "symbol_table_end": 3,
                    "symbol_table_entry_temp3": 1,
                    "symbol_temp": 1,
                    "temp_buffer": 1,
                    "unaff_r12": 1
                },
                "puVar2": {
                    "symbol_compare_function": 1
                },
                "puVar7": {
                    "allocation_ptr": 1,
                    "get_symbol_callback": 1,
                    "num_symbols": 1,
                    "parsed_value": 1,
                    "pointer_var": 1,
                    "ptr_variable": 1,
                    "return_value": 2,
                    "symbol_metadata": 1,
                    "temp_pointer": 1,
                    "temp_var7": 1,
                    "tmp_value": 1
                },
                "report_and_store_data_00106400": {
                    "report_and_store_data": 6
                },
                "uVar18": {
                    "comparison_value": 1,
                    "flag_value": 1,
                    "is_lto": 1,
                    "is_lto_object": 2,
                    "is_lto_slim_object": 1,
                    "is_needed": 1,
                    "is_plugin_needed": 1,
                    "is_realloc_needed": 1,
                    "needed_by_plugin": 1,
                    "plugin_needed": 2,
                    "temp_long": 1,
                    "temp_var": 1
                },
                "uVar5": {
                    "comparison_flag": 1,
                    "comparison_result_flag": 1,
                    "is_compatible": 2,
                    "is_equal": 1,
                    "is_gnu_lto_slim": 1,
                    "is_lto_object": 1,
                    "is_match": 1,
                    "is_plugin_needed": 1,
                    "symbol_is_lto_slim": 1,
                    "symbol_status": 1,
                    "temp_var5": 1,
                    "unsigned_var": 1
                },
                "uVar6": {
                    "error_message": 8,
                    "message": 1,
                    "plugin_error_message": 1,
                    "temp_var6": 1,
                    "unsigned_var2": 1,
                    "unused_variable": 1
                },
                "unaff_R12": {
                    "array_size": 2,
                    "input_len": 1,
                    "limit": 1,
                    "num_objects": 1,
                    "num_symbol_types": 1,
                    "num_symbols": 2,
                    "param_4": 1,
                    "symbol_count": 6,
                    "symbol_data": 1,
                    "symbol_end": 1,
                    "symbol_max": 1,
                    "symbol_size": 1,
                    "symbol_table_entry_size": 1,
                    "unaff_rbx": 1
                },
                "unaff_R13": {
                    "array_index": 1,
                    "current_address": 1,
                    "current_file_data": 1,
                    "current_index": 1,
                    "current_object_ptr": 1,
                    "current_symbol": 4,
                    "output_len": 1,
                    "param_5": 1,
                    "symbol": 1,
                    "symbol_entry": 1,
                    "symbol_index": 6,
                    "symbol_offset": 1,
                    "symbol_ptr": 1,
                    "symbol_source": 1,
                    "symbol_src": 1,
                    "symbols": 1
                },
                "unaff_R14": {
                    "array_increment": 1,
                    "element_size": 4,
                    "increment": 1,
                    "num_symbols": 1,
                    "param_6": 1,
                    "symbol_count": 1,
                    "symbol_entry_size": 1,
                    "symbol_increment": 3,
                    "symbol_size": 8,
                    "symbol_step_size": 1,
                    "symbol_stride": 1,
                    "symbol_value": 1
                },
                "unaff_R15": {
                    "input_data": 1,
                    "metadata_cache": 1,
                    "output_buffer": 1,
                    "param_4": 1,
                    "param_7": 1,
                    "param_end": 1,
                    "relocation_table": 1,
                    "symbol_addresses": 1,
                    "symbol_array": 1,
                    "symbol_data": 1,
                    "symbol_names": 1,
                    "symbol_return": 1,
                    "symbol_table": 1,
                    "symbol_table_end": 1,
                    "symbol_table_size": 1,
                    "symbol_temp2": 1,
                    "temp": 1,
                    "temp_ptr": 2,
                    "temp_symbol_array": 1,
                    "temporary_register": 1,
                    "unaff_rbx": 1
                },
                "unaff_RBP": {
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "bfd": 2,
                    "bfd_handle": 1,
                    "binary_file": 1,
                    "buffer": 1,
                    "context": 2,
                    "context_ptr": 1,
                    "file1_descriptor": 1,
                    "file_data": 1,
                    "file_list": 1,
                    "files_list": 1,
                    "input_file": 1,
                    "param3": 1,
                    "param_3": 1,
                    "ptr_variable8": 1,
                    "symbol": 1,
                    "symbol_base_ptr": 1,
                    "symbol_processing_functions": 1,
                    "symbol_table": 3
                },
                "unaff_RBX": {
                    "base_index": 1,
                    "current_symbol": 1,
                    "data_ptr": 1,
                    "dst_buffer": 1,
                    "next_symbol": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_symbols": 1,
                    "param2": 1,
                    "symbol": 4,
                    "symbol_address": 1,
                    "symbol_array": 1,
                    "symbol_buffer": 1,
                    "symbol_current": 1,
                    "symbol_dest": 1,
                    "symbol_destination": 1,
                    "symbol_ptr": 1,
                    "symbol_ptr_end": 1,
                    "symbol_table_pointer": 1
                },
                "unaff_retaddr": {
                    "compare_result": 2,
                    "comparison_result": 1,
                    "is_lto_object": 4,
                    "param_8": 1,
                    "ret_addr": 1,
                    "return_address": 11
                },
                "value1": {
                    "ptr_value1": 2
                },
                "value2": {
                    "ptr_value2": 2
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_00106400",
                "FUN_00103533",
                "FUN_00104d5b",
                "FUN_001020b0",
                "FUN_00102fd2",
                "FUN_00102150",
                "FUN_00102240",
                "FUN_00105110",
                "FUN_00106530",
                "FUN_001021a0",
                "FUN_001021e0",
                "FUN_00102c19",
                "FUN_001049c0"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nvoid process_lto_symbols_00104d5b(void)\n\n{\n  char *symbol_name;\n  code *function_ptr;\n  char is_error;\n  int comparison_result;\n  uint is_compatible;\n  undefined8 error_message;\n  undefined8 *return_value;\n  long loop_counter;\n  long symbol_address;\n  undefined8 *symbol_data;\n  undefined8 *symbol_table;\n  undefined8 *symbol;\n  undefined8 *pointer;\n  undefined8 *symbol;\n  undefined8 *symbol_table;\n  undefined8 *symbol_table;\n  undefined8 *symbol_size;\n  undefined8 *start_position;\n  undefined8 *symbol_table;\n  undefined8 *temp_pointer_3;\n  undefined8 *symbol_table_end;\n  undefined8 *symbol_count;\n  undefined8 *symbol_index;\n  undefined8 *symbol_size;\n  undefined8 *temp_ptr;\n  bool is_lto_object;\n  byte symbol_increment;\n  ulong return_address;\n  ulong is_lto_object;\n  undefined8 symbol_data;\n  undefined8 *sorted_symbols;\n  undefined8 *symbol_array;\n  undefined8 input_size;\n  void *symbol_values;\n  undefined8 *lto_object;\n  \n  symbol_increment = 0;\n  do {\n    if ((symbol_table[4] != 0x10c2a8) && (symbol_table[4] != 0x10c3c0)) goto LAB_00104cba;\nLAB_001049c3:\n    do {\n      symbol_index = (undefined8 *)((long)symbol_index + (long)symbol_size);\n      symbol_table_end = symbol_count;\n      symbol_table = symbol_table;\n      if (symbol_count <= symbol_index) goto LAB_00104b15;\nLAB_001049cf:\n      symbol_table = (undefined8 *)\n               (**(code **)(symbol_table[1] + 0x270))\n                         (symbol_table,return_address & 0xffffffff,symbol_index,temp_ptr);\n      symbol = symbol_table;\n      symbol_table = symbol_index;\n      symbol_table_end = temp_ptr;\n      if (symbol_table == (undefined8 *)0x0) goto LAB_00102eb0;\n      symbol_name = (char *)symbol_table[1];\n      if (((symbol_name == (char *)0x0) || (*symbol_name != '_')) || (symbol_name[1] != '_')) {\nLAB_00104a03:\n        if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n        is_compatible = (uint)(symbol_table[4] == 0x10c2a8);\nLAB_00104af9:\n        if (is_compatible != 0) goto LAB_00104a2d;\n        symbol_index = (undefined8 *)((long)symbol_index + (long)symbol_size);\n        symbol_table_end = symbol_count;\n        symbol_table = symbol_table;\n        if (symbol_count <= symbol_index) {\nLAB_00104b15:\n          symbol = (undefined8 *)((long)symbol - (long)symbol_array);\n          if (symbol_size == (undefined8 *)0x8) {\n            symbol_address = symbol_table[1];\n            symbol = (undefined8 *)((long)symbol + 7);\n            if (-1 < (long)symbol) {\n              symbol = symbol;\n            }\n            symbol_size = (undefined8 *)(ulong)DAT_0010b800;\n            function_ptr = *(code **)(symbol_address + 0x208);\n            symbol = (undefined8 *)((long)symbol >> 3);\n          }\n          else {\n            symbol = (undefined8 *)((long)symbol / (long)symbol_size);\n            symbol_address = symbol_table[1];\n            function_ptr = *(code **)(symbol_address + 0x208);\n          }\n          symbol_table = symbol_table;\n          if (DAT_0010b800 == 0) {\n            DAT_0010b778 = DAT_0010b80c != 0;\n            DAT_0010b780 = symbol_table;\n            DAT_0010b770 = (undefined8 *)(*function_ptr)(symbol_table);\n            DAT_0010b768 = (undefined8 *)(**(code **)(symbol_table[1] + 0x208))(symbol_table);\n            symbol = lto_object;\n            if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n              bfd_fatal(*symbol_table);\n              pointer = temp_ptr;\n              goto LAB_00102d8e;\n            }\n            symbol_count = (undefined8 *)(ulong)input_size._4_4_;\n            if (DAT_0010b7f8 != 0) {\n              is_lto_object = (ulong)(DAT_0010b80c != 0);\n              qsort(lto_object,(size_t)symbol,(size_t)symbol_count,size_forward1);\n              symbol_table_end = (undefined8 *)xmalloc((long)symbol << 4);\n              start_position = DAT_0010b770;\n              symbol_table = DAT_0010b768;\n              symbol_size = (undefined8 *)((long)symbol * (long)symbol_count + (long)symbol);\n              symbol_table = DAT_0010b770;\n              symbol_table = DAT_0010b768;\n              if (symbol_size <= symbol) goto LAB_00102ec2;\n              symbol = (undefined8 *)\n                        (**(code **)(symbol_table[1] + 0x270))(symbol_table,is_lto_object & 0xffffffff,symbol);\n              pointer = symbol;\n              symbol_size = symbol_count;\n              sorted_symbols = symbol_table_end;\n              if (symbol == (undefined8 *)0x0) goto LAB_00102eb9;\n              goto LAB_00104e35;\n            }\n            qsort(lto_object,(size_t)symbol,(size_t)symbol_count,\n                  (__compar_fn_t)\n                  (&PTR_non_numeric_forward_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n            symbol_address = symbol_table[1];\n          }\n          pointer = (undefined8 *)0x0;\n          do {\n            symbol_table = lto_object;\n            return_value = (undefined8 *)(ulong)DAT_0010b7f8;\n            symbol_size = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n            if (DAT_0010b7f8 != 0) {\n              symbol_table_end = (undefined8 *)(**(code **)(symbol_address + 0x208))(symbol_table);\n              if (symbol_table_end == (undefined8 *)0x0) goto LAB_00102ed2;\n              symbol = pointer + (long)symbol * 2;\n              symbol = pointer;\n              do {\n                if (symbol <= symbol) {\nLAB_00104c75:\n                  if (symbol_values != (void *)0x0) {\n                    free(symbol_values);\n                    free(lto_object);\n                    free(pointer);\n                    return;\n                  }\n                  free(lto_object);\n                  free(pointer);\n                  return;\n                }\n                return_value = symbol_table_end;\n                symbol_address = (**(code **)(symbol_table[1] + 0x270))(symbol_table,symbol_size,*symbol);\n                if (symbol_address == 0) {\n                  bfd_fatal(*symbol_table,0);\nLAB_00102ed2:\n                  symbol_table = (undefined8 *)*symbol_table;\n                  bfd_fatal();\n                  start_position = symbol_size;\n                  temp_pointer_3 = symbol_table;\n                  goto LAB_00102edb;\n                }\n                symbol_table = symbol + 1;\n                symbol = symbol + 2;\n                print_symbol(symbol_table,symbol_address,*symbol_table,symbol_data);\n              } while( true );\n            }\n            symbol_count = (undefined8 *)(ulong)input_size._4_4_;\n            temp_ptr = (undefined8 *)(**(code **)(symbol_address + 0x208))(symbol_table);\n            if (temp_ptr == (undefined8 *)0x0) {\n              bfd_fatal(*symbol_table);\n              symbol_table = symbol_count;\n              if (DAT_0010b80c == 0) {\n                symbol_address = (**(code **)(symbol_table[1] + 0x350))(symbol_table);\n                symbol = lto_object;\n                symbol_table_end = symbol_count;\n                if (symbol_address < 1) {\n                  return_value = (undefined8 *)0x0;\n                  symbol = (undefined8 *)0x0;\n                }\n                else {\nLAB_00102d8e:\n                  symbol = (undefined8 *)xmalloc();\n                  return_value = (undefined8 *)(**(code **)(symbol_table[1] + 0x358))(symbol_table,symbol);\n                  symbol_table = symbol_table_end;\n                  if ((long)return_value < 0) {\n                    symbol_table = (undefined8 *)*symbol_table;\n                    symbol = (undefined8 *)bfd_fatal(symbol_table,symbol_table_end);\n                    goto LAB_00102dbe;\n                  }\n                }\n              }\n              else {\n                return_value = symbol_count;\n                symbol = lto_object;\n                symbol = (undefined8 *)0x0;\n                symbol_table_end = (undefined8 *)0x0;\n              }\n              symbol_table = &stack0x00000040;\n              symbol_size = symbol;\n              symbol_address = (**(code **)(symbol_table[1] + 0x360))(symbol_table,symbol_table_end,symbol,return_value);\n              symbol_count = symbol_table;\n              if (0 < symbol_address) {\n                symbol_count = (undefined8 *)((long)symbol_table + symbol_address);\n                lto_object = (undefined8 *)xrealloc(lto_object);\n                loop_counter = 0;\n                do {\n                  lto_object[(long)symbol_table + loop_counter] = (void *)(loop_counter * 0x30 + (long)symbol_values);\n                  loop_counter = loop_counter + 1;\n                } while (symbol_address != loop_counter);\n                lto_object[(long)symbol_table + symbol_address] = 0;\n              }\n              if ((DAT_0010b80c == 0) && (symbol != (undefined8 *)0x0)) {\n                free(symbol);\n              }\n              if ((*(byte *)((long)symbol_table + 0x4a) & 0x10) != 0) {\n                symbol = (undefined8 *)*symbol_table;\n                DAT_0010b230 = '\\0';\n                error_message = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                non_fatal(error_message);\n              }\n              symbol_size = (undefined8 *)(ulong)input_size._4_4_;\n              is_lto_object = DAT_0010b80c != 0;\n              symbol = (undefined8 *)(ulong)is_lto_object;\n              symbol_table = lto_object;\n              symbol_array = lto_object;\n              temp_ptr = (undefined8 *)(**(code **)(symbol_table[1] + 0x208))(symbol_table);\n              if (temp_ptr != (undefined8 *)0x0) goto code_r0x00104992;\n            }\n            else {\n              symbol = (undefined8 *)((long)symbol * (long)symbol_count + (long)symbol_table);\n              symbol = symbol_table;\n              while( true ) {\n                if (symbol <= symbol) goto LAB_00104c75;\n                symbol_table = temp_ptr;\n                symbol_address = (**(code **)(symbol_table[1] + 0x270))(symbol_table,symbol_size,symbol);\n                if (symbol_address == 0) break;\n                symbol = (undefined8 *)((long)symbol + (long)symbol_count);\n                print_symbol(symbol_table,symbol_address,0,symbol_data);\n              }\n              bfd_fatal(*symbol_table,0);\n            }\n            bfd_fatal(*symbol_table);\n            symbol_table = symbol_table;\n            symbol_table_end = temp_ptr;\nLAB_00102eb0:\n            bfd_fatal(*symbol);\nLAB_00102eb9:\n            bfd_fatal(*symbol_table);\nLAB_00102ec2:\n            symbol = (undefined8 *)0x0;\n            pointer = symbol;\n            symbol_size = symbol_count;\n            start_position = symbol_table;\n            symbol_table = symbol_table;\n            sorted_symbols = symbol_table_end;\nLAB_00104e35:\n            while (symbol_table = start_position, pointer < symbol_size) {\n              symbol = (undefined8 *)((long)pointer + (long)symbol_size);\n              if (symbol < symbol_size) {\n                return_value = symbol_table;\n                start_position = symbol_size;\n                temp_pointer_3 = symbol_table;\n                symbol_data = (undefined8 *)(**(code **)(symbol_table[1] + 0x270))();\n                if (symbol_data == (undefined8 *)0x0) {\nLAB_00102edb:\n                  symbol_table = temp_pointer_3;\n                  symbol_size = start_position;\n                  symbol_table = (undefined8 *)*symbol_table;\n                  symbol_data = (undefined8 *)bfd_fatal();\n                }\n                else {\n                  return_value = (undefined8 *)symbol[4];\n                  if ((*(uint *)(symbol + 3) & 0x200100) == 0) goto LAB_00104e95;\n                }\n                symbol_address = symbol[2];\nLAB_00102ee7:\n                if (return_value == (undefined8 *)symbol_data[4]) {\n                  symbol_address = symbol_data[2] - symbol_address;\n                  start_position = symbol_table;\n                  temp_pointer_3 = pointer;\n                  goto LAB_00104ea7;\n                }\nLAB_00102dc4:\n                symbol_address = return_value[8] - symbol_address;\n                start_position = symbol_table;\n                temp_pointer_3 = pointer;\n              }\n              else {\n                return_value = (undefined8 *)symbol[4];\n                if ((*(uint *)(symbol + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                  symbol_address = symbol[2];\n                  symbol_data = (undefined8 *)0x0;\n                  goto LAB_00102dc4;\n                }\n                symbol_data = (undefined8 *)0x0;\nLAB_00104e95:\n                start_position = symbol_table;\n                temp_pointer_3 = pointer;\n                if (*(int *)(symbol_table[1] + 8) == 5) {\n                  symbol_address = symbol[7];\n                }\n                else {\n                  symbol_address = symbol[2];\n                  if ((*(byte *)((long)return_value + 0x25) & 0x10) == 0) {\n                    if (symbol < symbol_size) goto LAB_00102ee7;\n                    goto LAB_00102dc4;\n                  }\n                }\n              }\nLAB_00104ea7:\n              symbol = symbol_data;\n              pointer = symbol;\n              symbol_table = symbol_table;\n              if (symbol_address != 0) {\n                *symbol_table_end = temp_pointer_3;\n                symbol_table_end[1] = symbol_address;\n                symbol_table_end = symbol_table_end + 2;\n              }\n            }\n            symbol = (undefined8 *)((long)symbol_table_end - (long)sorted_symbols >> 4);\n            qsort(sorted_symbols,(size_t)symbol,0x10,size_forward2);\n            symbol_address = symbol_table[1];\n            symbol = pointer;\n            symbol_table = symbol_table;\n            pointer = sorted_symbols;\n          } while( true );\n        }\n        goto LAB_001049cf;\n      }\n      comparison_result = strcmp(symbol_name + (symbol_name[2] == '_'),\"__gnu_lto_slim\");\n      sorted_symbols = symbol_table;\n      if (comparison_result == 0) {\n        if (DAT_0010b230 != '\\0') {\n          sorted_symbols = (undefined8 *)*symbol_table;\n          DAT_0010b230 = '\\0';\n          error_message = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          non_fatal(error_message,sorted_symbols);\n        }\n        goto LAB_00104a03;\n      }\n      if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n      if (DAT_0010b808 == 0) {\n        if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n        is_compatible = (*(uint *)(symbol_table + 3) >> 7 ^ 1) & 1;\n        goto LAB_00104af9;\n      }\n      if ((((*(uint *)(symbol_table + 3) & 0x800082) == 0) && (symbol_table[4] != 0x10c2a8)) &&\n         ((*(byte *)(symbol_table[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n    } while ((DAT_0010b81c == 0) && ((*(byte *)(symbol_table + 3) & 4) != 0));\n  } while (DAT_0010b7f8 != 0);\n  symbol_table = (undefined8 *)(ulong)DAT_0010b7e4;\n  if (DAT_0010b7e4 == 0) {\n    is_error = (**(code **)(symbol_table[1] + 0x230))(symbol_table);\n    if (is_error != '\\0') {\n      display_rel_file_cold();\n      return;\n    }\n  }\n  else {\n    if (symbol_table[4] == 0x10c2a8) goto LAB_001049c3;\nLAB_00104cba:\n    is_error = (**(code **)(symbol_table[1] + 0x230))(symbol_table);\n    if (is_error != '\\0') {\n      display_rel_file_cold();\n      return;\n    }\n  }\n  if (symbol != symbol_index) {\n    if (symbol_size != (undefined8 *)0x8) {\n      for (; symbol_size != (undefined8 *)0x0; symbol_size = (undefined8 *)((long)symbol_size + -1)) {\n        *(undefined *)symbol = *(undefined *)symbol_index;\n        symbol_index = (undefined8 *)((long)symbol_index + (ulong)symbol_increment * -2 + 1);\n        symbol = (undefined8 *)((long)symbol + (ulong)symbol_increment * -2 + 1);\n      }\n      process_symbols();\n      return;\n    }\n    *symbol = *symbol_index;\n    process_symbols();\n    return;\n  }\n  symbol = (undefined8 *)((long)symbol + (long)symbol_size);\n  goto LAB_001049c3;\ncode_r0x00104992:\n  symbol_table_end = (undefined8 *)((long)symbol_count * (long)symbol_size);\n  symbol_count = (undefined8 *)((long)symbol_array + (long)symbol_table_end);\n  symbol = symbol_array;\n  symbol_table = symbol_table;\n  if (symbol_array < symbol_count) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)is_lto_object;\n  symbol_index = symbol_array;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_lto_symbols_00104d5b",
            "entrypoint": "0x00104d5b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104d5b": "process_lto_symbols_00104d5b",
                "__ptr": "pointer",
                "bVar16": "is_lto_object",
                "bVar17": "symbol_increment",
                "cVar3": "is_error",
                "iVar4": "comparison_result",
                "in_R8": "symbol_size",
                "in_R9": "symbol_table",
                "in_RCX": "symbol_table",
                "in_stack_00000038": "input_size",
                "lVar8": "loop_counter",
                "lVar9": "symbol_address",
                "param_1": "input1",
                "param_13": "symbol_values",
                "param_14": "lto_object",
                "param_7": "symbol_data",
                "param_8": "sorted_symbols",
                "param_9": "symbol_array",
                "pcVar1": "symbol_name",
                "pcVar2": "function_ptr",
                "process_symbols_001049c0": "process_symbols",
                "puVar10": "symbol_data",
                "puVar11": "symbol",
                "puVar12": "symbol_table",
                "puVar13": "start_position",
                "puVar14": "temp_pointer_3",
                "puVar15": "symbol_table_end",
                "puVar7": "return_value",
                "uVar18": "is_lto_object",
                "uVar5": "is_compatible",
                "uVar6": "error_message",
                "unaff_R12": "symbol_count",
                "unaff_R13": "symbol_index",
                "unaff_R14": "symbol_size",
                "unaff_R15": "temp_ptr",
                "unaff_RBP": "symbol_table",
                "unaff_RBX": "symbol",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104fa0": {
            "additional_data": {
                "FUN_00104fa0": {
                    "compare_strings": 31
                },
                "__s1": {
                    "ptr_string1": 4,
                    "str1": 6,
                    "str_1": 1,
                    "string1_ptr": 12,
                    "string_1": 1,
                    "string_1_ptr": 6,
                    "string_ptr_1": 1
                },
                "__s2": {
                    "ptr_string2": 4,
                    "str2": 6,
                    "str_2": 1,
                    "string2_ptr": 12,
                    "string_2": 1,
                    "string_2_ptr": 6,
                    "string_ptr_2": 1
                },
                "lVar2": {
                    "code_result1": 1,
                    "func_result_1": 1,
                    "len1": 1,
                    "len_1": 1,
                    "length1": 2,
                    "length_1": 1,
                    "length_string1": 1,
                    "pointer1": 2,
                    "pointer_1": 2,
                    "ptr1": 3,
                    "result1": 2,
                    "result_1": 2,
                    "result_string1": 1,
                    "string1_length": 8,
                    "string_1_len": 1,
                    "string_1_length": 2
                },
                "lVar3": {
                    "code_result2": 1,
                    "func_result_2": 1,
                    "len2": 1,
                    "len_2": 1,
                    "length2": 2,
                    "length_2": 1,
                    "length_string2": 1,
                    "pointer2": 2,
                    "pointer_2": 2,
                    "ptr2": 3,
                    "result2": 2,
                    "result_2": 2,
                    "result_string2": 1,
                    "string2_length": 8,
                    "string_2_len": 1,
                    "string_2_length": 2
                },
                "param_1": {
                    "string1": 21,
                    "string_1": 10
                },
                "param_2": {
                    "string2": 21,
                    "string_2": 10
                },
                "uVar1": {
                    "comparison_result": 21,
                    "result": 8,
                    "string_comparison_result": 2
                }
            },
            "called": [
                "FUN_00102f9f",
                "FUN_001022c0"
            ],
            "calling": [
                "FUN_00103bf6",
                "FUN_00105050",
                "FUN_00102fd2"
            ],
            "code": "\nuint compare_strings_00104fa0(undefined8 string1,undefined8 string2)\n\n{\n  char *string2_ptr;\n  char *string1_ptr;\n  uint comparison_result;\n  long string1_length;\n  long string2_length;\n  \n  string1_length = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string1,DAT_0010b770);\n  string2_length = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string2,DAT_0010b768);\n  if ((string1_length == 0) || (string2_length == 0)) {\n    bfd_fatal(*DAT_0010b780);\n  }\n  else {\n    string2_ptr = *(char **)(string2_length + 8);\n    string1_ptr = *(char **)(string1_length + 8);\n    if (string2_ptr == (char *)0x0) {\n      return (uint)(string1_ptr != (char *)0x0);\n    }\n    if (string1_ptr != (char *)0x0) {\n      if (*string2_ptr == '\\0') {\n        return (uint)(*string1_ptr != '\\0');\n      }\n      if (*string1_ptr == '\\0') {\n        return 0xffffffff;\n      }\n      comparison_result = strcoll(string1_ptr,string2_ptr);\n      return comparison_result;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "compare_strings_00104fa0",
            "entrypoint": "0x00104fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104fa0": "compare_strings_00104fa0",
                "__s1": "string1_ptr",
                "__s2": "string2_ptr",
                "lVar2": "string1_length",
                "lVar3": "string2_length",
                "param_1": "string1",
                "param_2": "string2",
                "uVar1": "comparison_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105050": {
            "additional_data": {
                "FUN_00105050": {
                    "check_binary_compatibility": 3,
                    "check_binary_compilation": 1,
                    "check_binary_compliance": 1,
                    "check_binary_file_compatibility": 1,
                    "check_binary_files": 3,
                    "check_binary_files_equal": 1,
                    "check_binary_function": 2,
                    "check_code_compilation": 1,
                    "check_comparison": 1,
                    "check_compilation": 1,
                    "check_compiled_code": 1,
                    "check_compiled_files": 1,
                    "check_files_compiled": 1,
                    "check_files_for_backward_compatibility": 1,
                    "check_forwarding": 1,
                    "check_forwarding_status": 1,
                    "check_function_compatibility": 1,
                    "check_numeric_forward": 1,
                    "compare_and_forward": 1,
                    "compare_binary_files": 2,
                    "compare_binary_versions": 1,
                    "compare_compiled_versions": 1,
                    "compare_object_files": 1,
                    "compare_versions": 1
                },
                "__s": {
                    "file1_name": 1,
                    "file_contents_1": 3,
                    "file_extension_1": 2,
                    "source_name_str": 1,
                    "str1": 3,
                    "str_1": 3,
                    "string1": 4,
                    "string_1": 11
                },
                "__s_00": {
                    "dest_name_str": 1,
                    "file2_name": 1,
                    "file_contents_2": 3,
                    "file_extension_2": 2,
                    "str2": 3,
                    "str_2": 3,
                    "string2": 4,
                    "string_2": 11
                },
                "bVar16": {
                    "bool_flag": 1,
                    "comparison_bool": 1,
                    "comparison_result": 6,
                    "flag": 1,
                    "is_backward_compatible": 1,
                    "is_equal": 7,
                    "is_less": 3,
                    "is_match": 1,
                    "is_same": 1,
                    "match": 1
                },
                "cVar1": {
                    "last_char": 11,
                    "last_character": 4
                },
                "lVar10": {
                    "bfd_info_2": 1,
                    "bfd_object_2": 1,
                    "dest_info": 1,
                    "file2_details": 1,
                    "file_2_info": 1,
                    "file_handle_2": 1,
                    "file_info_2": 1,
                    "file_length_2": 1,
                    "file_type_2": 1,
                    "fp_2": 1,
                    "func2_result": 1,
                    "func_result_2": 1,
                    "header_2": 1,
                    "length_2": 1,
                    "result2": 5,
                    "result_2": 10
                },
                "lVar11": {
                    "result": 1
                },
                "lVar13": {
                    "offset1": 1
                },
                "lVar14": {
                    "offset2": 1
                },
                "lVar15": {
                    "non_numeric_result": 1
                },
                "lVar3": {
                    "address_offset_1": 1,
                    "file1_type": 1,
                    "file_1_header": 1,
                    "file_extension_1": 1,
                    "file_length_1": 1,
                    "file_size_1": 2,
                    "file_type_1": 1,
                    "file_type_2": 1,
                    "first_value": 1,
                    "header_1": 1,
                    "len_var_1": 1,
                    "length1": 2,
                    "length_1": 5,
                    "magic_number_2": 1,
                    "offset_1": 3,
                    "ptr1": 1,
                    "size1": 1,
                    "size_1": 1,
                    "source_length": 1,
                    "str1_length": 1,
                    "value_1": 1,
                    "var1": 1
                },
                "lVar9": {
                    "bfd_info_1": 1,
                    "bfd_object_1": 1,
                    "file1_details": 1,
                    "file_1": 1,
                    "file_2_header": 1,
                    "file_extension_2": 1,
                    "file_handle_1": 1,
                    "fp_1": 1,
                    "func1_result": 1,
                    "func_result_1": 1,
                    "result1": 5,
                    "result_1": 10,
                    "source_info": 1
                },
                "param_1": {
                    "binary_1": 1,
                    "binary_file_path_1": 1,
                    "binary_path_1": 1,
                    "code1": 1,
                    "file1": 2,
                    "file_1": 1,
                    "file_path_1": 11,
                    "filename_1": 1,
                    "input_1": 5,
                    "input_param_1": 4,
                    "input_var1": 1,
                    "source": 1,
                    "version1": 1
                },
                "param_2": {
                    "binary_2": 1,
                    "binary_file_path_2": 1,
                    "binary_path_2": 1,
                    "code2": 1,
                    "destination": 1,
                    "file2": 2,
                    "file_2": 1,
                    "file_path_2": 11,
                    "filename_2": 1,
                    "input_2": 5,
                    "input_param_2": 4,
                    "input_var2": 1,
                    "version2": 1
                },
                "pcVar7": {
                    "file1_compiled_string": 1,
                    "found_string1": 1,
                    "gnu_compiled_1": 1,
                    "gnu_compiled_marker": 1,
                    "gnu_found": 1,
                    "match_1": 1,
                    "match_string_1": 1,
                    "match_string_ptr_1": 1,
                    "matching_substring": 1,
                    "ptr_1": 2,
                    "search_result1": 2,
                    "str1_match": 1,
                    "str_1": 1,
                    "str_ptr1": 1,
                    "str_ptr_1": 1,
                    "str_substring": 1,
                    "string_1_match": 1,
                    "strstr_result_1": 1,
                    "substr_1": 1,
                    "substr_var": 1,
                    "substring": 2,
                    "substring1": 1,
                    "substring_1": 1
                },
                "pcVar8": {
                    "file2_compiled_string": 1,
                    "found_string2": 1,
                    "gcc2_compiled_1": 1,
                    "gcc2_compiled_marker": 1,
                    "gcc2_found": 1,
                    "match_2": 1,
                    "match_string_2": 1,
                    "match_string_ptr_2": 1,
                    "matching_substring_2": 1,
                    "ptr_2": 2,
                    "search_result2": 2,
                    "str2_match": 1,
                    "str_2": 1,
                    "str_ptr2": 1,
                    "str_ptr_2": 1,
                    "str_substring_2": 1,
                    "string_2_match": 1,
                    "strstr_result_2": 1,
                    "substr_2": 1,
                    "substring2": 1,
                    "substring_2": 3
                },
                "sVar5": {
                    "file1_name_length": 1,
                    "file_path_1_length": 1,
                    "file_size_1": 1,
                    "len1": 1,
                    "len_1": 2,
                    "len_file_extension_1": 1,
                    "length_1": 2,
                    "length_string_1": 1,
                    "source_name_len": 1,
                    "str1_length": 2,
                    "str_1_len": 1,
                    "str_len_1": 1,
                    "str_length_1": 1,
                    "string1_length": 1,
                    "string_1_len": 1,
                    "string_1_length": 1,
                    "string_length_1": 5,
                    "strlen1": 1
                },
                "sVar6": {
                    "dest_name_len": 1,
                    "file2_name_length": 1,
                    "file_path_2_length": 1,
                    "file_size_2": 1,
                    "len2": 1,
                    "len_2": 2,
                    "len_file_extension_2": 1,
                    "length_2": 2,
                    "length_string_2": 1,
                    "str2_length": 2,
                    "str_2_len": 1,
                    "str_len_2": 1,
                    "str_length_2": 1,
                    "string2_length": 1,
                    "string_2_len": 1,
                    "string_2_length": 1,
                    "string_length_2": 5,
                    "strlen2": 1
                },
                "uVar11": {
                    "comparison_result": 7,
                    "final_result": 2,
                    "forwarding_status": 1,
                    "output": 1,
                    "result": 18,
                    "return_value": 1
                },
                "uVar12": {
                    "address_offset1": 1,
                    "address_sum_2": 1,
                    "combined_offset_2": 1,
                    "end2": 1,
                    "end_offset_2": 4,
                    "file2_size_plus_offset": 1,
                    "file_2_end_address": 1,
                    "object_file_size_1": 1,
                    "offset1": 1,
                    "offset2": 1,
                    "offset_2": 2,
                    "source_end": 1,
                    "str2_offset": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "sum_1": 3,
                    "sum_2": 1,
                    "total_size_2": 1,
                    "value_1": 1
                },
                "uVar13": {
                    "address_offset2": 1,
                    "address_sum_1": 1,
                    "dest_end": 1,
                    "file1_size_plus_offset": 1,
                    "file_1_end_address": 1,
                    "file_size_1": 2,
                    "object_file_size_2": 1,
                    "offset1": 2,
                    "offset2": 1,
                    "offset_1": 9,
                    "offset_2": 3,
                    "str1_offset": 1,
                    "sum2": 1,
                    "sum_2": 3,
                    "total_length_1": 1,
                    "value_2": 1
                },
                "uVar14": {
                    "address_1": 1,
                    "address_sum1": 1,
                    "calculated_offset_1": 1,
                    "combined_offset_1": 1,
                    "end1": 1,
                    "end_offset_1": 4,
                    "end_point_1": 1,
                    "file1_plus_offset": 1,
                    "offset_1": 1,
                    "offset_1_computed": 1,
                    "offset_2": 1,
                    "size_1": 1,
                    "source_last": 1,
                    "str1_end": 1,
                    "sum1": 3,
                    "sum_1": 3,
                    "sum_1_with_offset": 1,
                    "sum_object_file_size_1": 1,
                    "sum_of_file_1_addresses": 1,
                    "temp_sum1": 1,
                    "total_length_2": 1,
                    "total_size_1": 1
                },
                "uVar15": {
                    "bfd_handle": 1,
                    "bfd_object": 1,
                    "bfd_object_0": 1,
                    "binary_handle": 1,
                    "binary_path": 1,
                    "comp_func": 1,
                    "compiler_result": 1,
                    "constant": 2,
                    "constant_1": 1,
                    "constant_value": 1,
                    "constant_var": 1,
                    "default_file_type": 1,
                    "func_ptr": 2,
                    "function_address": 1,
                    "parameter1": 1,
                    "program_name": 1,
                    "source_name": 1,
                    "temp_var_1": 2,
                    "u_var_to_abort": 1,
                    "value": 1,
                    "var": 1
                },
                "uVar16": {
                    "b_var_temp": 1
                },
                "uVar2": {
                    "calculated_offset_2": 1,
                    "file2_size": 1,
                    "file_size_2": 5,
                    "len_var_2": 1,
                    "length2": 1,
                    "offset2": 1,
                    "offset_1": 1,
                    "offset_2": 5,
                    "offset_2_computed": 1,
                    "offset_3": 1,
                    "size2": 1,
                    "size_2": 1,
                    "value_2": 1,
                    "var2": 1
                },
                "uVar4": {
                    "file2_flags": 1,
                    "file_attributes": 1,
                    "flag": 15,
                    "flag_1": 1,
                    "flag_result": 1,
                    "flags": 3,
                    "is_shared_object": 1,
                    "mask_flag": 1,
                    "var4": 1
                },
                "unaff_R13": {
                    "bfd_fatal_error": 1,
                    "comp_func_result": 1,
                    "dest_name": 1,
                    "error_value": 1,
                    "file_handle_temp": 1,
                    "file_type": 1,
                    "non_numeric_result_arg": 1,
                    "parameter2": 1,
                    "pointer_var": 1,
                    "result_3": 1,
                    "temp": 1,
                    "temp_1": 1,
                    "temp_reg": 1,
                    "temp_result": 1,
                    "temp_var_2": 2,
                    "unaff_arg": 1,
                    "unaff_arg3": 1,
                    "unaff_offset": 1,
                    "unaff_result": 1,
                    "unaff_value": 1,
                    "unaffected_reg": 1
                }
            },
            "called": [
                "FUN_00104fa0",
                "FUN_00102fc3"
            ],
            "calling": [
                "FUN_00103bec"
            ],
            "code": "\nulong check_binary_files_equal_00105050(undefined8 file_path_1,undefined8 file_path_2)\n\n{\n  char last_char;\n  ulong file_size_2;\n  char *string_1;\n  char *string_2;\n  long length_1;\n  uint flag;\n  size_t string_length_1;\n  size_t string_length_2;\n  char *ptr_1;\n  char *substring_2;\n  long result_1;\n  long result_2;\n  ulong result;\n  ulong end_offset_2;\n  ulong offset_1;\n  ulong end_offset_1;\n  undefined8 temp_var_1;\n  long temp_var_2;\n  bool is_equal;\n  \n  result_1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file_path_1,DAT_0010b770);\n  result = (ulong)DAT_0010b778;\n  result_2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,result,file_path_2,DAT_0010b768);\n  if ((result_1 != 0) && (result_2 != 0)) {\n    length_1 = *(long *)(result_2 + 0x20);\n    if (*(long *)(result_1 + 0x20) == 0x10c2a8) {\n      result = 0xffffffff;\n      if (length_1 == 0x10c2a8) {\nLAB_001050fa:\n        result = non_numeric_forward(file_path_1,file_path_2);\n        return result;\n      }\n    }\n    else if (length_1 == 0x10c2a8) {\n      result = 1;\n    }\n    else {\n      offset_1 = *(long *)(result_1 + 0x10) + *(long *)(*(long *)(result_1 + 0x20) + 0x30);\n      result = *(long *)(result_2 + 0x10) + *(long *)(length_1 + 0x30);\n      if (offset_1 == result) goto LAB_001050fa;\n      result = (ulong)(-(uint)(offset_1 < result) | 1);\n    }\n    return result;\n  }\n  temp_var_1 = *DAT_0010b780;\n  bfd_fatal();\n  result_1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,temp_var_1,DAT_0010b770);\n  result_2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,result,DAT_0010b768);\n  if ((result_1 == 0) || (temp_var_2 = result_2, result_2 == 0)) {\n    result_2 = bfd_fatal(*DAT_0010b780);\n  }\n  if ((*(long *)(result_1 + 0x20) == 0x10c2a8) || (*(long *)(result_2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  offset_1 = *(ulong *)(*(long *)(result_1 + 0x20) + 0x30);\n  file_size_2 = *(ulong *)(*(long *)(result_2 + 0x20) + 0x30);\n  end_offset_1 = *(long *)(result_1 + 0x10) + offset_1;\n  end_offset_2 = *(long *)(temp_var_2 + 0x10) + file_size_2;\n  is_equal = end_offset_1 < end_offset_2;\n  if ((end_offset_1 != end_offset_2) || (is_equal = offset_1 < file_size_2, offset_1 != file_size_2)) {\n    return (ulong)(-(uint)is_equal | 1);\n  }\n  string_1 = *(char **)(result_1 + 8);\n  string_2 = *(char **)(temp_var_2 + 8);\n  string_length_1 = strlen(string_1);\n  string_length_2 = strlen(string_2);\n  ptr_1 = strstr(string_1,\"gnu_compiled\");\n  if (ptr_1 == (char *)0x0) {\n    substring_2 = strstr(string_1,\"gcc2_compiled\");\n    ptr_1 = strstr(string_2,\"gnu_compiled\");\n    if ((ptr_1 == (char *)0x0) && (ptr_1 = strstr(string_2,\"gcc2_compiled\"), ptr_1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (substring_2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    ptr_1 = strstr(string_2,\"gnu_compiled\");\n    if (ptr_1 == (char *)0x0) {\n      substring_2 = strstr(string_2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (substring_2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(temp_var_2 + 0x18) & 0x4000;\n  if ((*(byte *)(result_1 + 0x19) & 0x40) == 0) {\n    if ((string_length_1 < 3) || (string_1[string_length_1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((string_length_2 < 3) || (string_2[string_length_2 - 2] != '.')) goto LAB_00103202;\n      is_equal = false;\n      goto LAB_001031e7;\n    }\n    last_char = string_1[string_length_1 - 1];\n    is_equal = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((string_length_2 < 3) || (string_2[string_length_2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (string_length_2 < 3) {\n      return 0xffffffff;\n    }\n    if (string_2[string_length_2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_equal = true;\nLAB_001031e7:\n    if ((string_2[string_length_2 - 1] != 'o') && (string_2[string_length_2 - 1] != 'a')) {\n      if (is_equal) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_equal) {\n    return 1;\n  }\nLAB_00103202:\n  result = non_numeric_forward(temp_var_1,result);\n  return result;\n}\n\n",
            "current_name": "check_binary_files_equal_00105050",
            "entrypoint": "0x00105050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105050": "check_binary_files_equal_00105050",
                "__s": "string_1",
                "__s_00": "string_2",
                "bVar16": "is_equal",
                "cVar1": "last_char",
                "lVar10": "result_2",
                "lVar3": "length_1",
                "lVar9": "result_1",
                "param_1": "file_path_1",
                "param_2": "file_path_2",
                "pcVar7": "ptr_1",
                "pcVar8": "substring_2",
                "sVar5": "string_length_1",
                "sVar6": "string_length_2",
                "uVar11": "result",
                "uVar12": "end_offset_2",
                "uVar13": "offset_1",
                "uVar14": "end_offset_1",
                "uVar15": "temp_var_1",
                "uVar2": "file_size_2",
                "uVar4": "flag",
                "unaff_R13": "temp_var_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105110": {
            "additional_data": {
                "DAT_0010b738": {
                    "dat_0010b738": 1,
                    "reloc_section_name_ptr": 1
                },
                "DAT_0010b740": {
                    "dat_0010b740": 1,
                    "reloc_section_id_ptr": 1
                },
                "DAT_0010b748": {
                    "dat_0010b748": 1,
                    "num_sections": 1
                },
                "DAT_0010b750": {
                    "dat_0010b750": 1,
                    "reloc_section_data_ptr": 1
                },
                "DAT_0010b758": {
                    "dat_0010b758": 1,
                    "relocated_object_ptr": 1
                },
                "DAT_0010b7b0": {
                    "dat_0010b7b0": 1
                },
                "DAT_0010b7b8": {
                    "dat_0010b7b8": 1
                },
                "DAT_0010b7c8": {
                    "dat_0010b7c8": 1,
                    "symbol_first_chars_ptr": 1
                },
                "DAT_0010b804": {
                    "print_filename_option": 1
                },
                "DAT_0010b818": {
                    "dat_0010b818": 1
                },
                "FUN_00105110": {
                    "print_object_and_relocs": 1,
                    "print_object_file_details": 1,
                    "print_object_file_info": 1,
                    "print_object_filename": 17,
                    "print_object_info": 7,
                    "print_object_information": 1,
                    "print_symbol_filename": 1,
                    "print_symbol_info": 1
                },
                "PTR_PTR_print_object_filename_bsd_0010b260": {
                    "ptr_print_obj_filename_bsd_ptr": 1
                },
                "_DAT_0010b7b0": {
                    "current_section_ptr": 1
                },
                "_DAT_0010b7b8": {
                    "current_object_ptr": 1
                },
                "__ptr": {
                    "pointer": 3,
                    "ptr": 26,
                    "ptr1": 1,
                    "section_pointer": 1
                },
                "__s1": {
                    "object_name": 1,
                    "param_string": 1,
                    "s1": 2,
                    "str1": 2,
                    "string": 2,
                    "string1": 10,
                    "string_1": 2,
                    "string_ptr": 1,
                    "symbol": 2,
                    "symbol_name": 8
                },
                "_stdout": {
                    "_stdout": 1,
                    "standard_output": 2,
                    "stdout_ptr": 1,
                    "stdout_stream": 1
                },
                "cVar5": {
                    "char_val": 2,
                    "char_value": 4,
                    "char_var": 11,
                    "char_var5": 1,
                    "char_variable": 1,
                    "character": 2,
                    "current_char": 1,
                    "flag": 2,
                    "symbol_first_char": 1,
                    "symbol_type_char": 1,
                    "temp_char": 4,
                    "temp_var2": 1
                },
                "find_and_print_matching_strings_00103238": {
                    "find_print_matching_strings": 1
                },
                "iVar6": {
                    "comparison_result": 1,
                    "int_val": 1,
                    "int_value": 2,
                    "int_var": 12,
                    "int_var6": 1,
                    "int_variable": 1,
                    "integer_value": 1,
                    "section_type": 3,
                    "symbol_type": 1,
                    "temp_int": 4,
                    "temp_var3": 1,
                    "value": 1,
                    "var": 1,
                    "var6": 1
                },
                "lVar10": {
                    "address_var": 1,
                    "i": 2,
                    "index": 2,
                    "long_value": 1,
                    "long_value_2": 1,
                    "long_var": 1,
                    "long_var2": 3,
                    "long_var3": 1,
                    "long_var_2": 1,
                    "loop_value": 1,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "second_long_var": 1,
                    "symbol_index": 1,
                    "temp_long": 1,
                    "temp_long2": 4,
                    "temp_var7": 1,
                    "var10": 4,
                    "var2": 1,
                    "var3": 1
                },
                "lVar3": {
                    "long_val": 1,
                    "long_var": 2,
                    "reloc_address": 1,
                    "reloc_data": 1,
                    "reloc_entry_value": 1,
                    "reloc_offset": 1,
                    "reloc_symbol_address": 1,
                    "section_data": 1,
                    "symbol_address": 5,
                    "symbol_data_value": 1,
                    "symbol_entry": 1,
                    "symbol_info_offset": 1,
                    "symbol_info_ptr": 1,
                    "symbol_info_val": 1,
                    "symbol_info_value": 4,
                    "symbol_info_var": 1,
                    "symbol_offset": 3,
                    "temp_var": 1,
                    "value": 1,
                    "var3": 2
                },
                "lVar8": {
                    "file_var": 1,
                    "index": 1,
                    "length": 1,
                    "long_value": 3,
                    "long_var": 8,
                    "long_var2": 1,
                    "long_variable": 1,
                    "section_hash": 1,
                    "section_index": 1,
                    "temp_long": 6,
                    "temp_var5": 1,
                    "value": 1,
                    "var1": 1,
                    "var8": 4
                },
                "local_60": {
                    "char_var2": 1,
                    "char_var_2": 1,
                    "filename_option": 1,
                    "first_char": 1,
                    "local_char": 13,
                    "local_char_60": 2,
                    "local_char_variable": 1,
                    "local_character": 1,
                    "local_var5": 1,
                    "symbol_category": 1,
                    "symbol_char": 1,
                    "symbol_format": 2,
                    "temp_char": 1,
                    "temp_char2": 2,
                    "tmp_character": 1,
                    "unused_char": 1
                },
                "local_68": {
                    "alloc_var4": 1,
                    "local_arr2": 1,
                    "local_array": 1,
                    "local_array2": 3,
                    "local_array3": 1,
                    "local_array_2": 2,
                    "local_array_3": 2,
                    "local_buffer": 1,
                    "local_buffer2": 2,
                    "local_long_array": 1,
                    "local_undefined8_3": 1,
                    "local_undefined8_array": 1,
                    "local_undefined_arr": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "local_var68": 1,
                    "local_var_68": 2,
                    "object_format": 1,
                    "reloc_address": 1,
                    "section_name_buffer": 1,
                    "symbol_type": 1,
                    "temp_buffer": 1,
                    "temp_buffer3": 1,
                    "temp_undefined": 1,
                    "temp_undefined_array2": 1
                },
                "local_88": {
                    "local_pointer": 1,
                    "local_pointer_3": 1,
                    "local_ptr": 2,
                    "local_ptr2": 1,
                    "local_ptr3": 3,
                    "local_ptr4": 1,
                    "local_ptr_4": 1,
                    "local_ptr_88": 2,
                    "local_ptr_var": 1,
                    "local_ptr_var1": 1,
                    "local_section_reloc": 1,
                    "local_symbol_array": 1,
                    "local_void_ptr": 1,
                    "matching_section": 1,
                    "reloc_address_ptr": 1,
                    "reloc_info_list": 1,
                    "reloc_offset": 1,
                    "reloc_offsets": 1,
                    "reloc_section_info": 1,
                    "reloc_table": 2,
                    "section_buffer": 1,
                    "section_info": 1,
                    "section_map": 1,
                    "section_relocs_array": 1,
                    "temp_ptr": 1,
                    "temp_ptr3": 1
                },
                "local_90": {
                    "local_pointer_2": 1,
                    "local_ptr": 1,
                    "local_ptr2": 3,
                    "local_ptr3": 1,
                    "local_ptr_3": 1,
                    "local_ptr_90": 2,
                    "local_sym_info2": 1,
                    "local_symbol_info2": 2,
                    "local_symbol_info_pointer_2": 1,
                    "local_symbol_info_ptr": 1,
                    "local_symbol_info_ptr2": 1,
                    "local_symbol_info_ptr_2": 1,
                    "local_var90": 1,
                    "matching_data_array": 1,
                    "matching_reloc_data": 1,
                    "matching_sections": 1,
                    "reloc_info_flag": 1,
                    "sec_info_ptr": 1,
                    "section_data_ptr": 1,
                    "symbol_current_reloc": 1,
                    "symbol_info2": 1,
                    "symbol_info_if_not_found": 1,
                    "symbol_info_match": 1,
                    "symbol_info_ptr": 1,
                    "symbol_info_ptr2": 1,
                    "symbol_info_ptr3": 1,
                    "temp_long_ptr": 1
                },
                "local_98": {
                    "local_pointer": 1,
                    "local_ptr": 1,
                    "local_ptr1": 3,
                    "local_ptr2": 1,
                    "local_ptr_2": 1,
                    "local_ptr_98": 2,
                    "local_sym_info1": 1,
                    "local_symbol_info": 1,
                    "local_symbol_info1": 1,
                    "local_symbol_info_pointer": 1,
                    "local_symbol_info_ptr": 3,
                    "local_var98": 1,
                    "matching_reloc": 1,
                    "matching_reloc_array": 1,
                    "matching_symbols": 1,
                    "reloc_data_ptr": 1,
                    "reloc_section_ptr": 1,
                    "sec_name_ptr": 1,
                    "symbol_info1": 1,
                    "symbol_info_empty": 1,
                    "symbol_info_if_found": 1,
                    "symbol_info_ptr": 1,
                    "symbol_info_ptr2": 1,
                    "symbol_info_true": 1,
                    "symbol_reloc_info": 1,
                    "temp_long_ptr": 1
                },
                "local_a0": {
                    "current_param": 1,
                    "format_string": 1,
                    "local_long": 3,
                    "local_param": 3,
                    "local_param3": 1,
                    "local_undefined8": 1,
                    "local_undefined8_2": 1,
                    "local_unused_param": 1,
                    "local_value": 1,
                    "local_var": 3,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var3": 2,
                    "local_var_a0": 3,
                    "object_info2": 1,
                    "param1": 1,
                    "param4": 1,
                    "param_buffer": 1,
                    "param_value": 1,
                    "reloc_name": 1,
                    "temp_long": 1,
                    "temp_undefined8": 1
                },
                "local_a8": {
                    "buffer_ptr": 1,
                    "char_buffer": 1,
                    "local_array": 1,
                    "local_array2": 1,
                    "local_array_2": 2,
                    "local_buf": 1,
                    "local_buffer_ptr": 2,
                    "local_ptr": 6,
                    "local_ptr1": 1,
                    "local_ptr_1": 1,
                    "local_ptr_a8": 2,
                    "local_undefined8_pointer": 1,
                    "local_undefined_ptr": 2,
                    "local_var2": 1,
                    "local_var_a8": 1,
                    "reloc_buffer": 3,
                    "reloc_name_ptr": 1,
                    "section_name": 1,
                    "temp_ptr": 1,
                    "temp_undefined_ptr": 1
                },
                "local_b0": {
                    "buffer": 3,
                    "local_arr": 1,
                    "local_array": 8,
                    "local_array_1": 1,
                    "local_buffer": 4,
                    "local_data": 1,
                    "local_undefined": 2,
                    "local_undefined8": 1,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var_b0": 3,
                    "section_name": 1,
                    "temp_buffer": 1,
                    "temp_undefined": 1,
                    "temp_undefined_array": 1
                },
                "local_b4": {
                    "line_number": 2,
                    "local_flag": 1,
                    "local_uint": 12,
                    "local_uint_variable": 1,
                    "local_unsigned": 1,
                    "local_value": 1,
                    "local_var1": 1,
                    "local_var_b4": 2,
                    "local_variable": 1,
                    "reloc_index": 1,
                    "reloc_offset": 1,
                    "reloc_value": 1,
                    "section_id": 1,
                    "section_size": 1,
                    "symbol_line": 1,
                    "symbol_line_num": 1,
                    "temp_uint": 1,
                    "var_b4": 1
                },
                "param_1": {
                    "argv": 1,
                    "file_info": 1,
                    "file_names": 1,
                    "file_paths": 2,
                    "filename": 1,
                    "filename_array": 1,
                    "filename_ptr": 2,
                    "format_strings": 1,
                    "object": 1,
                    "object_file": 3,
                    "object_filename": 5,
                    "object_filenames": 2,
                    "object_info": 3,
                    "object_information": 1,
                    "object_list": 1,
                    "object_name": 1,
                    "object_path": 1,
                    "object_ptr": 2,
                    "symbol_info": 1
                },
                "param_2": {
                    "obj_symbol_info": 1,
                    "reloc_array": 1,
                    "reloc_info": 1,
                    "relocation_info": 1,
                    "relocation_table": 1,
                    "section_info": 2,
                    "symbol_info": 21,
                    "symbol_info_ptr": 2,
                    "symbol_information": 1
                },
                "param_3": {
                    "filename": 1,
                    "format": 1,
                    "param": 3,
                    "param3": 10,
                    "param3_unused": 1,
                    "param_3": 11,
                    "unused_param": 4
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_info_ptr": 1,
                    "error_message": 3,
                    "error_msg": 2,
                    "error_string": 3,
                    "file_name": 3,
                    "file_names": 2,
                    "filename": 4,
                    "function_name": 1,
                    "message": 1,
                    "optional_message": 1,
                    "optional_string": 1,
                    "param4": 2,
                    "printer": 1,
                    "program_name": 1,
                    "source_file": 2,
                    "source_filename": 1,
                    "symbol_name": 1
                },
                "plVar2": {
                    "current_reloc": 1,
                    "current_symbol": 1,
                    "long_ptr": 1,
                    "p_symbol_info": 2,
                    "pl_var": 1,
                    "pl_var2": 2,
                    "pointer_symbol_info": 1,
                    "pointer_to_long": 1,
                    "pointer_to_symbol_info": 1,
                    "ptr": 1,
                    "ptr_var2": 1,
                    "reloc": 1,
                    "reloc_entry": 1,
                    "reloc_info_ptr": 1,
                    "reloc_symbol": 1,
                    "relocation": 1,
                    "section_ptr": 1,
                    "single_symbol_info": 1,
                    "symbol": 2,
                    "symbol_data": 2,
                    "symbol_data_ptr": 1,
                    "symbol_entry_pointer": 1,
                    "symbol_info_pointer": 2,
                    "symbol_info_ptr": 3
                },
                "pplVar1": {
                    "double_pointer_to_symbol_info": 1,
                    "double_ptr": 1,
                    "double_symbol_info": 1,
                    "pointer_to_pointer_symbol_info": 1,
                    "pointer_to_pointer_to_long": 1,
                    "pp_symbol_info": 2,
                    "ppl_var1": 2,
                    "ptr_ptr": 1,
                    "ptr_ptr_var1": 1,
                    "reloc": 1,
                    "reloc_info": 1,
                    "reloc_section": 1,
                    "section": 1,
                    "section_info_ptr": 1,
                    "section_ptr_ptr": 1,
                    "section_relocs": 1,
                    "symbol_info": 1,
                    "symbol_info_pointer": 1,
                    "symbol_info_pointer_pointer": 1,
                    "symbol_info_ptr": 2,
                    "symbol_info_ptr_ptr": 4,
                    "symbol_pointer": 1,
                    "symbol_ptr": 3
                },
                "print_error_message_and_exit_00106530": {
                    "print_error_message_exit": 1
                },
                "print_object_filename_bsd_0010b260": {
                    "print_obj_filename_bsd_ptr": 1
                },
                "print_parameter_message_001053b0": {
                    "print_parameter_message": 1
                },
                "print_symbol_filename_bsd": {
                    "print_symbol_filename_bsd": 1
                },
                "print_symbol_info_001053c0": {
                    "print_symbol_info": 1
                },
                "puVar4": {
                    "code_ptr": 1,
                    "current_object": 1,
                    "current_symbol": 1,
                    "filename": 1,
                    "iterator": 1,
                    "object_ptr": 1,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_var": 7,
                    "ptr_var4": 2,
                    "temp_ptr": 7,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "tmp": 1,
                    "var4": 1
                },
                "pvStack_70": {
                    "alloc_var3": 1,
                    "bfd": 1,
                    "code_section_info": 1,
                    "local_ptr_var4": 1,
                    "malloced_array_3": 1,
                    "ptr_stack70": 1,
                    "ptr_stack_70": 3,
                    "reloc_info_section_name": 1,
                    "section_headers": 1,
                    "section_relocs_4": 1,
                    "stack_pointer_3": 1,
                    "stack_pointer_70": 1,
                    "stack_ptr3": 5,
                    "stack_ptr_3": 1,
                    "stack_ptr_70": 1,
                    "stack_val_70": 1,
                    "stack_var3": 1,
                    "stack_void_ptr_3": 1,
                    "symbol_buffer": 1,
                    "temp_buffer2": 1,
                    "temp_ptr": 1,
                    "temp_ptr4": 1,
                    "tmp_buffer": 1
                },
                "pvStack_78": {
                    "alloc_var2": 1,
                    "data_section_info": 1,
                    "local_ptr_var3": 1,
                    "malloced_array_2": 1,
                    "ptr_stack78": 1,
                    "ptr_stack_78": 3,
                    "reloc_address_data_ptr": 1,
                    "reloc_buffer3": 1,
                    "reloc_info_section": 1,
                    "reloc_map": 1,
                    "reloc_section_array": 1,
                    "reloc_sections": 1,
                    "reloc_symbols": 1,
                    "reloc_types": 1,
                    "section_relocs_3": 1,
                    "stack_pointer_2": 1,
                    "stack_pointer_78": 1,
                    "stack_ptr2": 5,
                    "stack_ptr_2": 1,
                    "stack_ptr_78": 1,
                    "stack_val_78": 1,
                    "stack_var2": 1,
                    "stack_void_ptr_2": 1,
                    "symbol_table": 1,
                    "temp_ptr": 1
                },
                "pvStack_80": {
                    "alloc_var1": 1,
                    "bss_section_info": 1,
                    "local_ptr_var2": 1,
                    "malloced_array_1": 1,
                    "ptr_stack80": 1,
                    "ptr_stack_80": 3,
                    "reloc_address_data": 1,
                    "reloc_addresses": 1,
                    "reloc_buffer2": 1,
                    "reloc_counts": 1,
                    "reloc_info_data": 1,
                    "reloc_name_table": 1,
                    "reloc_section": 1,
                    "reloc_string_array": 1,
                    "section_relocs_2": 1,
                    "stack_pointer_1": 1,
                    "stack_pointer_80": 1,
                    "stack_ptr": 1,
                    "stack_ptr1": 4,
                    "stack_ptr_1": 1,
                    "stack_ptr_80": 1,
                    "stack_val_80": 1,
                    "stack_var1": 1,
                    "stack_void_ptr_1": 1,
                    "symbol_map": 1,
                    "temp_ptr": 1
                },
                "pvVar7": {
                    "pointer_var": 1,
                    "pointer_var2": 1,
                    "pointer_variable": 1,
                    "ptr": 1,
                    "ptr_val": 1,
                    "ptr_value": 1,
                    "ptr_var": 2,
                    "ptr_var2": 3,
                    "ptr_var7": 2,
                    "reloc_data": 1,
                    "section_data": 1,
                    "section_info": 3,
                    "section_reloc": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 2,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "var7": 2,
                    "void_pointer": 1,
                    "void_ptr": 1,
                    "void_ptr1": 1,
                    "void_var": 1
                },
                "reverse_and_print_results_00103463": {
                    "reverse_print_results": 1
                },
                "uVar9": {
                    "flag": 3,
                    "flags": 1,
                    "index": 1,
                    "temp_uint": 6,
                    "temp_var6": 1,
                    "uint_val": 1,
                    "uint_value": 2,
                    "uint_var": 8,
                    "uint_variable": 1,
                    "unsigned_value": 1,
                    "unsigned_var": 1,
                    "var2": 1,
                    "var9": 4
                }
            },
            "called": [
                "FUN_00103463",
                "FUN_00102040",
                "FUN_00106530",
                "FUN_001021e0",
                "FUN_001053b0",
                "FUN_00103238",
                "FUN_00102190",
                "FUN_001053c0"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid print_object_filename_00105110(undefined8 *object_filename,long *symbol_info,undefined8 param_3,undefined8 *filename)\n\n{\n  void *ptr;\n  char *string1;\n  long **symbol_info_ptr_ptr;\n  long *symbol_info_ptr;\n  long symbol_address;\n  undefined8 *ptr_var;\n  char char_var;\n  int int_var;\n  void *section_info;\n  long long_var;\n  uint uint_var;\n  long var10;\n  uint local_uint;\n  undefined local_array [8];\n  undefined *local_ptr;\n  undefined8 local_var_a0;\n  long *local_ptr1;\n  long *local_ptr2;\n  void *local_ptr3;\n  void *stack_ptr1;\n  void *stack_ptr2;\n  void *stack_ptr3;\n  undefined local_array2 [8];\n  char local_char;\n  \n  if (*(code **)(PTR_PTR_print_obj_filename_bsd_ptr + 0x18) == print_symbol_filename_bsd) {\n    if (DAT_0010b818 != 0) {\n      if (filename != (undefined8 *)0x0) {\n        printf(\"%s:\",*filename);\n      }\n      printf(\"%s:\",*object_filename);\n    }\n  }\n  else {\n    (**(code **)(PTR_PTR_print_obj_filename_bsd_ptr + 0x18))(filename,object_filename);\n  }\n  local_ptr = local_array2;\n  (**(code **)(object_filename[1] + 0x218))(object_filename,symbol_info,local_ptr);\n  uint_var = *(uint *)(symbol_info + 3);\n  char_var = local_char;\n  if (((((local_char == 'i') && ((uint_var & 0x400000) != 0)) && (DAT_0010b7c8 != (char *)0x0)) &&\n      ((*DAT_0010b7c8 != '\\0' && (char_var = *DAT_0010b7c8, (uint_var & 2) == 0)))) &&\n     (char_var = local_char, DAT_0010b7c8[1] != '\\0')) {\n    char_var = DAT_0010b7c8[1];\n  }\n  local_char = char_var;\n  local_var_a0 = param_3;\n  if ((uint_var & 0x200100) != 0) goto LAB_00103330;\n  long_var = *symbol_info;\n  int_var = *(int *)(*(long *)(long_var + 8) + 8);\n  if (((uint_var & 0x200000) == 0) && (int_var == 5)) {\n    local_ptr1 = symbol_info;\n    if (*(long *)(long_var + 0x110) == 0) {\n      local_ptr1 = (long *)0x0;\n    }\n  }\n  else {\n    local_ptr1 = (long *)0x0;\n    if (((int_var - 2U & 0xfffffffd) == 0) && (local_ptr2 = symbol_info, *(long *)(long_var + 0x110) != 0))\n    goto LAB_001051bf;\n  }\n  local_ptr2 = (long *)0x0;\nLAB_001051bf:\n  (**(code **)(PTR_PTR_print_obj_filename_bsd_ptr + 0x20))(&local_ptr,object_filename);\n  do {\n    if (DAT_0010b804 == 0) {\nLAB_001051e6:\n      putc(10,standard_output);\n      return;\n    }\n    if (_DAT_0010b7b8 == object_filename) {\n      ptr_var = _DAT_0010b7b8;\n      if (DAT_0010b758 == (void *)0x0) goto LAB_00105359;\nLAB_00105288:\n      _DAT_0010b7b8 = ptr_var;\n      section_info = DAT_0010b750;\n      if (symbol_info[4] == 0x10c2a8) {\n        if (_DAT_0010b7b0 == object_filename) {\n          if (DAT_0010b750 == (void *)0x0) goto LAB_001033d1;\n        }\n        else {\n          uint_var = 0;\n          if (DAT_0010b750 != (void *)0x0) {\n            for (; uint_var < DAT_0010b748; uint_var = uint_var + 1) {\n              ptr = *(void **)((long)section_info + (ulong)uint_var * 8);\n              if (ptr != (void *)0x0) {\n                free(ptr);\n              }\n            }\n            free(DAT_0010b740);\n            free(section_info);\n            free(DAT_0010b738);\n            DAT_0010b740 = (void *)0x0;\n            DAT_0010b750 = (void *)0x0;\n            DAT_0010b738 = (void *)0x0;\n          }\nLAB_001033d1:\n          DAT_0010b748 = *(uint *)(object_filename + 0x14);\n          DAT_0010b740 = (void *)xmalloc((ulong)DAT_0010b748 * 8);\n          DAT_0010b750 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n          DAT_0010b738 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n          stack_ptr3 = DAT_0010b758;\n          local_ptr3 = DAT_0010b740;\n          stack_ptr1 = DAT_0010b750;\n          stack_ptr2 = DAT_0010b738;\n          bfd_map_over_sections(object_filename,get_relocs,&local_ptr3);\n          _DAT_0010b7b0 = object_filename;\n        }\n        string1 = (char *)symbol_info[1];\n        for (uint_var = 0; uint_var < DAT_0010b748; uint_var = uint_var + 1) {\n          long_var = (ulong)uint_var * 8;\n          section_info = DAT_0010b738;\n          for (var10 = 0;\n              *(long *)((long)section_info + long_var) != var10 && var10 <= *(long *)((long)section_info + long_var)\n              ; var10 = var10 + 1) {\n            symbol_info_ptr_ptr = *(long ***)(*(long *)((long)DAT_0010b750 + long_var) + var10 * 8);\n            symbol_info_ptr = *symbol_info_ptr_ptr;\n            if ((((symbol_info_ptr != (long *)0x0) &&\n                 (symbol_address = *symbol_info_ptr, *(long *)(symbol_address + 0x20) == symbol_info[4])) &&\n                (*(long *)(symbol_address + 0x10) == symbol_info[2])) &&\n               (((int_var = strcmp(string1,*(char **)(symbol_address + 8)), int_var == 0 &&\n                 (char_var = (**(code **)(object_filename[1] + 0x240))\n                                    (object_filename,DAT_0010b758,\n                                     *(undefined8 *)((long)DAT_0010b740 + long_var),symbol_info_ptr_ptr[1],\n                                     &local_ptr3,local_array,&local_uint,0), section_info = DAT_0010b738,\n                 char_var != '\\0')) && (local_ptr3 != (void *)0x0)))) {\n              printf(\"\\t%s:%u\",local_ptr3,(ulong)local_uint);\n              uint_var = DAT_0010b748;\n              break;\n            }\n          }\n        }\n      }\n      else if (*(undefined8 **)(symbol_info[4] + 0xe0) == object_filename) {\n        char_var = (**(code **)(object_filename[1] + 0x250))(object_filename,DAT_0010b758,symbol_info,&local_ptr3,&local_uint);\n        if (((char_var != '\\0') ||\n            (char_var = (**(code **)(object_filename[1] + 0x240))\n                               (object_filename,DAT_0010b758,symbol_info[4],symbol_info[2],&local_ptr3,local_array,\n                                &local_uint,0), char_var != '\\0')) &&\n           ((local_ptr3 != (void *)0x0 && (local_uint != 0)))) {\n          printf(\"\\t%s:%u\");\n        }\n      }\n      goto LAB_001051e6;\n    }\n    if (DAT_0010b758 != (void *)0x0) {\n      free(DAT_0010b758);\n      DAT_0010b758 = (void *)0x0;\n    }\nLAB_00105359:\n    long_var = (**(code **)(object_filename[1] + 0x1f8))(object_filename);\n    if (long_var < 0) {\n      reverse_print_results(long_var);\n      return;\n    }\n    DAT_0010b758 = (void *)xmalloc();\n    long_var = (**(code **)(object_filename[1] + 0x200))(object_filename,DAT_0010b758);\n    ptr_var = object_filename;\n    if (-1 < long_var) goto LAB_00105288;\n    bfd_fatal(*object_filename);\nLAB_00103330:\n    local_ptr1 = (long *)0x0;\n    local_ptr2 = (long *)0x0;\n    (**(code **)(PTR_PTR_print_obj_filename_bsd_ptr + 0x20))(&local_ptr,object_filename);\n  } while( true );\n}\n\n",
            "current_name": "print_object_filename_00105110",
            "entrypoint": "0x00105110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105110": "print_object_filename_00105110",
                "__ptr": "ptr",
                "__s1": "string1",
                "_stdout": "standard_output",
                "cVar5": "char_var",
                "iVar6": "int_var",
                "lVar10": "var10",
                "lVar3": "symbol_address",
                "lVar8": "long_var",
                "local_60": "local_char",
                "local_68": "local_array2",
                "local_88": "local_ptr3",
                "local_90": "local_ptr2",
                "local_98": "local_ptr1",
                "local_a0": "local_var_a0",
                "local_a8": "local_ptr",
                "local_b0": "local_array",
                "local_b4": "local_uint",
                "param_1": "object_filename",
                "param_2": "symbol_info",
                "param_4": "filename",
                "plVar2": "symbol_info_ptr",
                "pplVar1": "symbol_info_ptr_ptr",
                "print_object_filename_bsd_0010b260": "print_obj_filename_bsd_ptr",
                "puVar4": "ptr_var",
                "pvStack_70": "stack_ptr3",
                "pvStack_78": "stack_ptr2",
                "pvStack_80": "stack_ptr1",
                "pvVar7": "section_info",
                "reverse_and_print_results_00103463": "reverse_print_results",
                "uVar9": "uint_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053b0": {
            "additional_data": {
                "DAT_0010b818": {
                    "flag": 1
                },
                "FUN_001053b0": {
                    "print_colon_separated_strings": 1,
                    "print_data": 4,
                    "print_message": 7,
                    "print_output": 1,
                    "print_parameter_message": 1,
                    "print_parameters": 2,
                    "print_str": 1,
                    "print_string_and_value": 1,
                    "print_string_with_label": 2,
                    "print_string_with_prefix": 2,
                    "print_strings": 7,
                    "print_strings_to_console": 1,
                    "print_values": 1
                },
                "file_descriptor": {
                    "output_fd": 1
                },
                "input_string1": {
                    "string_to_print1": 1
                },
                "input_string2": {
                    "string_to_print2": 1
                },
                "param_1": {
                    "data1": 2,
                    "error_message": 1,
                    "first_parameter": 1,
                    "header": 2,
                    "input_string_1": 1,
                    "label": 3,
                    "label_param": 1,
                    "label_ptr": 1,
                    "message1": 4,
                    "message_1": 1,
                    "message_header": 1,
                    "prefix": 2,
                    "str1": 1,
                    "string": 1,
                    "string1": 5,
                    "string_1": 4
                },
                "param_2": {
                    "data": 1,
                    "data2": 2,
                    "info_message": 1,
                    "input_string_2": 1,
                    "message": 2,
                    "message2": 4,
                    "message_2": 1,
                    "message_body": 1,
                    "message_param": 1,
                    "second_parameter": 1,
                    "str2": 1,
                    "string": 3,
                    "string2": 5,
                    "string_2": 4,
                    "string_ptr": 1,
                    "value": 2
                },
                "param_3": {
                    "additional_param": 1,
                    "param3": 3,
                    "param_3": 4,
                    "third_parameter": 1,
                    "unused_param": 9,
                    "unused_param_1": 1
                },
                "param_4": {
                    "additional": 1,
                    "additional_message": 1,
                    "additional_param": 1,
                    "data3": 1,
                    "data4": 1,
                    "end_param": 1,
                    "extra_info": 1,
                    "extra_string": 1,
                    "file_descriptor": 1,
                    "final_param": 1,
                    "fourth_parameter": 1,
                    "param": 1,
                    "param4": 4,
                    "param_4": 4,
                    "param_to_print": 1,
                    "parameter4": 1,
                    "str4": 1,
                    "string3": 2,
                    "string_3": 1,
                    "suffix": 1,
                    "unused_param_2": 4
                },
                "printf": {
                    "print": 1,
                    "print_formatted": 1,
                    "print_output": 1
                },
                "string_1": {
                    "input_param_1": 1
                },
                "string_2": {
                    "input_param_2": 1
                }
            },
            "called": [
                "FUN_00103573"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\nvoid print_parameter_message_001053b0(undefined8 *string1,undefined8 *string2,undefined8 unused_param,undefined8 param4)\n\n{\n  if (DAT_0010b818 == 0) {\n    return;\n  }\n  if (string1 != (undefined8 *)0x0) {\n    print(\"%s:\",*string1);\n  }\n  print(\"%s:\",*string2,param4);\n  return;\n}\n\n",
            "current_name": "print_parameter_message_001053b0",
            "entrypoint": "0x001053b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053b0": "print_parameter_message_001053b0",
                "param_1": "string1",
                "param_2": "string2",
                "param_3": "unused_param",
                "param_4": "param4",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053c0": {
            "additional_data": {
                "DAT_0010712c": {
                    "symbol_info_dictionary": 1
                },
                "DAT_0010b238": {
                    "format_space": 1,
                    "format_string_b": 1
                },
                "DAT_0010b23d": {
                    "format_space": 1,
                    "format_string_c": 1
                },
                "DAT_0010b7a0": {
                    "format_string_a": 1
                },
                "DAT_0010b7a8": {
                    "constant_a": 1,
                    "print_width": 1
                },
                "DAT_0010b7ec": {
                    "constant_c": 1,
                    "print_symbol_info": 1
                },
                "DAT_0010b7f8": {
                    "const_2": 1,
                    "constant_b": 1,
                    "print_width_uninitialized": 1
                },
                "FUN_001035a2": {
                    "print_not_found_message": 1,
                    "print_value_const_prop": 1,
                    "print_width": 1
                },
                "FUN_001053c0": {
                    "print_symbol": 5,
                    "print_symbol_data": 1,
                    "print_symbol_details": 3,
                    "print_symbol_info": 19,
                    "print_value": 2
                },
                "FUN_001054d0": {
                    "print_symbol_info": 1,
                    "print_symbol_info_bsd_cold": 1,
                    "print_symname": 1
                },
                "FUN_00106300": {
                    "initialize": 1,
                    "initialize_message": 1
                },
                "cVar2": {
                    "is_symbol_undefined": 2,
                    "is_undefined": 14,
                    "is_undefined_class": 1,
                    "is_undefined_sym": 3,
                    "is_undefined_symbol": 1,
                    "is_undefined_symclass": 9
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "fatal": {
                    "print_error_and_exit": 1
                },
                "iVar1": {
                    "constant": 1,
                    "constant_value": 1,
                    "data_length": 1,
                    "data_size": 2,
                    "error_code": 2,
                    "error_value": 1,
                    "fatal_code": 1,
                    "fatal_error_code": 1,
                    "init_width": 1,
                    "int_value": 1,
                    "message": 1,
                    "message_size": 1,
                    "offset": 1,
                    "print_width": 8,
                    "print_width_initialized": 1,
                    "some_variable": 1,
                    "symbol_class": 1,
                    "symbol_offset": 1,
                    "variable1": 1,
                    "width": 1
                },
                "lVar4": {
                    "long_value": 1,
                    "pointer": 1,
                    "print_value": 1,
                    "symbol_address": 4,
                    "symbol_info": 1,
                    "symbol_offset": 2,
                    "symbol_value": 8,
                    "value": 7,
                    "value_3": 1,
                    "value_address": 2,
                    "value_constprop": 1,
                    "value_ptr": 1
                },
                "param_1": {
                    "input": 1,
                    "pointer": 1,
                    "symbol": 4,
                    "symbol_data": 4,
                    "symbol_info": 14,
                    "symbol_info_ptr": 1,
                    "symbol_list": 1,
                    "symbol_ptr": 1,
                    "symbols": 1
                },
                "param_2": {
                    "info_data": 1,
                    "param": 11,
                    "param2": 8,
                    "param_2": 3,
                    "param_value": 3,
                    "parameter": 1,
                    "unknown_param": 1,
                    "value": 1
                },
                "print_symbol_info_bsd_cold": {
                    "print_symbol_info_bsd_cold": 1
                },
                "print_symname": {
                    "print_symbol_name": 1
                },
                "print_value_constprop_0": {
                    "print_const_property_value": 1
                },
                "printf": {
                    "print": 2,
                    "print_formatted": 1
                },
                "putchar": {
                    "print_character": 3
                },
                "uVar3": {
                    "message": 3,
                    "print_value": 7,
                    "string_value": 1,
                    "symbol_info": 1,
                    "symbol_value": 4,
                    "value": 13,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_00106300",
                "FUN_001035a2",
                "FUN_001020f0",
                "FUN_001054d0",
                "FUN_00102150",
                "FUN_00102190"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\nvoid print_symbol_info_001053c0(long *symbol_info,undefined8 param)\n\n{\n  int print_width;\n  char is_undefined;\n  undefined8 value;\n  long symbol_value;\n  \n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol_info + 8));\n  print_width = DAT_0010b7a8;\n  if (is_undefined == '\\0') {\n    if (DAT_0010b7f8 == 0) {\n      if ((DAT_0010b7a8 - 0x20U & 0xffffffdf) != 0) {\nLAB_00103603:\n        value = get_error_message(0,\"Print width has not been initialized (%d)\",5);\n        print_error_and_exit(value,print_width);\n        goto LAB_00103623;\n      }\n      value = *(undefined8 *)*symbol_info;\n    }\n    else {\n      if (DAT_0010b7ec == 0) {\n        if (symbol_info[2] == 0) {\n          symbol_value = symbol_info[1];\n        }\n        else {\n          symbol_value = *(long *)(symbol_info[2] + 0x38);\n        }\n        print_const_property_value(symbol_value);\n        if (DAT_0010b7ec != 0) {\n          print_symbol_info_001053c0_bsd_cold();\n          return;\n        }\n        goto LAB_00105423;\n      }\n      value = *(undefined8 *)*symbol_info;\n      if ((DAT_0010b7a8 - 0x20U & 0xffffffdf) != 0) goto LAB_00103603;\n    }\n    print(DAT_0010b7a0,value);\n    if (DAT_0010b7ec != 0) {\n      print_symbol_info_001053c0_bsd_cold();\n      return;\n    }\n  }\n  else if (DAT_0010b7a8 == 0x40) {\n    print(\"        \");\n    print(\"        \");\n  }\n  else {\n    print(\"        \");\n  }\nLAB_00105423:\n  print(\" %c\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) != '-') {\n    print_symbol_name(&DAT_0010712c,symbol_info,0,param);\n    return;\n  }\nLAB_00103623:\n  print_character(0x20);\n  print(&DAT_0010b238,(ulong)(uint)(int)*(char *)(*symbol_info + 0x19));\n  print_character(0x20);\n  print(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n  print(\" %5s\",*(undefined8 *)(*symbol_info + 0x20));\n  print_symbol_name(&DAT_0010712c,symbol_info,0,param);\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001053c0",
            "entrypoint": "0x001053c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053c0": "print_symbol_info_001053c0",
                "cVar2": "is_undefined",
                "dcgettext": "get_error_message",
                "fatal": "print_error_and_exit",
                "iVar1": "print_width",
                "lVar4": "symbol_value",
                "param_1": "symbol_info",
                "param_2": "param",
                "print_symname": "print_symbol_name",
                "print_value_constprop_0": "print_const_property_value",
                "printf": "print",
                "putchar": "print_character",
                "uVar3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001054d0": {
            "additional_data": {
                "FUN_001054d0": {
                    "print_symbol": 7,
                    "print_symbol_data": 1,
                    "print_symbol_details": 3,
                    "print_symbol_info": 16,
                    "print_symbol_information": 2
                },
                "bVar9": {
                    "byte_val": 1,
                    "byte_value": 3,
                    "class": 2,
                    "class_type": 2,
                    "data_type": 3,
                    "section": 1,
                    "sym_class": 2,
                    "sym_type": 1,
                    "sym_type_code": 1,
                    "symbol_class": 2,
                    "symclass_flag": 1,
                    "type": 5,
                    "type_byte": 1,
                    "type_class": 1,
                    "type_code": 3,
                    "type_indicator": 1,
                    "type_value": 1
                },
                "cVar1": {
                    "is_undefined": 18,
                    "is_undefined_class": 1,
                    "is_undefined_sym": 1,
                    "is_undefined_sym_class": 2,
                    "is_undefined_symclass": 7,
                    "symbol_class": 2
                },
                "iVar3": {
                    "asprintf_result": 23,
                    "asprintf_ret": 1,
                    "asprintf_ret_val": 3,
                    "result": 3,
                    "status": 1
                },
                "in_R8": {
                    "arg1": 2,
                    "argument1": 2,
                    "argument_1": 1,
                    "extra_param1": 1,
                    "in_param_r8": 1,
                    "in_r8": 4,
                    "param8": 1,
                    "parameter1": 1,
                    "parameter_1": 1,
                    "register8": 1,
                    "register_value1": 2,
                    "unused_param1": 2,
                    "unused_param_1": 1
                },
                "in_R9": {
                    "arg2": 2,
                    "argument2": 2,
                    "argument_2": 1,
                    "extra_param2": 1,
                    "in_param_r9": 1,
                    "in_r9": 4,
                    "param9": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "register9": 1,
                    "register_value2": 2,
                    "unused_param2": 2,
                    "unused_param_2": 1
                },
                "lVar7": {
                    "auxiliary_info": 1,
                    "auxiliary_value": 1,
                    "class_info": 2,
                    "info": 1,
                    "info_offset": 2,
                    "info_ptr": 5,
                    "info_value": 1,
                    "offset": 4,
                    "secondary_info": 1,
                    "section_info": 1,
                    "sym_descriptor": 1,
                    "sym_info": 2,
                    "symbol_attr": 1,
                    "symbol_class": 1,
                    "symbol_data": 2,
                    "symbol_info": 1,
                    "symbol_type": 1,
                    "temp": 1,
                    "value": 2
                },
                "param_1": {
                    "data": 1,
                    "input": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "param": 8,
                    "symbol": 10,
                    "symbol_address": 2,
                    "symbol_info": 1,
                    "symbol_name": 2,
                    "symbol_parameter": 1,
                    "symbol_string": 1
                },
                "pcVar11": {
                    "data_type_name": 1,
                    "desc": 1,
                    "info_string": 1,
                    "print_category": 1,
                    "sym_category": 1,
                    "sym_type": 2,
                    "sym_type_name": 2,
                    "symbol_kind": 1,
                    "symbol_type": 1,
                    "symbol_type_str": 1,
                    "symclass_string": 1,
                    "symtype": 1,
                    "type": 1,
                    "type_name": 12,
                    "type_str": 2,
                    "type_string": 2
                },
                "piVar5": {
                    "errno_loc": 2,
                    "errno_location": 16,
                    "errno_location_ptr": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 3,
                    "error": 1,
                    "error_code": 1,
                    "error_location": 1,
                    "error_number": 1,
                    "error_number_ptr": 1,
                    "ptr_errno": 3
                },
                "plVar4": {
                    "error_msg": 1,
                    "msg": 1,
                    "pointer": 1,
                    "ptr_symbol": 2,
                    "ptr_symbol_data": 1,
                    "sym_info": 5,
                    "sym_info_array": 1,
                    "symbol_data": 1,
                    "symbol_details": 1,
                    "symbol_info": 14,
                    "symbol_info_ptr": 3
                },
                "print_symname": {
                    "print_symbol_name": 1
                },
                "uVar10": {
                    "base_address": 1,
                    "initial_print_width": 4,
                    "local_print_width": 1,
                    "original_print_width": 3,
                    "original_type": 1,
                    "original_width": 2,
                    "print_width_copy": 1,
                    "saved_init_width": 1,
                    "saved_print_width": 3,
                    "saved_symbol_index": 1,
                    "saved_width": 1,
                    "temp1": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "u_var10": 6,
                    "var10": 1
                },
                "uVar2": {
                    "class": 1,
                    "class_type": 2,
                    "class_value": 1,
                    "shifted_value": 1,
                    "sym_class": 8,
                    "sym_type": 4,
                    "symbol_class": 2,
                    "symbol_type": 3,
                    "symclass": 5,
                    "symclass_value": 1,
                    "type": 1,
                    "type_flag": 2
                },
                "uVar6": {
                    "err_msg": 1,
                    "error_message": 2,
                    "error_msg": 3,
                    "error_str": 1,
                    "error_string": 9,
                    "str_error": 3,
                    "strerror_result": 3,
                    "xstrerror": 1,
                    "xstrerror_result": 7,
                    "xstrerror_ret_val": 1
                },
                "uVar8": {
                    "dat_0010b7a8": 4,
                    "formatted_print_width": 1,
                    "init_width": 1,
                    "initial_print_width": 1,
                    "original_print_width": 1,
                    "print_width": 17,
                    "symbol_index": 1,
                    "temp": 1,
                    "width": 4
                }
            },
            "called": [
                "FUN_0010370a",
                "FUN_00102190"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_001064b0",
                "FUN_001035a2",
                "FUN_0010651a",
                "FUN_001053c0"
            ],
            "code": "\nvoid print_symbol_info_001054d0(undefined8 symbol)\n\n{\n  char is_undefined;\n  ushort sym_class;\n  int asprintf_result;\n  long *symbol_info;\n  int *errno_location;\n  undefined8 error_string;\n  long info_ptr;\n  ulong print_width;\n  byte type;\n  ulong u_var10;\n  char *type_name;\n  undefined8 in_r8;\n  undefined8 in_r9;\n  \n  print_width = (ulong)DAT_0010b7a8;\n  if ((DAT_0010b7a8 - 0x20 & 0xffffffdf) == 0) {\n    printf(DAT_0010b7a0,symbol);\n    return;\n  }\n  symbol_info = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  u_var10 = print_width;\n  fatal(symbol_info,print_width);\n  print_symbol_name(\"%-20s|\",symbol_info,0,u_var10,in_r8,in_r9,print_width);\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol_info + 8));\n  if (is_undefined == '\\0') {\n    print_symbol_info_001054d0(*(undefined8 *)*symbol_info);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*symbol_info + 0x20));\n    printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (symbol_info[2] == 0) {\n    if (symbol_info[3] != 0) {\n      info_ptr = *(long *)(symbol_info[3] + 0x30);\n      is_undefined = *(char *)(info_ptr + 0x28);\n      if (is_undefined == 'g') goto LAB_00103983;\n      if (is_undefined == 'h') {\n        type_name = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        type_name = \"Block\";\n      }\n      else if (*(ushort *)(info_ptr + 0x26) == 0) {\n        type_name = \"None\";\n      }\n      else {\n        sym_class = *(ushort *)(info_ptr + 0x26) >> 4 & 3;\n        if (sym_class == 2) {\n          type_name = \"Function\";\n        }\n        else if (sym_class == 3) {\n          type_name = \"Array\";\n        }\n        else {\n          if (sym_class != 1) {\n            free(DAT_0010b730);\n            sym_class = *(ushort *)(info_ptr + 0x26);\n            type = *(byte *)(info_ptr + 0x28);\n            type_name = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprintf(&DAT_0010b730,type_name,(ulong)type,(ulong)sym_class);\n            type_name = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          type_name = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    type = *(byte *)(symbol_info[2] + 0x48) & 0xf;\n    switch(type) {\n    case 0:\n      type_name = \"NOTYPE\";\n      break;\n    case 1:\n      type_name = \"OBJECT\";\n      break;\n    case 2:\n      type_name = \"FUNC\";\n      break;\n    case 3:\n      type_name = \"SECTION\";\n      break;\n    case 4:\n      type_name = \"FILE\";\n      break;\n    case 5:\n      type_name = \"COMMON\";\n      break;\n    case 6:\n      type_name = \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      type_name = \"<processor specific>: %d\";\n      if ((2 < type - 0xd) && (type_name = \"<OS specific>: %d\", 2 < type - 10)) {\n        type_name = \"<unknown>: %d\";\n      }\n      type_name = (char *)dcgettext(0,type_name,5);\n      asprintf_result = asprintf(&DAT_0010b728,type_name,(ulong)type);\n      type_name = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_location = __errno_location();\n        error_string = xstrerror(*errno_location);\n        fatal(&DAT_0010712d,error_string);\nLAB_00103983:\n        type_name = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",type_name);\n  }\n  if (symbol_info[2] == 0) {\n    if (symbol_info[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(symbol_info[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_symbol_info_001054d0();\n  }\n  info_ptr = symbol_info[2];\n  if ((info_ptr != 0) || (info_ptr = symbol_info[3], info_ptr != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(info_ptr + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001054d0",
            "entrypoint": "0x001054d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001054d0": "print_symbol_info_001054d0",
                "bVar9": "type",
                "cVar1": "is_undefined",
                "iVar3": "asprintf_result",
                "in_R8": "in_r8",
                "in_R9": "in_r9",
                "lVar7": "info_ptr",
                "param_1": "symbol",
                "pcVar11": "type_name",
                "piVar5": "errno_location",
                "plVar4": "symbol_info",
                "print_symname": "print_symbol_name",
                "uVar10": "u_var10",
                "uVar2": "sym_class",
                "uVar6": "error_string",
                "uVar8": "print_width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105500": {
            "additional_data": {
                "FUN_00105500": {
                    "process_entry": 4,
                    "start_main": 1,
                    "start_main_loop": 3,
                    "start_main_process": 2,
                    "start_main_with_stack_pointer": 1,
                    "start_main_wrapper": 3,
                    "start_process": 1
                },
                "FUN_001055f0": {
                    "get_entry_params": 1,
                    "get_information": 1,
                    "process_data": 1,
                    "process_entry": 1
                },
                "auStack_8": {
                    "auxiliary_stack": 4,
                    "auxiliary_stack_8": 1,
                    "local_array": 1,
                    "stack": 4,
                    "stack1": 1,
                    "stack8": 2,
                    "stack_8": 1,
                    "stack_array": 1,
                    "stack_buffer": 2,
                    "stack_frame": 3,
                    "stack_memory": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "arg1": 6,
                    "argc": 1,
                    "argv": 1,
                    "entry_point": 8,
                    "param1": 3,
                    "param_1": 9,
                    "undef_param1": 1,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "argc": 3,
                    "args": 1,
                    "argv": 2,
                    "param": 1,
                    "param2": 3,
                    "param_2": 9,
                    "stack_arg": 1,
                    "stack_pointer": 1,
                    "subdata": 1,
                    "undef_param2": 1,
                    "unused_param2": 1
                },
                "processEntry": {
                    "execute_main": 1,
                    "initialize_entry_point": 1,
                    "start_main_loop": 11,
                    "start_main_thread": 2,
                    "start_program": 1
                }
            },
            "called": [
                "FUN_0010c020",
                "FUN_001055f0"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop start_main_with_stack_pointer_00105500(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined stack [8];\n  \n  __libc_start_main(main,param_2,&stack0x00000008,0,0,param_1,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_with_stack_pointer_00105500",
            "entrypoint": "0x00105500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105500": "start_main_with_stack_pointer_00105500",
                "auStack_8": "stack",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105530": {
            "called": [
                "FUN_0010c038"
            ],
            "calling": [
                "FUN_001055a0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105543) */\n/* WARNING: Removing unreachable block (ram,0x0010554f) */\n\nvoid FUNC_00105530(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105530",
            "entrypoint": "0x00105530",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105530": "FUNC_00105530"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105560": {
            "called": [
                "FUN_0010c228"
            ],
            "calling": [
                "FUN_001055e0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105584) */\n/* WARNING: Removing unreachable block (ram,0x00105590) */\n\nvoid FUNC_00105560(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105560",
            "entrypoint": "0x00105560",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105560": "FUNC_00105560"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001055a0": {
            "additional_data": {
                "FUNC_00105530": {
                    "clean_up_resources": 1,
                    "cleanup": 5,
                    "cleanup_function": 4,
                    "cleanup_module": 2,
                    "cleanup_resources": 6,
                    "deregister_code_clones": 1,
                    "deregister_tm_clones": 2,
                    "do_initialization": 1,
                    "finalize_process": 1,
                    "handle_initialization": 1,
                    "initialize": 1,
                    "perform_cleanup": 6
                },
                "FUN_001055a0": {
                    "cxa_finalize_and_deregister": 1,
                    "execute_initialization": 1,
                    "finalize_and_deregister": 1,
                    "initialize": 5,
                    "initialize_and_cleanup": 1,
                    "initialize_and_finalize": 1,
                    "initialize_application": 4,
                    "initialize_function": 5,
                    "initialize_if_not_done": 1,
                    "initialize_module": 2,
                    "initialize_program": 9
                }
            },
            "called": [
                "FUN_00105530",
                "FUN_00102440"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_001055a0(void)\n\n{\n  if (DAT_0010b720 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010b228);\n  deregister_tm_clones();\n  DAT_0010b720 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_001055a0",
            "entrypoint": "0x001055a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001055a0": "initialize_program_001055a0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001055e0": {
            "called": [
                "FUN_00105560"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_001055e0",
            "entrypoint": "0x001055e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001055f0": {
            "additional_data": {
                "DAT_0010b248": {
                    "options": 1
                },
                "FUN_001055f0": {
                    "decompile_binary": 1,
                    "decompiled_function": 1,
                    "parse_command_line_arguments": 2,
                    "process_files": 2
                },
                "STAT": {
                    "stat_result": 1
                },
                "_DAT_0010b810": {
                    "is_utf8": 1
                },
                "__ptr": {
                    "byte_pointer2": 1,
                    "byte_pointer3": 3,
                    "byte_pointer_2": 1,
                    "byte_pointer_3": 1,
                    "byte_pointer_ptr": 1,
                    "byte_ptr": 1,
                    "byte_ptr2": 2,
                    "byte_ptr3": 3,
                    "byte_ptr_3": 1,
                    "cleaned_buffer": 1,
                    "cleaned_content": 1,
                    "final_string": 1,
                    "line": 1,
                    "new_byte_array": 1,
                    "new_byte_pointer": 1,
                    "new_bytes": 1,
                    "new_pointer": 1,
                    "processed_data": 1,
                    "ptr": 1,
                    "result": 1
                },
                "__rv_1": {
                    "return_val1": 1
                },
                "__rv_2": {
                    "return_val2": 1
                },
                "__s": {
                    "buffer": 3,
                    "byte_array": 1,
                    "byte_pointer1": 1,
                    "byte_pointer2": 4,
                    "byte_pointer_2": 1,
                    "byte_pointer_s": 1,
                    "byte_ptr": 3,
                    "byte_ptr2": 2,
                    "byte_ptr3": 1,
                    "byte_ptr4": 1,
                    "byte_ptr_2": 1,
                    "byte_stream": 1,
                    "bytes": 1,
                    "file_content": 1,
                    "file_contents": 3,
                    "file_data": 2
                },
                "__src": {
                    "dynamic_array": 1,
                    "file_data_new": 1,
                    "line_starts": 1,
                    "long_pointer": 3,
                    "long_pointer1": 3,
                    "long_pointer_1": 1,
                    "long_pointer_src": 1,
                    "long_ptr": 4,
                    "long_ptr1": 1,
                    "long_ptr_1": 1,
                    "long_var_ptr1": 1,
                    "new_long_array": 1,
                    "new_source": 1,
                    "ptr_arr": 1,
                    "source": 1,
                    "source_lines": 1,
                    "source_list": 1,
                    "src_ptr": 1
                },
                "__stream": {
                    "file": 2,
                    "file_pointer": 1,
                    "file_ptr": 3,
                    "file_ptr1": 1,
                    "file_stream": 20
                },
                "argc": {
                    "argc": 1
                },
                "argv": {
                    "argv": 1
                },
                "bVar2": {
                    "bool1": 1,
                    "byte_1": 1,
                    "byte_value": 1,
                    "byte_value1": 1,
                    "byte_var": 8,
                    "byte_var1": 1,
                    "byte_var2": 9,
                    "byte_var_2": 2,
                    "byte_variable_2": 1,
                    "condition1": 1,
                    "flag": 1,
                    "is_valid": 1
                },
                "bVar3": {
                    "bool2": 1,
                    "bool_1": 1,
                    "bool_val1": 1,
                    "bool_value1": 1,
                    "bool_var1": 10,
                    "bool_var3": 6,
                    "bool_var_1": 2,
                    "bool_var_3": 1,
                    "bool_variable_3": 1,
                    "boolean_1": 1,
                    "boolean_var3": 1,
                    "condition2": 1,
                    "is_escape": 1,
                    "is_flag_set": 1
                },
                "bVar4": {
                    "bool3": 1,
                    "bool_2": 1,
                    "bool_val2": 1,
                    "bool_value2": 1,
                    "bool_var2": 10,
                    "bool_var4": 6,
                    "bool_var_2": 2,
                    "bool_var_4": 1,
                    "bool_variable_4": 1,
                    "boolean_2": 1,
                    "boolean_var4": 1,
                    "condition3": 1,
                    "is_escaped": 1,
                    "is_single_quote": 1
                },
                "bVar5": {
                    "bool4": 1,
                    "bool_3": 1,
                    "bool_val3": 1,
                    "bool_value3": 1,
                    "bool_var3": 10,
                    "bool_var5": 6,
                    "bool_var_3": 2,
                    "bool_var_5": 1,
                    "bool_variable_5": 1,
                    "boolean_3": 1,
                    "boolean_var5": 1,
                    "condition4": 1,
                    "is_double_quote": 1,
                    "is_quoted": 1
                },
                "bVar7": {
                    "byte_1": 1,
                    "byte_2": 1,
                    "byte_value": 1,
                    "byte_value2": 1,
                    "byte_var2": 8,
                    "byte_var3": 2,
                    "byte_var7": 7,
                    "byte_var_2": 1,
                    "byte_var_3": 1,
                    "byte_var_7": 1,
                    "byte_variable_7": 1,
                    "char2": 2,
                    "curr_byte": 1,
                    "next_byte": 1,
                    "next_char": 1
                },
                "bfd_init": {
                    "init_bfd": 1
                },
                "bfd_plugin_set_program_name": {
                    "plugin_set_program_name": 1
                },
                "bfd_set_default_target": {
                    "set_default_target": 1
                },
                "bfd_set_error_program_name": {
                    "set_error_program_name": 1
                },
                "bindtextdomain": {
                    "bind_text_domain": 1
                },
                "cVar26": {
                    "error_message": 1
                },
                "cVar6": {
                    "c1": 1,
                    "char1": 2,
                    "char_1": 2,
                    "char_value1": 1,
                    "char_var1": 10,
                    "char_var6": 7,
                    "char_var_1": 2,
                    "char_var_6": 1,
                    "char_variable_6": 1,
                    "current_char": 2,
                    "exit_code": 1
                },
                "cVar8": {
                    "c2": 1,
                    "char3": 2,
                    "char_2": 2,
                    "char_value2": 1,
                    "char_var2": 10,
                    "char_var8": 7,
                    "char_var_2": 2,
                    "char_var_8": 1,
                    "char_variable_8": 1,
                    "demangle_style": 1,
                    "opt": 1,
                    "style_char": 1
                },
                "cVar9": {
                    "c3": 1,
                    "char4": 2,
                    "char_3": 2,
                    "char_value3": 1,
                    "char_var3": 10,
                    "char_var9": 7,
                    "char_var_3": 2,
                    "char_var_9": 1,
                    "char_variable_9": 1,
                    "locale_style": 1,
                    "opt_style": 1,
                    "option_char": 1
                },
                "dcgettext": {
                    "get_text": 1
                },
                "display_file": {
                    "display_file": 1
                },
                "fatal": {
                    "handle_fatal_error": 1
                },
                "fclose": {
                    "close_file": 1
                },
                "ferror": {
                    "check_file_error": 1
                },
                "fopen": {
                    "open_file": 1
                },
                "fread": {
                    "read_file": 1
                },
                "free": {
                    "free_memory": 1
                },
                "fseek": {
                    "set_file_position": 1
                },
                "ftell": {
                    "get_file_position": 1
                },
                "getopt_long": {
                    "get_long_option": 1
                },
                "iVar10": {
                    "count": 1,
                    "index": 5,
                    "index1": 1,
                    "index_var10": 1,
                    "int1": 1,
                    "int_1": 2,
                    "int_value1": 1,
                    "int_var": 1,
                    "int_var1": 6,
                    "int_var10": 5,
                    "int_var_1": 2,
                    "int_var_10": 1,
                    "int_variable_10": 1,
                    "return_value": 1,
                    "var_index1": 1
                },
                "iVar12": {
                    "count2": 1,
                    "counter": 1,
                    "i": 1,
                    "i_var12": 1,
                    "index2": 1,
                    "index3": 1,
                    "int2": 1,
                    "int_2": 2,
                    "int_value3": 1,
                    "int_var12": 4,
                    "int_var2": 6,
                    "int_var3": 1,
                    "int_var_12": 1,
                    "int_var_2": 1,
                    "int_variable_12": 1,
                    "iter": 1,
                    "iteration_index": 1,
                    "loop_var": 3,
                    "stat_result": 1,
                    "var_index2": 1
                },
                "iVar15": {
                    "array_index": 1,
                    "file_read_result": 1,
                    "int_ptr1": 2,
                    "int_ptr_2": 1,
                    "int_var15": 1,
                    "int_var3": 1
                },
                "iVar17": {
                    "loop_var1": 1
                },
                "iVar18": {
                    "loop_var2": 1
                },
                "iVar19": {
                    "loop_var3": 1
                },
                "iVar2": {
                    "int_3": 1
                },
                "iVar20": {
                    "init_res": 1
                },
                "iVar21": {
                    "set_res": 1
                },
                "iVar27": {
                    "int_ptr_1": 1,
                    "int_var_27": 1
                },
                "iVar28": {
                    "stat_result": 1
                },
                "iVar3": {
                    "int_4": 1,
                    "return_value1": 1
                },
                "iVar4": {
                    "int_5": 1
                },
                "iVar5": {
                    "int_6": 1
                },
                "iVar9": {
                    "return_value2": 1
                },
                "lVar17": {
                    "allocated_memory": 1,
                    "cleaned_line": 1,
                    "duplicate_string_result": 1,
                    "long1": 1,
                    "long_1": 1,
                    "long_val": 1,
                    "long_value1": 1,
                    "long_var": 5,
                    "long_var1": 5,
                    "long_var17": 6,
                    "long_var_1": 1,
                    "long_var_17": 1,
                    "long_variable_17": 1,
                    "new_var": 1
                },
                "lVar24": {
                    "current_file": 1,
                    "current_long": 1,
                    "file_data_index": 1,
                    "file_size": 3,
                    "long2": 1,
                    "long_2": 1,
                    "long_val1": 1,
                    "long_value2": 1,
                    "long_var1": 1,
                    "long_var2": 6,
                    "long_var24": 6,
                    "long_var_2": 2,
                    "long_var_24": 1,
                    "long_variable_24": 1,
                    "unaff_rbp2": 1
                },
                "lVar25": {
                    "file_pointer": 1
                },
                "local_108": {
                    "file_size_bytes": 1,
                    "line_length": 1,
                    "local_size": 4,
                    "local_size108": 1,
                    "local_size_t": 1,
                    "local_size_t_var1": 1,
                    "local_size_variable_108": 1,
                    "local_var108": 5,
                    "local_var3": 7,
                    "local_var_108": 1,
                    "local_var_3": 3,
                    "optarg_size": 1,
                    "size_t_2": 1,
                    "string_size": 1
                },
                "local_10c": {
                    "int_11": 1,
                    "iteration_count": 1,
                    "local_int10c": 1,
                    "local_int2": 4,
                    "local_int_var2": 1,
                    "local_int_variable_10c": 1,
                    "local_var10c": 5,
                    "local_var2": 7,
                    "local_var_1": 1,
                    "local_var_10c": 1,
                    "local_var_2": 3,
                    "loop_var2": 1,
                    "max_files": 1,
                    "max_params": 1
                },
                "local_110": {
                    "current_index": 1,
                    "error_counter": 1,
                    "int_10": 1,
                    "local_counter_1": 1,
                    "local_int1": 4,
                    "local_int110": 1,
                    "local_int_var1": 1,
                    "local_int_variable_110": 1,
                    "local_var1": 7,
                    "local_var110": 5,
                    "local_var_1": 3,
                    "local_var_110": 1,
                    "loop_var1": 1,
                    "param_counter": 1
                },
                "local_c8": {
                    "file_info": 1,
                    "file_stat": 3,
                    "file_stats": 1,
                    "file_status": 1,
                    "local_stat": 9,
                    "local_stat_c8": 1,
                    "local_stat_struct": 1,
                    "local_stat_variable_c8": 1,
                    "local_struct": 2,
                    "local_var4": 1,
                    "local_var_4": 1,
                    "stat_info": 1,
                    "stat_struct": 4,
                    "stat_var1": 1,
                    "stat_variable": 1
                },
                "memcpy": {
                    "copy_memory": 1
                },
                "memmove": {
                    "move_memory": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 1
                },
                "param_1": {
                    "argc": 9,
                    "count": 3,
                    "num_files": 15,
                    "num_of_args": 1,
                    "num_params": 3
                },
                "param_2": {
                    "argv": 9,
                    "file_lengths": 1,
                    "file_list": 2,
                    "file_names": 3,
                    "file_paths": 9,
                    "file_paths_arr": 1,
                    "files": 2,
                    "files_array": 1,
                    "param_array": 2,
                    "param_list": 1
                },
                "pbVar1": {
                    "byte_pointer": 2,
                    "byte_pointer1": 4,
                    "byte_pointer_1": 3,
                    "byte_ptr": 1,
                    "byte_ptr1": 5,
                    "byte_ptr_1": 2,
                    "byte_value": 1,
                    "current_byte": 2,
                    "current_char": 1,
                    "p_byte": 1,
                    "pointer_byte1": 1,
                    "ptr": 3,
                    "ptr1": 3,
                    "ptr_byte1": 1
                },
                "pbVar2": {
                    "byte_val": 1
                },
                "pbVar23": {
                    "byte_pointer3": 1,
                    "byte_pointer4": 3,
                    "byte_pointer_23": 1,
                    "byte_pointer_3": 1,
                    "byte_ptr": 4,
                    "byte_ptr2": 2,
                    "byte_ptr3": 2,
                    "byte_ptr4": 2,
                    "byte_ptr_23": 1,
                    "byte_ptr_4": 1,
                    "byte_var23": 1,
                    "bytes": 1,
                    "curr_byte_ptr": 1,
                    "current_address": 1,
                    "current_byte": 1,
                    "current_file": 1,
                    "current_file_content": 1,
                    "pointer_byte": 1,
                    "source_char": 1
                },
                "pbVar25": {
                    "byte_pointer4": 1,
                    "byte_pointer5": 3,
                    "byte_pointer_25": 1,
                    "byte_pointer_4": 2,
                    "byte_ptr": 1,
                    "byte_ptr2": 3,
                    "byte_ptr25": 1,
                    "byte_ptr4": 2,
                    "byte_ptr5": 2,
                    "byte_ptr_25": 1,
                    "byte_ptr_5": 1,
                    "bytes_new": 1,
                    "current_byte": 1,
                    "current_char": 1,
                    "new_byte_ptr": 1,
                    "next_byte": 1,
                    "updated_source_char": 1
                },
                "pcVar22": {
                    "char_pointer": 1,
                    "char_pointer1": 3,
                    "char_ptr": 1,
                    "char_ptr1": 2,
                    "char_ptr22": 1,
                    "current_path": 1,
                    "filename": 1,
                    "locale_setting": 1,
                    "optarg": 2,
                    "pointer_byte2": 1,
                    "str_ptr": 4,
                    "str_ptr1": 1,
                    "str_var": 3,
                    "str_var_3": 1,
                    "string_ptr": 1,
                    "string_var22": 1,
                    "string_var_1": 1,
                    "string_var_22": 1,
                    "string_variable_22": 1
                },
                "pcVar26": {
                    "char_pointer2": 3,
                    "char_ptr2": 2,
                    "char_ptr26": 1,
                    "err_msg": 1,
                    "err_str": 1,
                    "error_message": 2,
                    "error_message3": 1,
                    "error_string": 1,
                    "output_string": 1,
                    "print_str": 1,
                    "print_var": 1,
                    "str_ptr1": 1,
                    "str_ptr2": 2,
                    "str_var2": 1,
                    "str_var_4": 1,
                    "string_1": 1,
                    "string_ptr2": 1,
                    "string_var26": 1,
                    "string_var_2": 1,
                    "string_variable_26": 1
                },
                "piVar15": {
                    "bytes_read": 2,
                    "int_pointer": 1,
                    "int_pointer1": 5,
                    "int_pointer_1": 1,
                    "int_pointer_15": 1,
                    "int_ptr": 2,
                    "int_ptr1": 1,
                    "int_ptr15": 1,
                    "int_ptr2": 1,
                    "int_ptr_15": 1,
                    "int_ptr_3": 1,
                    "optarg": 1,
                    "optarg_pointer": 1,
                    "ptr_int1": 1,
                    "ptr_int15": 1,
                    "ptr_var15": 1,
                    "read_res": 1,
                    "read_result": 1
                },
                "piVar27": {
                    "int_pointer2": 1,
                    "int_pointer3": 5,
                    "int_pointer_2": 1,
                    "int_pointer_27": 1,
                    "int_pointer_3": 1,
                    "int_ptr2": 3,
                    "int_ptr3": 2,
                    "int_ptr_4": 1,
                    "loop_index2": 1,
                    "optarg": 1,
                    "optarg_ptr": 2,
                    "option_pointer": 1,
                    "option_string": 1,
                    "pi_var27": 1,
                    "ptr_int27": 1,
                    "ptr_int3": 1,
                    "string_var27": 1,
                    "temp_ptr": 1
                },
                "plVar18": {
                    "arguments": 1,
                    "current_file": 1,
                    "current_file_path": 1,
                    "file_list": 1,
                    "file_names_pointer": 1,
                    "file_names_ptr": 1,
                    "file_paths": 1,
                    "file_paths_arr2": 1,
                    "file_paths_pointer": 1,
                    "file_paths_ptr": 2,
                    "files": 1,
                    "input_array": 1,
                    "long_pointer2": 4,
                    "long_pointer_18": 1,
                    "long_pointer_2": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 1,
                    "long_var_ptr2": 1,
                    "param_2": 1,
                    "param_2_copy": 1,
                    "param_array_pointer": 1,
                    "param_list_ptr": 1,
                    "param_ptr": 1,
                    "ptr_arr1": 1,
                    "ptr_var18": 1
                },
                "plVar19": {
                    "cleaned_lines": 1,
                    "current_long_pointer": 1,
                    "destination_file_path": 1,
                    "file_names_pointer2": 1,
                    "file_paths_arr3": 1,
                    "file_paths_new": 1,
                    "file_paths_pointer2": 1,
                    "file_paths_ptr_2": 1,
                    "long_pointer3": 4,
                    "long_pointer_19": 1,
                    "long_pointer_3": 1,
                    "long_ptr19": 1,
                    "long_ptr2": 1,
                    "long_ptr3": 1,
                    "long_var_ptr3": 1,
                    "new_ptr": 1,
                    "output_array": 1,
                    "param_array_pointer2": 1,
                    "param_list_ptr2": 1,
                    "param_ptr2": 1,
                    "param_ptr_19": 1,
                    "prev_file": 1,
                    "ptr_arr2": 1,
                    "ptr_var19": 1,
                    "temp_ptr": 1,
                    "updated_arguments": 1
                },
                "pointer26": {
                    "pointer_byte4": 1
                },
                "pointer50": {
                    "pointer_to_memory2": 1
                },
                "pointerByte23": {
                    "pointer_byte3": 1
                },
                "sVar16": {
                    "buffer_size": 1,
                    "file_size": 3,
                    "size": 5,
                    "size_t_1": 1,
                    "size_t_value1": 1,
                    "size_t_var": 3,
                    "size_t_var1": 1,
                    "size_t_var16": 2,
                    "size_t_var_16": 1,
                    "size_var": 3,
                    "size_var1": 1,
                    "size_var16": 5,
                    "size_variable_16": 1
                },
                "setlocale": {
                    "set_locale": 1
                },
                "textdomain": {
                    "text_domain": 1
                },
                "uVar11": {
                    "count": 1,
                    "counter1": 1,
                    "file_index": 1,
                    "index": 1,
                    "index2": 1,
                    "int_value2": 1,
                    "int_var11": 1,
                    "loop_var11": 1,
                    "new_index": 1,
                    "result": 1,
                    "uint1": 1,
                    "uint_1": 2,
                    "uint_var": 5,
                    "uint_var1": 3,
                    "uint_var11": 5,
                    "uint_var_1": 1,
                    "uint_var_11": 1,
                    "uint_variable_11": 1,
                    "unsigned_var": 1
                },
                "uVar13": {
                    "info1": 1,
                    "opt": 1,
                    "return_value1": 1,
                    "style_param": 1,
                    "u_var1": 1,
                    "uint_var13": 2,
                    "uint_var2": 4,
                    "uint_var_2": 1,
                    "uint_variable_13": 1,
                    "undefined4_value1": 1,
                    "unknown_value": 1
                },
                "uVar14": {
                    "info2": 1,
                    "radix": 1,
                    "radix_param": 1,
                    "radix_value": 1,
                    "return_value2": 1,
                    "u_var2": 1,
                    "uint_var14": 2,
                    "uint_var3": 4,
                    "uint_var_3": 1,
                    "uint_variable_14": 1,
                    "undefined4_value2": 1
                },
                "uVar20": {
                    "error_message": 2,
                    "error_message1": 1,
                    "fetched_string": 1,
                    "get_string": 1,
                    "loc_var1": 1,
                    "long_ptr_20": 1,
                    "long_var20": 1,
                    "result_var1": 2,
                    "result_var_1": 1,
                    "str_var_1": 1,
                    "u_var20": 1,
                    "uint_var20": 2,
                    "uint_var4": 1,
                    "uint_variable_20": 1,
                    "undefined8_1": 1,
                    "undefined8_value1": 1,
                    "undefined8_var": 1,
                    "undefined8_var20": 1,
                    "undefined_var1": 3,
                    "var1": 1
                },
                "uVar21": {
                    "copyright_message": 1,
                    "error_message": 1,
                    "error_message2": 1,
                    "get_string": 1,
                    "gettext_result": 1,
                    "loc_var2": 1,
                    "long_ptr_21": 1,
                    "long_var21": 1,
                    "result_var2": 2,
                    "result_var_2": 1,
                    "str_var_2": 1,
                    "u_var21": 1,
                    "uint_var21": 2,
                    "uint_var5": 1,
                    "uint_variable_21": 1,
                    "undefined8_2": 1,
                    "undefined8_value2": 1,
                    "undefined8_var2": 1,
                    "undefined8_var21": 1,
                    "undefined_var2": 3,
                    "var2": 1
                },
                "unaff_R12": {
                    "array_index": 1,
                    "counter_ptr": 1,
                    "current_file_pointer": 1,
                    "file_counter": 1,
                    "index2": 1,
                    "int_pointer": 1,
                    "int_pointer2": 5,
                    "int_pointer_2": 1,
                    "int_pointer_r12": 1,
                    "int_ptr2": 1,
                    "iter_ptr": 1,
                    "iteration_pointer": 1,
                    "loop_counter": 2,
                    "loop_index1": 1,
                    "loop_ptr": 1,
                    "ptr_int2": 1,
                    "ptr_int_r12": 1,
                    "result_ptr2": 1,
                    "source_index": 1,
                    "unaff_ptr2": 1,
                    "unaff_r12": 1
                },
                "unaff_RBP": {
                    "pointer_to_memory1": 1,
                    "ptr_undefined_rbp": 1,
                    "result": 4,
                    "result_ptr": 2,
                    "result_ptr1": 1,
                    "ret_val": 1,
                    "return_pointer": 2,
                    "return_val": 1,
                    "return_value": 1,
                    "return_value_ptr": 1,
                    "return_variable": 1,
                    "unaff_ptr": 1,
                    "undefined_pointer": 2,
                    "undefined_pointer1": 3,
                    "undefined_pointer_1": 1,
                    "undefined_pointer_rbp": 1,
                    "undefined_ptr1": 1,
                    "undefined_var": 1
                },
                "usage": {
                    "print_usage": 1
                },
                "useLocalVar109": {
                    "var_to_keep": 1
                },
                "xexit": {
                    "exit_program": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 1
                },
                "xrealloc": {
                    "reallocate_memory": 1
                },
                "xstrdup": {
                    "duplicate_string": 1
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102300",
                "FUN_001020d0",
                "FUN_00106300",
                "FUN_00102040",
                "FUN_00104370",
                "FUN_00102350",
                "FUN_00102280",
                "FUN_00106400",
                "FUN_00102200",
                "FUN_00102130",
                "FUN_00102230",
                "FUN_001022f0",
                "FUN_00102340",
                "FUN_001022d0",
                "FUN_00102270",
                "FUN_00102240",
                "FUN_001020a0",
                "FUN_001021e0",
                "FUN_00102170",
                "FUN_001022a0",
                "FUN_00102090",
                "FUN_00102140",
                "FUN_00102110",
                "FUN_001043d0",
                "FUN_00103ca0",
                "FUN_001023c0",
                "FUN_001021f0",
                "FUN_001020e0",
                "FUN_00102260",
                "FUN_00102150",
                "FUN_00102190",
                "FUN_00102100",
                "FUN_00102390",
                "FUN_001021a0",
                "FUN_00102310",
                "FUN_00102160",
                "FUN_001021d0",
                "FUN_00102290"
            ],
            "calling": [
                "FUN_00105500"
            ],
            "code": "\n\n\nundefined ** parse_command_line_arguments_001055f0(int num_files,long *argv)\n\n{\n  byte *byte_ptr1;\n  byte byte_var2;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var3;\n  char char_var1;\n  byte byte_var2;\n  char char_var2;\n  char char_var3;\n  int int_var1;\n  uint uint_var11;\n  int int_var2;\n  undefined4 uint_var2;\n  undefined4 uint_var3;\n  FILE *file_stream;\n  byte *byte_pointer2;\n  int *int_pointer1;\n  size_t size_var16;\n  byte *byte_ptr3;\n  long *long_ptr;\n  long long_var17;\n  long *long_pointer2;\n  long *long_pointer3;\n  undefined8 undefined_var1;\n  undefined8 undefined_var2;\n  char *str_ptr;\n  byte *byte_ptr;\n  undefined **result;\n  long long_var2;\n  byte *byte_ptr2;\n  char *char_pointer2;\n  int *int_pointer2;\n  int *int_pointer3;\n  int local_var1;\n  int local_var2;\n  size_t local_var3;\n  stat local_stat;\n  \n  set_locale(5,\"\");\n  set_locale(0,\"\");\n  str_ptr = \"binutils\";\n  set_locale(3,\"\");\n  bind_text_domain(\"binutils\",\"/usr/share/locale\");\n  text_domain(\"binutils\");\n  DAT_0010b820 = *argv;\n  set_program_name();\n  set_error_program_name(DAT_0010b820);\n  plugin_set_program_name(DAT_0010b820);\n  long_pointer2 = argv;\n  if (1 < num_files) {\n    local_var2 = 2000;\n    int_pointer2 = (int *)0x1;\n    local_var1 = 0;\n    do {\n      int_var2 = (int)int_pointer2;\n      result = (undefined **)(long)int_var2;\n      int_pointer3 = (int *)((long)result * 8);\n      if (*(char *)long_pointer2[(long)result] != '@') goto LAB_00105a70;\n      local_var2 = local_var2 + -1;\n      if (local_var2 == 0) {\n        long_var2 = *long_pointer2;\n        char_pointer2 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_00105f1d;\n      }\n      str_ptr = (char *)long_pointer2[(long)result] + 1;\n      int_var1 = stat(str_ptr,&local_stat);\n      if (int_var1 < 0) {\nLAB_00105a70:\n        if (num_files <= int_var2 + 1) break;\nLAB_00105a7a:\n        uint_var11 = int_var2 + 1;\n        local_var1 = int_var2;\n      }\n      else {\n        if ((local_stat.st_mode & 0xf000) == 0x4000) goto LAB_00105f13;\n        file_stream = open_file(str_ptr,\"r\");\n        if (file_stream == (FILE *)0x0) goto LAB_00105a70;\n        int_var1 = set_file_position(file_stream,0,2);\n        if (((int_var1 == -1) ||\n            (str_ptr = (char *)get_file_position(file_stream), (int *)str_ptr == (int *)0xffffffffffffffff)) ||\n           (int_var1 = set_file_position(file_stream,0,0), int_var1 == -1)) {\nLAB_00105ad0:\n          close_file(file_stream);\n          if (int_var2 + 1 < num_files) goto LAB_00105a7a;\n          break;\n        }\n        byte_pointer2 = (byte *)allocate_memory((char *)((long)str_ptr + 1));\n        int_pointer1 = (int *)read_file(byte_pointer2,1,(size_t)str_ptr,file_stream);\n        if (((int *)str_ptr != int_pointer1) && (int_var1 = check_file_error(file_stream), int_var1 != 0)) {\n          free_memory(byte_pointer2);\n          goto LAB_00105ad0;\n        }\n        byte_pointer2[(long)int_pointer1] = 0;\n        byte_var2 = *byte_pointer2;\n        byte_ptr = byte_pointer2;\n        if (byte_var2 != 0) {\nLAB_001057d0:\n          if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) goto LAB_001057c0;\n          size_var16 = strlen((char *)byte_pointer2);\n          byte_ptr3 = (byte *)allocate_memory(size_var16 + 1);\n          int_var1 = 0;\n          bool_var3 = false;\n          bool_var1 = false;\n          long_var2 = 0;\n          long_ptr = (long *)0x0;\n          bool_var2 = false;\n          byte_ptr = byte_pointer2;\n          do {\n            while (((&_sch_istable)[(ulong)*byte_ptr * 2] & 0x40) != 0) {\n              byte_ptr = byte_ptr + 1;\n            }\n            if ((int_var1 == 0) || (long_pointer3 = long_ptr + long_var2, int_var1 + -1 <= (int)long_var2)) {\n              if (long_ptr == (long *)0x0) {\n                int_var1 = 8;\n                long_ptr = (long *)allocate_memory(0x40);\n                long_pointer3 = long_ptr + long_var2;\n                *long_pointer3 = 0;\n              }\n              else {\n                int_var1 = int_var1 * 2;\n                long_ptr = (long *)reallocate_memory(long_ptr,(long)int_var1 << 3);\n                long_pointer3 = long_ptr + long_var2;\n                *long_pointer3 = 0;\n              }\n            }\n            byte_var2 = *byte_ptr;\n            byte_ptr2 = byte_ptr3;\n            while (byte_var2 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                   (!(bool)(bool_var3 | bool_var2 | bool_var1))) {\n                  bool_var2 = false;\n                  bool_var3 = false;\n                  bool_var1 = false;\n                  goto LAB_001058e0;\n                }\n                if (!bool_var2) break;\n                byte_ptr = byte_ptr + 1;\n                *byte_ptr2 = byte_var2;\n                byte_ptr2 = byte_ptr2 + 1;\n                bool_var2 = false;\n                byte_var2 = *byte_ptr;\n                if (byte_var2 == 0) goto LAB_001058e0;\n              }\n              if (byte_var2 == 0x5c) {\n                bool_var2 = true;\n              }\n              else if (bool_var1) {\n                if (byte_var2 == 0x27) {\n                  bool_var1 = false;\n                }\n                else {\nLAB_00105a55:\n                  *byte_ptr2 = byte_var2;\n                  byte_ptr2 = byte_ptr2 + 1;\n                }\n              }\n              else if (bool_var3) {\n                if (byte_var2 != 0x22) goto LAB_00105a55;\n                bool_var3 = false;\n              }\n              else if (byte_var2 == 0x27) {\n                bool_var1 = true;\n              }\n              else {\n                if (byte_var2 != 0x22) goto LAB_00105a55;\n                bool_var3 = true;\n              }\n              byte_ptr1 = byte_ptr + 1;\n              byte_ptr = byte_ptr + 1;\n              byte_var2 = *byte_ptr1;\n            }\nLAB_001058e0:\n            *byte_ptr2 = 0;\n            long_var17 = duplicate_string(byte_ptr3);\n            *long_pointer3 = long_var17;\n            long_ptr[long_var2 + 1] = 0;\n            byte_var2 = *byte_ptr;\n            byte_var2 = (&_sch_istable)[(ulong)byte_var2 * 2];\n            while ((byte_var2 & 0x40) != 0) {\n              byte_var2 = byte_ptr[1];\n              byte_ptr = byte_ptr + 1;\n              byte_var2 = (&_sch_istable)[(ulong)byte_var2 * 2];\n            }\n            long_var2 = long_var2 + 1;\n          } while (byte_var2 != 0);\n          free_memory(byte_ptr3);\n          long_pointer3 = long_pointer2;\n          if (argv == long_pointer2) goto LAB_00105c79;\n          goto LAB_0010597d;\n        }\nLAB_00105c5c:\n        long_ptr = (long *)allocate_memory(8);\n        *long_ptr = 0;\n        if (argv == long_pointer2) {\nLAB_00105c79:\n          if (*long_pointer2 == 0) {\n            int_var1 = 0;\n          }\n          else {\n            long_var2 = 1;\n            do {\n              int_var1 = (int)long_var2;\n              long_pointer3 = long_pointer2 + long_var2;\n              long_var2 = long_var2 + 1;\n            } while (*long_pointer3 != 0);\n          }\n          long_var17 = 0;\n          long_pointer3 = (long *)allocate_memory((long)(int_var1 + 1) << 3);\n          long_var2 = *long_pointer2;\n          while (long_var2 != 0) {\n            undefined_var1 = duplicate_string();\n            *(undefined8 *)((long)long_pointer3 + long_var17) = undefined_var1;\n            long_var17 = long_var17 + 8;\n            long_var2 = *(long *)((long)long_pointer2 + long_var17);\n          }\n          *(undefined8 *)((long)long_pointer3 + long_var17) = 0;\nLAB_0010597d:\n          long_pointer2 = long_pointer3;\n          if (*long_ptr == 0) goto LAB_00105d50;\n          str_ptr = (char *)0x0;\n          do {\n            str_ptr = (char *)((long)str_ptr + 1);\n          } while (long_ptr[(long)str_ptr] != 0);\n          local_var3 = (long)str_ptr * 8;\n        }\n        else {\nLAB_00105d50:\n          str_ptr = (char *)0x0;\n          local_var3 = 0;\n        }\n        free_memory((void *)long_pointer2[(long)result]);\n        long_pointer2 = (long *)reallocate_memory(long_pointer2,(long)((long)str_ptr + (long)num_files + 1) * 8);\n        int_var1 = num_files + -1 + (int)str_ptr;\n        move_memory(long_pointer2 + (long)(undefined **)((long)result + (long)str_ptr),\n                long_pointer2 + 1 + (long)result,(long)(num_files - int_var2) << 3);\n        copy_memory(long_pointer2 + (long)result,long_ptr,local_var3);\n        free_memory(long_ptr);\n        free_memory(byte_pointer2);\n        close_file(file_stream);\n        uint_var11 = local_var1 + 1;\n        result = (undefined **)((long)result + (long)str_ptr);\n        int_pointer2 = int_pointer3;\n        num_files = int_var1;\n        if (int_var1 <= (int)uint_var11) break;\n      }\n      int_pointer2 = (int *)(ulong)uint_var11;\n    } while( true );\n  }\n  int_var2 = init_bfd();\n  char_pointer2 = \"handle_fatal_error error: libbfd ABI mismatch\";\n  if (int_var2 != 0x118) goto LAB_00106085;\n  result = &PTR_s_debug_syms_0010b280;\n  char_var2 = set_default_target(\"x86_64-pc-linux-gnu\",\"handle_fatal_error error: libbfd ABI mismatch\",5);\n  str_ptr = \"aABCDef:gHhjJlnopPrSst:uU:vVvWX:\";\n  int_pointer2 = (int *)\"x86_64-pc-linux-gnu\";\n  char_var3 = DAT_0010b23b;\n  char_var1 = DAT_0010b240;\n  uint_var3 = DAT_0010b244;\n  if (char_var2 != '\\0') {\nswitchD_00105c5a_caseD_0:\n    DAT_0010b244 = uint_var3;\n    DAT_0010b240 = char_var1;\n    DAT_0010b23b = char_var3;\n    uint_var2 = get_long_option(num_files,long_pointer2,str_ptr);\n    int_pointer3 = _optarg;\n    int_pointer1 = (int *)str_ptr;\n    char_var3 = DAT_0010b23b;\n    char_var1 = DAT_0010b240;\n    uint_var3 = DAT_0010b244;\n    switch(uint_var2) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x54:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x69:\n    case 0x6b:\n    case 0x6d:\n    case 0x71:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x87:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n    case 0xa1:\n    case 0xa2:\n    case 0xa3:\n    case 0xa4:\n    case 0xa5:\n    case 0xa6:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n    case 0xaa:\n    case 0xab:\n    case 0xac:\n    case 0xad:\n    case 0xae:\n    case 0xaf:\n    case 0xb0:\n    case 0xb1:\n    case 0xb2:\n    case 0xb3:\n    case 0xb4:\n    case 0xb5:\n    case 0xb6:\n    case 0xb7:\n    case 0xb8:\n    case 0xb9:\n    case 0xba:\n    case 0xbb:\n    case 0xbc:\n    case 0xbd:\n    case 0xbe:\n    case 0xbf:\n    case 0xc0:\n    case 0xc1:\n    case 0xc2:\n    case 0xc3:\n    case 0xc4:\n    case 0xc5:\n    case 0xc6:\n    case 199:\n      print_usage(_stderr,1);\n      int_pointer3 = int_pointer2;\nLAB_001061d5:\n      int_var2 = strcmp((char *)int_pointer3,\"l\");\n      if (int_var2 == 0) goto LAB_001061a3;\n      int_var2 = strcmp((char *)int_pointer3,\"escape\");\n      int_pointer2 = int_pointer3;\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"e\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 2;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var2 = strcmp((char *)int_pointer3,\"invalid\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"i\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 5;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var2 = strcmp((char *)int_pointer3,\"hex\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"x\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 3;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var2 = strcmp((char *)int_pointer3,\"highlight\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"h\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 4;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      char_pointer2 = \"invalid argument to -U/--unicode: %s\";\n      break;\n    case 0x41:\n    case 0x6f:\n      DAT_0010b818 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x42:\n      set_output_format(&DAT_00107033);\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x43:\n      goto switchD_00105c5a_caseD_43;\n    case 0x44:\n      DAT_0010b80c = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x48:\n    case 0x68:\n      print_usage(_stdout,0);\nswitchD_00105c5a_caseD_43:\n      int_pointer2 = (int *)&optarg;\n      DAT_0010b814 = 1;\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      if (_optarg != (int *)0x0) {\n        int_var2 = cplus_demangle_name_to_style();\n        int_pointer1 = _optarg;\n        if (int_var2 == 0) {\n          undefined_var1 = get_text(0,\"unknown demangling style `%s\\'\",5);\n          handle_fatal_error(undefined_var1,int_pointer1);\nswitchD_00105c5a_caseD_cc:\n          DAT_0010b248 = DAT_0010b248 | 0x40000;\n          str_ptr = (char *)int_pointer1;\n          char_var3 = DAT_0010b23b;\n          char_var1 = DAT_0010b240;\n          uint_var3 = DAT_0010b244;\n        }\n        else {\n          cplus_demangle_set_style();\n          char_var3 = DAT_0010b23b;\n          char_var1 = DAT_0010b240;\n          uint_var3 = DAT_0010b244;\n        }\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x50:\n      set_output_format(\"posix\");\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x53:\n      DAT_0010b7ec = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x55:\n      DAT_0010b7e4 = 1;\n      DAT_0010b7e8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x56:\n      goto switchD_00105c5a_caseD_56;\n    case 0x57:\n      DAT_0010b7d8 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x58:\n      int_var2 = strcmp((char *)_optarg,\"32_64\");\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      if (int_var2 != 0) {\n        char_pointer2 = \"Only -X 32_64 is supported\";\nLAB_00106085:\n        undefined_var1 = get_text(0,char_pointer2,5);\n        handle_fatal_error(undefined_var1);\nswitchD_00105c5a_caseD_56:\n        DAT_0010b7dc = 1;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x61:\n      DAT_0010b81c = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x66:\n      set_output_format(_optarg);\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x67:\n      DAT_0010b808 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6a:\n      set_output_format(\"just-symbols\");\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6c:\n      DAT_0010b804 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6e:\n    case 0x76:\n      DAT_0010b7fc = 1;\n      DAT_0010b800 = 0;\n      DAT_0010b7f8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x70:\n      DAT_0010b800 = 1;\n      DAT_0010b7fc = 0;\n      DAT_0010b7f8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x72:\n      DAT_0010b7f4 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x73:\n      _DAT_0010b7f0 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x74:\n      char_var3 = *(char *)_optarg;\n      int_pointer2 = int_pointer3;\n      char_var1 = char_var3;\n      uint_var3 = 10;\n      if (char_var3 == 'd') goto switchD_00105c5a_caseD_0;\n      if ('c' < char_var3) {\n        if (char_var3 == 'o') {\n          uint_var3 = 8;\n          goto switchD_00105c5a_caseD_0;\n        }\n        if (char_var3 == 'x') {\n          uint_var3 = 0x10;\n          goto switchD_00105c5a_caseD_0;\n        }\n      }\n      char_pointer2 = \"%s: invalid radix\";\n      break;\n    case 0x75:\n      DAT_0010b7e8 = 1;\n      DAT_0010b7e4 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 200:\n      DAT_0010b7d0 = _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xc9:\n      bfd_plugin_set_plugin(_optarg);\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0xca:\n      DAT_0010b7f8 = 1;\n      DAT_0010b800 = 0;\n      DAT_0010b7fc = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcb:\n      DAT_0010b248 = DAT_0010b248 & 0xfffbffff;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcc:\n      goto switchD_00105c5a_caseD_cc;\n    case 0xcd:\n      DAT_0010b7c8 = _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xce:\n      int_var2 = strcmp((char *)_optarg,\"default\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"d\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 0;\n        int_pointer2 = int_pointer3;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n      }\n      else {\n        int_var2 = strcmp((char *)int_pointer3,\"locale\");\n        if (int_var2 != 0) goto LAB_001061d5;\nLAB_001061a3:\n        DAT_0010b7e0 = 1;\n        int_pointer2 = int_pointer3;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0xcf:\n      goto switchD_00105c5a_caseD_cf;\n    default:\n      goto code_r0x00105b40;\n    }\n    undefined_var1 = get_text(0,char_pointer2,5);\n    handle_fatal_error(undefined_var1,int_pointer3);\nLAB_00105f13:\n    long_var2 = *long_pointer2;\n    char_pointer2 = \"%s: error: @-file refers to a directory\\n\";\nLAB_00105f1d:\n    fprintf(_stderr,char_pointer2,long_var2);\n    exit_program(1);\n    goto LAB_00105f38;\n  }\n  uint_var3 = bfd_get_error();\n  undefined_var1 = bfd_errmsg(uint_var3);\n  undefined_var2 = get_text(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n  handle_fatal_error(undefined_var2,\"x86_64-pc-linux-gnu\",undefined_var1);\n  goto LAB_0010613c;\nLAB_001057c0:\n  byte_var2 = byte_ptr[1];\n  byte_ptr = byte_ptr + 1;\n  if (byte_var2 == 0) goto LAB_00105c5c;\n  goto LAB_001057d0;\nswitchD_00105c5a_caseD_cf:\n  _DAT_0010b810 = 1;\n  goto switchD_00105c5a_caseD_0;\ncode_r0x00105b40:\n  result = (undefined **)(ulong)DAT_0010b7dc;\n  if (DAT_0010b7dc != 0) {\n    printf(\"GNU %s %s\\n\",&DAT_001070c6,\"(GNU Binutils for Debian) 2.40\");\n    str_ptr = (char *)get_text(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n    printf(str_ptr);\n    str_ptr = (char *)get_text(0,\n                                \"This program is free_memory software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                ,5);\n    printf(str_ptr);\n                    \n    exit(0);\n  }\n  if ((DAT_0010b7f8 != 0) && (DAT_0010b7e8 != 0)) {\n    undefined_var1 = get_text(0,\"Using the --size-sort and --undefined-only options together\",5);\n    handle_non_fatal_error(undefined_var1);\n    undefined_var1 = get_text(0,\"will produce no output, since undefined symbols have no size.\",5);\n    handle_non_fatal_error(undefined_var1);\n    return result;\n  }\n  str_ptr = &optind;\n  if (_optind != num_files) {\n    if (1 < num_files - _optind) {\nLAB_00105f38:\n      _DAT_0010b7c4 = 1;\n    }\n    while( true ) {\n      int_var2 = *(int *)str_ptr;\n      if (num_files <= int_var2) break;\n      long_var2 = long_pointer2[int_var2];\n      *(int *)str_ptr = int_var2 + 1;\n      char_var3 = display_file(long_var2);\n      if (char_var3 != '\\0') {\n        int_var2 = *(int *)str_ptr;\n        if (num_files <= int_var2) break;\n        long_var2 = long_pointer2[int_var2];\n        *(int *)str_ptr = int_var2 + 1;\n        char_var3 = display_file(long_var2);\n        if (char_var3 != '\\0') {\n          int_var2 = *(int *)str_ptr;\n          while( true ) {\n            if (num_files <= int_var2) goto LAB_00105bdd;\n            long_var2 = long_pointer2[int_var2];\n            *(int *)str_ptr = int_var2 + 1;\n            char_var3 = display_file(long_var2);\n            if (char_var3 == '\\0') break;\n            int_var2 = *(int *)str_ptr;\n          }\n        }\n      }\n      result = (undefined **)(ulong)((int)result + 1);\n    }\nLAB_00105bdd:\n                    \n    exit((int)result);\n  }\nLAB_0010613c:\n  uint_var11 = display_file(\"a.out\");\n  return (undefined **)(ulong)((uint_var11 ^ 1) & 0xff);\n}\n\n",
            "current_name": "parse_command_line_arguments_001055f0",
            "entrypoint": "0x001055f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001055f0": "parse_command_line_arguments_001055f0",
                "__ptr": "byte_ptr3",
                "__s": "byte_pointer2",
                "__src": "long_ptr",
                "__stream": "file_stream",
                "bVar2": "byte_var2",
                "bVar3": "bool_var1",
                "bVar4": "bool_var2",
                "bVar5": "bool_var3",
                "bVar7": "byte_var2",
                "bfd_init": "init_bfd",
                "bfd_plugin_set_program_name": "plugin_set_program_name",
                "bfd_set_default_target": "set_default_target",
                "bfd_set_error_program_name": "set_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar26": "error_message",
                "cVar6": "char_var1",
                "cVar8": "char_var2",
                "cVar9": "char_var3",
                "dcgettext": "get_text",
                "fatal": "handle_fatal_error",
                "fclose": "close_file",
                "ferror": "check_file_error",
                "fopen": "open_file",
                "fread": "read_file",
                "free": "free_memory",
                "fseek": "set_file_position",
                "ftell": "get_file_position",
                "getopt_long": "get_long_option",
                "iVar10": "int_var1",
                "iVar12": "int_var2",
                "iVar15": "int_ptr1",
                "iVar2": "int_3",
                "iVar27": "int_var_27",
                "lVar17": "long_var17",
                "lVar24": "long_var2",
                "local_108": "local_var3",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "local_stat",
                "memcpy": "copy_memory",
                "memmove": "move_memory",
                "non_fatal": "handle_non_fatal_error",
                "param_1": "num_files",
                "param_2": "argv",
                "pbVar1": "byte_ptr1",
                "pbVar2": "byte_val",
                "pbVar23": "byte_ptr",
                "pbVar25": "byte_ptr2",
                "pcVar22": "str_ptr",
                "pcVar26": "char_pointer2",
                "piVar15": "int_pointer1",
                "piVar27": "int_pointer3",
                "plVar18": "long_pointer2",
                "plVar19": "long_pointer3",
                "sVar16": "size_var16",
                "setlocale": "set_locale",
                "textdomain": "text_domain",
                "uVar11": "uint_var11",
                "uVar13": "uint_var2",
                "uVar14": "uint_var3",
                "uVar20": "undefined_var1",
                "uVar21": "undefined_var2",
                "unaff_R12": "int_pointer2",
                "unaff_RBP": "result",
                "usage": "print_usage",
                "xexit": "exit_program",
                "xmalloc": "allocate_memory",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "reallocate_memory",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001062d0": {
            "additional_data": {
                "DAT_0010b818": {
                    "condition2": 1,
                    "flag_2": 2,
                    "is_additional_check_passed": 1,
                    "print_flag": 1
                },
                "FUN_001062d0": {
                    "print_function": 2,
                    "print_if_condition_met": 7,
                    "print_if_condition_satisfied": 1,
                    "print_if_enabled": 3,
                    "print_if_initialized": 2,
                    "print_if_logged_in": 1,
                    "print_if_not_disabled": 1,
                    "print_if_not_empty": 1,
                    "print_message": 3,
                    "print_message_if_active": 1,
                    "print_message_if_conditions_met": 1,
                    "print_message_if_enabled": 1,
                    "print_message_if_flag_set": 2,
                    "print_or_return": 1,
                    "print_or_return_if_not_allowed": 1,
                    "print_param_if_valid": 1,
                    "print_param_message": 1,
                    "print_parameter_value": 1
                },
                "_DAT_0010b7c4": {
                    "active_flag": 1,
                    "condition1": 1,
                    "flag_1": 2,
                    "is_printing_enabled": 1
                },
                "param_1": {
                    "message": 30,
                    "value": 1
                },
                "printf": {
                    "print": 1
                }
            },
            "called": [
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_message_if_conditions_met_001062d0(undefined8 message)\n\n{\n  if ((_DAT_0010b7c4 != 0) && (DAT_0010b818 == 0)) {\n    print(\"\\n%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_conditions_met_001062d0",
            "entrypoint": "0x001062d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001062d0": "print_message_if_conditions_met_001062d0",
                "param_1": "message",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106300": {
            "additional_data": {
                "FUN_00106300": {
                    "print_error": 1,
                    "print_error_message": 14,
                    "process_and_report_error": 1,
                    "report_and_exit": 4,
                    "report_and_print_error": 4,
                    "report_error": 3
                },
                "FUN_001063a0": {
                    "report": 1
                },
                "__arg": {
                    "arg": 4,
                    "arg_array": 3,
                    "arg_pointer": 1,
                    "arg_ptr": 2,
                    "args": 6,
                    "argument": 1,
                    "arguments": 4,
                    "buffer": 1,
                    "error_code_array": 1,
                    "local_arg": 2,
                    "local_args": 3,
                    "local_arguments": 1,
                    "local_array": 1
                },
                "__format": {
                    "error_msg": 1,
                    "format": 8,
                    "format_str": 5,
                    "format_string": 14,
                    "message_format": 1,
                    "string_pointer": 1
                },
                "in_AL": {
                    "condition": 5,
                    "flag": 20,
                    "input_flag": 2,
                    "is_error": 1
                },
                "local18": {
                    "input_8_copy": 1
                },
                "local_18": {
                    "arg8_copy": 1,
                    "condition_param8": 1,
                    "error_code8_dup": 1,
                    "error_message8_copy": 1,
                    "input_16": 1,
                    "input_8_copy": 1,
                    "input_param8_copy": 1,
                    "local_arg8": 1,
                    "local_arg_8": 1,
                    "local_param13": 1,
                    "local_param8": 1,
                    "local_param_8": 2,
                    "local_var13": 1,
                    "local_var16": 1,
                    "local_var17": 1,
                    "local_var_13": 1,
                    "local_var_18": 1,
                    "local_var_8": 1,
                    "local_variable_17": 1,
                    "param8": 2,
                    "param8_2": 1,
                    "param8_copy": 1,
                    "param8_local": 1,
                    "temp_var8": 1,
                    "val13": 1,
                    "var13": 1,
                    "var8": 1
                },
                "local_28": {
                    "arg7_copy": 1,
                    "condition_param7": 1,
                    "error_code7_dup": 1,
                    "error_message7_copy": 1,
                    "input_15": 1,
                    "input_7_copy": 2,
                    "input_param7_copy": 1,
                    "local_arg7": 1,
                    "local_arg_7": 1,
                    "local_param12": 1,
                    "local_param7": 1,
                    "local_param_7": 2,
                    "local_var12": 1,
                    "local_var15": 1,
                    "local_var16": 1,
                    "local_var_12": 1,
                    "local_var_28": 1,
                    "local_var_7": 1,
                    "local_variable_16": 1,
                    "param7": 2,
                    "param7_2": 1,
                    "param7_copy": 1,
                    "param7_local": 1,
                    "temp_var7": 1,
                    "val12": 1,
                    "var12": 1,
                    "var7": 1
                },
                "local_38": {
                    "arg6_copy": 1,
                    "condition_param6": 1,
                    "error_code6_dup": 1,
                    "error_message6_copy": 1,
                    "input_14": 1,
                    "input_6_copy": 2,
                    "input_param6_copy": 1,
                    "local_arg6": 1,
                    "local_arg_6": 1,
                    "local_param11": 1,
                    "local_param6": 1,
                    "local_param_6": 2,
                    "local_var11": 1,
                    "local_var14": 1,
                    "local_var15": 1,
                    "local_var_11": 1,
                    "local_var_38": 1,
                    "local_var_6": 1,
                    "local_variable_15": 1,
                    "param6": 2,
                    "param6_2": 1,
                    "param6_copy": 1,
                    "param6_local": 1,
                    "temp_var6": 1,
                    "val11": 1,
                    "var11": 1,
                    "var6": 1
                },
                "local_48": {
                    "arg5_copy": 1,
                    "condition_param5": 1,
                    "error_code5_dup": 1,
                    "error_message5_copy": 1,
                    "input_13": 1,
                    "input_5_copy": 2,
                    "input_param5_copy": 1,
                    "local_arg5": 1,
                    "local_arg_5": 1,
                    "local_param10": 1,
                    "local_param5": 1,
                    "local_param_5": 2,
                    "local_var10": 1,
                    "local_var13": 1,
                    "local_var14": 1,
                    "local_var_10": 1,
                    "local_var_48": 1,
                    "local_var_5": 1,
                    "local_variable_14": 1,
                    "param5": 2,
                    "param5_2": 1,
                    "param5_copy": 1,
                    "param5_local": 1,
                    "temp_var5": 1,
                    "val10": 1,
                    "var10": 1,
                    "var5": 1
                },
                "local_58": {
                    "arg4_copy": 1,
                    "condition_param4": 1,
                    "error_code4_dup": 1,
                    "error_message4_copy": 1,
                    "input_12": 1,
                    "input_4_copy": 2,
                    "input_param4_copy": 1,
                    "local_arg4": 1,
                    "local_arg_4": 1,
                    "local_param4": 1,
                    "local_param9": 1,
                    "local_param_4": 2,
                    "local_var12": 1,
                    "local_var13": 1,
                    "local_var9": 1,
                    "local_var_4": 1,
                    "local_var_58": 1,
                    "local_var_9": 1,
                    "local_variable_13": 1,
                    "param4": 2,
                    "param4_2": 1,
                    "param4_copy": 1,
                    "param4_local": 1,
                    "temp_var4": 1,
                    "val9": 1,
                    "var4": 1,
                    "var9": 1
                },
                "local_68": {
                    "arg3_copy": 1,
                    "condition_param3": 1,
                    "error_code3_dup": 1,
                    "error_message3_copy": 1,
                    "input_11": 1,
                    "input_3_copy": 2,
                    "input_param3_copy": 1,
                    "local_arg3": 1,
                    "local_arg_3": 1,
                    "local_param3": 1,
                    "local_param8": 1,
                    "local_param_3": 2,
                    "local_var11": 1,
                    "local_var12": 1,
                    "local_var8": 1,
                    "local_var_3": 1,
                    "local_var_68": 1,
                    "local_var_8": 1,
                    "local_variable_12": 1,
                    "param3": 2,
                    "param3_2": 1,
                    "param3_copy": 1,
                    "param3_local": 1,
                    "temp_var3": 1,
                    "val8": 1,
                    "var3": 1,
                    "var8": 1
                },
                "local_78": {
                    "arg2_copy": 1,
                    "condition_param2": 1,
                    "error_code2_dup": 1,
                    "error_message2_copy": 1,
                    "input_10": 1,
                    "input_2_copy": 2,
                    "input_param2_copy": 1,
                    "local_arg2": 1,
                    "local_arg_2": 1,
                    "local_param2": 1,
                    "local_param7": 1,
                    "local_param_2": 2,
                    "local_var10": 1,
                    "local_var11": 1,
                    "local_var7": 1,
                    "local_var_2": 1,
                    "local_var_7": 1,
                    "local_var_78": 1,
                    "local_variable_11": 1,
                    "param2": 2,
                    "param2_2": 1,
                    "param2_copy": 1,
                    "param2_local": 1,
                    "temp_var2": 1,
                    "val7": 1,
                    "var2": 1,
                    "var7": 1
                },
                "local_88": {
                    "condition_param1": 1,
                    "error_code": 2,
                    "error_code1_dup": 1,
                    "error_code2": 1,
                    "error_code_copy": 2,
                    "error_code_local": 1,
                    "error_message1_copy": 1,
                    "input_1_copy": 2,
                    "input_9": 1,
                    "input_param1_copy": 1,
                    "local_arg1": 1,
                    "local_arg_1": 1,
                    "local_param1": 1,
                    "local_param6": 1,
                    "local_param_1": 2,
                    "local_var10": 1,
                    "local_var6": 1,
                    "local_var9": 1,
                    "local_var_1": 1,
                    "local_var_6": 1,
                    "local_var_88": 1,
                    "local_variable_10": 1,
                    "temp_var1": 1,
                    "val6": 1,
                    "var1": 1,
                    "var6": 1
                },
                "local_90": {
                    "arg5_value": 1,
                    "arg6_local": 1,
                    "argument_5": 1,
                    "fifth_long_val": 1,
                    "local_arg_14": 1,
                    "local_param14": 2,
                    "local_param5": 1,
                    "local_param_14": 1,
                    "local_var5": 1,
                    "local_var7": 1,
                    "local_var8": 1,
                    "local_var9": 1,
                    "local_var_5": 1,
                    "local_var_90": 1,
                    "local_variable_9": 1,
                    "param14_copy": 2,
                    "param_14": 1,
                    "param_14_copy": 2,
                    "param_var5": 1,
                    "pointer_6_copy": 1,
                    "temp5": 1,
                    "temp_param5": 1,
                    "unused": 1,
                    "unused_arg5": 1,
                    "unused_var5": 1,
                    "unused_variable_5": 1,
                    "val5": 1,
                    "var5": 1
                },
                "local_98": {
                    "arg4_value": 1,
                    "arg5_local": 1,
                    "argument_4": 1,
                    "fourth_long_val": 1,
                    "local_arg_13": 1,
                    "local_param13": 2,
                    "local_param4": 1,
                    "local_param_13": 1,
                    "local_var4": 1,
                    "local_var6": 1,
                    "local_var7": 1,
                    "local_var8": 1,
                    "local_var_4": 1,
                    "local_var_98": 1,
                    "local_variable_8": 1,
                    "param13_copy": 2,
                    "param_13": 1,
                    "param_13_copy": 2,
                    "param_var4": 1,
                    "pointer_5_copy": 1,
                    "temp4": 1,
                    "temp_param4": 1,
                    "unused": 1,
                    "unused_arg4": 1,
                    "unused_var4": 1,
                    "unused_variable_4": 1,
                    "val4": 1,
                    "var4": 1
                },
                "local_a0": {
                    "arg3_value": 1,
                    "arg4_local": 1,
                    "argument_3": 1,
                    "local_arg_12": 1,
                    "local_param12": 2,
                    "local_param3": 1,
                    "local_param_12": 1,
                    "local_var3": 1,
                    "local_var5": 1,
                    "local_var6": 1,
                    "local_var7": 1,
                    "local_var_3": 1,
                    "local_var_a0": 1,
                    "local_variable_7": 1,
                    "param12_copy": 2,
                    "param_12": 1,
                    "param_12_copy": 2,
                    "param_var3": 1,
                    "pointer_4_copy": 1,
                    "temp3": 1,
                    "temp_param3": 1,
                    "third_long_val": 1,
                    "unused": 1,
                    "unused_arg3": 1,
                    "unused_var3": 1,
                    "unused_variable_3": 1,
                    "val3": 1,
                    "var3": 1
                },
                "local_a8": {
                    "arg2_value": 1,
                    "arg3_local": 1,
                    "argument_2": 1,
                    "local_arg_11": 1,
                    "local_param11": 2,
                    "local_param2": 1,
                    "local_param_11": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var6": 1,
                    "local_var_2": 1,
                    "local_var_a8": 1,
                    "local_variable_6": 1,
                    "param11_copy": 2,
                    "param_11": 1,
                    "param_11_copy": 2,
                    "param_var2": 1,
                    "pointer_3_copy": 1,
                    "second_long_val": 1,
                    "temp2": 1,
                    "temp_param2": 1,
                    "unused": 1,
                    "unused_arg2": 1,
                    "unused_var2": 1,
                    "unused_variable_2": 1,
                    "val2": 1,
                    "var2": 1
                },
                "local_b0": {
                    "arg1_value": 1,
                    "arg2_local": 1,
                    "argument_1": 1,
                    "first_long_val": 1,
                    "local_arg_10": 1,
                    "local_param1": 1,
                    "local_param10": 2,
                    "local_param_10": 1,
                    "local_var1": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var_1": 1,
                    "local_var_b0": 1,
                    "local_variable_5": 1,
                    "param10_copy": 2,
                    "param_10": 1,
                    "param_10_copy": 2,
                    "param_var1": 1,
                    "pointer_2_copy": 1,
                    "temp1": 1,
                    "temp_param1": 1,
                    "unused": 1,
                    "unused_arg1": 1,
                    "unused_var1": 1,
                    "unused_variable_1": 1,
                    "val1": 1,
                    "var1": 1
                },
                "local_b8": {
                    "buffer": 1,
                    "buffer1": 1,
                    "error_string": 1,
                    "local_arr_1": 1,
                    "local_array": 8,
                    "local_buffer": 9,
                    "local_data_buffer": 1,
                    "local_padding": 1,
                    "local_var_b8": 1,
                    "temp": 1,
                    "temp_buffer": 2,
                    "temporary_buffer": 2,
                    "unused_buffer": 1,
                    "unused_local_buffer": 1
                },
                "local_c8": {
                    "args_pointer": 1,
                    "buffer": 3,
                    "buffer2": 1,
                    "buffer_ptr": 1,
                    "local_array": 1,
                    "local_buffer": 12,
                    "local_ptr": 1,
                    "local_ptr2": 2,
                    "local_ptr_2": 2,
                    "local_var2": 1,
                    "local_var3": 2,
                    "local_var4": 1,
                    "local_var_c8": 1,
                    "local_variable_4": 1,
                    "ptr_to_local_var2": 1
                },
                "local_d0": {
                    "args_buffer": 1,
                    "buffer": 8,
                    "buffer1": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "local_buffer": 1,
                    "local_pointer": 1,
                    "local_ptr1": 2,
                    "local_ptr_1": 2,
                    "local_stack": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "local_var_d0": 1,
                    "local_variable_3": 1,
                    "output_pointer": 1,
                    "pointer": 2,
                    "pointer_to_stack": 1,
                    "ptr_to_local_var1": 1,
                    "stack_pointer": 1,
                    "stack_ptr1": 1,
                    "string_format": 1
                },
                "local_d4": {
                    "another_var": 1,
                    "arg2": 1,
                    "arg_2": 3,
                    "buffer_size": 1,
                    "constant": 3,
                    "constant_value": 1,
                    "count_2": 1,
                    "error_code4_local": 1,
                    "local_arg2": 1,
                    "local_param4": 1,
                    "local_value": 1,
                    "local_var1": 2,
                    "local_var2": 4,
                    "local_var_2": 1,
                    "local_var_d4": 1,
                    "local_variable_2": 1,
                    "loop_counter": 1,
                    "max_length": 1,
                    "param_length": 1,
                    "size": 1,
                    "value": 2,
                    "value2": 1
                },
                "local_d8": {
                    "arg1": 1,
                    "arg_1": 3,
                    "buffer_size": 2,
                    "count": 2,
                    "count_1": 1,
                    "error_code1_local": 1,
                    "error_code_ptr": 1,
                    "length": 2,
                    "local_arg1": 1,
                    "local_error_code": 3,
                    "local_var1": 4,
                    "local_var_1": 1,
                    "local_var_d8": 1,
                    "local_variable_1": 1,
                    "num_args": 1,
                    "num_arguments": 1,
                    "size": 3,
                    "size_of_arg_array": 1,
                    "value1": 1
                },
                "param_1": {
                    "arg1": 2,
                    "error_code": 17,
                    "error_code1": 1,
                    "error_message1": 1,
                    "error_type": 1,
                    "first_param": 2,
                    "function_param_1": 1,
                    "input_1": 3,
                    "input_param1": 1,
                    "param1": 1
                },
                "param_10": {
                    "arg1": 2,
                    "arg2": 1,
                    "arg9": 1,
                    "arg_10": 1,
                    "argument_1": 1,
                    "error_code": 1,
                    "error_code_2": 1,
                    "param10": 10,
                    "param9": 1,
                    "param_10": 4,
                    "param_variable2": 1,
                    "pointer_2": 1,
                    "second_long_param": 1,
                    "tenth_param": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1
                },
                "param_11": {
                    "arg10": 1,
                    "arg2": 2,
                    "arg3": 1,
                    "arg_1": 1,
                    "arg_11": 1,
                    "argument_2": 1,
                    "eleventh_param": 1,
                    "error_code_3": 1,
                    "param10": 1,
                    "param11": 10,
                    "param_11": 4,
                    "param_variable3": 1,
                    "pointer_3": 1,
                    "third_long_param": 1,
                    "unused_param3": 2,
                    "unused_param_3": 1
                },
                "param_12": {
                    "arg11": 1,
                    "arg3": 2,
                    "arg4": 1,
                    "arg_12": 1,
                    "arg_2": 1,
                    "argument_3": 1,
                    "error_code_4": 1,
                    "fourth_long_param": 1,
                    "param11": 1,
                    "param12": 10,
                    "param_12": 4,
                    "param_variable4": 1,
                    "pointer_4": 1,
                    "twelfth_param": 1,
                    "unused_param4": 2,
                    "unused_param_4": 1
                },
                "param_13": {
                    "arg12": 1,
                    "arg4": 2,
                    "arg5": 1,
                    "arg_13": 1,
                    "arg_3": 1,
                    "argument_4": 1,
                    "error_code_5": 1,
                    "fifth_long_param": 1,
                    "param12": 1,
                    "param13": 10,
                    "param_13": 4,
                    "param_variable5": 1,
                    "pointer_5": 1,
                    "thirteenth_param": 1,
                    "unused_param5": 2,
                    "unused_param_5": 1
                },
                "param_14": {
                    "arg13": 1,
                    "arg5": 2,
                    "arg6": 1,
                    "arg_14": 1,
                    "arg_4": 1,
                    "argument_5": 1,
                    "error_code_6": 1,
                    "fourteenth_param": 1,
                    "param13": 1,
                    "param14": 10,
                    "param_14": 4,
                    "param_variable6": 1,
                    "pointer_6": 1,
                    "sixth_long_param": 1,
                    "unused_param6": 2,
                    "unused_param_6": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 3,
                    "arg_2": 1,
                    "error_code2": 1,
                    "error_detail": 1,
                    "error_flag": 1,
                    "error_message2": 1,
                    "error_value": 1,
                    "function_param_2": 1,
                    "input_2": 3,
                    "input_param2": 1,
                    "param1": 1,
                    "param2": 11,
                    "param_2": 1,
                    "second_param": 2
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 3,
                    "arg_3": 1,
                    "error_code": 1,
                    "error_code3": 1,
                    "error_data": 1,
                    "error_message3": 1,
                    "function_param_3": 1,
                    "input_3": 3,
                    "input_param3": 1,
                    "param2": 1,
                    "param3": 11,
                    "param_3": 2,
                    "third_param": 2
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 3,
                    "arg_4": 1,
                    "error_code4": 1,
                    "error_description": 1,
                    "error_message": 1,
                    "error_message4": 1,
                    "fourth_param": 2,
                    "function_param_4": 1,
                    "input_4": 3,
                    "input_param4": 1,
                    "param3": 1,
                    "param4": 11,
                    "param_4": 2
                },
                "param_5": {
                    "arg4": 1,
                    "arg5": 3,
                    "arg_5": 1,
                    "error_code5": 1,
                    "error_message5": 1,
                    "fifth_param": 2,
                    "function_param_5": 1,
                    "input_5": 3,
                    "input_param5": 1,
                    "param4": 1,
                    "param5": 11,
                    "param_5": 4
                },
                "param_6": {
                    "arg5": 1,
                    "arg6": 3,
                    "arg_6": 1,
                    "error_code6": 1,
                    "error_message6": 1,
                    "function_param_6": 1,
                    "input_6": 3,
                    "input_param6": 1,
                    "param5": 1,
                    "param6": 11,
                    "param_6": 4,
                    "sixth_param": 2
                },
                "param_7": {
                    "arg6": 1,
                    "arg7": 3,
                    "arg_7": 1,
                    "error_code7": 1,
                    "error_message7": 1,
                    "function_param_7": 1,
                    "input_7": 3,
                    "input_param7": 1,
                    "param6": 1,
                    "param7": 11,
                    "param_7": 4,
                    "seventh_param": 2
                },
                "param_8": {
                    "arg7": 1,
                    "arg8": 3,
                    "arg_8": 1,
                    "eighth_param": 2,
                    "error_code8": 1,
                    "error_message8": 1,
                    "function_param_8": 1,
                    "input_8": 3,
                    "input_param8": 1,
                    "param7": 1,
                    "param8": 11,
                    "param_8": 4
                },
                "param_9": {
                    "arg1": 1,
                    "arg8": 1,
                    "arg9": 1,
                    "arg_9": 1,
                    "first_long_param": 1,
                    "function_param_9": 1,
                    "param8": 1,
                    "param9": 9,
                    "param_9": 6,
                    "param_variable1": 1,
                    "pointer_1": 1,
                    "unused_param1": 2,
                    "unused_param_1": 1,
                    "unused_param_9": 1
                },
                "stack0x00000008": {
                    "unused_stack_placeholder": 1
                }
            },
            "called": [
                "FUN_001063a0",
                "FUN_00102350"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_00104370",
                "FUN_0010370a",
                "FUN_001055f0",
                "FUN_001053c0"
            ],
            "code": "\n\n\nvoid print_error_message_00106300(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 *args;\n  char *format_string;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10_copy;\n  undefined8 local_param11;\n  undefined8 local_param12;\n  undefined8 param13_copy;\n  undefined8 local_param14;\n  undefined4 error_code_copy;\n  undefined4 local_param_2;\n  undefined4 input_3_copy;\n  undefined4 local_param_4;\n  undefined4 input_5_copy;\n  undefined4 input_6_copy;\n  undefined4 local_param_7;\n  undefined4 local_param_8;\n  \n  args = &local_var1;\n  if (flag != '\\0') {\n    error_code_copy = error_code;\n    local_param_2 = param2;\n    input_3_copy = param3;\n    local_param_4 = param4;\n    input_5_copy = param5;\n    input_6_copy = param6;\n    local_param_7 = param7;\n    local_param_8 = param8;\n  }\n  buffer = &unused_stack_placeholder;\n  local_var1 = 8;\n  local_buffer = local_buffer;\n  local_var2 = 0x30;\n  param10_copy = param10;\n  local_param11 = param11;\n  local_param12 = param12;\n  param13_copy = param13;\n  local_param14 = param14;\n  report();\n  format_string = (char *)0x1;\n  xexit();\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",DAT_0010b820);\n  vfprintf(_stderr,format_string,args);\n  putc(10,_stderr);\n  return;\n}\n\n",
            "current_name": "print_error_message_00106300",
            "entrypoint": "0x00106300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106300": "print_error_message_00106300",
                "__arg": "args",
                "__format": "format_string",
                "in_AL": "flag",
                "local_18": "local_param_8",
                "local_28": "local_param_7",
                "local_38": "input_6_copy",
                "local_48": "input_5_copy",
                "local_58": "local_param_4",
                "local_68": "input_3_copy",
                "local_78": "local_param_2",
                "local_88": "error_code_copy",
                "local_90": "local_param14",
                "local_98": "param13_copy",
                "local_a0": "local_param12",
                "local_a8": "local_param11",
                "local_b0": "param10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "local_var2",
                "local_d8": "local_var1",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "stack0x00000008": "unused_stack_placeholder"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001063a0": {
            "additional_data": {
                "FUN_001063a0": {
                    "log_error_message": 1,
                    "print_error": 1,
                    "print_error_message": 24,
                    "print_formatted_error_message": 1,
                    "print_formatted_message": 3,
                    "print_formatted_string": 1
                },
                "__gnuc_va_list": {
                    "args": 1,
                    "variable_args": 1,
                    "variable_arguments": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 1,
                    "standard_error": 16,
                    "standard_error_stream": 2,
                    "stderr": 1
                },
                "_stdout": {
                    "output_buffer": 1,
                    "standard_output": 16,
                    "stdout": 1
                },
                "fflush": {
                    "flush_output_buffer": 1,
                    "flush_standard_output": 3
                },
                "fprintf": {
                    "print_error_message": 1,
                    "print_formatted_error_message": 1,
                    "print_to_standard_error": 1,
                    "write_to_standard_error": 1
                },
                "param_1": {
                    "error_message": 12,
                    "format_string": 7,
                    "message": 10,
                    "message_format": 1
                },
                "param_2": {
                    "additional_arguments": 1,
                    "args": 14,
                    "arguments": 12,
                    "format_args": 2,
                    "variable_arguments": 1
                },
                "putc": {
                    "put_character": 1,
                    "put_character_to_standard_error": 1,
                    "write_character": 4,
                    "write_character_to_standard_error": 1,
                    "write_newline_character": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "stdout": {
                    "standard_output": 1
                },
                "vfprintf": {
                    "format_and_write_to_standard_error": 1,
                    "print_formatted_message": 1,
                    "print_formatted_to_standard_error": 1
                }
            },
            "called": [
                "FUN_001022b0",
                "FUN_00102260",
                "FUN_00102250",
                "FUN_00102370"
            ],
            "calling": [
                "FUN_00106300",
                "FUN_00106400"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_001063a0(char *error_message,variable_arguments args)\n\n{\n  flush_standard_output(standard_output);\n  print_error_message(standard_error,\"%s: \",DAT_0010b820);\n  print_formatted_message(standard_error,error_message,args);\n  write_character(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001063a0",
            "entrypoint": "0x001063a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001063a0": "print_formatted_error_message_001063a0",
                "__gnuc_va_list": "variable_arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_standard_output",
                "fprintf": "print_error_message",
                "param_1": "error_message",
                "param_2": "args",
                "putc": "write_character",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "vfprintf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106400": {
            "additional_data": {
                "FUN_001063a0": {
                    "report": 1
                },
                "FUN_00106400": {
                    "report_and_process_data": 2,
                    "report_and_save_data": 1,
                    "report_and_store_data": 2,
                    "report_data": 18,
                    "report_function": 5,
                    "report_print": 1,
                    "report_with_params": 1
                },
                "in_AL": {
                    "bool_condition": 1,
                    "condition": 3,
                    "condition_check": 1,
                    "condition_flag": 2,
                    "enable_processing": 1,
                    "enabled": 1,
                    "flag": 9,
                    "flag_input": 1,
                    "input_flag": 5,
                    "is_alphanumeric": 1,
                    "is_configured": 1,
                    "is_data_valid": 1,
                    "is_enabled": 1,
                    "is_flag_set": 1,
                    "is_non_zero": 1
                },
                "local_18": {
                    "arg8": 1,
                    "arg8_copy": 1,
                    "config_param8": 1,
                    "data8": 1,
                    "data8_copy": 2,
                    "input8": 2,
                    "input8_copy": 2,
                    "input_param_8_copy": 1,
                    "local_arg13": 1,
                    "local_data8": 1,
                    "local_input8": 1,
                    "local_param8": 1,
                    "local_value8": 1,
                    "modified_param8": 1,
                    "param8": 1,
                    "param_8": 1,
                    "report_local8": 1,
                    "report_param8_new": 1,
                    "report_var8": 2,
                    "saved_param8": 1,
                    "stored_input8": 1,
                    "temp_input8": 1,
                    "val8": 1,
                    "var13": 1,
                    "var8_new": 1
                },
                "local_28": {
                    "arg7": 1,
                    "arg7_copy": 1,
                    "config_param7": 1,
                    "data7": 1,
                    "data7_copy": 2,
                    "input7": 2,
                    "input7_copy": 2,
                    "input_param_7_copy": 1,
                    "local_arg12": 1,
                    "local_data7": 1,
                    "local_input7": 1,
                    "local_param7": 1,
                    "local_value7": 1,
                    "modified_param7": 1,
                    "param7": 1,
                    "param_7": 1,
                    "report_local7": 1,
                    "report_param7_new": 1,
                    "report_var7": 2,
                    "saved_param7": 1,
                    "stored_input7": 1,
                    "temp_input7": 1,
                    "val7": 1,
                    "var12": 1,
                    "var7_new": 1
                },
                "local_38": {
                    "arg6": 1,
                    "arg6_copy": 1,
                    "config_param6": 1,
                    "data6": 1,
                    "data6_copy": 2,
                    "input6": 2,
                    "input6_copy": 1,
                    "input6_copy2": 1,
                    "input_param_6_copy": 1,
                    "local_arg11": 1,
                    "local_data6": 1,
                    "local_input6": 1,
                    "local_param6": 1,
                    "local_value6": 1,
                    "modified_param6": 1,
                    "param6": 1,
                    "param_6": 1,
                    "report_local6": 1,
                    "report_param6_new": 1,
                    "report_var6": 2,
                    "saved_param6": 1,
                    "stored_input6": 1,
                    "temp_input6": 1,
                    "val6": 1,
                    "var11": 1,
                    "var6_new": 1
                },
                "local_48": {
                    "arg5": 1,
                    "arg5_copy": 1,
                    "config_param5": 1,
                    "data5": 1,
                    "data5_copy": 2,
                    "input5": 2,
                    "input5_copy": 1,
                    "input5_copy2": 1,
                    "input_param_5_copy": 1,
                    "local_arg10": 1,
                    "local_data5": 1,
                    "local_input5": 1,
                    "local_param5": 1,
                    "local_value5": 1,
                    "modified_param5": 1,
                    "param5": 1,
                    "param_5": 1,
                    "report_local5": 1,
                    "report_param5_new": 1,
                    "report_var5": 2,
                    "saved_param5": 1,
                    "stored_data5_flag": 1,
                    "stored_input5": 1,
                    "temp_input5": 1,
                    "val5": 1,
                    "var10": 1,
                    "var5_new": 1
                },
                "local_58": {
                    "arg4": 1,
                    "arg4_copy": 1,
                    "config_param4": 1,
                    "data4": 1,
                    "data4_copy": 2,
                    "input4": 2,
                    "input4_copy": 1,
                    "input4_copy2": 1,
                    "input_param_4_copy": 1,
                    "local_arg9": 1,
                    "local_data4": 1,
                    "local_input4": 1,
                    "local_param4": 1,
                    "local_value4": 1,
                    "modified_param4": 1,
                    "param4": 1,
                    "param_4": 1,
                    "report_local4": 1,
                    "report_param4_new": 1,
                    "report_var4": 2,
                    "saved_param4": 1,
                    "stored_data4_flag": 1,
                    "stored_input4": 1,
                    "temp_input4": 1,
                    "val4": 1,
                    "var4_new": 1,
                    "var9": 1
                },
                "local_68": {
                    "arg3": 1,
                    "arg3_copy": 1,
                    "config_param3": 1,
                    "data3": 1,
                    "data3_copy": 2,
                    "input3": 2,
                    "input3_copy": 1,
                    "input3_copy2": 1,
                    "input_param_3_copy": 1,
                    "local_arg8": 1,
                    "local_data3": 1,
                    "local_input3": 1,
                    "local_param3": 1,
                    "local_value3": 1,
                    "modified_param3": 1,
                    "param3": 1,
                    "param_3": 1,
                    "report_local3": 1,
                    "report_param3_new": 1,
                    "report_var3": 2,
                    "saved_param3": 1,
                    "stored_data3_flag": 1,
                    "stored_input3": 1,
                    "temp_input3": 1,
                    "val3": 1,
                    "var3_new": 1,
                    "var8": 1
                },
                "local_78": {
                    "arg2": 1,
                    "arg2_copy": 1,
                    "config_param2": 1,
                    "data2": 1,
                    "data2_copy": 2,
                    "input2": 2,
                    "input2_copy": 1,
                    "input2_copy2": 1,
                    "input_param_2_copy": 1,
                    "local_arg7": 1,
                    "local_data2": 1,
                    "local_input2": 1,
                    "local_param2": 1,
                    "local_value2": 1,
                    "modified_param2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "report_local2": 1,
                    "report_param2_new": 1,
                    "report_var2": 2,
                    "saved_param2": 1,
                    "stored_data2_flag": 1,
                    "stored_input2": 1,
                    "temp_input2": 1,
                    "val2": 1,
                    "var2_new": 1,
                    "var7": 1
                },
                "local_88": {
                    "arg1": 1,
                    "arg1_copy": 1,
                    "config_param1": 1,
                    "data1": 1,
                    "data1_copy": 2,
                    "input1": 2,
                    "input1_copy": 2,
                    "input_param_1_copy": 1,
                    "local_arg6": 1,
                    "local_data1": 1,
                    "local_input1": 1,
                    "local_param1": 1,
                    "local_value1": 1,
                    "modified_param1": 1,
                    "param1": 1,
                    "param_1": 1,
                    "report_local1": 1,
                    "report_param1_new": 1,
                    "report_var1": 2,
                    "saved_param1": 1,
                    "stored_data1_flag": 1,
                    "stored_input1": 1,
                    "temp_input1": 1,
                    "val1": 1,
                    "var1_new": 1,
                    "var6": 1
                },
                "local_90": {
                    "arg14_copy": 1,
                    "argument14": 1,
                    "data14": 1,
                    "input6_copy": 1,
                    "local_arg5": 1,
                    "local_argument5": 1,
                    "local_param14": 1,
                    "local_param5": 1,
                    "local_var5": 1,
                    "output6": 2,
                    "param14": 4,
                    "param14_copy": 3,
                    "param6": 1,
                    "param_14": 1,
                    "param_14_": 1,
                    "param_14_copy": 1,
                    "param_val14": 1,
                    "param_value5": 1,
                    "param_value_5": 1,
                    "report_data6": 1,
                    "saved_param14": 1,
                    "stored_data5_copy": 1,
                    "temp_output6": 1,
                    "var14_new": 1,
                    "var5": 1
                },
                "local_98": {
                    "arg13_copy": 1,
                    "argument13": 1,
                    "data13": 1,
                    "input5_copy": 1,
                    "local_arg4": 1,
                    "local_argument4": 1,
                    "local_param13": 1,
                    "local_param4": 1,
                    "local_var4": 1,
                    "output5": 2,
                    "param13": 4,
                    "param13_copy": 3,
                    "param5": 1,
                    "param_13": 1,
                    "param_13_": 1,
                    "param_13_copy": 1,
                    "param_val13": 1,
                    "param_value4": 1,
                    "param_value_4": 1,
                    "report_data5": 1,
                    "saved_param13": 1,
                    "stored_data4_copy": 1,
                    "temp_output5": 1,
                    "var13_new": 1,
                    "var4": 1
                },
                "local_a0": {
                    "arg12_copy": 1,
                    "argument12": 1,
                    "data12": 1,
                    "input4_copy": 1,
                    "local_arg3": 1,
                    "local_argument3": 1,
                    "local_param12": 1,
                    "local_param3": 1,
                    "local_var3": 1,
                    "output4": 2,
                    "param12": 4,
                    "param12_copy": 3,
                    "param4": 1,
                    "param_12": 1,
                    "param_12_": 1,
                    "param_12_copy": 1,
                    "param_val12": 1,
                    "param_value3": 1,
                    "param_value_3": 1,
                    "report_data4": 1,
                    "saved_param12": 1,
                    "stored_data3_copy": 1,
                    "temp_output4": 1,
                    "var12_new": 1,
                    "var3": 1
                },
                "local_a8": {
                    "arg11_copy": 1,
                    "argument11": 1,
                    "data11": 1,
                    "input3_copy": 1,
                    "local_arg2": 1,
                    "local_argument2": 1,
                    "local_param11": 1,
                    "local_param2": 1,
                    "local_var2": 1,
                    "output3": 2,
                    "param11": 4,
                    "param11_copy": 3,
                    "param3": 1,
                    "param_11": 1,
                    "param_11_": 1,
                    "param_11_copy": 1,
                    "param_val11": 1,
                    "param_value2": 1,
                    "param_value_2": 1,
                    "report_data3": 1,
                    "saved_param11": 1,
                    "stored_data2_copy": 1,
                    "temp_output3": 1,
                    "var11_new": 1,
                    "var2": 1
                },
                "local_b0": {
                    "arg10_copy": 1,
                    "argument10": 1,
                    "data10": 1,
                    "input2_copy": 1,
                    "local_arg1": 1,
                    "local_argument1": 1,
                    "local_param1": 1,
                    "local_param10": 1,
                    "local_var1": 1,
                    "output2": 2,
                    "param10": 4,
                    "param10_copy": 3,
                    "param2": 1,
                    "param_10": 1,
                    "param_10_": 1,
                    "param_10_copy": 1,
                    "param_val10": 1,
                    "param_value1": 1,
                    "param_value_1": 1,
                    "report_data2": 1,
                    "saved_param10": 1,
                    "stored_data1_copy": 1,
                    "temp_output2": 1,
                    "var1": 1,
                    "var10_new": 1
                },
                "local_b8": {
                    "buffer": 2,
                    "buffer_array": 1,
                    "data_buffer": 1,
                    "local_arr": 1,
                    "local_array": 8,
                    "local_buf": 1,
                    "local_buffer": 4,
                    "local_buffer_array": 1,
                    "local_var": 1,
                    "output_data": 1,
                    "report_data": 1,
                    "temp_buffer": 3,
                    "temporary_buffer": 4,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "buffer": 2,
                    "buffer_address": 1,
                    "destination_pointer": 1,
                    "local_array": 1,
                    "local_array_pointer2": 1,
                    "local_array_ptr": 1,
                    "local_b": 1,
                    "local_buf_ptr": 1,
                    "local_buffer": 15,
                    "local_buffer_ptr": 2,
                    "local_ptr2": 1,
                    "local_ptr_2": 1,
                    "local_var2": 1,
                    "pointer2": 1,
                    "temp_buffer": 1
                },
                "local_d0": {
                    "buffer": 12,
                    "buffer_pointer": 1,
                    "buffer_ptr": 5,
                    "data_address": 1,
                    "delimiter": 1,
                    "local_array_pointer": 1,
                    "local_char_array_ptr": 1,
                    "local_ptr1": 1,
                    "local_ptr_1": 1,
                    "local_var1": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "source_pointer": 1,
                    "stack_addr": 1,
                    "stack_buffer_ptr": 1,
                    "stack_ptr": 1
                },
                "local_d4": {
                    "buffer_size": 3,
                    "byte_count": 1,
                    "constant": 3,
                    "copy_size": 1,
                    "count": 2,
                    "data_size": 2,
                    "length": 2,
                    "local_2": 1,
                    "local_30": 1,
                    "local_buffer_size": 1,
                    "local_var1_size": 1,
                    "local_var_size": 1,
                    "offset": 4,
                    "size": 4,
                    "string_length": 1,
                    "value": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_size": 5,
                    "count": 3,
                    "data_size": 1,
                    "length": 4,
                    "local_1": 1,
                    "local_array_size": 1,
                    "local_size": 2,
                    "size": 11,
                    "stack_size": 2
                },
                "param_1": {
                    "arg1": 4,
                    "config_param1": 1,
                    "data1": 4,
                    "input1": 7,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "message": 1,
                    "param1": 3,
                    "report_param1": 4,
                    "value1": 2,
                    "var1": 1
                },
                "param_10": {
                    "arg1": 1,
                    "arg10": 1,
                    "data10": 1,
                    "output2": 3,
                    "param10": 8,
                    "param2": 3,
                    "param_10": 1,
                    "param_ptr1": 1,
                    "param_ptr10": 1,
                    "param_ptr_2": 1,
                    "report_data2": 1,
                    "report_param10": 4,
                    "stored_data1": 1,
                    "value_1": 1,
                    "var10": 1
                },
                "param_11": {
                    "arg11": 1,
                    "arg2": 1,
                    "data11": 1,
                    "output3": 3,
                    "param11": 8,
                    "param3": 3,
                    "param_11": 1,
                    "param_ptr11": 1,
                    "param_ptr2": 1,
                    "param_ptr_3": 1,
                    "report_data3": 1,
                    "report_param11": 4,
                    "stored_data2": 1,
                    "value_2": 1,
                    "var11": 1
                },
                "param_12": {
                    "arg12": 1,
                    "arg3": 1,
                    "data12": 1,
                    "output4": 3,
                    "param12": 8,
                    "param4": 3,
                    "param_12": 1,
                    "param_ptr12": 1,
                    "param_ptr3": 1,
                    "param_ptr_4": 1,
                    "report_data4": 1,
                    "report_param12": 4,
                    "stored_data3": 1,
                    "value_3": 1,
                    "var12": 1
                },
                "param_13": {
                    "arg13": 1,
                    "arg4": 1,
                    "data13": 1,
                    "output5": 3,
                    "param13": 8,
                    "param5": 3,
                    "param_13": 1,
                    "param_ptr13": 1,
                    "param_ptr4": 1,
                    "param_ptr_5": 1,
                    "report_data5": 1,
                    "report_param13": 4,
                    "stored_data4": 1,
                    "value_4": 1,
                    "var13": 1
                },
                "param_14": {
                    "arg14": 1,
                    "arg5": 1,
                    "data14": 1,
                    "output6": 3,
                    "param14": 8,
                    "param6": 3,
                    "param_14": 1,
                    "param_ptr14": 1,
                    "param_ptr5": 1,
                    "param_ptr_6": 1,
                    "report_data6": 1,
                    "report_param14": 4,
                    "stored_data5": 1,
                    "value_5": 1,
                    "var14": 1
                },
                "param_2": {
                    "arg2": 4,
                    "config_param2": 1,
                    "data2": 4,
                    "input2": 7,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "param2": 3,
                    "report_param2": 4,
                    "value2": 2,
                    "var2": 1,
                    "varargs": 1
                },
                "param_3": {
                    "arg3": 4,
                    "config_param3": 1,
                    "data3": 4,
                    "input3": 7,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "param3": 3,
                    "report_param3": 4,
                    "value3": 2,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "config_param4": 1,
                    "data4": 4,
                    "input4": 7,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "param4": 3,
                    "report_param4": 4,
                    "value4": 2,
                    "var4": 1
                },
                "param_5": {
                    "arg5": 4,
                    "config_param5": 1,
                    "data5": 4,
                    "input5": 7,
                    "input_param5": 1,
                    "input_param_5": 1,
                    "param5": 3,
                    "report_param5": 4,
                    "value5": 2,
                    "var5": 1
                },
                "param_6": {
                    "arg6": 4,
                    "config_param6": 1,
                    "data6": 4,
                    "input6": 7,
                    "input_param6": 1,
                    "input_param_6": 1,
                    "param6": 3,
                    "report_param6": 4,
                    "value6": 2,
                    "var6": 1
                },
                "param_7": {
                    "arg7": 4,
                    "config_param7": 1,
                    "data7": 4,
                    "input7": 7,
                    "input_param7": 1,
                    "input_param_7": 1,
                    "param7": 3,
                    "report_param7": 4,
                    "value7": 2,
                    "var7": 1
                },
                "param_8": {
                    "arg8": 4,
                    "config_param8": 1,
                    "data8": 4,
                    "input8": 7,
                    "input_param8": 1,
                    "input_param_8": 1,
                    "param8": 3,
                    "report_param8": 4,
                    "value8": 2,
                    "var8": 1
                },
                "param_9": {
                    "arg9": 1,
                    "data": 3,
                    "data9": 1,
                    "data_ptr": 2,
                    "input_data": 1,
                    "output": 1,
                    "output1": 3,
                    "param1": 3,
                    "param9": 2,
                    "param_ptr_1": 1,
                    "report_buffer": 1,
                    "report_data1": 1,
                    "report_func": 2,
                    "report_param": 1,
                    "report_param9": 4,
                    "report_ptr": 1,
                    "result_handle": 1
                }
            },
            "called": [
                "FUN_001063a0"
            ],
            "calling": [
                "FUN_001048e0",
                "FUN_0010249f",
                "FUN_001043d0",
                "FUN_00104d5b",
                "FUN_001055f0"
            ],
            "code": "\nvoid report_and_store_data_00106400(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 report_param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 offset;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_array [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 input1_copy;\n  undefined4 input2;\n  undefined4 data3_copy;\n  undefined4 report_var4;\n  undefined4 input5;\n  undefined4 input6;\n  undefined4 data7_copy;\n  undefined4 data8_copy;\n  \n  if (flag != '\\0') {\n    input1_copy = input1;\n    input2 = input2;\n    data3_copy = input3;\n    report_var4 = input4;\n    input5 = input5;\n    input6 = input6;\n    data7_copy = input7;\n    data8_copy = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_array;\n  offset = 0x30;\n  param10 = param10;\n  param11 = param11;\n  param12 = param12;\n  param13 = param13;\n  param14 = param14;\n  report(report_param9,&size);\n  return;\n}\n\n",
            "current_name": "report_and_store_data_00106400",
            "entrypoint": "0x00106400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106400": "report_and_store_data_00106400",
                "in_AL": "flag",
                "local_18": "data8_copy",
                "local_28": "data7_copy",
                "local_38": "input6",
                "local_48": "input5",
                "local_58": "report_var4",
                "local_68": "data3_copy",
                "local_78": "input2",
                "local_88": "input1_copy",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_array",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "offset",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "report_param9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001064a0": {
            "additional_data": {
                "FUN_001064a0": {
                    "display_message": 1,
                    "print_error_message": 1,
                    "print_log": 1,
                    "print_message": 28
                },
                "param_1": {
                    "category": 1,
                    "context": 1,
                    "error_identifier": 1,
                    "error_message": 1,
                    "label_ptr": 1,
                    "log_tag": 1,
                    "message": 2,
                    "message1": 7,
                    "message_header": 3,
                    "message_prefix": 2,
                    "message_title": 1,
                    "message_type": 3,
                    "module_name": 1,
                    "module_option": 1,
                    "prefix": 2,
                    "sender_name": 1,
                    "source": 1,
                    "title": 1
                },
                "param_2": {
                    "default": 1,
                    "default_message": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "info_message": 1,
                    "log_message": 1,
                    "message": 13,
                    "message2": 7,
                    "message_ptr": 1,
                    "message_text": 2,
                    "module_name": 1,
                    "source": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted": 1
                }
            },
            "called": [
                "FUN_001036e0"
            ],
            "calling": [],
            "code": "\nvoid print_error_message_001064a0(undefined8 *message1,undefined8 *message)\n\n{\n  if (DAT_0010b818 == 0) {\n    return;\n  }\n  if (message1 != (undefined8 *)0x0) {\n    print(\"%s[%s]: \",*message1);\n    return;\n  }\n  print(\"%s: \",*message);\n  return;\n}\n\n",
            "current_name": "print_error_message_001064a0",
            "entrypoint": "0x001064a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001064a0": "print_error_message_001064a0",
                "param_1": "message1",
                "param_2": "message",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001064b0": {
            "additional_data": {
                "DAT_00107363": {
                    "constant": 1,
                    "constant_value": 1,
                    "print_symname": 1,
                    "symbol_data": 1
                },
                "FUN_00103a66": {
                    "do_something": 1,
                    "initialize": 1,
                    "other_helper_function": 1,
                    "perform_additional_task": 1,
                    "perform_operation": 1,
                    "print_default_value": 1,
                    "print_error_message": 1,
                    "print_new_line": 1,
                    "print_separator": 1,
                    "print_unknown_value": 1,
                    "print_value_constprop_0": 1,
                    "process_data": 1,
                    "process_operation": 1,
                    "process_something": 1,
                    "reinitialize": 1,
                    "some_function": 1
                },
                "FUN_00104740": {
                    "print_constant_value": 1,
                    "print_constant_value_2": 2,
                    "print_constant_value_for_symbol": 1,
                    "print_constant_value_reference": 1,
                    "print_constant_value_with_params": 1,
                    "print_symbol_info_00104740": 1,
                    "print_symbol_value": 1,
                    "print_value_based_on_parameters": 1,
                    "print_value_of_pointer": 1,
                    "print_variable_value": 1,
                    "process_constant_value": 1,
                    "process_parameter": 1,
                    "process_symbol": 1
                },
                "FUN_001054d0": {
                    "helper_function": 1,
                    "print_constant_value": 1,
                    "print_hex_value": 1,
                    "print_instruction": 1,
                    "print_symbol_value": 1,
                    "print_value": 4,
                    "print_value_2": 2,
                    "print_value_helper": 1,
                    "print_value_no_params": 1,
                    "process_argument": 1,
                    "process_parameter": 1,
                    "process_value": 1
                },
                "FUN_001064b0": {
                    "print_sym_and_value": 1,
                    "print_symbol": 1,
                    "print_symbol_and_value": 1,
                    "print_symbol_details": 2,
                    "print_symbol_info": 13,
                    "print_symbol_information": 12
                },
                "bfd_is_undefined_symclass": {
                    "check_if_undefined_symclass": 1,
                    "check_symbol_class": 1,
                    "check_symbol_class_undefined": 1,
                    "is_undefined_symbol_class": 6,
                    "is_undefined_symclass": 4
                },
                "cVar1": {
                    "is_undefined": 20,
                    "is_undefined_symbol": 2,
                    "is_undefined_symclass": 9
                },
                "fun_00104740": {
                    "print_constant_value": 1,
                    "print_constant_value_other": 1
                },
                "param_1": {
                    "instruction": 1,
                    "string": 2,
                    "symbol": 4,
                    "symbol_address": 2,
                    "symbol_details": 1,
                    "symbol_info": 9,
                    "symbol_info_array": 1,
                    "symbol_information_list": 1,
                    "symbol_list": 1,
                    "symbol_pointer": 2,
                    "symbol_ptr": 3,
                    "symbols": 2,
                    "value": 1,
                    "variable": 1
                },
                "param_2": {
                    "additional_data": 1,
                    "additional_param": 2,
                    "address": 1,
                    "data_pointer": 1,
                    "info": 1,
                    "input_parameter": 1,
                    "param": 9,
                    "param2": 1,
                    "param_1": 1,
                    "param_2": 1,
                    "param_size": 1,
                    "param_value": 2,
                    "related_data": 1,
                    "symbol": 1,
                    "symbol_count": 1,
                    "symbol_info": 2,
                    "symbol_info_ptr": 1,
                    "unused_param": 1,
                    "value": 2
                },
                "param_3": {
                    "generic_data": 1,
                    "instruction": 1,
                    "param3": 1,
                    "param_2": 1,
                    "param_pointer": 1,
                    "param_value_ptr": 1,
                    "symbol_value": 1,
                    "value": 2
                },
                "param_4": {
                    "constant_value": 1,
                    "length": 1,
                    "param": 1,
                    "param4": 1,
                    "param_3": 1,
                    "param_value": 1,
                    "symbol_length": 1,
                    "unknown_value": 1,
                    "value": 1
                },
                "print_constant_value_0010651a": {
                    "print_constant": 1,
                    "print_constant_value": 14,
                    "print_constant_value_0010651a": 1,
                    "print_constant_value_2": 1,
                    "print_constant_value_check": 1,
                    "print_constant_value_if_available": 3,
                    "print_constant_value_if_nonzero": 1,
                    "print_constant_value_if_not_null": 1,
                    "print_constant_value_if_second_param_not_null": 1,
                    "print_constant_value_if_symbol_has_a_constant_value": 1,
                    "print_constant_value_instruction": 1
                },
                "print_symname": {
                    "print_symbol_name": 27
                },
                "print_value_constprop_0": {
                    "print_const_property_value": 1,
                    "print_constant_value": 17,
                    "print_constprop_value": 3,
                    "print_value": 6
                },
                "printf": {
                    "print": 2,
                    "print_format": 2,
                    "print_formatted": 6,
                    "print_formatted_output": 3,
                    "print_output": 1
                },
                "putchar": {
                    "print_char": 1,
                    "print_character": 22,
                    "print_space": 1
                }
            },
            "called": [
                "FUN_00102050",
                "FUN_0010651a",
                "FUN_00104740",
                "FUN_001020f0",
                "FUN_001054d0",
                "FUN_00103a66",
                "FUN_00102190"
            ],
            "calling": [],
            "code": "\nvoid print_symbol_info_001064b0(long *symbol_info,undefined8 param)\n\n{\n  char is_undefined;\n  \n  print_symbol_name(&DAT_00107363,symbol_info,0,param);\n  print_formatted(\"%c \",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  is_undefined = is_undefined_symbol_class((int)*(char *)(*symbol_info + 8));\n  if (is_undefined != '\\0') {\n    print_formatted(\"        \");\n    return;\n  }\n  print_constant_value(*(undefined8 *)*symbol_info);\n  print_character(0x20);\n  if (symbol_info[2] == 0) {\n    if (symbol_info[1] != 0) {\n      print_constant_value();\n      return;\n    }\n  }\n  else if (*(long *)(symbol_info[2] + 0x38) != 0) {\n    print_constant_value();\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001064b0",
            "entrypoint": "0x001064b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001064b0": "print_symbol_info_001064b0",
                "bfd_is_undefined_symclass": "is_undefined_symbol_class",
                "cVar1": "is_undefined",
                "param_1": "symbol_info",
                "param_2": "param",
                "print_constant_value_0010651a": "print_constant_value",
                "print_symname": "print_symbol_name",
                "print_value_constprop_0": "print_constant_value",
                "printf": "print_formatted",
                "putchar": "print_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010651a": {
            "additional_data": {
                "FUN_001054d0": {
                    "execute_print": 1,
                    "print": 1,
                    "print_value": 19,
                    "print_value_constprop": 1,
                    "print_value_constprop_0": 2,
                    "print_value_helper": 1,
                    "process_data": 1
                },
                "FUN_0010651a": {
                    "print_and_return_value": 1,
                    "print_const": 1,
                    "print_const_prop_value": 1,
                    "print_const_property_value": 1,
                    "print_const_value": 2,
                    "print_constant": 1,
                    "print_constant_value": 8,
                    "print_constprop_0": 2,
                    "print_constprop_0_value": 1,
                    "print_constprop_value": 4,
                    "print_value": 7,
                    "print_value_constprop_0_wrapper": 1
                },
                "param_1": {
                    "arg": 2,
                    "param": 2,
                    "undefined_value": 1
                }
            },
            "called": [
                "FUN_001054d0"
            ],
            "calling": [
                "FUN_001064b0",
                "FUN_00103a66"
            ],
            "code": "\nvoid print_constant_value_0010651a(void)\n\n{\n  print_value_constprop_0();\n  return;\n}\n\n",
            "current_name": "print_constant_value_0010651a",
            "entrypoint": "0x0010651a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010651a": "print_constant_value_0010651a"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106530": {
            "additional_data": {
                "FUN_00106530": {
                    "handle_bfd_error": 2,
                    "handle_error": 3,
                    "handle_error_message": 1,
                    "print_error": 5,
                    "print_error_info": 1,
                    "print_error_message": 18,
                    "print_error_message_and_exit": 1
                },
                "_stderr": {
                    "standard_error": 1
                },
                "_stdout": {
                    "standard_output": 1
                },
                "bfd_errmsg": {
                    "get_bfd_error_message": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 1
                },
                "bfd_nonfatal": {
                    "disable_bfd_fatal": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "iVar1": {
                    "bfd_error": 5,
                    "bfd_error_code": 3,
                    "error": 11,
                    "error_code": 8,
                    "error_status": 1
                },
                "in_R10": {
                    "additional_info": 24,
                    "extra_info": 2,
                    "extra_message": 1,
                    "unknown_argument": 1,
                    "unused_parameter": 1
                },
                "lVar3": {
                    "error_code": 5,
                    "error_flag": 8,
                    "exit_status": 1,
                    "flag": 1,
                    "has_error": 3,
                    "has_error_code": 1,
                    "is_error": 3,
                    "is_error_known": 1,
                    "is_fatal": 2,
                    "line_number": 3,
                    "print_line_number": 2,
                    "should_exit": 1
                },
                "param_1": {
                    "error_code": 10,
                    "error_status": 1,
                    "error_type": 1,
                    "value": 1
                },
                "uVar2": {
                    "error_message": 30,
                    "error_msg": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_00102350",
                "FUN_00106540"
            ],
            "calling": [
                "FUN_001048e0",
                "FUN_00103463",
                "FUN_00105110",
                "FUN_001043d0",
                "FUN_00102fc3",
                "FUN_00102f9f",
                "FUN_00103c00",
                "FUN_00104d5b",
                "FUN_00102fd2"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_00106530(void)\n\n{\n  int error;\n  undefined8 error_message;\n  long error_flag;\n  undefined8 additional_info;\n  \n  disable_bfd_fatal();\n  error_flag = 1;\n  exit_program();\n  error = get_bfd_error();\n  if (error == 0) {\n    error_message = get_error_message(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = get_bfd_error_message(error);\n  }\n  fflush(standard_output);\n  if (error_flag != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_0010b820,error_flag,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_0010b820,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_and_exit_00106530",
            "entrypoint": "0x00106530",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106530": "print_error_message_and_exit_00106530",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bfd_errmsg": "get_bfd_error_message",
                "bfd_get_error": "get_bfd_error",
                "bfd_nonfatal": "disable_bfd_fatal",
                "dcgettext": "get_error_message",
                "iVar1": "error",
                "in_R10": "additional_info",
                "lVar3": "error_flag",
                "uVar2": "error_message",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106540": {
            "additional_data": {
                "FUN_00103a78": {
                    "initialize_bfd": 1
                },
                "FUN_00106540": {
                    "print_error": 2,
                    "print_error_message": 29
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 1,
                    "stderr": 1,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 1,
                    "stdout": 1,
                    "stdout_stream": 1
                },
                "bfd_errmsg": {
                    "get_error_msg": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "iVar1": {
                    "bfd_error": 1,
                    "error": 13,
                    "error_code": 9,
                    "error_flag": 1,
                    "error_status": 2,
                    "error_type": 4,
                    "error_value": 1
                },
                "in_R10": {
                    "additional_info": 10,
                    "extra_info": 1,
                    "placeholder": 2,
                    "some_argument": 1,
                    "unknown": 1,
                    "unknown_cause": 1,
                    "unknown_error": 1,
                    "unknown_param": 1,
                    "unknown_variable": 2,
                    "unused_param": 1
                },
                "param_1": {
                    "error": 1,
                    "error_cause": 1,
                    "error_code": 3,
                    "error_description": 5,
                    "error_file": 1,
                    "error_message": 9,
                    "error_name": 1,
                    "error_param": 1,
                    "error_string": 1,
                    "error_type": 5,
                    "file_name": 1,
                    "filename": 1,
                    "message": 1
                },
                "uVar2": {
                    "error_description": 1,
                    "error_message": 16,
                    "error_message_text": 3,
                    "error_msg": 2,
                    "error_string": 7,
                    "error_text": 1,
                    "localized_error_message": 1
                }
            },
            "called": [
                "FUN_001022b0",
                "FUN_00102390",
                "FUN_00103a78",
                "FUN_00102260",
                "FUN_001021d0"
            ],
            "calling": [
                "FUN_001043d0",
                "FUN_00106530"
            ],
            "code": "\n\n\nvoid print_error_message_00106540(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = get_error_message(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = get_error_msg(error);\n  }\n  fflush(stdout);\n  if (error_message != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_0010b820,error_message,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_0010b820,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_00106540",
            "entrypoint": "0x00106540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106540": "print_error_message_00106540",
                "_stderr": "standard_error",
                "_stdout": "stdout",
                "bfd_errmsg": "get_error_msg",
                "dcgettext": "get_error_message",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001065a0": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_001065a0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001065a0",
            "entrypoint": "0x001065a0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001065a0": "FUNC_001065a0"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_00102450",
            "FUN_0010249f",
            "FUN_001025f5",
            "FUN_00102670",
            "FUN_0010268b",
            "FUN_00102c19",
            "FUN_00102f19",
            "FUN_00102f7b",
            "FUN_00102f9f",
            "FUN_00102fc3",
            "FUN_00102fd2",
            "FUN_00103238",
            "FUN_00103463",
            "FUN_0010351b",
            "FUN_00103533",
            "FUN_00103573",
            "FUN_001035a2",
            "FUN_001036a7",
            "FUN_001036e0",
            "FUN_0010370a",
            "FUN_00103729",
            "FUN_00103a78",
            "FUN_00103abf",
            "FUN_00103b2b",
            "FUN_00103b49",
            "FUN_00103b5d",
            "FUN_00103bec",
            "FUN_00103bf6",
            "FUN_00103c00",
            "FUN_00103ca0",
            "FUN_00104397",
            "FUN_001043d0",
            "FUN_00104670",
            "FUN_001047d0",
            "FUN_001049c0",
            "FUN_00104fa0",
            "FUN_00105050",
            "FUN_001053b0",
            "FUN_001053c0",
            "FUN_00105500",
            "FUN_001055a0",
            "FUN_001055f0",
            "FUN_001062d0",
            "FUN_00106300",
            "FUN_001063a0",
            "FUN_00106400",
            "FUN_001064a0",
            "FUN_0010651a",
            "FUN_00106530",
            "FUN_00106540"
        ],
        [
            "FUN_00102475",
            "FUN_00102739",
            "FUN_00103a66",
            "FUN_00104370",
            "FUN_00104d5b",
            "FUN_00105110",
            "FUN_001064b0"
        ],
        [
            "FUN_00104740",
            "FUN_001048e0"
        ],
        [
            "FUN_001054d0"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 351886
}