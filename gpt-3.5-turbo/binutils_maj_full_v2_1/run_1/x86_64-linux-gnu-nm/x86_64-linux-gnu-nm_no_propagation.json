{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "FUN_00102020": {
                    "call_indirect": 1,
                    "call_indirect_function": 2,
                    "execute_dynamic_function": 2,
                    "execute_function": 5,
                    "execute_function_at_address": 1,
                    "execute_function_at_null": 1,
                    "execute_function_at_null_address": 1,
                    "execute_indirect_call": 4,
                    "execute_indirect_function": 1,
                    "execute_indirect_jump": 12
                },
                "code": {
                    "function_pointer": 3,
                    "indirect_function": 1
                },
                "undefined": {
                    "function_address": 4,
                    "function_pointer": 1,
                    "jump_function": 1,
                    "target": 1,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102450": {
            "additional_data": {
                "FUN_00102450": {
                    "display_supported_targets": 1,
                    "print_supported_targets": 29,
                    "print_target_info": 1
                },
                "__format": {
                    "format": 2
                },
                "__ptr": {
                    "target_list": 31
                },
                "__stream": {
                    "stream": 2
                },
                "dcgettext": {
                    "get_translated_message": 1,
                    "translate_text": 1
                },
                "exit": {
                    "terminate_program": 1
                },
                "fprintf": {
                    "print_to_file": 1,
                    "write_to_file": 1
                },
                "fputc": {
                    "write_character": 1
                },
                "free": {
                    "release_memory": 1
                },
                "in_stack_00000008": {
                    "bug_report": 1,
                    "bug_report_enabled": 1,
                    "bug_report_flag": 1,
                    "error_flag": 2,
                    "exit_code": 20,
                    "exit_status": 2,
                    "report_bugs": 1
                },
                "lVar1": {
                    "current_entry": 1,
                    "current_target": 3,
                    "current_target_address": 1,
                    "current_target_value": 11,
                    "target": 3,
                    "target_name": 1,
                    "target_value": 2
                },
                "pcVar2": {
                    "bug_message": 1,
                    "bug_report_text": 1,
                    "gettext_string": 1,
                    "message": 8,
                    "msg": 1,
                    "supported_targets_label": 1,
                    "supported_targets_msg": 1,
                    "target_message": 3,
                    "target_string": 6,
                    "text": 1,
                    "text_message": 1,
                    "translated_text": 1,
                    "translation": 1,
                    "translation_string": 2
                },
                "plVar3": {
                    "current_target": 22,
                    "ptr": 1,
                    "target": 2,
                    "target_pointer": 4,
                    "target_ptr": 2
                },
                "unaff_RBX": {
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "output_file": 26,
                    "output_stream": 1,
                    "target_file": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_00103ca0"
            ],
            "code": "\nvoid print_supported_targets_00102450(void)\n\n{\n  long current_target_value;\n  char *message;\n  long *target_list;\n  FILE *output_file;\n  long *current_target;\n  int exit_code;\n  \n  message = (char *)dcgettext(0,\"Supported targets:\",5);\n  fprintf(output_file,message);\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target_value = *current_target;\n    current_target = current_target + 1;\n    if (current_target_value == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_code == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  terminate_program(exit_code);\n}\n\n",
            "current_name": "print_supported_targets_00102450",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102450": "print_supported_targets_00102450",
                "__ptr": "target_list",
                "dcgettext": "translate_text",
                "exit": "terminate_program",
                "fprintf": "write_to_file",
                "fputc": "write_character",
                "free": "release_memory",
                "in_stack_00000008": "exit_code",
                "lVar1": "current_target_value",
                "pcVar2": "message",
                "plVar3": "current_target",
                "unaff_RBX": "output_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010249f": {
            "additional_data": {
                "FUN_0010249f": {
                    "display_file_warning": 3,
                    "display_non_ordinary_file_warning": 1,
                    "display_not_ordinary_file_warning": 2,
                    "display_warning": 2,
                    "display_warning_message": 8,
                    "print_file_type_warning": 1,
                    "print_file_warning": 4,
                    "print_non_ordinary_file_warning": 1,
                    "print_warning": 2,
                    "print_warning_for_non_ordinary_file": 3,
                    "print_warning_message": 3,
                    "show_warning_message": 1
                },
                "FUN_00106400": {
                    "display_message": 1
                },
                "dcgettext": {
                    "get_internationalized_text": 1,
                    "get_localized_message": 2,
                    "get_localized_text": 3,
                    "get_translated_message": 4,
                    "get_translated_text": 1,
                    "get_translated_warning_message": 1,
                    "retrieve_localized_string": 1
                },
                "param_1": {
                    "format_string": 1
                },
                "uVar1": {
                    "error_message": 1,
                    "warning_message": 29,
                    "warning_msg": 1
                }
            },
            "called": [
                "FUN_00106400",
                "dcgettext"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nundefined8 display_non_ordinary_file_warning_0010249f(void)\n\n{\n  undefined8 warning_message;\n  \n  warning_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n  FUN_00106400(warning_message);\n  return 0;\n}\n\n",
            "current_name": "display_non_ordinary_file_warning_0010249f",
            "entrypoint": "0x0010249f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010249f": "display_non_ordinary_file_warning_0010249f",
                "dcgettext": "get_translated_message",
                "uVar1": "warning_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025f5": {
            "additional_data": {
                "DAT_0010b7a0": {
                    "concatenated_string": 1
                },
                "FUN_001025f5": {
                    "concat_strings": 3,
                    "concat_with_prefix": 1,
                    "concatenate_strings": 26,
                    "generate_concatenated_string": 1
                },
                "concat": {
                    "concatenate_strings": 1
                },
                "param_1": {
                    "arg1": 1,
                    "first_string": 4,
                    "input1": 1,
                    "input_string": 1,
                    "input_string1": 2,
                    "prefix": 2,
                    "prefix_string": 3,
                    "source_string": 1,
                    "string1": 12,
                    "string_1": 1,
                    "unmodified_parameter": 1,
                    "unused": 2
                },
                "param_2": {
                    "additional_string": 2,
                    "arg2": 1,
                    "input2": 1,
                    "input_string": 2,
                    "input_string2": 2,
                    "second_string": 4,
                    "string2": 12,
                    "string_2": 1,
                    "string_to_concatenate": 1,
                    "suffix": 2,
                    "suffix_string": 3
                }
            },
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00104670"
            ],
            "code": "\nvoid concatenate_strings_001025f5(undefined8 string1,undefined8 string2)\n\n{\n  DAT_0010b7a0 = concatenate_strings_001025f5(&DAT_001071d7,string2,&DAT_001071ca,0);\n  return;\n}\n\n",
            "current_name": "concatenate_strings_001025f5",
            "entrypoint": "0x001025f5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025f5": "concatenate_strings_001025f5",
                "concat": "concatenate_strings",
                "param_1": "string1",
                "param_2": "string2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102670": {
            "additional_data": {
                "FUN_00102670": {
                    "display_message": 1,
                    "print_if_data_available": 1,
                    "print_if_data_not_zero": 1,
                    "print_if_debug_enabled": 1,
                    "print_if_flag_set": 5,
                    "print_if_initialized": 7,
                    "print_if_not_disabled": 1,
                    "print_if_not_zero": 2,
                    "print_if_valid": 3,
                    "print_message": 3,
                    "print_message_if_configured": 1,
                    "print_message_if_flag_not_set": 1,
                    "print_message_if_initialized": 1,
                    "print_message_if_logged_in": 1,
                    "print_message_if_not_disabled": 1,
                    "print_message_if_set": 1
                },
                "_DAT_0010b7c4": {
                    "disable_flag": 1,
                    "flag": 1,
                    "is_flag_set": 1,
                    "is_initialized": 1
                },
                "param_1": {
                    "message": 31
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_message_if_initialized_00102670(undefined8 message)\n\n{\n  if (_DAT_0010b7c4 != 0) {\n    printf(\"\\n%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_initialized_00102670",
            "entrypoint": "0x00102670",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102670": "print_message_if_initialized_00102670",
                "param_1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010268b": {
            "additional_data": {
                "FUN_0010268b": {
                    "decode_and_print_string": 2,
                    "print_data": 1,
                    "print_decoded_string": 2,
                    "print_decompiled_code": 2,
                    "print_encoded_string": 10,
                    "print_escaped_string": 2,
                    "print_formatted_data": 1,
                    "print_formatted_string": 1,
                    "print_formatted_string_with_escape_sequences": 1,
                    "print_reversed_string": 1,
                    "print_string": 1,
                    "print_unicode_string": 1,
                    "print_unicode_strings": 1
                },
                "__s": {
                    "char_array": 1,
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "char_ptr2": 4,
                    "char_var2": 1,
                    "current_formatted_string": 1,
                    "s": 1,
                    "str3": 1,
                    "str_ptr2": 2,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "string_var": 1,
                    "temp_buffer": 1,
                    "temp_char_ptr": 1,
                    "temp_str": 3,
                    "temp_string": 3,
                    "temporary_string": 2,
                    "tmp_str": 1
                },
                "bVar15": {
                    "bool_var": 2,
                    "byte3": 5,
                    "byte_flag": 1,
                    "byte_val3": 1,
                    "byte_var": 9,
                    "byte_var15": 1,
                    "byte_variable": 1,
                    "flag": 3,
                    "found_char": 1,
                    "is_escaping": 1,
                    "loop_condition": 1,
                    "loop_flag": 1,
                    "temp_byte_var": 1,
                    "termination_flag": 1
                },
                "bVar2": {
                    "byte1": 21,
                    "byte_val1": 1,
                    "byte_value": 2,
                    "byte_var2": 1,
                    "current_byte": 4,
                    "current_char": 1
                },
                "bVar3": {
                    "byte2": 21,
                    "byte_val2": 1,
                    "byte_var3": 1,
                    "next_byte": 4,
                    "next_byte_value": 1,
                    "next_char": 1,
                    "second_byte_value": 1
                },
                "destination": {
                    "formatted_output": 1
                },
                "free": {
                    "free_memory": 1
                },
                "iVar4": {
                    "flag": 1,
                    "int1": 1,
                    "int_var": 6,
                    "int_var4": 1,
                    "integer": 1,
                    "integer_variable": 1,
                    "is_terminal": 11,
                    "is_terminal_result": 1,
                    "is_tty": 2,
                    "result": 3,
                    "return_value": 1,
                    "var1": 1
                },
                "in_stack_00000038": {
                    "extra_data2": 1,
                    "format_arg": 1,
                    "format_ptr": 1,
                    "in_queue": 1,
                    "in_stack": 1,
                    "in_stack_00000038": 2,
                    "in_stack_var": 2,
                    "in_stack_variable": 1,
                    "input_value": 1,
                    "stack_char": 1,
                    "stack_data": 1,
                    "stack_param": 1,
                    "stack_value": 1,
                    "stack_var": 7,
                    "stack_var1": 1,
                    "stack_variable": 1,
                    "temp_in_stack": 1,
                    "undefined1": 1,
                    "unused_param": 1,
                    "var8": 1
                },
                "isatty": {
                    "check_terminal": 1
                },
                "lVar13": {
                    "block_size": 1,
                    "char_counter": 1,
                    "length": 1,
                    "length2": 1,
                    "long2": 1,
                    "long_var": 7,
                    "long_var2": 1,
                    "long_var3": 1,
                    "long_variable": 1,
                    "loop_counter": 3,
                    "loop_var": 3,
                    "loop_var13": 1,
                    "num2": 1,
                    "sequence_length": 1,
                    "temp_long_var": 1,
                    "value": 1,
                    "var5": 1
                },
                "pSource": {
                    "source": 1
                },
                "pcVar7": {
                    "char_pointer": 2,
                    "char_ptr": 6,
                    "char_var": 1,
                    "fmt_string": 1,
                    "formatted_str": 1,
                    "formatted_string": 3,
                    "output": 1,
                    "output_string": 2,
                    "pointer3": 1,
                    "result_string": 1,
                    "str": 1,
                    "str1": 1,
                    "str_ptr": 5,
                    "string": 1,
                    "string_ptr": 1,
                    "temp_ptr": 1,
                    "temp_string": 1
                },
                "puVar1": {
                    "byte_pointer": 1,
                    "current_char": 1,
                    "data_pointer": 1,
                    "next_char_ptr": 1,
                    "p_dest": 1,
                    "p_target": 1,
                    "pointer": 2,
                    "pointer1": 3,
                    "ptr": 12,
                    "ptr1": 6
                },
                "puVar10": {
                    "char_ptr": 1,
                    "concat_ptr": 1,
                    "concat_str": 2,
                    "concat_string": 1,
                    "concatenation_string": 1,
                    "delimiter": 1,
                    "new_pointer": 1,
                    "pointer3": 2,
                    "pointer4": 1,
                    "pointer_to_dat": 1,
                    "pointer_var10": 1,
                    "ptr2": 1,
                    "ptr3": 7,
                    "reconcated_string": 1,
                    "replace_all_var": 1,
                    "special_char_pointer": 1,
                    "special_char_ptr": 1,
                    "str_ptr": 1,
                    "str_var": 1,
                    "undefined_pointer": 1
                },
                "puVar11": {
                    "current_char_ptr": 2,
                    "data_pointer3": 1,
                    "input_ptr": 3,
                    "input_string_pointer2": 1,
                    "p_next_char": 1,
                    "p_source": 1,
                    "pointer3": 1,
                    "pointer4": 2,
                    "pointer5": 1,
                    "pointer_var11": 1,
                    "ptr1": 2,
                    "ptr2": 1,
                    "ptr3": 3,
                    "ptr4": 6,
                    "src": 1,
                    "str_src": 1
                },
                "puVar12": {
                    "concatenated_string": 1,
                    "decoded_string": 2,
                    "decoded_string_ptr": 1,
                    "encoded_string": 1,
                    "heap_ptr": 1,
                    "output_str": 1,
                    "output_string": 1,
                    "output_string_ptr": 1,
                    "p_dest": 1,
                    "pointer4": 1,
                    "pointer5": 2,
                    "pointer6": 1,
                    "processed_data_pointer": 1,
                    "ptr4": 1,
                    "ptr5": 5,
                    "result": 2,
                    "result_ptr": 3,
                    "result_string_pointer2": 1,
                    "to_free_ptr": 1
                },
                "puVar6": {
                    "data_pointer2": 1,
                    "dest": 1,
                    "destination": 1,
                    "formatted_string_ptr": 1,
                    "output_ptr": 2,
                    "output_string": 1,
                    "p_dest": 1,
                    "p_destination": 1,
                    "pointer2": 4,
                    "ptr1": 2,
                    "ptr2": 11,
                    "ptr6": 1,
                    "result_string_pointer": 1,
                    "str_dest": 1
                },
                "sVar5": {
                    "input_length": 1,
                    "input_string_length": 2,
                    "length": 5,
                    "size": 4,
                    "size_var": 1,
                    "size_variable": 1,
                    "source_length": 1,
                    "str_len": 1,
                    "str_length": 4,
                    "string_len": 1,
                    "string_length": 7,
                    "string_size": 1,
                    "unaff_r13_length": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "uVar14": {
                    "case_value": 1,
                    "count": 1,
                    "counter": 1,
                    "inner_loop_counter": 1,
                    "length_counter": 1,
                    "loop_count": 1,
                    "loop_var": 1,
                    "loop_var14": 1,
                    "loop_var2": 1,
                    "num3": 1,
                    "num_bytes": 2,
                    "num_iterations": 1,
                    "option": 1,
                    "switch_case_var": 1,
                    "uint1": 1,
                    "uint_var": 9,
                    "uint_variable": 1,
                    "value2": 1,
                    "var6": 1
                },
                "uVar8": {
                    "buffer_size": 1,
                    "copy_length": 1,
                    "count": 5,
                    "length": 1,
                    "loop_counter": 3,
                    "num1": 1,
                    "num_bytes": 1,
                    "num_characters": 1,
                    "output_length": 2,
                    "string_length": 1,
                    "ulong1": 1,
                    "ulong_var": 9,
                    "ulong_var8": 1,
                    "ulong_variable": 1,
                    "var2": 1
                },
                "uVar9": {
                    "brace_char": 3,
                    "char1": 2,
                    "char_code": 3,
                    "char_val": 1,
                    "char_var": 1,
                    "character": 1,
                    "open_bracket": 1,
                    "special_char": 2,
                    "special_character": 1,
                    "start_brace": 1,
                    "switch_char": 1,
                    "u_var": 1,
                    "ulong2": 1,
                    "ulong_var2": 4,
                    "ulong_var9": 1,
                    "undefined_var": 2,
                    "undefined_variable": 1,
                    "unknown_var": 1,
                    "unsigned_var": 1,
                    "var3": 1
                },
                "unaff_BH": {
                    "is_second_byte": 1
                },
                "unaff_R12": {
                    "flag_ptr": 1,
                    "flag_variable": 1,
                    "null_ptr": 2,
                    "output_ptr": 1,
                    "ptr3": 1,
                    "ptr6": 2,
                    "ptr_unaff_r12": 1,
                    "r12": 3,
                    "reg2": 1,
                    "register12": 1,
                    "register2": 1,
                    "register_r12": 1,
                    "unaff_ptr1": 1,
                    "unaff_r12": 3,
                    "unaff_reg12": 1,
                    "unaff_var1": 1,
                    "unaff_var2": 1,
                    "unaffected_r12": 3,
                    "undefined_pointer": 1
                },
                "unaff_R13": {
                    "decoded_string": 1,
                    "input_ptr": 1,
                    "input_str": 1,
                    "input_string": 7,
                    "long_var2": 1,
                    "original_string": 2,
                    "ptr7": 2,
                    "ptr_unaff_r13": 1,
                    "r13": 3,
                    "reg3": 1,
                    "register13": 1,
                    "register3": 1,
                    "register_r13": 1,
                    "string_ptr": 1,
                    "string_to_encode": 1,
                    "unaff_ptr2": 1,
                    "unaff_r13": 2,
                    "unaff_reg13": 1,
                    "unaff_var3": 1,
                    "unaffected_r13": 1
                },
                "unaff_R14": {
                    "char_pointer": 1,
                    "format": 2,
                    "format_str": 2,
                    "format_string": 12,
                    "ptr_unaff_r14": 1,
                    "r14": 3,
                    "register14": 1,
                    "register4": 1,
                    "register_r14": 1,
                    "str2": 1,
                    "str_fmt": 1,
                    "unaff_r14": 1,
                    "unaff_str_ptr": 1,
                    "unaff_var4": 1,
                    "unaffected_r14": 1
                },
                "unaff_R15": {
                    "base_address": 1,
                    "context_ptr": 1,
                    "extra_data": 1,
                    "function_pointer": 3,
                    "function_ptr": 2,
                    "long3": 1,
                    "long_var3": 1,
                    "long_var4": 1,
                    "ptr_unaff_r15": 1,
                    "r15": 3,
                    "reg4": 1,
                    "register15": 3,
                    "register5": 1,
                    "register_r15": 1,
                    "unaff_r15": 4,
                    "unaff_var5": 1,
                    "unaffected_r15": 3,
                    "var7": 1
                },
                "unaff_RBP": {
                    "base_pointer": 4,
                    "base_ptr": 2,
                    "base_register": 1,
                    "long1": 1,
                    "long_var1": 2,
                    "orig_rbp": 1,
                    "rbp": 3,
                    "rbp_value": 1,
                    "reg1": 1,
                    "register1": 1,
                    "register_bp": 2,
                    "stack_frame_pointer": 1,
                    "stack_frame_ptr": 1,
                    "stack_pointer": 1,
                    "unaff_rbp": 3,
                    "unaff_stack_ptr": 1,
                    "unaff_var1": 1,
                    "unaffected_rbp": 3,
                    "var4": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_001047d0",
                "sprintf",
                "xmalloc",
                "isatty",
                "strlen",
                "free"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\n\n\nvoid print_encoded_string_0010268b(void)\n\n{\n  undefined8 *ptr;\n  byte byte1;\n  byte byte2;\n  int is_terminal;\n  size_t string_length;\n  undefined8 *ptr2;\n  char *char_ptr;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  undefined *ptr3;\n  undefined8 *ptr4;\n  long base_pointer;\n  undefined8 *ptr5;\n  undefined *unaff_r12;\n  undefined8 *input_string;\n  long long_var;\n  uint uint_var;\n  char *sprintf;\n  long unaff_r15;\n  byte byte_var;\n  char *char_ptr2;\n  undefined8 stack_var;\n  \n  byte_var = 0;\n  ptr5 = input_string;\n  if (DAT_0010b7e0 != 0) {\n    do {\n      byte1 = *(byte *)ptr5;\n      if (byte1 == 0) goto LAB_0010485e;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) &&\n            (ptr5 = (undefined8 *)((long)ptr5 + 1), byte1 < 0xc0));\n    string_length = strlen((char *)input_string);\n    ptr5 = DAT_0010b790;\n    ptr4 = input_string;\n    if (_DAT_0010b798 < string_length * 9) {\n      free_memory(DAT_0010b790);\n      string_length = strlen((char *)input_string);\n      _DAT_0010b798 = string_length * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      ptr5 = DAT_0010b790;\n    }\n    while( true ) {\n      input_string = DAT_0010b790;\n      byte1 = *(byte *)ptr4;\n      ptr = (undefined8 *)((long)ptr4 + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)ptr5 = byte1;\n          ptr5 = (undefined8 *)((long)ptr5 + 1);\n          ptr4 = ptr;\n        }\n        else {\n          byte2 = *(byte *)((long)ptr4 + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = ptr5;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                is_terminal = isatty(1);\n                if (is_terminal == 0) {\n                  byte2 = *(byte *)((long)ptr4 + 1);\n                }\n                else {\n                  *(undefined *)(ptr5 + 1) = 0;\n                  *ptr5 = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)ptr4 + 1);\n                  ptr2 = ptr5 + 1;\n                }\n              case 2:\n                uint_var = 2;\n                format_string((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)ptr4 >> 2 & 7),\n                        (ulong)((*(byte *)ptr4 & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)ptr4 + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)ptr2 = *(undefined *)ptr4;\n                    ptr4 = (undefined8 *)((long)ptr4 + (ulong)byte_var * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)byte_var * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  format_string((char *)ptr5,\"%c\",ulong_var2);\n                  *(undefined *)((long)ptr5 + 3) = 0;\n                  ptr2 = (undefined8 *)(long_var + (long)ptr4);\n                  *(undefined2 *)((long)ptr5 + 1) = 0x7830;\n                  char_ptr = (char *)((long)ptr5 + 3);\n                  do {\n                    char_ptr2 = char_ptr;\n                    byte1 = *(byte *)ptr4;\n                    ptr4 = (undefined8 *)((long)ptr4 + 1);\n                    format_string(char_ptr2,\"%02x\",(ulong)byte1);\n                    char_ptr = char_ptr2 + 2;\n                  } while (ptr4 != ptr2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  format_string(char_ptr2 + 2,\"%c\",ulong_var2);\n                  ptr2 = (undefined8 *)(char_ptr2 + 3);\n                  break;\n                case 4:\n                  is_terminal = isatty(1);\n                  if (is_terminal == 0) {\n                    byte2 = *(byte *)((long)ptr4 + 2);\n                  }\n                  else {\n                    *(undefined *)(ptr5 + 1) = 0;\n                    *ptr5 = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)ptr4 + 2);\n                    ptr2 = ptr5 + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  format_string((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)ptr4 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)ptr4 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)ptr4 + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (is_terminal = isatty(1), is_terminal != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)ptr4 + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  is_terminal = isatty(1);\n                  if (is_terminal != 0) {\n                    *(undefined *)(ptr5 + 1) = 0;\n                    *ptr5 = 0x6d37343b31335b1b;\n                    ptr2 = ptr5 + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  is_terminal = format_string((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)ptr4 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr4 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)ptr4 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr4 + 2) >> 2 & 0xfU));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)is_terminal);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)ptr2 - (int)ptr5);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)ptr5 = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          ptr5 = (undefined8 *)((long)ptr5 + ulong_var);\n          ptr4 = (undefined8 *)((long)ptr + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)ptr5 = 0x5e;\n        *(byte *)((long)ptr5 + 1) = byte1 + 0x40;\n        ptr5 = (undefined8 *)((long)ptr5 + 2);\n        ptr4 = ptr;\n      }\n    }\n    *(undefined *)ptr5 = 0;\n  }\nLAB_0010485e:\n  ptr5 = (undefined8 *)0x0;\n  if ((((base_pointer != 0) && (*(long *)(base_pointer + 0x10) != 0)) && (DAT_0010b234 != 0)) &&\n     ((char_ptr = (char *)(**(code **)(*(long *)(unaff_r15 + 8) + 0x220))\n                                  (unaff_r15,*(long *)(base_pointer + 0x10),0,\n                                   (long)&stack0x00000038 + 7), char_ptr != (char *)0x0 &&\n      (*char_ptr != '\\0')))) {\n    ptr3 = &DAT_001071e0;\n    if ((stack_var._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(base_pointer + 0x10) + 0x20) != 0x10c2a8)) {\n      ptr3 = &DAT_001071df;\n    }\n    ptr5 = (undefined8 *)reconcat(0,input_string,ptr3,char_ptr,0);\n    input_string = ptr5;\n  }\n  printf(format_string,input_string);\n  if (unaff_r12 != (undefined *)0x0) {\n    *unaff_r12 = 0x40;\n  }\n  free_memory(ptr5);\n  return;\n}\n\n",
            "current_name": "print_encoded_string_0010268b",
            "entrypoint": "0x0010268b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010268b": "print_encoded_string_0010268b",
                "__s": "char_ptr2",
                "bVar15": "byte_var",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "free": "free_memory",
                "iVar4": "is_terminal",
                "in_stack_00000038": "stack_var",
                "isatty": "check_terminal",
                "lVar13": "long_var",
                "pcVar7": "char_ptr",
                "puVar1": "ptr",
                "puVar10": "ptr3",
                "puVar11": "ptr4",
                "puVar12": "ptr5",
                "puVar6": "ptr2",
                "sVar5": "string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar14": "uint_var",
                "uVar8": "ulong_var",
                "uVar9": "ulong_var2",
                "unaff_R12": "unaff_r12",
                "unaff_R13": "input_string",
                "unaff_R14": "format_string",
                "unaff_R15": "unaff_r15",
                "unaff_RBP": "base_pointer",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102739": {
            "additional_data": {
                "DAT_0010b234": {
                    "is_external_call_enabled": 1
                },
                "DAT_0010b790": {
                    "buffer": 1,
                    "output_buffer_ptr": 1,
                    "temp_str": 1
                },
                "DAT_0010b7e0": {
                    "dat_0010b7e0": 1,
                    "encoding_type": 2
                },
                "DAT_0010b814": {
                    "dat_0010b814": 1,
                    "is_demangle_enabled": 2
                },
                "FUN_00102739": {
                    "decode_and_format": 1,
                    "decode_and_print": 1,
                    "decode_and_print_string": 5,
                    "print_formatted_string": 2,
                    "process_string": 1,
                    "reverse_and_print": 2,
                    "reverse_and_print_string": 8
                },
                "PTR_FUN_0010268b": {
                    "check_encoding": 1
                },
                "PTR_FUN_001047d0": {
                    "handle_special_case": 1
                },
                "PTR_sch_istable": {
                    "character_table_ptr": 1
                },
                "_DAT_0010b798": {
                    "_buffer_size": 1,
                    "output_buffer_size": 1,
                    "temp_str_size": 1
                },
                "__c": {
                    "c": 1,
                    "character": 1
                },
                "__format": {
                    "format_string": 1
                },
                "__ptr": {
                    "buffer": 1,
                    "concatenated_string": 1,
                    "decoded_string": 4,
                    "demangled_string": 1,
                    "formatted_string": 1,
                    "modified_str": 1,
                    "modified_string": 1,
                    "new_pointer": 2,
                    "new_value": 1,
                    "output_string": 1,
                    "pointer3": 1,
                    "pointer5": 1,
                    "ptr3": 2,
                    "reconstructed_string": 1,
                    "result": 6,
                    "result_pointer": 1,
                    "result_ptr": 3,
                    "result_str": 1,
                    "temp_string": 1
                },
                "__s": {
                    "char_pointer3": 1,
                    "char_pointer4": 1,
                    "char_ptr": 1,
                    "char_ptr3": 2,
                    "char_ptr4": 2,
                    "concatenated_string": 1,
                    "current_position": 1,
                    "new_string": 1,
                    "new_value2": 1,
                    "output_string": 1,
                    "pointer10": 1,
                    "pointer_to_string": 1,
                    "ptr_char3": 1,
                    "s_pointer": 1,
                    "sprintf_ptr": 1,
                    "str2": 1,
                    "str_ptr": 1,
                    "string_buffer": 1,
                    "string_pointer": 3,
                    "temp_ptr": 1,
                    "temp_string": 4,
                    "temp_string4": 1
                },
                "_sch_istable": {
                    "_sch_istable": 1,
                    "character_table": 1
                },
                "bVar15": {
                    "b_var15": 1,
                    "byte3": 5,
                    "byte_flag": 1,
                    "byte_value": 1,
                    "byte_value2": 1,
                    "byte_value3": 1,
                    "byte_var": 6,
                    "byte_var1": 2,
                    "byte_var15": 1,
                    "byte_var4": 1,
                    "byte_variable": 1,
                    "flag": 3,
                    "loop_condition": 1,
                    "loop_counter": 1,
                    "skip_demangle": 1,
                    "temp_byte3": 1
                },
                "bVar2": {
                    "byte1": 17,
                    "byte_1": 1,
                    "byte_value": 1,
                    "byte_value1": 1,
                    "byte_var2": 3,
                    "byte_variable2": 1,
                    "ch": 1,
                    "current_byte": 2,
                    "current_char": 1,
                    "current_input_char": 1,
                    "temp_byte": 1
                },
                "bVar3": {
                    "byte2": 17,
                    "byte_2": 1,
                    "byte_value2": 1,
                    "byte_var3": 3,
                    "byte_variable3": 1,
                    "next_byte": 2,
                    "next_ch": 1,
                    "next_char": 1,
                    "next_input_char": 1,
                    "second_byte_value": 1,
                    "temp_byte2": 1
                },
                "free": {
                    "free_memory": 1
                },
                "iVar4": {
                    "index": 1,
                    "int1": 2,
                    "int_value": 2,
                    "int_var": 8,
                    "int_var1": 1,
                    "int_var4": 2,
                    "int_variable": 1,
                    "integer1": 2,
                    "is_terminal": 1,
                    "is_tty": 2,
                    "result": 2,
                    "return_value": 3,
                    "temp_int": 1,
                    "terminal_status": 1,
                    "var4": 1
                },
                "in_stack_00000038": {
                    "arg4": 1,
                    "constant_var1": 1,
                    "format_arg": 1,
                    "parameter1": 1,
                    "stack_value": 2,
                    "stack_var": 2,
                    "stack_variable": 3,
                    "temp_arg": 1,
                    "var_arg1": 1,
                    "var_in_stack": 1
                },
                "isatty": {
                    "is_terminal": 1
                },
                "lVar13": {
                    "for_loop_var": 1,
                    "length": 4,
                    "length_var": 1,
                    "long1": 1,
                    "long2": 2,
                    "long_value": 1,
                    "long_value3": 1,
                    "long_var": 2,
                    "long_var1": 3,
                    "long_var13": 2,
                    "long_var2": 2,
                    "long_var3": 1,
                    "long_variable": 1,
                    "loop_length": 1,
                    "loop_size": 1,
                    "number_length": 1,
                    "var13": 1
                },
                "malloc": {
                    "allocate_memory": 1
                },
                "pcVar6": {
                    "at_sign_position": 1,
                    "at_sign_ptr": 1,
                    "at_symbol": 1,
                    "at_symbol_location": 2,
                    "at_symbol_pointer": 2,
                    "at_symbol_position": 3,
                    "char_pointer": 1,
                    "char_pointer1": 1,
                    "char_ptr1": 4,
                    "character_pointer": 1,
                    "pointer2": 2,
                    "pointer_char": 1,
                    "pointer_to_char": 1,
                    "pointer_to_symbol": 1,
                    "pointer_var6": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_char": 1,
                    "ptr_pc": 1,
                    "search_result": 1
                },
                "pcVar8": {
                    "bitwise_formatted_output_pointer": 1,
                    "char_pointer2": 2,
                    "char_ptr2": 4,
                    "demangle_result": 1,
                    "demangled_str": 1,
                    "demangled_string": 6,
                    "function_output": 1,
                    "pointer4": 2,
                    "pointer_char2": 1,
                    "pointer_to_char2": 1,
                    "pointer_to_string": 1,
                    "pointer_var8": 2,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr_char2": 1,
                    "ptr_pc2": 1,
                    "temp_string2": 1
                },
                "printf": {
                    "print_formatted_string": 1
                },
                "puVar1": {
                    "current_char_pointer": 1,
                    "next_ptr": 1,
                    "output_pointer": 1,
                    "pointer": 2,
                    "pointer1": 6,
                    "pointer_var1": 1,
                    "ptr": 3,
                    "ptr1": 6,
                    "ptr_destination": 1
                },
                "puVar11": {
                    "concat_suffix": 1,
                    "concatenation_point": 1,
                    "concatenation_string": 1,
                    "delimiter": 1,
                    "format_specifier": 1,
                    "output_prefix": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer5": 1,
                    "pointer6": 1,
                    "pointer_var": 1,
                    "pointer_var11": 1,
                    "ptr11": 1,
                    "ptr2": 1,
                    "ptr3": 2,
                    "ptr4": 2,
                    "ptr6": 1,
                    "ptr_prefix": 1,
                    "special_char_string": 1,
                    "special_character_ptr": 1,
                    "table_pointer": 1,
                    "undefined_pointer": 1
                },
                "puVar12": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "decoded_output_pointer": 1,
                    "encoded_string": 1,
                    "new_pointer": 1,
                    "output_str": 1,
                    "output_string": 3,
                    "pointer3": 1,
                    "pointer4": 2,
                    "pointer5": 1,
                    "pointer6": 1,
                    "pointer7": 1,
                    "pointer_var12": 2,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr3": 3,
                    "ptr4": 1,
                    "ptr5": 2,
                    "ptr_result": 1,
                    "temporary_ptr_destination": 1
                },
                "puVar7": {
                    "buffer": 1,
                    "current_output_char": 1,
                    "current_position_output": 1,
                    "formatted_output_pointer": 1,
                    "new_pointer2": 1,
                    "output_buffer": 1,
                    "output_pointer": 1,
                    "pointer2": 4,
                    "pointer3": 2,
                    "pointer_var7": 2,
                    "ptr1": 1,
                    "ptr2": 8,
                    "ptr3": 1,
                    "ptr_destination2": 1,
                    "result_ptr": 1,
                    "temp_ptr": 1
                },
                "sVar5": {
                    "size": 10,
                    "size1": 1,
                    "size_value": 1,
                    "size_var": 2,
                    "size_var1": 1,
                    "size_var5": 2,
                    "size_variable": 1,
                    "str_len": 1,
                    "string_length": 6,
                    "string_size": 2,
                    "target_length": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "stack0x00000038": {
                    "argument": 1
                },
                "strchr": {
                    "find_char": 1
                },
                "strcpy": {
                    "copy_string": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "strncmp": {
                    "compare_strings": 1
                },
                "uVar10": {
                    "extra_byte": 1,
                    "marker": 1,
                    "special_char": 1,
                    "special_character": 1,
                    "temp_char": 1,
                    "temp_value2": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "u_var": 2,
                    "u_var1": 1,
                    "u_var10": 1,
                    "ulong2": 4,
                    "ulong_var2": 8,
                    "undefined8_value": 1,
                    "unicode_char": 1,
                    "unicode_prefix": 1,
                    "unsigned_var10": 1
                },
                "uVar14": {
                    "char_count": 1,
                    "count": 2,
                    "int_value2": 1,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "number": 1,
                    "switch_case_value": 1,
                    "switch_case_var": 1,
                    "temp_value3": 1,
                    "u_var": 1,
                    "uint1": 3,
                    "uint_var": 6,
                    "uint_var1": 2,
                    "uint_variable": 1,
                    "unsigned_var14": 2,
                    "var14": 1
                },
                "uVar9": {
                    "byte_count": 2,
                    "counter": 1,
                    "length": 1,
                    "length_difference": 1,
                    "loop_counter": 2,
                    "num_bytes_written": 1,
                    "size": 1,
                    "string_length": 1,
                    "temp_size": 1,
                    "temp_value": 1,
                    "temp_variable2": 1,
                    "ulong1": 4,
                    "ulong_value": 2,
                    "ulong_var": 3,
                    "ulong_var1": 5
                },
                "unaff_R13": {
                    "decoded_string": 1,
                    "input_pointer": 1,
                    "input_str": 2,
                    "input_string": 6,
                    "long_var2": 1,
                    "pointer": 1,
                    "pointer6": 1,
                    "pointer8": 1,
                    "ptr": 1,
                    "ptr4": 2,
                    "ptr5": 1,
                    "ptr6": 1,
                    "ptr_result2": 1,
                    "register13": 1,
                    "register_r13": 2,
                    "string": 2,
                    "string_ptr": 1,
                    "text": 1,
                    "unaff_r13": 1,
                    "unaffected_r13": 1,
                    "unaffected_r13_value": 1
                },
                "unaff_R14": {
                    "arg3": 1,
                    "char_pointer3": 1,
                    "char_ptr3": 2,
                    "format": 2,
                    "format_str": 2,
                    "format_string": 9,
                    "long_var4": 1,
                    "output_format": 1,
                    "pointer9": 1,
                    "ptr7": 1,
                    "ptr_result3": 1,
                    "register14": 1,
                    "register2": 1,
                    "register_r14": 2,
                    "str": 1,
                    "string": 1,
                    "unaff_r14": 1,
                    "unaffected_r14": 1,
                    "unaffected_r14_value": 1
                },
                "unaff_R15": {
                    "arg1": 1,
                    "base_pointer": 2,
                    "context": 3,
                    "ctx": 1,
                    "frame_pointer": 1,
                    "function_pointer": 1,
                    "long3": 2,
                    "long_value": 1,
                    "long_var": 1,
                    "long_var3": 2,
                    "long_var5": 1,
                    "message": 1,
                    "offset": 1,
                    "register15": 1,
                    "register3": 1,
                    "register_r15": 2,
                    "stack_frame_ptr": 1,
                    "stack_pointer": 1,
                    "unaff_r15": 3,
                    "unaffected_r15": 1,
                    "unaffected_r15_value": 1,
                    "val1": 1
                },
                "unaff_RBP": {
                    "": 1,
                    "arg2": 1,
                    "base_pointer": 5,
                    "base_ptr": 2,
                    "context_pointer": 1,
                    "local_var1": 1,
                    "long1": 2,
                    "long_value2": 1,
                    "long_var": 2,
                    "long_var1": 1,
                    "pointer_to_buffer": 1,
                    "register1": 1,
                    "register_bp": 2,
                    "related_parameter": 1,
                    "stack_frame": 2,
                    "stack_pointer": 2,
                    "unaff_rbp": 2,
                    "unaffected_rbp": 1,
                    "unaffected_rbp_value": 1
                },
                "unaff_RBX": {
                    "output_buffer": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_001047d0",
                "strchr",
                "printf",
                "FUN_0010268b",
                "bfd_demangle"
            ],
            "calling": [
                "FUN_00104740"
            ],
            "code": "\n\n\nvoid reverse_and_print_string_00102739(void)\n\n{\n  undefined8 *ptr1;\n  byte byte1;\n  byte byte2;\n  int int_var;\n  size_t size;\n  char *char_ptr1;\n  undefined8 *ptr2;\n  char *demangled_string;\n  undefined8 *result;\n  ulong ulong_var1;\n  undefined8 ulong_var2;\n  undefined *ptr3;\n  long base_pointer;\n  undefined8 *output_string;\n  undefined8 *input_string;\n  long length;\n  uint uint_var;\n  char *sprintf;\n  long context;\n  byte byte_var;\n  char *temp_string;\n  undefined8 stack_variable;\n  \n  byte_var = 0;\n  output_string = input_string;\n  if (*(int *)(*(long *)(context + 8) + 8) != 5) {\n    if (DAT_0010b814 != 0) {\n      char_ptr1 = (char *)0x0;\n      goto LAB_0010482b;\n    }\n    char_ptr1 = (char *)0x0;\n    if (DAT_0010b7e0 == 0) {\nLAB_00104794:\n      result = (undefined8 *)0x0;\n    }\n    else {\n      result = (undefined8 *)0x0;\n      if (input_string != (undefined8 *)0x0) goto LAB_0010269d;\n      result = (undefined8 *)0x0;\n      input_string = (undefined8 *)0x1073a6;\n    }\n    goto joined_r0x00104799;\n  }\n  char_ptr1 = strchr((char *)input_string,0x40);\n  if (char_ptr1 == (char *)0x0) {\n    if (DAT_0010b814 != 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 == 0) {\n      if (base_pointer == 0) {\n        result = (undefined8 *)0x0;\n        printf(format_string);\n      }\n      else {\n        if (*(long *)(base_pointer + 0x10) != 0) {\n          FUN_001047d0();\n          return;\n        }\n        result = (undefined8 *)0x0;\n        printf(format_string);\n      }\n      goto LAB_001047ba;\n    }\nLAB_00102698:\n    output_string = input_string;\n    result = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      byte1 = *(byte *)output_string;\n      if (byte1 == 0) goto joined_r0x00104799;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) &&\n            (output_string = (undefined8 *)((long)output_string + 1), byte1 < 0xc0));\n    size = strlen((char *)input_string);\n    output_string = DAT_0010b790;\n    if (_DAT_0010b798 < size * 9) {\n      free_memory(DAT_0010b790);\n      size = strlen((char *)input_string);\n      _DAT_0010b798 = size * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      output_string = DAT_0010b790;\n    }\n    while( true ) {\n      ptr2 = DAT_0010b790;\n      byte1 = *(byte *)input_string;\n      ptr1 = (undefined8 *)((long)input_string + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)output_string = byte1;\n          output_string = (undefined8 *)((long)output_string + 1);\n          input_string = ptr1;\n        }\n        else {\n          byte2 = *(byte *)((long)input_string + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = output_string;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                length = 2;\n                goto LAB_00102917;\n              case 4:\n                int_var = isatty(1);\n                if (int_var == 0) {\n                  byte2 = *(byte *)((long)input_string + 1);\n                }\n                else {\n                  *(undefined *)(output_string + 1) = 0;\n                  *output_string = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)input_string + 1);\n                  ptr2 = output_string + 1;\n                }\n              case 2:\n                uint_var = 2;\n                format_string((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)input_string >> 2 & 7)\n                        ,(ulong)((*(byte *)input_string & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)input_string + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var1 = (ulong)uint_var; ulong_var1 != 0; ulong_var1 = ulong_var1 - 1) {\n                    *(undefined *)ptr2 = *(undefined *)input_string;\n                    input_string = (undefined8 *)((long)input_string + (ulong)byte_var * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)byte_var * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  length = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  format_string((char *)output_string,\"%c\",ulong_var2);\n                  *(undefined *)((long)output_string + 3) = 0;\n                  ptr2 = (undefined8 *)(length + (long)input_string);\n                  *(undefined2 *)((long)output_string + 1) = 0x7830;\n                  demangled_string = (char *)((long)output_string + 3);\n                  do {\n                    temp_string = demangled_string;\n                    byte1 = *(byte *)input_string;\n                    input_string = (undefined8 *)((long)input_string + 1);\n                    format_string(temp_string,\"%02x\",(ulong)byte1);\n                    demangled_string = temp_string + 2;\n                  } while (input_string != ptr2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)length;\n                  format_string(temp_string + 2,\"%c\",ulong_var2);\n                  ptr2 = (undefined8 *)(temp_string + 3);\n                  break;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)input_string + 2);\n                  }\n                  else {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)input_string + 2);\n                    ptr2 = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  format_string((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)input_string & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)input_string + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)input_string + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (int_var = isatty(1), int_var != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)input_string + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  length = 4;\n                  goto LAB_00102917;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var != 0) {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    ptr2 = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  int_var = format_string((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)input_string & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)input_string + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)input_string + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)input_string + 2) >> 2 & 0xfU));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)int_var);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var1 = (ulong)(uint)((int)ptr2 - (int)output_string);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)output_string = byte1;\n            uint_var = 1;\n            ulong_var1 = 1;\n          }\n          output_string = (undefined8 *)((long)output_string + ulong_var1);\n          input_string = (undefined8 *)((long)ptr1 + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)output_string = 0x5e;\n        *(byte *)((long)output_string + 1) = byte1 + 0x40;\n        output_string = (undefined8 *)((long)output_string + 2);\n        input_string = ptr1;\n      }\n    }\n    *(undefined *)output_string = 0;\n    input_string = ptr2;\n  }\n  else {\n    *char_ptr1 = '\\0';\n    if (DAT_0010b814 == 0) {\n      if (DAT_0010b7e0 == 0) goto LAB_00104794;\n      result = (undefined8 *)0x0;\n      goto LAB_0010269d;\n    }\nLAB_0010482b:\n    if ((*(char *)input_string == '\\0') ||\n       (output_string = (undefined8 *)bfd_demangle(), output_string == (undefined8 *)0x0)) {\n      if (DAT_0010b7e0 != 0) goto LAB_00102698;\n      result = (undefined8 *)0x0;\n    }\n    else {\n      input_string = output_string;\n      result = output_string;\n      if (DAT_0010b7e0 != 0) goto LAB_0010269d;\n    }\n  }\njoined_r0x00104799:\n  if ((((base_pointer != 0) && (*(long *)(base_pointer + 0x10) != 0)) && (DAT_0010b234 != 0)) &&\n     ((demangled_string = (char *)(**(code **)(*(long *)(context + 8) + 0x220))\n                                  (context,*(long *)(base_pointer + 0x10),0,\n                                   (long)&argument + 7), demangled_string != (char *)0x0 &&\n      (*demangled_string != '\\0')))) {\n    ptr3 = &DAT_001071e0;\n    if ((stack_variable._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(base_pointer + 0x10) + 0x20) != 0x10c2a8)) {\n      ptr3 = &DAT_001071df;\n    }\n    result = (undefined8 *)reconcat(result,input_string,ptr3,demangled_string,0);\n    input_string = result;\n  }\n  printf(format_string,input_string);\n  if (char_ptr1 != (char *)0x0) {\n    *char_ptr1 = '@';\n  }\nLAB_001047ba:\n  free_memory(result);\n  return;\n}\n\n",
            "current_name": "reverse_and_print_string_00102739",
            "entrypoint": "0x00102739",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102739": "reverse_and_print_string_00102739",
                "__ptr": "result",
                "__s": "temp_string",
                "bVar15": "byte_var",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "free": "free_memory",
                "iVar4": "int_var",
                "in_stack_00000038": "stack_variable",
                "isatty": "is_terminal",
                "lVar13": "length",
                "malloc": "allocate_memory",
                "pcVar6": "char_ptr1",
                "pcVar8": "demangled_string",
                "printf": "print_formatted_string",
                "puVar1": "ptr1",
                "puVar11": "ptr3",
                "puVar12": "output_string",
                "puVar7": "ptr2",
                "sVar5": "size",
                "sprintf": "format_string",
                "stack0x00000038": "argument",
                "strchr": "find_char",
                "strlen": "get_string_length",
                "uVar10": "ulong_var2",
                "uVar14": "uint_var",
                "uVar9": "ulong_var1",
                "unaff_R13": "input_string",
                "unaff_R14": "format_string",
                "unaff_R15": "context",
                "unaff_RBP": "base_pointer",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c19": {
            "additional_data": {
                "DAT_0010b760": {
                    "flag": 1
                },
                "FUN_00102c19": {
                    "analyze_lto_object": 1,
                    "decompiled_function": 2,
                    "extract_lto_objects": 1,
                    "handle_lto_object": 1,
                    "process_data": 1,
                    "process_lto_object": 5
                },
                "__ptr": {
                    "array_ptr": 1,
                    "dynamic_array": 1,
                    "other_pointer": 1,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer6": 1,
                    "pointer_two": 1,
                    "pointer_var_1": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_3": 1,
                    "ptr": 3,
                    "ret_ptr": 1,
                    "target_pointer": 1,
                    "temporary_ptr": 1
                },
                "bVar16": {
                    "bool1": 1,
                    "bool_value": 1,
                    "bool_var": 3,
                    "bool_var2": 1,
                    "bool_variable": 4,
                    "boolean": 1,
                    "boolean_16": 1,
                    "boolean_var": 1,
                    "boolean_var_1": 1,
                    "boolean_variable": 2,
                    "check": 1,
                    "current_bool": 1,
                    "found": 1,
                    "is_flag_set": 1,
                    "loop_condition": 1
                },
                "bVar17": {
                    "b": 1,
                    "b_var": 1,
                    "b_var17": 1,
                    "bool_var": 1,
                    "boolean_flag1": 1,
                    "byte": 1,
                    "byte1": 1,
                    "byte_17": 1,
                    "byte_value": 2,
                    "byte_var": 4,
                    "byte_var_1": 1,
                    "byte_variable": 6,
                    "copy_byte": 1,
                    "current_byte": 1,
                    "is_end": 1,
                    "loop_flag": 1
                },
                "cVar3": {
                    "c_var3": 1,
                    "char_3": 1,
                    "char_value": 1,
                    "char_var": 4,
                    "char_variable": 4,
                    "character": 3,
                    "character1": 1,
                    "character_1": 1,
                    "check_result": 1,
                    "current_char": 1,
                    "current_character": 1,
                    "result_char": 2
                },
                "iVar4": {
                    "comparison_result": 3,
                    "current_int": 1,
                    "current_integer": 1,
                    "i_var4": 1,
                    "int_value": 1,
                    "int_var": 4,
                    "int_variable": 4,
                    "integer": 3,
                    "integer1": 1,
                    "integer_4": 1,
                    "integer_var_1": 1,
                    "strcmp_result": 2
                },
                "ibVar4": {
                    "comparison_result": 1
                },
                "in_R8": {
                    "compar_fn_param1": 1,
                    "element_size": 1,
                    "in_register_8": 1,
                    "input_register_8": 1,
                    "input_variable_r8": 1,
                    "loop_item_count": 1,
                    "num_threads": 1,
                    "param_5": 1,
                    "pointer11": 1,
                    "register_r8": 1,
                    "undefined8_2": 1
                },
                "in_R9": {
                    "compar_fn_param2": 1,
                    "compare_data": 1,
                    "current_pointer6": 1,
                    "in_register_9": 1,
                    "input_variable_r9": 1,
                    "param_6": 1,
                    "pointer13": 1,
                    "register_r9": 1,
                    "undefined8_3": 1
                },
                "in_stack_00000008": {
                    "additional_data": 1,
                    "current_stack_value": 1,
                    "extra_data": 1,
                    "in_stack_00000008": 1,
                    "input_stack_variable1": 1,
                    "input_stack_variable_1": 1,
                    "param_1": 1,
                    "parameter1": 1,
                    "stack_param": 1,
                    "stack_param1": 1,
                    "stack_value": 1,
                    "stack_var1": 1,
                    "stack_var_1": 1,
                    "stack_variable1": 3,
                    "stack_variable_1": 1,
                    "undefined8_4": 1,
                    "undefined8_stack_variable": 1,
                    "unsigned_long_in_stack_00000008": 1,
                    "value1": 1
                },
                "in_stack_00000010": {
                    "current_stack_pointer10": 1,
                    "dynamic_array_copy": 1,
                    "in_stack_00000010": 1,
                    "input_stack_variable2": 1,
                    "input_stack_variable_2": 1,
                    "parameter2": 1,
                    "pointer15": 1,
                    "pointer17": 1,
                    "pointer_in_stack_00000010": 1,
                    "size_ptr": 1,
                    "sorted_data": 1,
                    "stack_param2": 1,
                    "stack_var2": 1,
                    "stack_var_2": 1,
                    "stack_variable2": 3,
                    "stack_variable_2": 1,
                    "temp4": 1,
                    "temp_array": 1,
                    "temp_ptr": 1,
                    "temporary_array": 1,
                    "undefined8_stack_variable2": 1
                },
                "in_stack_00000018": {
                    "current_stack_pointer18": 1,
                    "destination_copy": 1,
                    "in_stack_00000018": 1,
                    "input_stack_variable3": 1,
                    "input_stack_variable_3": 1,
                    "original_destination": 1,
                    "parameter3": 1,
                    "pointer16": 1,
                    "pointer18": 1,
                    "pointer_in_stack_00000018": 1,
                    "stack_param3": 1,
                    "stack_var3": 1,
                    "stack_var_3": 1,
                    "stack_variable3": 3,
                    "stack_variable_3": 1,
                    "temp2": 1,
                    "temp_pointer": 1,
                    "temporary_pointer2": 1,
                    "undefined8_stack_variable3": 1,
                    "unsorted_data": 1
                },
                "in_stack_00000038": {
                    "additional_value": 1,
                    "current_stack_value38": 1,
                    "element_size": 1,
                    "in_stack_00000038": 1,
                    "input_stack_variable4": 1,
                    "input_stack_variable_4": 1,
                    "loop_var2": 1,
                    "param_2": 1,
                    "parameter4": 1,
                    "stack_param4": 1,
                    "stack_parameter": 1,
                    "stack_var4": 1,
                    "stack_var_4": 1,
                    "stack_variable4": 3,
                    "stack_variable_4": 1,
                    "undefined8_5": 1,
                    "undefined8_stack_variable4": 1,
                    "unsigned_long_in_stack_00000038": 1,
                    "value2": 1
                },
                "in_stack_00000040": {
                    "additional_pointer": 1,
                    "current_stack_pointer": 1,
                    "in_stack_00000040": 1,
                    "input_stack_variable5": 1,
                    "input_stack_variable_5": 1,
                    "parameter5": 1,
                    "pointer17": 1,
                    "pointer19": 1,
                    "pointer_in_stack_00000040": 1,
                    "process_data": 1,
                    "stack_param5": 1,
                    "stack_var5": 1,
                    "stack_var_5": 1,
                    "stack_variable5": 3,
                    "stack_variable_5": 1,
                    "temp_memory": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr2": 1,
                    "void_pointer": 1
                },
                "in_stack_00000048": {
                    "additional_array": 1,
                    "current_stack_pointer48": 1,
                    "extra_data": 1,
                    "in_stack_00000048": 1,
                    "input_stack_variable6": 1,
                    "input_stack_variable_6": 1,
                    "original_source": 1,
                    "parameter6": 1,
                    "pointer18": 1,
                    "pointer20": 1,
                    "pointer_in_stack_00000048": 1,
                    "source_copy": 1,
                    "stack_param6": 1,
                    "stack_var6": 1,
                    "stack_var_6": 1,
                    "stack_variable6": 3,
                    "stack_variable_6": 1,
                    "temp_pointer_3": 1,
                    "undefined8_stack_variable5": 1
                },
                "lVar7": {
                    "current_long": 2,
                    "index": 1,
                    "iterator": 1,
                    "l_var7": 1,
                    "long1": 2,
                    "long_7": 1,
                    "long_integer": 1,
                    "long_value2": 1,
                    "long_var": 5,
                    "long_var_1": 1,
                    "long_variable": 3,
                    "long_variable_1": 1,
                    "loop_counter": 1,
                    "offset": 2
                },
                "lVar9": {
                    "count": 1,
                    "current_long2": 2,
                    "index": 1,
                    "l_var9": 1,
                    "long2": 2,
                    "long_9": 1,
                    "long_value3": 1,
                    "long_var1": 1,
                    "long_var2": 3,
                    "long_var_2": 1,
                    "long_variable": 1,
                    "long_variable2": 3,
                    "long_variable_2": 1,
                    "offset": 1,
                    "ret_long": 1,
                    "temp_variable": 1,
                    "temp_variable3": 1,
                    "var5": 1
                },
                "pcVar1": {
                    "char_ptr": 1,
                    "character_ptr_1": 1,
                    "current_char": 1,
                    "current_char_pointer": 1,
                    "current_string": 1,
                    "plugin_name": 4,
                    "pointer": 1,
                    "pointer1": 3,
                    "pointer_char_1": 1,
                    "pointer_var1": 1,
                    "pointer_variable1": 1,
                    "pointer_variable_1": 1,
                    "ptr1": 1,
                    "string_pointer": 2,
                    "string_ptr": 1
                },
                "pcVar2": {
                    "callback_function": 1,
                    "code_pointer": 1,
                    "code_ptr": 1,
                    "current_code": 1,
                    "current_code_pointer": 1,
                    "function_pointer": 4,
                    "function_ptr": 1,
                    "function_ptr_2": 1,
                    "plugin_function": 1,
                    "pointer2": 2,
                    "pointer_var2": 1,
                    "pointer_variable2": 1,
                    "pointer_variable_2": 1,
                    "ptr2": 1,
                    "sort_function": 1,
                    "sorting_func": 1
                },
                "puVar10": {
                    "current_pointer2": 2,
                    "dst_data": 1,
                    "entry": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer_to_unsigned_long_10": 1,
                    "pointer_unsigned_2": 1,
                    "pointer_var10": 1,
                    "pointer_var2": 1,
                    "pointer_variable10": 1,
                    "pointer_variable2": 2,
                    "pointer_variable_2": 1,
                    "pointer_variable_4": 1,
                    "ptr_var2": 3,
                    "result_pointer2": 1,
                    "temp": 1,
                    "temp_ptr": 1,
                    "temp_variable4": 1
                },
                "puVar11": {
                    "array_ptr": 1,
                    "base": 1,
                    "current_pointer11": 1,
                    "current_pointer3": 1,
                    "data": 1,
                    "obj_ptr": 1,
                    "pointer4": 1,
                    "pointer5": 1,
                    "pointer8": 1,
                    "pointer_to_unsigned_long_11": 1,
                    "pointer_unsigned_3": 1,
                    "pointer_var11": 1,
                    "pointer_var3": 1,
                    "pointer_variable3": 1,
                    "pointer_variable4": 1,
                    "pointer_variable_4": 1,
                    "pointer_variable_5": 1,
                    "ptr_var3": 3,
                    "size_ptr": 1,
                    "temp3": 1,
                    "temp_pointer": 1,
                    "temp_variable5": 1
                },
                "puVar12": {
                    "array_end": 1,
                    "current": 1,
                    "current_pointer12": 1,
                    "current_pointer4": 1,
                    "function_arguments": 1,
                    "input_array": 1,
                    "new_parameters": 1,
                    "pointer5": 1,
                    "pointer6": 1,
                    "pointer9": 1,
                    "pointer_to_unsigned_long_12": 1,
                    "pointer_unsigned_4": 1,
                    "pointer_var12": 1,
                    "pointer_var4": 1,
                    "pointer_variable4": 1,
                    "pointer_variable5": 1,
                    "pointer_variable_5": 1,
                    "pointer_variable_6": 1,
                    "ptr_var4": 3,
                    "target_ptr": 1,
                    "temp_variable6": 1
                },
                "puVar13": {
                    "current_pointer13": 1,
                    "current_pointer5": 1,
                    "loop_var": 1,
                    "new_source": 1,
                    "param_4": 1,
                    "pointer10": 1,
                    "pointer6": 1,
                    "pointer7": 1,
                    "pointer_to_unsigned_long_13": 1,
                    "pointer_unsigned_5": 1,
                    "pointer_var13": 1,
                    "pointer_var5": 1,
                    "pointer_variable": 1,
                    "pointer_variable5": 1,
                    "pointer_variable6": 1,
                    "pointer_variable_6": 1,
                    "pointer_variable_7": 1,
                    "process_result": 1,
                    "ptr_var5": 3,
                    "temp_variable7": 1
                },
                "puVar14": {
                    "current_pointer14": 1,
                    "local_ptr": 1,
                    "pointer12": 1,
                    "pointer7": 1,
                    "pointer8": 1,
                    "pointer_var14": 1,
                    "pointer_var6": 1,
                    "pointer_variable6": 1,
                    "pointer_variable7": 1,
                    "pointer_variable_7": 1,
                    "pointer_variable_8": 1,
                    "process_result2": 1,
                    "ptr_var6": 2,
                    "temp_var1": 1,
                    "temp_variable8": 1,
                    "temp_variable_2": 1,
                    "undefined_pointer_one": 1
                },
                "puVar15": {
                    "current_pointer15": 1,
                    "dest_end": 1,
                    "end": 1,
                    "new_destination": 1,
                    "output_array": 1,
                    "pointer10": 1,
                    "pointer14": 1,
                    "pointer9": 1,
                    "pointer_var15": 1,
                    "pointer_var7": 1,
                    "pointer_variable7": 1,
                    "pointer_variable8": 1,
                    "pointer_variable_9": 1,
                    "ptr_var7": 2,
                    "result_ptr": 1,
                    "sorted_array": 1,
                    "temp_var2": 1,
                    "temp_variable9": 1,
                    "undefined_pointer_two": 1
                },
                "puVar8": {
                    "compar_result": 1,
                    "current_pointer": 2,
                    "entry_ptr": 1,
                    "func_ptr": 1,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer_to_unsigned_long_8": 1,
                    "pointer_unsigned_1": 1,
                    "pointer_var1": 1,
                    "pointer_var8": 1,
                    "pointer_variable": 1,
                    "pointer_variable1": 1,
                    "pointer_variable8": 1,
                    "pointer_variable_1": 1,
                    "pointer_variable_3": 1,
                    "ptr_var1": 3,
                    "result": 2,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "src_data": 1,
                    "temp_variable1": 1
                },
                "uVar18": {
                    "current_unsigned2": 1,
                    "sort_ascending": 1,
                    "temp5": 1,
                    "temp_variable2": 1,
                    "ulong2": 1,
                    "ulong_value2": 1,
                    "ulong_var": 2,
                    "ulong_var2": 2,
                    "ulong_variable2": 2,
                    "ulong_variable3": 1,
                    "ulong_variable_2": 1,
                    "unsigned_long_18": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_var3": 1,
                    "unsigned_var_3": 1
                },
                "uVar5": {
                    "check_value": 1,
                    "condition_result": 1,
                    "current_uint": 1,
                    "current_unsigned": 1,
                    "is_match": 1,
                    "is_plugin": 1,
                    "is_slim_lto": 1,
                    "u_var5": 1,
                    "uint1": 1,
                    "uint_value": 1,
                    "uint_var": 4,
                    "uint_variable": 4,
                    "unsigned_integer": 2,
                    "unsigned_integer_5": 1,
                    "unsigned_var": 1,
                    "unsigned_var_1": 1
                },
                "uVar6": {
                    "current_ulong": 1,
                    "current_unsigned8": 1,
                    "error_message": 1,
                    "gettext_result": 1,
                    "long_value": 1,
                    "return_value": 1,
                    "translation": 2,
                    "u_var6": 1,
                    "ulong_var": 3,
                    "ulong_variable": 4,
                    "undefined8_1": 1,
                    "unsigned_integer2": 1,
                    "unsigned_long": 1,
                    "unsigned_long_6": 1,
                    "unsigned_var2": 1,
                    "unsigned_var_2": 1
                },
                "unaff_R12": {
                    "array_length": 1,
                    "block_size": 1,
                    "current_pointer_r12": 1,
                    "element_size": 2,
                    "index": 1,
                    "num_elements": 2,
                    "outer_loop_counter": 1,
                    "pointer10": 1,
                    "pointer11": 1,
                    "pointer15": 1,
                    "pointer_four": 1,
                    "pointer_to_unsigned_long_unaff_13": 1,
                    "pointer_variable11": 1,
                    "ptr_r12": 1,
                    "register_12": 1,
                    "register_r12": 2,
                    "size": 1,
                    "temp2": 1,
                    "unaff_register_r12": 1,
                    "unaffected_pointer_r12": 1,
                    "unaffected_r12": 2
                },
                "unaff_R13": {
                    "current_pointer_r13": 1,
                    "inner_loop_counter": 1,
                    "loop_ptr": 1,
                    "pointer11": 1,
                    "pointer12": 1,
                    "pointer16": 1,
                    "pointer_five": 1,
                    "pointer_to_unsigned_long_unaff_14": 1,
                    "pointer_variable12": 1,
                    "ptr_r13": 1,
                    "register_13": 1,
                    "register_r13": 2,
                    "source": 4,
                    "source_pointer": 1,
                    "source_ptr": 2,
                    "src_ptr": 1,
                    "temp_source": 1,
                    "unaff_register_r13": 1,
                    "unaffected_pointer_r13": 1,
                    "unaffected_r13": 2
                },
                "unaff_R14": {
                    "chunk_size": 1,
                    "count": 3,
                    "current_pointer_r14": 1,
                    "element_size": 2,
                    "loop_increment": 1,
                    "loop_size": 1,
                    "num_chunks": 1,
                    "pointer12": 1,
                    "pointer13": 1,
                    "pointer17": 1,
                    "pointer_six": 1,
                    "pointer_to_unsigned_long_unaff_15": 1,
                    "pointer_variable13": 1,
                    "ptr_r14": 1,
                    "register_14": 1,
                    "register_r14": 2,
                    "size": 2,
                    "unaff_register_r14": 1,
                    "unaffected_pointer_r14": 1,
                    "unaffected_r14": 2
                },
                "unaff_R15": {
                    "arg": 1,
                    "current_pointer_r15": 1,
                    "destination_ptr": 1,
                    "loop_end_ptr": 1,
                    "pointer13": 1,
                    "pointer14": 1,
                    "pointer18": 1,
                    "pointer_seven": 1,
                    "pointer_to_unsigned_long_unaff_16": 1,
                    "pointer_variable14": 1,
                    "process_func": 1,
                    "register_15": 1,
                    "register_r15": 2,
                    "temp": 2,
                    "temp1": 1,
                    "temp_ptr": 1,
                    "temporary": 1,
                    "temporary_pointer": 1,
                    "temporary_register": 1,
                    "ulong_var": 1,
                    "unaff_register_r15": 1,
                    "unaffected_pointer_r15": 1,
                    "unaffected_r15": 2
                },
                "unaff_RBP": {
                    "base_address": 1,
                    "base_ptr": 1,
                    "context": 1,
                    "current_pointer_rbp": 1,
                    "executable": 1,
                    "function_pointer": 2,
                    "function_pointers": 1,
                    "parameter_pointer": 1,
                    "parameters": 1,
                    "pointer16": 1,
                    "pointer7": 1,
                    "pointer9": 1,
                    "pointer_three": 1,
                    "pointer_to_unsigned_long_unaff_12": 1,
                    "pointer_unaff_var_2": 1,
                    "pointer_variable10": 1,
                    "ptr_rbp": 1,
                    "register_bp": 3,
                    "target": 1,
                    "unaff_rbp": 1,
                    "unaff_register_bp": 1,
                    "unaffected_pointer_rbp": 1,
                    "unaffected_rbp": 2
                },
                "unaff_RBX": {
                    "conditional_ptr": 1,
                    "current": 1,
                    "current_pointer_rbx": 1,
                    "dest_ptr": 1,
                    "destination": 4,
                    "destination_pointer": 1,
                    "pointer15": 1,
                    "pointer5": 1,
                    "pointer8": 1,
                    "pointer_one": 1,
                    "pointer_to_unsigned_long_unaff_11": 1,
                    "pointer_unaff_var_7": 1,
                    "pointer_variable9": 1,
                    "ptr_rbx": 1,
                    "register_bx": 3,
                    "source": 1,
                    "source_pointer": 1,
                    "unaff_rbx": 1,
                    "unaff_register_bx": 1,
                    "unaffected_pointer_rbx": 1,
                    "unaffected_rbx": 2
                },
                "unaff_retaddr": {
                    "copy_byte": 1,
                    "current_ulong2": 1,
                    "register_return_address": 2,
                    "ret_addr": 1,
                    "ret_address": 1,
                    "return_addr": 1,
                    "return_address": 5,
                    "return_value": 2,
                    "ulong1": 2,
                    "ulong_ret_addr": 1,
                    "ulong_value": 1,
                    "ulong_var_1": 1,
                    "ulong_variable2": 1,
                    "unaff_register_ret_addr": 1,
                    "unaffected_return_address": 3,
                    "undefined_long": 1,
                    "unsigned_long_unaff_retaddr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid process_lto_object_00102c19(void)\n\n{\n  char *plugin_name;\n  code *function_pointer;\n  char char_variable;\n  int int_variable;\n  uint uint_var;\n  undefined8 ulong_variable;\n  long long_var;\n  undefined8 *ptr_var1;\n  long long_var2;\n  undefined8 *ptr_var2;\n  undefined8 *destination;\n  undefined8 *ptr;\n  undefined8 *register_bp;\n  undefined8 *ptr_var3;\n  undefined8 *ptr_var4;\n  undefined8 *register_r8;\n  undefined8 *ptr_var5;\n  undefined8 *undefined8_3;\n  undefined8 *ptr_var6;\n  undefined8 *register_r12;\n  undefined8 *ptr_var7;\n  undefined8 *source;\n  undefined8 *count;\n  undefined8 *register_r15;\n  bool bool_variable;\n  byte byte_variable;\n  ulong return_address;\n  ulong ulong_variable2;\n  undefined8 stack_variable1;\n  undefined8 *stack_variable2;\n  undefined8 *stack_variable3;\n  undefined8 stack_variable4;\n  void *stack_variable5;\n  undefined8 *stack_variable6;\n  \n  byte_variable = 0;\n  if (_DAT_0010b760 == 0) goto LAB_001049c3;\nLAB_00104a7b:\n  do {\n    if (destination != source) {\n      if (count == (undefined8 *)0x8) {\n        *destination = *source;\n        FUN_001049c0();\n        return;\n      }\n      for (; count != (undefined8 *)0x0; count = (undefined8 *)((long)count + -1)) {\n        *(undefined *)destination = *(undefined *)source;\n        source = (undefined8 *)((long)source + (ulong)byte_variable * -2 + 1);\n        destination = (undefined8 *)((long)destination + (ulong)byte_variable * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n    destination = (undefined8 *)((long)destination + (long)count);\nLAB_001049c3:\n    do {\n      do {\n        source = (undefined8 *)((long)source + (long)count);\n        ptr_var7 = register_r12;\n        ptr_var4 = register_bp;\n        if (register_r12 <= source) goto LAB_00104b15;\nLAB_001049cf:\n        ptr_var1 = (undefined8 *)\n                 (**(code **)(register_bp[1] + 0x270))\n                           (register_bp,return_address & 0xffffffff,source,register_r15);\n        ptr_var3 = register_bp;\n        ptr_var4 = source;\n        ptr_var7 = register_r15;\n        if (ptr_var1 == (undefined8 *)0x0) goto LAB_00102eb0;\n        plugin_name = (char *)ptr_var1[1];\n        if (((plugin_name == (char *)0x0) || (*plugin_name != '_')) || (plugin_name[1] != '_')) {\nLAB_00104a03:\n          if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uint_var = (uint)(ptr_var1[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uint_var != 0) goto LAB_00104a2d;\n          source = (undefined8 *)((long)source + (long)count);\n          ptr_var7 = register_r12;\n          ptr_var4 = register_bp;\n          if (register_r12 <= source) {\nLAB_00104b15:\n            destination = (undefined8 *)((long)destination - (long)stack_variable3);\n            if (count == (undefined8 *)0x8) {\n              long_var2 = ptr_var4[1];\n              ptr_var3 = (undefined8 *)((long)destination + 7);\n              if (-1 < (long)destination) {\n                ptr_var3 = destination;\n              }\n              register_r8 = (undefined8 *)(ulong)DAT_0010b800;\n              function_pointer = *(code **)(long_var2 + 0x208);\n              ptr_var3 = (undefined8 *)((long)ptr_var3 >> 3);\n            }\n            else {\n              ptr_var3 = (undefined8 *)((long)destination / (long)count);\n              long_var2 = ptr_var4[1];\n              function_pointer = *(code **)(long_var2 + 0x208);\n            }\n            register_bp = ptr_var4;\n            if (DAT_0010b800 == 0) {\n              DAT_0010b778 = DAT_0010b80c != 0;\n              DAT_0010b780 = ptr_var4;\n              DAT_0010b770 = (undefined8 *)(*function_pointer)(ptr_var4);\n              DAT_0010b768 = (undefined8 *)(**(code **)(ptr_var4[1] + 0x208))(ptr_var4);\n              destination = stack_variable6;\n              if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n                FUN_00106530(*ptr_var4);\n                ptr = register_r15;\n                goto LAB_00102d8e;\n              }\n              register_r12 = (undefined8 *)(ulong)stack_variable4._4_4_;\n              if (DAT_0010b7f8 != 0) {\n                ulong_variable2 = (ulong)(DAT_0010b80c != 0);\n                qsort(stack_variable6,(size_t)ptr_var3,(size_t)register_r12,FUN_00102fd2);\n                ptr_var7 = (undefined8 *)xmalloc((long)ptr_var3 << 4);\n                ptr_var5 = DAT_0010b770;\n                register_bp = DAT_0010b768;\n                count = (undefined8 *)((long)ptr_var3 * (long)register_r12 + (long)destination);\n                ptr_var1 = DAT_0010b770;\n                undefined8_3 = DAT_0010b768;\n                if (count <= destination) goto LAB_00102ec2;\n                ptr_var3 = (undefined8 *)\n                          (**(code **)(ptr_var4[1] + 0x270))(ptr_var4,ulong_variable2 & 0xffffffff,destination);\n                ptr = destination;\n                register_r8 = register_r12;\n                stack_variable2 = ptr_var7;\n                if (ptr_var3 == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(stack_variable6,(size_t)ptr_var3,(size_t)register_r12,\n                    (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2])\n              ;\n              long_var2 = ptr_var4[1];\n            }\n            ptr = (undefined8 *)0x0;\n            do {\n              ptr_var4 = stack_variable6;\n              ptr_var1 = (undefined8 *)(ulong)DAT_0010b7f8;\n              count = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n              if (DAT_0010b7f8 != 0) {\n                ptr_var7 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n                if (ptr_var7 == (undefined8 *)0x0) goto LAB_00102ed2;\n                destination = ptr + (long)ptr_var3 * 2;\n                ptr_var3 = ptr;\n                do {\n                  if (destination <= ptr_var3) {\nLAB_00104c75:\n                    if (stack_variable5 == (void *)0x0) {\n                      free(stack_variable6);\n                      free(ptr);\n                      return;\n                    }\n                    free(stack_variable5);\n                    free(stack_variable6);\n                    free(ptr);\n                    return;\n                  }\n                  ptr_var1 = ptr_var7;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,count,*ptr_var3);\n                  if (long_var2 == 0) {\n                    FUN_00106530(*register_bp,0);\nLAB_00102ed2:\n                    ptr_var4 = (undefined8 *)*register_bp;\n                    FUN_00106530();\n                    ptr_var5 = register_r8;\n                    ptr_var6 = undefined8_3;\n                    goto LAB_00102edb;\n                  }\n                  ptr_var4 = ptr_var3 + 1;\n                  ptr_var3 = ptr_var3 + 2;\n                  FUN_00105110(register_bp,long_var2,*ptr_var4,stack_variable1);\n                } while( true );\n              }\n              register_r12 = (undefined8 *)(ulong)stack_variable4._4_4_;\n              register_r15 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n              if (register_r15 == (undefined8 *)0x0) {\n                FUN_00106530(*register_bp);\n                ptr_var4 = register_r12;\n                if (DAT_0010b80c == 0) {\n                  long_var2 = (**(code **)(register_bp[1] + 0x350))(register_bp);\n                  ptr_var3 = stack_variable6;\n                  ptr_var7 = register_r12;\n                  if (long_var2 < 1) {\n                    ptr_var1 = (undefined8 *)0x0;\n                    destination = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    destination = (undefined8 *)xmalloc();\n                    ptr_var1 = (undefined8 *)(**(code **)(register_bp[1] + 0x358))(register_bp,destination);\n                    ptr_var4 = ptr_var7;\n                    if ((long)ptr_var1 < 0) {\n                      ptr_var4 = (undefined8 *)*register_bp;\n                      ptr_var3 = (undefined8 *)FUN_00106530(ptr_var4,ptr_var7);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  ptr_var1 = register_r12;\n                  destination = stack_variable6;\n                  ptr_var3 = (undefined8 *)0x0;\n                  ptr_var7 = (undefined8 *)0x0;\n                }\n                undefined8_3 = &stack0x00000040;\n                register_r8 = destination;\n                long_var2 = (**(code **)(register_bp[1] + 0x360))(register_bp,ptr_var7,ptr_var3,ptr_var1);\n                register_r12 = ptr_var4;\n                if (0 < long_var2) {\n                  register_r12 = (undefined8 *)((long)ptr_var4 + long_var2);\n                  stack_variable6 = (undefined8 *)xrealloc(stack_variable6);\n                  long_var = 0;\n                  do {\n                    stack_variable6[(long)((long)ptr_var4 + long_var)] =\n                         (void *)(long_var * 0x30 + (long)stack_variable5);\n                    long_var = long_var + 1;\n                  } while (long_var2 != long_var);\n                  stack_variable6[(long)((long)ptr_var4 + long_var2)] = 0;\n                }\n                if ((DAT_0010b80c == 0) && (destination != (undefined8 *)0x0)) {\n                  free(destination);\n                }\n                if ((*(byte *)((long)register_bp + 0x4a) & 0x10) != 0) {\n                  destination = (undefined8 *)*register_bp;\n                  DAT_0010b230 = '\\0';\n                  ulong_variable = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  FUN_00106400(ulong_variable);\n                }\n                count = (undefined8 *)(ulong)stack_variable4._4_4_;\n                bool_variable = DAT_0010b80c != 0;\n                ptr_var3 = (undefined8 *)(ulong)bool_variable;\n                ptr_var1 = stack_variable6;\n                stack_variable3 = stack_variable6;\n                register_r15 = (undefined8 *)(**(code **)(register_bp[1] + 0x208))(register_bp);\n                if (register_r15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                ptr_var3 = (undefined8 *)((long)ptr_var3 * (long)register_r12 + (long)ptr_var4);\n                destination = ptr_var4;\n                while( true ) {\n                  if (ptr_var3 <= destination) goto LAB_00104c75;\n                  ptr_var1 = register_r15;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,count,destination);\n                  if (long_var2 == 0) break;\n                  destination = (undefined8 *)((long)destination + (long)register_r12);\n                  FUN_00105110(register_bp,long_var2,0,stack_variable1);\n                }\n                FUN_00106530(*register_bp,0);\n              }\n              FUN_00106530(*register_bp);\n              ptr_var4 = register_bp;\n              ptr_var7 = register_r15;\nLAB_00102eb0:\n              FUN_00106530(*ptr_var3);\nLAB_00102eb9:\n              FUN_00106530(*ptr_var4);\nLAB_00102ec2:\n              ptr_var3 = (undefined8 *)0x0;\n              ptr = destination;\n              register_r8 = register_r12;\n              ptr_var5 = ptr_var1;\n              register_bp = undefined8_3;\n              stack_variable2 = ptr_var7;\nLAB_00104e35:\n              while (undefined8_3 = ptr_var5, ptr < count) {\n                destination = (undefined8 *)((long)ptr + (long)register_r8);\n                if (destination < count) {\n                  ptr_var1 = register_bp;\n                  ptr_var5 = register_r8;\n                  ptr_var6 = undefined8_3;\n                  ptr_var2 = (undefined8 *)(**(code **)(ptr_var4[1] + 0x270))();\n                  if (ptr_var2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    undefined8_3 = ptr_var6;\n                    register_r8 = ptr_var5;\n                    ptr_var4 = (undefined8 *)*ptr_var4;\n                    ptr_var2 = (undefined8 *)FUN_00106530();\n                  }\n                  else {\n                    ptr_var1 = (undefined8 *)ptr_var3[4];\n                    if ((*(uint *)(ptr_var3 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  long_var2 = ptr_var3[2];\nLAB_00102ee7:\n                  if (ptr_var1 == (undefined8 *)ptr_var2[4]) {\n                    long_var2 = ptr_var2[2] - long_var2;\n                    ptr_var5 = register_bp;\n                    ptr_var6 = ptr;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  long_var2 = ptr_var1[8] - long_var2;\n                  ptr_var5 = register_bp;\n                  ptr_var6 = ptr;\n                }\n                else {\n                  ptr_var1 = (undefined8 *)ptr_var3[4];\n                  if ((*(uint *)(ptr_var3 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    long_var2 = ptr_var3[2];\n                    ptr_var2 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  ptr_var2 = (undefined8 *)0x0;\nLAB_00104e95:\n                  ptr_var5 = register_bp;\n                  ptr_var6 = ptr;\n                  if (*(int *)(ptr_var4[1] + 8) == 5) {\n                    long_var2 = ptr_var3[7];\n                  }\n                  else {\n                    long_var2 = ptr_var3[2];\n                    if ((*(byte *)((long)ptr_var1 + 0x25) & 0x10) == 0) {\n                      if (destination < count) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                ptr_var3 = ptr_var2;\n                ptr = destination;\n                register_bp = undefined8_3;\n                if (long_var2 != 0) {\n                  *ptr_var7 = ptr_var6;\n                  ptr_var7[1] = long_var2;\n                  ptr_var7 = ptr_var7 + 2;\n                }\n              }\n              ptr_var3 = (undefined8 *)((long)ptr_var7 - (long)stack_variable2 >> 4);\n              qsort(stack_variable2,(size_t)ptr_var3,0x10,FUN_00103533);\n              long_var2 = ptr_var4[1];\n              destination = ptr;\n              register_bp = ptr_var4;\n              ptr = stack_variable2;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        int_variable = strcmp(plugin_name + (plugin_name[2] == '_'),\"__gnu_lto_slim\");\n        stack_variable2 = ptr_var1;\n        if (int_variable == 0) {\n          if (DAT_0010b230 != '\\0') {\n            stack_variable2 = (undefined8 *)*register_bp;\n            DAT_0010b230 = '\\0';\n            ulong_variable = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            FUN_00106400(ulong_variable,stack_variable2);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 == 0) {\n          if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n          uint_var = (*(uint *)(ptr_var1 + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(ptr_var1 + 3) & 0x800082) == 0) && (ptr_var1[4] != 0x10c2a8)) &&\n           ((*(byte *)(ptr_var1[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c != 0) {\n          if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nFUN_00104d5b:\n          if ((ptr_var1[4] != 0x10c2a8) && (ptr_var1[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(ptr_var1 + 3) & 4) != 0);\n      if (DAT_0010b7f8 != 0) goto FUN_00104d5b;\nLAB_00104a53:\n      undefined8_3 = (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 == 0) {\n        char_variable = (**(code **)(register_bp[1] + 0x230))(register_bp);\n        if (char_variable != '\\0') {\n          process_lto_object_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (ptr_var1[4] == 0x10c2a8);\nLAB_00104cba:\n    char_variable = (**(code **)(register_bp[1] + 0x230))(register_bp);\n    if (char_variable != '\\0') {\n      process_lto_object_00102c19();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  ptr_var7 = (undefined8 *)((long)register_r12 * (long)count);\n  register_r12 = (undefined8 *)((long)stack_variable3 + (long)ptr_var7);\n  destination = stack_variable3;\n  ptr_var4 = register_bp;\n  if (stack_variable3 < register_r12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)bool_variable;\n  source = stack_variable3;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_lto_object_00102c19",
            "entrypoint": "0x00102c19",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c19": "process_lto_object_00102c19",
                "__ptr": "ptr",
                "bVar16": "bool_variable",
                "bVar17": "byte_variable",
                "cVar3": "char_variable",
                "iVar4": "int_variable",
                "in_R8": "register_r8",
                "in_R9": "undefined8_3",
                "in_stack_00000008": "stack_variable1",
                "in_stack_00000010": "stack_variable2",
                "in_stack_00000018": "stack_variable3",
                "in_stack_00000038": "stack_variable4",
                "in_stack_00000040": "stack_variable5",
                "in_stack_00000048": "stack_variable6",
                "lVar7": "long_var",
                "lVar9": "long_var2",
                "pcVar1": "plugin_name",
                "pcVar2": "function_pointer",
                "puVar10": "ptr_var2",
                "puVar11": "ptr_var3",
                "puVar12": "ptr_var4",
                "puVar13": "ptr_var5",
                "puVar14": "ptr_var6",
                "puVar15": "ptr_var7",
                "puVar8": "ptr_var1",
                "uVar18": "ulong_variable2",
                "uVar5": "uint_var",
                "uVar6": "ulong_variable",
                "unaff_R12": "register_r12",
                "unaff_R13": "source",
                "unaff_R14": "count",
                "unaff_R15": "register_r15",
                "unaff_RBP": "register_bp",
                "unaff_RBX": "destination",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f19": {
            "additional_data": {
                "FUN_00102f19": {
                    "display_symbols": 1,
                    "print_file_symbols": 1,
                    "print_symbol_info": 9,
                    "print_symbol_information": 7,
                    "print_symbol_table": 4,
                    "print_symbols": 6,
                    "print_symbols_info": 1,
                    "print_undefined_symbols": 2
                },
                "__format": {
                    "format_string": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_localized_string": 1,
                    "get_translated_string": 2,
                    "get_translated_text": 2,
                    "translate": 2
                },
                "param_1": {
                    "file_name": 5,
                    "file_path": 3,
                    "filename": 13,
                    "symbol_file": 3,
                    "symbol_file_name": 1,
                    "symbol_file_path": 5,
                    "symbol_name": 1
                },
                "pcVar1": {
                    "format_string": 8,
                    "header_format": 1,
                    "header_msg": 1,
                    "message": 8,
                    "output_string": 1,
                    "symbol_error_message": 1,
                    "symbol_format": 5,
                    "symbol_message": 1,
                    "symbol_str": 1,
                    "symbol_string": 1,
                    "symbol_template": 1,
                    "symbol_text": 1,
                    "title": 1
                },
                "printf": {
                    "print_formatted": 4,
                    "print_formatted_string": 4,
                    "print_formatted_text": 1
                }
            },
            "called": [
                "dcgettext",
                "printf"
            ],
            "calling": [],
            "code": "\nvoid print_symbol_info_00102f19(undefined8 filename)\n\n{\n  char *format_string;\n  \n  format_string = \"\\n\\nUndefined symbols from %s:\\n\\n\";\n  if (DAT_0010b7e8 == 0) {\n    format_string = \"\\n\\nSymbols from %s:\\n\\n\";\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string,filename);\n  format_string = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 != 0x20) {\n    format_string = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string);\n  return;\n}\n\n",
            "current_name": "print_symbol_info_00102f19",
            "entrypoint": "0x00102f19",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f19": "print_symbol_info_00102f19",
                "dcgettext": "get_translated_text",
                "param_1": "filename",
                "pcVar1": "format_string",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f7b": {
            "additional_data": {
                "DAT_0010b818": {
                    "condition_2": 1,
                    "is_another_condition_met": 1,
                    "is_other_condition_met": 1
                },
                "FUN_00102f7b": {
                    "print_if_condition_is_met": 2,
                    "print_if_condition_met": 6,
                    "print_if_conditions_met": 1,
                    "print_if_debug_enabled": 1,
                    "print_if_debug_mode": 1,
                    "print_if_enabled": 2,
                    "print_if_flag_enabled": 1,
                    "print_if_flag_set": 5,
                    "print_if_global_variable_is_set": 1,
                    "print_if_logging_enabled": 1,
                    "print_if_not_debugging": 1,
                    "print_if_not_disabled": 2,
                    "print_message": 3,
                    "print_message_if_allowed": 1,
                    "print_message_if_condition_met": 1,
                    "print_message_if_conditions_met": 1,
                    "print_message_if_logged_in": 1
                },
                "_DAT_0010b7c4": {
                    "condition_1": 1,
                    "is_condition_met": 2
                },
                "param_1": {
                    "message": 31
                },
                "printf": {
                    "formatted_print": 1,
                    "print": 1,
                    "print_formatted": 2
                }
            },
            "called": [
                "printf"
            ],
            "calling": [],
            "code": "\n\n\nvoid print_if_condition_is_met_00102f7b(undefined8 message)\n\n{\n  if ((_DAT_0010b7c4 != 0) && (DAT_0010b818 == 0)) {\n    printf(\"%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_if_condition_is_met_00102f7b",
            "entrypoint": "0x00102f7b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f7b": "print_if_condition_is_met_00102f7b",
                "param_1": "message",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f9f": {
            "additional_data": {
                "FUN_00102f9f": {
                    "decode_and_return_value": 1,
                    "decode_data": 1,
                    "decompile_and_improve": 1,
                    "decompiled_function": 2,
                    "extract_and_ret": 1,
                    "extract_and_return_retaddr": 1,
                    "extract_data_from_binary": 1,
                    "extract_function_return_value": 1,
                    "extract_retaddr": 1,
                    "extract_retaddr_and_return": 1,
                    "extract_return_address": 1,
                    "extracted_function": 1,
                    "get_return_value": 1,
                    "initialize_function": 2,
                    "initialize_return_value": 1,
                    "reverse_and_return": 1,
                    "reverse_and_return_addr": 1,
                    "reverse_and_return_data": 1
                },
                "FUN_00106530": {
                    "call_subfunction": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "perform_additional_functionality": 1,
                    "sub_function": 1
                },
                "auVar1": {
                    "decoded_value": 1,
                    "extracted_return_address": 1,
                    "extracted_value": 1,
                    "improved_variable": 1,
                    "result": 13,
                    "return_value": 9
                },
                "unaff_retaddr": {
                    "return_address": 28
                }
            },
            "called": [
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00104fa0"
            ],
            "code": "\nundefined  [16] extract_retaddr_and_return_00102f9f(void)\n\n{\n  undefined result [16];\n  undefined8 return_address;\n  \n  FUN_00106530(*DAT_0010b780);\n  result._8_8_ = return_address;\n  result._0_8_ = 0xffffffff;\n  return result;\n}\n\n",
            "current_name": "extract_retaddr_and_return_00102f9f",
            "entrypoint": "0x00102f9f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f9f": "extract_retaddr_and_return_00102f9f",
                "auVar1": "result",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fc3": {
            "additional_data": {
                "FUN_00102fc3": {
                    "analyze_binary_file": 1,
                    "check_binary_compatibility": 6,
                    "check_binary_version": 1,
                    "check_compatibility": 3,
                    "check_compilation": 1,
                    "check_compilation_flags": 1,
                    "check_compiled_code": 2,
                    "check_compiled_files": 1,
                    "check_compiled_output": 1,
                    "check_compiled_version": 2,
                    "check_compiler_compatibility": 1,
                    "check_compiler_versions": 1,
                    "check_file_compatibility": 3,
                    "check_file_extension": 2,
                    "verify_binary_compatibility": 1,
                    "verify_binary_signature": 1
                },
                "FUN_00104fa0": {
                    "process_string": 1
                },
                "__s": {
                    "buffer1": 1,
                    "code1": 1,
                    "file1": 2,
                    "file1_content": 2,
                    "file1_string": 1,
                    "file_content": 1,
                    "file_extension_1": 1,
                    "str1": 7,
                    "str_1": 1,
                    "string1": 7,
                    "string_1": 6
                },
                "__s_00": {
                    "buffer2": 1,
                    "code2": 1,
                    "file2": 2,
                    "file2_content": 2,
                    "file2_string": 1,
                    "file_extension_2": 1,
                    "other_file_content": 1,
                    "str2": 7,
                    "str_2": 1,
                    "string2": 7,
                    "string_2": 6
                },
                "abort": {
                    "abort": 1
                },
                "bVar14": {
                    "comparison_flag": 1,
                    "comparison_result": 2,
                    "condition": 1,
                    "flag": 3,
                    "is_comparison_true": 1,
                    "is_compatible": 1,
                    "is_compiled": 1,
                    "is_different": 2,
                    "is_dot": 1,
                    "is_equal": 2,
                    "is_extension_same": 1,
                    "is_extension_valid": 1,
                    "is_flag_set": 1,
                    "is_less": 7,
                    "is_less_than": 1
                },
                "cVar1": {
                    "ch": 1,
                    "last_char": 10,
                    "last_char_of_file1": 1,
                    "last_character": 3
                },
                "lVar4": {
                    "binary_config_ptr": 1,
                    "file1": 1,
                    "file1_handle": 1,
                    "file1_info": 3,
                    "file_info1": 1,
                    "result1": 13,
                    "result_1": 5,
                    "result_2": 1,
                    "result_3": 1,
                    "value1": 1
                },
                "lVar5": {
                    "binary_data_ptr": 1,
                    "file2": 1,
                    "file2_handle": 1,
                    "file2_info": 3,
                    "file_info2": 1,
                    "result2": 13,
                    "result_2": 5,
                    "result_3": 1,
                    "result_4": 1,
                    "value2": 1
                },
                "param_1": {
                    "arg1": 4,
                    "argument1": 1,
                    "argument_1": 1,
                    "config_ptr": 1,
                    "data_1": 1,
                    "file1": 2,
                    "file_handle": 1,
                    "file_param": 1,
                    "file_path_1": 1,
                    "first_file": 1,
                    "input1": 2,
                    "input_1": 3,
                    "input_param1": 1,
                    "param1": 6,
                    "param_ptr_1": 1,
                    "parameter1": 1,
                    "pointer_1": 1,
                    "ptr1": 1,
                    "ptr_to_something": 1
                },
                "param_2": {
                    "arg2": 4,
                    "argument2": 1,
                    "argument_2": 1,
                    "binary_data_ptr": 1,
                    "data_2": 1,
                    "file2": 2,
                    "file_path_2": 1,
                    "function_param": 1,
                    "input2": 2,
                    "input_2": 3,
                    "input_param2": 1,
                    "other_file_handle": 1,
                    "param2": 6,
                    "param_ptr_2": 1,
                    "parameter2": 1,
                    "pointer_2": 1,
                    "ptr2": 1,
                    "ptr_to_something_else": 1,
                    "second_file": 1
                },
                "pcVar8": {
                    "comp_str_1": 1,
                    "file1_gnu_compiled": 1,
                    "found1": 1,
                    "found_string": 1,
                    "gnu_compiled": 1,
                    "gnu_compiled1": 1,
                    "gnu_compiled_ptr": 1,
                    "keyword_ptr_1": 1,
                    "match": 1,
                    "match1": 2,
                    "matcher1": 1,
                    "ptr1": 4,
                    "ptr_1": 3,
                    "search_result1": 1,
                    "search_result_1": 1,
                    "str_ptr": 1,
                    "strstr_result": 1,
                    "substr1": 1,
                    "substring": 1,
                    "substring1": 5
                },
                "pcVar9": {
                    "comp_str_2": 1,
                    "file2_gnu_compiled": 1,
                    "found2": 1,
                    "found_string_2": 1,
                    "gcc2_compiled": 1,
                    "gcc2_compiled_ptr": 1,
                    "gcc_compiled1": 1,
                    "keyword_ptr_2": 1,
                    "match2": 3,
                    "matcher2": 1,
                    "ptr2": 4,
                    "ptr_2": 3,
                    "search_result2": 1,
                    "search_result_2": 1,
                    "str_ptr2": 1,
                    "strstr_result2": 1,
                    "substr2": 1,
                    "substring2": 6
                },
                "sVar6": {
                    "config_length": 1,
                    "file1_content_length": 1,
                    "file1_len": 1,
                    "file1_length": 3,
                    "file_content_length": 1,
                    "len1": 5,
                    "len_1": 2,
                    "len_string_1": 1,
                    "length1": 7,
                    "length_1": 3,
                    "size_str1": 1,
                    "str1_len": 1,
                    "str1_length": 1,
                    "string_1_length": 1
                },
                "sVar7": {
                    "data_length": 1,
                    "file2_content_length": 1,
                    "file2_len": 1,
                    "file2_length": 3,
                    "len2": 5,
                    "len_2": 2,
                    "len_string_2": 1,
                    "length2": 7,
                    "length_2": 3,
                    "other_file_content_length": 1,
                    "size_str2": 1,
                    "str2_len": 1,
                    "str2_length": 1,
                    "string_2_length": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "strncmp": {
                    "compare_strings": 1
                },
                "strstr": {
                    "find_substring_in_string": 1
                },
                "uVar10": {
                    "a": 1,
                    "file1_compiled": 1,
                    "file1_end_address": 1,
                    "file1_offset": 1,
                    "func_result": 1,
                    "offset1": 4,
                    "offset_1": 1,
                    "result": 7,
                    "result2": 1,
                    "result_4": 1,
                    "ret_val": 1,
                    "return_value": 3,
                    "value1": 4,
                    "value2": 1,
                    "value_1": 1,
                    "var1": 1
                },
                "uVar11": {
                    "address1": 1,
                    "b": 1,
                    "binary_data_end": 1,
                    "end2": 1,
                    "file1_content_size": 1,
                    "file2_compiled": 1,
                    "file2_end_address": 1,
                    "file2_offset": 1,
                    "final_value2": 1,
                    "offset1": 1,
                    "offset2": 2,
                    "offset_2": 2,
                    "ptr2_size": 1,
                    "result3": 1,
                    "result_5": 1,
                    "result_size_2": 1,
                    "string_2_length": 1,
                    "sum1": 1,
                    "total_length_str2": 1,
                    "value2": 2,
                    "value3": 1,
                    "value_2": 1,
                    "var1": 1,
                    "var2": 1
                },
                "uVar12": {
                    "address1": 1,
                    "address2": 1,
                    "binary_config_end": 1,
                    "c": 1,
                    "end1": 1,
                    "end_address_1": 1,
                    "file1_end": 1,
                    "file1_size": 1,
                    "file1_start_address": 1,
                    "file2_content_size": 1,
                    "final_value1": 1,
                    "offset2": 1,
                    "offset_1": 1,
                    "ptr1_size": 1,
                    "result4": 1,
                    "result_6": 1,
                    "result_size_1": 1,
                    "string_1_length": 1,
                    "sum1": 2,
                    "sum2": 1,
                    "total_1": 1,
                    "total_length_str1": 1,
                    "value3": 1,
                    "value4": 1,
                    "var2": 1,
                    "var3": 1
                },
                "uVar13": {
                    "base_address": 2,
                    "compilation_flags": 1,
                    "config": 1,
                    "config_ptr": 1,
                    "constant8": 1,
                    "data": 9,
                    "first_element": 1,
                    "global_var": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "ptr_dat_0010b780": 1,
                    "ptr_data": 1,
                    "value": 2,
                    "value3": 1,
                    "value5": 1,
                    "var4": 1,
                    "variable_1": 1
                },
                "uVar14": {
                    "is_equal": 1
                },
                "uVar2": {
                    "data_length": 1,
                    "file1_length": 1,
                    "file1_size": 1,
                    "file2_content_size": 1,
                    "file2_size": 1,
                    "length_1": 1,
                    "offset2": 2,
                    "result1": 1,
                    "result_1": 1,
                    "size1": 4,
                    "size_2": 2,
                    "value1": 1,
                    "value2": 2,
                    "version1": 1
                },
                "uVar3": {
                    "checked_flag": 1,
                    "file1_flag": 1,
                    "file2_flag": 1,
                    "file2_length": 1,
                    "flag": 15,
                    "flags": 5,
                    "int_value": 1,
                    "is_bit_set": 1,
                    "length_2": 1,
                    "mask": 1,
                    "result": 1,
                    "size2": 1
                },
                "unaff_R13": {
                    "address": 2,
                    "address2": 1,
                    "base_address2": 1,
                    "constant13": 1,
                    "data_ptr": 1,
                    "file1_ptr": 1,
                    "file2": 1,
                    "file2_end": 1,
                    "offset": 3,
                    "param2_size": 1,
                    "pointer": 1,
                    "ptr2": 1,
                    "ptr_data2": 1,
                    "register1": 1,
                    "result": 1,
                    "result_2": 1,
                    "result_7": 1,
                    "temp_result": 1,
                    "temporary": 1,
                    "unaff_arg": 1,
                    "unaff_stack_offset": 1,
                    "value3": 1,
                    "value6": 1,
                    "var5": 1,
                    "variable_2": 1
                }
            },
            "called": [
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00105050"
            ],
            "code": "\nulong check_binary_compatibility_00102fc3(undefined8 param1,undefined8 param2)\n\n{\n  char last_char;\n  ulong size1;\n  char *str1;\n  char *str2;\n  uint flag;\n  long result1;\n  long result2;\n  size_t length1;\n  size_t length2;\n  char *substring1;\n  char *substring2;\n  ulong result;\n  ulong value2;\n  ulong sum1;\n  undefined8 data;\n  long offset;\n  bool is_less;\n  \n  data = *DAT_0010b780;\n  FUN_00106530();\n  result1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,data,DAT_0010b770);\n  result2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param2,DAT_0010b768);\n  if ((result1 == 0) || (offset = result2, result2 == 0)) {\n    result2 = FUN_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(result1 + 0x20) == 0x10c2a8) || (*(long *)(result2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  result = *(ulong *)(*(long *)(result1 + 0x20) + 0x30);\n  size1 = *(ulong *)(*(long *)(result2 + 0x20) + 0x30);\n  sum1 = *(long *)(result1 + 0x10) + result;\n  value2 = *(long *)(offset + 0x10) + size1;\n  is_less = sum1 < value2;\n  if ((sum1 != value2) || (is_less = result < size1, result != size1)) {\n    return (ulong)(-(uint)is_less | 1);\n  }\n  str1 = *(char **)(result1 + 8);\n  str2 = *(char **)(offset + 8);\n  length1 = strlen(str1);\n  length2 = strlen(str2);\n  substring1 = strstr(str1,\"gnu_compiled\");\n  if (substring1 == (char *)0x0) {\n    substring2 = strstr(str1,\"gcc2_compiled\");\n    substring1 = strstr(str2,\"gnu_compiled\");\n    if ((substring1 == (char *)0x0) && (substring1 = strstr(str2,\"gcc2_compiled\"), substring1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (substring2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    substring1 = strstr(str2,\"gnu_compiled\");\n    if (substring1 == (char *)0x0) {\n      substring2 = strstr(str2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (substring2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(offset + 0x18) & 0x4000;\n  if ((*(byte *)(result1 + 0x19) & 0x40) == 0) {\n    if ((length1 < 3) || (str1[length1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((length2 < 3) || (str2[length2 - 2] != '.')) goto LAB_00103202;\n      is_less = false;\n      goto LAB_001031e7;\n    }\n    last_char = str1[length1 - 1];\n    is_less = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((length2 < 3) || (str2[length2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (length2 < 3) {\n      return 0xffffffff;\n    }\n    if (str2[length2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_less = true;\nLAB_001031e7:\n    if ((str2[length2 - 1] != 'o') && (str2[length2 - 1] != 'a')) {\n      if (is_less) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_less) {\n    return 1;\n  }\nLAB_00103202:\n  result = FUN_00104fa0(data,param2);\n  return result;\n}\n\n",
            "current_name": "check_binary_compatibility_00102fc3",
            "entrypoint": "0x00102fc3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fc3": "check_binary_compatibility_00102fc3",
                "__s": "str1",
                "__s_00": "str2",
                "bVar14": "is_less",
                "cVar1": "last_char",
                "lVar4": "result1",
                "lVar5": "result2",
                "param_1": "param1",
                "param_2": "param2",
                "pcVar8": "substring1",
                "pcVar9": "substring2",
                "sVar6": "length1",
                "sVar7": "length2",
                "strlen": "get_string_length",
                "strstr": "find_substring_in_string",
                "uVar10": "result",
                "uVar11": "value2",
                "uVar12": "sum1",
                "uVar13": "data",
                "uVar2": "size1",
                "uVar3": "flag",
                "unaff_R13": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd2": {
            "additional_data": {
                "FUN_00102fd2": {
                    "check_binary_compatibility": 4,
                    "check_compatibility": 3,
                    "check_compilation": 2,
                    "check_compilation_flags": 1,
                    "check_compiled": 2,
                    "check_compiled_code": 1,
                    "check_compiled_files": 2,
                    "check_compiled_versions": 3,
                    "check_compiler_compatibility": 1,
                    "check_compiler_version": 2,
                    "check_compiler_versions": 1,
                    "check_compilers": 1,
                    "check_file_compatibility": 4,
                    "check_source_compatibility": 1,
                    "validate_compilation": 1
                },
                "__s": {
                    "binary1_name": 1,
                    "file1_content": 3,
                    "file1_name": 1,
                    "file1_string": 2,
                    "file_content_1": 1,
                    "source_1": 1,
                    "source_code1": 2,
                    "source_code_1": 1,
                    "str1": 8,
                    "string1": 7,
                    "string_1": 2
                },
                "__s_00": {
                    "binary2_name": 1,
                    "file2_content": 3,
                    "file2_name": 1,
                    "file2_string": 2,
                    "file_content_2": 1,
                    "source_2": 1,
                    "source_code2": 2,
                    "source_code_2": 1,
                    "str2": 8,
                    "string2": 7,
                    "string_2": 2
                },
                "bVar13": {
                    "comparison_flag": 2,
                    "comparison_result": 1,
                    "flag": 1,
                    "flag2": 1,
                    "is_binary_compatible": 1,
                    "is_compatible": 4,
                    "is_different": 1,
                    "is_equal": 5,
                    "is_greater": 1,
                    "is_less": 1,
                    "is_match": 2,
                    "is_older_version": 1,
                    "is_true": 1
                },
                "cVar1": {
                    "last_char": 12,
                    "last_char_file1": 1,
                    "last_character": 5
                },
                "lVar4": {
                    "binary1_header": 1,
                    "compiler_check_1": 1,
                    "file1_descriptor": 1,
                    "file1_info": 3,
                    "file1_length": 1,
                    "file1_pointer": 1,
                    "file1_ptr": 1,
                    "file1_result": 1,
                    "file_info_1": 3,
                    "length1": 2,
                    "result1": 7,
                    "result_1": 1
                },
                "lVar5": {
                    "binary2_header": 1,
                    "compiler_check_2": 1,
                    "file1_ptr2": 1,
                    "file2_descriptor": 1,
                    "file2_info": 3,
                    "file2_length": 1,
                    "file2_pointer": 1,
                    "file2_result": 1,
                    "file_info_2": 3,
                    "length2": 2,
                    "result2": 7,
                    "result_2": 1
                },
                "param_1": {
                    "binary1": 3,
                    "binary_path1": 1,
                    "code1": 1,
                    "file1": 9,
                    "file1_path": 1,
                    "file_path_1": 4,
                    "filepath1": 1,
                    "input1": 3,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "param1": 1,
                    "param_1": 1,
                    "parameter1": 1,
                    "source_file_path1": 1,
                    "value1": 1
                },
                "param_2": {
                    "binary2": 3,
                    "binary_path2": 1,
                    "code2": 1,
                    "file2": 9,
                    "file2_path": 1,
                    "file_path_2": 4,
                    "filepath2": 1,
                    "input2": 3,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "parameter2": 1,
                    "source_file_path2": 1,
                    "value2": 1
                },
                "pcVar8": {
                    "compilation_string1": 1,
                    "file1_compiled_type": 1,
                    "find_result_1": 1,
                    "found_1": 1,
                    "found_str": 1,
                    "found_substring": 1,
                    "gnu_compiled_ptr": 1,
                    "gnu_compiled_string": 1,
                    "keyword_1": 1,
                    "match1": 2,
                    "needle1": 1,
                    "needle_ptr1": 1,
                    "pointer1": 1,
                    "pos1": 1,
                    "ptr1": 2,
                    "ptr_file1_match": 1,
                    "search_result_1": 1,
                    "str1_match": 1,
                    "str_ptr1": 1,
                    "strstr_result1": 3,
                    "substring": 1,
                    "substring1": 3,
                    "substring_ptr1": 1
                },
                "pcVar9": {
                    "compilation_string2": 1,
                    "file2_compiled_type": 1,
                    "find_result_2": 1,
                    "found_2": 1,
                    "found_str2": 1,
                    "found_substring_2": 1,
                    "gcc2_compiled_ptr": 1,
                    "gcc2_compiled_string": 1,
                    "keyword_2": 1,
                    "match2": 2,
                    "needle2": 1,
                    "needle_ptr2": 1,
                    "pointer2": 1,
                    "pos2": 1,
                    "ptr2": 2,
                    "ptr_file2_match": 1,
                    "search_result_2": 1,
                    "str2_match": 1,
                    "str_ptr2": 1,
                    "strstr_result2": 3,
                    "substring2": 3,
                    "substring_2": 1,
                    "substring_ptr2": 1
                },
                "sVar6": {
                    "binary1_name_length": 1,
                    "content_length_1": 1,
                    "file1_len": 2,
                    "file1_length": 2,
                    "file1_name_length": 1,
                    "file1_string_length": 1,
                    "len1": 5,
                    "length1": 7,
                    "length_string_1": 1,
                    "size_1": 1,
                    "source_code_len_1": 1,
                    "string_len1": 1
                },
                "sVar7": {
                    "binary2_name_length": 1,
                    "content_length_2": 1,
                    "file2_len": 2,
                    "file2_length": 2,
                    "file2_name_length": 1,
                    "file2_string_length": 1,
                    "len2": 5,
                    "length2": 7,
                    "length_string_2": 1,
                    "size_2": 1,
                    "source_code_len_2": 1,
                    "string_len2": 1
                },
                "uVar10": {
                    "binary1_version": 1,
                    "comparison_result": 1,
                    "computed_value1": 1,
                    "file1_hash": 1,
                    "result": 19,
                    "result3": 1,
                    "result_3": 1,
                    "return_value": 6
                },
                "uVar11": {
                    "address2": 2,
                    "address_2": 1,
                    "binary2_version": 1,
                    "combined_value_2": 1,
                    "compiled_code1": 1,
                    "computed_value2": 1,
                    "end_address1": 1,
                    "end_address_2": 1,
                    "end_file2": 1,
                    "file2_address": 1,
                    "file2_length": 1,
                    "file2_size": 1,
                    "offset1": 3,
                    "offset2": 1,
                    "offset_2": 1,
                    "pointer2_sum": 1,
                    "result4": 1,
                    "size2": 1,
                    "sum1": 1,
                    "temp2": 1,
                    "u_var_temp_2": 1,
                    "value1": 1,
                    "value2": 1,
                    "var1": 1
                },
                "uVar12": {
                    "address1": 2,
                    "address_1": 1,
                    "combined_value_1": 1,
                    "combined_versions": 1,
                    "compiled_code2": 1,
                    "computed_value3": 1,
                    "end_address2": 1,
                    "end_address_1": 1,
                    "end_file1": 1,
                    "file1_address": 1,
                    "file1_end_offset": 1,
                    "file1_length": 1,
                    "file1_size": 1,
                    "offset1": 2,
                    "offset2": 3,
                    "offset_1": 1,
                    "pointer1_sum": 1,
                    "result5": 1,
                    "sum2": 1,
                    "u_var_temp_1": 1,
                    "value1": 1,
                    "value1_plus_offset": 1,
                    "var2": 1
                },
                "uVar2": {
                    "address2_value": 1,
                    "code2_length": 1,
                    "file2_field": 1,
                    "file2_hash": 1,
                    "result_2": 1,
                    "result_4": 1,
                    "size1": 2,
                    "size_2": 1,
                    "source_code2_length": 1,
                    "temp1": 1,
                    "value2": 1
                },
                "uVar3": {
                    "binary2_flag": 1,
                    "bitwise_flag": 1,
                    "comp_flags": 1,
                    "file2_flag": 1,
                    "flag": 14,
                    "flag2": 1,
                    "flags": 5,
                    "is_executable": 1,
                    "masked_value": 1
                },
                "unaff_R13": {
                    "binary1_data": 1,
                    "binary2_data": 1,
                    "compiler_check_3": 1,
                    "computed_result": 1,
                    "file2_end_offset": 1,
                    "file2_ptr": 4,
                    "file_info_3": 2,
                    "file_info_temp": 1,
                    "length1": 1,
                    "offset2": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "result3": 1,
                    "temp": 2,
                    "temporary_var": 1,
                    "tmp_var": 1,
                    "var3": 1
                }
            },
            "called": [
                "abort",
                "FUN_00106530",
                "strstr",
                "strlen",
                "FUN_00104fa0"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nulong check_file_compatibility_00102fd2(undefined8 file1,undefined8 file2)\n\n{\n  char last_char;\n  ulong size1;\n  char *str1;\n  char *str2;\n  uint flag;\n  long result1;\n  long result2;\n  size_t length1;\n  size_t length2;\n  char *strstr_result1;\n  char *substring2;\n  ulong result;\n  ulong offset1;\n  ulong offset2;\n  long file2_ptr;\n  bool is_equal;\n  \n  result1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file1,DAT_0010b770);\n  result2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file2,DAT_0010b768);\n  if ((result1 == 0) || (file2_ptr = result2, result2 == 0)) {\n    result2 = FUN_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(result1 + 0x20) == 0x10c2a8) || (*(long *)(result2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  result = *(ulong *)(*(long *)(result1 + 0x20) + 0x30);\n  size1 = *(ulong *)(*(long *)(result2 + 0x20) + 0x30);\n  offset2 = *(long *)(result1 + 0x10) + result;\n  offset1 = *(long *)(file2_ptr + 0x10) + size1;\n  is_equal = offset2 < offset1;\n  if ((offset2 != offset1) || (is_equal = result < size1, result != size1)) {\n    return (ulong)(-(uint)is_equal | 1);\n  }\n  str1 = *(char **)(result1 + 8);\n  str2 = *(char **)(file2_ptr + 8);\n  length1 = strlen(str1);\n  length2 = strlen(str2);\n  strstr_result1 = strstr(str1,\"gnu_compiled\");\n  if (strstr_result1 == (char *)0x0) {\n    substring2 = strstr(str1,\"gcc2_compiled\");\n    strstr_result1 = strstr(str2,\"gnu_compiled\");\n    if ((strstr_result1 == (char *)0x0) && (strstr_result1 = strstr(str2,\"gcc2_compiled\"), strstr_result1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (substring2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    strstr_result1 = strstr(str2,\"gnu_compiled\");\n    if (strstr_result1 == (char *)0x0) {\n      substring2 = strstr(str2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (substring2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(file2_ptr + 0x18) & 0x4000;\n  if ((*(byte *)(result1 + 0x19) & 0x40) == 0) {\n    if ((length1 < 3) || (str1[length1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((length2 < 3) || (str2[length2 - 2] != '.')) goto LAB_00103202;\n      is_equal = false;\n      goto LAB_001031e7;\n    }\n    last_char = str1[length1 - 1];\n    is_equal = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((length2 < 3) || (str2[length2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (length2 < 3) {\n      return 0xffffffff;\n    }\n    if (str2[length2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_equal = true;\nLAB_001031e7:\n    if ((str2[length2 - 1] != 'o') && (str2[length2 - 1] != 'a')) {\n      if (is_equal) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_equal) {\n    return 1;\n  }\nLAB_00103202:\n  result = FUN_00104fa0(file1,file2);\n  return result;\n}\n\n",
            "current_name": "check_file_compatibility_00102fd2",
            "entrypoint": "0x00102fd2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd2": "check_file_compatibility_00102fd2",
                "__s": "str1",
                "__s_00": "str2",
                "bVar13": "is_equal",
                "cVar1": "last_char",
                "lVar4": "result1",
                "lVar5": "result2",
                "param_1": "file1",
                "param_2": "file2",
                "pcVar8": "strstr_result1",
                "pcVar9": "substring2",
                "sVar6": "length1",
                "sVar7": "length2",
                "uVar10": "result",
                "uVar11": "offset1",
                "uVar12": "offset2",
                "uVar2": "size1",
                "uVar3": "flag",
                "unaff_R13": "file2_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103238": {
            "additional_data": {
                "DAT_0010b738": {
                    "data_pointer3": 1
                },
                "DAT_0010b740": {
                    "data_pointer1": 1
                },
                "DAT_0010b748": {
                    "data_size": 1,
                    "num_sections": 1,
                    "section_count": 1
                },
                "DAT_0010b750": {
                    "data_pointer2": 1
                },
                "FUN_00103238": {
                    "find_and_print_matches": 1,
                    "find_and_print_matching_sections": 2,
                    "find_matching_sections": 3,
                    "find_matching_strings": 3,
                    "process_data": 4,
                    "process_sections": 2,
                    "reverse_and_print_results": 2,
                    "reverse_section_check": 1,
                    "reverse_sections_and_print": 1
                },
                "_0x10": {
                    "constant_2": 1
                },
                "_0x20": {
                    "constant_1": 1
                },
                "_DAT_0010b7b0": {
                    "prev_section_ptr": 1,
                    "previous_r13": 1
                },
                "__ptr": {
                    "current_pointer": 1,
                    "current_section": 3,
                    "current_section_pointer": 1,
                    "ptr": 14,
                    "ptr_value": 1,
                    "section_pointer": 7,
                    "section_ptr": 4
                },
                "__s1": {
                    "current_name": 1,
                    "input_string": 1,
                    "s1": 1,
                    "search_string": 3,
                    "section": 1,
                    "section_name": 7,
                    "str": 3,
                    "str1": 2,
                    "string": 3,
                    "string1": 3,
                    "string_ptr": 2,
                    "string_value": 1,
                    "target_section": 1,
                    "target_string": 2
                },
                "__s2": {
                    "str2": 1
                },
                "bfd_map_over_sections": {
                    "iterate_over_sections": 1
                },
                "cVar3": {
                    "boolean_result": 1,
                    "ch": 1,
                    "char_val": 1,
                    "char_value": 2,
                    "char_var": 2,
                    "char_var3": 1,
                    "check_result": 1,
                    "compare_result": 1,
                    "comparison_result": 6,
                    "function_result": 1,
                    "is_match": 2,
                    "result": 5,
                    "return_value": 1,
                    "temp_var2": 1,
                    "var2": 1,
                    "var3": 4
                },
                "free": {
                    "release_memory": 1
                },
                "iVar4": {
                    "cmp_result": 1,
                    "comparison_result": 6,
                    "int_value": 1,
                    "int_var": 2,
                    "int_var4": 1,
                    "str_compare_result": 1,
                    "strcmp_result": 5,
                    "string_comparison": 3,
                    "string_comparison_result": 4,
                    "temp_var3": 1,
                    "var3": 1,
                    "var4": 5
                },
                "lVar2": {
                    "code_addr": 1,
                    "comparison_result": 1,
                    "current_element": 1,
                    "current_section": 1,
                    "entry_address": 1,
                    "entry_value": 1,
                    "function_offset": 1,
                    "long_val": 1,
                    "long_value": 1,
                    "long_var2": 1,
                    "nested_value": 1,
                    "ptr_value": 1,
                    "section_content": 1,
                    "section_data_value": 1,
                    "section_entry": 2,
                    "section_header_address": 1,
                    "section_size": 1,
                    "sub_section_value": 1,
                    "symbol_address": 1,
                    "temp_var1": 1,
                    "value": 1,
                    "var1": 1,
                    "var2": 7
                },
                "lVar7": {
                    "code_index": 1,
                    "counter": 1,
                    "current_offset": 1,
                    "entry_index": 3,
                    "index": 1,
                    "inner_loop_counter": 1,
                    "iteration2": 1,
                    "long_value_2": 1,
                    "long_var7": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_variable": 1,
                    "nested_loop_counter": 1,
                    "position": 1,
                    "section_entry_index": 1,
                    "section_index": 1,
                    "section_index2": 1,
                    "symbol_index": 1,
                    "temp_var4": 1,
                    "var7": 7,
                    "var8": 1
                },
                "param_1": {
                    "xmalloc1": 1
                },
                "param_10": {
                    "file_size": 1,
                    "param": 1,
                    "param1": 3,
                    "param10": 7,
                    "param3": 1,
                    "param_10": 1,
                    "param_10_value": 1,
                    "param_size": 1,
                    "param_value": 5,
                    "parameter_10": 4,
                    "section_flags": 1,
                    "section_size": 3,
                    "ulong_param": 1
                },
                "param_12": {
                    "param12": 7,
                    "param2": 4,
                    "param4": 1,
                    "param_12": 1,
                    "param_name": 1,
                    "param_ptr": 3,
                    "param_string": 1,
                    "param_struct": 1,
                    "parameter_12": 4,
                    "section_address": 1,
                    "section_data": 2,
                    "section_map": 1,
                    "section_name": 4
                },
                "param_2": {
                    "xmalloc2": 1
                },
                "param_3": {
                    "xmalloc3": 1
                },
                "param_4": {
                    "xmalloc4": 1
                },
                "plVar1": {
                    "code_ptr": 1,
                    "current_array": 1,
                    "current_symbol": 1,
                    "entry_address": 1,
                    "entry_ptr": 1,
                    "function_pointer": 1,
                    "inner_loop_pointer": 1,
                    "nested_pointer": 1,
                    "pointer_to_long": 1,
                    "pointer_to_section": 1,
                    "ptr_array": 1,
                    "ptr_to_long": 1,
                    "ptr_var1": 1,
                    "section_data_pointer": 1,
                    "section_entry": 2,
                    "section_entry_ptr": 1,
                    "section_pointer2": 1,
                    "sub_section_pointer": 1
                },
                "pvVar5": {
                    "allocated_mem": 1,
                    "allocated_memory": 2,
                    "allocation_variable": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "pointer_var5": 1,
                    "ptr5": 1,
                    "ptr_array": 2,
                    "ptr_value": 1,
                    "ptr_value2": 1,
                    "ptr_var": 1,
                    "section_addresses": 1,
                    "section_data": 3,
                    "section_data2": 1,
                    "section_map": 1,
                    "section_pointers": 2,
                    "section_ptr2": 1,
                    "var5": 4
                },
                "uVar6": {
                    "counter": 4,
                    "index": 4,
                    "iteration": 1,
                    "loop_counter": 2,
                    "loop_variable": 1,
                    "section_index": 7,
                    "u_var": 1,
                    "unsigned_integer": 1,
                    "unsigned_var": 1,
                    "unsigned_var6": 1,
                    "var6": 5
                },
                "unaff_R13": {
                    "bfd": 1,
                    "binary_base_address": 1,
                    "current_binary": 1,
                    "current_r13": 1,
                    "current_section": 1,
                    "elf_data": 1,
                    "elf_header_ptr": 1,
                    "param2": 1,
                    "r13": 6,
                    "r13_value": 2,
                    "register_r13": 2,
                    "register_r13_value": 1,
                    "section_data_size": 1,
                    "section_header_list": 1,
                    "section_index2": 1,
                    "section_list": 1,
                    "section_pointer2": 1,
                    "section_ptr": 1,
                    "section_table": 1,
                    "var7": 1
                },
                "unaff_RBX": {
                    "binary_data": 1,
                    "binary_ptr": 1,
                    "current_rbx": 1,
                    "param1": 1,
                    "rbx": 6,
                    "rbx_value": 2,
                    "register_bx": 1,
                    "register_bx_value": 1,
                    "register_rbx": 1,
                    "section_data": 2,
                    "section_header": 2,
                    "section_index": 1,
                    "section_pointer": 2,
                    "section_struct": 1,
                    "section_table": 1,
                    "section_table_ptr": 1,
                    "sections": 1,
                    "string_pointer": 1,
                    "var4": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "xmalloc",
                "bfd_map_over_sections",
                "free",
                "FUN_00103c00"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\n\n\nvoid find_and_print_matching_sections_00103238(void)\n\n{\n  long *section_entry;\n  void *ptr;\n  char *section_name;\n  long var2;\n  char comparison_result;\n  int comparison_result;\n  long rbx;\n  void *var5;\n  uint section_index;\n  long r13;\n  long var7;\n  ulong param10;\n  void *param12;\n  \n  var5 = DAT_0010b750;\n  if (_DAT_0010b7b0 == r13) {\n    if (DAT_0010b750 != (void *)0x0) goto LAB_00103296;\n  }\n  else {\n    section_index = 0;\n    if (DAT_0010b750 != (void *)0x0) {\n      for (; section_index < DAT_0010b748; section_index = section_index + 1) {\n        ptr = *(void **)((long)var5 + (ulong)section_index * 8);\n        if (ptr != (void *)0x0) {\n          free(ptr);\n        }\n      }\n      free(DAT_0010b740);\n      free(var5);\n      free(DAT_0010b738);\n      DAT_0010b740 = (void *)0x0;\n      DAT_0010b750 = (void *)0x0;\n      DAT_0010b738 = (void *)0x0;\n    }\n  }\n  DAT_0010b748 = *(uint *)(r13 + 0xa0);\n  DAT_0010b740 = (void *)xmalloc((ulong)DAT_0010b748 * 8);\n  DAT_0010b750 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n  DAT_0010b738 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n  param12 = DAT_0010b740;\n  bfd_map_over_sections();\n  _DAT_0010b7b0 = r13;\nLAB_00103296:\n  section_name = *(char **)(rbx + 8);\n  section_index = 0;\n  do {\n    if (DAT_0010b748 <= section_index) {\n      putc(10,_stdout);\n      return;\n    }\n    var5 = DAT_0010b738;\n    for (var7 = 0; section_entry = (long *)((long)var5 + (ulong)section_index * 8),\n        *section_entry != var7 && var7 <= *section_entry; var7 = var7 + 1) {\n      section_entry = **(long ***)(*(long *)((long)DAT_0010b750 + (ulong)section_index * 8) + var7 * 8);\n      if ((((section_entry != (long *)0x0) &&\n           (var2 = *section_entry, *(long *)(var2 + 0x20) == *(long *)(rbx + 0x20))) &&\n          (*(long *)(var2 + 0x10) == *(long *)(rbx + 0x10))) &&\n         (((comparison_result = strcmp(section_name,*(char **)(var2 + 8)), comparison_result == 0 &&\n           (comparison_result = (**(code **)(*(long *)(r13 + 8) + 0x240))(), var5 = DAT_0010b738,\n           comparison_result != '\\0')) && (param12 != (void *)0x0)))) {\n        printf(\"\\t%s:%u\",param12,param10 >> 0x20);\n        section_index = DAT_0010b748;\n        break;\n      }\n    }\n    section_index = section_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "find_and_print_matching_sections_00103238",
            "entrypoint": "0x00103238",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103238": "find_and_print_matching_sections_00103238",
                "__ptr": "ptr",
                "__s1": "section_name",
                "bfd_map_over_sections": "iterate_over_sections",
                "cVar3": "comparison_result",
                "free": "release_memory",
                "iVar4": "comparison_result",
                "lVar2": "var2",
                "lVar7": "var7",
                "param_1": "xmalloc1",
                "param_10": "param10",
                "param_12": "param12",
                "plVar1": "section_entry",
                "pvVar5": "var5",
                "uVar6": "section_index",
                "unaff_R13": "r13",
                "unaff_RBX": "rbx",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103463": {
            "additional_data": {
                "DAT_0010b738": {
                    "ptr1_base": 1,
                    "record_array": 1
                },
                "DAT_0010b748": {
                    "max_iterations": 1,
                    "max_records": 1
                },
                "DAT_0010b750": {
                    "ptr2_base": 1,
                    "record_pointer_array": 1
                },
                "FUN_00103463": {
                    "check_and_print_matches": 1,
                    "find_and_print_match": 1,
                    "find_and_print_matches": 1,
                    "find_and_print_matching_data": 2,
                    "find_and_print_matching_entries": 1,
                    "find_and_print_matching_items": 1,
                    "find_and_print_matching_records": 2,
                    "find_and_print_matching_values": 3,
                    "find_matching_data": 1,
                    "find_matching_records": 3,
                    "find_matching_value": 1,
                    "find_matching_values": 1,
                    "print_matching_strings": 1,
                    "process_data": 6,
                    "reverse_and_print": 1,
                    "reverse_and_print_data": 1,
                    "reverse_and_print_matches": 1
                },
                "FUN_00106530": {
                    "execute_function": 1
                },
                "_stdout": {
                    "standard_output": 1
                },
                "cVar3": {
                    "char_result": 1,
                    "char_value": 1,
                    "char_var": 1,
                    "comparision_result": 1,
                    "comparison_result": 7,
                    "flag": 2,
                    "match_result": 1,
                    "result": 9,
                    "return_value": 1,
                    "status": 1
                },
                "iVar4": {
                    "comparison": 1,
                    "comparison_result": 12,
                    "strcmp_result": 7,
                    "string_comparison": 2,
                    "string_comparison_result": 3
                },
                "in_stack_00000050": {
                    "file": 1,
                    "file_name": 4,
                    "file_offset": 1,
                    "filename": 5,
                    "input_number": 1,
                    "line_number": 12,
                    "param1": 1,
                    "param_address": 1,
                    "some_data": 1,
                    "source_line": 1,
                    "source_line_number": 1,
                    "stack_parameter": 1,
                    "value": 1
                },
                "lVar1": {
                    "current_record": 1
                },
                "lVar2": {
                    "current_address": 1,
                    "current_array_element_value": 1,
                    "current_data": 1,
                    "current_data_addr": 1,
                    "current_data_ptr": 1,
                    "current_item": 1,
                    "current_obj_offset": 1,
                    "current_pointer": 1,
                    "current_record": 2,
                    "current_value": 2,
                    "data_value": 2,
                    "entry_value": 1,
                    "file_ptr_value": 1,
                    "num1": 1,
                    "pointer_value": 1,
                    "ptr1_value": 1,
                    "record_offset": 1,
                    "record_to_compare": 1,
                    "struct_value": 1,
                    "temp": 1,
                    "value": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "lVar5": {
                    "address": 1,
                    "base": 1,
                    "base_address": 3,
                    "counter2": 1,
                    "data1": 2,
                    "data_address": 1,
                    "data_array_start": 2,
                    "data_base_address": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_start": 1,
                    "entry_array_base": 1,
                    "l_var5": 1,
                    "list_base_address": 1,
                    "local_var1": 1,
                    "ptr2_value": 1,
                    "ptr_offset": 1,
                    "ptr_to_struct_arr": 1,
                    "record_base_address": 1,
                    "table_base": 1,
                    "table_offset": 1
                },
                "lVar6": {
                    "counter2": 1,
                    "current_data_offset": 1,
                    "current_list_index": 1,
                    "data2": 1,
                    "index": 8,
                    "iteration_index": 1,
                    "line_index_iterator": 1,
                    "local_var2": 1,
                    "loop_counter": 5,
                    "loop_index": 3,
                    "record_index": 2,
                    "temp_var": 1
                },
                "param_10": {
                    "address_offset": 1,
                    "another_counter": 1,
                    "data_value": 1,
                    "entry_count": 1,
                    "extra_data": 1,
                    "file_offset": 1,
                    "file_size": 1,
                    "item_count": 1,
                    "limit": 1,
                    "line_length": 1,
                    "line_number": 1,
                    "param": 2,
                    "param2": 1,
                    "param_value": 2,
                    "parameter": 2,
                    "parameter_10": 1,
                    "record_id": 1,
                    "record_offset": 2,
                    "record_value": 1,
                    "shift_amount": 1,
                    "size": 1,
                    "upper_limit": 1,
                    "value": 5
                },
                "param_8": {
                    "count": 1,
                    "counter": 17,
                    "current_index": 1,
                    "entry_index": 1,
                    "index": 3,
                    "line_index": 1,
                    "line_number": 1,
                    "match_count": 1,
                    "record_count": 2,
                    "record_counter": 1,
                    "record_index": 2
                },
                "plVar1": {
                    "current_array_element": 1,
                    "current_entry": 1,
                    "current_list": 1,
                    "current_pointer": 3,
                    "data_pointer": 2,
                    "file_ptr2": 1,
                    "inner_pl_var1": 1,
                    "p_data_ptr": 1,
                    "pointer": 1,
                    "pointer1": 3,
                    "pointer_1": 1,
                    "pointer_to_value": 1,
                    "ptr": 4,
                    "ptr_to_line": 1,
                    "record_pointer": 1,
                    "record_ptr": 1
                },
                "printf": {
                    "print_formatted": 1
                },
                "putc": {
                    "put_character": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "unaff_R12": {
                    "filename": 2,
                    "input_str": 1,
                    "input_string": 12,
                    "item_name": 1,
                    "record_name": 1,
                    "record_to_compare": 1,
                    "search_string": 6,
                    "str_to_match": 1,
                    "string": 1,
                    "string_param": 1,
                    "string_parameter": 1,
                    "string_ptr": 1,
                    "string_to_compare": 2
                },
                "unaff_R13": {
                    "file": 1,
                    "file_data": 2,
                    "file_pointer": 5,
                    "file_ptr": 7,
                    "file_stream": 1,
                    "function_array": 1,
                    "function_param": 1,
                    "function_pointer": 4,
                    "function_pointers": 3,
                    "function_ptr": 2,
                    "output_file": 1,
                    "output_stream": 1,
                    "pointer_array": 1,
                    "std_output": 1
                },
                "unaff_R15": {
                    "base_address": 6,
                    "base_param": 1,
                    "base_pointer": 3,
                    "base_record": 1,
                    "compared_struct": 1,
                    "comparison_record": 1,
                    "current_file_ptr": 1,
                    "current_obj": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "file_header": 1,
                    "file_information": 1,
                    "input_struct": 1,
                    "item": 1,
                    "original_string": 1,
                    "record_pointer": 2,
                    "record_ptr": 1,
                    "struct_ptr": 2
                }
            },
            "called": [
                "putc",
                "strcmp",
                "printf",
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\n\n\nvoid process_data_00103463(void)\n\n{\n  long *ptr;\n  long current_value;\n  char result;\n  int comparison_result;\n  long base_address;\n  char *input_string;\n  undefined8 *file_ptr;\n  long index;\n  long base_address;\n  undefined8 counter;\n  ulong value;\n  long line_number;\n  \n  FUN_00106530(*file_ptr);\n  do {\n    counter._4_4_ = counter._4_4_ + 1;\n    if (DAT_0010b748 <= counter._4_4_) {\n      putc(10,standard_output);\n      return;\n    }\n    base_address = DAT_0010b738;\n    for (index = 0; ptr = (long *)(base_address + (ulong)counter._4_4_ * 8),\n        *ptr != index && index <= *ptr; index = index + 1) {\n      ptr = **(long ***)(*(long *)(DAT_0010b750 + (ulong)counter._4_4_ * 8) + index * 8);\n      if ((((ptr != (long *)0x0) &&\n           (current_value = *ptr, *(long *)(current_value + 0x20) == *(long *)(base_address + 0x20))) &&\n          (*(long *)(current_value + 0x10) == *(long *)(base_address + 0x10))) &&\n         (((comparison_result = strcmp(input_string,*(char **)(current_value + 8)), comparison_result == 0 &&\n           (result = (**(code **)(file_ptr[1] + 0x240))(), base_address = DAT_0010b738, result != '\\0')) &&\n          (line_number != 0)))) {\n        printf(\"\\t%s:%u\",line_number,value >> 0x20);\n        counter._4_4_ = DAT_0010b748;\n        break;\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_data_00103463",
            "entrypoint": "0x00103463",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103463": "process_data_00103463",
                "_stdout": "standard_output",
                "cVar3": "result",
                "iVar4": "comparison_result",
                "in_stack_00000050": "line_number",
                "lVar1": "current_record",
                "lVar2": "current_value",
                "lVar5": "base_address",
                "lVar6": "index",
                "param_10": "value",
                "param_8": "counter",
                "plVar1": "ptr",
                "printf": "print_formatted",
                "putc": "put_character",
                "strcmp": "compare_strings",
                "unaff_R12": "input_string",
                "unaff_R13": "file_ptr",
                "unaff_R15": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010351b": {
            "additional_data": {
                "FUN_0010351b": {
                    "print_error_message": 1,
                    "print_function_name": 9,
                    "print_function_name_if_zero": 2,
                    "print_function_status": 1,
                    "print_if_dat_zero": 1,
                    "print_if_data_available": 1,
                    "print_if_data_is_zero": 1,
                    "print_if_data_zero": 1,
                    "print_if_not_zero": 1,
                    "print_message": 1,
                    "print_message_if_dat_zero": 1,
                    "print_message_if_data_not_set": 1,
                    "print_message_if_data_zero": 1,
                    "print_message_if_flag_is_set": 2,
                    "print_message_if_flag_is_zero": 1,
                    "print_message_if_needed": 1,
                    "print_message_if_not_initialized": 1,
                    "print_message_if_zero": 1,
                    "print_message_or_return": 1,
                    "print_or_return": 2
                },
                "__format": {
                    "format_string": 24,
                    "message": 1,
                    "message_format": 4
                },
                "printf": {
                    "print_formatted": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid print_function_name_if_zero_0010351b(void)\n\n{\n  if (DAT_0010b818 == 0) {\n    printf(\"\\n%s:\\n\");\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_function_name_if_zero_0010351b",
            "entrypoint": "0x0010351b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010351b": "print_function_name_if_zero_0010351b",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103533": {
            "additional_data": {
                "FUN_00103533": {
                    "compare_and_call": 4,
                    "compare_and_call_function": 3,
                    "compare_and_execute": 15,
                    "compare_and_execute_function": 1,
                    "compare_parameters": 1,
                    "compare_params": 1,
                    "compare_values": 2,
                    "compare_values_and_call_function": 1
                },
                "param_1": {
                    "array1": 5,
                    "data1": 1,
                    "first_array": 2,
                    "first_input": 1,
                    "first_parameter": 2,
                    "input1": 7,
                    "input_1": 3,
                    "input_a": 1,
                    "input_pointer1": 1,
                    "list1": 1,
                    "value1": 3,
                    "value_1": 1
                },
                "param_2": {
                    "array2": 5,
                    "data2": 1,
                    "input2": 7,
                    "input_2": 3,
                    "input_b": 1,
                    "input_pointer2": 1,
                    "list2": 1,
                    "second_array": 2,
                    "second_input": 1,
                    "second_parameter": 2,
                    "value2": 3,
                    "value_2": 1
                },
                "uVar1": {
                    "result": 20,
                    "return_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nulong compare_and_execute_function_00103533(undefined8 *input1,undefined8 *input2)\n\n{\n  ulong result;\n  \n  if ((ulong)input1[1] < (ulong)input2[1]) {\n    return (ulong)(-(uint)(DAT_0010b7f4 == 0) | 1);\n  }\n  if ((ulong)input2[1] < (ulong)input1[1]) {\n    return (ulong)((-(uint)(DAT_0010b7f4 == 0) & 2) - 1);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00103571. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  result = (*(code *)(&PTR_FUN_0010acc0)[DAT_0010b7f4])(*input1,*input2);\n  return result;\n}\n\n",
            "current_name": "compare_and_execute_function_00103533",
            "entrypoint": "0x00103533",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103533": "compare_and_execute_function_00103533",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103573": {
            "additional_data": {
                "FUN_00103573": {
                    "print_and_format_strings": 1,
                    "print_formatted_message": 1,
                    "print_function_names": 1,
                    "print_labels": 1,
                    "print_message": 2,
                    "print_param": 1,
                    "print_param_strings": 1,
                    "print_param_values": 1,
                    "print_parameters": 4,
                    "print_params": 2,
                    "print_strings": 14,
                    "print_strings_with_colon": 1,
                    "print_values": 1
                },
                "__format": {
                    "format_string": 1
                },
                "param_1": {
                    "function_name_1": 1,
                    "header": 1,
                    "label": 2,
                    "label_1": 1,
                    "message1": 2,
                    "message_1": 1,
                    "param": 1,
                    "param1": 1,
                    "parameter1": 2,
                    "str_1": 1,
                    "string1": 14,
                    "string_1": 2,
                    "string_param": 1,
                    "string_ptr": 1
                },
                "param_2": {
                    "data": 1,
                    "format_param": 1,
                    "function_name_2": 1,
                    "label_2": 1,
                    "message": 3,
                    "message2": 2,
                    "message_2": 1,
                    "param2": 1,
                    "parameter2": 2,
                    "str_2": 1,
                    "string2": 14,
                    "string_2": 2,
                    "string_ptr2": 1
                },
                "param_3": {
                    "": 1,
                    "not_used": 1,
                    "param1": 1,
                    "param3": 10,
                    "param_3": 1,
                    "parameter3": 1,
                    "unused": 4,
                    "unused1": 1,
                    "unused_param": 8,
                    "unused_parameter": 2
                },
                "param_4": {
                    "": 1,
                    "additional_param": 1,
                    "additional_string": 1,
                    "not_used": 1,
                    "param2": 1,
                    "param4": 11,
                    "param_4": 1,
                    "parameter4": 2,
                    "separator": 1,
                    "str_3": 1,
                    "string3": 4,
                    "string_3": 2,
                    "string_ptr3": 1,
                    "unused2": 1,
                    "unused_parameter": 1,
                    "unused_parameter_2": 1
                },
                "printf": {
                    "print_output": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001053b0"
            ],
            "code": "\nvoid print_and_format_strings_00103573(undefined8 *string1,undefined8 *string2,undefined8 param3,undefined8 param4)\n\n{\n  if (string1 != (undefined8 *)0x0) {\n    printf(\"%s:\",*string1);\n  }\n  printf(\"%s:\",*string2,param4);\n  return;\n}\n\n",
            "current_name": "print_and_format_strings_00103573",
            "entrypoint": "0x00103573",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103573": "print_and_format_strings_00103573",
                "param_1": "string1",
                "param_2": "string2",
                "param_3": "param3",
                "param_4": "param4",
                "printf": "print_output"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001035a2": {
            "additional_data": {
                "DAT_0010712c": {
                    "constant_string1": 1,
                    "data_format1": 1,
                    "format1": 1,
                    "format_string": 1,
                    "format_string1": 1,
                    "separator1": 1,
                    "str1": 1,
                    "string1": 2,
                    "string_one": 1,
                    "text1": 1
                },
                "DAT_0010b238": {
                    "format1": 2,
                    "format2": 2,
                    "format_string1": 1,
                    "format_string2": 1,
                    "str2": 1,
                    "string_two": 1,
                    "text2": 1
                },
                "DAT_0010b23d": {
                    "format2": 2,
                    "format3": 2,
                    "format_string2": 1,
                    "format_string3": 1,
                    "str3": 1,
                    "string_three": 1,
                    "text3": 1
                },
                "FUN_001035a2": {
                    "analyze_data": 1,
                    "convert_and_print_data": 1,
                    "parse_data": 1,
                    "print_character_info": 1,
                    "print_data": 11,
                    "print_data_from_pointer": 1,
                    "print_data_information": 1,
                    "print_formatted_data": 9,
                    "print_info": 1,
                    "process_data": 3
                },
                "FUN_00104740": {
                    "initialize_data": 1,
                    "print_debug_info": 1,
                    "print_end_message": 1,
                    "print_footer": 2,
                    "process_data": 2
                },
                "FUN_001054d0": {
                    "display_value": 1,
                    "param_printer": 1,
                    "print_data": 1,
                    "print_data_value": 1,
                    "print_info": 1,
                    "print_value": 8,
                    "process_data": 2,
                    "process_value": 2,
                    "reverse": 1,
                    "reverse_operation": 1,
                    "reverse_string": 1
                },
                "lVar1": {
                    "address": 1,
                    "converted_data": 1,
                    "data": 1,
                    "data_value": 4,
                    "info_addr": 1,
                    "result_value": 1,
                    "temp_value": 1,
                    "value": 20,
                    "value_to_print": 1
                },
                "printf": {
                    "print": 2,
                    "print_formatted": 10,
                    "print_formatted_data": 1,
                    "print_formatted_string": 2,
                    "print_string": 2,
                    "print_text": 1
                },
                "putchar": {
                    "print_char": 7,
                    "print_character": 8,
                    "print_space": 2,
                    "put_character": 1
                },
                "unaff_RBX": {
                    "array_ptr": 1,
                    "data": 6,
                    "data_array": 1,
                    "data_pointer": 10,
                    "data_ptr": 7,
                    "input_data": 1,
                    "pointer": 1,
                    "pointer_rbx": 1,
                    "ptr_data": 2,
                    "rbx": 1
                }
            },
            "called": [
                "putchar",
                "printf",
                "FUN_001054d0",
                "FUN_00104740"
            ],
            "calling": [
                "FUN_001053c0"
            ],
            "code": "\nvoid print_formatted_data_001035a2(void)\n\n{\n  long *data_pointer;\n  long value;\n  \n  if (data_pointer[2] == 0) {\n    value = data_pointer[1];\n  }\n  else {\n    value = *(long *)(data_pointer[2] + 0x38);\n  }\n  if (value != 0) {\n    putchar(0x20);\n    if (data_pointer[2] == 0) {\n      value = data_pointer[1];\n    }\n    else {\n      value = *(long *)(data_pointer[2] + 0x38);\n    }\n    FUN_001054d0(value);\n  }\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*data_pointer + 8));\n  if (*(char *)(*data_pointer + 8) != '-') {\n    FUN_00104740(&DAT_0010712c);\n    return;\n  }\n  putchar(0x20);\n  printf(&DAT_0010b238,(ulong)(uint)(int)*(char *)(*data_pointer + 0x19));\n  putchar(0x20);\n  printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*data_pointer + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*data_pointer + 0x20));\n  FUN_00104740(&DAT_0010712c);\n  return;\n}\n\n",
            "current_name": "print_formatted_data_001035a2",
            "entrypoint": "0x001035a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001035a2": "print_formatted_data_001035a2",
                "lVar1": "value",
                "printf": "print_formatted",
                "putchar": "print_character",
                "unaff_RBX": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001036a7": {
            "additional_data": {
                "FUN_001036a7": {
                    "print_data": 4,
                    "print_formatted_string": 1,
                    "print_formatted_strings": 4,
                    "print_function": 3,
                    "print_function_and_parameters": 1,
                    "print_function_data": 1,
                    "print_function_details": 1,
                    "print_function_info": 2,
                    "print_function_information": 1,
                    "print_function_name_and_parameters": 1,
                    "print_function_params": 1,
                    "print_info": 3,
                    "print_message": 3,
                    "print_param": 1,
                    "print_parameters": 1,
                    "print_params": 1,
                    "print_strings": 2
                },
                "param_1": {
                    "data1": 1,
                    "file_name": 1,
                    "first_param": 1,
                    "function_name": 3,
                    "label": 1,
                    "message": 1,
                    "message1": 7,
                    "message_1": 1,
                    "message_one": 1,
                    "name_pointer": 1,
                    "param1": 1,
                    "param_1": 1,
                    "str1_ptr": 1,
                    "string1": 6,
                    "string_param": 3,
                    "title": 1
                },
                "param_2": {
                    "data2": 1,
                    "details": 1,
                    "formatted_string_param": 1,
                    "message": 3,
                    "message2": 7,
                    "message_2": 1,
                    "message_param": 1,
                    "message_two": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_pointer": 1,
                    "parameter_name": 2,
                    "second_param": 1,
                    "str2_ptr": 1,
                    "string2": 6,
                    "string_param2": 1,
                    "variable_name": 1
                },
                "param_3": {
                    "arg3": 1,
                    "extra_info": 1,
                    "param3": 6,
                    "param_3": 1,
                    "parameter1": 1,
                    "parameter_3": 1,
                    "third_param": 1,
                    "unused": 3,
                    "unused_param": 9,
                    "unused_param1": 1,
                    "unused_parameter": 2,
                    "unused_parameter1": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_message": 1,
                    "additional_param": 1,
                    "another_parameter": 1,
                    "arg4": 1,
                    "delimiter": 1,
                    "format_param": 1,
                    "fourth_param": 1,
                    "message_three": 1,
                    "output_param": 1,
                    "param4": 8,
                    "param_4": 2,
                    "parameter2": 1,
                    "parameter_4": 1,
                    "string3": 2,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_param2": 3,
                    "unused_parameter2": 2
                }
            },
            "called": [
                "printf"
            ],
            "calling": [],
            "code": "\nvoid print_function_data_001036a7(undefined8 *message1,undefined8 *message2,undefined8 unused_param,undefined8 param4)\n\n{\n  if (DAT_0010b818 != 0) {\n    if (message1 != (undefined8 *)0x0) {\n      printf(\"%s:\",*message1);\n    }\n    printf(\"%s:\",*message2,param4);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_function_data_001036a7",
            "entrypoint": "0x001036a7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001036a7": "print_function_data_001036a7",
                "param_1": "message1",
                "param_2": "message2",
                "param_3": "unused_param",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001036e0": {
            "additional_data": {
                "FUN_001036e0": {
                    "print_formatted_message": 7,
                    "print_formatted_string": 2,
                    "print_message": 22
                },
                "param_1": {
                    "category": 2,
                    "header": 2,
                    "log_tag": 1,
                    "logger_name": 1,
                    "message": 3,
                    "message1": 3,
                    "message_1": 1,
                    "message_type": 1,
                    "module_name": 2,
                    "prefix": 1,
                    "sender": 2,
                    "severity": 1,
                    "source": 3,
                    "source_name": 1,
                    "subject": 1,
                    "title": 6
                },
                "param_2": {
                    "default_logger_name": 1,
                    "default_message": 2,
                    "default_name": 1,
                    "error_message": 2,
                    "fallback": 1,
                    "label": 1,
                    "message": 19,
                    "message2": 3,
                    "message_2": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001064a0"
            ],
            "code": "\nvoid print_formatted_message_001036e0(undefined8 *title,undefined8 *message)\n\n{\n  if (title != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*title);\n    return;\n  }\n  printf(\"%s: \",*message);\n  return;\n}\n\n",
            "current_name": "print_formatted_message_001036e0",
            "entrypoint": "0x001036e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001036e0": "print_formatted_message_001036e0",
                "param_1": "title",
                "param_2": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010370a": {
            "additional_data": {
                "DAT_0010712d": {
                    "error_message_string": 1
                },
                "DAT_0010b23d": {
                    "symbol_format_string": 1
                },
                "DAT_0010b728": {
                    "unknown_processor_specific_string": 1
                },
                "DAT_0010b730": {
                    "unknown_symbol_format_string": 1
                },
                "DAT_0010b7a8": {
                    "symbol_display_mode": 1
                },
                "FUN_0010370a": {
                    "print_symbol_details": 1,
                    "print_symbol_info": 19,
                    "print_symbol_information": 8,
                    "print_symtab_entry": 1,
                    "print_type_information": 1,
                    "print_variable_details": 1
                },
                "FUN_00106300": {
                    "print_error_message": 1
                },
                "bVar8": {
                    "byte_value": 1,
                    "data_type": 2,
                    "data_type_specifier": 1,
                    "data_type_switch": 1,
                    "data_type_value": 1,
                    "masked_byte": 1,
                    "section_type": 1,
                    "sym_class": 1,
                    "sym_type": 1,
                    "symbol_attributes": 1,
                    "symbol_class": 5,
                    "symbol_class_value": 1,
                    "symbol_flags": 1,
                    "symbol_type": 2,
                    "type": 2,
                    "type_byte": 1,
                    "type_category": 2,
                    "type_class": 1,
                    "type_code": 3,
                    "type_sub_code": 1
                },
                "cVar1": {
                    "is_sym_class_undefined": 1,
                    "is_undefined": 11,
                    "is_undefined_class": 2,
                    "is_undefined_sym_class": 1,
                    "is_undefined_symbol": 1,
                    "is_undefined_symbol_class": 1,
                    "is_undefined_symclass": 11,
                    "symbol_class": 2
                },
                "dcgettext": {
                    "get_translated_string": 2,
                    "translate_text": 1
                },
                "iVar3": {
                    "asprintf_result": 20,
                    "asprintf_ret_val": 1,
                    "asprintf_return_value": 2,
                    "error_check": 1,
                    "error_status": 1,
                    "formatted_string_length": 1,
                    "formatting_result": 1,
                    "length": 1,
                    "status_code": 1
                },
                "lVar7": {
                    "address": 1,
                    "array_address": 1,
                    "block_address": 1,
                    "data": 1,
                    "data_type_check": 1,
                    "data_type_ptr": 1,
                    "sym_info": 2,
                    "sym_ptr": 1,
                    "sym_table_entry": 1,
                    "symbol_class_ptr": 1,
                    "symbol_data": 2,
                    "symbol_details_address": 1,
                    "symbol_info": 9,
                    "symbol_info_ptr": 1,
                    "symbol_information_pointer": 1,
                    "temp": 1,
                    "temp_long": 1,
                    "temp_ptr": 1,
                    "type_info": 2
                },
                "param_1": {
                    "param1": 1
                },
                "param_2": {
                    "param2": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "pcVar10": {
                    "data_type": 2,
                    "data_type_string": 3,
                    "sym_type_name": 1,
                    "symbol_category": 5,
                    "symbol_class": 2,
                    "symbol_type": 8,
                    "type_name": 5,
                    "type_string": 3,
                    "variable_type": 1
                },
                "piVar5": {
                    "errno_loc": 1,
                    "errno_location": 12,
                    "errno_ptr": 1,
                    "errnum": 1,
                    "error_code": 3,
                    "error_location": 2,
                    "error_location_pointer": 1,
                    "error_number": 6,
                    "error_number_ptr": 1
                },
                "plVar4": {
                    "error_message": 1,
                    "format_specifier": 1,
                    "print_width": 26,
                    "print_width_pointer": 1,
                    "print_width_ptr": 1
                },
                "uVar2": {
                    "category": 1,
                    "class_code": 1,
                    "class_flags": 1,
                    "class_type": 2,
                    "data_type_flag": 1,
                    "data_type_value": 2,
                    "shifted_short": 1,
                    "sym_class": 1,
                    "sym_type": 1,
                    "symbol_class": 3,
                    "symbol_code": 1,
                    "symbol_type": 5,
                    "symbol_type_bits": 1,
                    "symclass": 1,
                    "symclass_value": 1,
                    "type_bits": 2,
                    "type_code": 2,
                    "type_flag": 2,
                    "type_value": 1
                },
                "uVar6": {
                    "error_message": 6,
                    "error_msg": 1,
                    "error_string": 8,
                    "xstrerror": 1,
                    "xstrerror_result": 5,
                    "xstrerror_ret_val": 1,
                    "xstrerror_return_value": 1
                },
                "uVar9": {
                    "bitwise_rbx": 1,
                    "filtered_rbx": 2,
                    "formatted_width": 1,
                    "masked_rbx": 10,
                    "masked_rbx_value": 1,
                    "masked_value": 1,
                    "modified_rbx": 1,
                    "rbx": 1,
                    "rbx_lower32": 1,
                    "rbx_mask": 2,
                    "rbx_masked": 1,
                    "rbx_masked_value": 1,
                    "rbx_value32": 1,
                    "restricted_rbx": 1,
                    "symbol_class": 1,
                    "symbol_mask": 1,
                    "u_var9": 2,
                    "unaff_rbx_temp": 1
                },
                "unaff_RBX": {
                    "external_symbol": 1,
                    "input_value": 2,
                    "mask_value": 1,
                    "modified_rbx": 1,
                    "original_rbx": 3,
                    "parameter": 1,
                    "rbx": 5,
                    "rbx_value": 4,
                    "symbol_address": 1,
                    "unaff_rbx": 2,
                    "unaffixed_rbx": 1
                }
            },
            "called": [
                "FUN_00106300",
                "dcgettext"
            ],
            "calling": [
                "FUN_001054d0"
            ],
            "code": "\nvoid print_symbol_info_0010370a(void)\n\n{\n  char is_undefined_symclass;\n  ushort symbol_type;\n  int asprintf_result;\n  long *print_width;\n  int *errno_location;\n  undefined8 error_string;\n  long symbol_info;\n  ulong rbx;\n  byte symbol_class;\n  ulong masked_rbx;\n  char *symbol_type;\n  \n  print_width = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  masked_rbx = rbx & 0xffffffff;\n  FUN_00106300(print_width,masked_rbx);\n  FUN_00104740(\"%-20s|\",print_width,0,masked_rbx);\n  is_undefined_symclass = bfd_is_undefined_symclass((int)*(char *)(*print_width + 8));\n  if (is_undefined_symclass == '\\0') {\n    FUN_001054d0(*(undefined8 *)*print_width);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*print_width + 8));\n  if (*(char *)(*print_width + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*print_width + 0x20));\n    printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*print_width + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (print_width[2] == 0) {\n    if (print_width[3] != 0) {\n      symbol_info = *(long *)(print_width[3] + 0x30);\n      is_undefined_symclass = *(char *)(symbol_info + 0x28);\n      if (is_undefined_symclass == 'g') goto LAB_00103983;\n      if (is_undefined_symclass == 'h') {\n        symbol_type = \"Line\";\n      }\n      else if (is_undefined_symclass == 'd') {\n        symbol_type = \"Block\";\n      }\n      else if (*(ushort *)(symbol_info + 0x26) == 0) {\n        symbol_type = \"None\";\n      }\n      else {\n        symbol_type = *(ushort *)(symbol_info + 0x26) >> 4 & 3;\n        if (symbol_type == 2) {\n          symbol_type = \"Function\";\n        }\n        else if (symbol_type == 3) {\n          symbol_type = \"Array\";\n        }\n        else {\n          if (symbol_type != 1) {\n            free(DAT_0010b730);\n            symbol_type = *(ushort *)(symbol_info + 0x26);\n            symbol_class = *(byte *)(symbol_info + 0x28);\n            symbol_type = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprintf(&DAT_0010b730,symbol_type,(ulong)symbol_class,(ulong)symbol_type);\n            symbol_type = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          symbol_type = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    symbol_class = *(byte *)(print_width[2] + 0x48) & 0xf;\n    switch(symbol_class) {\n    case 0:\n      symbol_type = \"NOTYPE\";\n      break;\n    case 1:\n      symbol_type = \"OBJECT\";\n      break;\n    case 2:\n      symbol_type = \"FUNC\";\n      break;\n    case 3:\n      symbol_type = \"SECTION\";\n      break;\n    case 4:\n      symbol_type = \"FILE\";\n      break;\n    case 5:\n      symbol_type = \"COMMON\";\n      break;\n    case 6:\n      symbol_type = \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      symbol_type = \"<processor specific>: %d\";\n      if ((2 < symbol_class - 0xd) && (symbol_type = \"<OS specific>: %d\", 2 < symbol_class - 10)) {\n        symbol_type = \"<unknown>: %d\";\n      }\n      symbol_type = (char *)dcgettext(0,symbol_type,5);\n      asprintf_result = asprintf(&DAT_0010b728,symbol_type,(ulong)symbol_class);\n      symbol_type = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_location = __errno_location();\n        error_string = xstrerror(*errno_location);\n        FUN_00106300(&DAT_0010712d,error_string);\nLAB_00103983:\n        symbol_type = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",symbol_type);\n  }\n  if (print_width[2] == 0) {\n    if (print_width[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(print_width[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    FUN_001054d0();\n  }\n  symbol_info = print_width[2];\n  if ((symbol_info != 0) || (symbol_info = print_width[3], symbol_info != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(symbol_info + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_symbol_info_0010370a",
            "entrypoint": "0x0010370a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010370a": "print_symbol_info_0010370a",
                "bVar8": "symbol_class",
                "cVar1": "is_undefined_symclass",
                "dcgettext": "get_translated_string",
                "iVar3": "asprintf_result",
                "lVar7": "symbol_info",
                "pcVar10": "symbol_type",
                "piVar5": "errno_location",
                "plVar4": "print_width",
                "uVar2": "symbol_type",
                "uVar6": "error_string",
                "uVar9": "masked_rbx",
                "unaff_RBX": "rbx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103729": {
            "additional_data": {
                "DAT_0010b23d": {
                    "format_specifier": 1,
                    "format_string1": 1
                },
                "DAT_0010b728": {
                    "processor_string": 1,
                    "unknown_processor_string": 1
                },
                "DAT_0010b730": {
                    "unknown_section_string": 1,
                    "unknown_string": 1
                },
                "DAT_0010b7a8": {
                    "some_constant": 1,
                    "unknown_symbol_class": 1
                },
                "FUN_00103729": {
                    "format_and_print_symbol_info": 1,
                    "print_symbol": 1,
                    "print_symbol_details": 1,
                    "print_symbol_info": 22,
                    "print_symbol_information": 6
                },
                "FUN_00104740": {
                    "print_formatted_string": 2
                },
                "FUN_001054d0": {
                    "print_data": 1,
                    "print_value": 1
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "bVar7": {
                    "byte_val": 1,
                    "byte_value": 7,
                    "byte_var": 1,
                    "class": 2,
                    "data_type": 2,
                    "flag": 1,
                    "obj_size": 1,
                    "reduced_byte_value": 1,
                    "section_type": 2,
                    "symbol_class": 1,
                    "symbol_type": 1,
                    "type": 4,
                    "type_byte": 2,
                    "type_code": 3,
                    "type_identifier": 1,
                    "type_indicator": 1
                },
                "bfd_is_undefined_symclass": {
                    "is_undefined_sym_class": 1,
                    "is_undefined_symclass": 1
                },
                "cVar1": {
                    "is_undefined": 18,
                    "is_undefined_class": 3,
                    "is_undefined_sym": 1,
                    "is_undefined_sym_class": 1,
                    "is_undefined_symbol": 2,
                    "is_undefined_symbol_class": 1,
                    "is_undefined_symclass": 2,
                    "sym_class_undefined": 1,
                    "symbol_class": 1,
                    "symclass_is_undefined": 1
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "get_translation": 1
                },
                "free": {
                    "free_memory": 2
                },
                "iVar3": {
                    "asprintf_result": 6,
                    "asprintf_ret_val": 2,
                    "asprintf_return_value": 1,
                    "error": 3,
                    "error_code": 1,
                    "error_status": 2,
                    "format_err": 1,
                    "format_result": 1,
                    "length": 2,
                    "result": 6,
                    "status": 6
                },
                "lVar6": {
                    "address": 1,
                    "auxiliary_data": 1,
                    "class_info": 1,
                    "data_ptr": 1,
                    "entry": 1,
                    "extra_data": 1,
                    "info": 3,
                    "info_pointer": 1,
                    "info_ptr": 7,
                    "next_symbol": 1,
                    "offset": 1,
                    "ptr": 2,
                    "section_ptr": 1,
                    "symbol_data": 3,
                    "symbol_info": 3,
                    "symbol_info_ptr": 1,
                    "temp": 1,
                    "var6": 1
                },
                "param_1": {
                    "symbol": 5,
                    "symbol_data": 2,
                    "symbol_info": 19,
                    "symbol_info_array": 1,
                    "symbol_pointer": 1,
                    "symbols": 2
                },
                "param_2": {
                    "additional_info": 1,
                    "address": 3,
                    "arg": 1,
                    "data": 1,
                    "description": 1,
                    "extra_param": 1,
                    "file_descriptor": 1,
                    "file_info": 1,
                    "file_name": 1,
                    "format": 3,
                    "format_specifier": 2,
                    "format_string": 1,
                    "info_length": 1,
                    "output_file": 1,
                    "output_format": 1,
                    "param": 7,
                    "param_2": 3,
                    "symbol_info": 1
                },
                "pcVar8": {
                    "class_string": 1,
                    "data_type_str": 1,
                    "data_type_string": 1,
                    "section_type": 1,
                    "section_type_name": 2,
                    "string_data": 1,
                    "string_val": 1,
                    "string_value": 1,
                    "string_var": 1,
                    "symbol_type": 3,
                    "type_name": 9,
                    "type_str": 1,
                    "type_string": 6,
                    "unknown_section_type_string": 1
                },
                "piVar4": {
                    "err_num": 1,
                    "errno_loc": 1,
                    "errno_location": 3,
                    "errno_pointer": 2,
                    "errno_ptr": 7,
                    "error": 2,
                    "error_code": 2,
                    "error_location": 2,
                    "error_location_ptr": 1,
                    "error_num": 2,
                    "error_num_ptr": 1,
                    "error_number": 4,
                    "error_pointer": 1,
                    "errorno_result": 1
                },
                "printf": {
                    "print": 1,
                    "print_string": 1
                },
                "uVar2": {
                    "class": 2,
                    "class_code": 1,
                    "class_identifier": 1,
                    "class_indicator": 1,
                    "class_type": 3,
                    "flag": 1,
                    "flags": 1,
                    "shifted_bits": 1,
                    "short_value": 3,
                    "sym_class": 5,
                    "sym_type": 1,
                    "symbol_class": 2,
                    "symbol_type": 2,
                    "symclass": 1,
                    "type": 1,
                    "type_flag": 1,
                    "type_value": 1,
                    "u_short_var": 1,
                    "value": 2
                },
                "uVar5": {
                    "error_message": 9,
                    "error_msg": 4,
                    "error_str": 2,
                    "error_string": 13,
                    "str_error": 2,
                    "strerror_value": 1
                },
                "xstrerror": {
                    "get_error_string": 2
                }
            },
            "called": [
                "asprintf",
                "FUN_00106300",
                "__errno_location",
                "dcgettext",
                "printf",
                "FUN_001054d0",
                "bfd_is_undefined_symclass",
                "free",
                "FUN_00104740",
                "xstrerror"
            ],
            "calling": [],
            "code": "\nvoid format_and_print_symbol_info_00103729(long *symbol_info,undefined8 param)\n\n{\n  char is_undefined;\n  ushort sym_class;\n  int asprintf_result;\n  int *errno_ptr;\n  undefined8 error_string;\n  long info_ptr;\n  byte byte_value;\n  char *type_name;\n  \n  FUN_00104740(\"%-20s|\",symbol_info,0,param);\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol_info + 8));\n  if (is_undefined == '\\0') {\n    FUN_001054d0(*(undefined8 *)*symbol_info);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    print(\"        \");\n  }\n  else {\n    print(\"                \");\n  }\n  print(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) == '-') {\n    print(\"%18s|  \",*(undefined8 *)(*symbol_info + 0x20));\n    print(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (symbol_info[2] == 0) {\n    if (symbol_info[3] != 0) {\n      info_ptr = *(long *)(symbol_info[3] + 0x30);\n      is_undefined = *(char *)(info_ptr + 0x28);\n      if (is_undefined == 'g') goto LAB_00103983;\n      if (is_undefined == 'h') {\n        type_name = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        type_name = \"Block\";\n      }\n      else if (*(ushort *)(info_ptr + 0x26) == 0) {\n        type_name = \"None\";\n      }\n      else {\n        sym_class = *(ushort *)(info_ptr + 0x26) >> 4 & 3;\n        if (sym_class == 2) {\n          type_name = \"Function\";\n        }\n        else if (sym_class == 3) {\n          type_name = \"Array\";\n        }\n        else {\n          if (sym_class != 1) {\n            free_memory(DAT_0010b730);\n            sym_class = *(ushort *)(info_ptr + 0x26);\n            byte_value = *(byte *)(info_ptr + 0x28);\n            type_name = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprint(&DAT_0010b730,type_name,(ulong)byte_value,(ulong)sym_class);\n            type_name = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          type_name = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    print(\"                  |\");\n  }\n  else {\n    byte_value = *(byte *)(symbol_info[2] + 0x48) & 0xf;\n    switch(byte_value) {\n    case 0:\n      type_name = \"NOTYPE\";\n      break;\n    case 1:\n      type_name = \"OBJECT\";\n      break;\n    case 2:\n      type_name = \"FUNC\";\n      break;\n    case 3:\n      type_name = \"SECTION\";\n      break;\n    case 4:\n      type_name = \"FILE\";\n      break;\n    case 5:\n      type_name = \"COMMON\";\n      break;\n    case 6:\n      type_name = \"TLS\";\n      break;\n    default:\n      free_memory(DAT_0010b728);\n      type_name = \"<processor specific>: %d\";\n      if ((2 < byte_value - 0xd) && (type_name = \"<OS specific>: %d\", 2 < byte_value - 10)) {\n        type_name = \"<unknown>: %d\";\n      }\n      type_name = (char *)dcgettext(0,type_name,5);\n      asprintf_result = asprint(&DAT_0010b728,type_name,(ulong)byte_value);\n      type_name = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_ptr = __errno_location();\n        error_string = xstrerror(*errno_ptr);\n        FUN_00106300(&DAT_0010712d,error_string);\nLAB_00103983:\n        type_name = \"File\";\n      }\n    }\nLAB_001039c0:\n    print(\"%18s|\",type_name);\n  }\n  if (symbol_info[2] == 0) {\n    if (symbol_info[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      print(\"        \");\n    }\n    else {\n      print(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(symbol_info[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    FUN_001054d0();\n  }\n  info_ptr = symbol_info[2];\n  if ((info_ptr != 0) || (info_ptr = symbol_info[3], info_ptr != 0)) {\n    print(\"|     |%s\",**(undefined8 **)(info_ptr + 0x20));\n    return;\n  }\nLAB_00103a54:\n  print(\"|     |\");\n  return;\n}\n\n",
            "current_name": "format_and_print_symbol_info_00103729",
            "entrypoint": "0x00103729",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103729": "format_and_print_symbol_info_00103729",
                "__errno_location": "get_errno_location",
                "bVar7": "byte_value",
                "bfd_is_undefined_symclass": "is_undefined_symclass",
                "cVar1": "is_undefined",
                "dcgettext": "get_translation",
                "free": "free_memory",
                "iVar3": "asprintf_result",
                "lVar6": "info_ptr",
                "param_1": "symbol_info",
                "param_2": "param",
                "pcVar8": "type_name",
                "piVar4": "errno_ptr",
                "printf": "print",
                "uVar2": "sym_class",
                "uVar5": "error_string",
                "xstrerror": "get_error_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a66": {
            "additional_data": {
                "FUN_00103a66": {
                    "check_for_data": 1,
                    "check_for_null_pointer": 1,
                    "check_for_valid_pointer": 1,
                    "check_if_pointer_is_not_null": 2,
                    "check_if_pointer_is_null": 11,
                    "check_if_pointer_is_valid": 5,
                    "check_if_pointer_not_null": 2,
                    "check_if_pointer_null": 2,
                    "check_if_pointer_valid": 1,
                    "check_if_ptr_is_valid": 1,
                    "check_if_rbx_has_value": 2,
                    "check_if_rbx_points_to_valid_data": 1,
                    "check_pointer_validity": 1
                },
                "FUN_0010651a": {
                    "call_secondary_function": 2,
                    "execute_another_function": 1,
                    "execute_sub_function": 2,
                    "execute_subfunction": 1,
                    "handle_invalid_ptr": 1,
                    "handle_non_null_pointer": 1,
                    "handle_not_null_pointer": 1,
                    "invoke_unknown_function": 1,
                    "perform_action": 3,
                    "perform_action_if_value_not_null": 1,
                    "perform_action_on_not_null_pointer": 1,
                    "perform_operation": 1,
                    "process_non_null_pointer": 1
                },
                "unaff_RBX": {
                    "data_pointer": 1,
                    "object_pointer": 1,
                    "pointer": 9,
                    "pointer_address": 6,
                    "pointer_to_check": 1,
                    "pointer_value": 3,
                    "ptr": 1,
                    "ptr_to_check": 2,
                    "ptr_to_data_struct": 1,
                    "rbx": 4
                }
            },
            "called": [
                "FUN_0010651a"
            ],
            "calling": [
                "FUN_001064b0"
            ],
            "code": "\nvoid check_if_pointer_is_not_null_00103a66(void)\n\n{\n  long pointer;\n  \n  if (*(long *)(pointer + 8) != 0) {\n    FUN_0010651a();\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_if_pointer_is_not_null_00103a66",
            "entrypoint": "0x00103a66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a66": "check_if_pointer_is_not_null_00103a66",
                "unaff_RBX": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "FUN_00103a78": {
                    "handle_error": 3,
                    "print_error": 6,
                    "print_error_info": 1,
                    "print_error_message": 21
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "uVar1": {
                    "error_message": 20,
                    "error_msg": 2
                },
                "unaff_RBX": {
                    "cause_of_error": 1,
                    "error_cause": 1,
                    "error_code": 21,
                    "error_condition": 1,
                    "error_flag": 5,
                    "error_type": 1,
                    "error_value": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00106540"
            ],
            "code": "\n\n\nvoid print_error_message_00103a78(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "print_error_message_00103a78",
                "dcgettext": "get_error_message",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ab9": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103ab9(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103ab9",
            "entrypoint": "0x00103ab9",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103ab9": "FUNC_00103ab9"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103aba": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103aba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103aba",
            "entrypoint": "0x00103aba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103aba": "FUNC_00103aba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abb": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abb(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abb",
            "entrypoint": "0x00103abb",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abb": "FUNC_00103abb"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abc": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abc",
            "entrypoint": "0x00103abc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abc": "FUNC_00103abc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abd": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abd(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abd",
            "entrypoint": "0x00103abd",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abd": "FUNC_00103abd"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abe": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abe(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abe",
            "entrypoint": "0x00103abe",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abe": "FUNC_00103abe"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abf": {
            "additional_data": {
                "FUN_00103abf": {
                    "print_symbol_info": 9,
                    "print_symbol_information": 2,
                    "print_symbol_table": 3,
                    "print_symbols": 5,
                    "print_symbols_info": 4,
                    "print_undefined_symbols": 8
                },
                "dcgettext": {
                    "get_locale_text": 1,
                    "get_localized_message": 2,
                    "get_localized_string": 1,
                    "get_localized_text": 1,
                    "get_translated_message": 2,
                    "get_translated_string": 3,
                    "get_translated_text": 4,
                    "gettext": 1,
                    "retrieve_string": 1,
                    "translate": 1
                },
                "param_1": {
                    "binary_name": 5,
                    "executable_name": 1,
                    "file_name": 7,
                    "file_path": 5,
                    "filename": 4,
                    "library_name": 1,
                    "module_name": 5,
                    "program_name": 1,
                    "source": 1,
                    "source_file": 1
                },
                "param_2": {
                    "file_name": 5,
                    "filename": 1,
                    "library_name": 4,
                    "section_name": 2,
                    "symbol": 7,
                    "symbol_name": 11,
                    "symbols": 1
                },
                "pcVar1": {
                    "error_message": 3,
                    "format": 1,
                    "format_string": 6,
                    "header": 2,
                    "header_format": 1,
                    "header_message": 4,
                    "header_msg": 2,
                    "message": 4,
                    "message1": 1,
                    "message_prompt": 1,
                    "prompt": 1,
                    "symbol_format": 2,
                    "symbol_info_format": 1,
                    "symbol_info_text": 1,
                    "symbols_message": 1
                },
                "pcVar2": {
                    "header_message": 1,
                    "message2": 1
                },
                "printf": {
                    "print_formatted": 6,
                    "print_formatted_string": 5,
                    "print_formatted_text": 4,
                    "print_output": 1,
                    "print_text": 1
                }
            },
            "called": [
                "dcgettext",
                "printf"
            ],
            "calling": [],
            "code": "\nvoid print_undefined_symbols_00103abf(undefined8 file_name,undefined8 symbol_name)\n\n{\n  char *format_string;\n  \n  format_string = \"\\n\\nUndefined symbols from %s[%s]:\\n\\n\";\n  if (DAT_0010b7e8 == 0) {\n    format_string = \"\\n\\nSymbols from %s[%s]:\\n\\n\";\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string,file_name,symbol_name);\n  format_string = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 != 0x20) {\n    format_string = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string);\n  return;\n}\n\n",
            "current_name": "print_undefined_symbols_00103abf",
            "entrypoint": "0x00103abf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103abf": "print_undefined_symbols_00103abf",
                "dcgettext": "get_translated_text",
                "param_1": "file_name",
                "param_2": "symbol_name",
                "pcVar1": "format_string",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b2b": {
            "additional_data": {
                "FUN_00103b2b": {
                    "print_debug_info": 2,
                    "print_debug_message": 3,
                    "print_if_condition": 1,
                    "print_if_dat_is_zero": 1,
                    "print_if_dat_not_zero": 3,
                    "print_if_dat_zero": 1,
                    "print_if_data_available": 1,
                    "print_if_data_not_zero": 1,
                    "print_if_debug_enabled": 1,
                    "print_if_debug_mode": 3,
                    "print_if_flag_set": 2,
                    "print_if_flag_zero": 1,
                    "print_if_nonzero": 1,
                    "print_if_not_disabled": 2,
                    "print_info": 1,
                    "print_log_message": 1,
                    "print_message": 5,
                    "print_or_return_message": 1
                },
                "param_1": {
                    "category": 3,
                    "debug_module": 1,
                    "debug_tag": 1,
                    "file_name": 2,
                    "function_name": 5,
                    "message": 12,
                    "message_type": 2,
                    "module_name": 4,
                    "source": 1
                },
                "param_2": {
                    "additional_information": 1,
                    "data": 2,
                    "debug_message": 2,
                    "details": 1,
                    "error_message": 1,
                    "file_name": 1,
                    "info": 1,
                    "message": 10,
                    "source": 3,
                    "sub_function_name": 1,
                    "tag": 7,
                    "variable_name": 1
                },
                "printf": {
                    "formatted_print": 1,
                    "print_formatted": 1,
                    "print_formatted_message": 1,
                    "print_formatted_text": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [],
            "code": "\nvoid print_debug_message_00103b2b(undefined8 message,undefined8 message)\n\n{\n  if (DAT_0010b818 == 0) {\n    printf(\"%s[%s]:\\n\",message,message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_debug_message_00103b2b",
            "entrypoint": "0x00103b2b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b2b": "print_debug_message_00103b2b",
                "param_1": "message",
                "param_2": "message",
                "printf": "print_formatted_text"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b49": {
            "additional_data": {
                "FUN_00103b49": {
                    "decompile_and_execute": 1,
                    "initialize_data": 20,
                    "initialize_data_structures": 1,
                    "initialize_function": 2,
                    "process_data": 5
                },
                "FUN_00104740": {
                    "execute_function": 1,
                    "handle_data": 1,
                    "initialize_parameters": 1,
                    "perform_operation": 1,
                    "process_data": 17,
                    "process_data_helper": 1,
                    "process_sub_function": 1,
                    "update_data": 1
                },
                "param_1": {
                    "buffer": 1,
                    "command_array": 1,
                    "data": 4,
                    "data1": 1,
                    "data_array": 3,
                    "data_buffer": 3,
                    "data_pointer": 10,
                    "data_str": 1,
                    "data_structure": 1,
                    "input_data": 1,
                    "param_1": 1,
                    "str_pointer": 1,
                    "string_data": 1,
                    "string_pointer": 2
                },
                "param_2": {
                    "buffer": 1,
                    "data2": 1,
                    "data_length": 2,
                    "data_pointer": 2,
                    "data_value": 1,
                    "input_value": 1,
                    "length": 2,
                    "long_array_pointer": 1,
                    "long_data": 1,
                    "long_pointer": 2,
                    "output_pointer": 1,
                    "param": 1,
                    "param_2": 1,
                    "param_arr": 1,
                    "param_pointer": 2,
                    "parameter_array": 1,
                    "pointer": 1,
                    "size_pointer": 1,
                    "unknown_pointer": 1,
                    "value": 3,
                    "value_pointer": 2,
                    "var2": 1,
                    "void_pointer": 1
                },
                "param_3": {
                    "additional_info": 1,
                    "address_data": 1,
                    "data3": 1,
                    "data_pointer": 1,
                    "output": 2,
                    "output_pointer": 3,
                    "output_value": 1,
                    "param_3": 1,
                    "param_ptr": 1,
                    "result": 1,
                    "result_pointer": 4,
                    "special_pointer": 1,
                    "undefined8_pointer": 2,
                    "undefined_pointer": 1,
                    "user_data": 1,
                    "value_array": 1,
                    "var3": 1
                },
                "param_4": {
                    "count": 1,
                    "data4": 1,
                    "data_length": 2,
                    "data_size": 1,
                    "extra_param": 1,
                    "input_value": 2,
                    "length": 4,
                    "long_value": 1,
                    "param": 1,
                    "param4": 2,
                    "param_4": 1,
                    "param_val": 1,
                    "param_value": 2,
                    "size_of_data": 1,
                    "user_param": 1,
                    "value": 2,
                    "value_count": 1,
                    "var4": 1
                }
            },
            "called": [
                "FUN_00104740"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_structures_00103b49(undefined8 data_pointer,undefined8 value)\n\n{\n  FUN_00104740(&DAT_0010712d,data_pointer,0,value);\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_00103b49",
            "entrypoint": "0x00103b49",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b49": "initialize_data_structures_00103b49",
                "param_1": "data_pointer",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b5d": {
            "additional_data": {
                "FUN_00103b5d": {
                    "print_formats_and_free_memory": 1,
                    "print_matching_formats": 30
                },
                "__c": {
                    "character": 2,
                    "new_line_character": 1,
                    "newline_char": 1
                },
                "__format": {
                    "error_message_format": 3,
                    "format_message": 2,
                    "format_msg": 1,
                    "format_string": 17,
                    "format_string_translation": 1,
                    "message": 1,
                    "message_format": 4,
                    "translation": 1
                },
                "__stream": {
                    "error_stream": 2,
                    "output_file": 1,
                    "output_stream": 3,
                    "stream": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "standard_error": 7,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 7,
                    "stdout_stream": 1
                },
                "dcgettext": {
                    "get_translated_message": 1,
                    "get_translated_string": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "fprintf": {
                    "print_error_message": 1,
                    "print_formatted_output": 1
                },
                "fputc": {
                    "put_character": 1,
                    "write_character": 1,
                    "write_newline": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1
                },
                "param_1": {
                    "format_list": 1,
                    "format_strings": 13,
                    "formats": 13,
                    "formats_list": 1,
                    "matching_formats": 1,
                    "string_array": 1,
                    "strings": 1
                },
                "plVar2": {
                    "curr_format_string": 1,
                    "current_format": 22,
                    "current_format_string": 2,
                    "current_string": 5
                },
                "uVar1": {
                    "data": 1,
                    "default_format": 1,
                    "default_locale": 1,
                    "format_string": 1,
                    "locale": 1,
                    "matching_format": 1,
                    "matching_formats": 6,
                    "matching_formats_header": 1,
                    "matching_formats_label": 1,
                    "matching_formats_message": 1,
                    "original_locale": 1,
                    "translation_domain": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "fflush",
                "fputc",
                "free"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103b5d(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_0010b820;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free_memory(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103b5d",
            "entrypoint": "0x00103b5d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b5d": "print_matching_formats_00103b5d",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "dcgettext": "get_translated_message",
                "fflush": "flush_output",
                "fprintf": "print_error_message",
                "fputc": "write_newline",
                "free": "free_memory",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bec": {
            "additional_data": {
                "FUN_00103bec": {
                    "calculate_function_result": 1,
                    "calculate_result": 20,
                    "calculate_return_value": 6,
                    "compute_result": 1
                },
                "FUN_00105050": {
                    "calculate_result": 1,
                    "get_negative_value": 1,
                    "perform_calculation": 1
                },
                "FunkyFunction": {
                    "calculate_result": 1
                },
                "auVar2": {
                    "output": 5,
                    "output_array": 1,
                    "output_value": 2,
                    "result": 6,
                    "result_array": 1,
                    "result_data": 1,
                    "return_value": 6,
                    "reversed_data": 1
                },
                "iVar1": {
                    "calculation_result": 1,
                    "error_value": 1,
                    "func_result": 1,
                    "function_result": 2,
                    "inverse_result": 1,
                    "negative_result": 4,
                    "negative_return_value": 1,
                    "negative_value": 3,
                    "result": 15,
                    "return_value": 2
                },
                "in_RAX": {
                    "initial_return_value": 1,
                    "input": 4,
                    "input1": 1,
                    "input_data": 1,
                    "input_parameter": 1,
                    "input_value": 8,
                    "input_variable": 1,
                    "num_iterations": 1,
                    "param1": 2,
                    "previous_result": 1,
                    "result": 2,
                    "return_val": 1,
                    "return_value": 2,
                    "value": 1
                },
                "param_1": {
                    "input1": 1,
                    "input_param": 1,
                    "input_param1": 1
                },
                "param_2": {
                    "input2": 1,
                    "input_param2": 1,
                    "output_param": 1
                }
            },
            "called": [
                "FUN_00105050"
            ],
            "calling": [],
            "code": "\nundefined  [16] calculate_function_result_00103bec(void)\n\n{\n  int result;\n  undefined8 input_value;\n  undefined return_value [16];\n  \n  result = FUN_00105050();\n  return_value._0_4_ = -result;\n  return_value._4_4_ = 0;\n  return_value._8_8_ = input_value;\n  return return_value;\n}\n\n",
            "current_name": "calculate_function_result_00103bec",
            "entrypoint": "0x00103bec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bec": "calculate_function_result_00103bec",
                "auVar2": "return_value",
                "iVar1": "result",
                "in_RAX": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bf6": {
            "additional_data": {
                "FUN_00103bf6": {
                    "calculate_result": 26,
                    "calculate_return_value": 3,
                    "extract_data_from_binary": 1
                },
                "FUN_00104fa0": {
                    "get_data_from_binary": 1,
                    "perform_calculation": 1,
                    "perform_computation": 1
                },
                "VAR_00103bf6_auVar2": {
                    "return_value": 1
                },
                "VAR_00103bf6_iVar1": {
                    "result": 1
                },
                "auVar2": {
                    "calculation_result": 1,
                    "new_result": 1,
                    "output": 9,
                    "output_array": 2,
                    "output_data": 2,
                    "result": 5,
                    "result_array": 2,
                    "return_value": 5,
                    "updated_result": 1
                },
                "iVar1": {
                    "computation_result": 1,
                    "error_code": 1,
                    "error_value": 1,
                    "inverse_result": 1,
                    "negative_value": 3,
                    "result": 20,
                    "return_value": 3
                },
                "in_RAX": {
                    "input": 3,
                    "input1": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 3,
                    "input_value": 5,
                    "param1": 4,
                    "parameter1": 1,
                    "result": 2,
                    "return_value": 1
                },
                "param_1": {
                    "input1": 1
                },
                "param_2": {
                    "input2": 1
                }
            },
            "called": [
                "FUN_00104fa0"
            ],
            "calling": [],
            "code": "\nundefined  [16] calculate_result_00103bf6(void)\n\n{\n  int result;\n  undefined8 input_value;\n  undefined output [16];\n  \n  result = FUN_00104fa0();\n  output._0_4_ = -result;\n  output._4_4_ = 0;\n  output._8_8_ = input_value;\n  return output;\n}\n\n",
            "current_name": "calculate_result_00103bf6",
            "entrypoint": "0x00103bf6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bf6": "calculate_result_00103bf6",
                "auVar2": "output",
                "iVar1": "result",
                "in_RAX": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c00": {
            "additional_data": {
                "FUN_00103c00": {
                    "extract_reloc_data": 1,
                    "parse_binary_data": 1,
                    "process_binary": 1,
                    "process_binary_data": 3,
                    "process_binary_function": 1,
                    "process_data": 2,
                    "process_param": 1,
                    "process_reloc_data": 2,
                    "process_relocation": 7,
                    "process_reversed_data": 1,
                    "relocate_and_update": 1,
                    "set_relocation_data": 1,
                    "update_data": 1,
                    "update_reloc_info": 2,
                    "update_relocation_flags": 1,
                    "update_relocation_info": 3,
                    "update_relocations": 1,
                    "update_symbol_info": 1
                },
                "FUN_00106530": {
                    "cleanup_data": 1,
                    "do_something": 2
                },
                "auVar2": {
                    "array": 1,
                    "array1": 1,
                    "aux_array": 1,
                    "aux_var": 1,
                    "auxiliary_var": 1,
                    "local_array": 1,
                    "new_data": 1,
                    "new_reloc_info": 1,
                    "reloc_data_array": 1,
                    "reloc_info": 1,
                    "reloc_vals": 1,
                    "reloc_values": 1,
                    "relocation_info": 1,
                    "temp": 3,
                    "temp_array": 11,
                    "temp_buffer": 1,
                    "temp_data": 1,
                    "temp_var": 1,
                    "updated_data": 1
                },
                "bfd_canonicalize_reloc": {
                    "canonicalize_reloc": 2,
                    "canonicalize_relocation": 1
                },
                "bfd_get_reloc_upper_bound": {
                    "get_reloc_upper_bound": 1,
                    "get_upper_bound": 2
                },
                "lVar3": {
                    "array_size": 1,
                    "count": 1,
                    "length": 7,
                    "reloc_offset": 1,
                    "reloc_size": 6,
                    "reloc_upper_bound": 1,
                    "relocation_size": 1,
                    "size": 3,
                    "temp_length": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "upper_bound": 6
                },
                "param_1": {
                    "binary_data": 1,
                    "binary_pointer": 1,
                    "config_data": 1,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "file_data": 1,
                    "file_path": 1,
                    "info_ptr": 1,
                    "input_array": 1,
                    "input_pointer": 3,
                    "input_ptr": 2,
                    "output_buffer": 1,
                    "output_pointer": 1,
                    "param": 2,
                    "param1": 1,
                    "param_pointer": 1,
                    "param_size": 1,
                    "params": 1,
                    "ptr1": 2,
                    "relocation_data": 1,
                    "symbol_info_ptr": 1
                },
                "param_2": {
                    "address": 3,
                    "binary_address": 1,
                    "binary_size": 1,
                    "data": 1,
                    "data_length": 3,
                    "data_pointer": 1,
                    "data_size": 5,
                    "file_offset": 1,
                    "file_size": 1,
                    "input_address": 1,
                    "input_data": 1,
                    "input_value": 2,
                    "param2": 1,
                    "param_count": 1,
                    "param_value": 1,
                    "relocation": 1,
                    "relocation_info": 2,
                    "size": 1,
                    "value": 3
                },
                "param_3": {
                    "metadata_ptr": 1,
                    "output": 2,
                    "output_array": 2,
                    "output_data": 4,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "param3": 1,
                    "param_array": 2,
                    "ptr_array": 1,
                    "reloc_array": 1,
                    "reloc_data": 5,
                    "reloc_data_array": 1,
                    "reloc_info": 3,
                    "reloc_info_ptr": 1,
                    "relocation_data": 1,
                    "relocation_info": 3,
                    "result": 1
                },
                "param_4": {
                    "arg1": 1,
                    "data1": 1,
                    "param4": 11,
                    "param_4": 9,
                    "pointer_a": 1,
                    "temp1": 1,
                    "unknown1": 1,
                    "unknown_param": 1,
                    "unused_param": 2,
                    "unused_param_4": 1,
                    "var1": 1,
                    "var4": 1
                },
                "param_5": {
                    "arg2": 1,
                    "data2": 1,
                    "output_value": 1,
                    "param5": 11,
                    "param_5": 8,
                    "pointer_b": 1,
                    "result": 2,
                    "return_value": 2,
                    "temp2": 1,
                    "unknown2": 1,
                    "var2": 1,
                    "var5": 1
                },
                "puVar1": {
                    "new_pointer1": 1,
                    "output_pointer": 1,
                    "output_ptr1": 1,
                    "pointer1": 3,
                    "pointer_1": 1,
                    "ptr": 1,
                    "ptr1": 10,
                    "ptr2": 1,
                    "ptr_1": 1,
                    "ptr_data": 1,
                    "ptr_reloc_data": 1,
                    "ptr_to_reloc_data": 1,
                    "ptr_to_relocation": 1,
                    "reloc_data": 1,
                    "reloc_output_pointer": 1,
                    "reloc_output_ptr": 1,
                    "reloc_ptr": 1,
                    "reloc_ptr1": 1,
                    "relocation_block": 1,
                    "target_ptr": 1
                },
                "uVar4": {
                    "alloc_ptr": 1,
                    "alloc_result": 2,
                    "allocated_mem": 1,
                    "allocated_memory": 10,
                    "allocation_result": 1,
                    "dynamic_memory": 1,
                    "malloc_result": 1,
                    "new_buffer": 1,
                    "new_pointer2": 1,
                    "new_ptr": 1,
                    "ptr_malloc": 1,
                    "reloc_input_ptr": 1,
                    "result1": 1,
                    "temp3": 1,
                    "temp_var1": 4,
                    "temp_var_1": 1,
                    "temporary_var1": 1,
                    "var4": 1
                },
                "uVar5": {
                    "canonical_reloc_value": 1,
                    "canonicalize_result": 2,
                    "canonicalized_data": 1,
                    "canonicalized_reloc": 11,
                    "new_pointer3": 1,
                    "ptr_reloc": 1,
                    "reloc_ptr": 1,
                    "reloc_result": 2,
                    "relocated_data": 1,
                    "relocated_memory": 1,
                    "result2": 1,
                    "temp4": 1,
                    "temp_var2": 4,
                    "temp_var_2": 1,
                    "temporary_var2": 1,
                    "var5": 1
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "xmalloc",
                "FUN_00106530",
                "bfd_get_reloc_upper_bound",
                "bfd_canonicalize_reloc"
            ],
            "calling": [
                "FUN_00103238"
            ],
            "code": "\nundefined8\nprocess_relocation_00103c00(undefined8 *data_ptr,long data_size,undefined (*reloc_data) [16],undefined8 param4,\n            undefined8 param5)\n\n{\n  undefined8 *ptr1;\n  undefined temp_array [16];\n  long length;\n  undefined8 allocated_memory;\n  undefined8 canonicalized_reloc;\n  \n  **(long **)*reloc_data = data_size;\n  if ((*(byte *)(data_size + 0x24) & 4) == 0) {\n    **(undefined8 **)(*reloc_data + 8) = 0;\n    **(undefined8 **)reloc_data[1] = 0;\n  }\n  else {\n    length = bfd_get_reloc_upper_bound();\n    if (-1 < length) {\n      ptr1 = *(undefined8 **)(*reloc_data + 8);\n      allocated_memory = xmalloc(length);\n      canonicalized_reloc = *(undefined8 *)(reloc_data[1] + 8);\n      *ptr1 = allocated_memory;\n      ptr1 = *(undefined8 **)reloc_data[1];\n      canonicalized_reloc = bfd_canonicalize_reloc(data_ptr,data_size,**(undefined8 **)(*reloc_data + 8),canonicalized_reloc);\n      *ptr1 = canonicalized_reloc;\n      if (-1 < **(long **)reloc_data[1]) goto LAB_00103c7c;\n    }\n    FUN_00106530(*data_ptr);\n  }\nLAB_00103c7c:\n  length = *(long *)(*reloc_data + 8) + 8;\n  *(long *)reloc_data[1] = *(long *)reloc_data[1] + 8;\n  temp_array._8_4_ = (int)length;\n  temp_array._0_8_ = *(long *)*reloc_data + 8;\n  temp_array._12_4_ = (int)((ulong)length >> 0x20);\n  *reloc_data = temp_array;\n  return param5;\n}\n\n",
            "current_name": "process_relocation_00103c00",
            "entrypoint": "0x00103c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c00": "process_relocation_00103c00",
                "auVar2": "temp_array",
                "bfd_canonicalize_reloc": "canonicalize_reloc",
                "bfd_get_reloc_upper_bound": "get_upper_bound",
                "lVar3": "length",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "reloc_data",
                "param_4": "param4",
                "param_5": "param5",
                "puVar1": "ptr1",
                "uVar4": "allocated_memory",
                "uVar5": "canonicalized_reloc",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ca0": {
            "additional_data": {
                "FUN_00103ca0": {
                    "display_symbol_information": 1,
                    "display_usage": 4,
                    "display_usage_info": 1,
                    "print_help": 1,
                    "print_help_information": 2,
                    "print_symbol_info": 1,
                    "print_symbol_information": 2,
                    "print_symbol_list": 3,
                    "print_symbol_list_usage": 1,
                    "print_symbol_options": 1,
                    "print_symbols_help": 1,
                    "print_symbols_usage": 4,
                    "print_usage": 8,
                    "print_usage_and_exit": 1
                },
                "__ptr": {
                    "bfd_targets": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr": 1,
                    "target_list": 27
                },
                "bfd_target_list": {
                    "get_supported_targets": 1,
                    "get_target_list": 1
                },
                "dcgettext": {
                    "get_localized": 1,
                    "get_translated_string": 1
                },
                "exit": {
                    "terminate": 1,
                    "terminate_program": 2
                },
                "fprintf": {
                    "print_formatted": 2,
                    "write_formatted_string": 1
                },
                "fputc": {
                    "put_char": 1,
                    "put_character": 1,
                    "write_character": 1
                },
                "free": {
                    "deallocate_memory": 2,
                    "release_memory": 1
                },
                "iVar2": {
                    "format_length": 1,
                    "format_result": 2,
                    "fprintf_result": 1,
                    "fprintf_return": 1,
                    "int_var1": 1,
                    "local_variable2": 1,
                    "num_characters": 1,
                    "num_chars": 1,
                    "total_char_printed": 1,
                    "total_characters_printed": 1,
                    "total_chars": 1,
                    "total_chars_printed": 3,
                    "total_chars_written": 1,
                    "total_length": 9,
                    "total_printed": 2,
                    "total_printed_chars": 1,
                    "total_size": 1,
                    "total_symbols": 1,
                    "total_symbols_printed": 1
                },
                "iVar3": {
                    "added_size": 1,
                    "char_printed": 1,
                    "characters_printed": 1,
                    "chars_printed": 5,
                    "chars_written": 1,
                    "current_symbols_printed": 1,
                    "fprintf_result": 3,
                    "fprintf_result2": 1,
                    "fprintf_return": 1,
                    "int_var2": 1,
                    "length": 4,
                    "line_printed": 1,
                    "local_variable3": 1,
                    "num_characters2": 1,
                    "num_chars_total": 1,
                    "symbol_length": 5,
                    "symbol_name_length": 1,
                    "symbols_count": 1
                },
                "lVar1": {
                    "default_target": 1,
                    "lang_var": 1,
                    "language_domain": 1,
                    "language_version": 2,
                    "local_variable1": 1,
                    "message_id": 1,
                    "supported_target": 1,
                    "supported_targets": 2,
                    "supported_targets_message": 1,
                    "supported_targets_msg": 1,
                    "supported_targets_text": 1,
                    "target": 4,
                    "target_format": 1,
                    "target_name": 11,
                    "target_object": 2
                },
                "lVar5": {
                    "char_index": 1,
                    "count": 1,
                    "current_index": 1,
                    "current_pos": 1,
                    "index": 11,
                    "lang_var2": 1,
                    "length": 2,
                    "local_variable4": 1,
                    "loop_counter": 1,
                    "loop_index": 3,
                    "loop_var1": 1,
                    "loop_variable": 1,
                    "offset": 1,
                    "space_count": 2,
                    "spaces": 1,
                    "spaces_count": 1,
                    "start_index": 1
                },
                "local_3c": {
                    "indentation_spaces": 1,
                    "leading_spaces": 1,
                    "length": 1,
                    "local_length": 1,
                    "local_limit": 1,
                    "local_var": 1,
                    "local_variable": 5,
                    "local_variable5": 1,
                    "mandatory_spacing": 1,
                    "num_spaces": 3,
                    "padding": 1,
                    "padding_size": 2,
                    "prefix_length": 1,
                    "space": 1,
                    "space_count": 5,
                    "space_offset": 1,
                    "spaces": 3
                },
                "param_1": {
                    "file": 3,
                    "file_ptr": 1,
                    "file_stream": 2,
                    "output_file": 25
                },
                "param_2": {
                    "error_code": 1,
                    "exit_code": 12,
                    "exit_status": 16,
                    "status": 1,
                    "status_code": 1
                },
                "pcVar4": {
                    "display_text": 1,
                    "format_string": 2,
                    "localized_message": 1,
                    "localized_string": 1,
                    "localized_text": 2,
                    "message": 10,
                    "msg": 1,
                    "str_var": 1,
                    "symbol_string": 1,
                    "text": 10,
                    "translation": 1
                },
                "pcVar8": {
                    "demangler": 1
                },
                "pcVar9": {
                    "delimiter": 16,
                    "demangler_separator": 2,
                    "pointer4": 1,
                    "separator": 11,
                    "str_var2": 1
                },
                "plVar7": {
                    "current_target": 5,
                    "pointer2": 1,
                    "ptr": 4,
                    "ptr_target": 1,
                    "ptr_to_list": 1,
                    "ptr_to_target": 1,
                    "ptr_var": 1,
                    "target": 4,
                    "target_item": 1,
                    "target_list": 1,
                    "target_list_pointer": 1,
                    "target_pointer": 4,
                    "target_ptr": 6
                },
                "ppcVar8": {
                    "current_demangler": 2,
                    "demangler": 10,
                    "demangler_array": 1,
                    "demangler_list": 3,
                    "demangler_pointer": 2,
                    "demangler_ppc_var": 1,
                    "demangler_ptr": 3,
                    "demanglers": 1,
                    "pointer3": 1,
                    "ptr_demanglers": 1,
                    "ptr_list": 1,
                    "ptr_str": 1,
                    "ptr_to_demangler": 1
                },
                "sVar6": {
                    "length": 2,
                    "name_length": 3,
                    "size_var": 1,
                    "str_length": 1,
                    "string_length": 13,
                    "string_size": 2,
                    "symbol_len": 1,
                    "symbol_length": 4,
                    "symbol_name_length": 2,
                    "text_length": 1,
                    "text_size": 1
                },
                "strlen": {
                    "calculate_length": 1,
                    "get_string_length": 1,
                    "string_length": 1
                }
            },
            "called": [
                "FUN_00102450",
                "dcgettext",
                "fprintf",
                "fseek",
                "fputc",
                "exit",
                "bfd_target_list",
                "strlen",
                "free"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid print_symbols_usage_00103ca0(FILE *output_file,int exit_status)\n\n{\n  long target_name;\n  int total_length;\n  int symbol_length;\n  char *text;\n  long index;\n  size_t string_length;\n  long *target_list;\n  long *target_ptr;\n  char **demangler;\n  char *delimiter;\n  uint space_count;\n  \n  target_name = DAT_0010b820;\n  text = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(output_file,text,target_name);\n  text = (char *)dcgettext(0,\" List symbols in [file(s)] (a.out by default).\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -a, --debug-syms       Display debugger-only symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"  -A, --print-file-name  Print name of the input file before every symbol\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -B                     Same as --format=bsd\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -C, --demangle[=STYLE] Decode mangled/processed symbol names\\n\",5)\n  ;\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"                           STYLE can be \",5);\n  if (*text == ' ') {\n    target_name = 1;\n    do {\n      index = target_name;\n      target_name = index + 1;\n    } while (text[index] == ' ');\n    space_count = (uint)index;\n  }\n  else {\n    space_count = 0;\n  }\n  total_length = fprintf(output_file,\"%s\",text);\n  delimiter = \"\";\n  for (demangler = (char **)&libiberty_demanglers; *demangler != (char *)0x0; demangler = demangler + 3) {\n    string_length = strlen(*demangler);\n    if (0x4a < (long)total_length + string_length) {\n      fprintf(output_file,\"%.1s\\n\",delimiter);\n      delimiter = \"\";\n      total_length = fprintf(output_file,\"%.*s\",(ulong)space_count,text);\n    }\n    symbol_length = fprintf(output_file,\"%s\\\"%s\\\"\",delimiter,*demangler);\n    total_length = total_length + symbol_length;\n    delimiter = \", \";\n  }\n  fputc(10,output_file);\n  text = (char *)dcgettext(0,\"      --no-demangle      Do not demangle low-level symbol names\\n\",5\n                            );\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"      --recurse-limit    Enable a demangling recursion limit.  (default)\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"      --no-recurse-limit Disable a demangling recursion limit.\\n\",5)\n  ;\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -e                     (ignored)\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"  -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd\\',\\n                           `sysv\\', `posix\\' or \\'just-symbols\\'.\\n                           The default is `bsd\\'\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -g, --extern-only      Display only external symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -j, --just-symbols     Same as --format=just-symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"  -l, --line-numbers     Use debugging information to find a filename and\\n                           line number for each symbol\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -n, --numeric-sort     Sort symbols numerically by address\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -o                     Same as -A\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -p, --no-sort          Do not sort the symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -P, --portability      Same as --format=posix\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -r, --reverse-sort     Reverse the sense of the sort\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"      --plugin NAME      Load the specified plugin\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -S, --print-size       Print size of defined symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"  -s, --print-armap      Include index for symbols from archive members\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"      --size-sort        Sort symbols by size\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"      --special-syms     Include special symbols in the output\\n\",5)\n  ;\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"      --synthetic        Display synthetic symbols as well\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -t, --radix=RADIX      Use RADIX for printing symbol values\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"      --target=BFDNAME   Specify the target object format as BFDNAME\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -u, --undefined-only   Display only undefined symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -U, --defined-only     Display only defined symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"      --unicode={default|show|invalid|hex|escape|highlight}\\n                         Specify how to treat UTF-8 encoded unicode characters\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -W, --no-weak          Ignore weak symbols\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\n                             \"      --with-symbol-versions  Display version strings after symbol names\\n\"\n                             ,5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -X 32_64               (ignored)\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  @FILE                  Read options from FILE\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -h, --help             Display this information\\n\",5);\n  fprintf(output_file,text);\n  text = (char *)dcgettext(0,\"  -V, --version          Display this program\\'s version number\\n\",5\n                            );\n  fprintf(output_file,text);\n  target_name = DAT_0010b820;\n  if (DAT_0010b820 == 0) {\n    text = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,text);\n  }\n  else {\n    text = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,text,target_name);\n  }\n  target_list = (long *)bfd_target_list();\n  target_ptr = target_list;\n  while( true ) {\n    target_name = *target_ptr;\n    target_ptr = target_ptr + 1;\n    if (target_name == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_status == 0) {\n    text = (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(output_file,text,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  terminate_program(exit_status);\n}\n\n",
            "current_name": "print_symbols_usage_00103ca0",
            "entrypoint": "0x00103ca0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ca0": "print_symbols_usage_00103ca0",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_localized",
                "exit": "terminate_program",
                "fprintf": "print_formatted",
                "fputc": "put_char",
                "free": "deallocate_memory",
                "iVar2": "total_length",
                "iVar3": "symbol_length",
                "lVar1": "target_name",
                "lVar5": "index",
                "local_3c": "space_count",
                "param_1": "output_file",
                "param_2": "exit_status",
                "pcVar4": "text",
                "pcVar8": "demangler",
                "pcVar9": "delimiter",
                "plVar7": "target_ptr",
                "ppcVar8": "demangler",
                "sVar6": "string_length",
                "strlen": "calculate_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104370": {
            "additional_data": {
                "FUN_00104370": {
                    "determine_output_format": 1,
                    "find_output_format": 1,
                    "format_output": 4,
                    "format_selection": 1,
                    "get_output_format": 4,
                    "output_format_selection": 1,
                    "process_output": 3,
                    "process_output_format": 14,
                    "select_output_format": 2
                },
                "FUN_00104397": {
                    "process_format": 10,
                    "process_format_specifier": 1,
                    "process_input": 1,
                    "process_input_format": 2,
                    "process_option": 1,
                    "process_output": 5,
                    "process_output_format": 3
                },
                "FUN_00106300": {
                    "log_invalid_format": 1,
                    "print_error": 1,
                    "print_error_message": 2,
                    "print_format_error": 2,
                    "print_invalid_format_error": 10,
                    "print_invalid_format_error_message": 1,
                    "print_invalid_format_warning": 2,
                    "print_invalid_output": 1,
                    "print_invalid_output_format": 4
                },
                "FUN_00106400": {
                    "log_not_ordinary_file": 1,
                    "print_file_warning": 3,
                    "print_not_ordinary_file_warning": 2,
                    "print_not_ordinary_warning": 1,
                    "print_warning": 12,
                    "print_warning_error": 1,
                    "print_warning_message": 4
                },
                "PTR_PTR_FUN_0010b260": {
                    "ptr_to_fun": 1
                },
                "caseD_4a": {
                    "process_format4a": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_locale_text": 1,
                    "get_localized_message": 1,
                    "get_localized_string": 3,
                    "get_localized_text": 2,
                    "get_message": 1,
                    "get_translated_error_message": 1,
                    "get_translated_message": 2,
                    "get_translated_string": 2,
                    "get_translated_text": 1,
                    "get_translation": 1,
                    "translate_text": 3
                },
                "param_1": {
                    "format": 11,
                    "format_code": 1,
                    "format_specifier": 1,
                    "input": 5,
                    "input_format": 7,
                    "output_format": 5,
                    "output_ptr": 1
                },
                "param_2": {
                    "data": 4,
                    "file": 1,
                    "file_pointer": 1,
                    "flag": 1,
                    "info": 1,
                    "input": 4,
                    "input_data": 1,
                    "option": 1,
                    "other_param": 1,
                    "output_format": 2,
                    "param": 11,
                    "param2": 2,
                    "param_value": 1
                },
                "param_3": {
                    "format_type": 3
                },
                "ppuVar2": {
                    "output": 1,
                    "output_pointer": 1,
                    "result": 27,
                    "result_ptr": 1
                },
                "uVar1": {
                    "error_message": 22,
                    "error_msg": 2,
                    "error_string": 2,
                    "message": 1,
                    "title": 1
                }
            },
            "called": [
                "FUN_00106300",
                "dcgettext",
                "FUN_00104397",
                "caseD_4a"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nundefined ** process_output_format_00104370(undefined *format,undefined8 param)\n\n{\n  undefined8 error_message;\n  undefined **result;\n  \n  switch(*format) {\n  case 0x42:\n  case 0x62:\n    DAT_0010b7c0 = 0;\n    PTR_PTR_FUN_0010b260 = (undefined *)&PTR_FUN_0010ace0;\n    return &PTR_FUN_0010ace0;\n  default:\n    error_message = dcgettext(0,\"%s: invalid output format\",5);\n    FUN_00106300(error_message,format);\n    error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n    FUN_00106400(error_message);\n    return (undefined **)0x0;\n  case 0x4a:\n  case 0x6a:\n    result = (undefined **)FUN_00104397(format,param,3);\n    return result;\n  case 0x50:\n  case 0x70:\n    result = (undefined **)FUN_00104397(format,param,2);\n    return result;\n  case 0x53:\n  case 0x73:\n    result = (undefined **)FUN_00104397(format,param,1);\n    return result;\n  }\n}\n\n",
            "current_name": "process_output_format_00104370",
            "entrypoint": "0x00104370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104370": "process_output_format_00104370",
                "dcgettext": "translate_text",
                "param_1": "format",
                "param_2": "param",
                "ppuVar2": "result",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104397": {
            "additional_data": {
                "DAT_0010b7c0": {
                    "data": 2,
                    "data_value": 1,
                    "param_value": 2
                },
                "FUN_00104397": {
                    "initialize_data": 5,
                    "initialize_data_structure": 2,
                    "initialize_param": 7,
                    "initialize_param_and_pointer": 1,
                    "initialize_param_data": 1,
                    "initialize_param_with_offset": 2,
                    "initialize_parameter": 2,
                    "initialize_pointer": 1,
                    "initialize_ptr_fun": 1,
                    "set_function_parameters": 1,
                    "set_param": 1,
                    "set_param_and_pointer": 1,
                    "set_param_and_ptr": 2,
                    "set_param_three": 1,
                    "set_param_value": 2,
                    "update_pointer": 1
                },
                "PTR_FUN_0010ace0": {
                    "base_address": 1,
                    "base_ptr": 1,
                    "fun_pointer": 1,
                    "func_pointer": 1,
                    "function_base_address": 1,
                    "function_pointer": 5,
                    "ptr_fun": 1
                },
                "PTR_PTR_FUN_0010b260": {
                    "data_structure": 1,
                    "function_address": 1,
                    "function_pointer": 1,
                    "function_pointer_array": 1,
                    "pointer_to_func_pointer": 1,
                    "pointer_to_pointer": 1,
                    "ptr_fun": 1,
                    "ptr_fun_array": 1,
                    "ptr_fun_pointer": 1,
                    "ptr_to_func_array": 1
                },
                "param_1": {
                    "arg1": 4,
                    "data1": 1,
                    "input1": 3,
                    "input_parameter1": 1,
                    "param1": 13,
                    "param_1": 1,
                    "param_one": 1,
                    "pointer1": 1,
                    "source": 1,
                    "value1": 5
                },
                "param_2": {
                    "arg2": 4,
                    "data2": 1,
                    "destination": 1,
                    "input2": 3,
                    "input_parameter2": 1,
                    "param2": 13,
                    "param_2": 1,
                    "param_two": 1,
                    "pointer2": 1,
                    "value2": 5
                },
                "param_3": {
                    "count": 3,
                    "data_size": 1,
                    "function_index": 1,
                    "index": 2,
                    "initial_value": 1,
                    "new_param": 1,
                    "new_value": 1,
                    "num_iterations": 2,
                    "number_of_elements": 1,
                    "offset": 2,
                    "param": 2,
                    "param3": 4,
                    "param_index": 1,
                    "param_three": 1,
                    "parameter": 1,
                    "size": 5,
                    "value": 2
                },
                "param_4": {
                    "new_size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104370",
                "caseD_4a"
            ],
            "code": "\nvoid initialize_param_with_offset_00104397(undefined8 param1,undefined8 param2,int size)\n\n{\n  DAT_0010b7c0 = size;\n  PTR_PTR_FUN_0010b260 = (undefined *)(&PTR_FUN_0010ace0 + (long)size * 5);\n  return;\n}\n\n",
            "current_name": "initialize_param_with_offset_00104397",
            "entrypoint": "0x00104397",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104397": "initialize_param_with_offset_00104397",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001043d0": {
            "additional_data": {
                "DAT_0010712d": {
                    "archive_format": 1
                },
                "DAT_0010b7b0": {
                    "last_archived_file": 1
                },
                "DAT_0010b7b8": {
                    "first_archived_file": 1
                },
                "DAT_0010b7d0": {
                    "is_plugin": 2,
                    "plugin_flag": 3,
                    "use_plugin": 1
                },
                "DAT_0010b7f0": {
                    "print_archive_index": 1
                },
                "DAT_0010b804": {
                    "extended_format_flag": 1,
                    "format_flag": 1,
                    "is_matching_format": 1,
                    "set_flag": 2,
                    "size_flag": 1
                },
                "FUNC_0010249f": {
                    "helper_function3": 1
                },
                "FUNC_00102670": {
                    "helper_function2": 1
                },
                "FUNC_0010351b": {
                    "helper_function1": 1
                },
                "FUN_0010249f": {
                    "initialize_unknown": 1
                },
                "FUN_00102670": {
                    "handle_archive_index_msg": 1
                },
                "FUN_0010351b": {
                    "initialize_bfd": 1
                },
                "FUN_00103b5d": {
                    "handle_bfd_error": 1,
                    "handle_error2": 1
                },
                "FUN_001043d0": {
                    "check_and_open_file": 1,
                    "check_and_process_file": 2,
                    "check_file": 21,
                    "check_file_and_open": 1,
                    "check_file_information": 1,
                    "file_processing_function": 1,
                    "validate_file": 1,
                    "verify_file": 1
                },
                "FUN_00104670": {
                    "cleanup_bfd": 1,
                    "handle_error1": 1
                },
                "FUN_00104740": {
                    "handle_archive_index": 1
                },
                "FUN_001048e0": {
                    "close_bfd_handle": 1,
                    "handle_error3": 1
                },
                "FUN_001062d0": {
                    "handle_unknown_error": 1
                },
                "FUN_00106400": {
                    "display_message": 1,
                    "print_warning_msg": 1
                },
                "FUN_00106530": {
                    "cleanup_bfd_handle_and_exit": 1,
                    "handle_error4": 1
                },
                "FUN_00106540": {
                    "cleanup_bfd_handle": 1,
                    "close_file": 1
                },
                "F_UN001043d0": {
                    "check_file": 1
                },
                "PTR_PTR_FUN_0010b260": {
                    "bfd_functions": 1,
                    "function_pointers": 1,
                    "function_table": 1
                },
                "_DAT_0010b260": {
                    "function_pointers": 1
                },
                "_DAT_0010b264": {
                    "function42": 1
                },
                "_DAT_0010b268": {
                    "function2": 1
                },
                "_DAT_0010b26c": {
                    "function7": 1
                },
                "_DAT_0010b270": {
                    "function6": 1
                },
                "_DAT_0010b290": {
                    "function5": 1
                },
                "_DAT_0010b2c8": {
                    "function4": 1
                },
                "_DAT_0010b300": {
                    "function10": 1
                },
                "_DAT_0010b46c": {
                    "function8": 1
                },
                "_DAT_0010b498": {
                    "function9": 1
                },
                "_DAT_0010b508": {
                    "function45": 1
                },
                "_DAT_0010b510": {
                    "function18": 1
                },
                "_DAT_0010b564": {
                    "function46": 1
                },
                "_DAT_0010b56c": {
                    "function49": 1
                },
                "_DAT_0010b574": {
                    "function22": 1
                },
                "_DAT_0010b5b0": {
                    "function51": 1
                },
                "_DAT_0010b5b8": {
                    "function21": 1
                },
                "_DAT_0010b5c0": {
                    "function47": 1
                },
                "_DAT_0010b5c8": {
                    "function20": 1
                },
                "_DAT_0010b5e0": {
                    "function11": 1
                },
                "_DAT_0010b5f0": {
                    "function14": 1
                },
                "_DAT_0010b5f8": {
                    "function50": 1
                },
                "_DAT_0010b608": {
                    "function15": 1
                },
                "_DAT_0010b610": {
                    "function12": 1
                },
                "_DAT_0010b640": {
                    "function17": 1
                },
                "_DAT_0010b6e0": {
                    "function52": 1
                },
                "_DAT_0010b6ec": {
                    "function53": 1
                },
                "_DAT_0010b6f4": {
                    "function54": 1
                },
                "_DAT_0010b6fc": {
                    "function55": 1
                },
                "_DAT_0010b704": {
                    "function56": 1
                },
                "_DAT_0010b708": {
                    "function57": 1
                },
                "_DAT_0010b70c": {
                    "function58": 1
                },
                "_DAT_0010b724": {
                    "function61": 1
                },
                "_DAT_0010b73c": {
                    "function59": 1
                },
                "_DAT_0010b744": {
                    "function60": 1
                },
                "_DAT_0010b754": {
                    "function62": 1
                },
                "_DAT_0010b75c": {
                    "function63": 1
                },
                "_DAT_0010b760": {
                    "function65": 1
                },
                "_DAT_0010b764": {
                    "function64": 1
                },
                "_DAT_0010b7b0": {
                    "close_archived_file_error_code": 1,
                    "close_status": 1,
                    "closing_error": 1,
                    "flag_2": 1,
                    "is_error2": 1
                },
                "_DAT_0010b7b8": {
                    "close_file_error_code": 1,
                    "close_flag": 1,
                    "closing_status": 1,
                    "flag_1": 1,
                    "is_error": 1
                },
                "_DAT_0010b7d0": {
                    "plugin_flag": 1
                },
                "_DAT_0010b7d8": {
                    "function67": 1
                },
                "_DAT_0010b7dc": {
                    "function68": 1
                },
                "_DAT_0010b7e4": {
                    "function66": 1
                },
                "_DAT_0010b7f0": {
                    "archive_flag": 3,
                    "is_getting_next_map": 1,
                    "print_archive_index": 1,
                    "print_archive_index_flag": 1
                },
                "_DAT_0010b874": {
                    "function43": 1
                },
                "_DAT_0010b8a0": {
                    "function44": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_errno_pointer": 1
                },
                "bfd_check_format": {
                    "check_bfd_format": 1,
                    "check_file_format": 1
                },
                "bfd_check_format_matches": {
                    "check_bfd_format_matches": 1,
                    "check_file_format_matches": 1
                },
                "bfd_close": {
                    "close_bfd_file": 1
                },
                "bfd_get_next_mapent": {
                    "get_next_map_entry": 2
                },
                "bfd_openr": {
                    "open_bfd_handle": 1
                },
                "bfd_openr_next_archived_file": {
                    "open_next_archived_file": 1
                },
                "cVar1": {
                    "check_result": 4,
                    "format": 3,
                    "format_check": 12,
                    "format_check_result": 2,
                    "format_match": 3,
                    "format_result": 2,
                    "format_valid": 3,
                    "result": 2
                },
                "dcgettext": {
                    "get_locale_message": 1,
                    "translate_message": 1
                },
                "iVar2": {
                    "error": 1,
                    "result": 12,
                    "return_code": 1,
                    "return_value": 1,
                    "status": 15
                },
                "lVar7": {
                    "archive_entry": 1,
                    "archive_index": 2,
                    "iterator": 1,
                    "map_ent": 1,
                    "map_entry": 9,
                    "map_entry_index": 1,
                    "map_offset": 1,
                    "next_index": 1,
                    "next_map_entry": 2,
                    "next_mapent": 1
                },
                "local_c8": {
                    "file_info": 7,
                    "file_stat": 12,
                    "file_stat_info": 1,
                    "file_stats": 10,
                    "stat_info": 1
                },
                "param_1": {
                    "file_name": 3,
                    "file_path": 19,
                    "filename": 8,
                    "filepath": 1
                },
                "pcVar8": {
                    "error_description": 1,
                    "error_details": 1,
                    "error_message": 13,
                    "error_message_str": 1,
                    "error_msg": 3,
                    "error_reason": 2,
                    "error_string": 5,
                    "reason": 1,
                    "warning_msg": 1
                },
                "piVar4": {
                    "errno": 2,
                    "errno_loc": 1,
                    "errno_location": 2,
                    "errno_ptr": 11,
                    "error": 3,
                    "error_code": 4,
                    "error_location": 3,
                    "error_num": 2,
                    "error_ptr": 3
                },
                "printf": {
                    "display_output": 1,
                    "print_output": 1
                },
                "puVar10": {
                    "current_archive_file_descriptor": 1,
                    "current_file": 2,
                    "file_descriptor3": 1,
                    "prev_archived_file": 9,
                    "prev_archived_file_handle": 3,
                    "prev_archived_file_handler": 1,
                    "prev_archived_file_ptr": 1,
                    "previous_archived_file": 4,
                    "previous_archived_file_descriptor": 2,
                    "previous_archived_file_handle": 1,
                    "previous_entry": 1,
                    "previous_file": 3,
                    "previous_file_descriptor": 1,
                    "previous_file_handle": 1
                },
                "puVar6": {
                    "bfd_file": 4,
                    "bfd_handle": 8,
                    "bfd_ptr": 1,
                    "file": 2,
                    "file_descriptor": 7,
                    "file_handle": 7,
                    "file_handler": 2
                },
                "puVar9": {
                    "archive_entry": 1,
                    "archive_file_descriptor": 1,
                    "archived_file": 17,
                    "archived_file_descriptor": 3,
                    "archived_file_handle": 5,
                    "archived_file_handler": 1,
                    "archived_file_ptr": 1,
                    "current_file": 1,
                    "file_descriptor2": 1
                },
                "stat": {
                    "get_file_stat": 1,
                    "get_file_stats": 1
                },
                "strerror": {
                    "get_error_msg": 1,
                    "get_error_string": 1
                },
                "uVar3": {
                    "is_valid": 1,
                    "result": 10,
                    "return_val": 2,
                    "return_value": 11,
                    "status": 1,
                    "success": 5
                },
                "uVar5": {
                    "error_message": 8,
                    "error_msg": 1,
                    "error_msg_str": 1,
                    "error_string": 1,
                    "message": 12,
                    "translated_message": 1,
                    "warning": 1,
                    "warning_message": 4
                }
            },
            "called": [
                "FUN_0010351b",
                "bfd_get_error",
                "__errno_location",
                "bfd_openr_next_archived_file",
                "dcgettext",
                "bfd_check_format",
                "FUN_00104670",
                "bfd_get_next_mapent",
                "FUN_00103b5d",
                "FUN_00106400",
                "FUN_00106540",
                "FUN_001048e0",
                "FUN_00106530",
                "printf",
                "bfd_close",
                "stat",
                "bfd_openr",
                "FUN_00104740",
                "FUN_00102670",
                "strerror",
                "bfd_check_format_matches",
                "FUN_001062d0",
                "FUN_0010249f"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nundefined4 check_and_process_file_001043d0(char *file_path)\n\n{\n  char format_check;\n  int status;\n  undefined4 return_value;\n  int *errno_ptr;\n  undefined8 message;\n  undefined8 *bfd_handle;\n  long map_entry;\n  char *error_message;\n  undefined8 *archived_file;\n  undefined8 *prev_archived_file;\n  get_file_stat file_stat;\n  \n  if (file_path != (char *)0x0) {\n    status = get_file_stat(file_path,&file_stat);\n    if (status < 0) {\nLAB_00102522:\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        FUN_00106400(message,file_path);\n      }\n      else {\n        error_message = strerror(*errno_ptr);\n        message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00106400(message,file_path,error_message);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      FUN_00106400(message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (file_stat.st_size < 0) {\n        message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        FUN_00106400(message,file_path);\n      }\n      else if (file_stat.st_size != 0) {\n        if (DAT_0010b7d0 == 0) {\n          bfd_handle = (undefined8 *)bfd_openr(file_path,\"plugin\");\n        }\n        else {\n          bfd_handle = (undefined8 *)bfd_openr(file_path);\n        }\n        if (bfd_handle != (undefined8 *)0x0) {\n          if (DAT_0010b804 != 0) {\n            *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x8000;\n          }\n          format_check = bfd_check_format(bfd_handle,2);\n          if (format_check == '\\0') {\n            return_value = bfd_check_format_matches(bfd_handle,1,&file_stat);\n            if ((char)return_value == '\\0') goto LAB_001025ac;\n            FUN_00104670(bfd_handle);\n            (**(code **)PTR_PTR_FUN_0010b260)(file_path);\n            FUN_001048e0(bfd_handle,0);\n          }\n          else {\n            (**(code **)(PTR_PTR_FUN_0010b260 + 8))(*bfd_handle);\n            if ((_DAT_0010b7f0 != 0) &&\n               (map_entry = bfd_get_next_mapent(bfd_handle,0xffffffffffffffff,&file_stat), map_entry != -1)) {\n              error_message = (char *)dcgettext(0,\"\\nArchive index:\\n\",5);\n              printf(error_message);\n              do {\n                archived_file = (undefined8 *)(**(code **)(bfd_handle[1] + 0x1e0))(bfd_handle,map_entry);\n                if (archived_file == (undefined8 *)0x0) goto LAB_00102516;\n                if (*(long *)file_stat.st_dev != 0) {\n                  FUN_00104740(&DAT_0010712d,0,*(long *)file_stat.st_dev,bfd_handle);\n                  printf(\" in %s\\n\",*archived_file);\n                }\n                map_entry = bfd_get_next_mapent(bfd_handle,map_entry,&file_stat);\n              } while (map_entry != -1);\n            }\n            archived_file = (undefined8 *)0x0;\n            do {\n              do {\n                prev_archived_file = archived_file;\n                archived_file = (undefined8 *)bfd_openr_next_archived_file(bfd_handle,prev_archived_file);\n                if (archived_file == (undefined8 *)0x0) {\n                  status = bfd_get_error();\n                  if (status != 9) {\n                    FUN_00106530(*bfd_handle);\nLAB_00102516:\n                    FUN_00106530(\"bfd_get_elt_at_index\");\n                    goto LAB_00102522;\n                  }\n                  if (prev_archived_file != (undefined8 *)0x0) {\n                    bfd_close(prev_archived_file);\n                    _DAT_0010b7b8 = 0;\n                    _DAT_0010b7b0 = 0;\n                  }\n                  goto LAB_001044b4;\n                }\n                format_check = bfd_check_format_matches(archived_file,1,&file_stat);\n                if (format_check == '\\0') {\n                  FUN_00106540(*archived_file);\n                  status = bfd_get_error();\n                  if (status == 0xd) {\n                    FUN_00103b5d(file_stat.st_dev);\n                  }\n                }\n                else {\n                  FUN_00104670(archived_file);\n                  (**(code **)(PTR_PTR_FUN_0010b260 + 0x10))(*bfd_handle,*archived_file);\n                  FUN_001048e0(archived_file,bfd_handle);\n                }\n              } while (prev_archived_file == (undefined8 *)0x0);\n              bfd_close(prev_archived_file);\n              _DAT_0010b7b8 = 0;\n              _DAT_0010b7b0 = 0;\n            } while (prev_archived_file != archived_file);\n          }\nLAB_001044b4:\n          return_value = 1;\n          while (format_check = bfd_close(bfd_handle), format_check == '\\0') {\n            FUN_00106530(file_path);\nLAB_001025ac:\n            FUN_00106540(file_path);\n            status = bfd_get_error();\n            if (status == 0xd) {\n              FUN_00103b5d(file_stat.st_dev);\n            }\n          }\n          _DAT_0010b7b0 = 0;\n          _DAT_0010b7b8 = 0;\n          return return_value;\n        }\n        FUN_00106540(file_path);\n      }\n    }\n    else {\n      message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      FUN_00106400(message,file_path);\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_file_001043d0",
            "entrypoint": "0x001043d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001043d0": "check_and_process_file_001043d0",
                "__errno_location": "get_errno_location",
                "bfd_check_format": "check_file_format",
                "bfd_check_format_matches": "check_file_format_matches",
                "bfd_close": "close_bfd_file",
                "bfd_get_next_mapent": "get_next_map_entry",
                "bfd_openr": "open_bfd_handle",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "cVar1": "format_check",
                "dcgettext": "translate_message",
                "iVar2": "status",
                "lVar7": "map_entry",
                "local_c8": "file_stat",
                "param_1": "file_path",
                "pcVar8": "error_message",
                "piVar4": "errno_ptr",
                "printf": "display_output",
                "puVar10": "prev_archived_file",
                "puVar6": "bfd_handle",
                "puVar9": "archived_file",
                "stat": "get_file_stat",
                "strerror": "get_error_string",
                "uVar3": "return_value",
                "uVar5": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104670": {
            "additional_data": {
                "DAT_001071ca": {
                    "concat_value_2": 1,
                    "string_case8": 1
                },
                "DAT_001071cd": {
                    "concat_value_3": 1,
                    "string_case10": 1
                },
                "DAT_001071d0": {
                    "concat_value_1": 1,
                    "default_string": 1
                },
                "DAT_001071d7": {
                    "base_string": 1,
                    "concat_value_4": 1
                },
                "DAT_0010b244": {
                    "another_constant_value": 1,
                    "another_value": 1,
                    "arch_code": 1,
                    "arch_type": 2,
                    "binary_type_flag": 1,
                    "comparison_result": 1,
                    "conditional_value": 1,
                    "constant2": 1,
                    "constant_value": 2,
                    "constant_value_2": 1
                },
                "DAT_0010b7a0": {
                    "allocated_memory": 1,
                    "arch_concatenated_string": 1,
                    "arch_info_buffer": 1,
                    "arch_str_concat": 1,
                    "arch_string": 1,
                    "concatenated_string": 4,
                    "concatenated_value": 1,
                    "memory_global": 1,
                    "version_string": 1
                },
                "DAT_0010b7a8": {
                    "arch_size": 3,
                    "arch_size_result": 4,
                    "arch_type": 1,
                    "architecture_size": 2,
                    "architecture_size_global": 1,
                    "architecture_size_variable": 1
                },
                "DAT_0010b7c0": {
                    "comparison_value": 1,
                    "concat_condition": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "data_size": 1,
                    "length": 1,
                    "max_value": 1,
                    "memory_size_global": 1,
                    "some_constant_value": 1,
                    "version_string_length": 1
                },
                "FUN_00104670": {
                    "analyze_architecture": 1,
                    "determine_arch_type": 1,
                    "determine_architecture_size": 1,
                    "extract_arch_size": 1,
                    "extract_architecture": 1,
                    "extract_architecture_info": 1,
                    "extract_architecture_size": 1,
                    "get_arch_size_and_concatenate": 1,
                    "get_arch_size_and_generate_string": 1,
                    "get_architecture": 1,
                    "get_architecture_info": 2,
                    "get_architecture_size": 2,
                    "identify_architecture": 1,
                    "improve_and_concatenate_arch_size": 1,
                    "improve_architecture": 1,
                    "initialize_arch_size": 5,
                    "initialize_architecture": 1,
                    "map_architecture_size": 1,
                    "set_arch_size_and_concatenate": 1,
                    "set_arch_size_and_format": 1,
                    "setup_arch_size_and_version_string": 1,
                    "update_arch_size": 1
                },
                "bfd_get_arch_size": {
                    "get_arch_size": 4,
                    "get_architecture_size": 5
                },
                "bff_get_arch_size": {
                    "get_arch_size": 1
                },
                "concat": {
                    "combine_strings": 1,
                    "concat_strings": 1,
                    "concatenate_strings": 7,
                    "join_strings": 1,
                    "perform_concatenation": 1
                },
                "free": {
                    "deallocate_memory": 5,
                    "free_memory": 3,
                    "release_memory": 4
                },
                "iVar1": {
                    "arch_format": 1,
                    "arch_size": 14,
                    "arch_size_flag": 1,
                    "arch_type": 3,
                    "architecture_size": 5,
                    "architecture_type": 1,
                    "architecture_value": 1,
                    "compare_result": 1,
                    "comparison_result": 1,
                    "info_flag": 1,
                    "result": 2
                },
                "param_1": {
                    "binary": 2,
                    "binary_data": 2,
                    "binary_file": 1,
                    "binary_file_path": 1,
                    "binary_param": 1,
                    "binary_path": 1,
                    "data": 1,
                    "file_ptr": 1,
                    "input": 4,
                    "input_data": 1,
                    "input_param": 10,
                    "input_parameter": 2,
                    "param": 2,
                    "parameter": 2
                },
                "pcVar2": {
                    "arc_64_str": 1,
                    "arch_description": 1,
                    "arch_found": 1,
                    "arch_name": 1,
                    "arch_name_suffix": 1,
                    "arch_ptr": 2,
                    "arch_string": 2,
                    "arch_substring": 2,
                    "arch_type_match": 1,
                    "architecture_info": 1,
                    "architecture_name": 1,
                    "architecture_string": 3,
                    "architecture_substring": 1,
                    "keyword": 1,
                    "needle_match": 1,
                    "pointer_match": 1,
                    "ptr64": 1,
                    "ptr_substring": 1,
                    "ptr_to64_string": 1,
                    "ptr_to_substring": 2,
                    "string_pointer": 1,
                    "substring": 2,
                    "substring_pointer": 1,
                    "substring_ptr": 1
                },
                "pcVar4": {
                    "arch_format": 1,
                    "arch_info_string": 1,
                    "arch_string": 2,
                    "arch_suffix": 2,
                    "arch_type": 1,
                    "architecture": 1,
                    "binary_name": 2,
                    "haystack_str": 1,
                    "input_string": 1,
                    "input_substring": 1,
                    "pointer_value": 1,
                    "ptr_haystack": 1,
                    "ptr_string": 1,
                    "ptr_to_input": 1,
                    "ptr_to_string": 1,
                    "search_result": 3,
                    "search_string": 1,
                    "str_ptr": 1,
                    "string_ptr": 1,
                    "string_value": 1,
                    "substring": 2,
                    "substring_pointer": 1,
                    "substring_position": 1,
                    "temp_string": 2
                },
                "puVar3": {
                    "arch_str": 1,
                    "architecture_type": 1,
                    "concat_param": 4,
                    "concat_prefix": 1,
                    "concat_ptr": 1,
                    "concat_string": 2,
                    "concatenated_string": 1,
                    "concatenated_string_pointer": 1,
                    "concatenation": 1,
                    "concatenation_data": 1,
                    "concatenation_param": 1,
                    "concatenation_pointer": 1,
                    "concatenation_suffix": 1,
                    "format_string": 1,
                    "pointer": 3,
                    "ptr_concat": 1,
                    "ptr_to_arch_type": 1,
                    "ptr_to_concat_string": 1,
                    "ptr_to_data": 1,
                    "ptr_to_undefined_data": 1,
                    "string_concatenation": 1,
                    "string_ptr": 1,
                    "suffix": 1,
                    "version_ptr": 1,
                    "version_string_suffix": 1
                },
                "strcmp": {
                    "compare_string": 2,
                    "compare_strings": 10
                },
                "strncmp": {
                    "compare_strings": 1
                },
                "strstr": {
                    "find_string": 2,
                    "find_substring": 10,
                    "search_string": 1
                }
            },
            "called": [
                "FUN_001025f5",
                "strcmp",
                "bfd_get_arch_size",
                "strstr",
                "free",
                "concat"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid initialize_arch_size_00104670(long input_param)\n\n{\n  int arch_size;\n  char *architecture_string;\n  undefined *concat_param;\n  char *search_result;\n  \n  DAT_0010b7a8 = bfd_get_arch_size();\n  if (DAT_0010b7a8 == -1) {\n    search_result = **(char ***)(input_param + 8);\n    architecture_string = strstr(search_result,\"64\");\n    arch_size = 0x40;\n    if (architecture_string == (char *)0x0) {\n      arch_size = strcmp(search_result,\"mmo\");\n      arch_size = (-(uint)(arch_size == 0) & 0x20) + 0x20;\n    }\n    DAT_0010b7a8 = arch_size;\n    free(DAT_0010b7a0);\n  }\n  else {\n    free(DAT_0010b7a0);\n  }\n  if (DAT_0010b7c0 - 2U < 2) {\n    search_result = \"\";\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    search_result = \"08\";\n  }\n  else {\n    search_result = \"016\";\n  }\n  concat_param = &DAT_001071d0;\n  if (DAT_0010b244 != 0x10) {\n    if (DAT_0010b244 < 0x11) {\n      if (DAT_0010b244 == 8) {\n        concat_param = &DAT_001071ca;\n      }\n      else {\n        if (DAT_0010b244 != 10) {\n          DAT_0010b7a0 = (void *)concatenate_strings(&DAT_001071d7,search_result,0,0);\n          return;\n        }\n        concat_param = &DAT_001071cd;\n      }\n    }\n    else {\n      concat_param = (undefined *)0x0;\n    }\n  }\n  DAT_0010b7a0 = (void *)concatenate_strings(&DAT_001071d7,search_result,concat_param,0);\n  return;\n}\n\n",
            "current_name": "initialize_arch_size_00104670",
            "entrypoint": "0x00104670",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104670": "initialize_arch_size_00104670",
                "bfd_get_arch_size": "get_architecture_size",
                "concat": "concatenate_strings",
                "free": "deallocate_memory",
                "iVar1": "arch_size",
                "param_1": "input_param",
                "pcVar2": "architecture_string",
                "pcVar4": "search_result",
                "puVar3": "concat_param",
                "strcmp": "compare_strings",
                "strstr": "find_substring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104740": {
            "additional_data": {
                "DAT_0010b234": {
                    "flag1": 1
                },
                "DAT_0010b248": {
                    "bfd": 1
                },
                "DAT_0010b790": {
                    "result_buffer": 1
                },
                "DAT_0010b7e0": {
                    "flag3": 1
                },
                "DAT_0010b814": {
                    "flag2": 1
                },
                "FUN_00104740": {
                    "print_formatted_string": 20,
                    "print_function": 1,
                    "reverse_and_print_string": 2
                },
                "F_unnamed1": {
                    "print_formatted_string": 1
                },
                "P1_unnamed1": {
                    "format_string": 1
                },
                "P2_unnamed1": {
                    "data_pointer": 1
                },
                "P3_unnamed1": {
                    "demangle_info": 1
                },
                "P4_unnamed1": {
                    "flag": 1
                },
                "_DAT_0010b798": {
                    "buffer_size": 1
                },
                "__ptr": {
                    "concatenated_string": 2,
                    "merged_string": 1,
                    "name_pointer": 1,
                    "new_pointer": 1,
                    "new_ptr": 2,
                    "new_string": 2,
                    "new_string_pointer": 1,
                    "output_string": 2,
                    "pointer_to_undefined8_var_ptr": 1,
                    "ptr_to_undefined8_3": 1,
                    "reconcatenated_string": 1,
                    "reconstructed_string": 1,
                    "res_ptr": 1,
                    "result": 3,
                    "result_pointer": 3,
                    "result_pointer1": 1,
                    "result_ptr": 2,
                    "result_str": 1,
                    "result_string": 2,
                    "undefined8_pointer3": 1
                },
                "__ptr_unnamed1": {
                    "result_string": 1
                },
                "__s": {
                    "char_pointer": 1,
                    "char_pointer3": 1,
                    "char_pointer_var_s": 1,
                    "char_ptr2": 2,
                    "char_ptr3": 1,
                    "char_ptr_var3": 1,
                    "char_var3": 1,
                    "new_string": 1,
                    "new_string_2": 1,
                    "ptr2": 1,
                    "str": 1,
                    "str1": 1,
                    "str_ptr": 1,
                    "string_pointer2": 1,
                    "string_var": 2,
                    "temp_string": 1
                },
                "__s_00": {
                    "char_pointer2": 1,
                    "char_ptr3": 1,
                    "char_ptr_var4": 1,
                    "char_var4": 1,
                    "new_char_ptr": 1,
                    "new_string2": 1,
                    "new_string_3": 1,
                    "pointer_to_undefined8_var_s_00": 1,
                    "ptr_to_undefined8_5": 1,
                    "result_pointer2": 1,
                    "result_string_pointer": 1,
                    "str2": 1,
                    "str_ptr2": 2,
                    "string_var00": 1,
                    "undefined8_pointer5": 1
                },
                "__s_00_unnamed1": {
                    "string2": 1
                },
                "__s_unnamed1": {
                    "string1": 1
                },
                "_sch_istable": {
                    "sch_istable": 2
                },
                "acStack_39": {
                    "ac_stack": 2,
                    "ac_stack_var": 1,
                    "buffer": 1,
                    "char_arr1": 1,
                    "char_array": 7,
                    "char_array_stack_39": 1,
                    "char_array_var1": 1,
                    "char_stack": 1,
                    "stack": 1,
                    "stack_arr": 1,
                    "stack_array": 7,
                    "temp_array": 2,
                    "temp_char_array": 1,
                    "temp_str": 1
                },
                "acStack_39_unnamed1": {
                    "stack_array": 1
                },
                "bVar15": {
                    "byte3": 4,
                    "byte_val3": 1,
                    "byte_var": 5,
                    "byte_var15": 6,
                    "byte_var3": 3,
                    "byte_var4": 2,
                    "flag": 1,
                    "flag2": 1,
                    "temp_byte3": 2,
                    "zero_byte": 1
                },
                "bVar15_unnamed1": {
                    "byte3": 1
                },
                "bVar2": {
                    "byte": 1,
                    "byte1": 11,
                    "byte_1": 1,
                    "byte_val1": 1,
                    "byte_var1": 3,
                    "byte_var2": 10,
                    "current_byte": 1,
                    "temp_byte1": 2
                },
                "bVar2_unnamed1": {
                    "byte1": 1
                },
                "bVar3": {
                    "byte2": 12,
                    "byte_2": 1,
                    "byte_val2": 1,
                    "byte_var2": 3,
                    "byte_var3": 10,
                    "next_byte": 1,
                    "temp_byte2": 2
                },
                "bVar3_unnamed1": {
                    "byte2": 1
                },
                "free": {
                    "deallocate_memory": 1
                },
                "iVar4": {
                    "i_var": 1,
                    "index": 2,
                    "int1": 1,
                    "int_1": 1,
                    "int_value": 2,
                    "int_var": 13,
                    "int_var4": 3,
                    "integer_var": 1,
                    "integer_var4": 2,
                    "is_terminal": 1,
                    "temp_int": 2,
                    "temp_var1": 1
                },
                "iVar4_unnamed1": {
                    "int1": 1
                },
                "isatty": {
                    "is_terminal": 1
                },
                "lVar13": {
                    "l_var": 1,
                    "length": 1,
                    "length2": 1,
                    "long1": 1,
                    "long_1": 1,
                    "long_value": 1,
                    "long_var": 10,
                    "long_var1": 3,
                    "long_var13": 3,
                    "temp_long": 2,
                    "temp_var4": 1,
                    "var4": 1
                },
                "lVar13_unnamed1": {
                    "long1": 1
                },
                "param_1": {
                    "format_string": 26,
                    "input_string": 1,
                    "message_format": 1,
                    "output_format": 2
                },
                "param_2": {
                    "address_pointer": 1,
                    "arg_list": 1,
                    "arg_pointer": 1,
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_params": 1,
                    "function_args": 1,
                    "input_params": 1,
                    "long_array": 1,
                    "long_pointer": 1,
                    "memory_pointers": 1,
                    "param_array": 3,
                    "pointer_arg": 1,
                    "pointer_array": 5,
                    "pointer_to_long": 1,
                    "pointer_to_param2": 1,
                    "ptr_array": 2,
                    "ptr_to_long": 1,
                    "ptr_to_param1": 1,
                    "str_ptr": 1,
                    "string_pointer": 1
                },
                "param_3": {
                    "class_name": 2,
                    "demangled_name": 2,
                    "demangled_name_pointer": 1,
                    "demangled_string": 3,
                    "format_arg": 1,
                    "mangled_name": 1,
                    "name": 2,
                    "name_address": 1,
                    "name_ptr": 1,
                    "output_string": 1,
                    "pointer_to_param3": 1,
                    "pointer_to_undefined8": 1,
                    "ptr_string": 1,
                    "ptr_to_param2": 1,
                    "ptr_to_undefined8": 1,
                    "string": 1,
                    "string_arg": 1,
                    "string_pointer": 4,
                    "string_to_print": 1,
                    "symbol": 1,
                    "type_name": 1,
                    "undefined8_pointer": 1
                },
                "param_4": {
                    "arg_list_size": 1,
                    "arg_meta_data": 1,
                    "arg_size": 1,
                    "base_address": 1,
                    "class_info": 1,
                    "context": 2,
                    "demangle_options": 1,
                    "flag": 2,
                    "input_value": 2,
                    "integer_param": 1,
                    "length": 4,
                    "long_value": 1,
                    "param": 2,
                    "param3": 1,
                    "param4": 2,
                    "param_4": 3,
                    "param_size": 1,
                    "parameter_4": 1,
                    "str_length": 1,
                    "symbol_type": 1
                },
                "pcVar6": {
                    "at_symbol": 1,
                    "at_symbol_pointer": 1,
                    "at_symbol_position": 1,
                    "char_pointer": 3,
                    "char_pointer1": 1,
                    "char_pointer_var": 1,
                    "char_pointer_var6": 1,
                    "char_ptr": 5,
                    "char_ptr1": 2,
                    "char_ptr_var1": 1,
                    "char_var1": 2,
                    "char_var6": 1,
                    "character_pointer": 1,
                    "pointer_2": 1,
                    "pointer_var2": 1,
                    "pointer_var6": 1,
                    "ptr2": 2,
                    "ptr_to_char": 1,
                    "temp_pointer2": 2,
                    "temp_ptr2": 1
                },
                "pcVar6_unnamed1": {
                    "ptr2": 1
                },
                "pcVar8": {
                    "char_pointer2": 4,
                    "char_pointer_var2": 1,
                    "char_pointer_var8": 1,
                    "char_ptr1": 1,
                    "char_ptr2": 4,
                    "char_ptr_var2": 1,
                    "char_var2": 2,
                    "char_var8": 1,
                    "character_pointer2": 1,
                    "pointer_4": 1,
                    "pointer_var4": 1,
                    "pointer_var8": 1,
                    "ptr4": 2,
                    "return_string": 1,
                    "string_pointer": 1,
                    "temp_pointer4": 1,
                    "temp_ptr4": 1
                },
                "pcVar8_unnamed1": {
                    "ptr4": 1
                },
                "printf": {
                    "print_string": 1
                },
                "puVar1": {
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_to_undefined8_var1": 1,
                    "pointer_var": 1,
                    "pointer_var1": 8,
                    "ptr": 2,
                    "ptr1": 7,
                    "ptr_to_undefined8_1": 1,
                    "ptr_var1": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 2,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "undefined8_pointer1": 1
                },
                "puVar11": {
                    "pointer_5": 1,
                    "pointer_to_undefined_var11": 1,
                    "pointer_to_var": 1,
                    "pointer_to_variable": 1,
                    "pointer_var11": 3,
                    "pointer_var3": 4,
                    "pointer_var5": 1,
                    "prefix": 1,
                    "ptr3": 3,
                    "ptr5": 1,
                    "ptr_to_str": 1,
                    "ptr_to_undefined_var": 1,
                    "ptr_var3": 1,
                    "second_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_pointer4": 1,
                    "temp_pointer5": 1,
                    "temp_ptr5": 1,
                    "undefined_pointer": 2,
                    "undefined_ptr": 2,
                    "var2": 1
                },
                "puVar11_unnamed1": {
                    "ptr5": 1
                },
                "puVar12": {
                    "current_pointer": 1,
                    "pointer": 1,
                    "pointer3": 1,
                    "pointer_6": 1,
                    "pointer_to_undefined8_var12": 1,
                    "pointer_var12": 3,
                    "pointer_var3": 1,
                    "pointer_var4": 4,
                    "pointer_var6": 1,
                    "ptr3": 2,
                    "ptr4": 1,
                    "ptr6": 1,
                    "ptr_result": 1,
                    "ptr_to_undefined8_4": 1,
                    "ptr_var4": 1,
                    "symbol_ptr": 1,
                    "temp_pointer5": 1,
                    "temp_pointer6": 1,
                    "temp_ptr3": 1,
                    "temp_ptr6": 1,
                    "type_name_or_result_pointer": 1,
                    "undefined8_pointer2": 1,
                    "undefined8_pointer4": 1,
                    "var3": 1
                },
                "puVar12_unnamed1": {
                    "ptr6": 1
                },
                "puVar1_unnamed1": {
                    "ptr1": 1
                },
                "puVar7": {
                    "dst_pointer": 1,
                    "output": 1,
                    "pointer2": 1,
                    "pointer_3": 1,
                    "pointer_to_undefined8_var7": 1,
                    "pointer_var2": 5,
                    "pointer_var3": 1,
                    "pointer_var7": 3,
                    "ptr2": 5,
                    "ptr3": 2,
                    "ptr_to_concatenated_string": 1,
                    "ptr_to_undefined8_2": 1,
                    "ptr_var2": 1,
                    "temp_pointer3": 2,
                    "temp_ptr2": 1,
                    "temp_ptr3": 1,
                    "undefined8_pointer": 1,
                    "undefined8_pointer2": 1
                },
                "puVar7_unnamed1": {
                    "ptr3": 1
                },
                "reconcat": {
                    "concatenate_strings": 1
                },
                "sVar13": {
                    "str_length2": 1
                },
                "sVar5": {
                    "length": 2,
                    "size": 9,
                    "size_of_string": 1,
                    "size_t_value": 1,
                    "size_value": 1,
                    "size_var": 6,
                    "size_var5": 4,
                    "str_len": 1,
                    "str_length": 2,
                    "string_size": 1,
                    "temp_size": 2
                },
                "sVar5_unnamed1": {
                    "size1": 1
                },
                "sprintf": {
                    "formatted_string": 1
                },
                "strchr": {
                    "find_character": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strlen": {
                    "string_length": 1
                },
                "strncpy": {
                    "copy_string": 1
                },
                "uVar10": {
                    "char_value": 1,
                    "extra_char": 1,
                    "temp_int3": 1,
                    "temp_u_int2": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "u_var": 1,
                    "u_var2": 2,
                    "ulong2": 1,
                    "ulong_var10": 2,
                    "ulong_var2": 8,
                    "undefined8_value": 1,
                    "undefined8_var": 4,
                    "undefined8_var1": 1,
                    "undefined8_var10": 1,
                    "undefined_var": 1,
                    "var1": 1
                },
                "uVar10_unnamed1": {
                    "ulong2": 1
                },
                "uVar14": {
                    "num_chars": 1,
                    "temp_u_int": 1,
                    "temp_u_int3": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "u_var3": 2,
                    "uint1": 1,
                    "uint_1": 1,
                    "uint_value": 1,
                    "uint_var": 10,
                    "uint_var1": 2,
                    "uint_var14": 3,
                    "var1": 1,
                    "var5": 1
                },
                "uVar14_unnamed1": {
                    "uint1": 1
                },
                "uVar9": {
                    "count": 2,
                    "num_bytes": 1,
                    "temp_int2": 1,
                    "temp_u_int1": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "u_var1": 2,
                    "ulong1": 1,
                    "ulong_value": 1,
                    "ulong_var": 9,
                    "ulong_var1": 6,
                    "ulong_var9": 3
                },
                "uVar9_unnamed1": {
                    "ulong1": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_00102739"
            ],
            "calling": [
                "FUN_001064b0",
                "FUN_00103729",
                "FUN_00103b49",
                "FUN_001043d0",
                "FUN_001035a2"
            ],
            "code": "\n\n\nvoid print_formatted_string_00104740(char *format_string,long *pointer_array,undefined8 *string_pointer,long length)\n\n{\n  undefined8 *pointer_var1;\n  byte byte1;\n  byte byte2;\n  int int_var;\n  size_t size;\n  char *char_ptr;\n  undefined8 *pointer_var2;\n  char *char_pointer2;\n  undefined8 *result;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  undefined *pointer_var3;\n  undefined8 *pointer_var4;\n  char *char_ptr2;\n  undefined8 *str_ptr2;\n  long long_var;\n  uint uint_var;\n  byte byte_var15;\n  char char_array [9];\n  \n  byte_var15 = 0;\n  if (string_pointer == (undefined8 *)0x0) {\n    string_pointer = *(undefined8 **)(*pointer_array + 0x10);\n    if (DAT_0010b234 == 0) {\n      FUN_00102739();\n      return;\n    }\nLAB_00104775:\n    pointer_var4 = string_pointer;\n    if (DAT_0010b814 == 0) {\n      char_ptr = (char *)0x0;\n      if (DAT_0010b7e0 == 0) {\nLAB_00104794:\n        pointer_var4 = string_pointer;\n        result = (undefined8 *)0x0;\n      }\n      else {\n        result = (undefined8 *)0x0;\n        if (string_pointer != (undefined8 *)0x0) goto LAB_0010269d;\n        pointer_var4 = (undefined8 *)0x1073a6;\n      }\n    }\n    else {\n      char_ptr = (char *)0x0;\nLAB_0010482b:\n      if ((*(char *)pointer_var4 == '\\0') ||\n         (string_pointer = (undefined8 *)bfd_demangle(length,pointer_var4,DAT_0010b248),\n         string_pointer == (undefined8 *)0x0)) {\n        string_pointer = pointer_var4;\n        if (DAT_0010b7e0 != 0) goto LAB_00102698;\n        result = (undefined8 *)0x0;\n      }\n      else {\n        pointer_var4 = string_pointer;\n        result = string_pointer;\n        if (DAT_0010b7e0 != 0) goto LAB_0010269d;\n      }\n    }\n  }\n  else {\n    pointer_var4 = string_pointer;\n    if (DAT_0010b234 == 0) {\n      if (*(int *)(*(long *)(length + 8) + 8) != 5) goto LAB_00104775;\n      char_ptr = strchr((char *)string_pointer,0x40);\n      if (char_ptr == (char *)0x0) {\n        if (DAT_0010b814 == 0) {\n          if (DAT_0010b7e0 == 0) {\n            if (pointer_array == (long *)0x0) {\n              result = (undefined8 *)0x0;\n              printf(format_string,string_pointer);\n            }\n            else {\n              if (pointer_array[2] != 0) {\n                FUN_001047d0();\n                return;\n              }\n              result = (undefined8 *)0x0;\n              printf(format_string,string_pointer);\n            }\n            goto LAB_001047ba;\n          }\n          goto LAB_00102698;\n        }\n      }\n      else {\n        *char_ptr = '\\0';\n        if (DAT_0010b814 == 0) {\n          if (DAT_0010b7e0 == 0) goto LAB_00104794;\n          result = (undefined8 *)0x0;\n          goto LAB_0010269d;\n        }\n      }\n      goto LAB_0010482b;\n    }\n    char_ptr = (char *)0x0;\n    if (DAT_0010b814 != 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 == 0) goto LAB_00104794;\nLAB_00102698:\n    pointer_var4 = string_pointer;\n    result = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      byte1 = *(byte *)string_pointer;\n      string_pointer = (undefined8 *)((long)string_pointer + 1);\n      if (byte1 == 0) goto joined_r0x00104864;\n    } while ((((&sch_istable)[(ulong)byte1 * 2] & 2) == 0) && (byte1 < 0xc0));\n    size = strlen((char *)pointer_var4);\n    str_ptr2 = DAT_0010b790;\n    if (_DAT_0010b798 < size * 9) {\n      free(DAT_0010b790);\n      size = strlen((char *)pointer_var4);\n      _DAT_0010b798 = size * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      str_ptr2 = DAT_0010b790;\n    }\n    while( true ) {\n      pointer_var2 = DAT_0010b790;\n      byte1 = *(byte *)pointer_var4;\n      pointer_var1 = (undefined8 *)((long)pointer_var4 + 1);\n      if (byte1 == 0) break;\n      if (((&sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)str_ptr2 = byte1;\n          str_ptr2 = (undefined8 *)((long)str_ptr2 + 1);\n          pointer_var4 = pointer_var1;\n        }\n        else {\n          byte2 = *(byte *)((long)pointer_var4 + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            pointer_var2 = str_ptr2;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                int_var = isatty(1);\n                if (int_var == 0) {\n                  byte2 = *(byte *)((long)pointer_var4 + 1);\n                }\n                else {\n                  *(undefined *)(str_ptr2 + 1) = 0;\n                  *str_ptr2 = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)pointer_var4 + 1);\n                  pointer_var2 = str_ptr2 + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)pointer_var2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)pointer_var4 >> 2 & 7),\n                        (ulong)((*(byte *)pointer_var4 & 3) << 6 | byte2 & 0x3f));\n                pointer_var2 = (undefined8 *)((long)pointer_var2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)pointer_var4 + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)pointer_var2 = *(undefined *)pointer_var4;\n                    pointer_var4 = (undefined8 *)((long)pointer_var4 + (ulong)byte_var15 * -2 + 1);\n                    pointer_var2 = (undefined8 *)((long)pointer_var2 + (ulong)byte_var15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  sprintf((char *)str_ptr2,\"%c\",ulong_var2);\n                  *(undefined *)((long)str_ptr2 + 3) = 0;\n                  pointer_var2 = (undefined8 *)(long_var + (long)pointer_var4);\n                  *(undefined2 *)((long)str_ptr2 + 1) = 0x7830;\n                  char_pointer2 = (char *)((long)str_ptr2 + 3);\n                  do {\n                    char_ptr2 = char_pointer2;\n                    byte1 = *(byte *)pointer_var4;\n                    pointer_var4 = (undefined8 *)((long)pointer_var4 + 1);\n                    sprintf(char_ptr2,\"%02x\",(ulong)byte1);\n                    char_pointer2 = char_ptr2 + 2;\n                  } while (pointer_var4 != pointer_var2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(char_ptr2 + 2,\"%c\",ulong_var2);\n                  pointer_var2 = (undefined8 *)(char_ptr2 + 3);\n                  break;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)pointer_var4 + 2);\n                  }\n                  else {\n                    *(undefined *)(str_ptr2 + 1) = 0;\n                    *str_ptr2 = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)pointer_var4 + 2);\n                    pointer_var2 = str_ptr2 + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)pointer_var2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)pointer_var4 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)pointer_var4 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)pointer_var4 + 1) & 3) << 6 | byte2 & 0x3f));\n                  pointer_var2 = (undefined8 *)((long)pointer_var2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (int_var = isatty(1), int_var != 0)) {\n                    *(undefined4 *)pointer_var2 = 0x6d305b1b;\n                    pointer_var2 = (undefined8 *)((long)pointer_var2 + 4);\n                    *(undefined *)pointer_var2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                byte2 = *(byte *)((long)pointer_var4 + 3);\n                if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)pointer_var4 + 3);\n                  }\n                  else {\n                    *(undefined *)(str_ptr2 + 1) = 0;\n                    *str_ptr2 = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)pointer_var4 + 3);\n                    pointer_var2 = str_ptr2 + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  int_var = sprintf((char *)pointer_var2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)pointer_var4 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)pointer_var4 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)pointer_var4 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)pointer_var4 + 2) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)pointer_var4 + 2) & 3) << 6 | byte2 & 0x3f));\n                  pointer_var2 = (undefined8 *)((long)pointer_var2 + (long)int_var);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)pointer_var2 - (int)str_ptr2);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)str_ptr2 = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          str_ptr2 = (undefined8 *)((long)str_ptr2 + ulong_var);\n          pointer_var4 = (undefined8 *)((long)pointer_var1 + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)str_ptr2 = 0x5e;\n        *(byte *)((long)str_ptr2 + 1) = byte1 + 0x40;\n        str_ptr2 = (undefined8 *)((long)str_ptr2 + 2);\n        pointer_var4 = pointer_var1;\n      }\n    }\n    *(undefined *)str_ptr2 = 0;\n    pointer_var4 = pointer_var2;\n  }\njoined_r0x00104864:\n  if ((((pointer_array != (long *)0x0) && (pointer_array[2] != 0)) && (DAT_0010b234 != 0)) &&\n     ((char_pointer2 = (char *)(**(code **)(*(long *)(length + 8) + 0x220))\n                                  (length,pointer_array[2],0,char_array), char_pointer2 != (char *)0x0 &&\n      (*char_pointer2 != '\\0')))) {\n    pointer_var3 = &DAT_001071e0;\n    if ((char_array[0] == '\\0') && (*(long *)(pointer_array[2] + 0x20) != 0x10c2a8)) {\n      pointer_var3 = &DAT_001071df;\n    }\n    result = (undefined8 *)reconcat(result,pointer_var4,pointer_var3,char_pointer2,0);\n    pointer_var4 = result;\n  }\n  printf(format_string,pointer_var4);\n  if (char_ptr != (char *)0x0) {\n    *char_ptr = '@';\n  }\nLAB_001047ba:\n  free(result);\n  return;\n}\n\n",
            "current_name": "print_formatted_string_00104740",
            "entrypoint": "0x00104740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104740": "print_formatted_string_00104740",
                "__ptr": "result",
                "__s": "char_ptr2",
                "__s_00": "str_ptr2",
                "_sch_istable": "sch_istable",
                "acStack_39": "char_array",
                "bVar15": "byte_var15",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "free": "deallocate_memory",
                "iVar4": "int_var",
                "isatty": "is_terminal",
                "lVar13": "long_var",
                "param_1": "format_string",
                "param_2": "pointer_array",
                "param_3": "string_pointer",
                "param_4": "length",
                "pcVar6": "char_ptr",
                "pcVar8": "char_pointer2",
                "printf": "print_string",
                "puVar1": "pointer_var1",
                "puVar11": "pointer_var3",
                "puVar12": "pointer_var4",
                "puVar7": "pointer_var2",
                "reconcat": "concatenate_strings",
                "sVar5": "size",
                "sprintf": "formatted_string",
                "strchr": "find_character",
                "strlen": "string_length",
                "uVar10": "ulong_var2",
                "uVar14": "uint_var",
                "uVar9": "ulong_var",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001047d0": {
            "additional_data": {
                "DAT_0010b234": {
                    "check_flag": 1,
                    "condition": 1
                },
                "FUN_001047d0": {
                    "print_and_free": 19,
                    "print_and_free_memory": 4,
                    "print_formatted_output": 1,
                    "print_formatted_string": 2,
                    "print_message": 1,
                    "print_reconcat": 1,
                    "print_reconcatenated_string": 2,
                    "print_result": 1
                },
                "free": {
                    "deallocate": 1
                },
                "pcVar1": {
                    "function_return_value": 1,
                    "output": 2,
                    "recon_result": 1,
                    "reconcat_output": 1,
                    "reconcat_result": 1,
                    "reconcat_result_check": 1,
                    "reconcat_result_ptr": 1,
                    "result": 3,
                    "result_string": 1,
                    "str_result": 1,
                    "value_ptr": 1
                },
                "printf": {
                    "print": 1
                },
                "reconcat": {
                    "reconcatenate": 1
                },
                "unaff_R12": {
                    "flag": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 9,
                    "flags_ptr": 1,
                    "is_not_null": 1,
                    "memory_flag": 1,
                    "null_check": 1,
                    "null_check_ptr": 1,
                    "output_char": 1,
                    "output_character": 1,
                    "output_flag": 4,
                    "pointer_to_flag": 1,
                    "ptr_flag": 1,
                    "ptr_to_output": 1,
                    "status": 2,
                    "status_flag": 1,
                    "status_ptr": 2,
                    "write_permission": 1
                },
                "unaff_R13": {
                    "concat_result_ptr": 1,
                    "concatenated_str": 1,
                    "concatenated_str_ptr": 2,
                    "concatenated_string": 2,
                    "concatenated_string_copy": 1,
                    "formatted_output": 2,
                    "formatted_string": 1,
                    "message": 2,
                    "output_ptr": 1,
                    "recombined_string_copy": 1,
                    "reconcat_input": 1,
                    "reconcat_output": 1,
                    "reconcat_ptr": 2,
                    "reconcat_result": 3,
                    "reconcat_result_backup": 1,
                    "reconcat_result_copy": 2,
                    "reconcat_result_ptr": 1,
                    "reconcat_result_temp": 1,
                    "reconcatenated_string": 3,
                    "reconcatenated_string_copy": 1,
                    "reconstructed_ptr_copy": 1
                },
                "unaff_R14": {
                    "format": 1,
                    "format_str": 4,
                    "format_string": 24,
                    "print_format": 1,
                    "printf_format": 1
                },
                "unaff_R15": {
                    "arg_pointer": 1,
                    "argument": 1,
                    "argument_ptr": 1,
                    "base_address": 2,
                    "data_ptr": 1,
                    "function_address": 2,
                    "function_argument": 1,
                    "function_context": 3,
                    "function_pointer": 2,
                    "function_pointer_address": 1,
                    "input_ptr": 2,
                    "object_address": 1,
                    "offset": 1,
                    "param_1": 1,
                    "param_ptr": 1,
                    "parameter1": 1,
                    "parameter_data": 1,
                    "pointer": 1,
                    "pointer_to_function": 1,
                    "ptr": 1,
                    "ptr_to_something": 1,
                    "reconcat_function_address": 1,
                    "reconcat_ptr": 1,
                    "source_ptr": 1,
                    "struct_ptr": 1
                },
                "unaff_RBX": {
                    "concatenated_string": 7,
                    "message": 1,
                    "recombined_string": 1,
                    "reconcat_ptr": 1,
                    "reconcat_result": 10,
                    "reconcat_result_ptr": 1,
                    "reconcatenated_string": 2,
                    "reconstructed_ptr": 1,
                    "result": 5,
                    "result_ptr": 2
                }
            },
            "called": [
                "printf",
                "reconcat",
                "free"
            ],
            "calling": [
                "FUN_0010268b",
                "FUN_00102739"
            ],
            "code": "\nvoid print_and_free_memory_001047d0(void)\n\n{\n  char *result;\n  void *reconcat_result;\n  undefined *flag_ptr;\n  void *reconcat_result;\n  char *format_string;\n  long function_context;\n  \n  if (((DAT_0010b234 != 0) &&\n      (result = (char *)(**(code **)(*(long *)(function_context + 8) + 0x220))(), result != (char *)0x0))\n     && (*result != '\\0')) {\n    reconcat_result = (void *)reconcatenate();\n    reconcat_result = reconcat_result;\n  }\n  printf(format_string,reconcat_result);\n  if (flag_ptr != (undefined *)0x0) {\n    *flag_ptr = 0x40;\n  }\n  deallocate(reconcat_result);\n  return;\n}\n\n",
            "current_name": "print_and_free_memory_001047d0",
            "entrypoint": "0x001047d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001047d0": "print_and_free_memory_001047d0",
                "free": "deallocate",
                "pcVar1": "result",
                "printf": "print",
                "reconcat": "reconcatenate",
                "unaff_R12": "flag_ptr",
                "unaff_R13": "reconcat_result",
                "unaff_R14": "format_string",
                "unaff_R15": "function_context",
                "unaff_RBX": "reconcat_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001048e0": {
            "additional_data": {
                "DAT_0010b230": {
                    "": 1
                },
                "DAT_0010b768": {
                    "": 1
                },
                "DAT_0010b770": {
                    "": 1
                },
                "DAT_0010b778": {
                    "": 1
                },
                "DAT_0010b780": {
                    "": 1
                },
                "DAT_0010b788": {
                    "": 1
                },
                "DAT_0010b7d8": {
                    "": 1
                },
                "DAT_0010b7e4": {
                    "": 1
                },
                "DAT_0010b7e8": {
                    "": 1
                },
                "DAT_0010b7f0": {
                    "": 1
                },
                "DAT_0010b7f4": {
                    "": 1
                },
                "DAT_0010b7f8": {
                    "": 1
                },
                "DAT_0010b7fc": {
                    "": 1
                },
                "DAT_0010b800": {
                    "": 1
                },
                "DAT_0010b808": {
                    "": 1
                },
                "DAT_0010b80c": {
                    "": 1
                },
                "DAT_0010b810": {
                    "": 1
                },
                "DAT_0010b81c": {
                    "": 1
                },
                "FUN_001048e0": {
                    "process_binary_function": 2
                },
                "PTR_FUN_0010acc0": {
                    "comparison_function": 1
                },
                "_DAT_0010b810": {
                    "": 1
                },
                "bVar1": {
                    "bit_var1": 1,
                    "byte1": 1,
                    "byte_value": 1,
                    "byte_var": 11,
                    "byte_var1": 9,
                    "byte_variable": 1,
                    "byte_variable_1": 2,
                    "flag": 2,
                    "temp_byte": 1
                },
                "bVar19": {
                    "bit_var2": 1,
                    "bool_value": 1,
                    "bool_var": 14,
                    "bool_var1": 1,
                    "bool_var19": 5,
                    "bool_variable": 2,
                    "boolean": 1,
                    "boolean_var": 1,
                    "boolean_var2": 1,
                    "boolean_variable": 1,
                    "temp_bool": 1
                },
                "bVar20": {
                    "bit_var3": 1,
                    "bool_var2": 1,
                    "boolean_var": 1,
                    "boolean_var2": 1,
                    "byte_value2": 1,
                    "byte_var": 3,
                    "byte_var2": 6,
                    "byte_var20": 8,
                    "byte_var_2": 3,
                    "byte_var_20": 1,
                    "byte_variable_2": 2,
                    "byte_variable_20": 1,
                    "temp_byte_var": 1
                },
                "boolVar19": {
                    "": 1
                },
                "byteVar1": {
                    "": 1
                },
                "byteVar20": {
                    "": 1
                },
                "cVar3": {
                    "char1": 1,
                    "char_value": 1,
                    "char_var": 16,
                    "char_var3": 5,
                    "char_variable": 3,
                    "character": 1,
                    "character_var": 1,
                    "temp_char": 1
                },
                "codePtr2": {
                    "": 1
                },
                "iVar4": {
                    "int_var": 17,
                    "int_var4": 5,
                    "int_variable": 2,
                    "integer": 1,
                    "integer_var": 1,
                    "integer_variable": 1,
                    "temp_int": 1
                },
                "lVar10": {
                    "l_var10": 1,
                    "long_var10": 7,
                    "long_var2": 13,
                    "long_var_10": 1,
                    "long_var_2": 3,
                    "long_variable2": 1,
                    "long_variable_10": 1,
                    "long_variable_2": 2,
                    "temp_u_long_long": 1
                },
                "lVar7": {
                    "long_var": 18,
                    "long_var1": 2,
                    "long_var7": 5,
                    "long_variable": 2,
                    "long_variable_1": 2,
                    "temp_long": 1
                },
                "local_40": {
                    "local_40": 1,
                    "local_array": 9,
                    "local_array_var40": 1,
                    "local_binary_data": 1,
                    "local_double_pointer_array": 1,
                    "local_double_ptr40": 1,
                    "local_pointer_array40": 1,
                    "local_pointer_to_pointer_to_ulong_array": 1,
                    "local_pointer_var40": 1,
                    "local_ptr_var_40": 1,
                    "local_ptr_var_arr": 1,
                    "local_var3": 1,
                    "local_var40": 1,
                    "local_variable_40": 2,
                    "pointer_pointer_var15": 1,
                    "ptr_list": 1,
                    "sorted_params_array": 1,
                    "temp_array": 1,
                    "temp_u_long_ptr_array": 1,
                    "ulong_double_pointer_array": 1
                },
                "local_48": {
                    "local_48": 1,
                    "local_pointer_var48": 2,
                    "local_ptr_var": 1,
                    "local_u_long_ptr48": 1,
                    "local_ulong_variable": 1,
                    "local_var2": 7,
                    "local_var48": 5,
                    "local_var_2": 1,
                    "local_var_48": 1,
                    "local_variable2": 1,
                    "local_variable_48": 2,
                    "pointer_var": 1,
                    "temp_u_long_ptr16": 1,
                    "ulong_pointer_variable": 1,
                    "ulong_var": 1,
                    "ulong_var2": 2,
                    "var48": 1
                },
                "local_4c": {
                    "local_4c": 1,
                    "local_int4_c": 1,
                    "local_int_var": 1,
                    "local_int_var4c": 1,
                    "local_u_int_var4c": 1,
                    "local_uint_variable_1": 1,
                    "local_var1": 7,
                    "local_var4c": 5,
                    "local_var_1": 1,
                    "local_var_4c": 1,
                    "local_variable1": 1,
                    "local_variable_4c": 2,
                    "temp_u_int2": 1,
                    "uint_var2": 2,
                    "uint_var3": 1,
                    "uint_var_2": 1,
                    "uint_variable_2": 1,
                    "var4c": 1
                },
                "param_1": {
                    "binary": 1,
                    "binary_data": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_parameter_1": 1,
                    "input_params": 9,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "inputs": 1,
                    "param1": 3,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter1": 2,
                    "parameter_1": 2,
                    "pointer_array": 1,
                    "pointer_param_1": 1,
                    "ptr_param_1": 1
                },
                "param_2": {
                    "arg1": 1,
                    "input_parameter_2": 1,
                    "param1": 1,
                    "param2": 16,
                    "param_2": 8,
                    "parameter2": 2,
                    "parameter_2": 2
                },
                "param_3": {
                    "arg2": 1,
                    "input_parameter_3": 1,
                    "param2": 1,
                    "param3": 16,
                    "param_3": 8,
                    "parameter3": 2,
                    "parameter_3": 2
                },
                "param_4": {
                    "arg3": 1,
                    "input_parameter_4": 1,
                    "param3": 1,
                    "param4": 16,
                    "param_4": 8,
                    "parameter4": 2,
                    "parameter_4": 2
                },
                "param_5": {
                    "additional_params1": 1,
                    "array_1": 1,
                    "input_array_1": 1,
                    "input_parameter_5": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_params": 5,
                    "output_params1": 1,
                    "output_pointer1": 1,
                    "output_ptr": 1,
                    "outputs": 1,
                    "param5": 4,
                    "param_5": 1,
                    "param_array2": 1,
                    "param_list2": 1,
                    "parameter5": 2,
                    "parameter_5": 2,
                    "pointer_param_5": 1,
                    "ppu_var4": 1,
                    "ptr_param_5": 1,
                    "result1": 1,
                    "sorted_params": 1
                },
                "param_6": {
                    "additional_outputs": 1,
                    "additional_params": 2,
                    "additional_params2": 1,
                    "another_output_params": 1,
                    "array_2": 1,
                    "input_array_2": 1,
                    "input_parameter_6": 1,
                    "output_params2": 1,
                    "output_pointer2": 1,
                    "param6": 4,
                    "param_6": 1,
                    "param_array3": 1,
                    "param_list3": 1,
                    "parameter6": 2,
                    "parameter_6": 2,
                    "pointer_param_6": 1,
                    "ppu_var5": 1,
                    "ptr_param_6": 1,
                    "result2": 1,
                    "temp_array": 1,
                    "temp_data": 1,
                    "temp_params": 3,
                    "temp_ptr": 1
                },
                "pcVar2": {
                    "code_pointer": 1,
                    "code_ptr2": 1,
                    "code_var": 4,
                    "code_var2": 3,
                    "fn_ptr": 1,
                    "function_pointer": 9,
                    "function_ptr": 6,
                    "function_var": 1,
                    "pointer_to_code": 2,
                    "temp_code_ptr": 1
                },
                "ppBinaryVar12": {
                    "": 1
                },
                "ppBinaryVar13": {
                    "": 1
                },
                "ppBinaryVar14": {
                    "": 1
                },
                "ppBinaryVar15": {
                    "": 1
                },
                "ppBinaryVar16": {
                    "": 1
                },
                "ppBinaryVar17": {
                    "": 1
                },
                "ppBinaryVar18": {
                    "": 1
                },
                "ppBinaryVar8": {
                    "": 1
                },
                "ppBinaryVar9": {
                    "": 1
                },
                "ppuStack_78": {
                    "array_pointer14": 1,
                    "double_pointer_stack_var78": 1,
                    "double_pointer_var10": 1,
                    "double_ptr_14": 1,
                    "double_ptr_stack78": 1,
                    "pointer_pointer_stack78": 1,
                    "pointer_pointer_var10": 2,
                    "pointer_pointer_var14": 2,
                    "pointer_pointer_var_stack_78": 1,
                    "pointer_stack": 1,
                    "pointer_stack78": 1,
                    "pointer_to_pointer_to_ulong_10": 1,
                    "pointer_to_pointer_var_stack78": 1,
                    "pointer_to_pointer_variable_stack": 1,
                    "pointer_to_stack": 1,
                    "pointer_to_stack_variable": 1,
                    "pp_stack_var78": 1,
                    "ppu_stack": 1,
                    "ppu_stack_78": 1,
                    "processed_array_10": 1,
                    "ptr_ptr_var10": 1,
                    "ptr_ptr_var14": 1,
                    "ptr_ptr_var_78": 1,
                    "stack_pointer_var78": 1,
                    "temp_ptr_ptr_var3": 1,
                    "temp_u_long_ptr15": 1,
                    "ulong_double_pointer_variable_14": 1
                },
                "ppuVar12": {
                    "array_pointer4": 1,
                    "double_pointer_var12": 1,
                    "double_pointer_var3": 1,
                    "double_ptr_4": 1,
                    "double_ptr_var12": 1,
                    "local_pointer_var12": 1,
                    "pointer_pointer_var12": 1,
                    "pointer_pointer_var3": 4,
                    "pointer_pointer_var4": 1,
                    "pointer_pointer_var_12": 1,
                    "pointer_to_pointer3": 2,
                    "pointer_to_pointer_to_ulong_3": 1,
                    "pointer_to_pointer_var12": 1,
                    "pointer_to_pointer_variable_12": 1,
                    "pointer_var1": 1,
                    "pp_binary_var12": 1,
                    "ppu_var12": 1,
                    "ppu_var3": 1,
                    "processed_array_3": 1,
                    "ptr_ptr_var3": 1,
                    "ptr_ptr_var4": 1,
                    "ptr_ptr_var_12": 1,
                    "temp_u_long_ptr5": 1,
                    "ulong_double_pointer_variable_4": 1
                },
                "ppuVar13": {
                    "array_pointer5": 1,
                    "double_pointer_var13": 1,
                    "double_pointer_var4": 1,
                    "double_ptr_5": 1,
                    "double_ptr_var13": 1,
                    "local_pointer_var13": 1,
                    "pointer_pointer_var13": 1,
                    "pointer_pointer_var4": 4,
                    "pointer_pointer_var5": 1,
                    "pointer_pointer_var_13": 1,
                    "pointer_to_pointer4": 2,
                    "pointer_to_pointer_to_ulong_4": 1,
                    "pointer_to_pointer_var13": 1,
                    "pointer_to_pointer_variable_13": 1,
                    "pointer_var2": 1,
                    "pp_binary_var13": 1,
                    "ppu_var13": 1,
                    "ppu_var4": 1,
                    "processed_array_4": 1,
                    "ptr_ptr_var4": 1,
                    "ptr_ptr_var5": 1,
                    "ptr_ptr_var_13": 1,
                    "temp_u_long_ptr6": 1,
                    "ulong_double_pointer_variable_5": 1
                },
                "ppuVar14": {
                    "array_pointer7": 1,
                    "double_pointer_var14": 1,
                    "double_pointer_var5": 1,
                    "double_ptr_7": 1,
                    "double_ptr_var14": 1,
                    "local_pointer_var14": 1,
                    "pointer_pointer_var14": 1,
                    "pointer_pointer_var5": 4,
                    "pointer_pointer_var7": 1,
                    "pointer_pointer_var_14": 1,
                    "pointer_to_pointer5": 2,
                    "pointer_to_pointer_to_ulong_5": 1,
                    "pointer_to_pointer_var14": 1,
                    "pointer_to_pointer_variable_14": 1,
                    "pointer_var3": 1,
                    "pp_binary_var14": 1,
                    "ppu_var14": 1,
                    "ppu_var5": 1,
                    "processed_array_5": 1,
                    "ptr_ptr_var5": 1,
                    "ptr_ptr_var7": 1,
                    "ptr_ptr_var_14": 1,
                    "temp_u_long_ptr8": 1,
                    "ulong_double_pointer_variable_7": 1
                },
                "ppuVar15": {
                    "array_pointer8": 1,
                    "double_pointer_var15": 1,
                    "double_pointer_var6": 1,
                    "double_ptr_8": 1,
                    "double_ptr_var15": 1,
                    "local_pointer_var15": 1,
                    "pointer_pointer_var15": 1,
                    "pointer_pointer_var6": 4,
                    "pointer_pointer_var8": 1,
                    "pointer_pointer_var_15": 1,
                    "pointer_to_pointer6": 2,
                    "pointer_to_pointer_to_ulong_6": 1,
                    "pointer_to_pointer_var15": 1,
                    "pointer_to_pointer_variable_15": 1,
                    "pointer_var4": 1,
                    "pp_binary_var15": 1,
                    "ppu_var15": 1,
                    "ppu_var6": 1,
                    "processed_array_6": 1,
                    "ptr_ptr_var6": 1,
                    "ptr_ptr_var8": 1,
                    "ptr_ptr_var_15": 1,
                    "temp_u_long_ptr9": 1,
                    "ulong_double_pointer_variable_8": 1
                },
                "ppuVar16": {
                    "array_pointer9": 1,
                    "double_pointer_var16": 1,
                    "double_pointer_var7": 1,
                    "double_ptr_9": 1,
                    "double_ptr_var16": 1,
                    "local_pointer_var16": 1,
                    "pointer_pointer_var16": 1,
                    "pointer_pointer_var7": 4,
                    "pointer_pointer_var9": 1,
                    "pointer_pointer_var_16": 1,
                    "pointer_to_pointer7": 2,
                    "pointer_to_pointer_to_ulong_7": 1,
                    "pointer_to_pointer_var16": 1,
                    "pointer_to_pointer_variable_16": 1,
                    "pointer_var5": 1,
                    "pp_binary_var16": 1,
                    "ppu_var16": 1,
                    "ppu_var7": 1,
                    "processed_array_7": 1,
                    "ptr_ptr_var7": 1,
                    "ptr_ptr_var9": 1,
                    "ptr_ptr_var_16": 1,
                    "temp_u_long_ptr10": 1,
                    "ulong_double_pointer_variable_9": 1
                },
                "ppuVar17": {
                    "array_pointer10": 1,
                    "double_pointer_var17": 1,
                    "double_pointer_var8": 1,
                    "double_ptr_10": 1,
                    "double_ptr_var17": 1,
                    "local_pointer_var17": 1,
                    "pointer_pointer_var10": 1,
                    "pointer_pointer_var17": 1,
                    "pointer_pointer_var8": 4,
                    "pointer_pointer_var_17": 1,
                    "pointer_to_pointer8": 2,
                    "pointer_to_pointer_to_ulong_8": 1,
                    "pointer_to_pointer_var17": 1,
                    "pointer_to_pointer_variable_17": 1,
                    "pointer_var6": 1,
                    "pp_binary_var17": 1,
                    "ppu_var17": 1,
                    "ppu_var8": 1,
                    "processed_array_8": 1,
                    "ptr_ptr_var10": 1,
                    "ptr_ptr_var8": 1,
                    "ptr_ptr_var_17": 1,
                    "temp_u_long_ptr11": 1,
                    "ulong_double_pointer_variable_10": 1
                },
                "ppuVar18": {
                    "array_pointer11": 1,
                    "double_pointer_var18": 1,
                    "double_pointer_var9": 1,
                    "double_ptr_11": 1,
                    "double_ptr_var18": 1,
                    "local_pointer_var18": 1,
                    "pointer_pointer_var11": 1,
                    "pointer_pointer_var18": 1,
                    "pointer_pointer_var9": 4,
                    "pointer_pointer_var_18": 1,
                    "pointer_to_pointer9": 2,
                    "pointer_to_pointer_to_ulong_9": 1,
                    "pointer_to_pointer_var18": 1,
                    "pointer_to_pointer_variable_18": 1,
                    "pointer_var7": 1,
                    "pp_binary_var18": 1,
                    "ppu_var18": 1,
                    "ppu_var9": 1,
                    "processed_array_9": 1,
                    "ptr_ptr_var11": 1,
                    "ptr_ptr_var9": 1,
                    "ptr_ptr_var_18": 1,
                    "temp_u_long_ptr12": 1,
                    "ulong_double_pointer_variable_11": 1
                },
                "ppuVar8": {
                    "array_pointer1": 1,
                    "double_pointer_var1": 1,
                    "double_pointer_var8": 1,
                    "double_ptr_1": 1,
                    "double_ptr_var8": 1,
                    "input_pointer1": 1,
                    "local_pointer_var8": 1,
                    "pointer_pointer1": 1,
                    "pointer_pointer_var": 1,
                    "pointer_pointer_var1": 4,
                    "pointer_pointer_var8": 1,
                    "pointer_pointer_var_8": 1,
                    "pointer_to_pointer1": 2,
                    "pointer_to_pointer_to_ulong_1": 1,
                    "pointer_to_pointer_var8": 1,
                    "pointer_to_pointer_variable_8": 1,
                    "pp_binary_var8": 1,
                    "ppu_var1": 1,
                    "ppu_var8": 1,
                    "processed_array_1": 1,
                    "ptr_ptr_param_8": 1,
                    "ptr_ptr_var1": 2,
                    "temp_ptr_ptr_var1": 1,
                    "temp_u_long_ptr1": 1,
                    "ulong_double_pointer_variable_1": 1
                },
                "ppuVar9": {
                    "array_pointer2": 1,
                    "double_pointer_var2": 1,
                    "double_pointer_var9": 1,
                    "double_ptr_2": 1,
                    "double_ptr_var9": 1,
                    "input_pointer2": 1,
                    "local_pointer_var9": 1,
                    "pointer_pointer2": 1,
                    "pointer_pointer_var2": 5,
                    "pointer_pointer_var9": 1,
                    "pointer_pointer_var_9": 1,
                    "pointer_to_pointer2": 2,
                    "pointer_to_pointer_to_ulong_2": 1,
                    "pointer_to_pointer_var9": 1,
                    "pointer_to_pointer_variable_9": 1,
                    "pp_binary_var9": 1,
                    "ppu_var2": 1,
                    "ppu_var9": 1,
                    "processed_array_2": 1,
                    "ptr_ptr_param_9": 1,
                    "ptr_ptr_var2": 2,
                    "temp_ptr_ptr_var2": 1,
                    "temp_u_long_ptr2": 1,
                    "ulong_double_pointer_variable_2": 1
                },
                "puVar11": {
                    "p_binary_var11": 1,
                    "pointer_to_ulong": 1,
                    "pointer_var": 4,
                    "pointer_var1": 4,
                    "pointer_var11": 5,
                    "pointer_var_11": 1,
                    "pointer_variable": 1,
                    "pointer_variable_11": 1,
                    "processed_pointer": 1,
                    "ptr_var": 3,
                    "ptr_var_11": 1,
                    "pu_var1": 1,
                    "pu_var11": 1,
                    "temp_u_long_ptr3": 1,
                    "ulong_ptr": 1,
                    "ulong_ptr_var11": 1,
                    "ulong_var": 1,
                    "ulong_variable": 1
                },
                "uVar5": {
                    "temp_u_int": 1,
                    "uint_var": 18,
                    "uint_var5": 5,
                    "uint_variable": 2,
                    "unsigned_var": 1,
                    "unsigned_var1": 1,
                    "unsigned_variable": 2
                },
                "uVar6": {
                    "param_string": 1,
                    "result_variable": 1,
                    "temp_u_long": 1,
                    "u_var6": 2,
                    "uint64_var": 1,
                    "uint_var2": 1,
                    "uint_var6": 1,
                    "ulong_var": 7,
                    "ulong_var6": 2,
                    "undefined8_var": 2,
                    "undefined8_variable": 2,
                    "undefined_var": 3,
                    "unint64_var": 1,
                    "unsigned_var2": 2,
                    "unsigned_variable2": 1,
                    "unused_var": 1,
                    "var6": 1
                },
                "unaff_R14": {
                    "array_pointer12": 1,
                    "double_ptr_12": 1,
                    "output_pointer3": 1,
                    "pointer_pointer_var12": 2,
                    "pointer_pointer_var_r14": 1,
                    "pointer_var4": 2,
                    "ptr_ptr_var12": 1,
                    "ptr_var_r14": 1,
                    "reg_r14": 1,
                    "temp_u_long_ptr13": 1,
                    "ulong_double_pointer_variable_12": 1,
                    "unaff_r14": 4,
                    "unaffected_pointer_r14": 2,
                    "unaffected_r14": 5,
                    "unaffected_r14_ptr": 1,
                    "unaffected_register_r14": 1
                },
                "unaff_R15": {
                    "array_pointer13": 1,
                    "double_ptr_13": 1,
                    "output_pointer4": 1,
                    "pointer_pointer_var13": 2,
                    "pointer_pointer_var_r15": 1,
                    "pointer_var5": 2,
                    "ptr_ptr_var13": 1,
                    "ptr_var_r15": 1,
                    "reg_r15": 1,
                    "temp_u_long_ptr14": 1,
                    "ulong_double_pointer_variable_13": 1,
                    "unaff_r15": 4,
                    "unaffected_pointer_r15": 2,
                    "unaffected_r15": 5,
                    "unaffected_r15_ptr": 1,
                    "unaffected_register_r15": 1
                },
                "unaff_RBP": {
                    "array_pointer6": 1,
                    "double_ptr_6": 1,
                    "output_pointer2": 1,
                    "pointer_pointer_var11": 1,
                    "pointer_pointer_var6": 1,
                    "pointer_pointer_var_rbp": 1,
                    "pointer_var3": 2,
                    "ptr_ptr_var6": 1,
                    "ptr_var_rbp": 1,
                    "reg_rbp": 1,
                    "temp_u_long_ptr7": 1,
                    "ulong_double_pointer_variable_6": 1,
                    "unaff_rbp": 3,
                    "unaffected_pointer_rbp": 2,
                    "unaffected_rb_ptr": 1,
                    "unaffected_rbp": 6,
                    "unaffected_register_bp": 1
                },
                "unaff_RBX": {
                    "array_pointer3": 1,
                    "double_ptr_3": 1,
                    "output_pointer1": 1,
                    "pointer_pointer_var10": 1,
                    "pointer_pointer_var3": 1,
                    "pointer_pointer_var_rbx": 1,
                    "pointer_var2": 2,
                    "ptr_ptr_var3": 1,
                    "ptr_var_rbx": 1,
                    "reg_rbx": 1,
                    "temp_u_long_ptr4": 1,
                    "ulong_double_pointer_variable_3": 1,
                    "unaff_rbx": 4,
                    "unaffected_pointer_rbx": 2,
                    "unaffected_rb_ptr": 1,
                    "unaffected_rbx": 6,
                    "unaffected_register_bx": 1
                }
            },
            "called": [
                "bfd_get_error",
                "FUN_00106400",
                "dcgettext",
                "FUN_00106530"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid process_binary_function_001048e0(ulong **input_params,undefined8 param2,undefined8 param3,undefined8 param4,\n                 ulong **output_params,ulong **param6)\n\n{\n  byte byte_var;\n  code *function_pointer;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 ulong_var;\n  long long_var;\n  ulong **pointer_pointer_var1;\n  ulong **pointer_pointer_var2;\n  long long_var2;\n  ulong *pointer_var11;\n  ulong **unaffected_rbx;\n  ulong **pointer_pointer_var3;\n  ulong **pointer_pointer_var4;\n  ulong **unaffected_rbp;\n  ulong **pointer_pointer_var5;\n  ulong **pointer_pointer_var6;\n  ulong **pointer_pointer_var7;\n  ulong **pointer_pointer_var8;\n  ulong **pointer_pointer_var9;\n  ulong **unaffected_r14;\n  ulong **unaffected_r15;\n  bool bool_var;\n  byte byte_var20;\n  ulong **pointer_pointer_var10;\n  uint local_var1;\n  ulong *local_var2;\n  ulong **local_array [2];\n  \n  byte_var20 = 0;\n  local_var2 = (ulong *)0x0;\n  if ((DAT_0010b80c != 0) || ((*(byte *)((long)input_params + 0x44) & 0x10) != 0)) {\n    pointer_pointer_var2 = (ulong **)&local_var1;\n    pointer_pointer_var1 = (ulong **)(*(code *)input_params[1][0x4d])(input_params,DAT_0010b80c != 0,local_array);\n    if ((long)pointer_pointer_var1 < 0) {\n      if ((DAT_0010b80c != 0) && (int_var = bfd_get_error(), int_var == 7)) {\n        if (_DAT_0010b810 != 0) {\n          return;\n        }\n        pointer_var11 = *input_params;\n        ulong_var = dcgettext(0,\"%s: no symbols\",5);\n        FUN_00106400(ulong_var,pointer_var11);\n        return;\n      }\n      FUN_00106530(*input_params);\n      goto LAB_00102e9e;\n    }\n    if (pointer_pointer_var1 != (ulong **)0x0) {\n      if (DAT_0010b788 != 0) {\n        if (local_var1 == 8) goto LAB_00102d06;\n        goto LAB_00102cc2;\n      }\n      byte_var = *(byte *)((long)input_params + 0x4a);\n      pointer_pointer_var4 = input_params;\n      do {\n        if ((byte_var & 0x10) != 0) {\n          unaffected_rbx = (ulong **)*pointer_pointer_var4;\n          DAT_0010b230 = '\\0';\n          ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          FUN_00106400(ulong_var);\n        }\n        pointer_pointer_var5 = local_array[0];\n        unaffected_r14 = (ulong **)(ulong)local_var1;\n        bool_var = DAT_0010b80c != 0;\n        pointer_pointer_var2 = local_array[0];\n        unaffected_r15 = (ulong **)(*(code *)pointer_pointer_var4[1][0x41])(pointer_pointer_var4);\n        pointer_pointer_var3 = unaffected_rbx;\n        unaffected_rbp = (ulong **)(ulong)bool_var;\n        input_params = pointer_pointer_var4;\n        if (unaffected_r15 == (ulong **)0x0) goto LAB_00102ea7;\n        pointer_pointer_var8 = (ulong **)((long)pointer_pointer_var1 * (long)unaffected_r14);\n        pointer_pointer_var1 = (ulong **)((long)pointer_pointer_var5 + (long)pointer_pointer_var8);\n        input_params = pointer_pointer_var5;\n        pointer_pointer_var3 = pointer_pointer_var5;\njoined_r0x001049a4:\n        if (input_params < pointer_pointer_var1) {\n          do {\n            pointer_pointer_var2 = (ulong **)(*(code *)pointer_pointer_var4[1][0x4e])(pointer_pointer_var4,bool_var,input_params,unaffected_r15);\n            pointer_pointer_var8 = unaffected_r15;\n            if (pointer_pointer_var2 == (ulong **)0x0) goto LAB_00102eb0;\n            pointer_var11 = pointer_pointer_var2[1];\n            pointer_pointer_var8 = pointer_pointer_var1;\n            if (((pointer_var11 == (ulong *)0x0) || (*(char *)pointer_var11 != '_')) ||\n               (*(char *)((long)pointer_var11 + 1) != '_')) {\nLAB_00104a03:\n              if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n              uint_var = (uint)(pointer_pointer_var2[4] == (ulong *)0x10c2a8);\nLAB_00104af9:\n              if (uint_var == 0) goto code_r0x00104b01;\nLAB_00104a2d:\n              if (DAT_0010b81c == 0) {\n                if ((*(byte *)(pointer_pointer_var2 + 3) & 4) == 0) {\n                  if (DAT_0010b7f8 != 0) goto FUN_00104d5b;\nLAB_00104a53:\n                  param6 = (ulong **)(ulong)DAT_0010b7e4;\n                  if (DAT_0010b7e4 == 0) {\n                    char_var = (*(code *)pointer_pointer_var4[1][0x46])(pointer_pointer_var4,pointer_pointer_var2);\n                    if (char_var != '\\0') {\n                      FUN_00102c19();\n                      return;\n                    }\n                    goto LAB_00104a7b;\n                  }\n                  if (pointer_pointer_var2[4] != (ulong *)0x10c2a8) goto LAB_00104cba;\n                }\n              }\n              else {\n                if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nFUN_00104d5b:\n                if ((pointer_pointer_var2[4] == (ulong *)0x10c2a8) || (pointer_pointer_var2[4] == (ulong *)0x10c3c0))\n                goto LAB_001049c3;\nLAB_00104cba:\n                char_var = (*(code *)pointer_pointer_var4[1][0x46])(pointer_pointer_var4,pointer_pointer_var2);\n                if (char_var != '\\0') {\n                  FUN_00102c19();\n                  return;\n                }\nLAB_00104a7b:\n                if (pointer_pointer_var3 != input_params) {\n                  if (unaffected_r14 == (ulong **)0x8) {\n                    *pointer_pointer_var3 = *input_params;\n                    FUN_001049c0();\n                    return;\n                  }\n                  for (; unaffected_r14 != (ulong **)0x0; unaffected_r14 = (ulong **)((long)unaffected_r14 + -1)) {\n                    *(undefined *)pointer_pointer_var3 = *(undefined *)input_params;\n                    input_params = (ulong **)((long)input_params + (ulong)byte_var20 * -2 + 1);\n                    pointer_pointer_var3 = (ulong **)((long)pointer_pointer_var3 + (ulong)byte_var20 * -2 + 1);\n                  }\n                  FUN_001049c0();\n                  return;\n                }\n                pointer_pointer_var3 = (ulong **)((long)pointer_pointer_var3 + (long)unaffected_r14);\n              }\n            }\n            else {\n              int_var = strcmp((char *)((long)pointer_var11 + (ulong)(*(char *)((long)pointer_var11 + 2) == '_')),\n                             \"__gnu_lto_slim\");\n              pointer_pointer_var10 = pointer_pointer_var2;\n              if (int_var == 0) {\n                if (DAT_0010b230 != '\\0') {\n                  pointer_pointer_var10 = (ulong **)*pointer_pointer_var4;\n                  DAT_0010b230 = '\\0';\n                  ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  FUN_00106400(ulong_var,pointer_pointer_var10);\n                }\n                goto LAB_00104a03;\n              }\n              if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n              if (DAT_0010b808 == 0) {\n                if (DAT_0010b7d8 != 0) {\n                  uint_var = (*(uint *)(pointer_pointer_var2 + 3) >> 7 ^ 1) & 1;\n                  goto LAB_00104af9;\n                }\n                goto LAB_00104a2d;\n              }\n              if ((((*(uint *)(pointer_pointer_var2 + 3) & 0x800082) != 0) || (pointer_pointer_var2[4] == (ulong *)0x10c2a8))\n                 || ((*(byte *)((long)pointer_pointer_var2[4] + 0x25) & 0x10) != 0)) goto LAB_00104a2d;\n            }\nLAB_001049c3:\n            input_params = (ulong **)((long)input_params + (long)unaffected_r14);\n            if (pointer_pointer_var1 <= input_params) break;\n          } while( true );\n        }\n        pointer_pointer_var3 = (ulong **)((long)pointer_pointer_var3 - (long)pointer_pointer_var5);\n        if (unaffected_r14 == (ulong **)0x8) {\n          pointer_var11 = pointer_pointer_var4[1];\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var3 + 7);\n          if (-1 < (long)pointer_pointer_var3) {\n            pointer_pointer_var5 = pointer_pointer_var3;\n          }\n          output_params = (ulong **)(ulong)DAT_0010b800;\n          function_pointer = (code *)pointer_var11[0x41];\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var5 >> 3);\n        }\n        else {\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var3 / (long)unaffected_r14);\n          pointer_var11 = pointer_pointer_var4[1];\n          function_pointer = (code *)pointer_var11[0x41];\n        }\n        if (DAT_0010b800 != 0) goto LAB_00104be2;\n        DAT_0010b778 = DAT_0010b80c != 0;\n        DAT_0010b780 = pointer_pointer_var4;\n        DAT_0010b770 = (ulong **)(*function_pointer)(pointer_pointer_var4);\n        DAT_0010b768 = (ulong **)(*(code *)pointer_pointer_var4[1][0x41])(pointer_pointer_var4);\n        pointer_pointer_var3 = local_array[0];\n        if ((DAT_0010b770 != (ulong **)0x0) && (DAT_0010b768 != (ulong **)0x0)) {\n          pointer_pointer_var1 = (ulong **)(ulong)local_var1;\n          if (DAT_0010b7f8 != 0) {\n            bool_var = DAT_0010b80c != 0;\n            qsort(local_array[0],(size_t)pointer_pointer_var5,(size_t)pointer_pointer_var1,FUN_00102fd2);\n            pointer_pointer_var8 = (ulong **)xmalloc((long)pointer_pointer_var5 << 4);\n            pointer_pointer_var9 = DAT_0010b770;\n            input_params = DAT_0010b768;\n            unaffected_r14 = (ulong **)((long)pointer_pointer_var5 * (long)pointer_pointer_var1 + (long)pointer_pointer_var3);\n            pointer_pointer_var2 = DAT_0010b770;\n            if (unaffected_r14 <= pointer_pointer_var3) goto LAB_00102ec2;\n            param6 = DAT_0010b768;\n            pointer_pointer_var5 = (ulong **)(*(code *)pointer_pointer_var4[1][0x4e])(pointer_pointer_var4,bool_var,pointer_pointer_var3);\n            output_params = pointer_pointer_var1;\n            pointer_pointer_var10 = pointer_pointer_var8;\n            if (pointer_pointer_var5 == (ulong **)0x0) goto LAB_00102eb9;\n            goto LAB_00104e35;\n          }\n          qsort(local_array[0],(size_t)pointer_pointer_var5,(size_t)pointer_pointer_var1,\n                (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n          pointer_var11 = pointer_pointer_var4[1];\nLAB_00104be2:\n          input_params = pointer_pointer_var4;\n          pointer_pointer_var9 = (ulong **)0x0;\n          goto LAB_00104be5;\n        }\n        FUN_00106530(*pointer_pointer_var4);\n        input_params = pointer_pointer_var4;\n        pointer_pointer_var3 = unaffected_r15;\n        while( true ) {\n          unaffected_rbx = (ulong **)xmalloc();\n          pointer_pointer_var1 = (ulong **)(*(code *)input_params[1][0x6b])(input_params,unaffected_rbx);\n          pointer_pointer_var2 = pointer_pointer_var8;\n          if (-1 < (long)pointer_pointer_var1) break;\n          pointer_pointer_var4 = (ulong **)*input_params;\n          pointer_pointer_var5 = (ulong **)FUN_00106530(pointer_pointer_var4,pointer_pointer_var8);\nLAB_00102dbe:\n          pointer_var11 = pointer_pointer_var5[2];\n          pointer_pointer_var2 = (ulong **)0x0;\nLAB_00102dc4:\n          pointer_var11 = (ulong *)((long)pointer_pointer_var1[8] - (long)pointer_var11);\n          pointer_pointer_var9 = input_params;\n          pointer_pointer_var6 = pointer_pointer_var3;\nLAB_00104ea7:\n          pointer_pointer_var5 = pointer_pointer_var2;\n          pointer_pointer_var3 = unaffected_rbx;\n          input_params = param6;\n          if (pointer_var11 != (ulong *)0x0) {\n            *pointer_pointer_var8 = (ulong *)pointer_pointer_var6;\n            pointer_pointer_var8[1] = pointer_var11;\n            pointer_pointer_var8 = pointer_pointer_var8 + 2;\n          }\nLAB_00104e35:\n          param6 = pointer_pointer_var9;\n          if (pointer_pointer_var3 < unaffected_r14) goto code_r0x00104e3e;\n          pointer_pointer_var5 = (ulong **)((long)pointer_pointer_var8 - (long)pointer_pointer_var10 >> 4);\n          qsort(pointer_pointer_var10,(size_t)pointer_pointer_var5,0x10,FUN_00103533);\n          pointer_var11 = pointer_pointer_var4[1];\n          input_params = pointer_pointer_var4;\n          pointer_pointer_var9 = pointer_pointer_var10;\nLAB_00104be5:\n          unaffected_rbx = local_array[0];\n          pointer_pointer_var1 = (ulong **)(ulong)DAT_0010b7f8;\n          unaffected_r14 = (ulong **)(ulong)(DAT_0010b80c != 0);\n          if (DAT_0010b7f8 != 0) {\n            pointer_pointer_var8 = (ulong **)(*(code *)pointer_var11[0x41])(input_params);\n            if (pointer_pointer_var8 == (ulong **)0x0) goto LAB_00102ed2;\n            pointer_pointer_var3 = pointer_pointer_var9 + (long)pointer_pointer_var5 * 2;\n            pointer_pointer_var5 = pointer_pointer_var9;\n            goto LAB_00104ee9;\n          }\n          pointer_pointer_var1 = (ulong **)(ulong)local_var1;\n          unaffected_r15 = (ulong **)(*(code *)pointer_var11[0x41])(input_params);\n          if (unaffected_r15 != (ulong **)0x0) {\n            unaffected_rbp = (ulong **)((long)pointer_pointer_var5 * (long)pointer_pointer_var1 + (long)unaffected_rbx);\n            if (unaffected_rbx < unaffected_rbp) goto LAB_00104c38;\n            goto LAB_00104c75;\n          }\n          FUN_00106530(*input_params);\n          unaffected_r15 = pointer_pointer_var9;\nLAB_00102d06:\n          pointer_pointer_var2 = pointer_pointer_var1;\n          if (DAT_0010b80c != 0) {\n            unaffected_rbx = local_array[0];\n            pointer_pointer_var5 = (ulong **)0x0;\n            pointer_pointer_var8 = (ulong **)0x0;\n            break;\n          }\n          long_var2 = (*(code *)input_params[1][0x6a])(input_params);\n          pointer_pointer_var5 = local_array[0];\n          pointer_pointer_var8 = pointer_pointer_var1;\n          pointer_pointer_var3 = unaffected_r15;\n          if (long_var2 < 1) {\n            pointer_pointer_var1 = (ulong **)0x0;\n            unaffected_rbx = (ulong **)0x0;\n            break;\n          }\n        }\n        param6 = &local_var2;\n        output_params = unaffected_rbx;\n        long_var2 = (*(code *)input_params[1][0x6c])(input_params,pointer_pointer_var8,pointer_pointer_var5,pointer_pointer_var1);\n        pointer_pointer_var1 = pointer_pointer_var2;\n        if (0 < long_var2) {\n          pointer_pointer_var1 = (ulong **)((long)pointer_pointer_var2 + long_var2);\n          local_array[0] = (ulong **)xrealloc(local_array[0]);\n          long_var = 0;\n          do {\n            local_array[0][(long)pointer_pointer_var2 + long_var] = local_var2 + long_var * 6;\n            long_var = long_var + 1;\n          } while (long_var2 != long_var);\n          local_array[0][(long)pointer_pointer_var2 + long_var2] = (ulong *)0x0;\n        }\n        if ((DAT_0010b80c == 0) && (unaffected_rbx != (ulong **)0x0)) {\n          free(unaffected_rbx);\n        }\nLAB_00102cc2:\n        byte_var = *(byte *)((long)input_params + 0x4a);\n        pointer_pointer_var4 = input_params;\n      } while( true );\n    }\n  }\n  if (_DAT_0010b810 == 0) {\n    pointer_var11 = *input_params;\n    ulong_var = dcgettext(0,\"%s: no symbols\",5);\n    FUN_00106400(ulong_var,pointer_var11);\n  }\n  return;\ncode_r0x00104b01:\n  input_params = (ulong **)((long)input_params + (long)unaffected_r14);\n  goto joined_r0x001049a4;\ncode_r0x00104e3e:\n  unaffected_rbx = (ulong **)((long)pointer_pointer_var3 + (long)output_params);\n  if (unaffected_r14 <= unaffected_rbx) {\n    pointer_pointer_var1 = (ulong **)pointer_pointer_var5[4];\n    if ((*(uint *)(pointer_pointer_var5 + 3) & 0x200100) != 0) goto LAB_00102dbe;\n    pointer_pointer_var2 = (ulong **)0x0;\nLAB_00104e95:\n    pointer_pointer_var9 = input_params;\n    pointer_pointer_var6 = pointer_pointer_var3;\n    if (*(int *)(pointer_pointer_var4[1] + 1) == 5) {\n      pointer_var11 = pointer_pointer_var5[7];\n      goto LAB_00104ea7;\n    }\n    pointer_var11 = pointer_pointer_var5[2];\n    if ((*(byte *)((long)pointer_pointer_var1 + 0x25) & 0x10) != 0) goto LAB_00104ea7;\n    if (unaffected_r14 <= unaffected_rbx) goto LAB_00102dc4;\n    goto LAB_00102ee7;\n  }\n  pointer_pointer_var1 = input_params;\n  pointer_pointer_var6 = output_params;\n  pointer_pointer_var7 = param6;\n  pointer_pointer_var2 = (ulong **)(*(code *)pointer_pointer_var4[1][0x4e])();\n  pointer_pointer_var9 = pointer_pointer_var3;\n  if (pointer_pointer_var2 == (ulong **)0x0) goto LAB_00102edb;\n  pointer_pointer_var1 = (ulong **)pointer_pointer_var5[4];\n  if ((*(uint *)(pointer_pointer_var5 + 3) & 0x200100) == 0) goto LAB_00104e95;\n  goto LAB_00102ee3;\nLAB_00104ee9:\n  if (pointer_pointer_var3 <= pointer_pointer_var5) {\nLAB_00104c75:\n    if (local_var2 == (ulong *)0x0) {\n      free(local_array[0]);\n      free(pointer_pointer_var9);\n      return;\n    }\n    free(local_var2);\n    free(local_array[0]);\n    free(pointer_pointer_var9);\n    return;\n  }\n  pointer_pointer_var1 = pointer_pointer_var8;\n  long_var2 = (*(code *)input_params[1][0x4e])(input_params,unaffected_r14,*pointer_pointer_var5);\n  if (long_var2 == 0) goto LAB_00102ec9;\n  pointer_pointer_var1 = pointer_pointer_var5 + 1;\n  pointer_pointer_var5 = pointer_pointer_var5 + 2;\n  FUN_00105110(input_params,long_var2,*pointer_pointer_var1,param2);\n  goto LAB_00104ee9;\nLAB_00102ec9:\n  FUN_00106530(*input_params,0);\nLAB_00102ed2:\n  pointer_pointer_var4 = (ulong **)*input_params;\n  FUN_00106530();\n  unaffected_rbx = pointer_pointer_var3;\n  pointer_pointer_var6 = output_params;\n  pointer_pointer_var7 = param6;\nLAB_00102edb:\n  param6 = pointer_pointer_var7;\n  output_params = pointer_pointer_var6;\n  pointer_pointer_var4 = (ulong **)*pointer_pointer_var4;\n  pointer_pointer_var2 = (ulong **)FUN_00106530();\n  pointer_pointer_var3 = pointer_pointer_var9;\nLAB_00102ee3:\n  pointer_var11 = pointer_pointer_var5[2];\nLAB_00102ee7:\n  if (pointer_pointer_var1 != (ulong **)pointer_pointer_var2[4]) goto LAB_00102dc4;\n  pointer_var11 = (ulong *)((long)pointer_pointer_var2[2] - (long)pointer_var11);\n  pointer_pointer_var9 = input_params;\n  pointer_pointer_var6 = pointer_pointer_var3;\n  goto LAB_00104ea7;\nLAB_00104c38:\n  while (pointer_pointer_var2 = unaffected_r15, long_var2 = (*(code *)input_params[1][0x4e])(input_params,unaffected_r14,unaffected_rbx),\n        long_var2 != 0) {\n    unaffected_rbx = (ulong **)((long)unaffected_rbx + (long)pointer_pointer_var1);\n    FUN_00105110(input_params,long_var2,0,param2);\n    if (unaffected_rbp <= unaffected_rbx) goto LAB_00104c75;\n  }\nLAB_00102e9e:\n  FUN_00106530(*input_params);\n  pointer_pointer_var3 = unaffected_rbx;\nLAB_00102ea7:\n  pointer_pointer_var4 = unaffected_rbp;\n  FUN_00106530(*input_params);\n  pointer_pointer_var8 = unaffected_r15;\nLAB_00102eb0:\n  FUN_00106530(*pointer_pointer_var4);\n  pointer_pointer_var4 = input_params;\nLAB_00102eb9:\n  FUN_00106530(*pointer_pointer_var4);\n  input_params = param6;\nLAB_00102ec2:\n  pointer_pointer_var5 = (ulong **)0x0;\n  output_params = pointer_pointer_var1;\n  pointer_pointer_var9 = pointer_pointer_var2;\n  pointer_pointer_var10 = pointer_pointer_var8;\n  goto LAB_00104e35;\n}\n\n",
            "current_name": "process_binary_function_001048e0",
            "entrypoint": "0x001048e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001048e0": "process_binary_function_001048e0",
                "bVar1": "byte_var",
                "bVar19": "bool_var",
                "bVar20": "byte_var20",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "lVar10": "long_var2",
                "lVar7": "long_var",
                "local_40": "local_array",
                "local_48": "local_var2",
                "local_4c": "local_var1",
                "param_1": "input_params",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "output_params",
                "param_6": "param6",
                "pcVar2": "function_pointer",
                "ppuStack_78": "pointer_pointer_var10",
                "ppuVar12": "pointer_pointer_var3",
                "ppuVar13": "pointer_pointer_var4",
                "ppuVar14": "pointer_pointer_var5",
                "ppuVar15": "pointer_pointer_var6",
                "ppuVar16": "pointer_pointer_var7",
                "ppuVar17": "pointer_pointer_var8",
                "ppuVar18": "pointer_pointer_var9",
                "ppuVar8": "pointer_pointer_var1",
                "ppuVar9": "pointer_pointer_var2",
                "puVar11": "pointer_var11",
                "uVar5": "uint_var",
                "uVar6": "ulong_var",
                "unaff_R14": "unaffected_r14",
                "unaff_R15": "unaffected_r15",
                "unaff_RBP": "unaffected_rbp",
                "unaff_RBX": "unaffected_rbx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001049c0": {
            "additional_data": {
                "FUN_001049c0": {
                    "decompiled_function": 2,
                    "extract_lto_objects": 1,
                    "extract_lto_plugins": 1,
                    "process_binary_data": 3,
                    "process_data": 5,
                    "reverse_and_process_data": 1,
                    "reverse_code": 1
                },
                "__ptr": {
                    "hidden_pointer": 1,
                    "mem_ptr": 1,
                    "pointer": 2,
                    "pointer3": 1,
                    "pointer_var3": 3,
                    "pointer_var4": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_3": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_variable3": 1
                },
                "bVar16": {
                    "bool_var": 9,
                    "bool_var1": 2,
                    "bool_var16": 1,
                    "bool_variable": 3,
                    "boolean_value": 2,
                    "boolean_var": 5,
                    "boolean_variable": 4,
                    "is_plugin_needed_2": 1
                },
                "bVar17": {
                    "byte_flag": 1,
                    "byte_value": 2,
                    "byte_var": 15,
                    "byte_var1": 1,
                    "byte_var17": 1,
                    "byte_variable": 7,
                    "direction": 1,
                    "is_equal_2": 1
                },
                "cVar3": {
                    "ch1": 1,
                    "char_var": 12,
                    "char_var3": 1,
                    "char_variable": 3,
                    "character": 6,
                    "character_var": 1,
                    "character_variable": 3
                },
                "iVar4": {
                    "int_var": 12,
                    "int_var1": 1,
                    "int_var4": 1,
                    "int_variable": 3,
                    "integer": 4,
                    "integer_var": 3,
                    "integer_variable": 3
                },
                "in_R8": {
                    "data_offset": 1,
                    "input_r8": 1,
                    "input_register8": 1,
                    "pointer_r8": 1,
                    "pointer_to_unsigned_long_3": 1,
                    "pointer_var6": 1,
                    "pointer_var7": 1,
                    "pointer_variable_7": 1,
                    "register_r8": 3
                },
                "in_R9": {
                    "data_size": 1,
                    "input_array_end": 1,
                    "input_register9": 1,
                    "pointer_to_unsigned_long_7": 1,
                    "register_r9": 2
                },
                "in_stack_00000008": {
                    "additional_data": 1,
                    "in_stack_variable1": 1,
                    "input_stack8": 1,
                    "param_8": 1,
                    "parameter1": 1,
                    "stack_param1": 1,
                    "stack_value": 1,
                    "stack_var1": 8,
                    "stack_var_1": 2,
                    "stack_variable1": 2,
                    "stack_variable8": 1,
                    "stack_variable_1": 2,
                    "temp_var1": 1,
                    "undefined8_variable2": 1,
                    "var1": 2,
                    "var_in_stack_8": 1
                },
                "in_stack_00000010": {
                    "block_temp": 1,
                    "in_stack_variable2": 1,
                    "input_stack10": 1,
                    "parameter2": 1,
                    "processed_data": 1,
                    "stack_param2": 1,
                    "stack_pointer1": 1,
                    "stack_var2": 8,
                    "stack_var_2": 2,
                    "stack_variable10": 1,
                    "stack_variable2": 2,
                    "stack_variable_2": 2,
                    "temp_var2": 1,
                    "undefined8_pointer12": 1,
                    "var2": 2,
                    "var_in_stack_10": 1
                },
                "in_stack_00000018": {
                    "block_end": 1,
                    "in_stack_variable3": 1,
                    "input_stack18": 1,
                    "parameter3": 1,
                    "stack_param3": 1,
                    "stack_pointer2": 1,
                    "stack_var3": 8,
                    "stack_var_3": 2,
                    "stack_variable18": 1,
                    "stack_variable3": 2,
                    "stack_variable_3": 2,
                    "start_address": 2,
                    "undefined8_pointer13": 1,
                    "var3": 2,
                    "var_in_stack_18": 1
                },
                "in_stack_00000038": {
                    "data_type": 1,
                    "in_stack_variable4": 1,
                    "input_stack38": 1,
                    "param_38": 1,
                    "parameter4": 1,
                    "size": 1,
                    "stack_param4": 1,
                    "stack_value2": 1,
                    "stack_var4": 8,
                    "stack_var_4": 2,
                    "stack_variable38": 1,
                    "stack_variable4": 2,
                    "stack_variable_4": 2,
                    "undefined8_variable3": 1,
                    "var4": 2,
                    "var_in_stack_38": 1
                },
                "in_stack_00000040": {
                    "in_stack_variable5": 1,
                    "input_stack40": 1,
                    "param_40": 1,
                    "parameter5": 1,
                    "stack_param5": 1,
                    "stack_pointer3": 1,
                    "stack_var5": 8,
                    "stack_var_5": 2,
                    "stack_variable40": 1,
                    "stack_variable5": 2,
                    "stack_variable_5": 2,
                    "temp_array": 1,
                    "temp_memory": 1,
                    "var5": 2,
                    "var_in_stack_40": 1,
                    "void_pointer": 1
                },
                "in_stack_00000048": {
                    "data_array": 1,
                    "entry_data": 1,
                    "in_stack_variable6": 1,
                    "input_stack48": 1,
                    "parameter6": 1,
                    "sorted_array": 1,
                    "stack_param6": 1,
                    "stack_pointer4": 1,
                    "stack_var6": 8,
                    "stack_var_6": 2,
                    "stack_variable48": 1,
                    "stack_variable6": 2,
                    "stack_variable_6": 2,
                    "undefined8_pointer14": 1,
                    "var6": 2,
                    "var_in_stack_48": 1
                },
                "lVar7": {
                    "increment": 1,
                    "long_value": 3,
                    "long_var": 16,
                    "long_var1": 1,
                    "long_var7": 1,
                    "long_variable": 6
                },
                "lVar9": {
                    "length": 1,
                    "long_value2": 2,
                    "long_var2": 13,
                    "long_var9": 1,
                    "long_var_2": 3,
                    "long_variable": 1,
                    "long_variable2": 5,
                    "long_variable_2": 1,
                    "temp_value": 1,
                    "temp_var1": 1
                },
                "pcVar1": {
                    "char_pointer": 4,
                    "char_pointer1": 3,
                    "char_ptr": 4,
                    "character_pointer": 2,
                    "character_ptr": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_char": 1,
                    "pointer_to_char": 2,
                    "pointer_to_character": 1,
                    "pointer_var1": 1,
                    "str_pointer": 1,
                    "str_ptr": 2,
                    "str_ptr1": 1,
                    "string_pointer": 3
                },
                "pcVar2": {
                    "code_pointer": 3,
                    "code_pointer_var2": 1,
                    "code_ptr": 1,
                    "code_ptr1": 1,
                    "func_ptr": 1,
                    "function_pointer": 11,
                    "function_ptr": 5,
                    "pointer2": 1,
                    "pointer_function": 1,
                    "pointer_to_code": 3
                },
                "puVar10": {
                    "pointer2": 1,
                    "pointer_to_undefined2": 1,
                    "pointer_to_unknown_type2": 1,
                    "pointer_to_unsigned8_2": 1,
                    "pointer_to_unsigned_long_2": 1,
                    "pointer_var10": 1,
                    "pointer_var2": 10,
                    "pointer_var_2": 1,
                    "pointer_variable": 1,
                    "pointer_variable2": 2,
                    "pointer_variable_2": 1,
                    "ptr_var2": 2,
                    "ptr_var_2": 1,
                    "ptr_variable2": 1,
                    "temp_var2": 1,
                    "undefined8_pointer2": 1
                },
                "puVar11": {
                    "block_start": 1,
                    "current_entry": 1,
                    "pointer3": 1,
                    "pointer_to_undefined3": 1,
                    "pointer_to_unknown_type3": 1,
                    "pointer_to_unsigned8_3": 1,
                    "pointer_to_unsigned_long_4": 1,
                    "pointer_var11": 1,
                    "pointer_var3": 5,
                    "pointer_var4": 3,
                    "pointer_var6": 1,
                    "pointer_var_3": 1,
                    "pointer_variable3": 1,
                    "pointer_variable4": 1,
                    "pointer_variable_4": 1,
                    "ptr_var3": 2,
                    "ptr_var_3": 1,
                    "ptr_variable4": 1,
                    "undefined8_pointer5": 1
                },
                "puVar12": {
                    "base_pointer": 1,
                    "current_data": 1,
                    "pointer4": 1,
                    "pointer_to_undefined4": 1,
                    "pointer_to_unknown_type4": 1,
                    "pointer_to_unsigned8_4": 1,
                    "pointer_to_unsigned_long_5": 1,
                    "pointer_var12": 1,
                    "pointer_var4": 5,
                    "pointer_var5": 3,
                    "pointer_var7": 1,
                    "pointer_variable4": 1,
                    "pointer_variable5": 1,
                    "pointer_variable_5": 1,
                    "ptr_var4": 2,
                    "ptr_var_4": 1,
                    "ptr_variable5": 1,
                    "undefined8_pointer6": 1
                },
                "puVar13": {
                    "input_start": 1,
                    "next_data": 1,
                    "pointer5": 1,
                    "pointer_to_undefined5": 1,
                    "pointer_to_unknown_type5": 1,
                    "pointer_to_unsigned8_5": 1,
                    "pointer_to_unsigned_long_6": 1,
                    "pointer_var13": 1,
                    "pointer_var5": 5,
                    "pointer_var6": 3,
                    "pointer_var8": 1,
                    "pointer_var_4": 1,
                    "pointer_variable5": 1,
                    "pointer_variable6": 1,
                    "pointer_variable_6": 1,
                    "ptr_var5": 2,
                    "ptr_var_5": 1,
                    "ptr_variable6": 1,
                    "undefined8_pointer7": 1
                },
                "puVar14": {
                    "output_start": 1,
                    "pointer6": 1,
                    "pointer_to_undefined6": 1,
                    "pointer_to_unknown_type6": 1,
                    "pointer_to_unsigned_long_8": 1,
                    "pointer_var14": 1,
                    "pointer_var6": 4,
                    "pointer_var7": 3,
                    "pointer_var8": 1,
                    "pointer_var_5": 1,
                    "pointer_variable6": 1,
                    "pointer_variable_8": 1,
                    "ptr_var6": 1,
                    "ptr_var_6": 1,
                    "ptr_variable7": 1
                },
                "puVar15": {
                    "end_address": 1,
                    "output_index": 1,
                    "pointer7": 1,
                    "pointer_to_undefined7": 1,
                    "pointer_to_unknown_type7": 1,
                    "pointer_to_unsigned_long_9": 1,
                    "pointer_var15": 1,
                    "pointer_var7": 4,
                    "pointer_var8": 3,
                    "pointer_var9": 1,
                    "pointer_var_6": 1,
                    "pointer_variable7": 1,
                    "pointer_variable_9": 1,
                    "ptr_var7": 1,
                    "ptr_var_7": 1,
                    "ptr_variable8": 1
                },
                "puVar8": {
                    "pointer1": 1,
                    "pointer_to_undefined": 1,
                    "pointer_to_unkown_type": 1,
                    "pointer_to_unsigned8": 1,
                    "pointer_to_unsigned_long": 1,
                    "pointer_value": 1,
                    "pointer_var": 2,
                    "pointer_var1": 9,
                    "pointer_var8": 1,
                    "pointer_variable": 2,
                    "pointer_variable1": 1,
                    "ptr_var": 1,
                    "ptr_var1": 2,
                    "ptr_var_1": 1,
                    "ptr_variable1": 1,
                    "result": 3,
                    "undefined8_pointer": 1
                },
                "uVar18": {
                    "is_plugin_needed": 1,
                    "uint_var18": 1,
                    "uint_var2": 1,
                    "ulong_var2": 4,
                    "ulong_var3": 4,
                    "ulong_var_2": 1,
                    "ulong_variable": 1,
                    "ulong_variable2": 2,
                    "unsigned_long2": 2,
                    "unsigned_long_var": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_var2": 2,
                    "unsigned_var3": 1,
                    "unsigned_var_2": 1,
                    "unsigned_variable3": 2,
                    "unsigned_variable_2": 1
                },
                "uVar5": {
                    "is_equal": 1,
                    "uint_var": 11,
                    "uint_var1": 1,
                    "uint_var5": 1,
                    "uint_variable": 3,
                    "unsigned_integer": 4,
                    "unsigned_var": 4,
                    "unsigned_variable": 3
                },
                "uVar6": {
                    "result_ptr": 1,
                    "uint_var2": 1,
                    "uint_var6": 1,
                    "ulong_var": 11,
                    "ulong_variable": 1,
                    "undefined8_variable": 2,
                    "unsigned_long": 4,
                    "unsigned_long_long_var": 1,
                    "unsigned_long_var": 2,
                    "unsigned_var2": 1,
                    "unsigned_variable2": 2
                },
                "unaff_R12": {
                    "loop_limit": 1,
                    "num_blocks": 1,
                    "num_entries": 1,
                    "pointer_r12": 1,
                    "pointer_var11": 1,
                    "pointer_var12": 2,
                    "ptr_r12": 1,
                    "ptr_reg3": 1,
                    "reg_var3": 1,
                    "register_r12": 8,
                    "register_unaff_r12": 1,
                    "register_var3": 1,
                    "unaffected_pointer3": 1,
                    "unaffected_pointer_r12": 1,
                    "unaffected_pointer_variable_1": 1,
                    "unaffected_r12": 2,
                    "unaffected_register12": 1,
                    "unaffected_register_r12": 1,
                    "undefined8_pointer8": 1,
                    "unset_variable_r12": 1
                },
                "unaff_R13": {
                    "current_offset": 1,
                    "dest": 1,
                    "index_pointer": 1,
                    "next_address": 1,
                    "pointer_r13": 1,
                    "pointer_var11": 1,
                    "pointer_var12": 1,
                    "pointer_var13": 1,
                    "ptr_r13": 1,
                    "ptr_reg4": 1,
                    "reg_var4": 1,
                    "register_r13": 8,
                    "register_unaff_r13": 1,
                    "register_var4": 1,
                    "unaffected_pointer4": 1,
                    "unaffected_pointer_r13": 1,
                    "unaffected_pointer_variable_2": 1,
                    "unaffected_r13": 2,
                    "unaffected_register13": 1,
                    "unaffected_register_r13": 1,
                    "undefined8_pointer9": 1,
                    "unset_variable_r13": 1
                },
                "unaff_R14": {
                    "address_increment": 1,
                    "block_size": 1,
                    "entry_size": 1,
                    "pointer_r14": 1,
                    "pointer_var10": 1,
                    "pointer_var13": 1,
                    "pointer_var14": 1,
                    "ptr_r14": 1,
                    "ptr_reg5": 1,
                    "reg_var5": 1,
                    "register_r14": 8,
                    "register_unaff_r14": 1,
                    "register_var5": 1,
                    "unaffected_pointer5": 1,
                    "unaffected_pointer_r14": 1,
                    "unaffected_pointer_variable_3": 1,
                    "unaffected_r14": 2,
                    "unaffected_register14": 1,
                    "unaffected_register_r14": 1,
                    "undefined8_pointer10": 1,
                    "unset_variable_r14": 1
                },
                "unaff_R15": {
                    "data_pointer": 1,
                    "entry_array": 1,
                    "pointer_r15": 1,
                    "pointer_var14": 1,
                    "pointer_var15": 1,
                    "pointer_var9": 1,
                    "ptr_r15": 1,
                    "ptr_reg6": 1,
                    "reg_var6": 1,
                    "register_r15": 8,
                    "register_unaff_r15": 1,
                    "register_var6": 1,
                    "temp": 1,
                    "unaffected_pointer6": 1,
                    "unaffected_pointer_r15": 1,
                    "unaffected_pointer_variable_4": 1,
                    "unaffected_r15": 2,
                    "unaffected_register15": 1,
                    "unaffected_register_r15": 1,
                    "undefined8_pointer11": 1,
                    "unset_variable_r15": 1
                },
                "unaff_RBP": {
                    "base_pointer": 1,
                    "binary_data": 1,
                    "parameters": 1,
                    "pointer_rbp": 1,
                    "pointer_var10": 1,
                    "pointer_var11": 1,
                    "pointer_var5": 1,
                    "ptr_rbp": 1,
                    "ptr_reg2": 1,
                    "reg_var2": 1,
                    "register_bp": 6,
                    "register_rbp": 2,
                    "register_unaff_rbp": 1,
                    "register_var2": 1,
                    "src": 1,
                    "unaffected_pointer2": 1,
                    "unaffected_pointer_rbp": 1,
                    "unaffected_rbp": 2,
                    "unaffected_register_bp": 2,
                    "undefined8_pointer4": 1,
                    "unset_variable_rbp": 1
                },
                "unaff_RBX": {
                    "current": 1,
                    "current_address": 1,
                    "entry_index": 1,
                    "loop_counter": 1,
                    "pointer_rbx": 1,
                    "pointer_var10": 1,
                    "pointer_var3": 1,
                    "pointer_var9": 1,
                    "ptr_rbx": 1,
                    "ptr_reg1": 1,
                    "reg_var1": 1,
                    "register_bx": 6,
                    "register_rbx": 2,
                    "register_unaff_rbx": 1,
                    "register_var1": 1,
                    "unaffected_pointer1": 1,
                    "unaffected_pointer_rbx": 1,
                    "unaffected_rbx": 2,
                    "unaffected_register_bx": 2,
                    "undefined8_pointer3": 1,
                    "unset_variable_rbx": 1
                },
                "unaff_retaddr": {
                    "register_ret_addr": 1,
                    "register_retaddr": 1,
                    "register_return_address": 2,
                    "register_unaff_retaddr": 1,
                    "ret_addr": 1,
                    "return_address": 3,
                    "return_value": 1,
                    "ulong_ret_addr": 1,
                    "ulong_retaddr": 1,
                    "ulong_var1": 1,
                    "ulong_var2": 5,
                    "ulong_variable": 1,
                    "unaffected_addr": 1,
                    "unaffected_register_return_address": 1,
                    "unaffected_ret_addr": 1,
                    "unaffected_return_address": 5,
                    "unset_variable_retaddr": 1,
                    "unsigned_long_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nvoid process_binary_data_001049c0(void)\n\n{\n  char *char_pointer;\n  code *function_pointer;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 ulong_var;\n  long long_var;\n  undefined8 *pointer_var1;\n  long long_var2;\n  undefined8 *pointer_var2;\n  undefined8 *register_bx;\n  undefined8 *pointer_var3;\n  undefined8 *register_bp;\n  undefined8 *pointer_var3;\n  undefined8 *pointer_var4;\n  undefined8 *register_r8;\n  undefined8 *pointer_var5;\n  undefined8 *register_r9;\n  undefined8 *pointer_var6;\n  undefined8 *pointer_var7;\n  undefined8 *register_r12;\n  undefined8 *register_r13;\n  undefined8 *register_r14;\n  undefined8 *register_r15;\n  bool bool_var;\n  byte byte_var;\n  ulong unaffected_return_address;\n  ulong ulong_var3;\n  undefined8 stack_var1;\n  undefined8 *stack_var2;\n  undefined8 *stack_var3;\n  undefined8 stack_var4;\n  void *stack_var5;\n  undefined8 *stack_var6;\n  \n  byte_var = 0;\n  do {\n    register_bx = (undefined8 *)((long)register_bx + (long)register_r14);\nLAB_001049c3:\n    do {\n      do {\n        register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n        pointer_var7 = register_r12;\n        pointer_var4 = register_bp;\n        if (register_r12 <= register_r13) goto LAB_00104b15;\nLAB_001049cf:\n        pointer_var1 = (undefined8 *)\n                 (**(code **)(register_bp[1] + 0x270))\n                           (register_bp,unaffected_return_address & 0xffffffff,register_r13,register_r15);\n        pointer_var3 = register_bp;\n        pointer_var4 = register_r13;\n        pointer_var7 = register_r15;\n        if (pointer_var1 == (undefined8 *)0x0) goto LAB_00102eb0;\n        char_pointer = (char *)pointer_var1[1];\n        if (((char_pointer == (char *)0x0) || (*char_pointer != '_')) || (char_pointer[1] != '_')) {\nLAB_00104a03:\n          if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uint_var = (uint)(pointer_var1[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uint_var != 0) goto LAB_00104a2d;\n          register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n          pointer_var7 = register_r12;\n          pointer_var4 = register_bp;\n          if (register_r12 <= register_r13) {\nLAB_00104b15:\n            register_bx = (undefined8 *)((long)register_bx - (long)stack_var3);\n            if (register_r14 == (undefined8 *)0x8) {\n              long_var2 = pointer_var4[1];\n              pointer_var3 = (undefined8 *)((long)register_bx + 7);\n              if (-1 < (long)register_bx) {\n                pointer_var3 = register_bx;\n              }\n              register_r8 = (undefined8 *)(ulong)DAT_0010b800;\n              function_pointer = *(code **)(long_var2 + 0x208);\n              pointer_var3 = (undefined8 *)((long)pointer_var3 >> 3);\n            }\n            else {\n              pointer_var3 = (undefined8 *)((long)register_bx / (long)register_r14);\n              long_var2 = pointer_var4[1];\n              function_pointer = *(code **)(long_var2 + 0x208);\n            }\n            register_bp = pointer_var4;\n            if (DAT_0010b800 == 0) {\n              DAT_0010b778 = DAT_0010b80c != 0;\n              DAT_0010b780 = pointer_var4;\n              DAT_0010b770 = (undefined8 *)(*function_pointer)(pointer_var4);\n              DAT_0010b768 = (undefined8 *)(**(code **)(pointer_var4[1] + 0x208))(pointer_var4);\n              register_bx = stack_var6;\n              if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n                FUN_00106530(*pointer_var4);\n                pointer_var3 = register_r15;\n                goto LAB_00102d8e;\n              }\n              register_r12 = (undefined8 *)(ulong)stack_var4._4_4_;\n              if (DAT_0010b7f8 != 0) {\n                ulong_var3 = (ulong)(DAT_0010b80c != 0);\n                qsort(stack_var6,(size_t)pointer_var3,(size_t)register_r12,FUN_00102fd2);\n                pointer_var7 = (undefined8 *)xmalloc((long)pointer_var3 << 4);\n                pointer_var5 = DAT_0010b770;\n                register_bp = DAT_0010b768;\n                register_r14 = (undefined8 *)((long)pointer_var3 * (long)register_r12 + (long)register_bx);\n                pointer_var1 = DAT_0010b770;\n                register_r9 = DAT_0010b768;\n                if (register_r14 <= register_bx) goto LAB_00102ec2;\n                pointer_var3 = (undefined8 *)\n                          (**(code **)(pointer_var4[1] + 0x270))(pointer_var4,ulong_var3 & 0xffffffff,register_bx);\n                pointer_var3 = register_bx;\n                register_r8 = register_r12;\n                stack_var2 = pointer_var7;\n                if (pointer_var3 == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(stack_var6,(size_t)pointer_var3,(size_t)register_r12,\n                    (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2])\n              ;\n              long_var2 = pointer_var4[1];\n            }\n            pointer_var3 = (undefined8 *)0x0;\n            do {\n              pointer_var4 = stack_var6;\n              pointer_var1 = (undefined8 *)(ulong)DAT_0010b7f8;\n              register_r14 = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n              if (DAT_0010b7f8 != 0) {\n                pointer_var7 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n                if (pointer_var7 == (undefined8 *)0x0) goto LAB_00102ed2;\n                register_bx = pointer_var3 + (long)pointer_var3 * 2;\n                pointer_var3 = pointer_var3;\n                do {\n                  if (register_bx <= pointer_var3) {\nLAB_00104c75:\n                    if (stack_var5 == (void *)0x0) {\n                      free(stack_var6);\n                      free(pointer_var3);\n                      return;\n                    }\n                    free(stack_var5);\n                    free(stack_var6);\n                    free(pointer_var3);\n                    return;\n                  }\n                  pointer_var1 = pointer_var7;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,*pointer_var3);\n                  if (long_var2 == 0) {\n                    FUN_00106530(*register_bp,0);\nLAB_00102ed2:\n                    pointer_var4 = (undefined8 *)*register_bp;\n                    FUN_00106530();\n                    pointer_var5 = register_r8;\n                    pointer_var6 = register_r9;\n                    goto LAB_00102edb;\n                  }\n                  pointer_var4 = pointer_var3 + 1;\n                  pointer_var3 = pointer_var3 + 2;\n                  FUN_00105110(register_bp,long_var2,*pointer_var4,stack_var1);\n                } while( true );\n              }\n              register_r12 = (undefined8 *)(ulong)stack_var4._4_4_;\n              register_r15 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n              if (register_r15 == (undefined8 *)0x0) {\n                FUN_00106530(*register_bp);\n                pointer_var4 = register_r12;\n                if (DAT_0010b80c == 0) {\n                  long_var2 = (**(code **)(register_bp[1] + 0x350))(register_bp);\n                  pointer_var3 = stack_var6;\n                  pointer_var7 = register_r12;\n                  if (long_var2 < 1) {\n                    pointer_var1 = (undefined8 *)0x0;\n                    register_bx = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    register_bx = (undefined8 *)xmalloc();\n                    pointer_var1 = (undefined8 *)(**(code **)(register_bp[1] + 0x358))(register_bp,register_bx);\n                    pointer_var4 = pointer_var7;\n                    if ((long)pointer_var1 < 0) {\n                      pointer_var4 = (undefined8 *)*register_bp;\n                      pointer_var3 = (undefined8 *)FUN_00106530(pointer_var4,pointer_var7);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  pointer_var1 = register_r12;\n                  register_bx = stack_var6;\n                  pointer_var3 = (undefined8 *)0x0;\n                  pointer_var7 = (undefined8 *)0x0;\n                }\n                register_r9 = &stack0x00000040;\n                register_r8 = register_bx;\n                long_var2 = (**(code **)(register_bp[1] + 0x360))(register_bp,pointer_var7,pointer_var3,pointer_var1);\n                register_r12 = pointer_var4;\n                if (0 < long_var2) {\n                  register_r12 = (undefined8 *)((long)pointer_var4 + long_var2);\n                  stack_var6 = (undefined8 *)xrealloc(stack_var6);\n                  long_var = 0;\n                  do {\n                    stack_var6[(long)((long)pointer_var4 + long_var)] =\n                         (void *)(long_var * 0x30 + (long)stack_var5);\n                    long_var = long_var + 1;\n                  } while (long_var2 != long_var);\n                  stack_var6[(long)((long)pointer_var4 + long_var2)] = 0;\n                }\n                if ((DAT_0010b80c == 0) && (register_bx != (undefined8 *)0x0)) {\n                  free(register_bx);\n                }\n                if ((*(byte *)((long)register_bp + 0x4a) & 0x10) != 0) {\n                  register_bx = (undefined8 *)*register_bp;\n                  DAT_0010b230 = '\\0';\n                  ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  FUN_00106400(ulong_var);\n                }\n                register_r14 = (undefined8 *)(ulong)stack_var4._4_4_;\n                bool_var = DAT_0010b80c != 0;\n                pointer_var3 = (undefined8 *)(ulong)bool_var;\n                pointer_var1 = stack_var6;\n                stack_var3 = stack_var6;\n                register_r15 = (undefined8 *)(**(code **)(register_bp[1] + 0x208))(register_bp);\n                if (register_r15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                pointer_var3 = (undefined8 *)((long)pointer_var3 * (long)register_r12 + (long)pointer_var4);\n                register_bx = pointer_var4;\n                while( true ) {\n                  if (pointer_var3 <= register_bx) goto LAB_00104c75;\n                  pointer_var1 = register_r15;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,register_bx);\n                  if (long_var2 == 0) break;\n                  register_bx = (undefined8 *)((long)register_bx + (long)register_r12);\n                  FUN_00105110(register_bp,long_var2,0,stack_var1);\n                }\n                FUN_00106530(*register_bp,0);\n              }\n              FUN_00106530(*register_bp);\n              pointer_var4 = register_bp;\n              pointer_var7 = register_r15;\nLAB_00102eb0:\n              FUN_00106530(*pointer_var3);\nLAB_00102eb9:\n              FUN_00106530(*pointer_var4);\nLAB_00102ec2:\n              pointer_var3 = (undefined8 *)0x0;\n              pointer_var3 = register_bx;\n              register_r8 = register_r12;\n              pointer_var5 = pointer_var1;\n              register_bp = register_r9;\n              stack_var2 = pointer_var7;\nLAB_00104e35:\n              while (register_r9 = pointer_var5, pointer_var3 < register_r14) {\n                register_bx = (undefined8 *)((long)pointer_var3 + (long)register_r8);\n                if (register_bx < register_r14) {\n                  pointer_var1 = register_bp;\n                  pointer_var5 = register_r8;\n                  pointer_var6 = register_r9;\n                  pointer_var2 = (undefined8 *)(**(code **)(pointer_var4[1] + 0x270))();\n                  if (pointer_var2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    register_r9 = pointer_var6;\n                    register_r8 = pointer_var5;\n                    pointer_var4 = (undefined8 *)*pointer_var4;\n                    pointer_var2 = (undefined8 *)FUN_00106530();\n                  }\n                  else {\n                    pointer_var1 = (undefined8 *)pointer_var3[4];\n                    if ((*(uint *)(pointer_var3 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  long_var2 = pointer_var3[2];\nLAB_00102ee7:\n                  if (pointer_var1 == (undefined8 *)pointer_var2[4]) {\n                    long_var2 = pointer_var2[2] - long_var2;\n                    pointer_var5 = register_bp;\n                    pointer_var6 = pointer_var3;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  long_var2 = pointer_var1[8] - long_var2;\n                  pointer_var5 = register_bp;\n                  pointer_var6 = pointer_var3;\n                }\n                else {\n                  pointer_var1 = (undefined8 *)pointer_var3[4];\n                  if ((*(uint *)(pointer_var3 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    long_var2 = pointer_var3[2];\n                    pointer_var2 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  pointer_var2 = (undefined8 *)0x0;\nLAB_00104e95:\n                  pointer_var5 = register_bp;\n                  pointer_var6 = pointer_var3;\n                  if (*(int *)(pointer_var4[1] + 8) == 5) {\n                    long_var2 = pointer_var3[7];\n                  }\n                  else {\n                    long_var2 = pointer_var3[2];\n                    if ((*(byte *)((long)pointer_var1 + 0x25) & 0x10) == 0) {\n                      if (register_bx < register_r14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                pointer_var3 = pointer_var2;\n                pointer_var3 = register_bx;\n                register_bp = register_r9;\n                if (long_var2 != 0) {\n                  *pointer_var7 = pointer_var6;\n                  pointer_var7[1] = long_var2;\n                  pointer_var7 = pointer_var7 + 2;\n                }\n              }\n              pointer_var3 = (undefined8 *)((long)pointer_var7 - (long)stack_var2 >> 4);\n              qsort(stack_var2,(size_t)pointer_var3,0x10,FUN_00103533);\n              long_var2 = pointer_var4[1];\n              register_bx = pointer_var3;\n              register_bp = pointer_var4;\n              pointer_var3 = stack_var2;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        int_var = strcmp(char_pointer + (char_pointer[2] == '_'),\"__gnu_lto_slim\");\n        stack_var2 = pointer_var1;\n        if (int_var == 0) {\n          if (DAT_0010b230 != '\\0') {\n            stack_var2 = (undefined8 *)*register_bp;\n            DAT_0010b230 = '\\0';\n            ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            FUN_00106400(ulong_var,stack_var2);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 == 0) {\n          if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n          uint_var = (*(uint *)(pointer_var1 + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(pointer_var1 + 3) & 0x800082) == 0) && (pointer_var1[4] != 0x10c2a8)) &&\n           ((*(byte *)(pointer_var1[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c != 0) {\n          if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nFUN_00104d5b:\n          if ((pointer_var1[4] != 0x10c2a8) && (pointer_var1[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(pointer_var1 + 3) & 4) != 0);\n      if (DAT_0010b7f8 != 0) goto FUN_00104d5b;\nLAB_00104a53:\n      register_r9 = (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 == 0) {\n        char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n        if (char_var != '\\0') {\n          FUN_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (pointer_var1[4] == 0x10c2a8);\nLAB_00104cba:\n    char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n    if (char_var != '\\0') {\n      FUN_00102c19();\n      return;\n    }\nLAB_00104a7b:\n    if (register_bx != register_r13) {\n      if (register_r14 == (undefined8 *)0x8) {\n        *register_bx = *register_r13;\n        process_binary_data_001049c0();\n        return;\n      }\n      for (; register_r14 != (undefined8 *)0x0; register_r14 = (undefined8 *)((long)register_r14 + -1)) {\n        *(undefined *)register_bx = *(undefined *)register_r13;\n        register_r13 = (undefined8 *)((long)register_r13 + (ulong)byte_var * -2 + 1);\n        register_bx = (undefined8 *)((long)register_bx + (ulong)byte_var * -2 + 1);\n      }\n      process_binary_data_001049c0();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  pointer_var7 = (undefined8 *)((long)register_r12 * (long)register_r14);\n  register_r12 = (undefined8 *)((long)stack_var3 + (long)pointer_var7);\n  register_bx = stack_var3;\n  pointer_var4 = register_bp;\n  if (stack_var3 < register_r12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaffected_return_address = (ulong)bool_var;\n  register_r13 = stack_var3;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_binary_data_001049c0",
            "entrypoint": "0x001049c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001049c0": "process_binary_data_001049c0",
                "__ptr": "pointer_var3",
                "bVar16": "bool_var",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "in_R8": "register_r8",
                "in_R9": "register_r9",
                "in_stack_00000008": "stack_var1",
                "in_stack_00000010": "stack_var2",
                "in_stack_00000018": "stack_var3",
                "in_stack_00000038": "stack_var4",
                "in_stack_00000040": "stack_var5",
                "in_stack_00000048": "stack_var6",
                "lVar7": "long_var",
                "lVar9": "long_var2",
                "pcVar1": "char_pointer",
                "pcVar2": "function_pointer",
                "puVar10": "pointer_var2",
                "puVar11": "pointer_var3",
                "puVar12": "pointer_var4",
                "puVar13": "pointer_var5",
                "puVar14": "pointer_var6",
                "puVar15": "pointer_var7",
                "puVar8": "pointer_var1",
                "uVar18": "ulong_var3",
                "uVar5": "uint_var",
                "uVar6": "ulong_var",
                "unaff_R12": "register_r12",
                "unaff_R13": "register_r13",
                "unaff_R14": "register_r14",
                "unaff_R15": "register_r15",
                "unaff_RBP": "register_bp",
                "unaff_RBX": "register_bx",
                "unaff_retaddr": "unaffected_return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104d5b": {
            "additional_data": {
                "DAT_0010b768": {
                    "lto_object_pointer": 1
                },
                "DAT_0010b770": {
                    "lto_object_data": 1
                },
                "DAT_0010b7f8": {
                    "use_plugin": 1
                },
                "DAT_0010b800": {
                    "size_divisor": 1
                },
                "DAT_0010b80c": {
                    "is_plugin_needed": 1
                },
                "FUN_00102c19": {
                    "function_name_9": 1,
                    "handle_error": 2
                },
                "FUN_00102fd2": {
                    "function_name_12": 1,
                    "process_value": 1
                },
                "FUN_00103533": {
                    "calculate_value": 2,
                    "function_name_5": 1
                },
                "FUN_001049c0": {
                    "finalize_operation": 1,
                    "function_name_7": 1
                },
                "FUN_00104d5b": {
                    "analyze_binary": 1,
                    "decompile_and_improve": 1,
                    "decompiled_function": 2,
                    "process_binary_function": 1,
                    "process_function": 1,
                    "process_lto_object": 1
                },
                "FUN_00105110": {
                    "function_name_1": 1,
                    "perform_operation": 1,
                    "process_data": 1
                },
                "FUN_00106400": {
                    "function_name_8": 1,
                    "print_error": 1,
                    "print_error_message": 1
                },
                "FUN_00106530": {
                    "cleanup": 1,
                    "cleanup_resources": 1,
                    "function_name_11": 1
                },
                "PTR_FUN_0010acc0": {
                    "comparison_function": 1
                },
                "__ptr": {
                    "output_array_2": 1,
                    "plugin_result": 1,
                    "pointer": 2,
                    "pointer5": 1,
                    "pointer_variable": 1,
                    "pointer_variable2": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_3": 1,
                    "ptr": 3,
                    "ptr_to_free3": 1,
                    "ptr_to_ulong_5": 1,
                    "ptr_to_undefined8": 1,
                    "temp_array2": 1,
                    "undefined8_ptr_variable2": 1
                },
                "array_end": {
                    "array_end": 1
                },
                "array_start": {
                    "array_start": 1
                },
                "bVar16": {
                    "bool_var": 10,
                    "bool_var16": 1,
                    "boolean": 1,
                    "boolean_flag": 1,
                    "boolean_value": 1,
                    "boolean_variable": 4
                },
                "bVar17": {
                    "bit_value": 1,
                    "byte": 1,
                    "byte_flag": 1,
                    "byte_value": 1,
                    "byte_var": 10,
                    "byte_var17": 1,
                    "byte_variable": 4,
                    "temp_bool": 1,
                    "temp_variable": 1,
                    "var17": 1
                },
                "cVar3": {
                    "char": 1,
                    "char_var": 11,
                    "char_var3": 1,
                    "char_variable": 2,
                    "character": 3,
                    "character_variable": 3,
                    "temp_char": 1
                },
                "char": {
                    "character": 1
                },
                "check_result": {
                    "check_result": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "compar_fn": {
                    "compar_fn": 1
                },
                "current_entry": {
                    "current_entry": 1
                },
                "current_ptr": {
                    "current_ptr": 1
                },
                "dcgettext": {
                    "function_name_2": 1,
                    "get_msg": 1,
                    "get_translated_string": 1
                },
                "entry_size": {
                    "entry_size": 1
                },
                "free": {
                    "free_memory": 1,
                    "function_name_6": 1,
                    "release_memory": 1
                },
                "function_ptr": {
                    "function_ptr": 1
                },
                "iVar4": {
                    "comparison_result": 2,
                    "int": 1,
                    "int_var": 10,
                    "int_var4": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "integer_variable": 5,
                    "result": 1,
                    "strcmp_result": 1,
                    "var22": 1
                },
                "in_R8": {
                    "idx4": 1,
                    "in_r8": 1,
                    "input_register8": 2,
                    "input_register_8": 1,
                    "input_var": 1,
                    "nmemb": 1,
                    "param_1": 1,
                    "ptr_r8": 1,
                    "ptr_to_ulong_9": 1,
                    "undefined8_ptr_param2": 1
                },
                "in_R9": {
                    "compar_fn": 1,
                    "idx5": 1,
                    "in_r9": 1,
                    "input_register9": 2,
                    "input_register_9": 1,
                    "input_var_2": 1,
                    "param_2": 1,
                    "ptr_r9": 1,
                    "ptr_to_ulong_11": 1,
                    "undefined8_ptr_param3": 1
                },
                "in_RAX": {
                    "register_rax": 1,
                    "size": 1
                },
                "in_RBP": {
                    "frame_pointer": 1,
                    "ptr_rbp": 1,
                    "register_rbp": 1
                },
                "in_RBX": {
                    "ptr_rbx": 1,
                    "register_rbx": 1,
                    "temp_pointer": 1
                },
                "in_RCX": {
                    "array_pointer": 1,
                    "current_pointer": 1,
                    "in_rcx": 2,
                    "input_array": 3,
                    "input_pointer": 1,
                    "input_rcx": 2,
                    "input_register": 1,
                    "input_register_cx": 1,
                    "object": 1,
                    "object_array": 1,
                    "ptr_in_rcx": 1,
                    "ptr_rcx": 1,
                    "ptr_to_ulong_3": 1,
                    "rcx": 1,
                    "register_rcx": 1,
                    "undefined8_ptr_param": 1
                },
                "in_RDI": {
                    "register_rdi": 1
                },
                "in_RSI": {
                    "register_rsi": 1
                },
                "in_stack_00000038": {
                    "array_size": 1,
                    "input_stack": 1,
                    "input_stack_00000038": 1,
                    "input_stack_38": 1,
                    "input_stack_variable38": 1,
                    "param9": 1,
                    "param_4": 1,
                    "stack_param": 1,
                    "stack_var": 1,
                    "stack_var0x38": 1,
                    "stack_var38": 1,
                    "stack_variable_38": 1,
                    "temp_stack_var": 1,
                    "undefined8_var2": 1,
                    "var_in_stack_00000038": 1
                },
                "int": {
                    "integer": 1
                },
                "lVar10": {
                    "long_var10": 1,
                    "long_variable3": 1,
                    "long_variable_10": 1,
                    "loop_var2": 1
                },
                "lVar11": {
                    "long_var11": 1
                },
                "lVar19": {
                    "long_variable": 1
                },
                "lVar8": {
                    "l_var8": 1,
                    "long": 1,
                    "long_value": 1,
                    "long_var": 6,
                    "long_var1": 3,
                    "long_var8": 2,
                    "long_var_1": 1,
                    "long_variable": 4,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "var20": 1
                },
                "lVar9": {
                    "l_var9": 1,
                    "long": 1,
                    "long_value_2": 1,
                    "long_var2": 6,
                    "long_var9": 2,
                    "long_var_2": 3,
                    "long_variable2": 3,
                    "long_variable_2": 1,
                    "long_variable_9": 1,
                    "loop_var": 1,
                    "result_counter": 1,
                    "temp_var3": 1,
                    "tmp_var": 1,
                    "var26": 1
                },
                "long": {
                    "long": 1
                },
                "nmemb": {
                    "nmemb": 1
                },
                "param_1": {
                    "param1": 1,
                    "param_1": 1,
                    "parameter1": 1
                },
                "param_13": {
                    "allocated_memory": 1,
                    "array10": 1,
                    "lto_ptr": 1,
                    "memory_to_free": 1,
                    "param13": 4,
                    "param_1": 1,
                    "param_13": 2,
                    "param_var13": 2,
                    "param_void_ptr": 1,
                    "parameter13": 3,
                    "parameter_13": 3,
                    "parameter_thirteen": 1,
                    "ptr_parameter": 1,
                    "ptr_to_free1": 1,
                    "result_var1": 1,
                    "void_ptr": 1
                },
                "param_14": {
                    "array11": 1,
                    "data_parameter": 1,
                    "function_array_copy": 1,
                    "generated_array": 1,
                    "list_of_pointers": 1,
                    "param14": 4,
                    "param_14": 2,
                    "param_2": 1,
                    "param_ptr_var_3": 1,
                    "param_var14": 2,
                    "parameter14": 3,
                    "parameter_14": 3,
                    "parameter_fourteen": 1,
                    "ptr_to_free2": 1,
                    "result_var2": 1,
                    "undefined8_ptr_param6": 1
                },
                "param_2": {
                    "param2": 1,
                    "param_2": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "param_3": 1,
                    "parameter3": 1
                },
                "param_4": {
                    "comparison_function": 1,
                    "param_4": 1,
                    "parameter4": 1
                },
                "param_7": {
                    "additional_argument": 1,
                    "param7": 5,
                    "param_3": 1,
                    "param_7": 4,
                    "param_ulong_var": 1,
                    "param_var7": 2,
                    "parameter7": 4,
                    "parameter_7": 3,
                    "parameter_seven": 1,
                    "temp_param": 1,
                    "undefined8_var": 1
                },
                "param_8": {
                    "array": 1,
                    "array_start": 1,
                    "array_to_sort": 1,
                    "idx6": 1,
                    "input_array": 2,
                    "object_array": 1,
                    "param8": 4,
                    "param_8": 1,
                    "param_ptr_var_1": 1,
                    "param_var8": 2,
                    "parameter8": 4,
                    "parameter_8": 3,
                    "parameter_eight": 1,
                    "sorted_function_array": 1,
                    "sorted_pointers": 1,
                    "temp_array": 1,
                    "undefined8_ptr_param4": 1
                },
                "param_9": {
                    "array": 2,
                    "array_to_compare": 1,
                    "element_count": 1,
                    "function_array": 1,
                    "input_array_size": 1,
                    "object_size": 1,
                    "output_array": 1,
                    "param9": 4,
                    "param_9": 1,
                    "param_ptr_var_2": 1,
                    "param_var9": 2,
                    "parameter9": 4,
                    "parameter_9": 3,
                    "parameter_nine": 1,
                    "size_of_pointers": 1,
                    "undefined8_ptr_param5": 1
                },
                "pbVar1": {
                    "ptr_to_char_1": 1
                },
                "pcVar1": {
                    "char_pointer": 3,
                    "char_ptr": 2,
                    "char_ptr_1": 1,
                    "character_pointer": 1,
                    "character_pointer1": 1,
                    "function_name": 1,
                    "pointer1": 1,
                    "pointer_var1": 1,
                    "ptr": 1,
                    "ptr_char_var1": 1,
                    "ptr_to_char": 1,
                    "str1": 1,
                    "str_ptr": 2,
                    "string": 1,
                    "string_pointer": 2
                },
                "pcVar2": {
                    "code_pointer": 2,
                    "code_ptr": 2,
                    "fnc_pointer": 1,
                    "func_ptr": 1,
                    "function_pointer": 7,
                    "function_ptr": 3,
                    "pointer2": 1,
                    "pointer_var2": 1,
                    "ptr_code_var2": 1,
                    "ptr_to_code": 1,
                    "ptr_to_func": 1
                },
                "ptrVar1": {
                    "ptr_var1": 1
                },
                "ptrVar2": {
                    "ptr_var2": 1
                },
                "ptrVar3": {
                    "ptr_var3": 1
                },
                "puVar10": {
                    "next_pointer": 1,
                    "output_array": 1,
                    "pointer4": 1,
                    "pointer_to_unsigned_long_2": 1,
                    "pointer_var2": 1,
                    "pointer_variable2": 1,
                    "pointer_variable_2": 1,
                    "ptr3": 1,
                    "ptr_to_uint641": 1,
                    "ptr_to_ulong_2": 1,
                    "ptr_uint_var10": 1,
                    "ptr_var": 1,
                    "result": 1,
                    "temp_array4": 1,
                    "temp_pointer4": 1,
                    "temp_ptr5": 1,
                    "temp_var1": 1,
                    "undefined8_ptr2": 1
                },
                "puVar11": {
                    "current_pointer": 1,
                    "output_array": 1,
                    "plugin_data": 1,
                    "pointer6": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_unsigned_long_3": 1,
                    "pointer_var3": 1,
                    "pointer_var_2": 1,
                    "pointer_variable3": 1,
                    "pointer_variable4": 1,
                    "pointer_variable_11": 1,
                    "pointer_variable_4": 1,
                    "ptr5": 1,
                    "ptr_2": 1,
                    "ptr_to_ulong_6": 1,
                    "ptr_to_undefined8_1": 1,
                    "ptr_var": 1,
                    "temp_pointer3": 1,
                    "temp_ptr4": 1,
                    "temp_var2": 1,
                    "temp_variable3": 1,
                    "unaff_ptr": 1,
                    "undefined8_ptr2": 1
                },
                "puVar12": {
                    "function_array": 1,
                    "function_data": 1,
                    "function_ptr": 1,
                    "pointer_to_variable": 1,
                    "pointer_var12": 1,
                    "pointer_var4": 1,
                    "pointer_var_4": 1,
                    "pointer_variable4": 1,
                    "pointer_variable5": 1,
                    "pointer_variable_12": 1,
                    "pointer_variable_5": 1,
                    "ptr5": 1,
                    "ptr_3": 1,
                    "ptr_to_ulong_8": 1,
                    "ptr_to_undefined8_2": 1,
                    "ptr_var": 1,
                    "start_ptr": 1,
                    "temp_array": 1,
                    "temp_pointer": 1,
                    "temp_ptr3": 1,
                    "temp_variable2": 1,
                    "undefined8_ptr_variable4": 1
                },
                "puVar13": {
                    "additional_argument": 1,
                    "compar_fn": 1,
                    "first_func_ptr": 1,
                    "param_16": 1,
                    "pointer7": 1,
                    "pointer_to_pointer": 1,
                    "pointer_var13": 1,
                    "pointer_var5": 1,
                    "pointer_var_5": 1,
                    "pointer_variable5": 1,
                    "pointer_variable_13": 1,
                    "pointer_variable_6": 1,
                    "ptr6": 1,
                    "ptr_to_ulong_10": 1,
                    "ptr_to_undefined8_3": 1,
                    "ptr_var": 1,
                    "temp_var3": 1,
                    "temp_variable5": 1,
                    "undefined8_ptr_variable5": 1
                },
                "puVar14": {
                    "current_memory": 1,
                    "param_17": 1,
                    "pointer8": 1,
                    "pointer_to_pointer": 1,
                    "pointer_var14": 1,
                    "pointer_var6": 1,
                    "pointer_var_6": 1,
                    "pointer_variable6": 1,
                    "pointer_variable_14": 1,
                    "pointer_variable_7": 1,
                    "ptr7": 1,
                    "ptr_to_ulong_12": 1,
                    "ptr_to_undefined8_4": 1,
                    "ptr_var": 1,
                    "temp_var4": 1,
                    "temp_variable": 1,
                    "temp_variable4": 1,
                    "undefined8_ptr_variable6": 1
                },
                "puVar15": {
                    "current_allocation": 1,
                    "end_ptr": 1,
                    "pointer9": 1,
                    "pointer_to_pointer": 1,
                    "pointer_var15": 1,
                    "pointer_var7": 1,
                    "pointer_var_7": 1,
                    "pointer_variable7": 1,
                    "pointer_variable_15": 1,
                    "pointer_variable_8": 1,
                    "ptr8": 1,
                    "ptr_to_ulong_13": 1,
                    "ptr_to_undefined8_5": 1,
                    "ptr_var": 1,
                    "pu_var15": 1,
                    "temp_array3": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 1,
                    "temp_var5": 1,
                    "temp_variable": 1,
                    "temp_variable1": 1,
                    "undefined8_ptr_variable7": 1
                },
                "puVar7": {
                    "function_result": 1,
                    "pointer3": 1,
                    "pointer_to_unsigned_long": 2,
                    "pointer_var": 2,
                    "pointer_var7": 1,
                    "pointer_variable": 5,
                    "ptr2": 1,
                    "ptr_to_uint64": 1,
                    "ptr_to_ulong_1": 1,
                    "ptr_uint_var7": 1,
                    "ptr_var": 2,
                    "pu_var7": 1,
                    "temp": 1,
                    "temp_pointer5": 1,
                    "temp_ptr6": 1,
                    "undefined8_ptr": 2
                },
                "qsort": {
                    "function_name_3": 1,
                    "sort_array": 1,
                    "sort_data": 1
                },
                "result": {
                    "result": 1
                },
                "s": {
                    "s1": 1
                },
                "s1": {
                    "s1": 1
                },
                "s2": {
                    "s2": 1
                },
                "size": {
                    "size": 1
                },
                "strcmp": {
                    "compare_strings": 2,
                    "function_name_10": 1
                },
                "temp_variable": {
                    "temp_variable": 1
                },
                "uVar18": {
                    "flag2": 1,
                    "temp_var2": 1,
                    "u_var": 1,
                    "u_var18": 1,
                    "uint64_var2": 2,
                    "uint_var18": 1,
                    "uint_var2": 1,
                    "ulong_var": 2,
                    "ulong_var18": 1,
                    "ulong_var2": 2,
                    "ulong_var_2": 1,
                    "ulong_var_3": 1,
                    "unsigned_long": 1,
                    "unsigned_long_value": 1,
                    "unsigned_var3": 1,
                    "unsigned_variable3": 2,
                    "unsigned_variable_18": 1,
                    "unsigned_variable_2": 1,
                    "var18": 1
                },
                "uVar5": {
                    "check_result": 1,
                    "comparison_flag": 1,
                    "flag": 1,
                    "uint_var": 9,
                    "uint_var5": 1,
                    "uint_variable": 1,
                    "unsigned_int": 1,
                    "unsigned_int_var": 1,
                    "unsigned_integer": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 4,
                    "var23": 1
                },
                "uVar6": {
                    "translation_result": 1,
                    "u_var6": 1,
                    "uint64_var": 3,
                    "uint_var6": 1,
                    "ulong_var": 4,
                    "undefined8_var": 2,
                    "undefined8_variable": 1,
                    "undefined_variable": 1,
                    "unsigned_long": 2,
                    "unsigned_long_var": 1,
                    "unsigned_var2": 1,
                    "unsigned_variable2": 2,
                    "unsigned_variable_6": 1,
                    "var24": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "unaff_R12": {
                    "accumulated_r12": 1,
                    "array_end": 1,
                    "idx1": 1,
                    "iteration_counter1": 1,
                    "num_objects": 1,
                    "object_pointer": 1,
                    "pointer_r12": 1,
                    "pointer_var_8": 1,
                    "pointer_var_r12": 1,
                    "ptr_to_ulong_14": 1,
                    "ptr_unaff12": 1,
                    "ptr_unaff_r12": 1,
                    "reg_r12": 1,
                    "register_r12": 1,
                    "total_pointers": 1,
                    "unaff_r12": 2,
                    "unaff_register_r12": 1,
                    "unaffected_r12": 3,
                    "unaffected_register12": 2,
                    "unaffected_register_12": 1,
                    "undefined8_ptr_variable8": 1
                },
                "unaff_R13": {
                    "accumulated_r13": 1,
                    "current_element": 2,
                    "current_function": 1,
                    "current_ptr": 1,
                    "element_ptr": 1,
                    "idx2": 1,
                    "iteration_counter2": 1,
                    "pointer_r13": 1,
                    "pointer_var_9": 1,
                    "pointer_var_r13": 1,
                    "ptr_to_ulong_15": 1,
                    "ptr_unaff13": 1,
                    "ptr_unaff_r13": 1,
                    "reg_r13": 1,
                    "register_r13": 1,
                    "temp_pointer": 1,
                    "unaff_r13": 2,
                    "unaff_register_r13": 1,
                    "unaffected_r13": 3,
                    "unaffected_register13": 2,
                    "unaffected_register_13": 1,
                    "undefined8_ptr_variable9": 1
                },
                "unaff_R14": {
                    "array_length": 1,
                    "element_pointer": 1,
                    "element_size": 2,
                    "entry_size": 1,
                    "function_index": 1,
                    "iteration_counter3": 1,
                    "pointer_increment": 1,
                    "pointer_r14": 1,
                    "pointer_var_10": 1,
                    "pointer_var_r14": 1,
                    "ptr_to_ulong_16": 1,
                    "ptr_unaff14": 1,
                    "ptr_unaff_r14": 1,
                    "pu_var14": 1,
                    "reg_r14": 1,
                    "register_r14": 1,
                    "unaff_r14": 2,
                    "unaff_register_r14": 1,
                    "unaffected_r14": 3,
                    "unaffected_register14": 2,
                    "unaffected_register_14": 1,
                    "undefined8_ptr_variable10": 1
                },
                "unaff_R15": {
                    "array4": 1,
                    "current_allocation": 1,
                    "iteration_counter4": 1,
                    "object_data": 1,
                    "output_array": 1,
                    "pointer_r15": 1,
                    "pointer_var_11": 1,
                    "pointer_var_r15": 1,
                    "ptr_to_ulong_17": 1,
                    "ptr_unaff15": 1,
                    "ptr_unaff_r15": 1,
                    "pu_var11": 1,
                    "reg_r15": 1,
                    "register_r15": 1,
                    "result_array": 1,
                    "temp_ptr": 1,
                    "temp_variable": 1,
                    "unaff_r15": 2,
                    "unaff_register_r15": 1,
                    "unaffected_r15": 3,
                    "unaffected_register15": 2,
                    "unaffected_register_15": 1,
                    "undefined8_ptr_variable11": 1
                },
                "unaff_RBP": {
                    "array5": 1,
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "function_data": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "pointer_rbp": 1,
                    "pointer_var_3": 1,
                    "pointer_var_rbp": 1,
                    "ptr_to_ulong_7": 1,
                    "ptr_unaff_rbp": 2,
                    "reg_rbp": 1,
                    "register_bp": 1,
                    "unaff_rbp": 2,
                    "unaff_register_rbp": 1,
                    "unaffected_rbp": 2,
                    "unaffected_register_bp": 2,
                    "undefined8_ptr_variable3": 1
                },
                "unaff_RBX": {
                    "array6": 1,
                    "array_ptr": 1,
                    "current_entry": 1,
                    "current_memory": 1,
                    "end_pointer": 1,
                    "object_ptr": 1,
                    "pointer_rbx": 1,
                    "pointer_var_rbx": 1,
                    "ptr": 1,
                    "ptr_to_ulong_4": 1,
                    "ptr_unaff_rbx": 1,
                    "reg_rbx": 1,
                    "register_bx": 1,
                    "unaff_rbx": 2,
                    "unaff_register_rbx": 1,
                    "unaffected_rbx": 3,
                    "unaffected_register_bx": 3,
                    "undefined8_ptr_variable": 1
                },
                "unaff_retaddr": {
                    "b_var16": 1,
                    "reg_retaddr": 1,
                    "register_return_address": 1,
                    "ret_addr_var": 1,
                    "return_address": 2,
                    "return_value": 3,
                    "temp_retaddr": 1,
                    "ulong_ret_addr": 1,
                    "ulong_unaff_retaddr": 1,
                    "ulong_var": 2,
                    "ulong_var_2": 1,
                    "unaff_ret_addr": 1,
                    "unaff_retaddr": 2,
                    "unaff_return_address": 1,
                    "unaffected_ret_addr": 1,
                    "unaffected_return_address": 5
                },
                "undefined8": {
                    "object": 1
                },
                "v": {
                    "temp_variable": 1
                },
                "void": {
                    "return_type": 1
                },
                "xmalloc": {
                    "allocate_memory": 2,
                    "function_name_4": 1
                },
                "xrealloc": {
                    "function_name_13": 1,
                    "reallocate_memory": 1,
                    "resize_memory": 1
                }
            },
            "called": [
                "FUN_00105110",
                "dcgettext",
                "qsort",
                "xmalloc",
                "FUN_00103533",
                "free",
                "FUN_001049c0",
                "FUN_00106400",
                "FUN_00102c19",
                "FUN_00104d5b",
                "strcmp",
                "FUN_00106530",
                "FUN_00102fd2",
                "xrealloc"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nreturn_type process_binary_function_00104d5b(return_type)\n\n{\n  character *char_pointer;\n  function_pointer *function_pointer;\n  character char_var;\n  integer int_var;\n  unsigned_integer uint_var;\n  object ulong_var;\n  object *pointer_variable;\n  long long_var;\n  long long_var2;\n  object *ptr_to_uint641;\n  object *input_array;\n  object *unaffected_register_bx;\n  object *ptr;\n  object *ptr_to_ulong_6;\n  object *unaff_rbp;\n  object *ptr_to_ulong_8;\n  object *input_register8;\n  object *ptr_to_undefined8_3;\n  object *input_register9;\n  object *temp_var4;\n  object *temp_array3;\n  object *unaffected_r12;\n  object *unaffected_r13;\n  object *unaffected_r14;\n  object *unaffected_r15;\n  bool bool_var;\n  byte byte_var;\n  ulong unaffected_return_address;\n  ulong uint64_var2;\n  object param7;\n  object *parameter8;\n  object *param9;\n  object input_stack_variable38;\n  return_type *param13;\n  object *param14;\n  \n  byte_var = 0;\n  do {\n    if ((input_array[4] != 0x10c2a8) && (input_array[4] != 0x10c3c0)) goto LAB_00104cba;\nLAB_001049c3:\n    do {\n      unaffected_r13 = (object *)((long)unaffected_r13 + (long)unaffected_r14);\n      temp_array3 = unaffected_r12;\n      ptr_to_ulong_8 = unaff_rbp;\n      if (unaffected_r12 <= unaffected_r13) goto LAB_00104b15;\nLAB_001049cf:\n      input_array = (object *)\n               (**(function_pointer **)(unaff_rbp[1] + 0x270))\n                         (unaff_rbp,unaffected_return_address & 0xffffffff,unaffected_r13,unaffected_r15);\n      ptr_to_ulong_6 = unaff_rbp;\n      ptr_to_ulong_8 = unaffected_r13;\n      temp_array3 = unaffected_r15;\n      if (input_array == (object *)0x0) goto LAB_00102eb0;\n      char_pointer = (character *)input_array[1];\n      if (((char_pointer == (character *)0x0) || (*char_pointer != '_')) || (char_pointer[1] != '_')) {\nLAB_00104a03:\n        if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n        uint_var = (unsigned_integer)(input_array[4] == 0x10c2a8);\nLAB_00104af9:\n        if (uint_var != 0) goto LAB_00104a2d;\n        unaffected_r13 = (object *)((long)unaffected_r13 + (long)unaffected_r14);\n        temp_array3 = unaffected_r12;\n        ptr_to_ulong_8 = unaff_rbp;\n        if (unaffected_r12 <= unaffected_r13) {\nLAB_00104b15:\n          unaffected_register_bx = (object *)((long)unaffected_register_bx - (long)param9);\n          if (unaffected_r14 == (object *)0x8) {\n            long_var2 = ptr_to_ulong_8[1];\n            ptr_to_ulong_6 = (object *)((long)unaffected_register_bx + 7);\n            if (-1 < (long)unaffected_register_bx) {\n              ptr_to_ulong_6 = unaffected_register_bx;\n            }\n            input_register8 = (object *)(ulong)DAT_0010b800;\n            function_pointer = *(function_pointer **)(long_var2 + 0x208);\n            ptr_to_ulong_6 = (object *)((long)ptr_to_ulong_6 >> 3);\n          }\n          els1e {\n            ptr_to_ulong_6 = (object *)((long)unaffected_register_bx / (long)unaffected_r14);\n            long_var2 = ptr_to_ulong_8[1];\n            function_pointer = *(function_pointer **)(long_var2 + 0x208);\n          }\n          unaff_rbp = ptr_to_ulong_8;\n          if (DAT_0010b800 == 0) {\n            DAT_0010b778 = DAT_0010b80c != 0;\n            DAT_0010b780 = ptr_to_ulong_8;\n            DAT_0010b770 = (object *)(*function_pointer)(ptr_to_ulong_8);\n            DAT_0010b768 = (object *)(**(function_pointer **)(ptr_to_ulong_8[1] + 0x208))(ptr_to_ulong_8);\n            unaffected_register_bx = param14;\n            if ((DAT_0010b770 == (object *)0x0) || (DAT_0010b768 == (object *)0x0)) {\n              FUN_00106530(*ptr_to_ulong_8);\n              ptr = unaffected_r15;\n              goto LAB_00102d8e;\n            }\n            unaffected_r12 = (object *)(ulong)input_stack_variable38._4_4_;\n            if (DAT_0010b7f8 != 0) {\n              uint64_var2 = (ulong)(DAT_0010b80c != 0);\n              qsort(param14,(s1ize_t)ptr_to_ulong_6,(s1ize_t)unaffected_r12,FUN_00102fd2);\n              temp_array3 = (object *)xmalloc((long)ptr_to_ulong_6 << 4);\n              ptr_to_undefined8_3 = DAT_0010b770;\n              unaff_rbp = DAT_0010b768;\n              unaffected_r14 = (object *)((long)ptr_to_ulong_6 * (long)unaffected_r12 + (long)unaffected_register_bx);\n              input_array = DAT_0010b770;\n              input_register9 = DAT_0010b768;\n              if (unaffected_r14 <= unaffected_register_bx) goto LAB_00102ec2;\n              ptr_to_ulong_6 = (object *)\n                        (**(function_pointer **)(ptr_to_ulong_8[1] + 0x270))(ptr_to_ulong_8,uint64_var2 & 0xffffffff,unaffected_register_bx);\n              ptr = unaffected_register_bx;\n              input_register8 = unaffected_r12;\n              parameter8 = temp_array3;\n              if (ptr_to_ulong_6 == (object *)0x0) goto LAB_00102eb9;\n              goto LAB_00104e35;\n            }\n            qsort(param14,(s1ize_t)ptr_to_ulong_6,(s1ize_t)unaffected_r12,\n                  (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n            long_var2 = ptr_to_ulong_8[1];\n          }\n          ptr = (object *)0x0;\n          do {\n            ptr_to_ulong_8 = param14;\n            pointer_variable = (object *)(ulong)DAT_0010b7f8;\n            unaffected_r14 = (object *)(ulong)(DAT_0010b80c != 0);\n            if (DAT_0010b7f8 != 0) {\n              temp_array3 = (object *)(**(function_pointer **)(long_var2 + 0x208))(unaff_rbp);\n              if (temp_array3 == (object *)0x0) goto LAB_00102ed2;\n              unaffected_register_bx = ptr + (long)ptr_to_ulong_6 * 2;\n              ptr_to_ulong_6 = ptr;\n              do {\n                if (unaffected_register_bx <= ptr_to_ulong_6) {\nLAB_00104c75:\n                  if (param13 != (return_type *)0x0) {\n                    free(param13);\n                    free(param14);\n                    free(ptr);\n                    return;\n                  }\n                  free(param14);\n                  free(ptr);\n                  return;\n                }\n                pointer_variable = temp_array3;\n                long_var2 = (**(function_pointer **)(unaff_rbp[1] + 0x270))(unaff_rbp,unaffected_r14,*ptr_to_ulong_6);\n                if (long_var2 == 0) {\n                  FUN_00106530(*unaff_rbp,0);\nLAB_00102ed2:\n                  ptr_to_ulong_8 = (object *)*unaff_rbp;\n                  FUN_00106530();\n                  ptr_to_undefined8_3 = input_register8;\n                  temp_var4 = input_register9;\n                  goto LAB_00102edb;\n                }\n                ptr_to_ulong_8 = ptr_to_ulong_6 + 1;\n                ptr_to_ulong_6 = ptr_to_ulong_6 + 2;\n                FUN_00105110(unaff_rbp,long_var2,*ptr_to_ulong_8,param7);\n              } while( true );\n            }\n            unaffected_r12 = (object *)(ulong)input_stack_variable38._4_4_;\n            unaffected_r15 = (object *)(**(function_pointer **)(long_var2 + 0x208))(unaff_rbp);\n            if (unaffected_r15 == (object *)0x0) {\n              FUN_00106530(*unaff_rbp);\n              ptr_to_ulong_8 = unaffected_r12;\n              if (DAT_0010b80c == 0) {\n                long_var2 = (**(function_pointer **)(unaff_rbp[1] + 0x350))(unaff_rbp);\n                ptr_to_ulong_6 = param14;\n                temp_array3 = unaffected_r12;\n                if (long_var2 < 1) {\n                  pointer_variable = (object *)0x0;\n                  unaffected_register_bx = (object *)0x0;\n                }\n                els1e {\nLAB_00102d8e:\n                  unaffected_register_bx = (object *)xmalloc();\n                  pointer_variable = (object *)(**(function_pointer **)(unaff_rbp[1] + 0x358))(unaff_rbp,unaffected_register_bx);\n                  ptr_to_ulong_8 = temp_array3;\n                  if ((long)pointer_variable < 0) {\n                    ptr_to_ulong_8 = (object *)*unaff_rbp;\n                    ptr_to_ulong_6 = (object *)FUN_00106530(ptr_to_ulong_8,temp_array3);\n                    goto LAB_00102dbe;\n                  }\n                }\n              }\n              els1e {\n                pointer_variable = unaffected_r12;\n                unaffected_register_bx = param14;\n                ptr_to_ulong_6 = (object *)0x0;\n                temp_array3 = (object *)0x0;\n              }\n              input_register9 = &s1tack0x00000040;\n              input_register8 = unaffected_register_bx;\n              long_var2 = (**(function_pointer **)(unaff_rbp[1] + 0x360))(unaff_rbp,temp_array3,ptr_to_ulong_6,pointer_variable);\n              unaffected_r12 = ptr_to_ulong_8;\n              if (0 < long_var2) {\n                unaffected_r12 = (object *)((long)ptr_to_ulong_8 + long_var2);\n                param14 = (object *)xrealloc(param14);\n                long_var = 0;\n                do {\n                  param14[(long)ptr_to_ulong_8 + long_var] = (return_type *)(long_var * 0x30 + (long)param13);\n                  long_var = long_var + 1;\n                } while (long_var2 != long_var);\n                param14[(long)ptr_to_ulong_8 + long_var2] = 0;\n              }\n              if ((DAT_0010b80c == 0) && (unaffected_register_bx != (object *)0x0)) {\n                free(unaffected_register_bx);\n              }\n              if ((*(byte *)((long)unaff_rbp + 0x4a) & 0x10) != 0) {\n                unaffected_register_bx = (object *)*unaff_rbp;\n                DAT_0010b230 = '\\0';\n                ulong_var = dcgettext(0,\"%s1: plugin needed to handle lto object\",5);\n                FUN_00106400(ulong_var);\n              }\n              unaffected_r14 = (object *)(ulong)input_stack_variable38._4_4_;\n              bool_var = DAT_0010b80c != 0;\n              ptr_to_ulong_6 = (object *)(ulong)bool_var;\n              input_array = param14;\n              param9 = param14;\n              unaffected_r15 = (object *)(**(function_pointer **)(unaff_rbp[1] + 0x208))(unaff_rbp);\n              if (unaffected_r15 != (object *)0x0) goto function_pointer_r0x00104992;\n            }\n            els1e {\n              ptr_to_ulong_6 = (object *)((long)ptr_to_ulong_6 * (long)unaffected_r12 + (long)ptr_to_ulong_8);\n              unaffected_register_bx = ptr_to_ulong_8;\n              while( true ) {\n                if (ptr_to_ulong_6 <= unaffected_register_bx) goto LAB_00104c75;\n                input_array = unaffected_r15;\n                long_var2 = (**(function_pointer **)(unaff_rbp[1] + 0x270))(unaff_rbp,unaffected_r14,unaffected_register_bx);\n                if (long_var2 == 0) break;\n                unaffected_register_bx = (object *)((long)unaffected_register_bx + (long)unaffected_r12);\n                FUN_00105110(unaff_rbp,long_var2,0,param7);\n              }\n              FUN_00106530(*unaff_rbp,0);\n            }\n            FUN_00106530(*unaff_rbp);\n            ptr_to_ulong_8 = unaff_rbp;\n            temp_array3 = unaffected_r15;\nLAB_00102eb0:\n            FUN_00106530(*ptr_to_ulong_6);\nLAB_00102eb9:\n            FUN_00106530(*ptr_to_ulong_8);\nLAB_00102ec2:\n            ptr_to_ulong_6 = (object *)0x0;\n            ptr = unaffected_register_bx;\n            input_register8 = unaffected_r12;\n            ptr_to_undefined8_3 = input_array;\n            unaff_rbp = input_register9;\n            parameter8 = temp_array3;\nLAB_00104e35:\n            while (input_register9 = ptr_to_undefined8_3, ptr < unaffected_r14) {\n              unaffected_register_bx = (object *)((long)ptr + (long)input_register8);\n              if (unaffected_register_bx < unaffected_r14) {\n                pointer_variable = unaff_rbp;\n                ptr_to_undefined8_3 = input_register8;\n                temp_var4 = input_register9;\n                ptr_to_uint641 = (object *)(**(function_pointer **)(ptr_to_ulong_8[1] + 0x270))();\n                if (ptr_to_uint641 == (object *)0x0) {\nLAB_00102edb:\n                  input_register9 = temp_var4;\n                  input_register8 = ptr_to_undefined8_3;\n                  ptr_to_ulong_8 = (object *)*ptr_to_ulong_8;\n                  ptr_to_uint641 = (object *)FUN_00106530();\n                }\n                els1e {\n                  pointer_variable = (object *)ptr_to_ulong_6[4];\n                  if ((*(unsigned_integer *)(ptr_to_ulong_6 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                }\n                long_var2 = ptr_to_ulong_6[2];\nLAB_00102ee7:\n                if (pointer_variable == (object *)ptr_to_uint641[4]) {\n                  long_var2 = ptr_to_uint641[2] - long_var2;\n                  ptr_to_undefined8_3 = unaff_rbp;\n                  temp_var4 = ptr;\n                  goto LAB_00104ea7;\n                }\nLAB_00102dc4:\n                long_var2 = pointer_variable[8] - long_var2;\n                ptr_to_undefined8_3 = unaff_rbp;\n                temp_var4 = ptr;\n              }\n              els1e {\n                pointer_variable = (object *)ptr_to_ulong_6[4];\n                if ((*(unsigned_integer *)(ptr_to_ulong_6 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                  long_var2 = ptr_to_ulong_6[2];\n                  ptr_to_uint641 = (object *)0x0;\n                  goto LAB_00102dc4;\n                }\n                ptr_to_uint641 = (object *)0x0;\nLAB_00104e95:\n                ptr_to_undefined8_3 = unaff_rbp;\n                temp_var4 = ptr;\n                if (*(integer *)(ptr_to_ulong_8[1] + 8) == 5) {\n                  long_var2 = ptr_to_ulong_6[7];\n                }\n                els1e {\n                  long_var2 = ptr_to_ulong_6[2];\n                  if ((*(byte *)((long)pointer_variable + 0x25) & 0x10) == 0) {\n                    if (unaffected_register_bx < unaffected_r14) goto LAB_00102ee7;\n                    goto LAB_00102dc4;\n                  }\n                }\n              }\nLAB_00104ea7:\n              ptr_to_ulong_6 = ptr_to_uint641;\n              ptr = unaffected_register_bx;\n              unaff_rbp = input_register9;\n              if (long_var2 != 0) {\n                *temp_array3 = temp_var4;\n                temp_array3[1] = long_var2;\n                temp_array3 = temp_array3 + 2;\n              }\n            }\n            ptr_to_ulong_6 = (object *)((long)temp_array3 - (long)parameter8 >> 4);\n            qsort(parameter8,(s1ize_t)ptr_to_ulong_6,0x10,FUN_00103533);\n            long_var2 = ptr_to_ulong_8[1];\n            unaffected_register_bx = ptr;\n            unaff_rbp = ptr_to_ulong_8;\n            ptr = parameter8;\n          } while( true );\n        }\n        goto LAB_001049cf;\n      }\n      int_var = strcmp(char_pointer + (char_pointer[2] == '_'),\"__gnu_lto_s1lim\");\n      parameter8 = input_array;\n      if (int_var == 0) {\n        if (DAT_0010b230 != '\\0') {\n          parameter8 = (object *)*unaff_rbp;\n          DAT_0010b230 = '\\0';\n          ulong_var = dcgettext(0,\"%s1: plugin needed to handle lto object\",5);\n          FUN_00106400(ulong_var,parameter8);\n        }\n        goto LAB_00104a03;\n      }\n      if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n      if (DAT_0010b808 == 0) {\n        if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n        uint_var = (*(unsigned_integer *)(input_array + 3) >> 7 ^ 1) & 1;\n        goto LAB_00104af9;\n      }\n      if ((((*(unsigned_integer *)(input_array + 3) & 0x800082) == 0) && (input_array[4] != 0x10c2a8)) &&\n         ((*(byte *)(input_array[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n    } while ((DAT_0010b81c == 0) && ((*(byte *)(input_array + 3) & 4) != 0));\n  } while (DAT_0010b7f8 != 0);\n  input_register9 = (object *)(ulong)DAT_0010b7e4;\n  if (DAT_0010b7e4 == 0) {\n    char_var = (**(function_pointer **)(unaff_rbp[1] + 0x230))(unaff_rbp);\n    if (char_var != '\\0') {\n      FUN_00102c19();\n      return;\n    }\n  }\n  els1e {\n    if (input_array[4] == 0x10c2a8) goto LAB_001049c3;\nLAB_00104cba:\n    char_var = (**(function_pointer **)(unaff_rbp[1] + 0x230))(unaff_rbp);\n    if (char_var != '\\0') {\n      FUN_00102c19();\n      return;\n    }\n  }\n  if (unaffected_register_bx != unaffected_r13) {\n    if (unaffected_r14 != (object *)0x8) {\n      for (; unaffected_r14 != (object *)0x0; unaffected_r14 = (object *)((long)unaffected_r14 + -1)) {\n        *(undefined *)unaffected_register_bx = *(undefined *)unaffected_r13;\n        unaffected_r13 = (object *)((long)unaffected_r13 + (ulong)byte_var * -2 + 1);\n        unaffected_register_bx = (object *)((long)unaffected_register_bx + (ulong)byte_var * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n    *unaffected_register_bx = *unaffected_r13;\n    FUN_001049c0();\n    return;\n  }\n  unaffected_register_bx = (object *)((long)unaffected_register_bx + (long)unaffected_r14);\n  goto LAB_001049c3;\nfunction_pointer_r0x00104992:\n  temp_array3 = (object *)((long)unaffected_r12 * (long)unaffected_r14);\n  unaffected_r12 = (object *)((long)param9 + (long)temp_array3);\n  unaffected_register_bx = param9;\n  ptr_to_ulong_8 = unaff_rbp;\n  if (param9 < unaffected_r12) goto function_pointer_r0x001049aa;\n  goto LAB_00104b15;\nfunction_pointer_r0x001049aa:\n  unaffected_return_address = (ulong)bool_var;\n  unaffected_r13 = param9;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_binary_function_00104d5b",
            "entrypoint": "0x00104d5b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104d5b": "process_binary_function_00104d5b",
                "__ptr": "ptr",
                "bVar16": "bool_var",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "char": "character",
                "code": "function_pointer",
                "dcgettext": "get_msg",
                "free": "release_memory",
                "iVar4": "int_var",
                "in_R8": "input_register8",
                "in_R9": "input_register9",
                "in_RCX": "input_array",
                "in_stack_00000038": "input_stack_variable38",
                "int": "integer",
                "lVar8": "long_var",
                "lVar9": "long_var2",
                "param_1": "param1",
                "param_13": "param13",
                "param_14": "param14",
                "param_7": "param7",
                "param_8": "parameter8",
                "param_9": "param9",
                "pcVar1": "char_pointer",
                "pcVar2": "function_pointer",
                "puVar10": "ptr_to_uint641",
                "puVar11": "ptr_to_ulong_6",
                "puVar12": "ptr_to_ulong_8",
                "puVar13": "ptr_to_undefined8_3",
                "puVar14": "temp_var4",
                "puVar15": "temp_array3",
                "puVar7": "pointer_variable",
                "qsort": "sort_data",
                "s": "s1",
                "strcmp": "compare_strings",
                "uVar18": "uint64_var2",
                "uVar5": "uint_var",
                "uVar6": "ulong_var",
                "uint": "unsigned_integer",
                "unaff_R12": "unaffected_r12",
                "unaff_R13": "unaffected_r13",
                "unaff_R14": "unaffected_r14",
                "unaff_R15": "unaffected_r15",
                "unaff_RBP": "unaff_rbp",
                "unaff_RBX": "unaffected_register_bx",
                "unaff_retaddr": "unaffected_return_address",
                "undefined8": "object",
                "v": "temp_variable",
                "void": "return_type",
                "xmalloc": "allocate_memory",
                "xrealloc": "function_name_13"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104fa0": {
            "additional_data": {
                "DAT_0010b768": {
                    "data_4": 1
                },
                "DAT_0010b770": {
                    "data_3": 1
                },
                "DAT_0010b778": {
                    "data_2": 1
                },
                "DAT_0010b780": {
                    "data_1": 1
                },
                "FUN_00104fa0": {
                    "check_string_comparison": 1,
                    "compare_strings": 30
                },
                "FUN_00106530": {
                    "handle_error": 1
                },
                "__s1": {
                    "first_string": 2,
                    "ptr_s1": 1,
                    "s1": 3,
                    "str1": 13,
                    "str1_ptr": 1,
                    "str_1": 1,
                    "string1_ptr": 7,
                    "string_1": 1,
                    "string_1_ptr": 2
                },
                "__s2": {
                    "ptr_s2": 1,
                    "s2": 3,
                    "second_string": 2,
                    "str2": 13,
                    "str2_ptr": 1,
                    "str_2": 1,
                    "string2_ptr": 7,
                    "string_2": 1,
                    "string_2_ptr": 2
                },
                "lVar2": {
                    "compare_result1": 1,
                    "comparison_result_1": 1,
                    "length_str1": 1,
                    "length_string1": 1,
                    "ptr1": 1,
                    "ptr_1": 1,
                    "result1": 6,
                    "result_1": 1,
                    "result_str1": 1,
                    "str1_addr": 1,
                    "str1_length": 3,
                    "string1_length": 9,
                    "string1_ptr": 1,
                    "string_1_length": 3
                },
                "lVar3": {
                    "compare_result2": 1,
                    "comparison_result_2": 1,
                    "length_string2": 1,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "result2": 6,
                    "result_2": 1,
                    "result_str2": 1,
                    "str2_addr": 1,
                    "str2_length": 3,
                    "string2_length": 9,
                    "string2_ptr": 1,
                    "string_2_length": 3
                },
                "lvar3": {
                    "length_str2": 1
                },
                "param_1": {
                    "str1": 1,
                    "string1": 24,
                    "string_1": 6
                },
                "param_2": {
                    "str2": 1,
                    "string2": 24,
                    "string_2": 6
                },
                "uVar1": {
                    "comparison_result": 14,
                    "result": 9,
                    "string_comparison_result": 7
                }
            },
            "called": [
                "FUN_00102f9f",
                "strcoll"
            ],
            "calling": [
                "FUN_00103bf6",
                "FUN_00105050",
                "FUN_00102fd2"
            ],
            "code": "\nuint compare_strings_00104fa0(undefined8 string1,undefined8 string2)\n\n{\n  char *str2;\n  char *str1;\n  uint comparison_result;\n  long string1_length;\n  long string2_length;\n  \n  string1_length = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string1,DAT_0010b770);\n  string2_length = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string2,DAT_0010b768);\n  if ((string1_length == 0) || (string2_length == 0)) {\n    FUN_00106530(*DAT_0010b780);\n  }\n  else {\n    str2 = *(char **)(string2_length + 8);\n    str1 = *(char **)(string1_length + 8);\n    if (str2 == (char *)0x0) {\n      return (uint)(str1 != (char *)0x0);\n    }\n    if (str1 != (char *)0x0) {\n      if (*str2 == '\\0') {\n        return (uint)(*str1 != '\\0');\n      }\n      if (*str1 == '\\0') {\n        return 0xffffffff;\n      }\n      comparison_result = strcoll(str1,str2);\n      return comparison_result;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "compare_strings_00104fa0",
            "entrypoint": "0x00104fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104fa0": "compare_strings_00104fa0",
                "__s1": "str1",
                "__s2": "str2",
                "lVar2": "string1_length",
                "lVar3": "string2_length",
                "param_1": "string1",
                "param_2": "string2",
                "uVar1": "comparison_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105050": {
            "additional_data": {
                "FUN_00105050": {
                    "check_and_compare_files": 1,
                    "check_binary_attributes": 1,
                    "check_binary_compatibility": 6,
                    "check_binary_files": 1,
                    "check_binary_property": 1,
                    "check_compatibility": 3,
                    "check_compiled_files": 1,
                    "check_equality": 1,
                    "check_equality_of_strings": 1,
                    "check_file_compatibility": 1,
                    "check_file_compilation_status": 1,
                    "check_function_compatibility": 2,
                    "compare_binary_files": 2,
                    "compare_file_extensions": 1,
                    "compare_files": 1,
                    "compare_versions": 1,
                    "validate_binary_files": 1,
                    "verify_function": 1
                },
                "__s": {
                    "file1_content": 1,
                    "file1_contents": 1,
                    "file1_str": 1,
                    "file1_string": 1,
                    "file_buffer_1": 1,
                    "file_content_1": 1,
                    "file_contents_1": 2,
                    "file_ext_1": 1,
                    "file_extension1": 1,
                    "filename_1": 1,
                    "str1": 2,
                    "str_1": 1,
                    "string1": 14,
                    "string_1": 1
                },
                "__s_00": {
                    "file2_content": 1,
                    "file2_contents": 1,
                    "file2_str": 1,
                    "file2_string": 1,
                    "file_buffer_2": 1,
                    "file_content_2": 1,
                    "file_contents_2": 2,
                    "file_ext_2": 1,
                    "file_extension2": 1,
                    "filename_2": 1,
                    "str2": 2,
                    "str_2": 1,
                    "string2": 14,
                    "string_2": 1
                },
                "bVar16": {
                    "bool_var1": 1,
                    "boolean_flag": 1,
                    "compare_result": 1,
                    "flag": 1,
                    "is_compatible": 1,
                    "is_different": 1,
                    "is_equal": 3,
                    "is_less": 7,
                    "is_match": 5,
                    "is_reverse": 1,
                    "is_true": 2
                },
                "cVar1": {
                    "character1": 1,
                    "last_char": 11
                },
                "lVar10": {
                    "file2_data": 1,
                    "file2_header_addr": 1,
                    "file2_length": 1,
                    "file2_ptr": 1,
                    "file2_size": 1,
                    "file_buffer_size_2": 1,
                    "file_header_2": 1,
                    "file_info_2": 2,
                    "file_size_2": 1,
                    "function_result2": 1,
                    "length2": 1,
                    "pointer5": 1,
                    "ptr_header_2": 1,
                    "result2": 9,
                    "result_2": 2,
                    "return_var2": 1,
                    "var3": 1,
                    "var6": 1
                },
                "lVar3": {
                    "file1_address": 1,
                    "file1_header": 1,
                    "file1_len": 1,
                    "file1_magic_value": 1,
                    "file1_size": 1,
                    "file_header_1": 1,
                    "file_magic_number_1": 1,
                    "file_size_1": 1,
                    "file_type1": 1,
                    "function_offset": 1,
                    "header_size_1": 1,
                    "length1": 6,
                    "length_1": 1,
                    "long_var1": 1,
                    "magic_number_1": 1,
                    "pointer3": 1,
                    "ptr_1_element": 1,
                    "ptr_header_size_1": 1,
                    "size1": 2,
                    "string1_address": 1,
                    "value1": 1,
                    "var1": 3,
                    "var5": 1
                },
                "lVar9": {
                    "file1_data": 1,
                    "file1_header_addr": 1,
                    "file1_length": 1,
                    "file1_ptr": 1,
                    "file1_size": 1,
                    "file_buffer_size_1": 1,
                    "file_info_1": 2,
                    "function_result1": 1,
                    "pointer4": 1,
                    "ptr_header_1": 1,
                    "result1": 9,
                    "result2": 1,
                    "result_1": 2,
                    "return_var1": 1,
                    "var2": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument1": 2,
                    "binary_file_path": 1,
                    "data1": 1,
                    "file1": 3,
                    "file_path1": 1,
                    "file_path_1": 8,
                    "filename1": 1,
                    "input1": 3,
                    "input_1": 2,
                    "input_param1": 3,
                    "input_parameter1": 2,
                    "string1": 1,
                    "value1": 1,
                    "version1": 1
                },
                "param_2": {
                    "another_binary_file_path": 1,
                    "arg2": 1,
                    "argument2": 2,
                    "data2": 1,
                    "file2": 3,
                    "file_path2": 1,
                    "file_path_2": 8,
                    "filename2": 1,
                    "input2": 3,
                    "input_2": 2,
                    "input_param2": 3,
                    "input_parameter2": 2,
                    "string2": 1,
                    "value2": 1,
                    "version2": 1
                },
                "pcVar7": {
                    "comp_str_1": 1,
                    "comp_type_1": 1,
                    "file1_compile_type": 1,
                    "found_str": 1,
                    "found_string1": 1,
                    "gnu_compiled_ptr": 2,
                    "gnu_compiled_str": 1,
                    "gnu_found": 1,
                    "match_str_1": 1,
                    "pointer1": 3,
                    "pointer_var1": 1,
                    "ptr1": 2,
                    "ptr_1": 2,
                    "ptr_compiled_type_1": 1,
                    "str1": 1,
                    "str1_match": 1,
                    "str_occurrence1": 1,
                    "str_occurrence_1": 1,
                    "string_match1": 1,
                    "strstr1": 1,
                    "substr1": 1,
                    "substring": 1,
                    "substring1": 2
                },
                "pcVar8": {
                    "comp_str_2": 1,
                    "comp_type_2": 1,
                    "file2_compile_type": 1,
                    "found_str2": 1,
                    "found_string2": 1,
                    "gcc2_compiled_ptr": 2,
                    "gcc2_compiled_str": 1,
                    "gcc2_found": 1,
                    "match_str_2": 1,
                    "pointer2": 3,
                    "pointer_var2": 1,
                    "ptr2": 2,
                    "ptr_2": 2,
                    "ptr_compiled_type_2": 1,
                    "str2": 1,
                    "str2_match": 1,
                    "str_occurrence2": 1,
                    "str_occurrence_2": 1,
                    "string_match2": 1,
                    "strstr2": 1,
                    "substr2": 1,
                    "substring2": 3
                },
                "sVar5": {
                    "ext_len_1": 1,
                    "file1_content_length": 1,
                    "file1_len": 1,
                    "file1_length": 1,
                    "file1_size": 1,
                    "filename_1_length": 1,
                    "len1": 3,
                    "len_1": 1,
                    "length1": 2,
                    "length2": 1,
                    "length_1": 3,
                    "length_2": 1,
                    "length_of_string1": 1,
                    "size1": 2,
                    "size_var1": 1,
                    "string1_length": 2,
                    "string_length1": 1,
                    "strlen1": 1
                },
                "sVar6": {
                    "ext_len_2": 1,
                    "file2_content_length": 1,
                    "file2_len": 1,
                    "file2_length": 1,
                    "file2_size": 1,
                    "filename_2_length": 1,
                    "len2": 3,
                    "len_2": 1,
                    "length2": 2,
                    "length3": 1,
                    "length_2": 3,
                    "length_3": 1,
                    "length_of_string2": 1,
                    "size2": 2,
                    "size_var2": 1,
                    "string2_length": 2,
                    "string_length2": 1,
                    "strlen2": 1
                },
                "uVar11": {
                    "comparison_result": 1,
                    "final_result": 2,
                    "result": 12,
                    "result2": 1,
                    "return_val": 1,
                    "return_value": 10,
                    "return_var3": 1
                },
                "uVar12": {
                    "byte_offset2": 1,
                    "end_2": 1,
                    "end_address2": 1,
                    "end_offset_2": 1,
                    "file1_end": 1,
                    "file2_data_size": 1,
                    "file2_end_address": 1,
                    "file2_end_offset": 1,
                    "file2_size": 1,
                    "file_magic_number_2": 1,
                    "length2_plus_offset2": 1,
                    "offset2": 1,
                    "offset_2": 1,
                    "ptr_2_value": 1,
                    "ptr_code_size_2": 1,
                    "string2_sum": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "sum_1": 1,
                    "summed_string1_address": 1,
                    "temp4": 1,
                    "total_size_2": 1,
                    "u_var4": 1,
                    "unsigned_var2": 1,
                    "value1": 1,
                    "value2": 1,
                    "var7": 1
                },
                "uVar13": {
                    "byte_offset1": 1,
                    "file1_checksum": 2,
                    "file1_checksum_offset": 1,
                    "file1_data_size": 1,
                    "file1_offset": 1,
                    "file1_start": 1,
                    "file_offset_1": 1,
                    "header_size_1": 1,
                    "length1_plus_offset1": 1,
                    "length2": 1,
                    "offset1": 2,
                    "offset_1": 3,
                    "ptr_1_offset": 1,
                    "string1_offset": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "sum_2": 1,
                    "summed_string2_address": 1,
                    "total_size_1": 1,
                    "u_var5": 1,
                    "unsigned_var3": 1,
                    "value1": 1,
                    "value2": 1,
                    "value3": 1,
                    "var1": 1
                },
                "uVar14": {
                    "end_1": 2,
                    "end_address1": 1,
                    "end_offset_1": 1,
                    "ext_offset_1": 1,
                    "file1_checksum_computed": 1,
                    "file1_checksum_end": 1,
                    "file1_data_addr": 1,
                    "file1_end_address": 1,
                    "file1_end_offset": 1,
                    "file2_start": 1,
                    "file_offset_2": 1,
                    "ptr_2_offset": 1,
                    "ptr_code_size_1": 1,
                    "result1": 1,
                    "string1_sum": 1,
                    "sum1": 2,
                    "sum3": 2,
                    "sum_3": 1,
                    "summed_string1": 1,
                    "temp1": 1,
                    "total_size1": 1,
                    "u_var6": 1,
                    "unsigned_var4": 1,
                    "value2": 1,
                    "value4": 1,
                    "var2": 1
                },
                "uVar15": {
                    "additional_input_param": 1,
                    "binary_path": 1,
                    "compilation_version": 1,
                    "compiler_info": 1,
                    "compiler_version": 2,
                    "constant": 1,
                    "file_buffer_base": 1,
                    "func_param": 1,
                    "function_ptr": 1,
                    "input3": 1,
                    "library_handle": 1,
                    "pointer": 2,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_first_element": 1,
                    "temp5": 1,
                    "temp_var": 2,
                    "u_var15": 1,
                    "unsigned_var5": 1,
                    "var3": 1,
                    "variable1": 1
                },
                "uVar16": {
                    "comparison_result": 1,
                    "is_compiled_with_gcc": 1
                },
                "uVar2": {
                    "file1_checksum": 1,
                    "file2_address": 1,
                    "file2_checksum": 1,
                    "file2_end": 1,
                    "file2_header": 1,
                    "file2_magic_value": 1,
                    "file_size_2": 1,
                    "header_size_2": 2,
                    "offset_2": 2,
                    "ptr_1_value": 1,
                    "result": 1,
                    "result1": 2,
                    "result2": 1,
                    "size2": 2,
                    "string2_address": 1,
                    "string2_offset": 1,
                    "temp2": 1,
                    "total_size2": 1
                },
                "uVar4": {
                    "file2_compile_flag": 1,
                    "flag": 12,
                    "flag_gnu_compiled_2": 1,
                    "flags": 6,
                    "flags1": 1,
                    "is_executable": 1,
                    "is_gcc": 1,
                    "temp3": 1,
                    "unsigned_var1": 1
                },
                "unaff_R13": {
                    "additional_result": 1,
                    "address": 1,
                    "buffer": 1,
                    "comp_str_offset": 1,
                    "file2_data": 1,
                    "file2_data_addr": 1,
                    "pointer2": 1,
                    "pointer6": 1,
                    "ptr2": 2,
                    "ptr_2_element": 1,
                    "ptr_header_2_": 1,
                    "result3": 1,
                    "temp6": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "unaff_offset": 1,
                    "unaff_r13": 1,
                    "unaff_result": 1,
                    "unaff_var": 1,
                    "unaffected_var1": 1,
                    "var4": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_00102fc3",
                "FUN_00104fa0"
            ],
            "calling": [
                "FUN_00103bec"
            ],
            "code": "\nulong check_binary_compatibility_00105050(undefined8 file_path_1,undefined8 file_path_2)\n\n{\n  char last_char;\n  ulong size2;\n  char *string1;\n  char *string2;\n  long length1;\n  uint flag;\n  size_t len1;\n  size_t len2;\n  char *pointer1;\n  char *substring2;\n  long result1;\n  long result2;\n  ulong result;\n  ulong file2_data_size;\n  ulong offset_1;\n  ulong sum3;\n  undefined8 pointer;\n  long ptr2;\n  bool is_less;\n  \n  result1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file_path_1,DAT_0010b770);\n  result = (ulong)DAT_0010b778;\n  result2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,result,file_path_2,DAT_0010b768);\n  if ((result1 != 0) && (result2 != 0)) {\n    length1 = *(long *)(result2 + 0x20);\n    if (*(long *)(result1 + 0x20) == 0x10c2a8) {\n      result = 0xffffffff;\n      if (length1 == 0x10c2a8) {\nLAB_001050fa:\n        result = FUN_00104fa0(file_path_1,file_path_2);\n        return result;\n      }\n    }\n    else if (length1 == 0x10c2a8) {\n      result = 1;\n    }\n    else {\n      offset_1 = *(long *)(result1 + 0x10) + *(long *)(*(long *)(result1 + 0x20) + 0x30);\n      result = *(long *)(result2 + 0x10) + *(long *)(length1 + 0x30);\n      if (offset_1 == result) goto LAB_001050fa;\n      result = (ulong)(-(uint)(offset_1 < result) | 1);\n    }\n    return result;\n  }\n  pointer = *DAT_0010b780;\n  FUN_00106530();\n  result1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,pointer,DAT_0010b770);\n  result2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,result,DAT_0010b768);\n  if ((result1 == 0) || (ptr2 = result2, result2 == 0)) {\n    result2 = FUN_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(result1 + 0x20) == 0x10c2a8) || (*(long *)(result2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  offset_1 = *(ulong *)(*(long *)(result1 + 0x20) + 0x30);\n  size2 = *(ulong *)(*(long *)(result2 + 0x20) + 0x30);\n  sum3 = *(long *)(result1 + 0x10) + offset_1;\n  file2_data_size = *(long *)(ptr2 + 0x10) + size2;\n  is_less = sum3 < file2_data_size;\n  if ((sum3 != file2_data_size) || (is_less = offset_1 < size2, offset_1 != size2)) {\n    return (ulong)(-(uint)is_less | 1);\n  }\n  string1 = *(char **)(result1 + 8);\n  string2 = *(char **)(ptr2 + 8);\n  len1 = strlen(string1);\n  len2 = strlen(string2);\n  pointer1 = strstr(string1,\"gnu_compiled\");\n  if (pointer1 == (char *)0x0) {\n    substring2 = strstr(string1,\"gcc2_compiled\");\n    pointer1 = strstr(string2,\"gnu_compiled\");\n    if ((pointer1 == (char *)0x0) && (pointer1 = strstr(string2,\"gcc2_compiled\"), pointer1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (substring2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pointer1 = strstr(string2,\"gnu_compiled\");\n    if (pointer1 == (char *)0x0) {\n      substring2 = strstr(string2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (substring2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(ptr2 + 0x18) & 0x4000;\n  if ((*(byte *)(result1 + 0x19) & 0x40) == 0) {\n    if ((len1 < 3) || (string1[len1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((len2 < 3) || (string2[len2 - 2] != '.')) goto LAB_00103202;\n      is_less = false;\n      goto LAB_001031e7;\n    }\n    last_char = string1[len1 - 1];\n    is_less = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((len2 < 3) || (string2[len2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (len2 < 3) {\n      return 0xffffffff;\n    }\n    if (string2[len2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_less = true;\nLAB_001031e7:\n    if ((string2[len2 - 1] != 'o') && (string2[len2 - 1] != 'a')) {\n      if (is_less) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_less) {\n    return 1;\n  }\nLAB_00103202:\n  result = FUN_00104fa0(pointer,result);\n  return result;\n}\n\n",
            "current_name": "check_binary_compatibility_00105050",
            "entrypoint": "0x00105050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105050": "check_binary_compatibility_00105050",
                "__s": "string1",
                "__s_00": "string2",
                "bVar16": "is_less",
                "cVar1": "last_char",
                "lVar10": "result2",
                "lVar3": "length1",
                "lVar9": "result1",
                "param_1": "file_path_1",
                "param_2": "file_path_2",
                "pcVar7": "pointer1",
                "pcVar8": "substring2",
                "sVar5": "len1",
                "sVar6": "len2",
                "uVar11": "result",
                "uVar12": "file2_data_size",
                "uVar13": "offset_1",
                "uVar14": "sum3",
                "uVar15": "pointer",
                "uVar2": "size2",
                "uVar4": "flag",
                "unaff_R13": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105110": {
            "additional_data": {
                "DAT_0010b738": {
                    "dat_var8": 1,
                    "global_ptr3": 1,
                    "global_ptr_var_5": 1,
                    "global_var6": 1,
                    "global_var8": 1
                },
                "DAT_0010b740": {
                    "dat_var6": 1,
                    "global_ptr2": 1,
                    "global_ptr_var_4": 1,
                    "global_var5": 1,
                    "global_var7": 1
                },
                "DAT_0010b748": {
                    "dat_var9": 1,
                    "global_uint_var": 1,
                    "global_var": 1,
                    "global_var6": 1,
                    "global_var7": 1
                },
                "DAT_0010b750": {
                    "dat_var7": 1,
                    "global_ptr1": 1,
                    "global_ptr_var_3": 1,
                    "global_var4": 1,
                    "global_var5": 1
                },
                "DAT_0010b758": {
                    "dat_var2": 1,
                    "global_ptr": 1,
                    "global_ptr_var_2": 1,
                    "global_var2": 1,
                    "global_var4": 1
                },
                "DAT_0010b7b0": {
                    "global_var10": 1
                },
                "DAT_0010b7c8": {
                    "dat_var3": 1,
                    "global_var3": 1
                },
                "DAT_0010b804": {
                    "dat_var4": 1,
                    "global_flag1": 1,
                    "global_var9": 1
                },
                "DAT_0010b818": {
                    "global_var2": 1
                },
                "FUN_00103238": {
                    "another_function": 1
                },
                "FUN_00103463": {
                    "handle_error": 1
                },
                "FUN_00105110": {
                    "extract_binary_section_info": 1,
                    "extract_print_statements": 1,
                    "parse_and_print_sections": 1,
                    "print_file_info": 2,
                    "print_file_information": 2,
                    "print_file_path_and_function_name": 1,
                    "print_function_info": 4,
                    "print_information": 1,
                    "print_section_info": 2,
                    "print_section_information": 1,
                    "print_sections": 2,
                    "print_sections_and_symbols": 1,
                    "print_sections_with_symbols": 1,
                    "process_data": 3,
                    "process_params": 1
                },
                "FUN_001053c0": {
                    "process_section_header": 1
                },
                "FUN_00106530": {
                    "clean_up": 1
                },
                "_": {
                    "unused_var": 1
                },
                "_DAT_0010b7b0": {
                    "dat_var5": 1,
                    "global_flag2": 1,
                    "global_var2": 1
                },
                "_DAT_0010b7b8": {
                    "dat_var1": 1,
                    "global_flag3": 1,
                    "global_ptr_var_1": 1,
                    "global_var": 1,
                    "global_var1": 1
                },
                "_DAT_0010b7c0": {
                    "global_flag4": 1
                },
                "_DAT_0010b7c8": {
                    "global_flag5": 1
                },
                "__ptr": {
                    "f_ptr": 1,
                    "ptr": 27,
                    "ptr_obj": 1,
                    "section_data": 2
                },
                "__s1": {
                    "char_array1": 1,
                    "filename": 1,
                    "name": 1,
                    "p1_ptr": 1,
                    "s1": 1,
                    "section_data": 1,
                    "section_header_name": 1,
                    "section_name": 5,
                    "str": 3,
                    "str1": 9,
                    "str_ptr": 1,
                    "string1": 5,
                    "symbol_name": 1
                },
                "_stdout": {
                    "output_stream": 2,
                    "standard_output": 1,
                    "stdout": 1,
                    "stdout_var": 1
                },
                "cVar5": {
                    "char1": 1,
                    "char_value": 1,
                    "char_var": 20,
                    "char_var5": 1,
                    "character": 2,
                    "flag": 1,
                    "temp_char": 4,
                    "var_5": 1
                },
                "free": {
                    "deallocate": 1
                },
                "iVar6": {
                    "index": 2,
                    "int1": 1,
                    "int_val": 1,
                    "int_value": 2,
                    "int_var": 18,
                    "int_var6": 1,
                    "section_type": 1,
                    "temp_int": 4,
                    "var_6": 1
                },
                "lVar10": {
                    "counter": 1,
                    "i": 1,
                    "length": 1,
                    "long_val2": 1,
                    "long_var": 1,
                    "long_var2": 2,
                    "long_var3": 8,
                    "loop_index": 1,
                    "loop_var": 2,
                    "section_index": 1,
                    "temp_long2": 2,
                    "temp_long_2": 1,
                    "temp_loop_var": 1,
                    "var10": 6,
                    "var_10": 1,
                    "var_3": 1
                },
                "lVar3": {
                    "addr_variable": 1,
                    "entry_address": 1,
                    "length": 1,
                    "long_var": 8,
                    "long_var1": 1,
                    "offset": 1,
                    "section_entry_ptr": 1,
                    "section_header_address": 1,
                    "section_offset": 2,
                    "subsubsection": 1,
                    "symbol_table_entry": 1,
                    "symbol_value": 1,
                    "temp_var": 1,
                    "value": 2,
                    "var": 1,
                    "var1": 2,
                    "var3": 4,
                    "var_3": 1
                },
                "lVar8": {
                    "entry_size": 1,
                    "header_offset": 1,
                    "length": 1,
                    "long_val": 1,
                    "long_var": 5,
                    "long_var1": 1,
                    "long_var2": 8,
                    "section_header_pointer": 1,
                    "temp_long": 4,
                    "temp_val": 1,
                    "var8": 5,
                    "var_2": 1,
                    "var_8": 1
                },
                "local_60": {
                    "buffer_char": 1,
                    "char2": 1,
                    "char_var2": 6,
                    "char_var60": 1,
                    "custom_char": 1,
                    "local_char": 9,
                    "local_char1": 2,
                    "local_char2": 1,
                    "local_char60": 1,
                    "local_char_60": 1,
                    "local_var_60": 1,
                    "section_header_flag": 1,
                    "temp_char": 1,
                    "temp_char2": 2,
                    "temp_local_char": 1
                },
                "local_68": {
                    "buffer": 2,
                    "custom_buffer2": 1,
                    "local_arr2": 2,
                    "local_arr68": 1,
                    "local_array": 2,
                    "local_array1": 2,
                    "local_array2": 2,
                    "local_array3": 2,
                    "local_array_2": 1,
                    "local_buffer2": 2,
                    "local_byte2": 1,
                    "local_char_array": 1,
                    "local_var": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var68": 1,
                    "local_var7": 1,
                    "local_var_68": 2,
                    "temp_array2": 1,
                    "temp_array3": 1,
                    "temp_local_undefined8_2": 1,
                    "var68": 1
                },
                "local_88": {
                    "custom_buffer": 1,
                    "file_data": 1,
                    "local_ptr": 1,
                    "local_ptr1": 1,
                    "local_ptr2": 1,
                    "local_ptr3": 3,
                    "local_ptr_4": 1,
                    "local_ptr_88": 1,
                    "local_ptr_var1": 1,
                    "local_ptr_var88": 1,
                    "local_var": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "local_var6": 1,
                    "local_var7": 1,
                    "local_var88": 1,
                    "local_var_88": 2,
                    "local_void_ptr": 1,
                    "local_void_ptr1": 1,
                    "processed_section_entry": 1,
                    "section_data": 1,
                    "section_data_ptr": 1,
                    "section_headers_addresses": 1,
                    "section_symbols": 1,
                    "section_values": 1,
                    "sections": 1,
                    "temp_local_void_ptr": 1,
                    "temp_ptr3": 1
                },
                "local_90": {
                    "current_symbol": 1,
                    "custom_param2": 1,
                    "local_long2": 1,
                    "local_long_ptr2": 2,
                    "local_pointer2": 1,
                    "local_ptr": 1,
                    "local_ptr2": 3,
                    "local_ptr3": 1,
                    "local_ptr_3": 1,
                    "local_ptr_90": 1,
                    "local_ptr_long2": 1,
                    "local_ptr_var90": 1,
                    "local_var": 1,
                    "local_var2": 2,
                    "local_var5": 1,
                    "local_var6": 1,
                    "local_var90": 1,
                    "local_var_90": 2,
                    "matched_section_entry": 1,
                    "section_data3": 1,
                    "section_entry_ptr": 1,
                    "section_ptr": 1,
                    "section_ptr2": 1,
                    "section_ptr_2": 1,
                    "symbol_sections2": 1,
                    "temp_local_long_ptr_2": 1
                },
                "local_98": {
                    "current_section_header": 1,
                    "custom_param1": 1,
                    "local_long": 1,
                    "local_long_ptr": 1,
                    "local_long_ptr1": 1,
                    "local_pointer1": 1,
                    "local_ptr": 1,
                    "local_ptr1": 3,
                    "local_ptr2": 1,
                    "local_ptr_2": 1,
                    "local_ptr_98": 1,
                    "local_ptr_long1": 1,
                    "local_ptr_var98": 1,
                    "local_var": 1,
                    "local_var1": 2,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var98": 1,
                    "local_var_98": 2,
                    "matched_section_info": 1,
                    "section_data2": 1,
                    "section_data_ptr": 1,
                    "section_ptr1": 1,
                    "section_ptr_1": 1,
                    "symbol_entry_ptr": 1,
                    "symbol_sections": 1,
                    "temp_local_long_ptr": 1
                },
                "local_a0": {
                    "custom_parameter": 1,
                    "local_arg": 1,
                    "local_array_ptr": 1,
                    "local_input_1": 1,
                    "local_long": 2,
                    "local_long_long": 1,
                    "local_param": 2,
                    "local_value": 2,
                    "local_var": 4,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var3": 3,
                    "local_var4": 1,
                    "local_var_a0": 5,
                    "num_sections_var": 1,
                    "param3_copy": 1,
                    "program_name": 1,
                    "temp_local_param": 1,
                    "temp_long_array": 1
                },
                "local_a8": {
                    "local_array2": 2,
                    "local_array_ptr": 1,
                    "local_buffer": 1,
                    "local_buffer_end": 1,
                    "local_buffer_ptr": 1,
                    "local_pointer": 1,
                    "local_ptr": 7,
                    "local_ptr1": 1,
                    "local_ptr_1": 1,
                    "local_ptr_a8": 1,
                    "local_ptr_arr": 1,
                    "local_ptr_array": 1,
                    "local_ptr_char": 1,
                    "local_var": 1,
                    "local_var2": 2,
                    "local_var3": 1,
                    "local_var_a8": 3,
                    "section_headers_names": 1,
                    "temp_array2": 1,
                    "temp_local_ptr": 1,
                    "temp_ptr_array": 1
                },
                "local_b0": {
                    "buffer": 2,
                    "local_arr": 3,
                    "local_array": 5,
                    "local_array1": 2,
                    "local_array_1": 1,
                    "local_buffer": 4,
                    "local_byte": 1,
                    "local_char1": 1,
                    "local_ptr": 1,
                    "local_var": 2,
                    "local_var2": 2,
                    "local_var_b0": 3,
                    "temp_array": 2,
                    "temp_local_undefined8": 1
                },
                "local_b4": {
                    "local_u_int": 5,
                    "local_uint": 4,
                    "local_uint1": 2,
                    "local_uint_var": 1,
                    "local_var": 1,
                    "local_var1": 4,
                    "local_var_1": 1,
                    "local_var_b4": 4,
                    "section_index": 1,
                    "section_size": 2,
                    "size": 1,
                    "temp_local_uint": 1,
                    "temp_u_int2": 2,
                    "var_b4": 2
                },
                "param_1": {
                    "arg1": 1,
                    "arguments": 1,
                    "argv": 2,
                    "binary_info": 1,
                    "binary_section_info": 1,
                    "file_info": 2,
                    "file_information": 1,
                    "file_name": 1,
                    "file_paths": 1,
                    "function_info": 1,
                    "function_params": 2,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "input_ptr": 1,
                    "output_file": 1,
                    "output_strings": 1,
                    "param_1": 1,
                    "param_array": 1,
                    "param_ptr": 1,
                    "ptr_array": 2,
                    "ptr_to_ptr": 1,
                    "section_header": 1,
                    "section_headers": 1
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 1,
                    "data_array": 1,
                    "data_params": 1,
                    "data_pointer": 1,
                    "elf_header": 2,
                    "file_headers": 1,
                    "function_info": 1,
                    "info_array": 1,
                    "input_data": 1,
                    "input_parameters": 1,
                    "long_array": 4,
                    "param_2": 1,
                    "param_array": 2,
                    "param_long": 1,
                    "ptr_to_long": 1,
                    "section_data": 1,
                    "section_header": 1,
                    "section_headers": 1,
                    "section_info": 5,
                    "symbol_info": 1,
                    "symbol_table": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 3,
                    "elf_file": 1,
                    "file_attributes": 1,
                    "file_header_size": 1,
                    "filename": 1,
                    "info1": 1,
                    "input_1": 1,
                    "num_sections": 1,
                    "param1": 2,
                    "param3": 6,
                    "param_1": 1,
                    "param_3": 9,
                    "param_long_long": 1,
                    "value1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 1,
                    "file_name": 1,
                    "filename": 1,
                    "info": 1,
                    "info2": 1,
                    "information_tags": 1,
                    "label": 1,
                    "message": 3,
                    "message_array": 1,
                    "module_name": 1,
                    "optional_string": 1,
                    "output_param": 1,
                    "output_ptr": 1,
                    "param2": 2,
                    "param4": 2,
                    "param_4": 1,
                    "param_ptr_ptr": 1,
                    "prefix": 1,
                    "ptr_message": 1,
                    "section_name": 5,
                    "str_array": 1,
                    "string_params": 1
                },
                "plVar2": {
                    "current_entry": 1,
                    "long_pointer": 1,
                    "long_ptr": 3,
                    "p_ptr_2": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr": 1,
                    "ptr_array1": 1,
                    "ptr_long": 4,
                    "ptr_to_long": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "ptr_var2": 2,
                    "section": 2,
                    "section_data": 1,
                    "section_data_ptr": 1,
                    "section_entry": 1,
                    "section_header": 1,
                    "section_value": 1,
                    "section_var2": 1,
                    "subsection_ptr": 1,
                    "symbol_ent": 1,
                    "symbol_entry": 1,
                    "temp_ptr": 1
                },
                "pplVar1": {
                    "current_section": 1,
                    "double_pointer": 1,
                    "double_ptr": 2,
                    "pointer_array": 1,
                    "pointer_pointer1": 1,
                    "ptr_arr": 1,
                    "ptr_ptr": 4,
                    "ptr_ptr_array": 1,
                    "ptr_ptr_array1": 1,
                    "ptr_ptr_long": 2,
                    "ptr_ptr_long_array": 1,
                    "ptr_ptr_var1": 1,
                    "ptr_to_ptr_to_long": 1,
                    "ptrs_var1": 1,
                    "section": 1,
                    "section_entry": 1,
                    "section_header": 1,
                    "section_info": 2,
                    "section_pointer": 1,
                    "section_ptr": 4,
                    "section_var1": 1,
                    "symbol_table_entry": 1
                },
                "printf": {
                    "print_formatted": 1
                },
                "puVar4": {
                    "current_section": 1,
                    "param_pointer": 1,
                    "ptr_value2": 1,
                    "ptr_var": 14,
                    "ptr_var1": 1,
                    "ptr_var4": 2,
                    "ptr_var_2": 1,
                    "temp": 1,
                    "temp_ptr": 2,
                    "temp_ptr2": 1,
                    "temp_var": 2,
                    "tmp_ptr": 1,
                    "var4": 2,
                    "var_4": 1
                },
                "pvStack_70": {
                    "custom_pointer3": 1,
                    "file_pointer3": 1,
                    "local_ptr6": 1,
                    "local_ptr_var4": 1,
                    "param_1_section": 1,
                    "ptr_stack70": 1,
                    "ptr_stack_70": 3,
                    "ptr_stack_var3": 1,
                    "ptr_stack_var70": 1,
                    "ptr_var": 1,
                    "ptr_var_stack3": 1,
                    "pv_stack70": 1,
                    "pv_stack_var3": 1,
                    "stack_ptr3": 1,
                    "stack_ptr_3": 2,
                    "stack_ptr_70": 1,
                    "stack_var3": 3,
                    "stack_var_70": 1,
                    "stack_void_ptr3": 2,
                    "symbol_ptr3": 1,
                    "temp_ptr6": 1,
                    "temp_stack_void_ptr_3": 1,
                    "var70": 1,
                    "var_stack3": 1
                },
                "pvStack_78": {
                    "custom_pointer2": 1,
                    "file_pointer2": 1,
                    "local_ptr5": 1,
                    "local_ptr_var3": 1,
                    "ptr_stack78": 1,
                    "ptr_stack_78": 3,
                    "ptr_stack_var2": 1,
                    "ptr_stack_var78": 1,
                    "ptr_var": 1,
                    "ptr_var_stack2": 1,
                    "pv_stack78": 1,
                    "pv_stack_var2": 1,
                    "section_headers": 1,
                    "stack_ptr2": 1,
                    "stack_ptr_2": 2,
                    "stack_ptr_78": 1,
                    "stack_var2": 3,
                    "stack_var_78": 1,
                    "stack_void_ptr2": 2,
                    "symbol_names": 1,
                    "symbol_ptr2": 1,
                    "temp_ptr5": 1,
                    "temp_stack_void_ptr_2": 1,
                    "var78": 1,
                    "var_stack2": 1
                },
                "pvStack_80": {
                    "custom_pointer1": 1,
                    "file_pointer1": 1,
                    "local_ptr4": 1,
                    "local_ptr_var2": 1,
                    "ptr_stack80": 1,
                    "ptr_stack_80": 3,
                    "ptr_stack_var1": 1,
                    "ptr_stack_var80": 1,
                    "ptr_var": 1,
                    "ptr_var_stack1": 1,
                    "pv_stack80": 1,
                    "pv_stack_var1": 1,
                    "section_names": 1,
                    "stack_ptr1": 1,
                    "stack_ptr_1": 2,
                    "stack_ptr_80": 1,
                    "stack_var": 1,
                    "stack_var1": 2,
                    "stack_var_80": 1,
                    "stack_void_ptr1": 2,
                    "symbol_ptr": 1,
                    "symbols": 1,
                    "temp_ptr4": 1,
                    "temp_stack_void_ptr_1": 1,
                    "var80": 1,
                    "var_stack1": 1
                },
                "pvVar7": {
                    "p2_ptr": 1,
                    "pointer": 1,
                    "ptr2": 1,
                    "ptr_value3": 1,
                    "ptr_var": 4,
                    "ptr_var2": 9,
                    "ptr_var7": 2,
                    "sections_data": 1,
                    "temp_ptr": 2,
                    "temp_ptr2": 1,
                    "temp_void_ptr": 1,
                    "var7": 2,
                    "var_7": 1,
                    "void_ptr_var": 1,
                    "void_var": 3
                },
                "uVar9": {
                    "flag2": 1,
                    "flags": 2,
                    "section_flags": 1,
                    "temp_u_int": 3,
                    "temp_uint": 1,
                    "uint_val": 1,
                    "uint_var": 17,
                    "uint_var1": 1,
                    "uint_var9": 1,
                    "var9": 2,
                    "var_9": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_001053c0",
                "xmalloc",
                "printf",
                "FUN_00103463",
                "FUN_00106530",
                "FUN_00103238",
                "FUN_001053b0",
                "free"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid print_function_info_00105110(undefined8 *file_info,long *section_info,undefined8 paramunused_var3,undefined8 *section_name)\n\n{\n  void *ptr;\n  char *str1;\n  long **ptr_ptr;\n  long *ptr_long;\n  long long_var;\n  undefined8 *ptr_var;\n  char char_var;\n  int int_var;\n  void *ptr_var2;\n  long long_var2;\n  uint uint_var;\n  long long_var3;\n  uint local_u_int;\n  undefined local_array [8];\n  undefined *local_ptr;\n  undefined8 local_var_a0;\n  long *local_ptr1;\n  long *local_ptr2;\n  void *local_ptr3;\n  void *ptr_stack_80;\n  void *stack_var2;\n  void *ptr_stack_70;\n  undefined local_array3 [8];\n  char local_char;\n  \n  if (*(code **)(PTRunused_varPTRunused_varFUNunused_var0010b260 + 0x18) == FUNunused_var001053b0) {\n    if (DATunused_var0010b818 != 0) {\n      if (section_name != (undefined8 *)0x0) {\n        printf(\"%s:\",*section_name);\n      }\n      printf(\"%s:\",*file_info);\n    }\n  }\n  else {\n    (**(code **)(PTRunused_varPTRunused_varFUNunused_var0010b260 + 0x18))(section_name,file_info);\n  }\n  local_ptr = local_array3;\n  (**(code **)(file_info[1] + 0x218))(file_info,section_info,local_ptr);\n  uint_var = *(uint *)(section_info + 3);\n  char_var = local_char;\n  if (((((local_char == 'i') && ((uint_var & 0x400000) != 0)) && (DATunused_var0010b7c8 != (char *)0x0)) &&\n      ((*DATunused_var0010b7c8 != '\\0' && (char_var = *DATunused_var0010b7c8, (uint_var & 2) == 0)))) &&\n     (char_var = local_char, DATunused_var0010b7c8[1] != '\\0')) {\n    char_var = DATunused_var0010b7c8[1];\n  }\n  local_char = char_var;\n  local_var_a0 = paramunused_var3;\n  if ((uint_var & 0x200100) != 0) goto LABunused_var00103330;\n  long_var2 = *section_info;\n  int_var = *(int *)(*(long *)(long_var2 + 8) + 8);\n  if (((uint_var & 0x200000) == 0) && (int_var == 5)) {\n    local_ptr1 = section_info;\n    if (*(long *)(long_var2 + 0x110) == 0) {\n      local_ptr1 = (long *)0x0;\n    }\n  }\n  else {\n    local_ptr1 = (long *)0x0;\n    if (((int_var - 2U & 0xfffffffd) == 0) && (local_ptr2 = section_info, *(long *)(long_var2 + 0x110) != 0))\n    goto LABunused_var001051bf;\n  }\n  local_ptr2 = (long *)0x0;\nLABunused_var001051bf:\n  (**(code **)(PTRunused_varPTRunused_varFUNunused_var0010b260 + 0x20))(&local_ptr,file_info);\n  do {\n    if (DATunused_var0010b804 == 0) {\nLABunused_var001051e6:\n      putc(10,output_stream);\n      return;\n    }\n    if (unused_varDATunused_var0010b7b8 == file_info) {\n      ptr_var = unused_varDATunused_var0010b7b8;\n      if (DATunused_var0010b758 == (void *)0x0) goto LABunused_var00105359;\nLABunused_var00105288:\n      unused_varDATunused_var0010b7b8 = ptr_var;\n      ptr_var2 = DATunused_var0010b750;\n      if (section_info[4] == 0x10c2a8) {\n        if (unused_varDATunused_var0010b7b0 == file_info) {\n          if (DATunused_var0010b750 == (void *)0x0) goto LABunused_var001033d1;\n        }\n        else {\n          uint_var = 0;\n          if (DATunused_var0010b750 != (void *)0x0) {\n            for (; uint_var < DATunused_var0010b748; uint_var = uint_var + 1) {\n              ptr = *(void **)((long)ptr_var2 + (ulong)uint_var * 8);\n              if (ptr != (void *)0x0) {\n                free(ptr);\n              }\n            }\n            free(DATunused_var0010b740);\n            free(ptr_var2);\n            free(DATunused_var0010b738);\n            DATunused_var0010b740 = (void *)0x0;\n            DATunused_var0010b750 = (void *)0x0;\n            DATunused_var0010b738 = (void *)0x0;\n          }\nLABunused_var001033d1:\n          DATunused_var0010b748 = *(uint *)(file_info + 0x14);\n          DATunused_var0010b740 = (void *)xmalloc((ulong)DATunused_var0010b748 * 8);\n          DATunused_var0010b750 = (void *)xmalloc((ulong)DATunused_var0010b748 << 3);\n          DATunused_var0010b738 = (void *)xmalloc((ulong)DATunused_var0010b748 << 3);\n          ptr_stack_70 = DATunused_var0010b758;\n          local_ptr3 = DATunused_var0010b740;\n          ptr_stack_80 = DATunused_var0010b750;\n          stack_var2 = DATunused_var0010b738;\n          bfdunused_varmapunused_varoverunused_varsections(file_info,FUNunused_var00103c00,&local_ptr3);\n          unused_varDATunused_var0010b7b0 = file_info;\n        }\n        str1 = (char *)section_info[1];\n        for (uint_var = 0; uint_var < DATunused_var0010b748; uint_var = uint_var + 1) {\n          long_var2 = (ulong)uint_var * 8;\n          ptr_var2 = DATunused_var0010b738;\n          for (long_var3 = 0;\n              *(long *)((long)ptr_var2 + long_var2) != long_var3 && long_var3 <= *(long *)((long)ptr_var2 + long_var2)\n              ; long_var3 = long_var3 + 1) {\n            ptr_ptr = *(long ***)(*(long *)((long)DATunused_var0010b750 + long_var2) + long_var3 * 8);\n            ptr_long = *ptr_ptr;\n            if ((((ptr_long != (long *)0x0) &&\n                 (long_var = *ptr_long, *(long *)(long_var + 0x20) == section_info[4])) &&\n                (*(long *)(long_var + 0x10) == section_info[2])) &&\n               (((int_var = strcmp(str1,*(char **)(long_var + 8)), int_var == 0 &&\n                 (char_var = (**(code **)(file_info[1] + 0x240))\n                                    (file_info,DATunused_var0010b758,\n                                     *(undefined8 *)((long)DATunused_var0010b740 + long_var2),ptr_ptr[1],\n                                     &local_ptr3,local_array,&local_u_int,0), ptr_var2 = DATunused_var0010b738,\n                 char_var != '\\0')) && (local_ptr3 != (void *)0x0)))) {\n              printf(\"\\t%s:%u\",local_ptr3,(ulong)local_u_int);\n              uint_var = DATunused_var0010b748;\n              break;\n            }\n          }\n        }\n      }\n      else if (*(undefined8 **)(section_info[4] + 0xe0) == file_info) {\n        char_var = (**(code **)(file_info[1] + 0x250))(file_info,DATunused_var0010b758,section_info,&local_ptr3,&local_u_int);\n        if (((char_var != '\\0') ||\n            (char_var = (**(code **)(file_info[1] + 0x240))\n                               (file_info,DATunused_var0010b758,section_info[4],section_info[2],&local_ptr3,local_array,\n                                &local_u_int,0), char_var != '\\0')) &&\n           ((local_ptr3 != (void *)0x0 && (local_u_int != 0)))) {\n          printf(\"\\t%s:%u\");\n        }\n      }\n      goto LABunused_var001051e6;\n    }\n    if (DATunused_var0010b758 != (void *)0x0) {\n      free(DATunused_var0010b758);\n      DATunused_var0010b758 = (void *)0x0;\n    }\nLABunused_var00105359:\n    long_var2 = (**(code **)(file_info[1] + 0x1f8))(file_info);\n    if (long_var2 < 0) {\n      FUNunused_var00103463(long_var2);\n      return;\n    }\n    DATunused_var0010b758 = (void *)xmalloc();\n    long_var2 = (**(code **)(file_info[1] + 0x200))(file_info,DATunused_var0010b758);\n    ptr_var = file_info;\n    if (-1 < long_var2) goto LABunused_var00105288;\n    FUNunused_var00106530(*file_info);\nLABunused_var00103330:\n    local_ptr1 = (long *)0x0;\n    local_ptr2 = (long *)0x0;\n    (**(code **)(PTRunused_varPTRunused_varFUNunused_var0010b260 + 0x20))(&local_ptr,file_info);\n  } while( true );\n}\n\n",
            "current_name": "print_function_info_00105110",
            "entrypoint": "0x00105110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105110": "print_function_info_00105110",
                "_": "unused_var",
                "__ptr": "ptr",
                "__s1": "str1",
                "_stdout": "output_stream",
                "cVar5": "char_var",
                "free": "deallocate",
                "iVar6": "int_var",
                "lVar10": "long_var3",
                "lVar3": "long_var",
                "lVar8": "long_var2",
                "local_60": "local_char",
                "local_68": "local_array3",
                "local_88": "local_ptr3",
                "local_90": "local_ptr2",
                "local_98": "local_ptr1",
                "local_a0": "local_var_a0",
                "local_a8": "local_ptr",
                "local_b0": "local_array",
                "local_b4": "local_u_int",
                "param_1": "file_info",
                "param_2": "section_info",
                "param_4": "section_name",
                "plVar2": "ptr_long",
                "pplVar1": "ptr_ptr",
                "printf": "print_formatted",
                "puVar4": "ptr_var",
                "pvStack_70": "ptr_stack_70",
                "pvStack_78": "stack_var2",
                "pvStack_80": "ptr_stack_80",
                "pvVar7": "ptr_var2",
                "uVar9": "uint_var",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053b0": {
            "additional_data": {
                "DAT_0010b818": {
                    "condition": 1
                },
                "FUN_001053b0": {
                    "print_data": 6,
                    "print_formatted_strings": 1,
                    "print_function_info": 1,
                    "print_function_information": 1,
                    "print_function_name_and_message": 1,
                    "print_information": 1,
                    "print_message": 2,
                    "print_param": 1,
                    "print_parameters": 3,
                    "print_params": 1,
                    "print_string_with_label": 2,
                    "print_strings": 7,
                    "print_values": 4
                },
                "param_1": {
                    "format_string_1": 1,
                    "function_name": 3,
                    "label": 8,
                    "message": 1,
                    "message1": 9,
                    "message_1": 1,
                    "param_1": 1,
                    "string1": 3,
                    "string1_ptr": 1,
                    "string_1": 2,
                    "string_ptr_1": 1
                },
                "param_2": {
                    "data": 1,
                    "filename": 1,
                    "format_string_2": 1,
                    "message": 4,
                    "message2": 9,
                    "message_2": 1,
                    "param_2": 1,
                    "parameter_name": 1,
                    "string": 2,
                    "string2": 3,
                    "string2_ptr": 1,
                    "string_2": 2,
                    "string_ptr_2": 1,
                    "text": 1,
                    "value": 1,
                    "variable_name": 1
                },
                "param_3": {
                    "arg3": 1,
                    "extra_label": 1,
                    "param3": 8,
                    "param_3": 2,
                    "unused": 1,
                    "unused_param": 3,
                    "unused_param1": 1,
                    "unused_param_1": 2,
                    "unused_param_3": 1,
                    "unused_parameter": 1,
                    "unused_variable": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_variable": 1,
                    "appendix": 1,
                    "arg4": 1,
                    "extra_message": 1,
                    "format_param": 1,
                    "info_variable": 1,
                    "message_3": 1,
                    "message_delimiter": 1,
                    "param": 4,
                    "param4": 9,
                    "param_4": 3,
                    "string3": 1,
                    "string_3": 1,
                    "unused": 1,
                    "unused_param2": 1,
                    "unused_param_2": 2
                },
                "printf": {
                    "print_formatted_output": 1
                }
            },
            "called": [
                "FUN_00103573"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\nvoid print_formatted_strings_001053b0(undefined8 *message1,undefined8 *message2,undefined8 param3,undefined8 param4)\n\n{\n  if (DAT_0010b818 == 0) {\n    return;\n  }\n  if (message1 != (undefined8 *)0x0) {\n    printf(\"%s:\",*message1);\n  }\n  printf(\"%s:\",*message2,param4);\n  return;\n}\n\n",
            "current_name": "print_formatted_strings_001053b0",
            "entrypoint": "0x001053b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053b0": "print_formatted_strings_001053b0",
                "param_1": "message1",
                "param_2": "message2",
                "param_3": "param3",
                "param_4": "param4",
                "printf": "print_formatted_output"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053c0": {
            "additional_data": {
                "DAT_0010712c": {
                    "data_constant": 1
                },
                "DAT_0010b238": {
                    "format_string_2": 1
                },
                "DAT_0010b239": {
                    "space_character": 1
                },
                "DAT_0010b23d": {
                    "format_string_3": 1
                },
                "DAT_0010b7a0": {
                    "format_string_1": 1
                },
                "DAT_0010b7a8": {
                    "print_width_constant_1": 1
                },
                "DAT_0010b7ec": {
                    "constant_3": 1
                },
                "DAT_0010b7f8": {
                    "constant_2": 1
                },
                "FUN_001035a2": {
                    "clean_up": 1,
                    "cleanup": 7,
                    "do_something": 1,
                    "finalize_printing": 1,
                    "perform_cleanup": 1
                },
                "FUN_00104740": {
                    "perform_operation": 1
                },
                "FUN_001053c0": {
                    "print_symbol": 2,
                    "print_symbol_data": 1,
                    "print_symbol_info": 23,
                    "print_symbol_information": 5
                },
                "FUN_001054d0": {
                    "free_address": 1,
                    "free_value": 1,
                    "print_address": 2,
                    "print_details": 1,
                    "print_symbol_name": 1,
                    "print_value": 4,
                    "process_data": 1
                },
                "FUN_00106300": {
                    "print_error": 2,
                    "print_error_message": 2
                },
                "LAB_00103603": {
                    "print_width_error": 1
                },
                "LAB_00103623": {
                    "print_character_error": 1
                },
                "bfd_is_undefined_symclass": {
                    "check_symbol_class": 2,
                    "check_undefined_symbol_class": 3,
                    "is_symbol_undefined": 1,
                    "is_undefined_sym_class": 1,
                    "is_undefined_symbol": 1,
                    "is_undefined_symbol_class": 3
                },
                "cVar2": {
                    "is_symclass_undefined": 1,
                    "is_undefined": 18,
                    "is_undefined_class": 1,
                    "is_undefined_sym_class": 2,
                    "is_undefined_symbol": 2,
                    "is_undefined_symbol_class": 2,
                    "is_undefined_symclass": 5
                },
                "dcgettext": {
                    "get_error_message": 4,
                    "get_localized_message": 1,
                    "get_localized_string": 1,
                    "get_localized_text": 2,
                    "get_translated_string": 1,
                    "get_translated_text": 2
                },
                "iVar1": {
                    "buffer_size": 1,
                    "default_width": 1,
                    "error_code": 1,
                    "initial_value": 1,
                    "initial_width": 1,
                    "initialized_width": 1,
                    "is_undefined": 3,
                    "length": 1,
                    "print_flag": 1,
                    "print_width": 13,
                    "symbol_class": 3,
                    "unknown_var1": 1,
                    "width": 2,
                    "width_flag": 1
                },
                "lVar4": {
                    "address": 4,
                    "address_value": 1,
                    "data": 1,
                    "data_offset": 1,
                    "info_ptr": 1,
                    "offset": 2,
                    "param_value": 1,
                    "print_width": 1,
                    "symbol_address": 6,
                    "symbol_offset": 1,
                    "symbol_value": 3,
                    "temp_value": 1,
                    "value": 7,
                    "var1": 1
                },
                "param_1": {
                    "symbol_data": 5,
                    "symbol_info": 20,
                    "symbol_info_ptr": 2,
                    "symbol_ptr": 1,
                    "symbol_table": 1,
                    "symbols": 1
                },
                "param_2": {
                    "additional_info": 2,
                    "address": 1,
                    "data": 1,
                    "format_specifier": 1,
                    "info_ptr": 1,
                    "param": 14,
                    "param2": 4,
                    "param_2": 2,
                    "param_two": 1,
                    "size": 1,
                    "unknown_value": 1,
                    "value": 1,
                    "width": 1
                },
                "printf": {
                    "print": 2,
                    "print_formatted": 6,
                    "print_formatted_output": 1,
                    "print_formatted_string": 1,
                    "print_function": 1
                },
                "putchar": {
                    "print_char": 1,
                    "print_character": 2
                },
                "uVar3": {
                    "format_string": 1,
                    "localized_string": 2,
                    "message": 5,
                    "msg": 1,
                    "print_value": 5,
                    "print_width": 7,
                    "string": 1,
                    "sym_value": 1,
                    "symbol": 1,
                    "symbol_value": 1,
                    "value": 1,
                    "width": 4,
                    "width_has_not_been_initialized": 1
                }
            },
            "called": [
                "FUN_00106300",
                "dcgettext",
                "printf",
                "FUN_001054d0",
                "bfd_is_undefined_symclass",
                "FUN_001035a2"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\nvoid print_symbol_info_001053c0(long *symbol_info,undefined8 param)\n\n{\n  int print_width;\n  char is_undefined;\n  undefined8 print_width;\n  long value;\n  \n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol_info + 8));\n  print_width = DAT_0010b7a8;\n  if (is_undefined == '\\0') {\n    if (DAT_0010b7f8 == 0) {\n      if ((DAT_0010b7a8 - 0x20U & 0xffffffdf) != 0) {\nprint_width_error:\n        print_width = dcgettext(0,\"Print width has not been initialized (%d)\",5);\n        FUN_00106300(print_width,print_width);\n        goto putchar_error;\n      }\n      print_width = *(undefined8 *)*symbol_info;\n    }\n    else {\n      if (DAT_0010b7ec == 0) {\n        if (symbol_info[2] == 0) {\n          value = symbol_info[1];\n        }\n        else {\n          value = *(long *)(symbol_info[2] + 0x38);\n        }\n        FUN_001054d0(value);\n        if (DAT_0010b7ec != 0) {\n          FUN_001035a2();\n          return;\n        }\n        goto LAB_00105423;\n      }\n      print_width = *(undefined8 *)*symbol_info;\n      if ((DAT_0010b7a8 - 0x20U & 0xffffffdf) != 0) goto print_width_error;\n    }\n    printf(DAT_0010b7a0,print_width);\n    if (DAT_0010b7ec != 0) {\n      FUN_001035a2();\n      return;\n    }\n  }\n  else if (DAT_0010b7a8 == 0x40) {\n    printf(\"        \");\n    printf(\"        \");\n  }\n  else {\n    printf(\"        \");\n  }\nLAB_00105423:\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) != '-') {\n    FUN_00104740(&DAT_0010712c,symbol_info,0,param);\n    return;\n  }\nputchar_error:\n  putchar(0x20);\n  printf(&DAT_0010b238,(ulong)(uint)(int)*(char *)(*symbol_info + 0x19));\n  putchar(0x20);\n  printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*symbol_info + 0x20));\n  FUN_00104740(&DAT_0010712c,symbol_info,0,param);\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001053c0",
            "entrypoint": "0x001053c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053c0": "print_symbol_info_001053c0",
                "LAB_00103603": "print_width_error",
                "LAB_00103623": "print_character_error",
                "bfd_is_undefined_symclass": "check_undefined_symbol_class",
                "cVar2": "is_undefined",
                "dcgettext": "get_error_message",
                "iVar1": "print_width",
                "lVar4": "value",
                "param_1": "symbol_info",
                "param_2": "param",
                "printf": "print_formatted",
                "putchar": "print_character",
                "uVar3": "print_width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001054d0": {
            "additional_data": {
                "BFD_SYMBOL_CLASS": {
                    "is_undefined_symbol_class": 1
                },
                "FUN_001054d0": {
                    "print_symbol": 2,
                    "print_symbol_data": 1,
                    "print_symbol_details": 1,
                    "print_symbol_info": 23,
                    "print_symbol_information": 2,
                    "print_type_info": 1,
                    "print_variable_info": 1
                },
                "bVar9": {
                    "attribute_flag": 1,
                    "byte_var": 1,
                    "class": 1,
                    "data_type": 2,
                    "print_type": 1,
                    "section_flag": 1,
                    "sym_class": 2,
                    "sym_type": 1,
                    "sym_type_bits": 1,
                    "symbol_class": 5,
                    "symbol_type": 3,
                    "symclass": 1,
                    "type": 5,
                    "type_attribute": 1,
                    "type_category": 1,
                    "type_class": 1,
                    "type_kind": 1,
                    "type_value": 1
                },
                "cVar1": {
                    "is_undefined": 17,
                    "is_undefined_class": 1,
                    "is_undefined_sym": 1,
                    "is_undefined_symbol": 2,
                    "is_undefined_symclass": 4,
                    "symbol_class": 3,
                    "undefined_symbol": 1
                },
                "iVar3": {
                    "asprintf_result": 19,
                    "asprintf_ret_val": 2,
                    "asprintf_return_value": 1,
                    "asprintf_retval": 1,
                    "result": 2,
                    "sprintf_result": 1,
                    "status": 1
                },
                "in_R8": {
                    "arg1": 3,
                    "argument8": 1,
                    "context_r8": 1,
                    "in_r8": 1,
                    "param1": 1,
                    "r8": 4
                },
                "in_R9": {
                    "arg2": 3,
                    "argument9": 1,
                    "context_r9": 1,
                    "in_r9": 1,
                    "param2": 1,
                    "r9": 4
                },
                "lVar7": {
                    "aux_info": 1,
                    "auxiliary_ptr": 1,
                    "data": 1,
                    "field_value": 1,
                    "info": 2,
                    "info_address": 1,
                    "info_offset": 1,
                    "info_ptr": 3,
                    "msg_data_addr": 1,
                    "offset": 1,
                    "pointer": 1,
                    "ptr_value": 1,
                    "section_info": 1,
                    "subtype": 1,
                    "sym": 1,
                    "sym_details": 1,
                    "sym_info": 2,
                    "symbol_data": 2,
                    "symbol_flag": 1,
                    "symbol_info": 1,
                    "symbol_properties": 1,
                    "symbol_type": 1,
                    "type_info": 2,
                    "value": 1
                },
                "param_1": {
                    "data": 1,
                    "symbol": 24,
                    "symbol_address": 1,
                    "symbol_info": 1,
                    "symbol_name": 3,
                    "variable": 1
                },
                "pcVar11": {
                    "data_type": 1,
                    "data_type_string": 1,
                    "description": 1,
                    "memory_type": 1,
                    "print_width_str": 1,
                    "print_width_string": 1,
                    "section_type": 2,
                    "sym_type_string": 1,
                    "symbol_kind": 1,
                    "symbol_type_string": 2,
                    "type_name": 12,
                    "type_str": 1,
                    "type_string": 4
                },
                "piVar5": {
                    "errno": 1,
                    "errno_loc": 3,
                    "errno_location": 12,
                    "errno_ptr": 4,
                    "errnum": 1,
                    "error": 3,
                    "error_code": 1,
                    "error_flag": 1,
                    "error_num": 1,
                    "error_num_ptr": 1,
                    "error_number": 1,
                    "error_ptr": 1
                },
                "plVar4": {
                    "format_string": 1,
                    "info_ptr": 1,
                    "msg_ptr": 1,
                    "print_width": 2,
                    "sym_info": 2,
                    "symbol_data": 1,
                    "symbol_info": 19,
                    "symbol_info_ptr": 2,
                    "variable_ptr": 1
                },
                "uVar10": {
                    "initial_print_width": 3,
                    "initial_value_copy": 1,
                    "initial_width": 1,
                    "local_print_width": 1,
                    "old_print_width": 2,
                    "original_print_width": 8,
                    "original_width": 3,
                    "saved_original_print_width": 1,
                    "saved_print_width": 5,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "u_var10": 1
                },
                "uVar2": {
                    "class": 1,
                    "class_flag": 1,
                    "section_flags": 1,
                    "sym_class": 2,
                    "sym_class_flag": 1,
                    "sym_type": 7,
                    "symbol_class": 2,
                    "symbol_type": 3,
                    "symclass": 3,
                    "symclass_bits": 1,
                    "symtype": 1,
                    "type": 2,
                    "type_bits": 1,
                    "type_code": 2,
                    "type_flag": 1,
                    "type_value": 1
                },
                "uVar6": {
                    "err_string": 1,
                    "error_message": 6,
                    "error_msg": 2,
                    "error_str": 4,
                    "error_string": 9,
                    "errstr": 1,
                    "str_error": 2,
                    "strerror": 2,
                    "xstrerror_result": 2,
                    "xstrerror_return_value": 1
                },
                "uVar8": {
                    "initial_value": 1,
                    "print_width": 22,
                    "print_width_flag": 1,
                    "print_width_initialized": 1,
                    "saved_print_width": 2,
                    "width": 3
                }
            },
            "called": [
                "FUN_0010370a",
                "printf"
            ],
            "calling": [
                "FUN_001053c0",
                "FUN_001064b0",
                "FUN_00103729",
                "FUN_0010651a",
                "FUN_001035a2"
            ],
            "code": "\nvoid print_symbol_info_001054d0(undefined8 symbol)\n\n{\n  char is_undefined;\n  ushort sym_type;\n  int asprintf_result;\n  long *symbol_info;\n  int *errno_location;\n  undefined8 error_string;\n  long info_ptr;\n  ulong print_width;\n  byte type;\n  ulong original_print_width;\n  char *type_name;\n  undefined8 r8;\n  undefined8 r9;\n  \n  print_width = (ulong)DAT_0010b7a8;\n  if ((DAT_0010b7a8 - 0x20 & 0xffffffdf) == 0) {\n    printf(DAT_0010b7a0,symbol);\n    return;\n  }\n  symbol_info = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  original_print_width = print_width;\n  FUN_00106300(symbol_info,print_width);\n  FUN_00104740(\"%-20s|\",symbol_info,0,original_print_width,r8,r9,print_width);\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol_info + 8));\n  if (is_undefined == '\\0') {\n    print_symbol_info_001054d0(*(undefined8 *)*symbol_info);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*symbol_info + 0x20));\n    printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (symbol_info[2] == 0) {\n    if (symbol_info[3] != 0) {\n      info_ptr = *(long *)(symbol_info[3] + 0x30);\n      is_undefined = *(char *)(info_ptr + 0x28);\n      if (is_undefined == 'g') goto LAB_00103983;\n      if (is_undefined == 'h') {\n        type_name = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        type_name = \"Block\";\n      }\n      else if (*(ushort *)(info_ptr + 0x26) == 0) {\n        type_name = \"None\";\n      }\n      else {\n        sym_type = *(ushort *)(info_ptr + 0x26) >> 4 & 3;\n        if (sym_type == 2) {\n          type_name = \"Function\";\n        }\n        else if (sym_type == 3) {\n          type_name = \"Array\";\n        }\n        else {\n          if (sym_type != 1) {\n            free(DAT_0010b730);\n            sym_type = *(ushort *)(info_ptr + 0x26);\n            type = *(byte *)(info_ptr + 0x28);\n            type_name = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprintf(&DAT_0010b730,type_name,(ulong)type,(ulong)sym_type);\n            type_name = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          type_name = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    type = *(byte *)(symbol_info[2] + 0x48) & 0xf;\n    switch(type) {\n    case 0:\n      type_name = \"NOTYPE\";\n      break;\n    case 1:\n      type_name = \"OBJECT\";\n      break;\n    case 2:\n      type_name = \"FUNC\";\n      break;\n    case 3:\n      type_name = \"SECTION\";\n      break;\n    case 4:\n      type_name = \"FILE\";\n      break;\n    case 5:\n      type_name = \"COMMON\";\n      break;\n    case 6:\n      type_name = \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      type_name = \"<processor specific>: %d\";\n      if ((2 < type - 0xd) && (type_name = \"<OS specific>: %d\", 2 < type - 10)) {\n        type_name = \"<unknown>: %d\";\n      }\n      type_name = (char *)dcgettext(0,type_name,5);\n      asprintf_result = asprintf(&DAT_0010b728,type_name,(ulong)type);\n      type_name = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_location = __errno_location();\n        error_string = xstrerror(*errno_location);\n        FUN_00106300(&DAT_0010712d,error_string);\nLAB_00103983:\n        type_name = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",type_name);\n  }\n  if (symbol_info[2] == 0) {\n    if (symbol_info[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(symbol_info[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_symbol_info_001054d0();\n  }\n  info_ptr = symbol_info[2];\n  if ((info_ptr != 0) || (info_ptr = symbol_info[3], info_ptr != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(info_ptr + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001054d0",
            "entrypoint": "0x001054d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001054d0": "print_symbol_info_001054d0",
                "bVar9": "type",
                "cVar1": "is_undefined",
                "iVar3": "asprintf_result",
                "in_R8": "r8",
                "in_R9": "r9",
                "lVar7": "info_ptr",
                "param_1": "symbol",
                "pcVar11": "type_name",
                "piVar5": "errno_location",
                "plVar4": "symbol_info",
                "uVar10": "original_print_width",
                "uVar2": "sym_type",
                "uVar6": "error_string",
                "uVar8": "print_width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105530": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105543) */\n/* WARNING: Removing unreachable block (ram,0x0010554f) */\n\nvoid FUNC_00105530(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105530",
            "entrypoint": "0x00105530",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105530": "FUNC_00105530"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105560": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105584) */\n/* WARNING: Removing unreachable block (ram,0x00105590) */\n\nvoid FUNC_00105560(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105560",
            "entrypoint": "0x00105560",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105560": "FUNC_00105560"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001055f0": {
            "additional_data": {
                "FUN_00103ca0": {
                    "fun4": 1,
                    "print_error": 1
                },
                "FUN_00104370": {
                    "fun1": 1,
                    "perform_action": 1
                },
                "FUN_001043d0": {
                    "fun3": 1
                },
                "FUN_001055f0": {
                    "decompile_and_improve": 1,
                    "parse_arguments": 2,
                    "parse_files": 1,
                    "parse_input_files": 1,
                    "process_binary": 1,
                    "process_file": 1,
                    "process_files": 1
                },
                "FUN_00106300": {
                    "fun2": 1,
                    "func_00106300": 1
                },
                "__ptr": {
                    "buffer": 1,
                    "byte_array_ptr": 1,
                    "byte_pointer2": 2,
                    "byte_pointer3": 7,
                    "byte_ptr": 5,
                    "byte_ptr2": 3,
                    "byte_ptr3": 1,
                    "byte_ptr5": 2,
                    "byte_ptr_5": 1,
                    "byte_string_2": 1,
                    "cleaned_string": 1,
                    "destination_ptr": 1,
                    "new_buffer": 1,
                    "ptr3": 1
                },
                "__s": {
                    "buffer": 1,
                    "byte_array": 4,
                    "byte_pointer2": 7,
                    "byte_ptr": 1,
                    "byte_ptr1": 2,
                    "byte_ptr2": 1,
                    "byte_ptr4": 2,
                    "byte_ptr_3": 1,
                    "byte_ptr_s": 2,
                    "byte_stream": 2,
                    "byte_string": 1,
                    "data": 1,
                    "file_contents": 1,
                    "string": 1,
                    "string_ptr": 1
                },
                "__src": {
                    "array": 1,
                    "long_array_ptr": 1,
                    "long_pointer": 2,
                    "long_pointer1": 7,
                    "long_ptr": 5,
                    "long_ptr1": 5,
                    "long_ptr_4": 1,
                    "long_ptr_src": 2,
                    "size_t_pointer_2": 1,
                    "source": 1,
                    "source_ptr": 1,
                    "source_strings": 1
                },
                "__stream": {
                    "file_pointer": 4,
                    "file_pointer1": 1,
                    "file_ptr": 5,
                    "file_ptr1": 1,
                    "file_stream": 15,
                    "file_stream_pointer": 1,
                    "fstream_ptr": 1
                },
                "_sch_istable": {
                    "is_table": 1
                },
                "alternate": {
                    "option_alternate": 1
                },
                "bVar2": {
                    "bool1": 1,
                    "bool_var1": 3,
                    "boolean_var1": 1,
                    "byte_val": 1,
                    "byte_value": 2,
                    "byte_var": 6,
                    "byte_var2": 13,
                    "byte_var_2": 1,
                    "flag1": 1
                },
                "bVar3": {
                    "bool2": 1,
                    "bool_var": 1,
                    "bool_var1": 6,
                    "bool_var2": 3,
                    "bool_var3": 10,
                    "bool_var_1": 1,
                    "bool_var_3": 1,
                    "boolean_var2": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "is_alpha": 1,
                    "is_true": 2
                },
                "bVar4": {
                    "bool3": 1,
                    "bool_var2": 7,
                    "bool_var3": 3,
                    "bool_var4": 10,
                    "bool_var_2": 1,
                    "bool_var_4": 1,
                    "boolean_var3": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "is_escape": 1,
                    "is_false": 1,
                    "is_true2": 1
                },
                "bVar5": {
                    "bool4": 1,
                    "bool_var3": 7,
                    "bool_var4": 3,
                    "bool_var5": 10,
                    "bool_var_3": 1,
                    "bool_var_5": 1,
                    "boolean_var4": 1,
                    "flag3": 1,
                    "flag4": 1,
                    "is_assigned": 1,
                    "is_quote": 1,
                    "is_true3": 1
                },
                "bVar7": {
                    "byte1": 2,
                    "byte_value2": 1,
                    "byte_value_2": 1,
                    "byte_var1": 4,
                    "byte_var2": 4,
                    "byte_var3": 2,
                    "byte_var7": 11,
                    "byte_var_2": 1,
                    "byte_var_7": 1,
                    "curr_byte_val": 1
                },
                "bfd_errmsg": {
                    "bfd_error_message": 1
                },
                "bfd_get_error": {
                    "bfd_get_error": 1,
                    "get_bfd_error": 1
                },
                "bfd_init": {
                    "bfd_initialize": 1,
                    "initialize_bfd": 1
                },
                "bfd_plugin_set_program_name": {
                    "bfd_plugin_set_program_name": 1,
                    "set_bfd_plugin_program_name": 2
                },
                "bfd_set_default_target": {
                    "set_default_target": 1
                },
                "bfd_set_error_program_name": {
                    "bfd_set_error_program_name": 1,
                    "set_bfd_error_program_name": 1,
                    "set_bfd_program_name": 1
                },
                "bindValue8": {
                    "undefined8_var1": 1
                },
                "bindValue9": {
                    "undefined8_var2": 1
                },
                "bindtextdomain": {
                    "bind_text_domain": 3
                },
                "byte_op": {
                    "byte_var_4": 1
                },
                "cVar6": {
                    "char1": 2,
                    "char_value": 1,
                    "char_value_1": 1,
                    "char_var": 1,
                    "char_var1": 10,
                    "char_var6": 11,
                    "char_var_1": 1,
                    "char_var_6": 1,
                    "curr_char": 1
                },
                "cVar8": {
                    "char2": 2,
                    "char_value2": 1,
                    "char_value_2": 1,
                    "char_var2": 10,
                    "char_var8": 11,
                    "char_var_2": 1,
                    "char_var_8": 1,
                    "curr_char": 1
                },
                "cVar9": {
                    "char3": 2,
                    "char_value3": 1,
                    "char_value_3": 1,
                    "char_var2": 1,
                    "char_var3": 10,
                    "char_var9": 11,
                    "char_var_3": 1,
                    "char_var_9": 1,
                    "curr_char": 1
                },
                "caledonian": {
                    "option_caledonian": 1
                },
                "cplus_demangle_name_to_style": {
                    "cplus_demangle_name_to_style": 1,
                    "demangle_name_to_style": 1
                },
                "cplus_demangle_set_style": {
                    "cplus_demangle_set_style": 1,
                    "set_demangle_style": 1
                },
                "dcgettext": {
                    "dc_get_text": 1,
                    "dgettext": 1
                },
                "demanglingStyle": {
                    "option_demangling_style": 1
                },
                "fclose": {
                    "close_file": 1,
                    "file_close": 2
                },
                "folderName": {
                    "option_folder_name": 1
                },
                "fopen": {
                    "file_open": 1
                },
                "fprintf": {
                    "formatted_print": 1,
                    "print_to_file": 1
                },
                "fread": {
                    "file_read": 1,
                    "read_file": 1
                },
                "free": {
                    "free_memory": 1
                },
                "fseek": {
                    "file_seek": 2,
                    "seek_file": 1
                },
                "ftell": {
                    "file_tell": 3
                },
                "getopt_long": {
                    "get_long_option": 1,
                    "getopt_long": 1
                },
                "hexUnsignedCharVar": {
                    "option_hex_unsigned_char_var": 1
                },
                "iVar10": {
                    "curr_index": 1,
                    "i": 1,
                    "index": 1,
                    "int_value": 2,
                    "int_var": 2,
                    "int_var1": 12,
                    "int_var10": 8,
                    "int_var_1": 1,
                    "int_var_12": 1
                },
                "iVar11": {
                    "int_var3": 1
                },
                "iVar12": {
                    "counter": 1,
                    "file_index": 1,
                    "index": 1,
                    "index_var": 1,
                    "int_index": 1,
                    "int_var12": 7,
                    "int_var2": 11,
                    "int_var3": 2,
                    "int_var_12": 1,
                    "int_var_2": 1,
                    "j": 1,
                    "loop_var12": 1
                },
                "iVar13": {
                    "int_var3": 1
                },
                "iVar14": {
                    "int_var4": 1
                },
                "iVar15": {
                    "int_ptr": 1,
                    "int_var15": 1,
                    "int_var3": 1
                },
                "iVar27": {
                    "int_index_2": 1,
                    "int_var3": 1,
                    "opt": 1
                },
                "intSlicePenultimate": {
                    "option_int_slice_penultimate": 1
                },
                "invert": {
                    "option_invert": 1
                },
                "justSymbolsStyle": {
                    "option_just_symbols_style": 1
                },
                "lVar17": {
                    "length": 2,
                    "long_value": 2,
                    "long_var": 1,
                    "long_var1": 11,
                    "long_var17": 9,
                    "long_var2": 1,
                    "long_var_1": 1,
                    "long_var_17": 1,
                    "str_len": 1
                },
                "lVar18": {
                    "long_ptr_1": 1,
                    "long_var2": 1
                },
                "lVar19": {
                    "long_ptr_2": 1,
                    "long_var3": 1
                },
                "lVar24": {
                    "file_path": 1,
                    "long_value2": 1,
                    "long_value_2": 1,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_var2": 8,
                    "long_var24": 8,
                    "long_var3": 2,
                    "long_var4": 2,
                    "long_var_24": 1,
                    "long_var_5": 1,
                    "value1": 1
                },
                "lVar25": {
                    "long_var_2": 1
                },
                "lVar27": {
                    "long_var_4": 1
                },
                "local_108": {
                    "local_size": 7,
                    "local_size_t_108": 1,
                    "local_size_var_108": 1,
                    "local_var108": 4,
                    "local_var3": 10,
                    "local_var_108": 1,
                    "pc_var22_len": 1,
                    "size_t_var2": 1,
                    "string_length": 1
                },
                "local_10c": {
                    "file_limit": 1,
                    "int_var5": 1,
                    "local_int2": 6,
                    "local_int_10c": 2,
                    "local_int_2": 1,
                    "local_var10_c": 1,
                    "local_var10c": 3,
                    "local_var2": 10,
                    "local_var_10c": 1,
                    "max_count": 1
                },
                "local_110": {
                    "count_var": 1,
                    "curr_file_index": 1,
                    "int_var4": 1,
                    "local_int1": 6,
                    "local_int_1": 1,
                    "local_int_110": 2,
                    "local_var1": 10,
                    "local_var110": 4,
                    "local_var_110": 1
                },
                "local_c8": {
                    "file_stat": 1,
                    "file_stats": 1,
                    "local_stat": 10,
                    "local_stat_c8": 1,
                    "local_stat_var": 2,
                    "local_var4": 1,
                    "local_var_c8": 3,
                    "stat1": 1,
                    "stat_struct": 5,
                    "stat_var": 1,
                    "stat_var1": 1
                },
                "longName": {
                    "option_long_name": 1
                },
                "long_op": {
                    "long_var_6": 1
                },
                "memcmp": {
                    "memory_compare": 1
                },
                "memcpy": {
                    "copy_memory": 1,
                    "mem_copy": 1,
                    "memory_copy": 1
                },
                "memmove": {
                    "mem_move": 1,
                    "memory_move": 1
                },
                "method4": {
                    "new_method4": 1
                },
                "nLocal_108": {
                    "local_size_t": 1
                },
                "nLocal_10c": {
                    "local_int_2": 1
                },
                "nLocal_110": {
                    "local_int_1": 1
                },
                "name": {
                    "option_name": 1
                },
                "noDemangle": {
                    "option_no_demangle": 1
                },
                "octalIntVar": {
                    "option_octal_int_var": 1
                },
                "packed1": {
                    "option_packed8": 1
                },
                "packed16": {
                    "option_packed16": 1
                },
                "param_1": {
                    "argc": 9,
                    "num_files": 8,
                    "num_of_file_paths": 1,
                    "num_params": 11,
                    "number_of_params": 2
                },
                "param_2": {
                    "argv": 9,
                    "file_names": 3,
                    "file_paths": 2,
                    "file_paths_ptr": 1,
                    "file_pointers": 1,
                    "files": 1,
                    "input_files": 1,
                    "param_array": 11,
                    "param_list": 1,
                    "param_values": 1
                },
                "pbVar1": {
                    "byte_pointer": 4,
                    "byte_pointer1": 7,
                    "byte_ptr": 3,
                    "byte_ptr1": 5,
                    "byte_ptr2": 1,
                    "curr_byte": 1,
                    "current_char": 1,
                    "ptr1": 2,
                    "ptr_byte": 1,
                    "ptr_byte1": 3,
                    "ptr_byte_1": 1
                },
                "pbVar23": {
                    "byte_pointer3": 1,
                    "byte_pointer4": 6,
                    "byte_ptr": 5,
                    "byte_ptr1": 4,
                    "byte_ptr2": 3,
                    "byte_ptr3": 3,
                    "byte_ptr4": 1,
                    "byte_ptr_2": 1,
                    "byte_ptr_23": 1,
                    "byte_string_3": 1,
                    "byte_var23": 1,
                    "ptr_byte2": 1,
                    "str_ptr": 1
                },
                "pbVar25": {
                    "byte_pointer4": 1,
                    "byte_pointer5": 5,
                    "byte_ptr": 1,
                    "byte_ptr2": 6,
                    "byte_ptr3": 2,
                    "byte_ptr4": 3,
                    "byte_ptr5": 1,
                    "byte_ptr_25": 2,
                    "byte_var25": 1,
                    "pointer_var": 1,
                    "ptr_byte3": 1
                },
                "pbVar26": {
                    "str_ptr_2": 1
                },
                "pcVar22": {
                    "char_pointer1": 3,
                    "char_ptr": 1,
                    "char_ptr_program_name": 1,
                    "char_string": 1,
                    "locale_str": 1,
                    "program_name": 1,
                    "str": 1,
                    "str_buffer": 1,
                    "str_ptr": 3,
                    "str_ptr1": 2,
                    "str_ptr_3": 1,
                    "str_var": 1,
                    "str_var1": 2,
                    "str_var22": 2,
                    "string": 1,
                    "string_pointer1": 1,
                    "string_value": 1,
                    "string_var": 1,
                    "string_var1": 2,
                    "string_var22": 1
                },
                "pcVar26": {
                    "char_pointer2": 3,
                    "char_ptr1": 1,
                    "char_ptr_26": 1,
                    "error_msg": 1,
                    "error_string": 1,
                    "message_str": 1,
                    "program_name": 1,
                    "ptr": 1,
                    "str": 1,
                    "str_buffer2": 1,
                    "str_ptr2": 4,
                    "str_ptr_4": 1,
                    "str_var2": 2,
                    "str_var26": 2,
                    "string_pointer2": 1,
                    "string_value2": 1,
                    "string_var2": 3,
                    "string_var26": 1
                },
                "piVar15": {
                    "int_pointer": 2,
                    "int_pointer1": 7,
                    "int_pointer15": 1,
                    "int_ptr": 1,
                    "int_ptr1": 6,
                    "int_ptr15": 3,
                    "int_ptr_15": 2,
                    "int_ptr_2": 1,
                    "ptr2": 1,
                    "ptr_int": 1,
                    "read_res": 1,
                    "size_t_pointer": 1
                },
                "piVar27": {
                    "int_pointer2": 2,
                    "int_pointer27": 1,
                    "int_pointer3": 6,
                    "int_ptr1": 1,
                    "int_ptr2": 5,
                    "int_ptr27": 3,
                    "int_ptr3": 2,
                    "int_ptr_27": 1,
                    "optarg_index": 1,
                    "param_ptr": 1,
                    "ptr_param": 1,
                    "ptr_var2": 1
                },
                "plVar18": {
                    "file_names": 2,
                    "file_names_pointer": 1,
                    "file_paths": 1,
                    "file_paths_ptr": 1,
                    "file_pointers_2": 1,
                    "input_files_ptr": 1,
                    "long_pointer1": 1,
                    "long_pointer2": 3,
                    "long_ptr1": 1,
                    "long_ptr2": 2,
                    "long_ptr_18": 1,
                    "param2_array": 1,
                    "param_array": 1,
                    "param_array_pointer": 2,
                    "param_array_pointer1": 1,
                    "param_array_ptr": 2,
                    "param_list_var": 1,
                    "param_values_pointer": 1,
                    "path_ptr": 1,
                    "ptr2": 1,
                    "ptr_array": 1
                },
                "plVar19": {
                    "dest_strings": 1,
                    "file_names_ptr": 2,
                    "file_paths2": 1,
                    "file_paths_ptr": 1,
                    "file_pointers_3": 1,
                    "long_pointer2": 3,
                    "long_pointer3": 3,
                    "long_ptr1": 1,
                    "long_ptr2": 1,
                    "long_ptr3": 2,
                    "long_ptr_19": 1,
                    "long_ptr_5": 1,
                    "lpl_var1": 1,
                    "param2_array2": 1,
                    "param_array_pointer2": 2,
                    "param_array_ptr2": 2,
                    "param_list_var": 1,
                    "path_ptr1": 1,
                    "ptr3": 1,
                    "ptr_array2": 1,
                    "ptr_var": 1
                },
                "plVar22": {
                    "param_list_var2": 1
                },
                "plVar24": {
                    "long_ptr_3": 1
                },
                "posixStyle": {
                    "option_posix_style": 1
                },
                "printf": {
                    "print_formatted": 1
                },
                "rangeUnsignedCharVar": {
                    "option_range_unsigned_char_var": 1
                },
                "sLocal_c8": {
                    "stat_var": 1
                },
                "sVar16": {
                    "file_size": 1,
                    "size": 4,
                    "size_t_value": 1,
                    "size_t_var": 2,
                    "size_t_var16": 2,
                    "size_t_var_2": 1,
                    "size_var": 5,
                    "size_var1": 5,
                    "size_var16": 5,
                    "str_size": 1,
                    "string_size": 1
                },
                "setlocale": {
                    "set_locale": 3
                },
                "signedCharVar": {
                    "option_signed_char_var": 1
                },
                "sizeOfOrd": {
                    "option_size_of_ord": 1
                },
                "somethingSoWeAllocAgain": {
                    "option_something_so_we_alloc_again": 1
                },
                "st_whitespace": {
                    "is_whitespace_table": 1
                },
                "stat": {
                    "file_stat": 2,
                    "get_file_info": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strlen": {
                    "string_length": 1
                },
                "style": {
                    "option_style_2": 1
                },
                "textdomain": {
                    "text_domain": 3
                },
                "uVar11": {
                    "count": 1,
                    "new_index": 1,
                    "u": 1,
                    "uint_value": 2,
                    "uint_var": 5,
                    "uint_var1": 8,
                    "uint_var11": 8,
                    "uint_var_11": 1,
                    "unsigned_var1": 1,
                    "unsigned_var11": 1
                },
                "uVar13": {
                    "result1": 1,
                    "style_arg1": 1,
                    "u1": 1,
                    "uint_value_2": 1,
                    "uint_var1": 1,
                    "uint_var13": 3,
                    "uint_var2": 5,
                    "uint_var_13": 1,
                    "undefined4_var1": 1,
                    "undefined4_var13": 1,
                    "unsigned_var13": 1,
                    "unsigned_var2": 1
                },
                "uVar14": {
                    "result2": 1,
                    "style_arg2": 1,
                    "u2": 1,
                    "uint_value_3": 1,
                    "uint_var14": 3,
                    "uint_var2": 1,
                    "uint_var3": 5,
                    "uint_var_14": 1,
                    "undefined4_var14": 1,
                    "undefined4_var2": 1,
                    "unsigned_var14": 1,
                    "unsigned_var3": 1
                },
                "uVar20": {
                    "long_var2": 1,
                    "result_var": 1,
                    "return_value": 1,
                    "temp_var1": 1,
                    "u_ptr1": 1,
                    "u_var": 1,
                    "u_var20": 1,
                    "uint_var20": 1,
                    "uint_var4": 1,
                    "uint_var_20": 1,
                    "undefined8_value": 1,
                    "undefined8_var1": 5,
                    "undefined8_var20": 5,
                    "undefined8_var_5": 1,
                    "undefined_var20": 1,
                    "unknown1": 1,
                    "unknown_var1": 1,
                    "unsigned_var20": 1,
                    "unsigned_var4": 1
                },
                "uVar21": {
                    "long_var3": 1,
                    "other_return_value": 1,
                    "result_var2": 1,
                    "temp_var2": 1,
                    "u_ptr2": 1,
                    "u_var1": 1,
                    "u_var21": 1,
                    "uint_var21": 1,
                    "uint_var5": 1,
                    "uint_var_21": 1,
                    "undefined8_value2": 1,
                    "undefined8_var2": 5,
                    "undefined8_var21": 5,
                    "undefined8_var_6": 1,
                    "undefined_var21": 1,
                    "unknown2": 1,
                    "unknown_var2": 1,
                    "unsigned_var21": 1,
                    "unsigned_var5": 1
                },
                "uint16Slice": {
                    "option_uint16_slice": 1
                },
                "uint8SlicePointer": {
                    "option_uint8_slice_pointer": 1
                },
                "unaff_R12": {
                    "curr_file_index": 1,
                    "int_pointer": 1,
                    "int_pointer2": 6,
                    "int_ptr": 2,
                    "int_ptr1": 1,
                    "int_ptr2": 2,
                    "loop_var": 1,
                    "ptr_result": 1,
                    "ptr_var1": 1,
                    "result_int_ptr": 1,
                    "unaff_r12": 5,
                    "unaff_reg12": 1,
                    "unaff_reg2": 1,
                    "undef_r12": 1
                },
                "unaff_RBP": {
                    "result": 2,
                    "result_ptr": 4,
                    "return_pointer": 1,
                    "return_value": 1,
                    "unaff_bp": 1,
                    "unaff_param": 1,
                    "unaff_rbp": 5,
                    "unaff_reg1": 1,
                    "unaff_reg_base_ptr": 1,
                    "undef_rbp": 1,
                    "undefined_pointer1": 5,
                    "undefined_pp": 1,
                    "undefined_ptr": 2,
                    "undefined_ptr1": 2
                },
                "undefMethod2": {
                    "method2": 1
                },
                "undefMethod3": {
                    "method3": 1
                },
                "wabc": {
                    "byte_array": 1
                },
                "xexit": {
                    "exit_program": 1,
                    "xexit": 1
                },
                "xfree": {
                    "free": 1
                },
                "xmalloc": {
                    "allocate_memory": 1,
                    "malloc_memory": 1,
                    "x_malloc": 1
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 2,
                    "xmalloc_set_program_name": 1
                },
                "xrealloc": {
                    "realloc_memory": 2,
                    "x_realloc": 1
                },
                "xstrdup": {
                    "duplicate_string": 1,
                    "xstrdup": 1
                }
            },
            "called": [
                "FUN_00104370",
                "bfd_set_error_program_name",
                "dcgettext",
                "fprintf",
                "memmove",
                "bfd_errmsg",
                "exit",
                "xmalloc_set_program_name",
                "free",
                "FUN_00106300",
                "xstrdup",
                "cplus_demangle_set_style",
                "setlocale",
                "bfd_set_default_target",
                "printf",
                "fclose",
                "bindtextdomain",
                "stat",
                "getopt_long",
                "bfd_get_error",
                "xmalloc",
                "memcpy",
                "fread",
                "bfd_init",
                "ftell",
                "cplus_demangle_name_to_style",
                "bfd_plugin_set_program_name",
                "strlen",
                "bfd_plugin_set_plugin",
                "ferror",
                "textdomain",
                "fopen",
                "FUN_00106400",
                "xexit",
                "strcmp",
                "fseek",
                "FUN_00103ca0",
                "FUN_001043d0",
                "xrealloc"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nundefined ** parse_input_files_001055f0(int num_params,long *param_array)\n\n{\n  byte *byte_pointer1;\n  byte byte_var2;\n  bool bool_var3;\n  bool bool_var4;\n  bool bool_var5;\n  char char_var6;\n  byte byte_var7;\n  char char_var8;\n  char char_var9;\n  int int_var1;\n  uint uint_var1;\n  int int_var2;\n  undefined4 uint_var2;\n  undefined4 uint_var3;\n  FILE *file_stream;\n  byte *byte_pointer2;\n  int *int_pointer1;\n  size_t size_var16;\n  byte *byte_pointer3;\n  long *long_pointer1;\n  long long_var1;\n  long *long_pointer2;\n  long *long_pointer2;\n  undefined8 undefined8_var1;\n  undefined8 undefined8_var21;\n  char *str_ptr;\n  byte *byte_pointer4;\n  undefined **undefined_pointer1;\n  long long_var2;\n  byte *byte_ptr2;\n  char *str_ptr2;\n  int *int_pointer2;\n  int *int_pointer3;\n  int local_var1;\n  int local_var2;\n  size_t local_var3;\n  file_stat local_stat;\n  \n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  str_ptr = \"binutils\";\n  setlocale(3,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_0010b820 = *param_array;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_0010b820);\n  bfd_plugin_set_program_name(DAT_0010b820);\n  long_pointer2 = param_array;\n  if (1 < num_params) {\n    local_var2 = 2000;\n    int_pointer2 = (int *)0x1;\n    local_var1 = 0;\n    do {\n      int_var2 = (int)int_pointer2;\n      undefined_pointer1 = (undefined **)(long)int_var2;\n      int_pointer3 = (int *)((long)undefined_pointer1 * 8);\n      if (*(char *)long_pointer2[(long)undefined_pointer1] != '@') goto LAB_00105a70;\n      local_var2 = local_var2 + -1;\n      if (local_var2 == 0) {\n        long_var2 = *long_pointer2;\n        str_ptr2 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_00105f1d;\n      }\n      str_ptr = (char *)long_pointer2[(long)undefined_pointer1] + 1;\n      int_var1 = file_stat(str_ptr,&local_stat);\n      if (int_var1 < 0) {\nLAB_00105a70:\n        if (num_params <= int_var2 + 1) break;\nLAB_00105a7a:\n        uint_var1 = int_var2 + 1;\n        local_var1 = int_var2;\n      }\n      else {\n        if ((local_stat.st_mode & 0xf000) == 0x4000) goto LAB_00105f13;\n        file_stream = fopen(str_ptr,\"r\");\n        if (file_stream == (FILE *)0x0) goto LAB_00105a70;\n        int_var1 = fseek(file_stream,0,2);\n        if (((int_var1 == -1) ||\n            (str_ptr = (char *)ftell(file_stream), (int *)str_ptr == (int *)0xffffffffffffffff)) ||\n           (int_var1 = fseek(file_stream,0,0), int_var1 == -1)) {\nLAB_00105ad0:\n          fclose(file_stream);\n          if (int_var2 + 1 < num_params) goto LAB_00105a7a;\n          break;\n        }\n        byte_pointer2 = (byte *)xmalloc((char *)((long)str_ptr + 1));\n        int_pointer1 = (int *)fread(byte_pointer2,1,(size_t)str_ptr,file_stream);\n        if (((int *)str_ptr != int_pointer1) && (int_var1 = ferror(file_stream), int_var1 != 0)) {\n          free_memory(byte_pointer2);\n          goto LAB_00105ad0;\n        }\n        byte_pointer2[(long)int_pointer1] = 0;\n        byte_var7 = *byte_pointer2;\n        byte_pointer4 = byte_pointer2;\n        if (byte_var7 != 0) {\nLAB_001057d0:\n          if (((&is_table)[(ulong)byte_var7 * 2] & 0x40) != 0) goto LAB_001057c0;\n          size_var16 = strlen((char *)byte_pointer2);\n          byte_pointer3 = (byte *)xmalloc(size_var16 + 1);\n          int_var1 = 0;\n          bool_var5 = false;\n          bool_var3 = false;\n          long_var2 = 0;\n          long_pointer1 = (long *)0x0;\n          bool_var4 = false;\n          byte_pointer4 = byte_pointer2;\n          do {\n            while (((&is_table)[(ulong)*byte_pointer4 * 2] & 0x40) != 0) {\n              byte_pointer4 = byte_pointer4 + 1;\n            }\n            if ((int_var1 == 0) || (long_pointer2 = long_pointer1 + long_var2, int_var1 + -1 <= (int)long_var2)) {\n              if (long_pointer1 == (long *)0x0) {\n                int_var1 = 8;\n                long_pointer1 = (long *)xmalloc(0x40);\n                long_pointer2 = long_pointer1 + long_var2;\n                *long_pointer2 = 0;\n              }\n              else {\n                int_var1 = int_var1 * 2;\n                long_pointer1 = (long *)xrealloc(long_pointer1,(long)int_var1 << 3);\n                long_pointer2 = long_pointer1 + long_var2;\n                *long_pointer2 = 0;\n              }\n            }\n            byte_var7 = *byte_pointer4;\n            byte_ptr2 = byte_pointer3;\n            while (byte_var7 != 0) {\n              while( true ) {\n                if ((((&is_table)[(ulong)byte_var7 * 2] & 0x40) != 0) &&\n                   (!(bool)(bool_var5 | bool_var4 | bool_var3))) {\n                  bool_var4 = false;\n                  bool_var5 = false;\n                  bool_var3 = false;\n                  goto LAB_001058e0;\n                }\n                if (!bool_var4) break;\n                byte_pointer4 = byte_pointer4 + 1;\n                *byte_ptr2 = byte_var7;\n                byte_ptr2 = byte_ptr2 + 1;\n                bool_var4 = false;\n                byte_var7 = *byte_pointer4;\n                if (byte_var7 == 0) goto LAB_001058e0;\n              }\n              if (byte_var7 == 0x5c) {\n                bool_var4 = true;\n              }\n              else if (bool_var3) {\n                if (byte_var7 == 0x27) {\n                  bool_var3 = false;\n                }\n                else {\nLAB_00105a55:\n                  *byte_ptr2 = byte_var7;\n                  byte_ptr2 = byte_ptr2 + 1;\n                }\n              }\n              else if (bool_var5) {\n                if (byte_var7 != 0x22) goto LAB_00105a55;\n                bool_var5 = false;\n              }\n              else if (byte_var7 == 0x27) {\n                bool_var3 = true;\n              }\n              else {\n                if (byte_var7 != 0x22) goto LAB_00105a55;\n                bool_var5 = true;\n              }\n              byte_pointer1 = byte_pointer4 + 1;\n              byte_pointer4 = byte_pointer4 + 1;\n              byte_var7 = *byte_pointer1;\n            }\nLAB_001058e0:\n            *byte_ptr2 = 0;\n            long_var1 = xstrdup(byte_pointer3);\n            *long_pointer2 = long_var1;\n            long_pointer1[long_var2 + 1] = 0;\n            byte_var7 = *byte_pointer4;\n            byte_var2 = (&is_table)[(ulong)byte_var7 * 2];\n            while ((byte_var2 & 0x40) != 0) {\n              byte_var7 = byte_pointer4[1];\n              byte_pointer4 = byte_pointer4 + 1;\n              byte_var2 = (&is_table)[(ulong)byte_var7 * 2];\n            }\n            long_var2 = long_var2 + 1;\n          } while (byte_var7 != 0);\n          free_memory(byte_pointer3);\n          long_pointer2 = long_pointer2;\n          if (param_array == long_pointer2) goto LAB_00105c79;\n          goto LAB_0010597d;\n        }\nLAB_00105c5c:\n        long_pointer1 = (long *)xmalloc(8);\n        *long_pointer1 = 0;\n        if (param_array == long_pointer2) {\nLAB_00105c79:\n          if (*long_pointer2 == 0) {\n            int_var1 = 0;\n          }\n          else {\n            long_var2 = 1;\n            do {\n              int_var1 = (int)long_var2;\n              long_pointer2 = long_pointer2 + long_var2;\n              long_var2 = long_var2 + 1;\n            } while (*long_pointer2 != 0);\n          }\n          long_var1 = 0;\n          long_pointer2 = (long *)xmalloc((long)(int_var1 + 1) << 3);\n          long_var2 = *long_pointer2;\n          while (long_var2 != 0) {\n            undefined8_var1 = xstrdup();\n            *(undefined8 *)((long)long_pointer2 + long_var1) = undefined8_var1;\n            long_var1 = long_var1 + 8;\n            long_var2 = *(long *)((long)long_pointer2 + long_var1);\n          }\n          *(undefined8 *)((long)long_pointer2 + long_var1) = 0;\nLAB_0010597d:\n          long_pointer2 = long_pointer2;\n          if (*long_pointer1 == 0) goto LAB_00105d50;\n          str_ptr = (char *)0x0;\n          do {\n            str_ptr = (char *)((long)str_ptr + 1);\n          } while (long_pointer1[(long)str_ptr] != 0);\n          local_var3 = (long)str_ptr * 8;\n        }\n        else {\nLAB_00105d50:\n          str_ptr = (char *)0x0;\n          local_var3 = 0;\n        }\n        free_memory((void *)long_pointer2[(long)undefined_pointer1]);\n        long_pointer2 = (long *)xrealloc(long_pointer2,(long)((long)str_ptr + (long)num_params + 1) * 8);\n        int_var1 = num_params + -1 + (int)str_ptr;\n        memmove(long_pointer2 + (long)(undefined **)((long)undefined_pointer1 + (long)str_ptr),\n                long_pointer2 + 1 + (long)undefined_pointer1,(long)(num_params - int_var2) << 3);\n        memcpy(long_pointer2 + (long)undefined_pointer1,long_pointer1,local_var3);\n        free_memory(long_pointer1);\n        free_memory(byte_pointer2);\n        fclose(file_stream);\n        uint_var1 = local_var1 + 1;\n        undefined_pointer1 = (undefined **)((long)undefined_pointer1 + (long)str_ptr);\n        int_pointer2 = int_pointer3;\n        num_params = int_var1;\n        if (int_var1 <= (int)uint_var1) break;\n      }\n      int_pointer2 = (int *)(ulong)uint_var1;\n    } while( true );\n  }\n  int_var2 = bfd_init();\n  str_ptr2 = \"fatal error: libbfd ABI mismatch\";\n  if (int_var2 != 0x118) goto LAB_00106085;\n  undefined_pointer1 = &PTR_s_debug_syms_0010b280;\n  char_var8 = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n  str_ptr = \"aABCDef:gHhjJlnopPrSst:uU:vVvWX:\";\n  int_pointer2 = (int *)\"x86_64-pc-linux-gnu\";\n  char_var9 = DAT_0010b23b;\n  char_var6 = DAT_0010b240;\n  uint_var3 = DAT_0010b244;\n  if (char_var8 != '\\0') {\nswitchD_00105c5a_caseD_0:\n    DAT_0010b244 = uint_var3;\n    DAT_0010b240 = char_var6;\n    DAT_0010b23b = char_var9;\n    uint_var2 = getopt_long(num_params,long_pointer2,str_ptr);\n    int_pointer3 = _optarg;\n    int_pointer1 = (int *)str_ptr;\n    char_var9 = DAT_0010b23b;\n    char_var6 = DAT_0010b240;\n    uint_var3 = DAT_0010b244;\n    switch(uint_var2) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x54:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x69:\n    case 0x6b:\n    case 0x6d:\n    case 0x71:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x87:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n    case 0xa1:\n    case 0xa2:\n    case 0xa3:\n    case 0xa4:\n    case 0xa5:\n    case 0xa6:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n    case 0xaa:\n    case 0xab:\n    case 0xac:\n    case 0xad:\n    case 0xae:\n    case 0xaf:\n    case 0xb0:\n    case 0xb1:\n    case 0xb2:\n    case 0xb3:\n    case 0xb4:\n    case 0xb5:\n    case 0xb6:\n    case 0xb7:\n    case 0xb8:\n    case 0xb9:\n    case 0xba:\n    case 0xbb:\n    case 0xbc:\n    case 0xbd:\n    case 0xbe:\n    case 0xbf:\n    case 0xc0:\n    case 0xc1:\n    case 0xc2:\n    case 0xc3:\n    case 0xc4:\n    case 0xc5:\n    case 0xc6:\n    case 199:\n      FUN_00103ca0(_stderr,1);\n      int_pointer3 = int_pointer2;\nLAB_001061d5:\n      int_var2 = strcmp((char *)int_pointer3,\"l\");\n      if (int_var2 == 0) goto LAB_001061a3;\n      int_var2 = strcmp((char *)int_pointer3,\"escape\");\n      int_pointer2 = int_pointer3;\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"e\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 2;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var2 = strcmp((char *)int_pointer3,\"invalid\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"i\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 5;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var2 = strcmp((char *)int_pointer3,\"hex\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"x\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 3;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var2 = strcmp((char *)int_pointer3,\"highlight\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"h\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 4;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      str_ptr2 = \"invalid argument to -U/--unicode: %s\";\n      break;\n    case 0x41:\n    case 0x6f:\n      DAT_0010b818 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x42:\n      FUN_00104370(&DAT_00107033);\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x43:\n      goto switchD_00105c5a_caseD_43;\n    case 0x44:\n      DAT_0010b80c = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x48:\n    case 0x68:\n      FUN_00103ca0(_stdout,0);\nswitchD_00105c5a_caseD_43:\n      int_pointer2 = (int *)&optarg;\n      DAT_0010b814 = 1;\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      if (_optarg != (int *)0x0) {\n        int_var2 = cplus_demangle_name_to_style();\n        int_pointer1 = _optarg;\n        if (int_var2 == 0) {\n          undefined8_var1 = dcgettext(0,\"unknown demangling option_style_2 `%s\\'\",5);\n          FUN_00106300(undefined8_var1,int_pointer1);\nswitchD_00105c5a_caseD_cc:\n          DAT_0010b248 = DAT_0010b248 | 0x40000;\n          str_ptr = (char *)int_pointer1;\n          char_var9 = DAT_0010b23b;\n          char_var6 = DAT_0010b240;\n          uint_var3 = DAT_0010b244;\n        }\n        else {\n          cplus_demangle_set_style();\n          char_var9 = DAT_0010b23b;\n          char_var6 = DAT_0010b240;\n          uint_var3 = DAT_0010b244;\n        }\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x50:\n      FUN_00104370(\"posix\");\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x53:\n      DAT_0010b7ec = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x55:\n      DAT_0010b7e4 = 1;\n      DAT_0010b7e8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x56:\n      goto switchD_00105c5a_caseD_56;\n    case 0x57:\n      DAT_0010b7d8 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x58:\n      int_var2 = strcmp((char *)_optarg,\"32_64\");\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      if (int_var2 != 0) {\n        str_ptr2 = \"Only -X 32_64 is supported\";\nLAB_00106085:\n        undefined8_var1 = dcgettext(0,str_ptr2,5);\n        FUN_00106300(undefined8_var1);\nswitchD_00105c5a_caseD_56:\n        DAT_0010b7dc = 1;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x61:\n      DAT_0010b81c = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x66:\n      FUN_00104370(_optarg);\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x67:\n      DAT_0010b808 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6a:\n      FUN_00104370(\"just-symbols\");\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6c:\n      DAT_0010b804 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6e:\n    case 0x76:\n      DAT_0010b7fc = 1;\n      DAT_0010b800 = 0;\n      DAT_0010b7f8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x70:\n      DAT_0010b800 = 1;\n      DAT_0010b7fc = 0;\n      DAT_0010b7f8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x72:\n      DAT_0010b7f4 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x73:\n      _DAT_0010b7f0 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x74:\n      char_var9 = *(char *)_optarg;\n      int_pointer2 = int_pointer3;\n      char_var6 = char_var9;\n      uint_var3 = 10;\n      if (char_var9 == 'd') goto switchD_00105c5a_caseD_0;\n      if ('c' < char_var9) {\n        if (char_var9 == 'o') {\n          uint_var3 = 8;\n          goto switchD_00105c5a_caseD_0;\n        }\n        if (char_var9 == 'x') {\n          uint_var3 = 0x10;\n          goto switchD_00105c5a_caseD_0;\n        }\n      }\n      str_ptr2 = \"%s: invalid radix\";\n      break;\n    case 0x75:\n      DAT_0010b7e8 = 1;\n      DAT_0010b7e4 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 200:\n      DAT_0010b7d0 = _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xc9:\n      bfd_plugin_set_plugin(_optarg);\n      char_var9 = DAT_0010b23b;\n      char_var6 = DAT_0010b240;\n      uint_var3 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0xca:\n      DAT_0010b7f8 = 1;\n      DAT_0010b800 = 0;\n      DAT_0010b7fc = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcb:\n      DAT_0010b248 = DAT_0010b248 & 0xfffbffff;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcc:\n      goto switchD_00105c5a_caseD_cc;\n    case 0xcd:\n      DAT_0010b7c8 = _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xce:\n      int_var2 = strcmp((char *)_optarg,\"default\");\n      if ((int_var2 == 0) || (int_var2 = strcmp((char *)int_pointer3,\"d\"), int_var2 == 0)) {\n        DAT_0010b7e0 = 0;\n        int_pointer2 = int_pointer3;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n      }\n      else {\n        int_var2 = strcmp((char *)int_pointer3,\"locale\");\n        if (int_var2 != 0) goto LAB_001061d5;\nLAB_001061a3:\n        DAT_0010b7e0 = 1;\n        int_pointer2 = int_pointer3;\n        char_var9 = DAT_0010b23b;\n        char_var6 = DAT_0010b240;\n        uint_var3 = DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0xcf:\n      goto switchD_00105c5a_caseD_cf;\n    default:\n      goto code_r0x00105b40;\n    }\n    undefined8_var1 = dcgettext(0,str_ptr2,5);\n    FUN_00106300(undefined8_var1,int_pointer3);\nLAB_00105f13:\n    long_var2 = *long_pointer2;\n    str_ptr2 = \"%s: error: @-file refers to a directory\\n\";\nLAB_00105f1d:\n    fprintf(_stderr,str_ptr2,long_var2);\n    xexit(1);\n    goto LAB_00105f38;\n  }\n  uint_var3 = bfd_get_error();\n  undefined8_var1 = bfd_errmsg(uint_var3);\n  undefined8_var21 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n  FUN_00106300(undefined8_var21,\"x86_64-pc-linux-gnu\",undefined8_var1);\n  goto LAB_0010613c;\nLAB_001057c0:\n  byte_var7 = byte_pointer4[1];\n  byte_pointer4 = byte_pointer4 + 1;\n  if (byte_var7 == 0) goto LAB_00105c5c;\n  goto LAB_001057d0;\nswitchD_00105c5a_caseD_cf:\n  _DAT_0010b810 = 1;\n  goto switchD_00105c5a_caseD_0;\ncode_r0x00105b40:\n  undefined_pointer1 = (undefined **)(ulong)DAT_0010b7dc;\n  if (DAT_0010b7dc != 0) {\n    printf(\"GNU %s %s\\n\",&DAT_001070c6,\"(GNU Binutils for Debian) 2.40\");\n    str_ptr = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n    printf(str_ptr);\n    str_ptr = (char *)dcgettext(0,\n                                \"This program is free_memory software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                ,5);\n    printf(str_ptr);\n                    \n    exit(0);\n  }\n  if ((DAT_0010b7f8 != 0) && (DAT_0010b7e8 != 0)) {\n    undefined8_var1 = dcgettext(0,\"Using the --size-sort and --undefined-only options together\",5);\n    FUN_00106400(undefined8_var1);\n    undefined8_var1 = dcgettext(0,\"will produce no output, since undefined symbols have no size.\",5);\n    FUN_00106400(undefined8_var1);\n    return undefined_pointer1;\n  }\n  str_ptr = &optind;\n  if (_optind != num_params) {\n    if (1 < num_params - _optind) {\nLAB_00105f38:\n      _DAT_0010b7c4 = 1;\n    }\n    while( true ) {\n      int_var2 = *(int *)str_ptr;\n      if (num_params <= int_var2) break;\n      long_var2 = long_pointer2[int_var2];\n      *(int *)str_ptr = int_var2 + 1;\n      char_var9 = FUN_001043d0(long_var2);\n      if (char_var9 != '\\0') {\n        int_var2 = *(int *)str_ptr;\n        if (num_params <= int_var2) break;\n        long_var2 = long_pointer2[int_var2];\n        *(int *)str_ptr = int_var2 + 1;\n        char_var9 = FUN_001043d0(long_var2);\n        if (char_var9 != '\\0') {\n          int_var2 = *(int *)str_ptr;\n          while( true ) {\n            if (num_params <= int_var2) goto LAB_00105bdd;\n            long_var2 = long_pointer2[int_var2];\n            *(int *)str_ptr = int_var2 + 1;\n            char_var9 = FUN_001043d0(long_var2);\n            if (char_var9 == '\\0') break;\n            int_var2 = *(int *)str_ptr;\n          }\n        }\n      }\n      undefined_pointer1 = (undefined **)(ulong)((int)undefined_pointer1 + 1);\n    }\nLAB_00105bdd:\n                    \n    exit((int)undefined_pointer1);\n  }\nLAB_0010613c:\n  uint_var1 = FUN_001043d0(\"a.out\");\n  return (undefined **)(ulong)((uint_var1 ^ 1) & 0xff);\n}\n\n",
            "current_name": "parse_input_files_001055f0",
            "entrypoint": "0x001055f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001055f0": "parse_input_files_001055f0",
                "__ptr": "byte_pointer3",
                "__s": "byte_pointer2",
                "__src": "long_pointer1",
                "__stream": "file_stream",
                "_sch_istable": "is_table",
                "bVar2": "byte_var2",
                "bVar3": "bool_var3",
                "bVar4": "bool_var4",
                "bVar5": "bool_var5",
                "bVar7": "byte_var7",
                "bfd_errmsg": "bfd_error_message",
                "bfd_get_error": "get_bfd_error",
                "bfd_init": "initialize_bfd",
                "bfd_plugin_set_program_name": "set_bfd_plugin_program_name",
                "bfd_set_default_target": "set_default_target",
                "bfd_set_error_program_name": "set_bfd_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar6": "char_var6",
                "cVar8": "char_var8",
                "cVar9": "char_var9",
                "cplus_demangle_name_to_style": "demangle_name_to_style",
                "cplus_demangle_set_style": "set_demangle_style",
                "dcgettext": "dc_get_text",
                "fclose": "file_close",
                "fopen": "file_open",
                "fprintf": "print_to_file",
                "fread": "file_read",
                "free": "free_memory",
                "fseek": "file_seek",
                "ftell": "file_tell",
                "iVar10": "int_var1",
                "iVar12": "int_var2",
                "iVar15": "int_var3",
                "iVar27": "int_var3",
                "lVar17": "long_var1",
                "lVar18": "long_var2",
                "lVar19": "long_var3",
                "lVar24": "long_var2",
                "local_108": "local_var3",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "local_stat",
                "memcpy": "copy_memory",
                "memmove": "mem_move",
                "name": "option_name",
                "param_1": "num_params",
                "param_2": "param_array",
                "pbVar1": "byte_pointer1",
                "pbVar23": "byte_pointer4",
                "pbVar25": "byte_ptr2",
                "pcVar22": "str_ptr",
                "pcVar26": "str_ptr2",
                "piVar15": "int_pointer1",
                "piVar27": "int_pointer3",
                "plVar18": "long_pointer2",
                "plVar19": "long_pointer2",
                "printf": "print_formatted",
                "sVar16": "size_var16",
                "setlocale": "set_locale",
                "stat": "file_stat",
                "strcmp": "compare_strings",
                "strlen": "string_length",
                "style": "option_style_2",
                "textdomain": "text_domain",
                "uVar11": "uint_var1",
                "uVar13": "uint_var2",
                "uVar14": "uint_var3",
                "uVar20": "undefined8_var1",
                "uVar21": "undefined8_var21",
                "unaff_R12": "int_pointer2",
                "unaff_RBP": "undefined_pointer1",
                "xmalloc": "malloc_memory",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "realloc_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001062d0": {
            "additional_data": {
                "DAT_0010b818": {
                    "condition": 1,
                    "condition2": 1
                },
                "FUN_001062d0": {
                    "print_error_message": 1,
                    "print_function_name_if_ready": 1,
                    "print_if_active": 1,
                    "print_if_condition_met": 6,
                    "print_if_condition_satisfied": 1,
                    "print_if_debug_mode": 2,
                    "print_if_debug_on": 1,
                    "print_if_enabled": 2,
                    "print_if_flag_enabled": 1,
                    "print_if_flag_is_set": 1,
                    "print_if_flag_set": 5,
                    "print_if_initialized": 1,
                    "print_if_not_busy": 1,
                    "print_if_valid": 2,
                    "print_message": 3,
                    "print_message_if_enabled": 1,
                    "print_message_or_nothing": 1
                },
                "_DAT_0010b7c4": {
                    "condition1": 1,
                    "flag": 1
                },
                "__format": {
                    "format_string": 1
                },
                "param_1": {
                    "error_message": 1,
                    "function_name": 1,
                    "message": 28
                },
                "printf": {
                    "print_formatted": 2
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_message_if_enabled_001062d0(undefined8 message)\n\n{\n  if ((_DAT_0010b7c4 != 0) && (DAT_0010b818 == 0)) {\n    printf(\"\\n%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_enabled_001062d0",
            "entrypoint": "0x001062d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001062d0": "print_message_if_enabled_001062d0",
                "param_1": "message",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106300": {
            "additional_data": {
                "FUN_00106300": {
                    "print_error": 1,
                    "print_error_message": 29
                },
                "FUN_001063a0": {
                    "print_error_details": 1,
                    "print_formatted_message": 1
                },
                "F_106300": {
                    "print_error_message": 1
                },
                "__arg": {
                    "arg": 1,
                    "arg_array": 4,
                    "arg_pointer": 1,
                    "arg_ptr": 2,
                    "args": 7,
                    "args_array": 1,
                    "args_ptr": 1,
                    "argument": 1,
                    "arguments": 9,
                    "local_args": 2,
                    "output_args": 1,
                    "pointer_arg": 1
                },
                "__format": {
                    "error_format": 1,
                    "error_message_format": 1,
                    "format": 8,
                    "format_ptr": 1,
                    "format_str": 2,
                    "format_string": 17,
                    "message_format": 1
                },
                "in_AL": {
                    "condition": 5,
                    "condition_flag": 1,
                    "flag": 14,
                    "input_char": 1,
                    "input_flag": 1
                },
                "local_18": {
                    "arg7": 1,
                    "arg7_local": 1,
                    "arg8": 1,
                    "error_code16": 1,
                    "error_code_param8": 1,
                    "error_info4": 1,
                    "error_param8": 1,
                    "error_param8_copy": 1,
                    "error_var8": 1,
                    "local_arg7": 1,
                    "local_error8": 1,
                    "local_param13": 1,
                    "local_var10": 2,
                    "local_var15": 3,
                    "local_var17": 3,
                    "param8": 4,
                    "param8_1": 1,
                    "param8_copy": 3,
                    "param_8_copy": 1,
                    "value27": 1,
                    "var_b8": 1
                },
                "local_28": {
                    "arg6": 1,
                    "arg6_local": 1,
                    "arg7": 1,
                    "error_code15": 1,
                    "error_code_param7": 1,
                    "error_info3": 1,
                    "error_param7": 1,
                    "error_param7_copy": 1,
                    "error_var7": 1,
                    "local_arg6": 1,
                    "local_error7": 1,
                    "local_param12": 1,
                    "local_var14": 3,
                    "local_var16": 3,
                    "local_var9": 2,
                    "param7": 4,
                    "param7_1": 1,
                    "param7_copy": 3,
                    "param_7_copy": 1,
                    "value26": 1,
                    "var_b0": 1
                },
                "local_38": {
                    "arg5": 1,
                    "arg5_local": 1,
                    "arg6": 1,
                    "error_code14": 1,
                    "error_code_param6": 1,
                    "error_info2": 1,
                    "error_param6": 1,
                    "error_param6_copy": 1,
                    "error_var6": 1,
                    "local_arg5": 1,
                    "local_error6": 1,
                    "local_param11": 1,
                    "local_var13": 3,
                    "local_var15": 3,
                    "local_var8": 2,
                    "param6": 4,
                    "param6_1": 1,
                    "param6_copy": 3,
                    "param_6_copy": 1,
                    "value25": 1,
                    "var_a8": 1
                },
                "local_48": {
                    "arg4": 1,
                    "arg4_local": 1,
                    "arg5": 1,
                    "error_code13": 1,
                    "error_code_param5": 1,
                    "error_info1": 1,
                    "error_param5": 1,
                    "error_param5_copy": 1,
                    "error_var5": 1,
                    "local_arg4": 1,
                    "local_error5": 1,
                    "local_param10": 1,
                    "local_var12": 3,
                    "local_var14": 3,
                    "local_var7": 2,
                    "param5": 4,
                    "param5_1": 1,
                    "param5_copy": 3,
                    "param_5_copy": 1,
                    "value24": 1,
                    "var_a0": 1
                },
                "local_58": {
                    "arg3": 1,
                    "arg3_local": 1,
                    "arg4": 1,
                    "error_category": 1,
                    "error_code12": 1,
                    "error_code_param4": 1,
                    "error_param4": 1,
                    "error_param4_copy": 1,
                    "error_var4": 1,
                    "local_arg3": 1,
                    "local_error4": 1,
                    "local_param9": 1,
                    "local_var11": 3,
                    "local_var13": 3,
                    "local_var6": 2,
                    "param4": 4,
                    "param4_1": 1,
                    "param4_copy": 3,
                    "param_4_copy": 1,
                    "value23": 1,
                    "var_98": 1
                },
                "local_68": {
                    "arg2": 1,
                    "arg2_local": 1,
                    "arg3": 1,
                    "error_code11": 1,
                    "error_code_param3": 1,
                    "error_flag": 1,
                    "error_param3": 1,
                    "error_param3_copy": 1,
                    "error_var3": 1,
                    "local_arg2": 1,
                    "local_error3": 1,
                    "local_param8": 1,
                    "local_var10": 3,
                    "local_var12": 3,
                    "local_var5": 2,
                    "param3": 4,
                    "param3_1": 1,
                    "param3_copy": 3,
                    "param_3_copy": 1,
                    "value22": 1,
                    "var_90": 1
                },
                "local_78": {
                    "arg1": 1,
                    "arg1_local": 1,
                    "arg2": 1,
                    "error_code": 1,
                    "error_code10": 1,
                    "error_code_param2": 1,
                    "error_param2": 1,
                    "error_param2_copy": 1,
                    "error_var2": 1,
                    "local_arg1": 1,
                    "local_error2": 1,
                    "local_param7": 1,
                    "local_var11": 3,
                    "local_var4": 2,
                    "local_var9": 3,
                    "param2": 4,
                    "param2_1": 1,
                    "param2_copy": 3,
                    "param_2_copy": 1,
                    "value21": 1,
                    "var_88": 1
                },
                "local_88": {
                    "arg1": 1,
                    "error_code": 1,
                    "error_code1": 2,
                    "error_code9": 1,
                    "error_code_copy": 4,
                    "error_code_local": 1,
                    "error_code_param1": 1,
                    "error_param1": 1,
                    "error_param1_copy": 1,
                    "error_type": 1,
                    "error_var1": 1,
                    "local_error1": 1,
                    "local_error_code": 1,
                    "local_param6": 1,
                    "local_var10": 3,
                    "local_var3": 2,
                    "local_var8": 3,
                    "param1": 4,
                    "var_80": 1
                },
                "local_90": {
                    "arg9": 1,
                    "argument7": 1,
                    "buffer_param5": 1,
                    "error_param14_copy": 1,
                    "local_data5": 1,
                    "local_param14": 2,
                    "local_param5": 1,
                    "local_var7": 3,
                    "local_var9": 3,
                    "message5": 1,
                    "message5_ptr": 1,
                    "not_needed": 1,
                    "param14": 6,
                    "param14_copy": 2,
                    "param6": 1,
                    "param_14": 1,
                    "param_14_copy": 1,
                    "unused_param6": 1,
                    "var5": 1,
                    "var_78": 1
                },
                "local_98": {
                    "arg8": 1,
                    "argument6": 1,
                    "buffer_param4": 1,
                    "error_param13_copy": 1,
                    "local_data4": 1,
                    "local_param13": 2,
                    "local_param4": 1,
                    "local_var6": 3,
                    "local_var8": 3,
                    "message4": 1,
                    "message4_ptr": 1,
                    "not_needed": 1,
                    "param13": 6,
                    "param13_copy": 2,
                    "param5": 1,
                    "param_13": 1,
                    "param_13_copy": 1,
                    "unused_param5": 1,
                    "var4": 1,
                    "var_70": 1
                },
                "local_a0": {
                    "arg7": 1,
                    "argument5": 1,
                    "buffer_param3": 1,
                    "error_param12_copy": 1,
                    "local_data3": 1,
                    "local_param12": 2,
                    "local_param3": 1,
                    "local_var5": 3,
                    "local_var7": 3,
                    "message3": 1,
                    "message3_ptr": 1,
                    "not_needed": 1,
                    "param12": 6,
                    "param12_copy": 2,
                    "param4": 1,
                    "param_12": 1,
                    "param_12_copy": 1,
                    "unused_param4": 1,
                    "var3": 1,
                    "var_68": 1
                },
                "local_a8": {
                    "arg6": 1,
                    "argument4": 1,
                    "buffer_param2": 1,
                    "error_param11_copy": 1,
                    "local_data2": 1,
                    "local_param11": 2,
                    "local_param2": 1,
                    "local_var4": 3,
                    "local_var6": 3,
                    "message2": 1,
                    "message2_ptr": 1,
                    "not_needed": 1,
                    "param11": 6,
                    "param11_copy": 2,
                    "param3": 1,
                    "param_11": 1,
                    "param_11_copy": 1,
                    "unused_param3": 1,
                    "var2": 1,
                    "var_60": 1
                },
                "local_b0": {
                    "arg5": 1,
                    "argument3": 1,
                    "buffer_param1": 1,
                    "error_param10_copy": 1,
                    "local_data1": 1,
                    "local_param1": 1,
                    "local_param10": 2,
                    "local_var3": 3,
                    "local_var5": 3,
                    "message1": 1,
                    "message1_ptr": 1,
                    "not_needed": 1,
                    "param10": 5,
                    "param10_copy": 2,
                    "param2": 1,
                    "param_10": 1,
                    "param_10_copy": 1,
                    "unused_param2": 1,
                    "var1": 1,
                    "var_58": 1
                },
                "local_b8": {
                    "array": 1,
                    "buffer": 6,
                    "buffer_array": 1,
                    "byte_array": 1,
                    "local_array": 9,
                    "local_buffer": 9,
                    "local_data_array": 1,
                    "local_var": 1,
                    "temp_buffer": 1,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "arg3": 1,
                    "arg4": 1,
                    "buffer": 4,
                    "buffer_ptr": 1,
                    "data2": 1,
                    "local_buffer": 7,
                    "local_pointer": 1,
                    "local_pointer2": 2,
                    "local_ptr": 1,
                    "local_var1": 1,
                    "local_var2": 3,
                    "local_var4": 3,
                    "pointer2": 2,
                    "print_buffer": 1,
                    "string": 1,
                    "var4": 1
                },
                "local_d0": {
                    "arg3": 1,
                    "buffer": 6,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "data1": 1,
                    "local_array": 2,
                    "local_pointer1": 2,
                    "local_var1": 2,
                    "local_var3": 3,
                    "pointer1": 2,
                    "pointer_to_stack": 1,
                    "ptr": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 1,
                    "string_buffer": 1,
                    "string_ptr": 3,
                    "var3": 1
                },
                "local_d4": {
                    "arg2": 7,
                    "argument2": 1,
                    "buffer_size": 1,
                    "byte_count": 1,
                    "char_count": 1,
                    "constant": 1,
                    "constant30": 1,
                    "count2": 1,
                    "length": 1,
                    "local_arg2": 1,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var2": 7,
                    "local_variable2": 1,
                    "num2": 1,
                    "param_offset": 1,
                    "size": 2,
                    "var2": 1
                },
                "local_d8": {
                    "arg1": 7,
                    "argument1": 1,
                    "array_size": 3,
                    "buffer_size": 1,
                    "count": 2,
                    "count1": 1,
                    "length": 1,
                    "local_arg1": 1,
                    "local_var1": 6,
                    "local_variable1": 1,
                    "num": 1,
                    "num1": 1,
                    "num_args": 1,
                    "size": 2,
                    "stack_size": 1,
                    "var1": 1
                },
                "param_1": {
                    "arg1": 2,
                    "error_code": 20,
                    "error_code1": 3,
                    "error_param1": 1,
                    "error_type": 1,
                    "message": 1
                },
                "param_10": {
                    "arg1": 1,
                    "arg2": 1,
                    "data2": 1,
                    "error_param10": 1,
                    "error_string": 1,
                    "message": 4,
                    "message1": 1,
                    "message1_ptr": 1,
                    "param10": 11,
                    "param2": 1,
                    "param2_not_needed": 1,
                    "param_10": 1,
                    "unused_param2": 1,
                    "value1": 1,
                    "var_30": 1
                },
                "param_11": {
                    "arg1": 3,
                    "arg11": 1,
                    "arg2": 1,
                    "arg3": 1,
                    "args": 1,
                    "data3": 1,
                    "error_param11": 1,
                    "message2": 1,
                    "message2_ptr": 1,
                    "param11": 11,
                    "param3": 1,
                    "param3_not_needed": 1,
                    "param_11": 1,
                    "unused_param3": 1,
                    "value2": 1,
                    "var_38": 1
                },
                "param_12": {
                    "arg12": 1,
                    "arg2": 3,
                    "arg3": 1,
                    "arg4": 1,
                    "args2": 1,
                    "data4": 1,
                    "error_param12": 1,
                    "message3": 1,
                    "message3_ptr": 1,
                    "param12": 11,
                    "param4": 1,
                    "param4_not_needed": 1,
                    "param_12": 1,
                    "unused_param4": 1,
                    "value3": 1,
                    "var_40": 1
                },
                "param_13": {
                    "arg13": 1,
                    "arg3": 3,
                    "arg4": 1,
                    "arg5": 1,
                    "args3": 1,
                    "data5": 1,
                    "error_param13": 1,
                    "message4": 1,
                    "message4_ptr": 1,
                    "param13": 11,
                    "param5": 1,
                    "param5_not_needed": 1,
                    "param_13": 1,
                    "unused_param5": 1,
                    "value4": 1,
                    "var_48": 1
                },
                "param_14": {
                    "arg14": 1,
                    "arg4": 3,
                    "arg5": 1,
                    "arg6": 1,
                    "args4": 1,
                    "data6": 1,
                    "error_param14": 1,
                    "message5": 1,
                    "message5_ptr": 1,
                    "param14": 11,
                    "param6": 1,
                    "param6_not_needed": 1,
                    "param_14": 1,
                    "unused_param6": 1,
                    "value5": 1,
                    "var_50": 1
                },
                "param_2": {
                    "arg1": 3,
                    "arg2": 3,
                    "arguments_list": 1,
                    "error_code": 1,
                    "error_code2": 3,
                    "error_param2": 1,
                    "file_descriptor": 1,
                    "info1": 1,
                    "param2": 11,
                    "param_2": 2,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 3,
                    "arg3": 3,
                    "buffer_size": 1,
                    "error3": 1,
                    "error_code3": 3,
                    "error_flag": 1,
                    "error_param3": 1,
                    "info2": 1,
                    "param3": 11,
                    "param_3": 2,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 3,
                    "arg4": 3,
                    "error4": 1,
                    "error_category": 1,
                    "error_code4": 3,
                    "error_param4": 1,
                    "info3": 1,
                    "param4": 11,
                    "param_4": 2,
                    "value3": 1,
                    "var_10": 1
                },
                "param_5": {
                    "arg4": 3,
                    "arg5": 3,
                    "error5": 1,
                    "error_code5": 3,
                    "error_info1": 1,
                    "error_param5": 1,
                    "info4": 1,
                    "param5": 11,
                    "param_5": 2,
                    "value4": 1,
                    "var_14": 1
                },
                "param_6": {
                    "arg5": 3,
                    "arg6": 3,
                    "error6": 1,
                    "error_code6": 3,
                    "error_info2": 1,
                    "error_param6": 1,
                    "info5": 1,
                    "param6": 11,
                    "param_6": 2,
                    "value5": 1,
                    "var_18": 1
                },
                "param_7": {
                    "arg6": 3,
                    "arg7": 3,
                    "error7": 1,
                    "error_code7": 3,
                    "error_info3": 1,
                    "error_param7": 1,
                    "info6": 1,
                    "param7": 11,
                    "param_7": 2,
                    "value6": 1,
                    "var_1_c": 1
                },
                "param_8": {
                    "arg7": 3,
                    "arg8": 3,
                    "error8": 1,
                    "error_code8": 3,
                    "error_info4": 1,
                    "error_param8": 1,
                    "info7": 1,
                    "param8": 11,
                    "param_8": 2,
                    "value7": 1,
                    "var_20": 1
                },
                "param_9": {
                    "arg1": 1,
                    "arg9": 1,
                    "data1": 1,
                    "error_param9": 1,
                    "param1": 1,
                    "param1_not_needed": 1,
                    "param9": 15,
                    "param_9": 2,
                    "unused_param1": 1,
                    "var_28": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "xexit",
                "FUN_001063a0"
            ],
            "calling": [
                "FUN_001053c0",
                "FUN_0010370a",
                "FUN_00104370",
                "FUN_00103729",
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid print_error_message_00106300(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 *arguments;\n  char *format_string;\n  undefined4 arg1;\n  undefined4 local_var2;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined4 param5;\n  undefined4 param6;\n  undefined4 param7;\n  undefined4 param8;\n  \n  arguments = &arg1;\n  if (flag != '\\0') {\n    param1 = error_code;\n    param2 = param2;\n    param3 = param3;\n    param4 = param4;\n    param5 = param5;\n    param6 = param6;\n    param7 = param7;\n    param8 = param8;\n  }\n  buffer = &stack0x00000008;\n  arg1 = 8;\n  local_buffer = local_buffer;\n  local_var2 = 0x30;\n  param10 = param10;\n  param11 = param11;\n  param12 = param12;\n  param13 = param13;\n  param14 = param14;\n  FUN_001063a0();\n  format_string = (char *)0x1;\n  xexit();\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",DAT_0010b820);\n  vfprintf(_stderr,format_string,arguments);\n  putc(10,_stderr);\n  return;\n}\n\n",
            "current_name": "print_error_message_00106300",
            "entrypoint": "0x00106300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106300": "print_error_message_00106300",
                "__arg": "arguments",
                "__format": "format_string",
                "in_AL": "flag",
                "local_18": "param8",
                "local_28": "param7",
                "local_38": "param6",
                "local_48": "param5",
                "local_58": "param4",
                "local_68": "param3",
                "local_78": "param2",
                "local_88": "param1",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "local_var2",
                "local_d8": "arg1",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001063a0": {
            "additional_data": {
                "FUN_001063a0": {
                    "print_error_message": 29,
                    "print_message": 1,
                    "print_with_format": 1
                },
                "__arg": {
                    "argument": 1,
                    "argument_list": 1,
                    "arguments": 3
                },
                "__c": {
                    "character": 8
                },
                "__format": {
                    "format": 6,
                    "format_string": 2
                },
                "__gnuc_va_list": {
                    "arguments": 1
                },
                "__s": {
                    "file": 1,
                    "file_stream": 2,
                    "output_stream": 1,
                    "stream": 4
                },
                "__stdout": {
                    "standard_output": 1
                },
                "__stream": {
                    "file": 4,
                    "output_stream": 3,
                    "stream": 1
                },
                "_stderr": {
                    "error_output": 2,
                    "error_stream": 1,
                    "standard_error": 8,
                    "stderr": 1,
                    "stderr_stream": 2
                },
                "_stdout": {
                    "standard_output": 8,
                    "stdout": 1,
                    "stdout_stream": 2
                },
                "fflush": {
                    "flush_output": 4,
                    "flush_output_buffer": 1,
                    "flush_output_stream": 1,
                    "flush_standard_output": 1,
                    "flush_stream": 2
                },
                "fprintf": {
                    "format_and_print": 1,
                    "format_and_write": 1,
                    "format_error_output": 1,
                    "format_string": 1,
                    "formatted_print": 1,
                    "print_formatted": 1,
                    "print_formatted_error": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1
                },
                "param_1": {
                    "error_message": 16,
                    "format_string": 1,
                    "message": 14
                },
                "param_2": {
                    "arg_list": 1,
                    "args": 11,
                    "args_list": 1,
                    "arguments": 10,
                    "format_args": 1,
                    "var_arg_list": 1,
                    "var_args_list": 1
                },
                "put": {
                    "write_character": 1
                },
                "putc": {
                    "put_character": 3,
                    "write_char": 1,
                    "write_character": 1,
                    "write_character_to_file": 1
                },
                "vfprintf": {
                    "format_and_print_variable": 1,
                    "format_and_write_var_args": 1,
                    "format_variable_arguments": 1,
                    "formatted_vararg_print": 1,
                    "print_formatted_error_with_arguments": 1,
                    "print_formatted_with_args": 1,
                    "print_variable_formatted_message": 1,
                    "print_variable_formatted_output": 1,
                    "v_format_string": 1
                }
            },
            "called": [
                "putc",
                "fprintf",
                "fflush",
                "vfprintf"
            ],
            "calling": [
                "FUN_00106300",
                "FUN_00106400"
            ],
            "code": "\n\n\nvoid print_error_message_001063a0(char *error_message,arguments args)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_0010b820);\n  vfprintf(standard_error,error_message,args);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_001063a0",
            "entrypoint": "0x001063a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001063a0": "print_error_message_001063a0",
                "__gnuc_va_list": "arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "formatted_print",
                "param_1": "error_message",
                "param_2": "args",
                "put": "write_character",
                "putc": "put_character",
                "vfprintf": "print_variable_formatted_output"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106400": {
            "additional_data": {
                "FUN_001063a0": {
                    "other_function": 1,
                    "process_data_helper": 2
                },
                "FUN_00106400": {
                    "decode_data": 1,
                    "extract_and_process_data": 2,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "initialize_function": 2,
                    "parse_input": 2,
                    "process_data": 15
                },
                "in_AL": {
                    "bool_condition": 1,
                    "condition": 4,
                    "flag": 15,
                    "flag_input": 1,
                    "input_flag": 2,
                    "is_condition_true": 1,
                    "is_valid_flag": 1
                },
                "local_18": {
                    "arg8_new": 1,
                    "condition8": 1,
                    "copy_8": 1,
                    "data8_copy": 1,
                    "input8": 3,
                    "input8_copy": 1,
                    "input8_new": 1,
                    "input_8": 2,
                    "input_copy8": 1,
                    "input_param_8_local": 1,
                    "local8": 2,
                    "local_data8": 1,
                    "local_input8": 1,
                    "local_input_8": 1,
                    "local_unused_param8": 1,
                    "local_var17": 1,
                    "local_var8": 1,
                    "local_variable8": 1,
                    "output8": 2,
                    "param_eight_copy": 1,
                    "param_h_condition": 1,
                    "temp_var8": 1,
                    "values_param": 1
                },
                "local_28": {
                    "arg7_new": 1,
                    "arguments_param": 1,
                    "condition7": 1,
                    "copy_7": 1,
                    "data7_copy": 1,
                    "input7": 3,
                    "input7_copy": 1,
                    "input7_new": 1,
                    "input_7": 2,
                    "input_copy7": 1,
                    "input_param_7_local": 1,
                    "local7": 2,
                    "local_data7": 1,
                    "local_input7": 1,
                    "local_input_7": 1,
                    "local_unused_param7": 1,
                    "local_var16": 1,
                    "local_var7": 1,
                    "local_variable7": 1,
                    "output7": 2,
                    "param_g_condition": 1,
                    "param_seven_copy": 1,
                    "temp_var7": 1
                },
                "local_38": {
                    "arg6_new": 1,
                    "condition6": 1,
                    "copy_6": 1,
                    "data6_copy": 1,
                    "input6": 3,
                    "input6_copy": 1,
                    "input6_new": 1,
                    "input_6": 2,
                    "input_copy6": 1,
                    "input_param_6_local": 1,
                    "local6": 2,
                    "local_data6": 1,
                    "local_input6": 1,
                    "local_input_6": 1,
                    "local_unused_param6": 1,
                    "local_var15": 1,
                    "local_var6": 1,
                    "local_variable6": 1,
                    "output6": 2,
                    "param_f_condition": 1,
                    "param_six_copy": 1,
                    "params_param": 1,
                    "temp_var6": 1
                },
                "local_48": {
                    "arg5_new": 1,
                    "condition5": 1,
                    "copy_5": 1,
                    "data5_copy": 1,
                    "input5": 3,
                    "input5_copy": 1,
                    "input5_new": 1,
                    "input_5": 2,
                    "input_copy5": 1,
                    "input_param_5_local": 1,
                    "local5": 2,
                    "local_data5": 1,
                    "local_input5": 1,
                    "local_input_5": 1,
                    "local_unused_param5": 1,
                    "local_var14": 1,
                    "local_var5": 1,
                    "local_variable5": 1,
                    "options_param": 1,
                    "output5": 2,
                    "param_e_condition": 1,
                    "param_five_copy": 1,
                    "temp_var5": 1
                },
                "local_58": {
                    "arg4_new": 1,
                    "condition4": 1,
                    "copy_4": 1,
                    "data4_copy": 1,
                    "input4": 3,
                    "input4_copy": 1,
                    "input4_new": 1,
                    "input_4": 2,
                    "input_copy4": 1,
                    "input_param_4_local": 1,
                    "local4": 2,
                    "local_data4": 1,
                    "local_input4": 1,
                    "local_input_4": 1,
                    "local_unused_param4": 1,
                    "local_var13": 1,
                    "local_var4": 1,
                    "local_variable4": 1,
                    "output4": 2,
                    "param_d_condition": 1,
                    "param_four_copy": 1,
                    "settings_param": 1,
                    "temp_var4": 1
                },
                "local_68": {
                    "arg3_new": 1,
                    "condition3": 1,
                    "copy_3": 1,
                    "data3_copy": 1,
                    "data_param": 1,
                    "input3": 3,
                    "input3_copy": 1,
                    "input3_new": 1,
                    "input_3": 2,
                    "input_copy3": 1,
                    "input_param_3_local": 1,
                    "local3": 2,
                    "local_data3": 1,
                    "local_input3": 1,
                    "local_input_3": 1,
                    "local_unused_param3": 1,
                    "local_var12": 1,
                    "local_var3": 1,
                    "local_variable3": 1,
                    "output3": 2,
                    "param_c_condition": 1,
                    "param_three_copy": 1,
                    "temp_var3": 1
                },
                "local_78": {
                    "arg2_new": 1,
                    "condition2": 1,
                    "config_param": 1,
                    "copy_2": 1,
                    "data2_copy": 1,
                    "input2": 3,
                    "input2_copy": 1,
                    "input2_new": 1,
                    "input_2": 2,
                    "input_copy2": 1,
                    "input_param_2_local": 1,
                    "local2": 2,
                    "local_data2": 1,
                    "local_input2": 1,
                    "local_input_2": 1,
                    "local_unused_param2": 1,
                    "local_var11": 1,
                    "local_var2": 1,
                    "local_variable2": 1,
                    "output2": 2,
                    "param_b_condition": 1,
                    "param_two_copy": 1,
                    "temp_var2": 1
                },
                "local_88": {
                    "arg1_new": 1,
                    "condition1": 1,
                    "copy_1": 1,
                    "data1_copy": 1,
                    "flag_param": 1,
                    "input1": 3,
                    "input1_copy": 1,
                    "input1_new": 1,
                    "input_1": 2,
                    "input_copy1": 1,
                    "input_param_1_local": 1,
                    "local1": 2,
                    "local_data1": 1,
                    "local_input1": 1,
                    "local_input_1": 1,
                    "local_unused_param1": 1,
                    "local_var1": 1,
                    "local_var10": 1,
                    "local_variable1": 1,
                    "output1": 2,
                    "param_a_condition": 1,
                    "param_one_copy": 1,
                    "temp_var1": 1
                },
                "local_90": {
                    "arg5": 1,
                    "arg5_copy": 1,
                    "arg6": 3,
                    "data14": 1,
                    "data_6": 1,
                    "local_param5": 1,
                    "local_param_14": 1,
                    "local_var5": 1,
                    "local_var9": 1,
                    "param14": 4,
                    "param14_copy": 1,
                    "param6_new": 1,
                    "param_14": 1,
                    "param_14_local": 1,
                    "param_fourteen": 1,
                    "param_n_copy": 1,
                    "pointer5": 1,
                    "ptr_data_5": 1,
                    "stack_variable8": 1,
                    "temp_param_f": 1,
                    "temp_var5": 1,
                    "value6": 1,
                    "value_5": 1,
                    "var5": 1
                },
                "local_98": {
                    "arg4": 1,
                    "arg4_copy": 1,
                    "arg5": 3,
                    "data13": 1,
                    "data_5": 1,
                    "local_param4": 1,
                    "local_param_13": 1,
                    "local_var4": 1,
                    "local_var8": 1,
                    "param13": 4,
                    "param13_copy": 1,
                    "param5_new": 1,
                    "param_13": 1,
                    "param_13_local": 1,
                    "param_m_copy": 1,
                    "param_thirteen": 1,
                    "pointer4": 1,
                    "ptr_data_4": 1,
                    "stack_variable7": 1,
                    "temp_param_e": 1,
                    "temp_var4": 1,
                    "value5": 1,
                    "value_4": 1,
                    "var4": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "arg3_copy": 1,
                    "arg4": 3,
                    "data12": 1,
                    "data_4": 1,
                    "local_param3": 1,
                    "local_param_12": 1,
                    "local_var3": 1,
                    "local_var7": 1,
                    "param12": 4,
                    "param12_copy": 1,
                    "param4_new": 1,
                    "param_12": 1,
                    "param_12_local": 1,
                    "param_l_copy": 1,
                    "param_twelve": 1,
                    "pointer3": 1,
                    "ptr_data_3": 1,
                    "stack_variable6": 1,
                    "temp_param_d": 1,
                    "temp_var3": 1,
                    "value4": 1,
                    "value_3": 1,
                    "var3": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "arg2_copy": 1,
                    "arg3": 3,
                    "data11": 1,
                    "data_3": 1,
                    "local_param2": 1,
                    "local_param_11": 1,
                    "local_var2": 1,
                    "local_var6": 1,
                    "param11": 4,
                    "param11_copy": 1,
                    "param3_new": 1,
                    "param_11": 1,
                    "param_11_local": 1,
                    "param_eleven": 1,
                    "param_k_copy": 1,
                    "pointer2": 1,
                    "ptr_data_2": 1,
                    "stack_variable5": 1,
                    "temp_param_c": 1,
                    "temp_var2": 1,
                    "value3": 1,
                    "value_2": 1,
                    "var2": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "arg1_copy": 1,
                    "arg2": 3,
                    "data10": 1,
                    "data_2": 1,
                    "local_param1": 1,
                    "local_param_10": 1,
                    "local_var1": 1,
                    "local_var5": 1,
                    "param10": 4,
                    "param10_copy": 1,
                    "param2_new": 1,
                    "param_10": 1,
                    "param_10_local": 1,
                    "param_j_copy": 1,
                    "param_ten": 1,
                    "pointer1": 1,
                    "ptr_data_1": 1,
                    "stack_variable4": 1,
                    "temp_param_b": 1,
                    "temp_var1": 1,
                    "value2": 1,
                    "value_1": 1,
                    "var1": 1
                },
                "local_b8": {
                    "buffer": 5,
                    "data_buffer": 1,
                    "local_array": 2,
                    "local_buffer": 8,
                    "local_buffer_data": 1,
                    "local_data": 1,
                    "local_var_arr": 1,
                    "output": 1,
                    "temp_buffer": 4,
                    "temporary_buffer": 2
                },
                "local_c8": {
                    "buffer": 8,
                    "buffer2": 1,
                    "destination": 2,
                    "local_array2": 1,
                    "local_buffer": 9,
                    "local_data": 1,
                    "local_var4": 1,
                    "local_var_ptr2": 1,
                    "output_array": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "stack_data": 1,
                    "stack_variable2": 1
                },
                "local_d0": {
                    "address": 1,
                    "buffer": 5,
                    "buffer1": 1,
                    "buffer_pointer": 2,
                    "buffer_ptr": 3,
                    "input_array": 1,
                    "local_array1": 1,
                    "local_var3": 1,
                    "local_var_ptr1": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "ptr": 1,
                    "ptr_stack": 1,
                    "source": 2,
                    "stack_pointer": 1,
                    "stack_pointer1": 1,
                    "stack_ptr": 1
                },
                "local_d4": {
                    "buffer_size": 3,
                    "bytes_to_copy": 1,
                    "constant": 4,
                    "count": 1,
                    "counter": 1,
                    "data_size": 1,
                    "flag_length": 1,
                    "length": 4,
                    "local_var2": 2,
                    "local_var_size": 1,
                    "offset": 3,
                    "size": 2,
                    "stack_variable3": 1,
                    "value": 1
                },
                "local_d8": {
                    "buffer_size": 2,
                    "count": 1,
                    "length": 4,
                    "local_var1": 2,
                    "num_bytes": 1,
                    "size": 16,
                    "stack_size": 2,
                    "stack_variable1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 1,
                    "data1": 3,
                    "flag": 1,
                    "input1": 14,
                    "input_1": 5,
                    "input_param_1": 1,
                    "input_variable1": 1,
                    "param1": 1,
                    "param_a": 1,
                    "param_one": 1,
                    "source_1": 1
                },
                "param_10": {
                    "arg1": 2,
                    "arg2": 1,
                    "data1": 1,
                    "data10": 1,
                    "data_2": 1,
                    "data_pointer2": 2,
                    "destination_1": 1,
                    "output_data1": 1,
                    "output_param2": 1,
                    "param1": 1,
                    "param10": 4,
                    "param2": 3,
                    "param_10": 4,
                    "param_arg2": 1,
                    "param_b": 1,
                    "param_j": 1,
                    "ptr_data_1": 1,
                    "value2": 1,
                    "var1": 1,
                    "var2": 1
                },
                "param_11": {
                    "arg2": 2,
                    "arg3": 1,
                    "data11": 1,
                    "data2": 1,
                    "data_3": 1,
                    "data_pointer3": 2,
                    "destination_2": 1,
                    "output_data2": 1,
                    "output_param3": 1,
                    "param11": 4,
                    "param2": 1,
                    "param3": 3,
                    "param_11": 4,
                    "param_arg3": 1,
                    "param_c": 1,
                    "param_k": 1,
                    "ptr_data_2": 1,
                    "value3": 1,
                    "var2": 1,
                    "var3": 1
                },
                "param_12": {
                    "arg3": 2,
                    "arg4": 1,
                    "data12": 1,
                    "data3": 1,
                    "data_4": 1,
                    "data_pointer4": 2,
                    "destination_3": 1,
                    "output_data3": 1,
                    "output_param4": 1,
                    "param12": 4,
                    "param3": 1,
                    "param4": 3,
                    "param_12": 4,
                    "param_arg4": 1,
                    "param_d": 1,
                    "param_l": 1,
                    "ptr_data_3": 1,
                    "value4": 1,
                    "var3": 1,
                    "var4": 1
                },
                "param_13": {
                    "arg4": 2,
                    "arg5": 1,
                    "data13": 1,
                    "data4": 1,
                    "data_5": 1,
                    "data_pointer5": 2,
                    "destination_4": 1,
                    "output_data4": 1,
                    "output_param5": 1,
                    "param13": 4,
                    "param4": 1,
                    "param5": 3,
                    "param_13": 4,
                    "param_arg5": 1,
                    "param_e": 1,
                    "param_m": 1,
                    "ptr_data_4": 1,
                    "value5": 1,
                    "var4": 1,
                    "var5": 1
                },
                "param_14": {
                    "arg5": 2,
                    "arg6": 1,
                    "data14": 1,
                    "data5": 1,
                    "data_6": 1,
                    "data_pointer6": 2,
                    "destination_5": 1,
                    "output_data5": 1,
                    "output_param6": 1,
                    "param14": 4,
                    "param5": 1,
                    "param6": 3,
                    "param_14": 4,
                    "param_arg6": 1,
                    "param_f": 1,
                    "param_n": 1,
                    "ptr_data_5": 1,
                    "value6": 1,
                    "var5": 1,
                    "var6": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arguments": 1,
                    "config": 1,
                    "data2": 3,
                    "input2": 14,
                    "input_2": 5,
                    "input_param_2": 1,
                    "input_variable2": 1,
                    "param2": 1,
                    "param_b": 1,
                    "param_two": 1,
                    "source_2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "data": 1,
                    "data3": 3,
                    "input3": 15,
                    "input_3": 5,
                    "input_param_3": 1,
                    "input_variable3": 1,
                    "param3": 1,
                    "param_c": 1,
                    "param_three": 1,
                    "source_3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "data4": 3,
                    "input4": 15,
                    "input_4": 5,
                    "input_param_4": 1,
                    "input_variable4": 1,
                    "param4": 1,
                    "param_d": 1,
                    "param_four": 1,
                    "settings": 1,
                    "source_4": 1
                },
                "param_5": {
                    "arg5": 1,
                    "data5": 3,
                    "input5": 15,
                    "input_5": 5,
                    "input_param_5": 1,
                    "input_variable5": 1,
                    "options": 1,
                    "param5": 1,
                    "param_e": 1,
                    "param_five": 1,
                    "source_5": 1
                },
                "param_6": {
                    "arg6": 1,
                    "data6": 3,
                    "input6": 15,
                    "input_6": 5,
                    "input_param_6": 1,
                    "input_variable6": 1,
                    "param6": 1,
                    "param_f": 1,
                    "param_six": 1,
                    "params": 1,
                    "source_6": 1
                },
                "param_7": {
                    "arg7": 1,
                    "arguments": 1,
                    "data7": 3,
                    "input7": 15,
                    "input_7": 5,
                    "input_param_7": 1,
                    "input_variable7": 1,
                    "param7": 1,
                    "param_g": 1,
                    "param_seven": 1,
                    "source_7": 1
                },
                "param_8": {
                    "arg8": 1,
                    "data8": 3,
                    "input8": 15,
                    "input_8": 5,
                    "input_param_8": 1,
                    "input_variable8": 1,
                    "param8": 1,
                    "param_eight": 1,
                    "param_h": 1,
                    "source_8": 1,
                    "values": 1
                },
                "param_9": {
                    "arg1": 1,
                    "data": 3,
                    "data9": 1,
                    "data_1": 1,
                    "data_pointer1": 2,
                    "data_ptr": 2,
                    "input9": 1,
                    "input_data": 1,
                    "input_list": 1,
                    "output_param1": 1,
                    "param1": 3,
                    "param9": 1,
                    "param_9": 1,
                    "param_a": 1,
                    "param_arg1": 1,
                    "param_i": 1,
                    "ptr_to_data": 1,
                    "some_data": 1,
                    "start_address": 1,
                    "va_list": 1,
                    "value1": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_001063a0"
            ],
            "calling": [
                "FUN_001048e0",
                "FUN_00104d5b",
                "FUN_001043d0",
                "FUN_0010249f",
                "FUN_001055f0"
            ],
            "code": "\nvoid extract_and_process_data_00106400(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param1,undefined8 input10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 input14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 constant;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 input1;\n  undefined4 input2;\n  undefined4 input3;\n  undefined4 input4;\n  undefined4 input5;\n  undefined4 input6;\n  undefined4 input7;\n  undefined4 input8;\n  \n  if (flag != '\\0') {\n    input1 = input1;\n    input2 = input2;\n    input3 = input3;\n    input4 = input4;\n    input5 = input5;\n    input6 = input6;\n    input7 = input7;\n    input8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  constant = 0x30;\n  param10 = input10;\n  param11 = param11;\n  param12 = param12;\n  param13 = param13;\n  param14 = input14;\n  FUN_001063a0(param1,&size);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_00106400",
            "entrypoint": "0x00106400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106400": "extract_and_process_data_00106400",
                "in_AL": "flag",
                "local_18": "input8",
                "local_28": "input7",
                "local_38": "input6",
                "local_48": "input5",
                "local_58": "input4",
                "local_68": "input3",
                "local_78": "input2",
                "local_88": "input1",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "constant",
                "local_d8": "size",
                "param_1": "input1",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001064a0": {
            "additional_data": {
                "FUN_001064a0": {
                    "print_formatted_message": 1,
                    "print_log_message": 1,
                    "print_message": 28,
                    "print_message_with_prefix": 1
                },
                "param_1": {
                    "header": 1,
                    "log_tag": 2,
                    "message": 3,
                    "message1": 8,
                    "message_array": 2,
                    "message_header": 1,
                    "message_identifier": 1,
                    "message_prefix": 1,
                    "message_type": 4,
                    "module_name": 1,
                    "option_text": 1,
                    "sender": 2,
                    "source": 1,
                    "source_name": 1,
                    "tag": 1,
                    "title": 1
                },
                "param_2": {
                    "default_message": 2,
                    "default_name": 1,
                    "error_message": 2,
                    "function_name": 1,
                    "log_message": 1,
                    "message": 11,
                    "message2": 8,
                    "message_string": 1,
                    "message_text": 1,
                    "receiver": 1,
                    "source": 1,
                    "tag": 1
                }
            },
            "called": [
                "FUN_001036e0"
            ],
            "calling": [],
            "code": "\nvoid print_formatted_message_001064a0(undefined8 *message1,undefined8 *message)\n\n{\n  if (DAT_0010b818 == 0) {\n    return;\n  }\n  if (message1 != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*message1);\n    return;\n  }\n  printf(\"%s: \",*message);\n  return;\n}\n\n",
            "current_name": "print_formatted_message_001064a0",
            "entrypoint": "0x001064a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001064a0": "print_formatted_message_001064a0",
                "param_1": "message1",
                "param_2": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001064b0": {
            "additional_data": {
                "DAT_00107363": {
                    "symbol_data": 2,
                    "undefined_symbol": 1
                },
                "FUM_0010651a": {
                    "handle_flag": 1
                },
                "FUN_00103a66": {
                    "do_something": 1,
                    "initialize_symbol_table": 1,
                    "print_newline": 1,
                    "reverse": 4,
                    "reverse_something": 2,
                    "reverse_symbol": 2
                },
                "FUN_00104740": {
                    "extract_sym_info": 1,
                    "extract_symbol_details": 1,
                    "extract_symbol_information": 1,
                    "fetch_symbol_info": 1,
                    "find_symbol": 1,
                    "get_symbol_attributes": 1,
                    "get_symbol_info": 13,
                    "get_symbol_information": 1,
                    "handle_symbol": 1,
                    "initialize_symbol": 1,
                    "process_data": 1,
                    "process_symbol_info": 1,
                    "resolve_symbol_info": 1,
                    "retrieve_symbol_data": 2
                },
                "FUN_001054d0": {
                    "display_info": 1,
                    "display_symbol": 1,
                    "print": 1,
                    "print_address": 1,
                    "print_address_info": 2,
                    "print_address_information": 1,
                    "print_data": 1,
                    "print_flag_name": 1,
                    "print_info": 5,
                    "print_symbol": 6,
                    "print_symbol_address": 1,
                    "print_symbol_data": 1,
                    "print_symbol_info": 1,
                    "print_symbol_name": 1,
                    "print_symbol_value": 2,
                    "print_value": 1,
                    "reverse_or_print_value": 1
                },
                "FUN_001064b0": {
                    "display_symbol_info": 1,
                    "print_symbol_details": 3,
                    "print_symbol_info": 18,
                    "print_symbol_information": 9
                },
                "FUN_0010651a": {
                    "display_error": 1,
                    "handle_error": 1,
                    "handle_non_zero": 1,
                    "handle_non_zero_param": 1,
                    "handle_non_zero_param1": 1,
                    "handle_non_zero_param2": 1,
                    "handle_nonzero": 1,
                    "handle_nonzero_param1": 1,
                    "handle_param1": 1,
                    "handle_value": 1,
                    "print_error": 1,
                    "print_error_message": 2,
                    "print_extra_info": 1,
                    "print_no_value_found": 1,
                    "print_undefined_symbol": 4,
                    "reverse_and_print": 1,
                    "reverse_or_print_symbol_info": 1,
                    "reverse_string": 1,
                    "reverse_then_print": 1,
                    "unknown_function": 1
                },
                "bfd_is_undefined_symclass": {
                    "check_symbol_class": 2,
                    "check_symbol_undef": 1,
                    "check_symclass_undefined": 1,
                    "check_undefined": 1,
                    "check_undefined_sym_class": 1,
                    "is_symbol_class_undefined": 1,
                    "is_symbol_undefined": 1,
                    "is_undefined_sym_class": 3,
                    "is_undefined_symbol": 2,
                    "is_undefined_symbol_class": 6,
                    "is_undefined_symclass": 1
                },
                "bff_is_undefined_symclass": {
                    "is_symbol_undefined": 1
                },
                "cVar1": {
                    "is_symbol_undefined": 1,
                    "is_undef_sym_class": 1,
                    "is_undefined": 18,
                    "is_undefined_sym_class": 3,
                    "is_undefined_symbol": 5,
                    "is_undefined_symclass": 3
                },
                "param_1": {
                    "symbol": 13,
                    "symbol_address": 1,
                    "symbol_data": 3,
                    "symbol_info": 8,
                    "symbol_info_ptr": 1,
                    "symbol_pointer": 2,
                    "symbol_ptr": 1,
                    "symbol_table": 1,
                    "symbols": 1
                },
                "param_2": {
                    "address": 9,
                    "arg": 1,
                    "data": 2,
                    "extra_info": 1,
                    "file_data": 1,
                    "file_offset": 1,
                    "format_string": 1,
                    "info": 4,
                    "param": 6,
                    "param_value": 2,
                    "size": 1,
                    "symbol_address": 1,
                    "value": 1
                },
                "param_3": {
                    "extra_arg": 1,
                    "extra_data": 1,
                    "extra_info": 1,
                    "extra_param": 1,
                    "info": 1,
                    "param_ptr": 1,
                    "symbol_pointer": 1,
                    "unknown_param": 1
                },
                "param_4": {
                    "data": 1,
                    "extra_param": 2,
                    "param_num": 1,
                    "unknown_value": 1,
                    "value": 1
                },
                "printf": {
                    "display_text": 1,
                    "print": 10,
                    "print_formatted": 8,
                    "print_formatted_output": 2,
                    "print_formatted_string": 1,
                    "print_output": 1,
                    "print_string": 1,
                    "print_text": 1
                },
                "putchar": {
                    "output_character": 1,
                    "print_char": 12,
                    "print_character": 9,
                    "put_character": 2,
                    "write_character": 1
                }
            },
            "called": [
                "FUN_00103a66",
                "putchar",
                "FUN_0010651a",
                "printf",
                "FUN_001054d0",
                "bfd_is_undefined_symclass",
                "FUN_00104740"
            ],
            "calling": [],
            "code": "\nvoid print_symbol_info_001064b0(long *symbol,undefined8 address)\n\n{\n  char is_undefined;\n  \n  FUN_00104740(&DAT_00107363,symbol,0,address);\n  printf(\"%c \",(ulong)(uint)(int)*(char *)(*symbol + 8));\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol + 8));\n  if (is_undefined != '\\0') {\n    printf(\"        \");\n    return;\n  }\n  FUN_001054d0(*(undefined8 *)*symbol);\n  putchar(0x20);\n  if (symbol[2] == 0) {\n    if (symbol[1] != 0) {\n      FUN_0010651a();\n      return;\n    }\n  }\n  else if (*(long *)(symbol[2] + 0x38) != 0) {\n    FUN_001054d0();\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_symbol_info_001064b0",
            "entrypoint": "0x001064b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001064b0": "print_symbol_info_001064b0",
                "bfd_is_undefined_symclass": "is_undefined_symbol_class",
                "cVar1": "is_undefined",
                "param_1": "symbol",
                "param_2": "address",
                "printf": "print",
                "putchar": "print_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010651a": {
            "additional_data": {
                "FUN_001054d0": {
                    "call_sub_function": 1,
                    "execute_initialization": 5,
                    "execute_startup_process": 1,
                    "execute_system_initialization": 1,
                    "initialize_components": 1,
                    "initialize_data": 4,
                    "initialize_subsystem": 3,
                    "initialize_system": 2,
                    "load_data": 1,
                    "perform_initialization": 11,
                    "update_system": 1
                },
                "FUN_0010651a": {
                    "execute_application": 1,
                    "execute_function": 2,
                    "execute_initialization": 7,
                    "initialize": 4,
                    "initialize_app": 1,
                    "initialize_application": 5,
                    "initialize_components": 1,
                    "initialize_system": 10
                },
                "param_1": {
                    "config_data": 1,
                    "data": 1,
                    "param": 1
                }
            },
            "called": [
                "FUN_001054d0"
            ],
            "calling": [
                "FUN_00103a66",
                "FUN_001064b0"
            ],
            "code": "\nvoid initialize_system_0010651a(void)\n\n{\n  FUN_001054d0();\n  return;\n}\n\n",
            "current_name": "initialize_system_0010651a",
            "entrypoint": "0x0010651a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010651a": "initialize_system_0010651a"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106530": {
            "additional_data": {
                "FUN_00106530": {
                    "handle_bfd_error": 1,
                    "handle_error": 1,
                    "print_bfd_error_message": 1,
                    "print_error": 6,
                    "print_error_and_exit": 1,
                    "print_error_details": 1,
                    "print_error_information": 2,
                    "print_error_message": 15,
                    "print_error_message_and_exit": 1,
                    "print_error_messages": 1,
                    "report_error": 1
                },
                "FUN_00106540": {
                    "initialize": 1,
                    "initialize_library": 1,
                    "perform_cleanup": 1,
                    "perform_some_task": 1
                },
                "iVar1": {
                    "bfd_error": 5,
                    "bfd_error_code": 1,
                    "error": 12,
                    "error_code": 3,
                    "error_status": 5,
                    "error_type": 1
                },
                "in_R10": {
                    "additional_context": 1,
                    "additional_details": 1,
                    "additional_info": 19,
                    "extra_info": 2,
                    "extra_message": 1,
                    "file_name": 1,
                    "input_param": 1,
                    "param": 1,
                    "register_arg": 1,
                    "unknown_parameter": 1
                },
                "lVar3": {
                    "cause": 1,
                    "cause_of_error": 1,
                    "error_code": 10,
                    "error_flag": 3,
                    "error_number": 1,
                    "exit_flag": 1,
                    "flag": 1,
                    "has_error": 3,
                    "has_error_code": 1,
                    "is_error": 5,
                    "is_valid": 1,
                    "line_number": 3
                },
                "param_1": {
                    "error_code": 1,
                    "error_flag": 1,
                    "param": 1
                },
                "uVar2": {
                    "error_description": 1,
                    "error_message": 27,
                    "error_msg": 2,
                    "error_string": 1
                },
                "xexit": {
                    "cleanup_library": 1,
                    "exit_program": 3
                }
            },
            "called": [
                "FUN_00106540",
                "xexit"
            ],
            "calling": [
                "FUN_00105110",
                "FUN_001048e0",
                "FUN_00104d5b",
                "FUN_00103463",
                "FUN_00102fc3",
                "FUN_00102f9f",
                "FUN_001043d0",
                "FUN_00102fd2",
                "FUN_00103c00"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00106530(void)\n\n{\n  int error;\n  undefined8 error_message;\n  long error_code;\n  undefined8 additional_info;\n  \n  FUN_00106540();\n  error_code = 1;\n  xexit();\n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820,error_code,error_message,additional_info);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00106530",
            "entrypoint": "0x00106530",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106530": "print_bfd_error_message_00106530",
                "iVar1": "error",
                "in_R10": "additional_info",
                "lVar3": "error_code",
                "uVar2": "error_message",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106540": {
            "additional_data": {
                "DAT_0010b820": {
                    "program_name": 1
                },
                "FUN_00106540": {
                    "display_error_message": 1,
                    "handle_error": 1,
                    "print_bfd_error_message": 2,
                    "print_error": 5,
                    "print_error_details": 1,
                    "print_error_message": 21
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 1
                },
                "bfd_errmsg": {
                    "get_error_message": 1
                },
                "bff_get_error": {
                    "get_bfd_error": 1
                },
                "dcgettext": {
                    "get_message": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "fprintf": {
                    "print_to_file": 1
                },
                "iVar1": {
                    "error": 18,
                    "error_code": 8,
                    "error_number": 1,
                    "error_status": 3,
                    "error_value": 1
                },
                "in_R10": {
                    "additional_info": 7,
                    "additional_message": 1,
                    "data": 1,
                    "extra_info": 1,
                    "unknown": 1,
                    "unknown_argument": 1,
                    "unknown_param": 2,
                    "unknown_variable": 1,
                    "unknwn_param": 1,
                    "unmodified_data": 1,
                    "unspecified_argument": 1,
                    "unused_parameter": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "error_cause": 1,
                    "error_code": 1,
                    "error_description": 5,
                    "error_message": 9,
                    "error_msg": 1,
                    "error_source": 1,
                    "error_string": 3,
                    "error_type": 9,
                    "file_name": 1
                },
                "uVar2": {
                    "err_msg": 2,
                    "error_description": 3,
                    "error_message": 17,
                    "error_message_text": 1,
                    "error_msg": 3,
                    "error_string": 4,
                    "error_text": 1
                }
            },
            "called": [
                "bfd_get_error",
                "fprintf",
                "fflush",
                "bfd_errmsg",
                "FUN_00103a78"
            ],
            "calling": [
                "FUN_00106530",
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00106540(long error_type)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(output_stream);\n  if (error_type != 0) {\n    fprintf(error_stream,\"%s: %s: %s\\n\",DAT_0010b820,error_type,error_message,additional_info);\n    return;\n  }\n  fprintf(error_stream,\"%s: %s\\n\",DAT_0010b820,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00106540",
            "entrypoint": "0x00106540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106540": "print_bfd_error_message_00106540",
                "_stderr": "error_stream",
                "_stdout": "output_stream",
                "bfd_errmsg": "get_error_message",
                "dcgettext": "get_message",
                "fflush": "flush_output",
                "fprintf": "print_to_file",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_type",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x001065a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "FUN_00105530",
                "__cxa_finalize"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_0010b720 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010b228);\n  FUNC_00105530();\n  DAT_0010b720 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x001055a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00105560"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00105560();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x001055e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_00103729",
                "FUN_001043d0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "abort": {
            "called": [
                "abort"
            ],
            "calling": [
                "FUN_00102fd2"
            ],
            "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n",
            "current_name": "abort",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "asprintf": {
            "called": [
                "asprintf"
            ],
            "calling": [
                "FUN_00103729"
            ],
            "code": "\n\n\nint asprintf(char **__ptr,char *__fmt,...)\n\n{\n  int iVar1;\n  \n  iVar1 = asprintf(__ptr,__fmt);\n  return iVar1;\n}\n\n",
            "current_name": "asprintf",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_canonicalize_reloc": {
            "called": [
                "bfd_canonicalize_reloc"
            ],
            "calling": [
                "FUN_00103c00"
            ],
            "code": "\nvoid bfd_canonicalize_reloc(void)\n\n{\n  bfd_canonicalize_reloc();\n  return;\n}\n\n",
            "current_name": "bfd_canonicalize_reloc",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_demangle": {
            "called": [
                "bfd_demangle"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n",
            "current_name": "bfd_demangle",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_00106540",
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_arch_size": {
            "called": [
                "bfd_get_arch_size"
            ],
            "calling": [
                "FUN_00104670"
            ],
            "code": "\nvoid bfd_get_arch_size(void)\n\n{\n  bfd_get_arch_size();\n  return;\n}\n\n",
            "current_name": "bfd_get_arch_size",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00106540",
                "FUN_001048e0",
                "FUN_001043d0",
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_next_mapent": {
            "called": [
                "bfd_get_next_mapent"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_get_next_mapent(void)\n\n{\n  bfd_get_next_mapent();\n  return;\n}\n\n",
            "current_name": "bfd_get_next_mapent",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_reloc_upper_bound": {
            "called": [
                "bfd_get_reloc_upper_bound"
            ],
            "calling": [
                "FUN_00103c00"
            ],
            "code": "\nvoid bfd_get_reloc_upper_bound(void)\n\n{\n  bfd_get_reloc_upper_bound();\n  return;\n}\n\n",
            "current_name": "bfd_get_reloc_upper_bound",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_is_undefined_symclass": {
            "called": [
                "bfd_is_undefined_symclass"
            ],
            "calling": [
                "FUN_001053c0",
                "FUN_001064b0",
                "FUN_00103729"
            ],
            "code": "\nvoid bfd_is_undefined_symclass(void)\n\n{\n  bfd_is_undefined_symclass();\n  return;\n}\n\n",
            "current_name": "bfd_is_undefined_symclass",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_map_over_sections": {
            "called": [
                "bfd_map_over_sections"
            ],
            "calling": [
                "FUN_00103238"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "bfd_map_over_sections",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_plugin": {
            "called": [
                "bfd_plugin_set_plugin"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_plugin",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_program_name": {
            "called": [
                "bfd_plugin_set_program_name"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_program_name",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_00103ca0"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "caseD_4a": {
            "called": [
                "FUN_00104397"
            ],
            "calling": [
                "FUN_00104370"
            ],
            "code": "\nvoid switchD_00104393::caseD_4a(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00104397(param_1,param_2,3);\n  return;\n}\n\n",
            "current_name": "caseD_4a",
            "entrypoint": "0x00102475",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "concat": {
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_001025f5"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "concat",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_name_to_style": {
            "called": [
                "cplus_demangle_name_to_style"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_name_to_style",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_set_style": {
            "called": [
                "cplus_demangle_set_style"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_set_style",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_001053c0",
                "FUN_0010370a",
                "FUN_00104370",
                "FUN_00103729",
                "FUN_00102f19",
                "FUN_00103a78",
                "FUN_001055f0",
                "FUN_00103abf",
                "FUN_00102450",
                "FUN_00103b5d",
                "FUN_001048e0",
                "FUN_00104d5b",
                "FUN_00103ca0",
                "FUN_001043d0",
                "FUN_0010249f"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "__libc_start_main",
                "FUN_001055f0"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_001055f0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00105500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_00103ca0",
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_00106540",
                "FUN_00103b5d",
                "FUN_001063a0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_00102450",
                "FUN_00103b5d",
                "FUN_00106540",
                "FUN_001063a0",
                "FUN_00103ca0",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_00103b5d",
                "FUN_00103ca0"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_001047d0",
                "FUN_00105110",
                "FUN_00103b5d",
                "FUN_00103729",
                "FUN_00104670",
                "FUN_00104d5b",
                "FUN_00103ca0",
                "FUN_0010268b",
                "FUN_00103238",
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "isatty": {
            "called": [
                "isatty"
            ],
            "calling": [
                "FUN_0010268b"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "isatty",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001047d0",
                "FUN_001053c0",
                "FUN_0010351b",
                "FUN_00105110",
                "FUN_001064b0",
                "FUN_00103729",
                "FUN_00103463",
                "FUN_00103573",
                "FUN_00102f19",
                "FUN_001036a7",
                "FUN_001036e0",
                "FUN_001055f0",
                "FUN_00103abf",
                "FUN_001054d0",
                "FUN_00103b2b",
                "FUN_001043d0",
                "FUN_00102f7b",
                "FUN_00102670",
                "FUN_001035a2",
                "FUN_00102739",
                "FUN_001062d0"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_001063a0",
                "FUN_00103463"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putchar": {
            "called": [
                "putchar"
            ],
            "calling": [
                "FUN_001064b0",
                "FUN_001035a2"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "putchar",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "qsort": {
            "called": [
                "qsort"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  qsort(__base,__nmemb,__size,__compar);\n  return;\n}\n\n",
            "current_name": "qsort",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "reconcat": {
            "called": [
                "reconcat"
            ],
            "calling": [
                "FUN_001047d0"
            ],
            "code": "\nvoid reconcat(void)\n\n{\n  reconcat();\n  return;\n}\n\n",
            "current_name": "reconcat",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_0010268b"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_001043d0",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strchr": {
            "called": [
                "strchr"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strchr",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_00104d5b",
                "FUN_00103463",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcoll": {
            "called": [
                "strcoll"
            ],
            "calling": [
                "FUN_00104fa0"
            ],
            "code": "\n\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcoll(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcoll",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_00103ca0",
                "FUN_0010268b",
                "FUN_00102fd2",
                "FUN_001055f0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strstr": {
            "called": [
                "strstr"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_00102fd2"
            ],
            "code": "\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strstr(__haystack,__needle);\n  return pcVar1;\n}\n\n",
            "current_name": "strstr",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_001063a0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00106300",
                "FUN_00106530",
                "FUN_001055f0"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00105110",
                "FUN_00104d5b",
                "FUN_0010268b",
                "FUN_00103238",
                "FUN_00103c00",
                "FUN_001055f0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_001055f0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrerror": {
            "called": [
                "xstrerror"
            ],
            "calling": [
                "FUN_00103729"
            ],
            "code": "\nvoid xstrerror(void)\n\n{\n  xstrerror();\n  return;\n}\n\n",
            "current_name": "xstrerror",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_00102450",
            "FUN_0010249f",
            "FUN_001025f5",
            "FUN_00102670",
            "FUN_0010268b",
            "FUN_00102739",
            "FUN_00102c19",
            "FUN_00102f19",
            "FUN_00102f7b",
            "FUN_00102f9f",
            "FUN_00102fc3",
            "FUN_00102fd2",
            "FUN_00103238",
            "FUN_00103463",
            "FUN_0010351b",
            "FUN_00103533",
            "FUN_00103573",
            "FUN_001035a2",
            "FUN_001036a7",
            "FUN_001036e0",
            "FUN_0010370a",
            "FUN_00103729",
            "FUN_00103a66",
            "FUN_00103a78",
            "FUN_00103abf",
            "FUN_00103b2b",
            "FUN_00103b49",
            "FUN_00103b5d",
            "FUN_00103bec",
            "FUN_00103bf6",
            "FUN_00103c00",
            "FUN_00103ca0",
            "FUN_00104370",
            "FUN_00104397",
            "FUN_001043d0",
            "FUN_00104670",
            "FUN_00104740",
            "FUN_001047d0",
            "FUN_001048e0",
            "FUN_001049c0",
            "FUN_00104d5b",
            "FUN_00104fa0",
            "FUN_00105050",
            "FUN_00105110",
            "FUN_001053b0",
            "FUN_001053c0",
            "FUN_001054d0",
            "FUN_001055f0",
            "FUN_001062d0",
            "FUN_00106300",
            "FUN_001063a0",
            "FUN_00106400",
            "FUN_001064a0",
            "FUN_001064b0",
            "FUN_0010651a",
            "FUN_00106530",
            "FUN_00106540"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 348014
}