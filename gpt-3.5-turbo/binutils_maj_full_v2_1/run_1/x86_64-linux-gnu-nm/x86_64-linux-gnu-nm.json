{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "CODE": {
                    "code_to_execute": 1
                },
                "FUN_00102020": {
                    "call_indirect_function": 1,
                    "execute_code_at_address": 1,
                    "execute_external_function": 1,
                    "execute_function": 2,
                    "execute_function_at_address": 1,
                    "execute_function_pointer": 1,
                    "execute_indirect_call": 3,
                    "execute_indirect_jump": 20
                },
                "PTR_0": {
                    "function_pointer": 1
                },
                "code": {
                    "function_for_indirect_jump": 1,
                    "function_pointer": 3,
                    "function_to_execute": 1,
                    "indirect_jump": 1,
                    "indirect_jump_function": 2,
                    "jump_function": 1
                },
                "name": {
                    "execute_indirect_jump": 1
                },
                "undefined": {
                    "function_pointer": 4,
                    "jmp_target": 1,
                    "jump_address": 1,
                    "ptr": 1,
                    "ptr_to_function": 1,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_pointer *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102450": {
            "additional_data": {
                "FUN_00102450": {
                    "display_supported_targets": 1,
                    "print_supported_targets": 29,
                    "print_targets": 1
                },
                "__ptr": {
                    "target_list": 30,
                    "target_list_pointer": 1
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "in_stack_00000008": {
                    "bug_report_flag": 1,
                    "error_flag": 1,
                    "exit_code": 24,
                    "exit_status": 3,
                    "report_bugs": 2
                },
                "lVar1": {
                    "current_target": 2,
                    "current_target_value": 8,
                    "current_value": 2,
                    "target": 5,
                    "target_id": 1,
                    "target_value": 4
                },
                "pcVar2": {
                    "bug_report_text": 1,
                    "gettext_pointer": 1,
                    "header_string": 1,
                    "language_string": 1,
                    "localization_string": 1,
                    "localized_msg": 1,
                    "localized_text": 1,
                    "message": 8,
                    "supported_targets_message": 1,
                    "target_header": 1,
                    "target_message": 2,
                    "target_string": 3,
                    "target_text": 2,
                    "translation": 5,
                    "translation_string": 1
                },
                "plVar3": {
                    "current_target": 22,
                    "ptr": 2,
                    "target": 4,
                    "target_list": 1,
                    "target_pointer": 1
                },
                "unaff_RBX": {
                    "file": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "output_file": 27
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_00103ca0"
            ],
            "code": "\nvoid print_supported_targets_00102450(void)\n\n{\n  long current_target_value;\n  char *message;\n  long *target_list;\n  FILE *output_file;\n  long *current_target;\n  int exit_code;\n  \n  message = (char *)dcgettext(0,\"Supported targets:\",5);\n  fprintf(output_file,message);\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target_value = *current_target;\n    current_target = current_target + 1;\n    if (current_target_value == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_code == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit(exit_code);\n}\n\n",
            "current_name": "print_supported_targets_00102450",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102450": "print_supported_targets_00102450",
                "__ptr": "target_list",
                "dcgettext": "get_translated_string",
                "in_stack_00000008": "exit_code",
                "lVar1": "current_target_value",
                "pcVar2": "message",
                "plVar3": "current_target",
                "unaff_RBX": "output_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010249f": {
            "additional_data": {
                "FUN_0010249f": {
                    "print_file_not_ordinary_warning": 2,
                    "print_file_warning": 1,
                    "print_non_ordinary_file_warning": 1,
                    "print_not_an_ordinary_file_warning": 1,
                    "print_warning_for_non_ordinary_file": 6,
                    "print_warning_for_nonordinary_file": 1,
                    "print_warning_if_not_ordinary_file": 1,
                    "print_warning_message": 15,
                    "print_warning_not_ordinary_file": 2
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_warning_message": 2
                },
                "print_error_with_formatted_message_00106400": {
                    "print_error": 1,
                    "print_error_message": 2
                },
                "uVar1": {
                    "error_message": 1,
                    "warning_message": 29
                }
            },
            "called": [
                "dcgettext",
                "FUN_00106400"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nundefined8 print_warning_message_0010249f(void)\n\n{\n  undefined8 warning_message;\n  \n  warning_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n  print_error_message(warning_message);\n  return 0;\n}\n\n",
            "current_name": "print_warning_message_0010249f",
            "entrypoint": "0x0010249f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010249f": "print_warning_message_0010249f",
                "dcgettext": "get_warning_message",
                "print_error_with_formatted_message_00106400": "print_error_message",
                "uVar1": "warning_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025f5": {
            "additional_data": {
                "FUN_001025f5": {
                    "concatenate_and_assign": 2,
                    "concatenate_and_store": 1,
                    "concatenate_data_and_param": 1,
                    "concatenate_string": 1,
                    "concatenate_strings": 26
                },
                "concat": {
                    "concatenate_strings": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "first_argument": 1,
                    "first_param": 1,
                    "first_string": 2,
                    "header_string": 1,
                    "input1": 3,
                    "input_string": 1,
                    "input_string1": 2,
                    "input_string_1": 1,
                    "prefix": 5,
                    "prefix_string": 1,
                    "source1": 1,
                    "source_string": 3,
                    "str1": 1,
                    "string1": 6,
                    "unused_param": 1
                },
                "param_2": {
                    "additional_string": 3,
                    "appended_string": 1,
                    "content_string": 1,
                    "input2": 3,
                    "input_string": 1,
                    "input_string2": 2,
                    "input_string_2": 1,
                    "second_argument": 1,
                    "second_param": 1,
                    "second_string": 2,
                    "source2": 1,
                    "str2": 1,
                    "string2": 6,
                    "suffix": 5,
                    "suffix_string": 1,
                    "user_input": 1
                }
            },
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00104670"
            ],
            "code": "\nvoid concatenate_strings_001025f5(undefined8 string1,undefined8 string2)\n\n{\n  DAT_0010b7a0 = concatenate_strings_001025f5(&DAT_001071d7,string2,&DAT_001071ca,0);\n  return;\n}\n\n",
            "current_name": "concatenate_strings_001025f5",
            "entrypoint": "0x001025f5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025f5": "concatenate_strings_001025f5",
                "concat": "concatenate_strings",
                "param_1": "string1",
                "param_2": "string2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102670": {
            "additional_data": {
                "FUN_00102670": {
                    "display_message": 1,
                    "print_if_condition_met": 1,
                    "print_if_data_exists": 1,
                    "print_if_data_not_null": 1,
                    "print_if_debug_enabled": 3,
                    "print_if_debug_mode": 1,
                    "print_if_debugger_active": 1,
                    "print_if_enabled": 2,
                    "print_if_flag_set": 4,
                    "print_if_global_flag": 1,
                    "print_if_global_not_zero": 1,
                    "print_if_global_variable_set": 1,
                    "print_if_initialized": 2,
                    "print_if_not_null": 2,
                    "print_if_toggle_on": 1,
                    "print_message_if_enabled": 1,
                    "print_message_if_feature_enabled": 1,
                    "print_message_if_flag_set": 3,
                    "print_message_if_initialized": 2,
                    "print_with_condition": 1
                },
                "_DAT_0010b7c4": {
                    "condition": 1,
                    "debug_enabled": 1,
                    "debug_flag": 2,
                    "feature_status": 1,
                    "flag": 5,
                    "global_flag": 1,
                    "is_global_variable_true": 1,
                    "is_initialized": 2,
                    "message_enabled_flag": 1,
                    "toggle": 1
                },
                "param_1": {
                    "data_name": 1,
                    "debug_message": 2,
                    "message": 28
                },
                "printf": {
                    "print_formatted": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_message_if_flag_set_00102670(undefined8 message)\n\n{\n  if (_DAT_0010b7c4 != 0) {\n    printf(\"\\n%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_flag_set_00102670",
            "entrypoint": "0x00102670",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102670": "print_message_if_flag_set_00102670",
                "param_1": "message",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010268b": {
            "additional_data": {
                "FUN_0010268b": {
                    "decode_and_print_string": 2,
                    "print_decoded_string": 3,
                    "print_decompiled_code": 1,
                    "print_encoded_data": 1,
                    "print_encoded_string": 14,
                    "print_escaped_string": 7,
                    "print_formatted_string": 1,
                    "print_reorganized_string": 1,
                    "print_special_characters": 1
                },
                "__s": {
                    "byte_string": 1,
                    "char_ptr": 1,
                    "char_ptr2": 1,
                    "current_char": 1,
                    "format_string_ptr": 1,
                    "hex_byte": 1,
                    "hex_string": 1,
                    "new_char_ptr": 1,
                    "new_string_ptr": 1,
                    "result_string": 1,
                    "s_ptr": 1,
                    "str2": 1,
                    "str_ptr": 3,
                    "str_ptr2": 1,
                    "string": 1,
                    "string_ptr": 3,
                    "temp": 1,
                    "temp_char_pointer": 1,
                    "temp_str2": 1,
                    "temp_string": 3,
                    "temp_string2": 1,
                    "temporary_string": 1
                },
                "bVar15": {
                    "byte0": 1,
                    "byte3": 3,
                    "byte_flag": 2,
                    "byte_value3": 1,
                    "byte_var": 5,
                    "byte_var15": 1,
                    "byte_var3": 2,
                    "flag": 2,
                    "is_not_end_of_string": 1,
                    "loop_condition": 1,
                    "loop_end_flag": 1,
                    "loop_flag": 2,
                    "loop_flag2": 1,
                    "loop_indicator": 1,
                    "temp_byte": 2,
                    "termination_flag": 1
                },
                "bVar2": {
                    "byte": 1,
                    "byte1": 11,
                    "byte_value": 3,
                    "byte_value1": 1,
                    "byte_var1": 2,
                    "byte_var2": 1,
                    "current_byte": 7,
                    "current_byte_value": 2,
                    "current_char": 1
                },
                "bVar3": {
                    "byte2": 11,
                    "byte_value2": 1,
                    "byte_var2": 2,
                    "byte_var3": 1,
                    "next_byte": 9,
                    "next_byte_value": 2,
                    "next_char": 1,
                    "second_byte_value": 1
                },
                "iVar4": {
                    "index": 1,
                    "int_val": 1,
                    "int_value": 1,
                    "int_value1": 1,
                    "int_var": 3,
                    "int_var4": 1,
                    "is_terminal": 14,
                    "is_tty": 4,
                    "result": 2,
                    "ret_val": 1,
                    "terminal_check": 1
                },
                "in_stack_00000038": {
                    "additional_data": 1,
                    "additional_format_string": 1,
                    "alignment_padding": 1,
                    "extra_arg": 1,
                    "flag": 2,
                    "format_arg": 1,
                    "format_print_ptr": 1,
                    "format_string": 1,
                    "format_string2": 1,
                    "in_stack_00000038": 2,
                    "in_stack_param": 1,
                    "in_stack_parameter": 1,
                    "in_stack_value_00000038": 1,
                    "in_stack_var": 1,
                    "in_stack_variable": 1,
                    "sixth_arg": 1,
                    "stack_arg": 1,
                    "stack_var": 5,
                    "stack_variable": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "unused_parameter": 1,
                    "var": 1
                },
                "lVar13": {
                    "additional_length": 1,
                    "bracket_size": 1,
                    "byte_count": 1,
                    "bytes_to_print_length": 1,
                    "char_count": 1,
                    "delimiter_length": 1,
                    "encoded_string_length": 1,
                    "l_var": 1,
                    "length3": 1,
                    "long_value1": 1,
                    "long_var": 6,
                    "long_var1": 1,
                    "long_var13": 1,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_length": 1,
                    "loop_var": 2,
                    "loop_variable2": 1,
                    "number_of_chars": 1,
                    "pad_length": 1,
                    "recomposed_string_length": 1
                },
                "pcVar7": {
                    "buffer_ptr": 1,
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "char_ptr1": 1,
                    "concatenated_str": 1,
                    "concatenated_string": 3,
                    "concatenation_result": 1,
                    "current_char": 1,
                    "format_string": 1,
                    "formatted_string": 1,
                    "output": 1,
                    "output_string": 1,
                    "pointer_var7": 1,
                    "recomposed_string": 1,
                    "reconstructed_string": 1,
                    "result_string": 1,
                    "str": 2,
                    "str_ptr": 3,
                    "str_result": 1,
                    "string_ptr": 1,
                    "temp": 1,
                    "temp_str": 1,
                    "temp_string": 1,
                    "temporary_string": 1,
                    "translated_string": 1
                },
                "puVar1": {
                    "byte_pointer": 2,
                    "byte_ptr": 1,
                    "current_byte": 2,
                    "current_char_pointer": 1,
                    "data_ptr": 1,
                    "dest_ptr": 1,
                    "next_char": 2,
                    "output_ptr": 1,
                    "pointer": 1,
                    "pointer1": 4,
                    "pointer_var1": 1,
                    "ptr": 10,
                    "ptr1": 2,
                    "result_ptr": 1
                },
                "puVar10": {
                    "bracket_ptr": 1,
                    "concat_flag": 1,
                    "concat_str": 1,
                    "concatenate_char_ptr": 1,
                    "concatenation_indicator": 1,
                    "default_concat_string": 1,
                    "escape_char": 1,
                    "flag_ptr": 1,
                    "join_string": 1,
                    "output_prefix": 1,
                    "pointer2": 1,
                    "pointer3": 3,
                    "pointer_var": 1,
                    "pointer_var10": 1,
                    "prefix_ptr": 1,
                    "ptr3": 4,
                    "ptr_var": 1,
                    "pu_var10": 1,
                    "reconstructed_string_delimiter": 1,
                    "str_pointer": 1,
                    "string_to_concat": 1,
                    "suffix": 1,
                    "terminal_string": 1,
                    "translation_table": 1
                },
                "puVar11": {
                    "current_byte_ptr": 1,
                    "current_char": 3,
                    "input": 1,
                    "input_pointer": 1,
                    "input_ptr": 4,
                    "input_string": 2,
                    "next_byte": 1,
                    "pointer3": 1,
                    "pointer4": 3,
                    "pointer_var11": 1,
                    "ptr1": 1,
                    "ptr3": 2,
                    "ptr4": 4,
                    "ptr_temp2": 1,
                    "source_ptr": 2,
                    "src": 1,
                    "temp_pointer": 1
                },
                "puVar12": {
                    "buffer": 1,
                    "decoded_ptr": 1,
                    "decoded_string": 2,
                    "escaped_string": 4,
                    "new_pointer": 1,
                    "output2": 1,
                    "output_ptr": 1,
                    "output_string": 4,
                    "pointer5": 1,
                    "pointer_var12": 1,
                    "ptr5": 2,
                    "recomposed_string_ptr": 1,
                    "result": 2,
                    "result_pointer": 1,
                    "result_ptr": 3,
                    "result_string": 1,
                    "temp_ptr": 1
                },
                "puVar6": {
                    "current_position": 1,
                    "decoded_string_ptr": 1,
                    "dest": 1,
                    "dest_ptr2": 1,
                    "encoded_ptr": 1,
                    "encoded_string_ptr": 1,
                    "formatted_string": 1,
                    "new_pointer": 1,
                    "output": 1,
                    "output_pointer": 2,
                    "output_ptr": 2,
                    "output_ptr2": 1,
                    "output_string": 2,
                    "pointer2": 3,
                    "pointer_var6": 1,
                    "ptr2": 7,
                    "ptr_temp": 1,
                    "result_ptr": 2,
                    "temp_string": 1
                },
                "sVar5": {
                    "data_length": 1,
                    "encoded_string_length": 2,
                    "input_length": 3,
                    "input_string_length": 1,
                    "len": 1,
                    "length": 4,
                    "size": 1,
                    "size_var5": 1,
                    "str_len": 3,
                    "str_length": 1,
                    "string_length": 11,
                    "string_size": 1
                },
                "uVar14": {
                    "byte_count": 2,
                    "byte_sequence_length": 3,
                    "bytes_to_print_count": 1,
                    "char_count": 1,
                    "char_length": 1,
                    "character_count": 1,
                    "for_loop_counter": 1,
                    "loop_count": 1,
                    "loop_flag": 1,
                    "loop_size": 1,
                    "num_bytes": 3,
                    "temp_var": 1,
                    "u_value": 1,
                    "u_var2": 1,
                    "u_var_temp": 1,
                    "uint_value1": 1,
                    "uint_var": 6,
                    "uint_var14": 1,
                    "unicode_length": 1
                },
                "uVar8": {
                    "byte_counter": 1,
                    "bytes_copied": 2,
                    "bytes_written": 1,
                    "copy_length": 1,
                    "count": 3,
                    "difference": 1,
                    "iterations": 1,
                    "length2": 1,
                    "loop_counter": 2,
                    "loop_variable": 1,
                    "output_length": 2,
                    "string_length": 1,
                    "string_length2": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "ulong_val": 1,
                    "ulong_value1": 1,
                    "ulong_var": 7,
                    "ulong_var8": 1
                },
                "uVar9": {
                    "brace_char": 5,
                    "bracket_char": 1,
                    "bracket_character": 1,
                    "char": 1,
                    "char1": 1,
                    "delimiter": 2,
                    "end_char": 1,
                    "hex_prefix": 1,
                    "left_curly_brace_char": 1,
                    "special_char": 2,
                    "special_character": 1,
                    "start_brace": 1,
                    "start_bracket": 1,
                    "start_char": 1,
                    "u_var": 3,
                    "ulong_var2": 3,
                    "undefined_value": 1,
                    "undefined_var": 2,
                    "uvar_var9": 1
                },
                "unaff_R12": {
                    "do_not_touch_ptr": 1,
                    "encoding_flag": 1,
                    "flag_ptr": 1,
                    "is_dot_null": 1,
                    "is_special_char": 1,
                    "null_byte": 1,
                    "output_char": 1,
                    "output_flag": 3,
                    "output_indicator": 2,
                    "ptr3": 1,
                    "r12": 1,
                    "register_r12": 1,
                    "return_code": 1,
                    "unaff_local_var2": 1,
                    "unaff_r12": 4,
                    "unaff_variable_12": 1,
                    "unaffected_r12": 2,
                    "unhandled_char": 1
                },
                "unaff_R13": {
                    "encoded_data": 1,
                    "encoded_string": 4,
                    "input": 1,
                    "input_ptr": 1,
                    "input_str": 2,
                    "input_string": 10,
                    "old_r13": 1,
                    "original_string": 1,
                    "r13": 1,
                    "source_string": 1,
                    "string_ptr": 1,
                    "string_to_escape_ptr": 1,
                    "string_to_print": 1,
                    "unaff_r13": 2,
                    "unaffected_r13": 2
                },
                "unaff_R14": {
                    "format_specifier": 1,
                    "format_str": 2,
                    "format_string": 23,
                    "r14": 1,
                    "unaff_r14": 1,
                    "unaffected_r14": 2
                },
                "unaff_R15": {
                    "additional_data": 1,
                    "additional_parameter": 1,
                    "arg2": 1,
                    "argument_list": 1,
                    "context": 1,
                    "function_context": 2,
                    "function_pointer": 5,
                    "function_ptr": 3,
                    "input_string": 1,
                    "old_r15": 1,
                    "option": 1,
                    "r15": 2,
                    "register15": 2,
                    "register_r15": 1,
                    "unaff_local_var3": 1,
                    "unaff_r15": 4,
                    "unaffected_r15": 2
                },
                "unaff_RBP": {
                    "arg1": 1,
                    "base_pointer": 3,
                    "current_frame_pointer": 1,
                    "file_name": 1,
                    "frame_base_ptr": 1,
                    "frame_pointer": 3,
                    "function_context": 1,
                    "old_rbp": 1,
                    "rbp": 2,
                    "register_bp": 1,
                    "saved_frame_pointer": 1,
                    "stack_frame_base": 1,
                    "stack_frame_pointer": 3,
                    "stack_frame_ptr": 1,
                    "stack_ptr": 1,
                    "unaff_local_var1": 1,
                    "unaff_rbp": 4,
                    "unaffected_rbp": 2
                }
            },
            "called": [
                "isatty",
                "sprintf",
                "strlen",
                "xmalloc",
                "FUN_001047d0",
                "free"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\n\n\nvoid print_encoded_string_0010268b(void)\n\n{\n  undefined8 *ptr;\n  byte byte1;\n  byte byte2;\n  int is_terminal;\n  size_t string_length;\n  undefined8 *ptr2;\n  char *concatenated_string;\n  ulong ulong_var;\n  undefined8 brace_char;\n  undefined *ptr3;\n  undefined8 *ptr4;\n  long unaff_rbp;\n  undefined8 *output_string;\n  undefined *unaff_r12;\n  undefined8 *input_string;\n  long long_var;\n  uint uint_var;\n  char *format_string;\n  long function_pointer;\n  byte byte_var;\n  char *temp_string;\n  undefined8 stack_var;\n  \n  byte_var = 0;\n  output_string = input_string;\n  if (DAT_0010b7e0 != 0) {\n    do {\n      byte1 = *(byte *)output_string;\n      if (byte1 == 0) goto LAB_0010485e;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) &&\n            (output_string = (undefined8 *)((long)output_string + 1), byte1 < 0xc0));\n    string_length = strlen((char *)input_string);\n    output_string = DAT_0010b790;\n    ptr4 = input_string;\n    if (_DAT_0010b798 < string_length * 9) {\n      free(DAT_0010b790);\n      string_length = strlen((char *)input_string);\n      _DAT_0010b798 = string_length * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      output_string = DAT_0010b790;\n    }\n    while( true ) {\n      input_string = DAT_0010b790;\n      byte1 = *(byte *)ptr4;\n      ptr = (undefined8 *)((long)ptr4 + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)output_string = byte1;\n          output_string = (undefined8 *)((long)output_string + 1);\n          ptr4 = ptr;\n        }\n        else {\n          byte2 = *(byte *)((long)ptr4 + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = output_string;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                is_terminal = isatty(1);\n                if (is_terminal == 0) {\n                  byte2 = *(byte *)((long)ptr4 + 1);\n                }\n                else {\n                  *(undefined *)(output_string + 1) = 0;\n                  *output_string = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)ptr4 + 1);\n                  ptr2 = output_string + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)ptr4 >> 2 & 7),\n                        (ulong)((*(byte *)ptr4 & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)ptr4 + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)ptr2 = *(undefined *)ptr4;\n                    ptr4 = (undefined8 *)((long)ptr4 + (ulong)byte_var * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)byte_var * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  brace_char = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    brace_char = 0x3c;\n                  }\n                  sprintf((char *)output_string,\"%c\",brace_char);\n                  *(undefined *)((long)output_string + 3) = 0;\n                  ptr2 = (undefined8 *)(long_var + (long)ptr4);\n                  *(undefined2 *)((long)output_string + 1) = 0x7830;\n                  concatenated_string = (char *)((long)output_string + 3);\n                  do {\n                    temp_string = concatenated_string;\n                    byte1 = *(byte *)ptr4;\n                    ptr4 = (undefined8 *)((long)ptr4 + 1);\n                    sprintf(temp_string,\"%02x\",(ulong)byte1);\n                    concatenated_string = temp_string + 2;\n                  } while (ptr4 != ptr2);\n                  brace_char = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    brace_char = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(temp_string + 2,\"%c\",brace_char);\n                  ptr2 = (undefined8 *)(temp_string + 3);\n                  break;\n                case 4:\n                  is_terminal = isatty(1);\n                  if (is_terminal == 0) {\n                    byte2 = *(byte *)((long)ptr4 + 2);\n                  }\n                  else {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)ptr4 + 2);\n                    ptr2 = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)ptr4 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)ptr4 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)ptr4 + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (is_terminal = isatty(1), is_terminal != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)ptr4 + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  is_terminal = isatty(1);\n                  if (is_terminal != 0) {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    ptr2 = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  is_terminal = sprintf((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)ptr4 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr4 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)ptr4 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr4 + 2) >> 2 & 0xfU));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)is_terminal);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)ptr2 - (int)output_string);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)output_string = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          output_string = (undefined8 *)((long)output_string + ulong_var);\n          ptr4 = (undefined8 *)((long)ptr + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)output_string = 0x5e;\n        *(byte *)((long)output_string + 1) = byte1 + 0x40;\n        output_string = (undefined8 *)((long)output_string + 2);\n        ptr4 = ptr;\n      }\n    }\n    *(undefined *)output_string = 0;\n  }\nLAB_0010485e:\n  output_string = (undefined8 *)0x0;\n  if ((((unaff_rbp != 0) && (*(long *)(unaff_rbp + 0x10) != 0)) && (DAT_0010b234 != 0)) &&\n     ((concatenated_string = (char *)(**(code **)(*(long *)(function_pointer + 8) + 0x220))\n                                  (function_pointer,*(long *)(unaff_rbp + 0x10),0,\n                                   (long)&stack0x00000038 + 7), concatenated_string != (char *)0x0 &&\n      (*concatenated_string != '\\0')))) {\n    ptr3 = &DAT_001071e0;\n    if ((stack_var._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(unaff_rbp + 0x10) + 0x20) != 0x10c2a8)) {\n      ptr3 = &DAT_001071df;\n    }\n    output_string = (undefined8 *)reconcat(0,input_string,ptr3,concatenated_string,0);\n    input_string = output_string;\n  }\n  printf(format_string,input_string);\n  if (unaff_r12 != (undefined *)0x0) {\n    *unaff_r12 = 0x40;\n  }\n  free(output_string);\n  return;\n}\n\n",
            "current_name": "print_encoded_string_0010268b",
            "entrypoint": "0x0010268b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010268b": "print_encoded_string_0010268b",
                "__s": "temp_string",
                "bVar15": "byte_var",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "iVar4": "is_terminal",
                "in_stack_00000038": "stack_var",
                "lVar13": "long_var",
                "pcVar7": "concatenated_string",
                "puVar1": "ptr",
                "puVar10": "ptr3",
                "puVar11": "ptr4",
                "puVar12": "output_string",
                "puVar6": "ptr2",
                "sVar5": "string_length",
                "uVar14": "uint_var",
                "uVar8": "ulong_var",
                "uVar9": "brace_char",
                "unaff_R12": "unaff_r12",
                "unaff_R13": "input_string",
                "unaff_R14": "format_string",
                "unaff_R15": "function_pointer",
                "unaff_RBP": "unaff_rbp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102739": {
            "additional_data": {
                "DAT_0010b234": {
                    "flag3": 1
                },
                "DAT_0010b790": {
                    "buffer": 1
                },
                "DAT_0010b798": {
                    "buffer_size": 1
                },
                "DAT_0010b7e0": {
                    "demangle_feature": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "output_mode": 1
                },
                "DAT_0010b814": {
                    "flag1": 1,
                    "flag_1": 1,
                    "is_demangle_enabled": 1,
                    "use_demangler": 1
                },
                "FUN_00102739": {
                    "generate_printable_string": 1,
                    "print_conversions": 1,
                    "print_decompiled_code": 2,
                    "print_decompiled_function": 1,
                    "print_demangled_name": 1,
                    "print_demangled_string": 2,
                    "print_encoded_string": 2,
                    "print_formatted_string": 2,
                    "print_modified_string": 1,
                    "print_obfuscated_string": 2,
                    "print_reconstructed_string": 1,
                    "print_reversed_string": 1,
                    "print_reversed_strings": 1,
                    "print_str_with_formatting": 1,
                    "print_string": 2,
                    "print_string_and_demangle": 1,
                    "print_string_with_formatting": 2,
                    "reverse_translate_and_print": 1
                },
                "PC_FUN_00102739": {
                    "return_address": 1
                },
                "PTR_bfd_demangle": {
                    "demangle_function": 1
                },
                "PTR_sch_istable": {
                    "sch_table": 1
                },
                "__ptr": {
                    "concatenated_string": 1,
                    "concatenated_value": 1,
                    "decoded_string": 2,
                    "demangled_name": 1,
                    "demangled_string": 1,
                    "formatted_string": 2,
                    "modified_string": 1,
                    "new_pointer": 1,
                    "output_string": 3,
                    "pointer5": 1,
                    "ptr_to_undefined8_3": 1,
                    "reconstructed_string": 1,
                    "result": 3,
                    "result_pointer": 3,
                    "result_ptr": 3,
                    "result_string": 2,
                    "temp_ptr": 1,
                    "translated_string": 1
                },
                "__s": {
                    "char_pointer3": 1,
                    "hex_string": 2,
                    "inner_concatenation_string": 1,
                    "output_string_iterator": 1,
                    "pointer11": 1,
                    "pointer7": 2,
                    "print_pointer": 1,
                    "ptr_to_char3": 1,
                    "result_char_pointer": 1,
                    "str": 1,
                    "str3": 1,
                    "str_ptr3": 1,
                    "str_result": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "temp_string": 5,
                    "temp_string_pointer": 1,
                    "temporary_string": 1,
                    "tmp_string": 1
                },
                "bVar15": {
                    "bool_value": 1,
                    "byte3": 6,
                    "byte_3": 1,
                    "byte_val": 1,
                    "byte_var": 3,
                    "byte_var1": 1,
                    "byte_var15": 4,
                    "byte_var3": 1,
                    "flag": 2,
                    "flag_variable_2": 1,
                    "is_at_symbol_present": 1,
                    "loop_condition": 1,
                    "loop_exit_flag": 1,
                    "loop_variable": 1,
                    "skip_flag": 1,
                    "temp_variable_5": 1,
                    "use_unicode_escape": 1
                },
                "bVar2": {
                    "byte1": 10,
                    "byte_1": 1,
                    "byte_value": 2,
                    "byte_value1": 1,
                    "byte_var": 1,
                    "byte_var1": 1,
                    "byte_var2": 3,
                    "byte_variable": 1,
                    "current_byte": 8,
                    "current_char": 1,
                    "temp_byte_1": 1
                },
                "bVar3": {
                    "byte2": 10,
                    "byte_2": 1,
                    "byte_value2": 1,
                    "byte_var2": 2,
                    "byte_var3": 3,
                    "byte_variable_2": 1,
                    "next_byte": 8,
                    "next_byte_value": 1,
                    "next_char": 1,
                    "second_byte_value": 1,
                    "temp_byte_2": 1
                },
                "iVar4": {
                    "flag_variable": 1,
                    "i_var": 1,
                    "int1": 1,
                    "int_value": 1,
                    "int_var": 6,
                    "int_var4": 2,
                    "integer1": 1,
                    "integer_var": 1,
                    "io_result": 1,
                    "io_status": 1,
                    "is_attty_result": 1,
                    "is_terminal": 4,
                    "result": 2,
                    "temp_integer": 1,
                    "temp_var_3": 1,
                    "terminal_check": 1,
                    "var4": 2
                },
                "in_stack_00000038": {
                    "additional_argument": 1,
                    "decoder_ptr": 1,
                    "format_arg": 1,
                    "format_var": 1,
                    "format_variable": 1,
                    "in_stack_00000038": 3,
                    "in_stack_var": 1,
                    "input_arg": 1,
                    "input_stack_var": 1,
                    "stack38": 1,
                    "stack_value": 1,
                    "stack_var1": 1,
                    "stack_variable": 2,
                    "var1": 1
                },
                "lVar13": {
                    "bytes_written": 1,
                    "count": 1,
                    "l_var13": 1,
                    "length": 1,
                    "length_or_out_value": 1,
                    "long1": 1,
                    "long_var": 6,
                    "long_var1": 1,
                    "long_var13": 2,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_var": 1,
                    "loop_variable": 3,
                    "string_length": 1,
                    "temp_var_4": 1,
                    "temp_variable_3": 1
                },
                "pcVar6": {
                    "at_sign_ptr": 1,
                    "at_symbol_location": 1,
                    "at_symbol_pointer": 1,
                    "at_symbol_position": 5,
                    "at_symbol_ptr": 4,
                    "char_pointer": 2,
                    "char_ptr": 1,
                    "found_char": 1,
                    "pointer2": 3,
                    "pointer_char_var6": 1,
                    "pointer_var6": 1,
                    "pointer_variable": 1,
                    "ptr6": 1,
                    "ptr_to_char1": 1,
                    "search_result": 1,
                    "str1": 1,
                    "str_ptr": 1,
                    "strchr_result": 1,
                    "symbol_position": 1,
                    "temp_string": 1
                },
                "pcVar8": {
                    "bfd_demangle_result": 1,
                    "char_pointer2": 1,
                    "char_ptr2": 1,
                    "demangled_name": 2,
                    "demangled_string": 7,
                    "demo_string_pointer": 1,
                    "pointer4": 3,
                    "pointer_char_var8": 1,
                    "pointer_var8": 1,
                    "pointer_variable_2": 1,
                    "ptr3": 1,
                    "ptr8": 1,
                    "ptr_to_char2": 1,
                    "str2": 1,
                    "str_ptr2": 1,
                    "temp_char_pointer": 1
                },
                "puVar1": {
                    "input_string_iterator": 1,
                    "input_string_ptr": 1,
                    "new_ptr1": 1,
                    "next_byte_pointer": 1,
                    "pointer": 1,
                    "pointer1": 3,
                    "pointer_var1": 3,
                    "pointer_variable_3": 1,
                    "ptr1": 4,
                    "ptr_to_undefined8_1": 1,
                    "source_ptr": 1,
                    "temp_pointer1": 1,
                    "temp_ptr1": 1
                },
                "puVar11": {
                    "added_string_ptr": 1,
                    "alignment_ptr": 1,
                    "concat_string": 1,
                    "concatenation_keyword": 1,
                    "concatenation_string": 3,
                    "concatenation_type": 1,
                    "const_pointer": 1,
                    "constant_string": 1,
                    "pointer5": 2,
                    "pointer6": 1,
                    "pointer_to_concatenation_string": 1,
                    "pointer_var11": 2,
                    "pointer_var3": 1,
                    "pointer_variable_5": 1,
                    "print_format": 1,
                    "ptr11": 2,
                    "ptr4": 1,
                    "ptr_to_undefined": 1,
                    "reconcat_pattern": 1,
                    "temp_pointer_4": 1,
                    "undefined_ptr": 1
                },
                "puVar12": {
                    "current_ptr": 1,
                    "decoded_string_ptr": 1,
                    "formatted_string": 1,
                    "formatted_string_ptr": 1,
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "output": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "output_string": 6,
                    "pointer6": 2,
                    "pointer8": 1,
                    "pointer_var12": 2,
                    "pointer_var4": 1,
                    "ptr12": 1,
                    "ptr3": 1,
                    "ptr5": 1,
                    "ptr_to_undefined8_4": 1,
                    "reconstructed_string_ptr": 1,
                    "result_pointer": 1,
                    "temp_pointer": 1
                },
                "puVar7": {
                    "output_ptr": 2,
                    "output_string_iterator": 1,
                    "output_string_position": 1,
                    "output_string_ptr": 1,
                    "pointer3": 3,
                    "pointer_var2": 1,
                    "pointer_var7": 2,
                    "pointer_variable_4": 1,
                    "ptr2": 2,
                    "ptr7": 2,
                    "ptr_to_undefined8_2": 1,
                    "result_pointer": 1,
                    "temp_pointer": 3,
                    "temp_pointer_2": 1,
                    "temp_ptr": 4,
                    "temp_string_ptr": 1
                },
                "sVar5": {
                    "input_string_length": 3,
                    "size": 8,
                    "size_value": 1,
                    "size_var": 1,
                    "size_var5": 2,
                    "str_length": 1,
                    "string_length": 9,
                    "string_size": 1,
                    "strlen_result": 1,
                    "temp_var": 1
                },
                "uVar10": {
                    "additional_char": 1,
                    "additional_character": 1,
                    "bracket_char": 1,
                    "extra_char": 1,
                    "special_char": 3,
                    "special_character": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_variable_2": 2,
                    "temporary_value2": 1,
                    "u_var10": 1,
                    "ulong2": 3,
                    "ulong_var10": 1,
                    "ulong_var2": 4,
                    "undefined8_var": 2,
                    "undefined_var": 1,
                    "unicode_char": 1,
                    "unicode_value": 2,
                    "unsigned_var10": 1
                },
                "uVar14": {
                    "additional_string_length": 1,
                    "another_temp_var": 1,
                    "byte_count": 3,
                    "bytes_to_print": 1,
                    "conversion_size": 1,
                    "iteration_counter": 1,
                    "loop_counter": 1,
                    "num_bytes": 1,
                    "num_chars": 1,
                    "temp_size": 1,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "temp_variable_3": 1,
                    "temp_variable_4": 1,
                    "u_var14": 1,
                    "uint1": 2,
                    "uint_var": 6,
                    "uint_var1": 1,
                    "uint_var14": 1,
                    "unsigned_int_value": 1,
                    "unsigned_var14": 1
                },
                "uVar9": {
                    "byte_count": 1,
                    "bytes_written": 1,
                    "count": 1,
                    "current_length": 1,
                    "iteration_count": 1,
                    "length": 1,
                    "loop_counter": 2,
                    "offset": 1,
                    "output_length": 1,
                    "string_length": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var_2": 1,
                    "temp_variable": 2,
                    "temporary_value": 1,
                    "ulong1": 3,
                    "ulong_var": 7,
                    "ulong_var1": 1,
                    "ulong_var9": 1,
                    "unsigned_var9": 1
                },
                "unaff_R13": {
                    "cstring": 1,
                    "encoded_string": 2,
                    "input": 1,
                    "input_string": 8,
                    "pointer9": 1,
                    "pointer_r13": 1,
                    "register_r13": 1,
                    "source_string": 2,
                    "str_ptr": 1,
                    "string_pointer": 4,
                    "string_ptr": 2,
                    "unaff_r13": 3,
                    "unaffected_r13": 3
                },
                "unaff_R14": {
                    "format": 2,
                    "format_string": 19,
                    "pointer10": 1,
                    "pointer_r14": 1,
                    "register_r14": 1,
                    "unaff_r14": 4,
                    "unaffected_r14": 3
                },
                "unaff_R15": {
                    "arg1": 1,
                    "arg_ptr": 1,
                    "caller_frame": 1,
                    "context": 4,
                    "file_address": 1,
                    "function_call": 1,
                    "function_context": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "input_variable": 1,
                    "long2": 1,
                    "parameters": 1,
                    "pointer_r15": 1,
                    "r15": 1,
                    "register_r15": 1,
                    "string_formatter": 1,
                    "temp_pointer_3": 1,
                    "unaff_ptr": 1,
                    "unaff_r15": 6,
                    "unaffected_r15": 3
                },
                "unaff_RBP": {
                    "arg2": 1,
                    "base_pointer": 5,
                    "base_ptr": 1,
                    "buffer_address": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "context": 1,
                    "context_offset": 1,
                    "current_frame": 1,
                    "frame_base_pointer": 1,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_context": 1,
                    "memory_pointer": 2,
                    "pointer7": 1,
                    "rbp": 1,
                    "register_bp": 1,
                    "unaff_rbp": 6,
                    "unaffected_rbp": 3
                }
            },
            "called": [
                "strchr",
                "bfd_demangle",
                "printf",
                "FUN_001047d0",
                "FUN_0010268b"
            ],
            "calling": [
                "FUN_00104740"
            ],
            "code": "\n\n\nvoid print_string_with_formatting_00102739(void)\n\n{\n  undefined8 *ptr1;\n  byte byte1;\n  byte byte2;\n  int int_var;\n  size_t string_length;\n  char *at_symbol_position;\n  undefined8 *temp_ptr;\n  char *demangled_string;\n  undefined8 *output_string;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  undefined *concatenation_string;\n  long unaff_rbp;\n  undefined8 *output_string;\n  undefined8 *input_string;\n  long long_var;\n  uint uint_var;\n  char *format_string;\n  long unaff_r15;\n  byte byte3;\n  char *temp_string;\n  undefined8 in_stack_00000038;\n  \n  byte3 = 0;\n  output_string = input_string;\n  if (*(int *)(*(long *)(unaff_r15 + 8) + 8) != 5) {\n    if (DAT_0010b814 != 0) {\n      at_symbol_position = (char *)0x0;\n      goto LAB_0010482b;\n    }\n    at_symbol_position = (char *)0x0;\n    if (DAT_0010b7e0 == 0) {\nLAB_00104794:\n      output_string = (undefined8 *)0x0;\n    }\n    else {\n      output_string = (undefined8 *)0x0;\n      if (input_string != (undefined8 *)0x0) goto LAB_0010269d;\n      output_string = (undefined8 *)0x0;\n      input_string = (undefined8 *)0x1073a6;\n    }\n    goto joined_r0x00104799;\n  }\n  at_symbol_position = strchr((char *)input_string,0x40);\n  if (at_symbol_position == (char *)0x0) {\n    if (DAT_0010b814 != 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 == 0) {\n      if (unaff_rbp == 0) {\n        output_string = (undefined8 *)0x0;\n        printf(format_string);\n      }\n      else {\n        if (*(long *)(unaff_rbp + 0x10) != 0) {\n          print_and_free_memory_001047d0();\n          return;\n        }\n        output_string = (undefined8 *)0x0;\n        printf(format_string);\n      }\n      goto LAB_001047ba;\n    }\nLAB_00102698:\n    output_string = input_string;\n    output_string = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      byte1 = *(byte *)output_string;\n      if (byte1 == 0) goto joined_r0x00104799;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) &&\n            (output_string = (undefined8 *)((long)output_string + 1), byte1 < 0xc0));\n    string_length = strlen((char *)input_string);\n    output_string = DAT_0010b790;\n    if (_DAT_0010b798 < string_length * 9) {\n      free(DAT_0010b790);\n      string_length = strlen((char *)input_string);\n      _DAT_0010b798 = string_length * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      output_string = DAT_0010b790;\n    }\n    while( true ) {\n      temp_ptr = DAT_0010b790;\n      byte1 = *(byte *)input_string;\n      ptr1 = (undefined8 *)((long)input_string + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)output_string = byte1;\n          output_string = (undefined8 *)((long)output_string + 1);\n          input_string = ptr1;\n        }\n        else {\n          byte2 = *(byte *)((long)input_string + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            temp_ptr = output_string;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                int_var = isatty(1);\n                if (int_var == 0) {\n                  byte2 = *(byte *)((long)input_string + 1);\n                }\n                else {\n                  *(undefined *)(output_string + 1) = 0;\n                  *output_string = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)input_string + 1);\n                  temp_ptr = output_string + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)temp_ptr,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)input_string >> 2 & 7)\n                        ,(ulong)((*(byte *)input_string & 3) << 6 | byte2 & 0x3f));\n                temp_ptr = (undefined8 *)((long)temp_ptr + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)input_string + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)temp_ptr = *(undefined *)input_string;\n                    input_string = (undefined8 *)((long)input_string + (ulong)byte3 * -2 + 1);\n                    temp_ptr = (undefined8 *)((long)temp_ptr + (ulong)byte3 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  sprintf((char *)output_string,\"%c\",ulong_var2);\n                  *(undefined *)((long)output_string + 3) = 0;\n                  temp_ptr = (undefined8 *)(long_var + (long)input_string);\n                  *(undefined2 *)((long)output_string + 1) = 0x7830;\n                  demangled_string = (char *)((long)output_string + 3);\n                  do {\n                    temp_string = demangled_string;\n                    byte1 = *(byte *)input_string;\n                    input_string = (undefined8 *)((long)input_string + 1);\n                    sprintf(temp_string,\"%02x\",(ulong)byte1);\n                    demangled_string = temp_string + 2;\n                  } while (input_string != temp_ptr);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(temp_string + 2,\"%c\",ulong_var2);\n                  temp_ptr = (undefined8 *)(temp_string + 3);\n                  break;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)input_string + 2);\n                  }\n                  else {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)input_string + 2);\n                    temp_ptr = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)temp_ptr,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)input_string & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)input_string + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)input_string + 1) & 3) << 6 | byte2 & 0x3f));\n                  temp_ptr = (undefined8 *)((long)temp_ptr + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (int_var = isatty(1), int_var != 0)) {\n                    *(undefined4 *)temp_ptr = 0x6d305b1b;\n                    temp_ptr = (undefined8 *)((long)temp_ptr + 4);\n                    *(undefined *)temp_ptr = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)input_string + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var != 0) {\n                    *(undefined *)(output_string + 1) = 0;\n                    *output_string = 0x6d37343b31335b1b;\n                    temp_ptr = output_string + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  int_var = sprintf((char *)temp_ptr,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)input_string & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)input_string + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)input_string + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)input_string + 2) >> 2 & 0xfU));\n                  temp_ptr = (undefined8 *)((long)temp_ptr + (long)int_var);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)temp_ptr - (int)output_string);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)output_string = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          output_string = (undefined8 *)((long)output_string + ulong_var);\n          input_string = (undefined8 *)((long)ptr1 + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)output_string = 0x5e;\n        *(byte *)((long)output_string + 1) = byte1 + 0x40;\n        output_string = (undefined8 *)((long)output_string + 2);\n        input_string = ptr1;\n      }\n    }\n    *(undefined *)output_string = 0;\n    input_string = temp_ptr;\n  }\n  else {\n    *at_symbol_position = '\\0';\n    if (DAT_0010b814 == 0) {\n      if (DAT_0010b7e0 == 0) goto LAB_00104794;\n      output_string = (undefined8 *)0x0;\n      goto LAB_0010269d;\n    }\nLAB_0010482b:\n    if ((*(char *)input_string == '\\0') ||\n       (output_string = (undefined8 *)bfd_demangle(), output_string == (undefined8 *)0x0)) {\n      if (DAT_0010b7e0 != 0) goto LAB_00102698;\n      output_string = (undefined8 *)0x0;\n    }\n    else {\n      input_string = output_string;\n      output_string = output_string;\n      if (DAT_0010b7e0 != 0) goto LAB_0010269d;\n    }\n  }\njoined_r0x00104799:\n  if ((((unaff_rbp != 0) && (*(long *)(unaff_rbp + 0x10) != 0)) && (DAT_0010b234 != 0)) &&\n     ((demangled_string = (char *)(**(code **)(*(long *)(unaff_r15 + 8) + 0x220))\n                                  (unaff_r15,*(long *)(unaff_rbp + 0x10),0,\n                                   (long)&stack0x00000038 + 7), demangled_string != (char *)0x0 &&\n      (*demangled_string != '\\0')))) {\n    concatenation_string = &DAT_001071e0;\n    if ((in_stack_00000038._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(unaff_rbp + 0x10) + 0x20) != 0x10c2a8)) {\n      concatenation_string = &DAT_001071df;\n    }\n    output_string = (undefined8 *)reconcat(output_string,input_string,concatenation_string,demangled_string,0);\n    input_string = output_string;\n  }\n  printf(format_string,input_string);\n  if (at_symbol_position != (char *)0x0) {\n    *at_symbol_position = '@';\n  }\nLAB_001047ba:\n  free(output_string);\n  return;\n}\n\n",
            "current_name": "print_string_with_formatting_00102739",
            "entrypoint": "0x00102739",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102739": "print_string_with_formatting_00102739",
                "__ptr": "output_string",
                "__s": "temp_string",
                "bVar15": "byte3",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "iVar4": "int_var",
                "lVar13": "long_var",
                "pcVar6": "at_symbol_position",
                "pcVar8": "demangled_string",
                "puVar1": "ptr1",
                "puVar11": "concatenation_string",
                "puVar12": "output_string",
                "puVar7": "temp_ptr",
                "sVar5": "string_length",
                "uVar10": "ulong_var2",
                "uVar14": "uint_var",
                "uVar9": "ulong_var",
                "unaff_R13": "input_string",
                "unaff_R14": "format_string",
                "unaff_R15": "unaff_r15",
                "unaff_RBP": "unaff_rbp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c19": {
            "additional_data": {
                "DAT_0010b768": {
                    "global_variable4": 1
                },
                "DAT_0010b770": {
                    "global_variable3": 1
                },
                "DAT_0010b778": {
                    "global_variable1": 1
                },
                "DAT_0010b780": {
                    "global_variable2": 1
                },
                "DAT_0010b7e8": {
                    "global_variable5": 1
                },
                "DAT_0010b800": {
                    "global_variable6": 1
                },
                "DAt_0010b7f8": {
                    "global_variable7": 1
                },
                "FUN_00102c19": {
                    "decompiled_function": 3,
                    "decompress_and_process_data": 1,
                    "process_binary": 1,
                    "process_binary_data": 1,
                    "process_data": 1,
                    "process_lto": 1,
                    "process_lto_object": 7
                },
                "__ptr": {
                    "generic_pointer": 1,
                    "new_ptr": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_var": 2,
                    "pointer_var3": 1,
                    "pointer_var4": 1,
                    "pointer_var_unaff_2": 1,
                    "pointer_variable3": 2,
                    "pointer_variable4": 1,
                    "ptr": 1,
                    "ptr_var1": 1,
                    "ptr_var3": 1,
                    "ptr_var4": 1,
                    "ptr_variable": 1,
                    "temporary_pointer": 1,
                    "unaff_rbx_2": 1,
                    "undefined8_pointer4": 2,
                    "undefined8_pointer_4": 1
                },
                "bVar16": {
                    "bool_var": 5,
                    "bool_var16": 1,
                    "bool_variable": 6,
                    "boolean": 3,
                    "boolean1": 1,
                    "boolean_flag": 1,
                    "boolean_value": 1,
                    "boolean_var": 2,
                    "boolean_var16": 1,
                    "boolean_variable": 2,
                    "flag2": 1
                },
                "bVar17": {
                    "boolean": 1,
                    "byte": 2,
                    "byte1": 1,
                    "byte_flag": 1,
                    "byte_value": 3,
                    "byte_var": 8,
                    "byte_var17": 2,
                    "byte_variable": 8,
                    "flag": 1
                },
                "cVar3": {
                    "ch": 1,
                    "char_value": 1,
                    "char_var": 7,
                    "char_var1": 1,
                    "char_var3": 2,
                    "char_variable": 5,
                    "character": 7,
                    "character1": 1,
                    "character_var": 1,
                    "character_variable": 2,
                    "current_byte": 1
                },
                "iVar4": {
                    "comparison_result": 1,
                    "index": 1,
                    "int_value": 1,
                    "int_var": 8,
                    "int_var1": 1,
                    "int_var4": 1,
                    "int_variable": 5,
                    "integer": 5,
                    "integer1": 1,
                    "integer_var": 2,
                    "integer_var4": 1,
                    "integer_variable": 2
                },
                "in_R8": {
                    "in_r8": 1,
                    "in_reg8": 1,
                    "input_r8": 1,
                    "input_register8": 1,
                    "input_register_8": 1,
                    "param1": 1,
                    "pointer_in_r8": 1,
                    "pointer_var7": 1,
                    "pointer_var9": 1,
                    "pointer_var_in_1": 1,
                    "register_r8": 3,
                    "undefined8_pointer_9": 1
                },
                "in_R9": {
                    "in_r9": 1,
                    "in_reg9": 1,
                    "input_register9": 2,
                    "param2": 1,
                    "pointer_in_r9": 1,
                    "pointer_var11": 1,
                    "pointer_var9": 1,
                    "pointer_variable_in_2": 1,
                    "register_r9": 3,
                    "temp_ptr": 1,
                    "undefined8_pointer10": 1,
                    "undefined8_pointer_11": 1
                },
                "in_stack_00000008": {
                    "in_stack_variable8": 1,
                    "input_stack_var8": 1,
                    "input_stack_variable1": 1,
                    "input_stack_variable_1": 1,
                    "parameter1": 1,
                    "pointer_in_stack_00000008": 1,
                    "stack_local_1": 1,
                    "stack_value1": 2,
                    "stack_var1": 7,
                    "stack_var_8": 1,
                    "stack_variable1": 2,
                    "stack_variable_1": 1,
                    "undefined8_var2": 1,
                    "undefined8_variable_2": 1,
                    "var1": 2,
                    "variable_on_stack1": 1,
                    "variable_stack1": 1
                },
                "in_stack_00000010": {
                    "buffer_ptr": 1,
                    "in_stack_variable10": 1,
                    "input_stack_var10": 1,
                    "input_stack_variable2": 1,
                    "input_stack_variable_2": 1,
                    "pointer7": 1,
                    "pointer_in_stack_00000010": 1,
                    "stack_local_2": 1,
                    "stack_pointer1": 1,
                    "stack_value2": 1,
                    "stack_var2": 6,
                    "stack_var_10": 1,
                    "stack_variable2": 2,
                    "stack_variable_2": 1,
                    "undefined8_pointer15": 1,
                    "undefined8_pointer_17": 1,
                    "var2": 2,
                    "variable_on_stack2": 1,
                    "variable_stack2": 1
                },
                "in_stack_00000018": {
                    "in_stack_variable18": 1,
                    "input_stack_var18": 1,
                    "input_stack_variable3": 1,
                    "input_stack_variable_3": 1,
                    "pointer8": 1,
                    "pointer_in_stack_00000018": 1,
                    "ptr1": 1,
                    "stack_local_3": 1,
                    "stack_pointer2": 1,
                    "stack_value3": 1,
                    "stack_var3": 6,
                    "stack_var_18": 1,
                    "stack_variable3": 2,
                    "stack_variable_3": 1,
                    "undefined8_pointer16": 1,
                    "undefined8_pointer_18": 1,
                    "var3": 2,
                    "variable_on_stack3": 1,
                    "variable_stack3": 1
                },
                "in_stack_00000038": {
                    "in_stack_variable38": 1,
                    "input_stack_var38": 1,
                    "input_stack_variable4": 1,
                    "input_stack_variable_4": 1,
                    "num_var1": 1,
                    "parameter2": 1,
                    "stack_local_4": 1,
                    "stack_value2": 1,
                    "stack_value4": 1,
                    "stack_var2": 1,
                    "stack_var4": 5,
                    "stack_var_38": 1,
                    "stack_variable4": 2,
                    "stack_variable_4": 1,
                    "undefined8_var3": 1,
                    "undefined8_variable_3": 1,
                    "unsigned_long_in_stack_00000038": 1,
                    "var4": 2,
                    "variable_on_stack4": 1,
                    "variable_stack4": 1
                },
                "in_stack_00000040": {
                    "in_stack_variable40": 1,
                    "input_stack_var40": 1,
                    "input_stack_variable5": 1,
                    "input_stack_variable_5": 1,
                    "pointer9": 1,
                    "pointer_in_stack_00000040": 1,
                    "ptr2": 1,
                    "ptr_var": 1,
                    "stack_local_5": 1,
                    "stack_pointer3": 1,
                    "stack_value5": 1,
                    "stack_var5": 5,
                    "stack_var_40": 1,
                    "stack_variable5": 2,
                    "stack_variable_5": 1,
                    "var5": 2,
                    "variable_on_stack5": 1,
                    "variable_stack5": 1,
                    "void_pointer": 2
                },
                "in_stack_00000048": {
                    "in_stack_variable48": 1,
                    "input_stack_var48": 1,
                    "input_stack_variable6": 1,
                    "input_stack_variable_6": 1,
                    "pointer10": 1,
                    "pointer_in_stack_00000048": 1,
                    "ptr3": 1,
                    "stack_local_6": 1,
                    "stack_pointer4": 1,
                    "stack_ptr": 1,
                    "stack_value6": 1,
                    "stack_var6": 5,
                    "stack_var_48": 1,
                    "stack_variable6": 2,
                    "stack_variable_6": 1,
                    "undefined8_pointer17": 1,
                    "undefined8_pointer_19": 1,
                    "var6": 2,
                    "variable_on_stack6": 1,
                    "variable_stack6": 1
                },
                "lVar7": {
                    "long": 1,
                    "long1": 1,
                    "long_value": 4,
                    "long_var": 10,
                    "long_var1": 1,
                    "long_var7": 2,
                    "long_variable": 6,
                    "long_variable4": 1,
                    "long_variable_1": 1,
                    "size": 1,
                    "temp_value1": 1
                },
                "lVar9": {
                    "length": 1,
                    "long2": 1,
                    "long_v9": 1,
                    "long_value_2": 1,
                    "long_value_3": 1,
                    "long_var1": 4,
                    "long_var2": 6,
                    "long_var9": 2,
                    "long_var_1": 1,
                    "long_variable": 2,
                    "long_variable1": 1,
                    "long_variable2": 4,
                    "long_variable3": 1,
                    "long_variable_2": 2,
                    "temp_value2": 1
                },
                "pcVar1": {
                    "char_pointer": 7,
                    "char_pointer_1": 1,
                    "char_ptr1": 2,
                    "character_pointer": 1,
                    "character_ptr1": 1,
                    "current_char": 1,
                    "current_element": 1,
                    "function_ptr": 1,
                    "pointer": 4,
                    "pointer_char_var1": 2,
                    "ptr": 1,
                    "ptr1": 2,
                    "str": 1,
                    "string_pointer": 1,
                    "string_ptr": 2,
                    "string_ptr1": 1
                },
                "pcVar2": {
                    "code_pointer": 4,
                    "code_ptr": 2,
                    "func_ptr": 2,
                    "function": 1,
                    "function_pointer": 12,
                    "function_ptr": 4,
                    "function_ptr1": 1,
                    "pointer_code_var2": 1,
                    "ptr2": 2
                },
                "puVar10": {
                    "new_result": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "pointer_unsigned_var10": 2,
                    "pointer_v10": 1,
                    "pointer_var2": 4,
                    "pointer_var_1": 1,
                    "pointer_var_2": 1,
                    "pointer_variable2": 6,
                    "pointer_variable_2": 1,
                    "ptr10": 1,
                    "ptr_var2": 3,
                    "ptr_var8": 1,
                    "temp_pointer1": 1,
                    "undefined8_pointer2": 2,
                    "undefined8_pointer_2": 1
                },
                "puVar11": {
                    "current_result": 1,
                    "pointer": 1,
                    "pointer3": 1,
                    "pointer_unsigned_var11": 2,
                    "pointer_v11": 1,
                    "pointer_var3": 2,
                    "pointer_var4": 1,
                    "pointer_var6": 1,
                    "pointer_var_3": 1,
                    "pointer_var_6": 1,
                    "pointer_variable3": 2,
                    "pointer_variable4": 2,
                    "pointer_variable6": 1,
                    "pointer_variable8": 1,
                    "pointer_variable_3": 1,
                    "ptr11": 1,
                    "ptr5": 1,
                    "ptr_var3": 2,
                    "ptr_var4": 1,
                    "ptr_var6": 1,
                    "temp_pointer2": 1,
                    "undefined8_pointer6": 2,
                    "undefined8_pointer_6": 1
                },
                "puVar12": {
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "original_result": 1,
                    "pointer": 1,
                    "pointer4": 1,
                    "pointer_unsigned_var12": 2,
                    "pointer_v12": 1,
                    "pointer_var4": 2,
                    "pointer_var5": 1,
                    "pointer_var7": 1,
                    "pointer_var_3": 1,
                    "pointer_variable4": 3,
                    "pointer_variable5": 2,
                    "pointer_variable7": 1,
                    "pointer_variable_4": 1,
                    "ptr12": 1,
                    "ptr6": 1,
                    "ptr_var4": 2,
                    "ptr_var5": 1,
                    "ptr_var7": 1,
                    "undefined8_pointer7": 2,
                    "undefined8_pointer_7": 1
                },
                "puVar13": {
                    "pointer": 1,
                    "pointer5": 1,
                    "pointer_unsigned_var13": 2,
                    "pointer_v13": 1,
                    "pointer_var5": 2,
                    "pointer_var6": 1,
                    "pointer_var8": 1,
                    "pointer_var_4": 2,
                    "pointer_variable5": 3,
                    "pointer_variable6": 2,
                    "pointer_variable8": 1,
                    "pointer_variable_5": 1,
                    "ptr13": 1,
                    "ptr2": 1,
                    "ptr7": 1,
                    "ptr_var5": 2,
                    "ptr_var6": 1,
                    "ptr_var9": 1,
                    "temp_pointer3": 1,
                    "undefined8_pointer8": 1,
                    "undefined8_pointer9": 1,
                    "undefined8_pointer_8": 1
                },
                "puVar14": {
                    "pointer": 1,
                    "pointer6": 1,
                    "pointer_unsigned_var14": 2,
                    "pointer_v14": 1,
                    "pointer_var10": 1,
                    "pointer_var6": 2,
                    "pointer_var8": 1,
                    "pointer_var_5": 2,
                    "pointer_variable10": 1,
                    "pointer_variable6": 3,
                    "pointer_variable7": 2,
                    "pointer_variable_6": 1,
                    "ptr14": 1,
                    "ptr3": 1,
                    "ptr8": 1,
                    "ptr_var6": 2,
                    "ptr_var7": 1,
                    "temp_pointer4": 1,
                    "undefined8_pointer10": 1,
                    "undefined8_pointer11": 1,
                    "undefined8_pointer_10": 1
                },
                "puVar15": {
                    "pointer": 1,
                    "pointer_unsigned_var15": 2,
                    "pointer_v15": 1,
                    "pointer_var10": 1,
                    "pointer_var12": 1,
                    "pointer_var7": 1,
                    "pointer_var_6": 1,
                    "pointer_variable7": 3,
                    "pointer_variable8": 2,
                    "pointer_variable_7": 1,
                    "ptr15": 1,
                    "ptr4": 1,
                    "ptr9": 1,
                    "ptr_var7": 2,
                    "ptr_var8": 1,
                    "temp_pointer5": 1,
                    "undefined8_pointer_12": 1
                },
                "puVar8": {
                    "current_pointer": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_unsigned_var8": 2,
                    "pointer_v8": 1,
                    "pointer_var": 1,
                    "pointer_var1": 3,
                    "pointer_var_1": 1,
                    "pointer_variable": 1,
                    "pointer_variable1": 6,
                    "ptr4": 1,
                    "ptr8": 1,
                    "ptr_var1": 3,
                    "ptr_var2": 1,
                    "result": 1,
                    "returned_pointer": 1,
                    "undefined8_pointer": 2,
                    "undefined8_pointer_1": 1
                },
                "uVar18": {
                    "ulong_value": 1,
                    "ulong_var": 1,
                    "ulong_var1": 1,
                    "ulong_var2": 5,
                    "ulong_var3": 1,
                    "ulong_variable2": 2,
                    "ulong_variable_2": 2,
                    "unsigned_long": 1,
                    "unsigned_long_2": 1,
                    "unsigned_long_v18": 1,
                    "unsigned_long_value": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_var18": 2,
                    "unsigned_var_2": 1,
                    "unsigned_variable3": 3,
                    "value": 1
                },
                "uVar5": {
                    "comparison_flag": 1,
                    "flag": 1,
                    "uint_value": 1,
                    "uint_var": 9,
                    "uint_var1": 1,
                    "uint_variable": 2,
                    "uint_variable_1": 1,
                    "unsigned_int": 1,
                    "unsigned_int_variable": 1,
                    "unsigned_integer": 4,
                    "unsigned_integer1": 1,
                    "unsigned_var": 1,
                    "unsigned_var5": 2,
                    "unsigned_variable": 3
                },
                "uVar6": {
                    "format_string": 1,
                    "uint_var2": 2,
                    "ulong_var": 4,
                    "ulong_variable": 1,
                    "undefined8_value": 1,
                    "undefined8_var": 4,
                    "undefined8_variable": 1,
                    "undefined8_variable_1": 1,
                    "unknown_var": 1,
                    "unsigned_long": 5,
                    "unsigned_long1": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var6": 2,
                    "unsigned_var_1": 1,
                    "unsigned_variable2": 3
                },
                "unaff_R12": {
                    "count": 1,
                    "current_ptr_1": 1,
                    "exceptional_pointer_v12": 1,
                    "iteration_count": 1,
                    "number_of_iterations": 1,
                    "pointer_r12": 2,
                    "pointer_var11": 1,
                    "pointer_var13": 2,
                    "pointer_var_unaff_5": 1,
                    "pointer_variable9": 1,
                    "ptr_reg3": 1,
                    "ptr_var8": 1,
                    "r12_var": 1,
                    "register12": 1,
                    "register_pointer3": 1,
                    "register_r12": 5,
                    "register_r12_variable": 1,
                    "unaffected_r12": 1,
                    "unaffected_register12": 1,
                    "unaffected_register_12": 1,
                    "undefined8_pointer8": 1,
                    "undefined8_pointer9": 1,
                    "undefined8_pointer_13": 1
                },
                "unaff_R13": {
                    "current_ptr": 1,
                    "current_ptr_2": 1,
                    "exceptional_pointer_v13": 1,
                    "pointer_r13": 2,
                    "pointer_var10": 1,
                    "pointer_var14": 2,
                    "pointer_var_unaff_4": 1,
                    "pointer_variable11": 1,
                    "ptr_reg4": 1,
                    "ptr_var10": 1,
                    "r13_var": 1,
                    "register13": 1,
                    "register_pointer4": 1,
                    "register_r13": 5,
                    "register_r13_variable": 1,
                    "source_offset": 1,
                    "temporary_pointer1": 1,
                    "unaffected_r13": 1,
                    "unaffected_register13": 1,
                    "unaffected_register_13": 1,
                    "undefined8_pointer11": 1,
                    "undefined8_pointer12": 1,
                    "undefined8_pointer_14": 1
                },
                "unaff_R14": {
                    "data_step": 1,
                    "exceptional_pointer_v14": 1,
                    "original_ptr": 1,
                    "pointer_r14": 2,
                    "pointer_var13": 1,
                    "pointer_var15": 2,
                    "pointer_var_unaff_6": 1,
                    "pointer_variable12": 1,
                    "ptr_reg5": 1,
                    "ptr_var11": 1,
                    "r14_var": 1,
                    "register14": 1,
                    "register_pointer5": 1,
                    "register_r14": 5,
                    "register_r14_variable": 1,
                    "temp_ptr_1": 1,
                    "temporary_pointer2": 1,
                    "unaffected_r14": 1,
                    "unaffected_register_14": 1,
                    "undefined8_pointer12": 1,
                    "undefined8_pointer13": 1,
                    "undefined8_pointer_15": 1
                },
                "unaff_R15": {
                    "buffer": 1,
                    "exceptional_pointer_v15": 1,
                    "pointer_r15": 2,
                    "pointer_var12": 1,
                    "pointer_var16": 2,
                    "pointer_variable13": 1,
                    "pointer_variable_unaff_1": 1,
                    "ptr_reg6": 1,
                    "ptr_var12": 1,
                    "r15_var": 1,
                    "register15": 1,
                    "register_pointer6": 1,
                    "register_r15": 5,
                    "register_r15_variable": 1,
                    "temp_ptr_2": 1,
                    "temporary_pointer3": 1,
                    "unaffected_r15": 1,
                    "unaffected_register15": 1,
                    "unaffected_register_15": 1,
                    "undefined8_pointer13": 1,
                    "undefined8_pointer14": 1,
                    "undefined8_pointer_16": 1,
                    "unknown_ptr": 1
                },
                "unaff_RBP": {
                    "base_pointer1": 1,
                    "current_base_ptr": 1,
                    "original_byte": 1,
                    "params": 1,
                    "pointer_rbp": 2,
                    "pointer_v_b": 1,
                    "pointer_var12": 1,
                    "pointer_var5": 1,
                    "pointer_var9": 1,
                    "pointer_var_unaff_3": 1,
                    "pointer_variable5": 1,
                    "ptr_reg1": 1,
                    "ptr_var5": 1,
                    "rbp_var": 1,
                    "register_bp": 5,
                    "register_bp_variable": 1,
                    "register_pointer2": 1,
                    "register_rbp": 1,
                    "unaffected_rbp": 1,
                    "unaffected_register_bp": 2,
                    "undefined8_pointer5": 2,
                    "undefined8_pointer_5": 1
                },
                "unaff_RBX": {
                    "current_byte": 1,
                    "current_pointer1": 1,
                    "current_ptr": 1,
                    "exceptional_pointer": 1,
                    "pointer_rbx": 2,
                    "pointer_var11": 1,
                    "pointer_var3": 1,
                    "pointer_var8": 1,
                    "pointer_var_unaff_1": 1,
                    "pointer_variable3": 1,
                    "ptr_reg2": 1,
                    "ptr_var3": 1,
                    "rbx_var": 1,
                    "register_bx": 5,
                    "register_bx_variable": 1,
                    "register_pointer1": 1,
                    "register_rbx": 1,
                    "source_data": 1,
                    "unaffected_rbx": 1,
                    "unaffected_register_bx": 2,
                    "undefined8_pointer3": 2,
                    "undefined8_pointer_3": 1
                },
                "unaff_retaddr": {
                    "register_ret_address": 1,
                    "register_retaddr": 2,
                    "register_return_value": 1,
                    "ret_addr_var": 1,
                    "return_address": 7,
                    "ulong_var": 3,
                    "ulong_var1": 3,
                    "ulong_var2": 1,
                    "ulong_variable": 1,
                    "ulong_variable_1": 2,
                    "unaffected_register_retaddr": 1,
                    "unaffected_return_address": 2,
                    "unsigned_long": 1,
                    "unsigned_long2": 1,
                    "unsigned_long_retaddr": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_long_vretaddr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid process_lto_object_00102c19(void)\n\n{\n  char *char_pointer;\n  code *function_pointer;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 unsigned_long;\n  long long_var;\n  undefined8 *pointer_variable1;\n  long long_var2;\n  undefined8 *pointer_variable2;\n  undefined8 *register_bx;\n  undefined8 *undefined8_pointer4;\n  undefined8 *register_bp;\n  undefined8 *undefined8_pointer6;\n  undefined8 *pointer_variable4;\n  undefined8 *register_r8;\n  undefined8 *pointer_variable5;\n  undefined8 *register_r9;\n  undefined8 *pointer_variable6;\n  undefined8 *register_r12;\n  undefined8 *pointer_variable7;\n  undefined8 *register_r13;\n  undefined8 *register_r14;\n  undefined8 *register_r15;\n  bool bool_variable;\n  byte byte_var;\n  ulong return_address;\n  ulong ulong_var2;\n  undefined8 stack_var1;\n  undefined8 *stack_var2;\n  undefined8 *stack_var3;\n  undefined8 stack_var4;\n  void *stack_var5;\n  undefined8 *stack_var6;\n  \n  byte_var = 0;\n  if (_DAT_0010b760 == 0) goto LAB_001049c3;\nLAB_00104a7b:\n  do {\n    if (register_bx != register_r13) {\n      if (register_r14 == (undefined8 *)0x8) {\n        *register_bx = *register_r13;\n        reverse_and_process_data_001049c0();\n        return;\n      }\n      for (; register_r14 != (undefined8 *)0x0; register_r14 = (undefined8 *)((long)register_r14 + -1)) {\n        *(undefined *)register_bx = *(undefined *)register_r13;\n        register_r13 = (undefined8 *)((long)register_r13 + (ulong)byte_var * -2 + 1);\n        register_bx = (undefined8 *)((long)register_bx + (ulong)byte_var * -2 + 1);\n      }\n      reverse_and_process_data_001049c0();\n      return;\n    }\n    register_bx = (undefined8 *)((long)register_bx + (long)register_r14);\nLAB_001049c3:\n    do {\n      do {\n        register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n        pointer_variable7 = register_r12;\n        pointer_variable4 = register_bp;\n        if (register_r12 <= register_r13) goto LAB_00104b15;\nLAB_001049cf:\n        pointer_variable1 = (undefined8 *)\n                 (**(code **)(register_bp[1] + 0x270))\n                           (register_bp,return_address & 0xffffffff,register_r13,register_r15);\n        undefined8_pointer6 = register_bp;\n        pointer_variable4 = register_r13;\n        pointer_variable7 = register_r15;\n        if (pointer_variable1 == (undefined8 *)0x0) goto LAB_00102eb0;\n        char_pointer = (char *)pointer_variable1[1];\n        if (((char_pointer == (char *)0x0) || (*char_pointer != '_')) || (char_pointer[1] != '_')) {\nLAB_00104a03:\n          if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uint_var = (uint)(pointer_variable1[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uint_var != 0) goto LAB_00104a2d;\n          register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n          pointer_variable7 = register_r12;\n          pointer_variable4 = register_bp;\n          if (register_r12 <= register_r13) {\nLAB_00104b15:\n            register_bx = (undefined8 *)((long)register_bx - (long)stack_var3);\n            if (register_r14 == (undefined8 *)0x8) {\n              long_var2 = pointer_variable4[1];\n              undefined8_pointer6 = (undefined8 *)((long)register_bx + 7);\n              if (-1 < (long)register_bx) {\n                undefined8_pointer6 = register_bx;\n              }\n              register_r8 = (undefined8 *)(ulong)DAT_0010b800;\n              function_pointer = *(code **)(long_var2 + 0x208);\n              undefined8_pointer6 = (undefined8 *)((long)undefined8_pointer6 >> 3);\n            }\n            else {\n              undefined8_pointer6 = (undefined8 *)((long)register_bx / (long)register_r14);\n              long_var2 = pointer_variable4[1];\n              function_pointer = *(code **)(long_var2 + 0x208);\n            }\n            register_bp = pointer_variable4;\n            if (DAT_0010b800 == 0) {\n              DAT_0010b778 = DAT_0010b80c != 0;\n              DAT_0010b780 = pointer_variable4;\n              DAT_0010b770 = (undefined8 *)(*function_pointer)(pointer_variable4);\n              DAT_0010b768 = (undefined8 *)(**(code **)(pointer_variable4[1] + 0x208))(pointer_variable4);\n              register_bx = stack_var6;\n              if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n                print_error_message_and_exit_00106530(*pointer_variable4);\n                undefined8_pointer4 = register_r15;\n                goto LAB_00102d8e;\n              }\n              register_r12 = (undefined8 *)(ulong)stack_var4._4_4_;\n              if (DAT_0010b7f8 != 0) {\n                ulong_var2 = (ulong)(DAT_0010b80c != 0);\n                qsort(stack_var6,(size_t)undefined8_pointer6,(size_t)register_r12,check_file_compile_status_00102fd2);\n                pointer_variable7 = (undefined8 *)xmalloc((long)undefined8_pointer6 << 4);\n                pointer_variable5 = DAT_0010b770;\n                register_bp = DAT_0010b768;\n                register_r14 = (undefined8 *)((long)undefined8_pointer6 * (long)register_r12 + (long)register_bx);\n                pointer_variable1 = DAT_0010b770;\n                register_r9 = DAT_0010b768;\n                if (register_r14 <= register_bx) goto LAB_00102ec2;\n                undefined8_pointer6 = (undefined8 *)\n                          (**(code **)(pointer_variable4[1] + 0x270))(pointer_variable4,ulong_var2 & 0xffffffff,register_bx);\n                undefined8_pointer4 = register_bx;\n                register_r8 = register_r12;\n                stack_var2 = pointer_variable7;\n                if (undefined8_pointer6 == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(stack_var6,(size_t)undefined8_pointer6,(size_t)register_r12,\n                    (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2])\n              ;\n              long_var2 = pointer_variable4[1];\n            }\n            undefined8_pointer4 = (undefined8 *)0x0;\n            do {\n              pointer_variable4 = stack_var6;\n              pointer_variable1 = (undefined8 *)(ulong)DAT_0010b7f8;\n              register_r14 = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n              if (DAT_0010b7f8 != 0) {\n                pointer_variable7 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n                if (pointer_variable7 == (undefined8 *)0x0) goto LAB_00102ed2;\n                register_bx = undefined8_pointer4 + (long)undefined8_pointer6 * 2;\n                undefined8_pointer6 = undefined8_pointer4;\n                do {\n                  if (register_bx <= undefined8_pointer6) {\nLAB_00104c75:\n                    if (stack_var5 == (void *)0x0) {\n                      free(stack_var6);\n                      free(undefined8_pointer4);\n                      return;\n                    }\n                    free(stack_var5);\n                    free(stack_var6);\n                    free(undefined8_pointer4);\n                    return;\n                  }\n                  pointer_variable1 = pointer_variable7;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,*undefined8_pointer6);\n                  if (long_var2 == 0) {\n                    print_error_message_and_exit_00106530(*register_bp,0);\nLAB_00102ed2:\n                    pointer_variable4 = (undefined8 *)*register_bp;\n                    print_error_message_and_exit_00106530();\n                    pointer_variable5 = register_r8;\n                    pointer_variable6 = register_r9;\n                    goto LAB_00102edb;\n                  }\n                  pointer_variable4 = undefined8_pointer6 + 1;\n                  undefined8_pointer6 = undefined8_pointer6 + 2;\n                  print_labels_and_strings_00105110(register_bp,long_var2,*pointer_variable4,stack_var1);\n                } while( true );\n              }\n              register_r12 = (undefined8 *)(ulong)stack_var4._4_4_;\n              register_r15 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n              if (register_r15 == (undefined8 *)0x0) {\n                print_error_message_and_exit_00106530(*register_bp);\n                pointer_variable4 = register_r12;\n                if (DAT_0010b80c == 0) {\n                  long_var2 = (**(code **)(register_bp[1] + 0x350))(register_bp);\n                  undefined8_pointer6 = stack_var6;\n                  pointer_variable7 = register_r12;\n                  if (long_var2 < 1) {\n                    pointer_variable1 = (undefined8 *)0x0;\n                    register_bx = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    register_bx = (undefined8 *)xmalloc();\n                    pointer_variable1 = (undefined8 *)(**(code **)(register_bp[1] + 0x358))(register_bp,register_bx);\n                    pointer_variable4 = pointer_variable7;\n                    if ((long)pointer_variable1 < 0) {\n                      pointer_variable4 = (undefined8 *)*register_bp;\n                      undefined8_pointer6 = (undefined8 *)print_error_message_and_exit_00106530(pointer_variable4,pointer_variable7);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  pointer_variable1 = register_r12;\n                  register_bx = stack_var6;\n                  undefined8_pointer6 = (undefined8 *)0x0;\n                  pointer_variable7 = (undefined8 *)0x0;\n                }\n                register_r9 = &stack0x00000040;\n                register_r8 = register_bx;\n                long_var2 = (**(code **)(register_bp[1] + 0x360))(register_bp,pointer_variable7,undefined8_pointer6,pointer_variable1);\n                register_r12 = pointer_variable4;\n                if (0 < long_var2) {\n                  register_r12 = (undefined8 *)((long)pointer_variable4 + long_var2);\n                  stack_var6 = (undefined8 *)xrealloc(stack_var6);\n                  long_var = 0;\n                  do {\n                    stack_var6[(long)((long)pointer_variable4 + long_var)] =\n                         (void *)(long_var * 0x30 + (long)stack_var5);\n                    long_var = long_var + 1;\n                  } while (long_var2 != long_var);\n                  stack_var6[(long)((long)pointer_variable4 + long_var2)] = 0;\n                }\n                if ((DAT_0010b80c == 0) && (register_bx != (undefined8 *)0x0)) {\n                  free(register_bx);\n                }\n                if ((*(byte *)((long)register_bp + 0x4a) & 0x10) != 0) {\n                  register_bx = (undefined8 *)*register_bp;\n                  DAT_0010b230 = '\\0';\n                  unsigned_long = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  print_error_with_formatted_message_00106400(unsigned_long);\n                }\n                register_r14 = (undefined8 *)(ulong)stack_var4._4_4_;\n                bool_variable = DAT_0010b80c != 0;\n                undefined8_pointer6 = (undefined8 *)(ulong)bool_variable;\n                pointer_variable1 = stack_var6;\n                stack_var3 = stack_var6;\n                register_r15 = (undefined8 *)(**(code **)(register_bp[1] + 0x208))(register_bp);\n                if (register_r15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                undefined8_pointer6 = (undefined8 *)((long)undefined8_pointer6 * (long)register_r12 + (long)pointer_variable4);\n                register_bx = pointer_variable4;\n                while( true ) {\n                  if (undefined8_pointer6 <= register_bx) goto LAB_00104c75;\n                  pointer_variable1 = register_r15;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,register_bx);\n                  if (long_var2 == 0) break;\n                  register_bx = (undefined8 *)((long)register_bx + (long)register_r12);\n                  print_labels_and_strings_00105110(register_bp,long_var2,0,stack_var1);\n                }\n                print_error_message_and_exit_00106530(*register_bp,0);\n              }\n              print_error_message_and_exit_00106530(*register_bp);\n              pointer_variable4 = register_bp;\n              pointer_variable7 = register_r15;\nLAB_00102eb0:\n              print_error_message_and_exit_00106530(*undefined8_pointer6);\nLAB_00102eb9:\n              print_error_message_and_exit_00106530(*pointer_variable4);\nLAB_00102ec2:\n              undefined8_pointer6 = (undefined8 *)0x0;\n              undefined8_pointer4 = register_bx;\n              register_r8 = register_r12;\n              pointer_variable5 = pointer_variable1;\n              register_bp = register_r9;\n              stack_var2 = pointer_variable7;\nLAB_00104e35:\n              while (register_r9 = pointer_variable5, undefined8_pointer4 < register_r14) {\n                register_bx = (undefined8 *)((long)undefined8_pointer4 + (long)register_r8);\n                if (register_bx < register_r14) {\n                  pointer_variable1 = register_bp;\n                  pointer_variable5 = register_r8;\n                  pointer_variable6 = register_r9;\n                  pointer_variable2 = (undefined8 *)(**(code **)(pointer_variable4[1] + 0x270))();\n                  if (pointer_variable2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    register_r9 = pointer_variable6;\n                    register_r8 = pointer_variable5;\n                    pointer_variable4 = (undefined8 *)*pointer_variable4;\n                    pointer_variable2 = (undefined8 *)print_error_message_and_exit_00106530();\n                  }\n                  else {\n                    pointer_variable1 = (undefined8 *)undefined8_pointer6[4];\n                    if ((*(uint *)(undefined8_pointer6 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  long_var2 = undefined8_pointer6[2];\nLAB_00102ee7:\n                  if (pointer_variable1 == (undefined8 *)pointer_variable2[4]) {\n                    long_var2 = pointer_variable2[2] - long_var2;\n                    pointer_variable5 = register_bp;\n                    pointer_variable6 = undefined8_pointer4;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  long_var2 = pointer_variable1[8] - long_var2;\n                  pointer_variable5 = register_bp;\n                  pointer_variable6 = undefined8_pointer4;\n                }\n                else {\n                  pointer_variable1 = (undefined8 *)undefined8_pointer6[4];\n                  if ((*(uint *)(undefined8_pointer6 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    long_var2 = undefined8_pointer6[2];\n                    pointer_variable2 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  pointer_variable2 = (undefined8 *)0x0;\nLAB_00104e95:\n                  pointer_variable5 = register_bp;\n                  pointer_variable6 = undefined8_pointer4;\n                  if (*(int *)(pointer_variable4[1] + 8) == 5) {\n                    long_var2 = undefined8_pointer6[7];\n                  }\n                  else {\n                    long_var2 = undefined8_pointer6[2];\n                    if ((*(byte *)((long)pointer_variable1 + 0x25) & 0x10) == 0) {\n                      if (register_bx < register_r14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                undefined8_pointer6 = pointer_variable2;\n                undefined8_pointer4 = register_bx;\n                register_bp = register_r9;\n                if (long_var2 != 0) {\n                  *pointer_variable7 = pointer_variable6;\n                  pointer_variable7[1] = long_var2;\n                  pointer_variable7 = pointer_variable7 + 2;\n                }\n              }\n              undefined8_pointer6 = (undefined8 *)((long)pointer_variable7 - (long)stack_var2 >> 4);\n              qsort(stack_var2,(size_t)undefined8_pointer6,0x10,compare_and_execute_function_00103533);\n              long_var2 = pointer_variable4[1];\n              register_bx = undefined8_pointer4;\n              register_bp = pointer_variable4;\n              undefined8_pointer4 = stack_var2;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        int_var = strcmp(char_pointer + (char_pointer[2] == '_'),\"__gnu_lto_slim\");\n        stack_var2 = pointer_variable1;\n        if (int_var == 0) {\n          if (DAT_0010b230 != '\\0') {\n            stack_var2 = (undefined8 *)*register_bp;\n            DAT_0010b230 = '\\0';\n            unsigned_long = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            print_error_with_formatted_message_00106400(unsigned_long,stack_var2);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 == 0) {\n          if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n          uint_var = (*(uint *)(pointer_variable1 + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(pointer_variable1 + 3) & 0x800082) == 0) && (pointer_variable1[4] != 0x10c2a8)) &&\n           ((*(byte *)(pointer_variable1[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c != 0) {\n          if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nprocess_lto_slim_object_00104d5b_00104d5b:\n          if ((pointer_variable1[4] != 0x10c2a8) && (pointer_variable1[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(pointer_variable1 + 3) & 4) != 0);\n      if (DAT_0010b7f8 != 0) goto process_lto_slim_object_00104d5b_00104d5b;\nLAB_00104a53:\n      register_r9 = (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 == 0) {\n        char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n        if (char_var != '\\0') {\n          process_lto_object_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (pointer_variable1[4] == 0x10c2a8);\nLAB_00104cba:\n    char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n    if (char_var != '\\0') {\n      process_lto_object_00102c19();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  pointer_variable7 = (undefined8 *)((long)register_r12 * (long)register_r14);\n  register_r12 = (undefined8 *)((long)stack_var3 + (long)pointer_variable7);\n  register_bx = stack_var3;\n  pointer_variable4 = register_bp;\n  if (stack_var3 < register_r12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)bool_variable;\n  register_r13 = stack_var3;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_lto_object_00102c19",
            "entrypoint": "0x00102c19",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c19": "process_lto_object_00102c19",
                "__ptr": "undefined8_pointer4",
                "bVar16": "bool_variable",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "in_R8": "register_r8",
                "in_R9": "register_r9",
                "in_stack_00000008": "stack_var1",
                "in_stack_00000010": "stack_var2",
                "in_stack_00000018": "stack_var3",
                "in_stack_00000038": "stack_var4",
                "in_stack_00000040": "stack_var5",
                "in_stack_00000048": "stack_var6",
                "lVar7": "long_var",
                "lVar9": "long_var2",
                "pcVar1": "char_pointer",
                "pcVar2": "function_pointer",
                "puVar10": "pointer_variable2",
                "puVar11": "undefined8_pointer6",
                "puVar12": "pointer_variable4",
                "puVar13": "pointer_variable5",
                "puVar14": "pointer_variable6",
                "puVar15": "pointer_variable7",
                "puVar8": "pointer_variable1",
                "uVar18": "ulong_var2",
                "uVar5": "uint_var",
                "uVar6": "unsigned_long",
                "unaff_R12": "register_r12",
                "unaff_R13": "register_r13",
                "unaff_R14": "register_r14",
                "unaff_R15": "register_r15",
                "unaff_RBP": "register_bp",
                "unaff_RBX": "register_bx",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f19": {
            "additional_data": {
                "DAT_0010b7a8": {
                    "class_size": 1,
                    "section_size_flag": 1,
                    "value_class_size": 1
                },
                "DAT_0010b7e8": {
                    "undefined_symbols": 1,
                    "undefined_symbols_exist": 1,
                    "undefined_symbols_flag": 1
                },
                "FUN_00102f19": {
                    "print_symbol_info": 5,
                    "print_symbol_information": 5,
                    "print_symbol_list": 1,
                    "print_symbol_table": 2,
                    "print_symbol_table_info": 1,
                    "print_symbols": 15,
                    "print_symbols_info": 1,
                    "print_undefined_symbols": 1
                },
                "dcgettext": {
                    "get_formatted_text": 1,
                    "get_translated_message": 1,
                    "get_translated_string": 3,
                    "get_translated_text": 1,
                    "translate": 1,
                    "translate_string": 1
                },
                "param_1": {
                    "file": 1,
                    "file_name": 6,
                    "file_path": 2,
                    "filename": 11,
                    "input_file_name": 1,
                    "source_file": 2,
                    "source_file_path": 1,
                    "symbol": 1,
                    "symbol_file": 3,
                    "symbol_file_path": 1,
                    "symbol_filename": 1,
                    "symbol_source_file": 1
                },
                "pcVar1": {
                    "format_string": 18,
                    "format_string1": 1,
                    "header": 1,
                    "header_message": 2,
                    "message": 6,
                    "print_format": 1,
                    "symbols_header": 1,
                    "text": 1
                },
                "printf": {
                    "print_formatted": 1,
                    "print_formatted_string": 2
                }
            },
            "called": [
                "printf",
                "dcgettext"
            ],
            "calling": [],
            "code": "\nvoid print_undefined_symbols_00102f19(undefined8 filename)\n\n{\n  char *format_string;\n  \n  format_string = \"\\n\\nUndefined symbols from %s:\\n\\n\";\n  if (DAT_0010b7e8 == 0) {\n    format_string = \"\\n\\nSymbols from %s:\\n\\n\";\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string,filename);\n  format_string = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 != 0x20) {\n    format_string = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string);\n  return;\n}\n\n",
            "current_name": "print_undefined_symbols_00102f19",
            "entrypoint": "0x00102f19",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f19": "print_undefined_symbols_00102f19",
                "dcgettext": "get_translated_string",
                "param_1": "filename",
                "pcVar1": "format_string",
                "printf": "print_formatted_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f7b": {
            "additional_data": {
                "DAT_0010b818": {
                    "another_flag": 3,
                    "condition2": 3,
                    "condition_2": 4,
                    "flag_2": 2,
                    "flag_variable": 1,
                    "is_another_condition_true": 1,
                    "is_condition2_false": 1,
                    "is_condition_2_false": 1,
                    "is_disabled": 2,
                    "printing_flag": 1
                },
                "FUN_00102f7b": {
                    "print_if_allowed": 1,
                    "print_if_condition_met": 11,
                    "print_if_conditional": 1,
                    "print_if_configured": 1,
                    "print_if_data_available": 1,
                    "print_if_enabled": 5,
                    "print_if_flag_set": 4,
                    "print_if_not_disabled": 1,
                    "print_message": 1,
                    "print_message_if_condition_met": 2,
                    "print_message_if_flag_set": 1,
                    "print_message_if_ready": 1,
                    "print_message_if_valid": 1
                },
                "_DAT_0010b7c4": {
                    "check_variable": 1,
                    "condition1": 3,
                    "condition_1": 4,
                    "flag": 3,
                    "flag_1": 2,
                    "is_condition1_true": 1,
                    "is_condition_1_true": 1,
                    "is_enabled": 2,
                    "is_printing_enabled": 1,
                    "ready_flag": 1
                },
                "param_1": {
                    "message": 31
                },
                "param_2": {
                    "data": 1,
                    "data_available_flag": 1,
                    "new_parameter_name_2": 1
                },
                "param_n": {
                    "parameter_n": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [],
            "code": "\n\n\nvoid print_message_if_condition_met_00102f7b(undefined8 message)\n\n{\n  if ((_DAT_0010b7c4 != 0) && (DAT_0010b818 == 0)) {\n    printf(\"%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_condition_met_00102f7b",
            "entrypoint": "0x00102f7b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f7b": "print_message_if_condition_met_00102f7b",
                "param_1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f9f": {
            "additional_data": {
                "FUN_00102f9f": {
                    "execute_and_exit": 1,
                    "print_error_and_exit": 26,
                    "print_error_message_and_exit": 3,
                    "print_error_message_and_return": 1
                },
                "auVar1": {
                    "error_info": 2,
                    "output_data": 1,
                    "result": 8,
                    "ret_val": 1,
                    "return_value": 11
                },
                "unaff_retaddr": {
                    "return_address": 23
                }
            },
            "called": [
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00104fa0"
            ],
            "code": "\nundefined  [16] print_error_message_and_exit_00102f9f(void)\n\n{\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  print_error_message_and_exit_00102f9f_00106530(*DAT_0010b780);\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = 0xffffffff;\n  return return_value;\n}\n\n",
            "current_name": "print_error_message_and_exit_00102f9f",
            "entrypoint": "0x00102f9f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f9f": "print_error_message_and_exit_00102f9f",
                "auVar1": "return_value",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fc3": {
            "additional_data": {
                "FUN_00102fc3": {
                    "check_binary_compatibility": 4,
                    "check_binary_compiled_with_gcc": 1,
                    "check_binary_file": 1,
                    "check_compatibility": 1,
                    "check_compilation": 1,
                    "check_compiled_binary": 1,
                    "check_compiled_code": 3,
                    "check_compiled_files": 1,
                    "check_compiled_status": 1,
                    "check_file_compatibility": 2,
                    "check_file_extension": 1,
                    "validate_and_compare_paths": 1,
                    "validate_binary": 3,
                    "validate_binary_compatibility": 1,
                    "validate_binary_files": 2,
                    "validate_compiled_code": 1,
                    "validate_compiler_and_version": 1,
                    "validate_compiler_version": 1,
                    "validate_executable": 1,
                    "validate_file_extension": 3
                },
                "__s": {
                    "binary1": 3,
                    "binary_string1": 1,
                    "code1": 1,
                    "compilation_flags1": 1,
                    "compiler_info_path1": 1,
                    "extension_1": 1,
                    "file1": 1,
                    "file1_contents": 1,
                    "file1_string": 1,
                    "file_content_1": 1,
                    "file_contents_1": 1,
                    "file_extension_1": 1,
                    "file_path_extension": 1,
                    "first_file_path": 1,
                    "path1_str": 1,
                    "section_name_executable": 1,
                    "source": 1,
                    "str1": 4,
                    "string1": 6,
                    "string_a": 1
                },
                "__s_00": {
                    "binary2": 3,
                    "binary_string2": 1,
                    "code2": 1,
                    "compilation_flags2": 1,
                    "compiler_info_path2": 1,
                    "extension_2": 1,
                    "file2": 1,
                    "file2_contents": 1,
                    "file2_string": 1,
                    "file_content_2": 1,
                    "file_contents_2": 1,
                    "file_extension_2": 2,
                    "path2_str": 1,
                    "second_file_path": 1,
                    "section_name_section": 1,
                    "str2": 4,
                    "string2": 6,
                    "string_b": 1,
                    "target": 1
                },
                "bVar14": {
                    "comparison_result": 4,
                    "is_compatible": 3,
                    "is_different": 1,
                    "is_different_version": 1,
                    "is_equal": 2,
                    "is_greater": 2,
                    "is_invalid": 1,
                    "is_less": 1,
                    "is_match": 6,
                    "is_matching": 1,
                    "is_smaller": 1,
                    "is_true": 1,
                    "path_comparison_result": 1
                },
                "cVar1": {
                    "last_char": 5,
                    "last_char_string1": 1,
                    "last_character": 1
                },
                "lVar4": {
                    "binary_info1": 1,
                    "code1_len": 1,
                    "compiler_info1": 1,
                    "error_code1": 2,
                    "executable_header_address": 1,
                    "file1_header": 1,
                    "file1_length": 1,
                    "file1_pointer": 1,
                    "file1_ptr": 1,
                    "file_info1": 2,
                    "file_info_1": 5,
                    "path1_info": 1,
                    "ptr1": 1,
                    "result1": 7,
                    "result_a": 1,
                    "source_data": 1
                },
                "lVar5": {
                    "binary_info2": 1,
                    "code2_len": 1,
                    "compiler_info2": 1,
                    "error_code2": 2,
                    "file2_header": 1,
                    "file2_length": 1,
                    "file2_pointer": 1,
                    "file2_ptr": 1,
                    "file_info2": 2,
                    "file_info_2": 5,
                    "path2_info": 1,
                    "ptr2": 1,
                    "result2": 7,
                    "result_b": 1,
                    "section_header_address": 1,
                    "target_data": 1
                },
                "param_1": {
                    "arg1": 3,
                    "binary_file1": 1,
                    "binary_name": 1,
                    "binary_path1": 1,
                    "compiler_info": 1,
                    "data_ptr": 1,
                    "error_code": 1,
                    "error_message": 4,
                    "executable_header": 1,
                    "file1": 3,
                    "file_1": 1,
                    "file_path": 2,
                    "file_path1": 1,
                    "file_path_1": 2,
                    "first_param": 1,
                    "message": 2,
                    "message1": 1,
                    "param1": 2,
                    "param_ptr": 1,
                    "path1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "binary": 1,
                    "binary_file2": 1,
                    "binary_path": 1,
                    "binary_path2": 1,
                    "code_to_check": 1,
                    "comp_info": 1,
                    "compiled_file": 1,
                    "file2": 3,
                    "file_2": 1,
                    "file_extension": 1,
                    "file_path": 2,
                    "file_path2": 1,
                    "file_path_2": 2,
                    "flag_ptr": 1,
                    "flags": 1,
                    "message2": 1,
                    "other_parameter": 1,
                    "param2": 2,
                    "param_ptr": 1,
                    "path": 1,
                    "path2": 1,
                    "second_param": 1,
                    "section_header": 1
                },
                "pcVar8": {
                    "compilation_marker1": 1,
                    "compilation_type1": 1,
                    "compiler_info_path1_check": 1,
                    "found_pattern_a": 1,
                    "found_str1": 1,
                    "gnu_compiled_str": 2,
                    "match1": 2,
                    "match_str": 1,
                    "ptr1": 3,
                    "search_result1": 1,
                    "search_result_1": 1,
                    "source_substring": 1,
                    "str1_substring": 1,
                    "str_1": 1,
                    "str_match": 1,
                    "str_ptr1": 1,
                    "string1_match": 1,
                    "string_ptr1": 1,
                    "strstr_gnu_string1": 1,
                    "strstr_result_1": 1,
                    "substr1": 1,
                    "substring1": 4
                },
                "pcVar9": {
                    "compilation_marker2": 1,
                    "compilation_type2": 1,
                    "compiler_info_path2_check": 1,
                    "found_pattern_b": 1,
                    "found_str2": 1,
                    "gcc2_compiled_str": 2,
                    "match2": 2,
                    "match_str2": 1,
                    "ptr2": 3,
                    "search_result2": 1,
                    "search_result_2": 1,
                    "str2_substring": 1,
                    "str_2": 1,
                    "str_match_section": 1,
                    "str_ptr2": 1,
                    "string2_match": 1,
                    "string_ptr2": 1,
                    "strstr_gcc2_string1": 1,
                    "strstr_result_2": 1,
                    "substr2": 1,
                    "substring2": 4,
                    "target_substring": 1
                },
                "sVar6": {
                    "code1_str_len": 1,
                    "file1_length_str": 1,
                    "file1_size": 1,
                    "file1_string_length": 1,
                    "file_1_length": 1,
                    "file_length_1": 1,
                    "first_file_path_size": 1,
                    "len1": 3,
                    "len_string1": 1,
                    "length1": 5,
                    "length_1": 2,
                    "length_a": 1,
                    "path1_length": 1,
                    "path1_str_length": 1,
                    "section_name_executable_length": 1,
                    "size1": 1,
                    "source_len": 1,
                    "str1_length": 1,
                    "str_length1": 1,
                    "string1_len": 1,
                    "string1_length": 1,
                    "strlen_string1": 1
                },
                "sVar7": {
                    "code2_str_len": 1,
                    "file2_length_str": 1,
                    "file2_size": 1,
                    "file2_string_length": 1,
                    "file_2_length": 1,
                    "file_length_2": 1,
                    "len2": 3,
                    "len_string2": 1,
                    "length2": 5,
                    "length_2": 2,
                    "length_b": 1,
                    "path2_length": 1,
                    "path2_str_length": 1,
                    "second_file_path_size": 1,
                    "section_name_section_length": 1,
                    "size2": 1,
                    "str2_length": 1,
                    "str_length2": 1,
                    "string2_len": 1,
                    "string2_length": 1,
                    "strlen_string2": 1,
                    "target_len": 1
                },
                "uVar10": {
                    "address_1": 1,
                    "binary1_address": 1,
                    "comp_val1": 1,
                    "compare_result": 1,
                    "compare_result1": 1,
                    "comparison_result": 7,
                    "file_size2": 1,
                    "offset1": 2,
                    "offset_of_string1": 1,
                    "path1_comparison_value": 1,
                    "path_comparison_result": 1,
                    "result": 6,
                    "result1": 1,
                    "section_address_executable": 1,
                    "starting_address_1": 1,
                    "string1_pointer": 1,
                    "string_comparison_result": 2
                },
                "uVar11": {
                    "address2": 1,
                    "address_2": 1,
                    "base1": 1,
                    "binary2_address": 1,
                    "code2_offset": 1,
                    "comp_p2": 1,
                    "compare_result2": 1,
                    "end_address1": 1,
                    "end_address2": 1,
                    "file1_end": 1,
                    "file2_address": 1,
                    "file2_offset": 2,
                    "file_offset_2": 1,
                    "modified_result1": 1,
                    "offset1": 1,
                    "offset2": 1,
                    "offset_of_string2": 1,
                    "path2_address": 1,
                    "path2_comparison_value": 1,
                    "result2": 1,
                    "second_file_offset": 1,
                    "section_end_section": 1,
                    "size2": 1,
                    "size_ptr2": 1,
                    "source_offset": 1,
                    "starting_address_2": 1,
                    "string2_pointer": 1
                },
                "uVar12": {
                    "address1": 2,
                    "base2": 1,
                    "binary1_end_address": 1,
                    "code1_offset": 1,
                    "comp_p1": 1,
                    "end_address1": 1,
                    "end_address2": 1,
                    "end_address_1": 2,
                    "end_of_string1": 1,
                    "end_position1": 1,
                    "file1_address": 1,
                    "file1_offset": 2,
                    "file2_end": 1,
                    "file_offset_1": 1,
                    "first_file_offset": 1,
                    "modified_result2": 1,
                    "offset2": 1,
                    "path1_address": 1,
                    "path1_offset": 1,
                    "ptr1": 1,
                    "section_end_executable": 1,
                    "size1": 1,
                    "start1": 1,
                    "string1_end_pointer": 1,
                    "target_offset": 1
                },
                "uVar13": {
                    "compiler_info_value": 1,
                    "compiler_version": 2,
                    "config": 1,
                    "config_info": 1,
                    "dat_0010b780": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "default_value": 1,
                    "dummy_data": 1,
                    "error_code": 2,
                    "error_message": 2,
                    "error_ptr": 1,
                    "global_data": 1,
                    "global_variable": 2,
                    "initial_value": 1,
                    "pointer": 1,
                    "print_error_message": 1,
                    "program_version": 1,
                    "ptr2": 1,
                    "start2": 1,
                    "user_data": 1
                },
                "uVar2": {
                    "binary_address": 1,
                    "binary_length1": 1,
                    "binary_offset1": 1,
                    "binary_size1": 1,
                    "checksum_1": 1,
                    "code_size1": 1,
                    "comp_val2": 1,
                    "file2": 1,
                    "file2_content_size": 1,
                    "file_extension_length_1": 1,
                    "file_size1": 2,
                    "length1": 1,
                    "length_of_string1": 1,
                    "length_string1": 1,
                    "offset2": 1,
                    "path1_length": 1,
                    "result": 1,
                    "second_file_path_size": 1,
                    "section_address_section": 1,
                    "size_2": 1,
                    "size_ptr1": 1,
                    "source_length": 1,
                    "value_b": 1
                },
                "uVar3": {
                    "check_flag": 1,
                    "file_extension_length_2": 1,
                    "flag": 16,
                    "flags": 6,
                    "length_string2": 1,
                    "path2_length": 1,
                    "path_check_value": 1,
                    "permission_flag": 1
                },
                "unaff_R13": {
                    "address": 1,
                    "address2": 1,
                    "binary2_end_address": 1,
                    "binary_info": 1,
                    "binary_path2_ptr": 1,
                    "data": 1,
                    "data_address": 1,
                    "error_code": 1,
                    "error_code_ptr": 1,
                    "file1_struct": 1,
                    "file2_offset": 1,
                    "header": 1,
                    "offset_of_message2": 1,
                    "path2_offset": 1,
                    "position": 1,
                    "ptr3": 1,
                    "result": 3,
                    "second_file_info": 1,
                    "target": 1,
                    "unaff_variable": 1,
                    "unaffected_r13": 1
                }
            },
            "called": [
                "FUN_00106530"
            ],
            "calling": [
                "FUN_00105050"
            ],
            "code": "\nulong validate_file_extension_00102fc3(undefined8 error_message,undefined8 file2)\n\n{\n  char last_char;\n  ulong file_size1;\n  char *string1;\n  char *string2;\n  uint flag;\n  long result1;\n  long result2;\n  size_t length1;\n  size_t length2;\n  char *substring1;\n  char *substring2;\n  ulong comparison_result;\n  ulong file2_offset;\n  ulong end_address_1;\n  undefined8 global_variable;\n  long result;\n  bool is_match;\n  \n  global_variable = *DAT_0010b780;\n  print_error_message_and_exit_00106530();\n  result1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,global_variable,DAT_0010b770);\n  result2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file2,DAT_0010b768);\n  if ((result1 == 0) || (result = result2, result2 == 0)) {\n    result2 = print_error_message_and_exit_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(result1 + 0x20) == 0x10c2a8) || (*(long *)(result2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  comparison_result = *(ulong *)(*(long *)(result1 + 0x20) + 0x30);\n  file_size1 = *(ulong *)(*(long *)(result2 + 0x20) + 0x30);\n  end_address_1 = *(long *)(result1 + 0x10) + comparison_result;\n  file2_offset = *(long *)(result + 0x10) + file_size1;\n  is_match = end_address_1 < file2_offset;\n  if ((end_address_1 != file2_offset) || (is_match = comparison_result < file_size1, comparison_result != file_size1)) {\n    return (ulong)(-(uint)is_match | 1);\n  }\n  string1 = *(char **)(result1 + 8);\n  string2 = *(char **)(result + 8);\n  length1 = strlen(string1);\n  length2 = strlen(string2);\n  substring1 = strstr(string1,\"gnu_compiled\");\n  if (substring1 == (char *)0x0) {\n    substring2 = strstr(string1,\"gcc2_compiled\");\n    substring1 = strstr(string2,\"gnu_compiled\");\n    if ((substring1 == (char *)0x0) && (substring1 = strstr(string2,\"gcc2_compiled\"), substring1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (substring2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    substring1 = strstr(string2,\"gnu_compiled\");\n    if (substring1 == (char *)0x0) {\n      substring2 = strstr(string2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (substring2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(result + 0x18) & 0x4000;\n  if ((*(byte *)(result1 + 0x19) & 0x40) == 0) {\n    if ((length1 < 3) || (string1[length1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((length2 < 3) || (string2[length2 - 2] != '.')) goto LAB_00103202;\n      is_match = false;\n      goto LAB_001031e7;\n    }\n    last_char = string1[length1 - 1];\n    is_match = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((length2 < 3) || (string2[length2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (length2 < 3) {\n      return 0xffffffff;\n    }\n    if (string2[length2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_match = true;\nLAB_001031e7:\n    if ((string2[length2 - 1] != 'o') && (string2[length2 - 1] != 'a')) {\n      if (is_match) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_match) {\n    return 1;\n  }\nLAB_00103202:\n  comparison_result = compare_strings_00104fa0(global_variable,file2);\n  return comparison_result;\n}\n\n",
            "current_name": "validate_file_extension_00102fc3",
            "entrypoint": "0x00102fc3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fc3": "validate_file_extension_00102fc3",
                "__s": "string1",
                "__s_00": "string2",
                "bVar14": "is_match",
                "cVar1": "last_char",
                "lVar4": "result1",
                "lVar5": "result2",
                "param_1": "error_message",
                "param_2": "file2",
                "pcVar8": "substring1",
                "pcVar9": "substring2",
                "sVar6": "length1",
                "sVar7": "length2",
                "uVar10": "comparison_result",
                "uVar11": "file2_offset",
                "uVar12": "end_address_1",
                "uVar13": "global_variable",
                "uVar2": "file_size1",
                "uVar3": "flag",
                "unaff_R13": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd2": {
            "additional_data": {
                "FUN_00102fd2": {
                    "check_binary_compatibility": 2,
                    "check_binary_files": 1,
                    "check_binary_versions": 2,
                    "check_compatibility": 2,
                    "check_compile_status": 1,
                    "check_compiled_status": 3,
                    "check_compiled_versions": 4,
                    "check_compiler": 1,
                    "check_compiler_version": 2,
                    "check_compiler_versions": 2,
                    "check_file_compile_status": 1,
                    "check_file_compiled_correctly": 1,
                    "check_file_extension": 1,
                    "check_file_type": 1,
                    "check_file_versions": 1,
                    "validate_binary_compatibility": 1,
                    "validate_binary_files": 3,
                    "validate_compiled_files": 1
                },
                "__s": {
                    "binary1_string": 1,
                    "contents_1": 1,
                    "file1_content": 1,
                    "file1_contents": 1,
                    "file1_string": 1,
                    "file_content1": 1,
                    "file_content_1": 2,
                    "file_contents_1": 3,
                    "file_extension_1": 2,
                    "file_name1": 2,
                    "file_string_1": 1,
                    "input_file_contents": 1,
                    "source_path_1": 1,
                    "str1": 1,
                    "str_1": 1,
                    "string1": 4,
                    "string_1": 5,
                    "version_str1": 1
                },
                "__s_00": {
                    "binary2_string": 1,
                    "contents_2": 1,
                    "file2_content": 1,
                    "file2_contents": 1,
                    "file2_string": 1,
                    "file_content2": 1,
                    "file_content_2": 2,
                    "file_contents_2": 3,
                    "file_extension_2": 2,
                    "file_name2": 2,
                    "file_string_2": 1,
                    "output_file_contents": 1,
                    "source_path_2": 1,
                    "str2": 1,
                    "str_2": 1,
                    "string2": 4,
                    "string_2": 5,
                    "version_str2": 1
                },
                "_lVar4": {
                    "file_info_1": 1
                },
                "_lVar5": {
                    "file_info_2": 1
                },
                "bVar13": {
                    "compare_result": 2,
                    "comparison_result": 3,
                    "condition_result": 1,
                    "files_not_identical": 1,
                    "is_binary_compatible": 1,
                    "is_compatible": 2,
                    "is_different": 1,
                    "is_equal": 5,
                    "is_file_extension_valid": 1,
                    "is_flag_set": 1,
                    "is_greater": 1,
                    "is_input_file_directory": 1,
                    "is_less": 1,
                    "is_less_than": 1,
                    "is_match": 3,
                    "is_valid": 1,
                    "should_return_error": 1
                },
                "cVar1": {
                    "compiler_extension": 1,
                    "last_char": 9,
                    "last_char_1": 1,
                    "last_char_version_str1": 1,
                    "last_character": 3
                },
                "lVar4": {
                    "file1_info": 2,
                    "file1_length": 2,
                    "file1_ptr": 1,
                    "file_1": 2,
                    "file_info_1": 7,
                    "file_result1": 1,
                    "result1": 2,
                    "result_1": 2,
                    "status_1": 1
                },
                "lVar5": {
                    "file2_info": 2,
                    "file2_length": 2,
                    "file2_ptr": 1,
                    "file_2": 2,
                    "file_info_2": 7,
                    "file_result2": 1,
                    "result2": 2,
                    "result_2": 2,
                    "status_2": 1
                },
                "param_1": {
                    "argument1": 1,
                    "binary1": 1,
                    "binary_file_path1": 1,
                    "binary_path1": 1,
                    "binary_path_1": 2,
                    "file1": 6,
                    "file_1": 1,
                    "file_path1": 1,
                    "file_path_1": 12,
                    "input_file_1": 1,
                    "input_file_path": 1,
                    "module_path_1": 1,
                    "path1": 1,
                    "pointer_1": 1
                },
                "param_2": {
                    "argument2": 1,
                    "binary2": 1,
                    "binary_file_path2": 1,
                    "binary_path2": 1,
                    "binary_path_2": 2,
                    "file2": 6,
                    "file_2": 1,
                    "file_path2": 1,
                    "file_path_2": 12,
                    "input_file_2": 1,
                    "module_path_2": 1,
                    "output_file_path": 1,
                    "path2": 1,
                    "pointer_2": 1
                },
                "pcVar8": {
                    "compilation_flag1": 1,
                    "file1_compiler": 1,
                    "file1_substring": 1,
                    "file_match_1": 1,
                    "found_str": 1,
                    "found_string": 1,
                    "gnu_string": 1,
                    "input_file_flag": 1,
                    "match_string1": 1,
                    "pattern1": 1,
                    "pointer_1": 1,
                    "ptr1": 1,
                    "ptr_strstr1": 1,
                    "search_result_1": 3,
                    "str_1": 1,
                    "str_found_1": 1,
                    "str_gnu_compiled1": 1,
                    "str_ptr_1": 1,
                    "string1_match": 1,
                    "sub_string_1": 1,
                    "substring": 1,
                    "substring_1": 3,
                    "substring_occurrence": 1,
                    "substring_result_1": 1
                },
                "pcVar9": {
                    "compilation_flag2": 1,
                    "file2_compiler": 1,
                    "file2_substring": 1,
                    "file_match_2": 1,
                    "found_str_2": 1,
                    "found_string_2": 1,
                    "gcc_string": 1,
                    "match_string2": 1,
                    "output_file_flag": 1,
                    "pattern2": 1,
                    "pointer_2": 1,
                    "ptr2": 1,
                    "ptr_strstr2": 1,
                    "search_result_2": 3,
                    "str_2": 1,
                    "str_found_2": 1,
                    "str_gcc2_compiled1": 1,
                    "str_ptr_2": 1,
                    "string2_match": 1,
                    "sub_string_2": 1,
                    "substring2": 1,
                    "substring_2": 3,
                    "substring_occurrence_2": 1,
                    "substring_result_2": 1
                },
                "sVar6": {
                    "content_length1": 1,
                    "extension_length_1": 1,
                    "file1_content_length": 1,
                    "file1_length": 1,
                    "file1_name_len": 1,
                    "file1_string_length": 1,
                    "file_len_1": 1,
                    "file_length_1": 2,
                    "file_name1_length": 2,
                    "file_path_1_length": 1,
                    "file_string_len_1": 1,
                    "input_file_length": 1,
                    "len_binary1_string": 1,
                    "len_str_1": 1,
                    "len_version_str1": 1,
                    "length1": 1,
                    "length_1": 5,
                    "str_length_1": 1,
                    "string1_length": 1,
                    "string_1_length": 1
                },
                "sVar7": {
                    "content_length2": 1,
                    "extension_length_2": 1,
                    "file1_string_length": 1,
                    "file2_content_length": 1,
                    "file2_length": 1,
                    "file2_name_len": 1,
                    "file_len_2": 1,
                    "file_length_2": 2,
                    "file_name2_length": 2,
                    "file_path_2_length": 1,
                    "file_string_len_2": 1,
                    "len_binary2_string": 1,
                    "len_str_2": 1,
                    "len_version_str2": 1,
                    "length2": 1,
                    "length_2": 5,
                    "output_file_length": 1,
                    "str_length_2": 1,
                    "string2_length": 1,
                    "string_2_length": 1
                },
                "uVar10": {
                    "comp_result": 1,
                    "compare_result": 1,
                    "comparison_result": 5,
                    "file1_timestamp": 1,
                    "file_type_1": 1,
                    "offset_1": 3,
                    "result": 8,
                    "result_u_var10": 1,
                    "start_address_1": 1,
                    "string_comparison_result": 7,
                    "value_1": 1
                },
                "uVar11": {
                    "address_2": 3,
                    "base_ptr2": 1,
                    "binary_value2": 1,
                    "data_end_2": 1,
                    "data_ptr_2": 1,
                    "end_addr_2": 1,
                    "end_address_2": 1,
                    "end_offset_2": 1,
                    "file2_address": 3,
                    "file2_end_address": 1,
                    "file2_offset": 1,
                    "file2_timestamp": 1,
                    "file_end_2": 1,
                    "file_end_offset_2": 1,
                    "file_path_1_offset": 1,
                    "file_ptr_len_2": 1,
                    "file_size_2": 1,
                    "file_size_aligned2": 1,
                    "input_file_data_address": 1,
                    "offset_2": 1,
                    "size1": 1,
                    "source_end_2": 1,
                    "string2_addr": 1,
                    "string_offset2": 1,
                    "temp_var_1": 1,
                    "total_size1": 1,
                    "var_17": 1
                },
                "uVar12": {
                    "address_1": 2,
                    "base_ptr1": 1,
                    "binary_value1": 1,
                    "data_end_1": 1,
                    "data_ptr_1": 1,
                    "end_addr_1": 1,
                    "end_address_1": 1,
                    "end_offset_1": 1,
                    "file1_address": 3,
                    "file1_end_address": 1,
                    "file1_offset": 1,
                    "file1_size": 1,
                    "file_end_1": 1,
                    "file_end_offset_1": 1,
                    "file_path_2_offset": 1,
                    "file_ptr_len_1": 1,
                    "file_size_1": 1,
                    "file_size_aligned1": 1,
                    "offset_1": 1,
                    "output_file_data_address": 1,
                    "result_address_1": 1,
                    "size2": 1,
                    "source_end_1": 1,
                    "string1_addr": 1,
                    "string_offset1": 1,
                    "temp_var_2": 1,
                    "total_size2": 1,
                    "var_18": 1
                },
                "uVar2": {
                    "address_in_mem": 1,
                    "compared_binary_value1": 1,
                    "data_offset_2": 1,
                    "file2_length": 1,
                    "file_size1": 1,
                    "file_size_2": 1,
                    "file_type_2": 1,
                    "length_2": 1,
                    "offset_2": 3,
                    "result_copy": 1,
                    "source_size_1": 1,
                    "string_1_len": 1,
                    "value_2": 1,
                    "version2": 1
                },
                "uVar3": {
                    "binary2_flag": 1,
                    "compilation_flag3": 1,
                    "compiler_flag": 1,
                    "file1_attributes": 1,
                    "file_attr": 1,
                    "file_mask_flag": 1,
                    "flag": 9,
                    "flag_u_var3": 1,
                    "flags": 6,
                    "is_gcc2_compiled": 1,
                    "is_static_library": 1,
                    "string_2_len": 1
                },
                "unaff_R13": {
                    "address_offset": 1,
                    "binary2_ptr": 1,
                    "error": 1,
                    "error_code": 4,
                    "file1": 1,
                    "file2_info": 2,
                    "file2_length_copy": 1,
                    "file2_pointer": 1,
                    "file2_size": 1,
                    "file_data_2": 1,
                    "file_info": 1,
                    "file_info2": 1,
                    "file_info_2_sub": 1,
                    "file_info_copy": 1,
                    "file_path_2_ptr": 1,
                    "header_2": 1,
                    "input_file_data_address_address": 1,
                    "l_var5": 1,
                    "pointer": 1,
                    "print_error": 1,
                    "result": 1,
                    "result_2": 1,
                    "result_address_2": 1,
                    "temp_var": 1,
                    "unaff_val": 1
                }
            },
            "called": [
                "strstr",
                "FUN_00104fa0",
                "FUN_00106530",
                "abort",
                "strlen"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nulong check_file_compile_status_00102fd2(undefined8 file_path_1,undefined8 file_path_2)\n\n{\n  char last_char;\n  ulong offset_2;\n  char *string_1;\n  char *string_2;\n  uint flag;\n  long file_info_1;\n  long file_info_2;\n  size_t length_1;\n  size_t length_2;\n  char *search_result_1;\n  char *search_result_2;\n  ulong result;\n  ulong address_2;\n  ulong file1_address;\n  long error_code;\n  bool is_equal;\n  \n  file_info_1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file_path_1,DAT_0010b770);\n  file_info_2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,file_path_2,DAT_0010b768);\n  if ((file_info_1 == 0) || (error_code = file_info_2, file_info_2 == 0)) {\n    file_info_2 = print_error_message_and_exit_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(file_info_1 + 0x20) == 0x10c2a8) || (*(long *)(file_info_2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  result = *(ulong *)(*(long *)(file_info_1 + 0x20) + 0x30);\n  offset_2 = *(ulong *)(*(long *)(file_info_2 + 0x20) + 0x30);\n  file1_address = *(long *)(file_info_1 + 0x10) + result;\n  address_2 = *(long *)(error_code + 0x10) + offset_2;\n  is_equal = file1_address < address_2;\n  if ((file1_address != address_2) || (is_equal = result < offset_2, result != offset_2)) {\n    return (ulong)(-(uint)is_equal | 1);\n  }\n  string_1 = *(char **)(file_info_1 + 8);\n  string_2 = *(char **)(error_code + 8);\n  length_1 = strlen(string_1);\n  length_2 = strlen(string_2);\n  search_result_1 = strstr(string_1,\"gnu_compiled\");\n  if (search_result_1 == (char *)0x0) {\n    search_result_2 = strstr(string_1,\"gcc2_compiled\");\n    search_result_1 = strstr(string_2,\"gnu_compiled\");\n    if ((search_result_1 == (char *)0x0) && (search_result_1 = strstr(string_2,\"gcc2_compiled\"), search_result_1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (search_result_2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    search_result_1 = strstr(string_2,\"gnu_compiled\");\n    if (search_result_1 == (char *)0x0) {\n      search_result_2 = strstr(string_2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (search_result_2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(error_code + 0x18) & 0x4000;\n  if ((*(byte *)(file_info_1 + 0x19) & 0x40) == 0) {\n    if ((length_1 < 3) || (string_1[length_1 - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((length_2 < 3) || (string_2[length_2 - 2] != '.')) goto LAB_00103202;\n      is_equal = false;\n      goto LAB_001031e7;\n    }\n    last_char = string_1[length_1 - 1];\n    is_equal = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((length_2 < 3) || (string_2[length_2 - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (length_2 < 3) {\n      return 0xffffffff;\n    }\n    if (string_2[length_2 - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_equal = true;\nLAB_001031e7:\n    if ((string_2[length_2 - 1] != 'o') && (string_2[length_2 - 1] != 'a')) {\n      if (is_equal) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_equal) {\n    return 1;\n  }\nLAB_00103202:\n  result = compare_strings_00104fa0(file_path_1,file_path_2);\n  return result;\n}\n\n",
            "current_name": "check_file_compile_status_00102fd2",
            "entrypoint": "0x00102fd2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd2": "check_file_compile_status_00102fd2",
                "__s": "string_1",
                "__s_00": "string_2",
                "bVar13": "is_equal",
                "cVar1": "last_char",
                "lVar4": "file_info_1",
                "lVar5": "file_info_2",
                "param_1": "file_path_1",
                "param_2": "file_path_2",
                "pcVar8": "search_result_1",
                "pcVar9": "search_result_2",
                "sVar6": "length_1",
                "sVar7": "length_2",
                "uVar10": "result",
                "uVar11": "address_2",
                "uVar12": "file1_address",
                "uVar2": "offset_2",
                "uVar3": "flag",
                "unaff_R13": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103238": {
            "additional_data": {
                "FUN_00103238": {
                    "extract_and_print_matching_strings": 1,
                    "find_and_print_matches": 1,
                    "find_and_print_matching_strings": 1,
                    "find_and_print_section": 1,
                    "find_matching_sections": 2,
                    "find_matching_strings": 3,
                    "load_and_search_sections": 1,
                    "process_data": 7,
                    "process_sections": 5,
                    "reallocate_and_print_sections": 1,
                    "reverse_and_print_sections": 2,
                    "reverse_sections": 2,
                    "section_processing": 1
                },
                "__ptr": {
                    "current_ptr": 1,
                    "current_section": 1,
                    "inner_section_data_ptr": 1,
                    "pointer": 1,
                    "ptr": 10,
                    "ptr1": 1,
                    "ptr_1": 1,
                    "section_content_pointer": 1,
                    "section_pointer": 10,
                    "section_ptr": 3,
                    "void_ptr": 1
                },
                "__ptr1": {
                    "ptr1": 1
                },
                "__ptr2": {
                    "ptr2": 1
                },
                "__ptr3": {
                    "ptr3": 1
                },
                "__s1": {
                    "current_section": 1,
                    "current_section_name": 1,
                    "inner_section_string": 1,
                    "input_string": 1,
                    "s1": 1,
                    "section_name": 10,
                    "str": 3,
                    "str1": 1,
                    "str_1": 1,
                    "string": 2,
                    "string1": 4,
                    "string_to_match": 1,
                    "target_string": 4
                },
                "_stdout": {
                    "standard_output": 1
                },
                "cVar3": {
                    "ch": 2,
                    "char": 1,
                    "char1": 1,
                    "char_1": 1,
                    "char_value": 1,
                    "char_var": 4,
                    "character": 2,
                    "comparison_result": 6,
                    "is_matching_section": 1,
                    "result": 6,
                    "section_check_result": 1,
                    "section_comparison": 1,
                    "section_match_result": 1,
                    "section_result": 1,
                    "temp_var3": 1,
                    "var3": 1
                },
                "iVar4": {
                    "cmp_result": 3,
                    "comparison": 1,
                    "comparison_result": 6,
                    "index": 1,
                    "int_var": 1,
                    "integer": 1,
                    "strcmp_result": 5,
                    "string_comparison": 3,
                    "string_comparison_result": 6,
                    "temp_var4": 1,
                    "var4": 2,
                    "var_2": 1
                },
                "lVar2": {
                    "current_offset": 1,
                    "data_start": 1,
                    "data_var": 1,
                    "entry_value": 1,
                    "function_address": 1,
                    "long_var2": 1,
                    "nested_section_base": 1,
                    "offset": 1,
                    "section_address": 6,
                    "section_base": 1,
                    "section_base_address": 1,
                    "section_content": 1,
                    "symbol_address": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "val": 1,
                    "value": 2,
                    "var": 1,
                    "var1": 1,
                    "var2": 5,
                    "var_1": 1
                },
                "lVar7": {
                    "counter": 1,
                    "i": 1,
                    "index": 2,
                    "iteration_var": 1,
                    "long_var7": 1,
                    "loop_count": 1,
                    "loop_counter": 2,
                    "loop_index": 1,
                    "loop_var": 1,
                    "loop_var3": 1,
                    "loop_variable": 1,
                    "nested_section_index": 1,
                    "section_counter": 2,
                    "section_index": 4,
                    "section_index2": 1,
                    "temp_var2": 1,
                    "val2": 1,
                    "var2": 1,
                    "var7": 5,
                    "var_6": 1
                },
                "param_10": {
                    "offset": 1,
                    "param": 3,
                    "param1": 4,
                    "param10": 6,
                    "param3": 2,
                    "param4": 1,
                    "param_10": 1,
                    "param_length": 1,
                    "param_value": 1,
                    "param_value1": 2,
                    "parameter10": 2,
                    "section_id": 1,
                    "section_offset": 1,
                    "section_param": 1,
                    "section_size": 3,
                    "val_1": 1
                },
                "param_12": {
                    "filename": 1,
                    "output": 1,
                    "output_string": 1,
                    "param12": 5,
                    "param2": 4,
                    "param4": 1,
                    "param5": 1,
                    "param_address": 1,
                    "param_array_ptr": 1,
                    "param_pointer": 1,
                    "param_value2": 2,
                    "parameter12": 2,
                    "ptr_4": 1,
                    "result_string": 1,
                    "section_address": 1,
                    "section_data": 2,
                    "section_file_name": 1,
                    "section_name": 3,
                    "section_pointer": 1
                },
                "plVar1": {
                    "current_pointer": 1,
                    "current_section": 1,
                    "data_pointer": 1,
                    "double_ptr": 1,
                    "function_pointer": 1,
                    "inner_section_ptr": 1,
                    "loop_var1": 1,
                    "nested_section_pointer": 1,
                    "pointer": 3,
                    "pointer_var1": 1,
                    "ptr2": 1,
                    "ptr4": 1,
                    "ptr_2": 1,
                    "ptr_arr": 1,
                    "section": 1,
                    "section_data": 1,
                    "section_entry": 1,
                    "section_index_pointer": 1,
                    "section_iterator": 1,
                    "section_pointer": 3,
                    "symbol_pointer": 1,
                    "temp_pointer1": 1
                },
                "pvVar5": {
                    "allocation_pointer": 1,
                    "array_ptr": 1,
                    "data": 1,
                    "data2": 1,
                    "dynamic_array": 1,
                    "malloc_ptr": 1,
                    "memory_pointer": 1,
                    "param2": 2,
                    "pointer2": 1,
                    "pointer_var": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_3": 1,
                    "ptr_val": 1,
                    "section_allocated_memory": 1,
                    "section_allocation_pointer": 1,
                    "section_array_ptr": 1,
                    "section_data": 4,
                    "section_data_ptr": 2,
                    "section_map": 1,
                    "section_pointer_array": 1,
                    "sections": 1,
                    "var5": 1
                },
                "uVar6": {
                    "count": 1,
                    "counter": 4,
                    "current_index": 1,
                    "index": 11,
                    "iteration": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_var2": 1,
                    "section_index": 6,
                    "var6": 1,
                    "var_4": 1
                },
                "unaff_R13": {
                    "bfd": 1,
                    "binary_entry_point": 1,
                    "binary_info": 1,
                    "current_binary": 1,
                    "current_context": 1,
                    "current_section_ptr": 1,
                    "data_structure2": 1,
                    "param2": 2,
                    "param3": 1,
                    "pointer3": 1,
                    "ptr3": 1,
                    "r13": 2,
                    "r13_val": 1,
                    "r13_value": 1,
                    "register_r13": 1,
                    "section_array": 2,
                    "section_data": 2,
                    "section_index": 1,
                    "section_manager": 1,
                    "section_ptr": 1,
                    "section_table_start": 1,
                    "sections": 1,
                    "unaff_param1": 1,
                    "unaff_r13": 1,
                    "var_5": 1
                },
                "unaff_RBX": {
                    "base_address": 1,
                    "binary_base_address": 1,
                    "context_pointer": 1,
                    "current_section": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "data_structure": 2,
                    "param1": 4,
                    "pointer1": 1,
                    "ptr1": 1,
                    "rbx": 2,
                    "rbx_val": 1,
                    "rbx_value": 1,
                    "register_bx": 1,
                    "section_array": 2,
                    "section_entry_point": 1,
                    "section_info": 1,
                    "section_list": 1,
                    "section_ptr": 1,
                    "section_table": 1,
                    "string_array": 1,
                    "unaff_rbx": 1,
                    "var_3": 1
                }
            },
            "called": [
                "FUN_00103c00",
                "xmalloc",
                "bfd_map_over_sections",
                "free"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\n\n\nvoid process_data_00103238(void)\n\n{\n  long *pointer;\n  void *ptr;\n  char *section_name;\n  long section_address;\n  char comparison_result;\n  int string_comparison_result;\n  long param1;\n  void *section_data;\n  uint index;\n  long section_data;\n  long var7;\n  ulong param10;\n  void *param12;\n  \n  section_data = DAT_0010b750;\n  if (_DAT_0010b7b0 == section_data) {\n    if (DAT_0010b750 != (void *)0x0) goto LAB_00103296;\n  }\n  else {\n    index = 0;\n    if (DAT_0010b750 != (void *)0x0) {\n      for (; index < DAT_0010b748; index = index + 1) {\n        ptr = *(void **)((long)section_data + (ulong)index * 8);\n        if (ptr != (void *)0x0) {\n          free(ptr);\n        }\n      }\n      free(DAT_0010b740);\n      free(section_data);\n      free(DAT_0010b738);\n      DAT_0010b740 = (void *)0x0;\n      DAT_0010b750 = (void *)0x0;\n      DAT_0010b738 = (void *)0x0;\n    }\n  }\n  DAT_0010b748 = *(uint *)(section_data + 0xa0);\n  DAT_0010b740 = (void *)xmalloc((ulong)DAT_0010b748 * 8);\n  DAT_0010b750 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n  DAT_0010b738 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n  param12 = DAT_0010b740;\n  bfd_map_over_sections();\n  _DAT_0010b7b0 = section_data;\nLAB_00103296:\n  section_name = *(char **)(param1 + 8);\n  index = 0;\n  do {\n    if (DAT_0010b748 <= index) {\n      putc(10,standard_output);\n      return;\n    }\n    section_data = DAT_0010b738;\n    for (var7 = 0; pointer = (long *)((long)section_data + (ulong)index * 8),\n        *pointer != var7 && var7 <= *pointer; var7 = var7 + 1) {\n      pointer = **(long ***)(*(long *)((long)DAT_0010b750 + (ulong)index * 8) + var7 * 8);\n      if ((((pointer != (long *)0x0) &&\n           (section_address = *pointer, *(long *)(section_address + 0x20) == *(long *)(param1 + 0x20))) &&\n          (*(long *)(section_address + 0x10) == *(long *)(param1 + 0x10))) &&\n         (((string_comparison_result = strcmp(section_name,*(char **)(section_address + 8)), string_comparison_result == 0 &&\n           (comparison_result = (**(code **)(*(long *)(section_data + 8) + 0x240))(), section_data = DAT_0010b738,\n           comparison_result != '\\0')) && (param12 != (void *)0x0)))) {\n        printf(\"\\t%s:%u\",param12,param10 >> 0x20);\n        index = DAT_0010b748;\n        break;\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "current_name": "process_data_00103238",
            "entrypoint": "0x00103238",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103238": "process_data_00103238",
                "__ptr": "ptr",
                "__s1": "section_name",
                "_stdout": "standard_output",
                "cVar3": "comparison_result",
                "iVar4": "string_comparison_result",
                "lVar2": "section_address",
                "lVar7": "var7",
                "param_10": "param10",
                "param_12": "param12",
                "plVar1": "pointer",
                "pvVar5": "section_data",
                "uVar6": "index",
                "unaff_R13": "section_data",
                "unaff_RBX": "param1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103463": {
            "additional_data": {
                "DAT_0010b738": {
                    "data_offset": 1
                },
                "DAT_0010b748": {
                    "data_length": 1
                },
                "DAT_0010b750": {
                    "key_offset": 1
                },
                "FUN_00103463": {
                    "find_and_print_matching_entries": 1,
                    "find_and_print_matching_values": 1,
                    "find_matching_data": 1,
                    "find_matching_elements": 1,
                    "find_matching_item_and_print": 1,
                    "print_and_check_data": 1,
                    "print_and_check_values": 1,
                    "print_and_count_matches": 1,
                    "print_and_count_matching_items": 1,
                    "print_and_exit": 1,
                    "print_and_exit_error": 1,
                    "print_and_search_records": 1,
                    "print_error_and_exit": 6,
                    "print_error_from_binary": 1,
                    "print_error_message_and_exit": 4,
                    "print_errors_and_exit": 1,
                    "print_matching_entries": 1,
                    "print_matching_parameters": 1,
                    "print_matching_records": 1,
                    "print_relevant_data": 1,
                    "process_entries": 1,
                    "process_errors": 1,
                    "reverse_and_print": 1
                },
                "_stdout": {
                    "standard_output": 2
                },
                "cVar3": {
                    "char_value": 2,
                    "comparison_result": 13,
                    "flag": 1,
                    "match_result": 1,
                    "result": 8,
                    "result_char": 1,
                    "string_comparison_result": 1
                },
                "iVar4": {
                    "comparison": 1,
                    "comparison_result": 10,
                    "strcmp_result": 5,
                    "string_compare_result": 1,
                    "string_comparison": 4,
                    "string_comparison_result": 6
                },
                "in_stack_00000050": {
                    "file": 1,
                    "file_name": 3,
                    "file_path": 1,
                    "filename": 5,
                    "line_count": 1,
                    "line_no": 1,
                    "line_number": 16,
                    "record_source": 1,
                    "source_file": 1,
                    "stack_variable": 1
                },
                "lVar2": {
                    "current_data": 1,
                    "current_entry_value": 1,
                    "current_item": 1,
                    "current_item_value": 1,
                    "current_ptr": 1,
                    "current_record_address": 1,
                    "current_val": 1,
                    "current_value": 7,
                    "element": 1,
                    "entry": 1,
                    "entry_value": 2,
                    "item_data": 1,
                    "item_value": 1,
                    "pointer": 1,
                    "temp_value": 2,
                    "value": 1,
                    "value1": 3
                },
                "lVar5": {
                    "array_offset1": 1,
                    "array_start": 2,
                    "base_addr": 1,
                    "base_address": 8,
                    "base_address1": 1,
                    "base_address_1": 1,
                    "base_pointer": 1,
                    "base_record_array": 1,
                    "current_index": 1,
                    "current_offset": 1,
                    "current_record": 1,
                    "data_pointer": 1,
                    "data_start": 1,
                    "entry_list": 1,
                    "list_ptr_1": 1,
                    "ptr_constant_1": 1,
                    "start_address": 1,
                    "start_ptr": 1,
                    "table1": 1
                },
                "lVar6": {
                    "array_offset2": 1,
                    "base_address_2": 1,
                    "counter": 1,
                    "current_element_index": 1,
                    "current_index": 1,
                    "i": 4,
                    "index": 5,
                    "iteration": 1,
                    "iteration_count": 1,
                    "iterator": 1,
                    "list_ptr_2": 1,
                    "loop_counter": 5,
                    "loop_index": 3,
                    "table2": 1
                },
                "param_10": {
                    "additional_data": 1,
                    "address": 3,
                    "count": 1,
                    "entry_size": 1,
                    "file_offset": 1,
                    "file_size": 3,
                    "flags": 1,
                    "index": 1,
                    "input_length": 1,
                    "length": 1,
                    "limit": 1,
                    "line_number": 1,
                    "param_value": 2,
                    "parameter": 1,
                    "record_count": 1,
                    "record_length": 1,
                    "shifted_value": 1,
                    "threshold": 1,
                    "value": 8
                },
                "param_8": {
                    "count": 3,
                    "counter": 15,
                    "current_index": 1,
                    "entry_index": 3,
                    "index": 4,
                    "iteration_counter": 1,
                    "line_number": 1,
                    "loop_counter": 1,
                    "record_index": 2
                },
                "plVar1": {
                    "array_pointer": 1,
                    "current_address": 1,
                    "current_element": 1,
                    "current_entry": 2,
                    "current_item": 2,
                    "current_item_ptr": 1,
                    "current_pointer": 4,
                    "current_ptr": 4,
                    "current_record": 1,
                    "current_value_ptr": 1,
                    "entry_ptr": 2,
                    "list_item_ptr": 1,
                    "pointer": 2,
                    "pointer1": 2,
                    "ptr": 1
                },
                "print_error_message_and_exit_00106530": {
                    "print_error_and_exit": 1,
                    "print_error_message_and_exit": 1
                },
                "putc": {
                    "print_newline": 1,
                    "put_character": 1
                },
                "stdout": {
                    "standard_output": 1
                },
                "unaff_R12": {
                    "current_entry": 1,
                    "current_file": 1,
                    "error_message": 10,
                    "file_name": 1,
                    "filename": 1,
                    "input_string": 5,
                    "message": 2,
                    "payload": 1,
                    "search_string": 5,
                    "search_term": 1,
                    "string_parameter": 1,
                    "target_string": 1,
                    "text_to_match": 1
                },
                "unaff_R13": {
                    "callback": 1,
                    "error": 1,
                    "error_data": 1,
                    "error_handler": 2,
                    "error_message": 1,
                    "file": 4,
                    "file_descriptor": 2,
                    "file_info": 1,
                    "file_pointer": 4,
                    "file_ptr": 1,
                    "func_table": 1,
                    "function_pointer": 5,
                    "function_pointer_parameter": 1,
                    "output_file": 1,
                    "output_handler": 1,
                    "output_stream": 1,
                    "param": 1,
                    "param_pointer": 1,
                    "print_function": 1
                },
                "unaff_R15": {
                    "base_address": 6,
                    "base_address_3": 1,
                    "base_pointer": 1,
                    "context": 1,
                    "current_entry": 1,
                    "current_file": 3,
                    "data": 3,
                    "data_parameter": 1,
                    "data_ptr": 1,
                    "entry": 1,
                    "given_item": 1,
                    "input_data": 3,
                    "input_file": 1,
                    "input_pointer": 1,
                    "original_data": 1,
                    "source": 1,
                    "struct_ptr": 1,
                    "structure": 1,
                    "target_address": 1
                }
            },
            "called": [
                "strcmp",
                "FUN_00106530",
                "printf",
                "putc"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_00103463(void)\n\n{\n  long *current_pointer;\n  long current_value;\n  char comparison_result;\n  int comparison_result;\n  long base_address;\n  char *error_message;\n  undefined8 *function_pointer;\n  long index;\n  long base_address;\n  undefined8 counter;\n  ulong value;\n  long line_number;\n  \n  print_error_and_exit(*function_pointer);\n  do {\n    counter._4_4_ = counter._4_4_ + 1;\n    if (DAT_0010b748 <= counter._4_4_) {\n      putc(10,standard_output);\n      return;\n    }\n    base_address = DAT_0010b738;\n    for (index = 0; current_pointer = (long *)(base_address + (ulong)counter._4_4_ * 8),\n        *current_pointer != index && index <= *current_pointer; index = index + 1) {\n      current_pointer = **(long ***)(*(long *)(DAT_0010b750 + (ulong)counter._4_4_ * 8) + index * 8);\n      if ((((current_pointer != (long *)0x0) &&\n           (current_value = *current_pointer, *(long *)(current_value + 0x20) == *(long *)(base_address + 0x20))) &&\n          (*(long *)(current_value + 0x10) == *(long *)(base_address + 0x10))) &&\n         (((comparison_result = strcmp(error_message,*(char **)(current_value + 8)), comparison_result == 0 &&\n           (comparison_result = (**(code **)(function_pointer[1] + 0x240))(), base_address = DAT_0010b738, comparison_result != '\\0')) &&\n          (line_number != 0)))) {\n        printf(\"\\t%s:%u\",line_number,value >> 0x20);\n        counter._4_4_ = DAT_0010b748;\n        break;\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "print_error_message_and_exit_00103463",
            "entrypoint": "0x00103463",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103463": "print_error_message_and_exit_00103463",
                "_stdout": "standard_output",
                "cVar3": "comparison_result",
                "iVar4": "comparison_result",
                "in_stack_00000050": "line_number",
                "lVar2": "current_value",
                "lVar5": "base_address",
                "lVar6": "index",
                "param_10": "value",
                "param_8": "counter",
                "plVar1": "current_pointer",
                "print_error_message_and_exit_00106530": "print_error_and_exit",
                "putc": "print_newline",
                "stdout": "standard_output",
                "unaff_R12": "error_message",
                "unaff_R13": "function_pointer",
                "unaff_R15": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010351b": {
            "additional_data": {
                "": {
                    "": 2,
                    "format_string": 1
                },
                "DAT_0010b818": {
                    "condition_flag": 1,
                    "data_flag": 1,
                    "flag": 3,
                    "flag_check": 1,
                    "flag_variable": 1,
                    "is_initialized": 1,
                    "is_message_present": 1,
                    "print_flag": 1
                },
                "FUN_0010351b": {
                    "print_function_name": 10,
                    "print_function_name_if_condition_true": 1,
                    "print_function_name_if_not_zero": 1,
                    "print_header_if_data_not_zero": 2,
                    "print_header_if_not_zero": 1,
                    "print_heading_if_value_zero": 1,
                    "print_if_data_equal_zero": 1,
                    "print_if_data_not_available": 1,
                    "print_if_data_not_zero": 1,
                    "print_if_variable_zero": 1,
                    "print_if_zero": 1,
                    "print_message_if_condition_zero": 1,
                    "print_message_if_dat_is_zero": 1,
                    "print_message_if_data_not_set": 1,
                    "print_message_if_not_initialized": 2,
                    "print_message_or_do_nothing": 1,
                    "print_or_return_if_zero": 1,
                    "print_status_message": 1
                },
                "PTR_0010b818": {
                    "condition_variable": 1,
                    "pointer_flag": 1,
                    "return_value": 1,
                    "some_flag": 1
                },
                "PTR_FUN_0010351b": {
                    "function_pointer": 1
                },
                "PTR_param1": {
                    "message": 1,
                    "param1": 1
                },
                "PTR_param2": {
                    "param2": 1
                },
                "msg": {
                    "message": 1
                },
                "printf": {
                    "print": 8,
                    "print_formatted": 1,
                    "print_formatted_message": 1,
                    "print_formatted_string": 5,
                    "printf": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid print_function_name_if_not_zero_0010351b(void)\n\n{\n  if (DAT_0010b818 == 0) {\n    printf(\"\\n%s:\\n\");\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_function_name_if_not_zero_0010351b",
            "entrypoint": "0x0010351b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010351b": "print_function_name_if_not_zero_0010351b",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103533": {
            "additional_data": {
                "FUN_00103533": {
                    "compare_and_call": 4,
                    "compare_and_call_function": 2,
                    "compare_and_execute": 14,
                    "compare_and_execute_function": 3,
                    "compare_and_return_value": 1,
                    "compare_parameters": 2,
                    "compare_params": 1,
                    "compare_values": 3,
                    "compare_values_and_execute": 1
                },
                "param_1": {
                    "array1": 3,
                    "array_1": 1,
                    "array_a": 1,
                    "first_array": 1,
                    "first_input": 2,
                    "first_param": 1,
                    "first_parameter": 1,
                    "first_value": 1,
                    "input1": 8,
                    "input_1": 1,
                    "input_data_1": 1,
                    "input_pointer": 1,
                    "parameter1": 1,
                    "value1": 7,
                    "value_1": 1
                },
                "param_2": {
                    "array2": 3,
                    "array_2": 1,
                    "array_b": 1,
                    "comparison_pointer": 1,
                    "input2": 8,
                    "input_2": 1,
                    "input_data_2": 1,
                    "parameter2": 1,
                    "second_array": 1,
                    "second_input": 2,
                    "second_param": 1,
                    "second_parameter": 1,
                    "second_value": 1,
                    "value2": 7,
                    "value_2": 1
                },
                "uVar1": {
                    "result": 20,
                    "return_value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nulong compare_and_execute_function_00103533(undefined8 *input1,undefined8 *input2)\n\n{\n  ulong result;\n  \n  if ((ulong)input1[1] < (ulong)input2[1]) {\n    return (ulong)(-(uint)(DAT_0010b7f4 == 0) | 1);\n  }\n  if ((ulong)input2[1] < (ulong)input1[1]) {\n    return (ulong)((-(uint)(DAT_0010b7f4 == 0) & 2) - 1);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00103571. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  result = (*(code *)(&PTR_FUN_0010acc0)[DAT_0010b7f4])(*input1,*input2);\n  return result;\n}\n\n",
            "current_name": "compare_and_execute_function_00103533",
            "entrypoint": "0x00103533",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103533": "compare_and_execute_function_00103533",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103573": {
            "additional_data": {
                "FUN_00103573": {
                    "print_both_strings": 1,
                    "print_formatted_strings": 1,
                    "print_function": 1,
                    "print_function_details": 1,
                    "print_function_name_and_args": 1,
                    "print_labels": 1,
                    "print_message": 1,
                    "print_param_strings": 1,
                    "print_parameters": 3,
                    "print_params": 1,
                    "print_strings": 16,
                    "print_two_strings": 1,
                    "print_values": 2
                },
                "extra_label": {
                    "extra_label": 1
                },
                "label_1": {
                    "label_1": 1
                },
                "label_2": {
                    "label_2": 1
                },
                "param_1": {
                    "first_string": 1,
                    "function_name": 1,
                    "label1": 1,
                    "label_1": 1,
                    "label_ptr": 1,
                    "message1": 2,
                    "message_1": 1,
                    "param1": 1,
                    "param_1_ptr": 1,
                    "string1": 11,
                    "string1_ptr": 2,
                    "string_1": 6,
                    "string_param": 2
                },
                "param_2": {
                    "another_string_param": 1,
                    "arg": 1,
                    "data_ptr": 1,
                    "label2": 1,
                    "label_2": 1,
                    "message2": 2,
                    "message_2": 1,
                    "param2": 1,
                    "param_2_ptr": 1,
                    "second_string": 1,
                    "second_string_param": 1,
                    "string2": 11,
                    "string2_ptr": 2,
                    "string_2": 6
                },
                "param_3": {
                    "param3": 9,
                    "param_3": 1,
                    "parameter3": 1,
                    "string3": 1,
                    "undefined_param": 1,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param": 14,
                    "unused_param_1": 1
                },
                "param_4": {
                    "additional_string": 1,
                    "extra_label": 1,
                    "extra_string": 1,
                    "format_param": 1,
                    "integer_param": 1,
                    "param4": 9,
                    "param_4": 1,
                    "parameter4": 1,
                    "string3": 3,
                    "string3_ptr": 1,
                    "string4": 1,
                    "string_3": 4,
                    "unused2": 1,
                    "unused_param": 1,
                    "unused_param_2": 4
                },
                "print_labels": {
                    "print_labels": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001053b0"
            ],
            "code": "\nvoid print_both_strings_00103573(undefined8 *string1,undefined8 *string2,undefined8 unused_param,undefined8 param4)\n\n{\n  if (string1 != (undefined8 *)0x0) {\n    printf(\"%s:\",*string1);\n  }\n  printf(\"%s:\",*string2,param4);\n  return;\n}\n\n",
            "current_name": "print_both_strings_00103573",
            "entrypoint": "0x00103573",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103573": "print_both_strings_00103573",
                "param_1": "string1",
                "param_2": "string2",
                "param_3": "unused_param",
                "param_4": "param4",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001035a2": {
            "additional_data": {
                "DAT_0010712c": {
                    "format1": 1,
                    "format_string": 2,
                    "format_string1": 2
                },
                "DAT_0010b238": {
                    "format2": 1,
                    "format_string1": 2,
                    "format_string2": 2
                },
                "DAT_0010b23d": {
                    "format3": 1,
                    "format_string2": 2,
                    "format_string3": 2
                },
                "FUN_001035a2": {
                    "display_formatted_error_message": 1,
                    "print_data_info": 1,
                    "print_error_details": 1,
                    "print_error_info": 1,
                    "print_error_message": 3,
                    "print_formatted_data": 1,
                    "print_formatted_error": 2,
                    "print_formatted_error_message": 18,
                    "print_formatted_message": 2,
                    "print_formatted_output": 1
                },
                "char": {
                    "character": 1
                },
                "lVar1": {
                    "address": 2,
                    "error_address": 1,
                    "error_code": 1,
                    "error_message": 1,
                    "error_message_offset": 1,
                    "error_message_ptr": 1,
                    "error_msg_ptr": 1,
                    "error_ptr": 1,
                    "formatted_data": 1,
                    "formatted_error_message": 2,
                    "formatted_message": 1,
                    "formatted_value": 1,
                    "info_value": 2,
                    "message_address": 2,
                    "message_pointer": 1,
                    "message_ptr": 1,
                    "value": 11
                },
                "printCharacter": {
                    "print_character": 1
                },
                "printFormattedString": {
                    "print_formatted_string": 1
                },
                "print_formatted_error_message_001054d0": {
                    "display_formatted_error_message": 1,
                    "print_error_message": 5,
                    "print_error_message_with_address": 1,
                    "print_formatted_error_message": 1,
                    "print_formatted_error_message_helper": 1,
                    "print_formatted_error_message_with_code": 2,
                    "print_formatted_error_message_with_param": 1,
                    "print_formatted_error_message_with_parameter": 1
                },
                "print_formatted_string_with_param_00104740": {
                    "display_formatted_string": 1,
                    "print_formatted_string": 2,
                    "print_formatted_string_with_param": 4,
                    "print_formatted_string_with_parameter": 3
                },
                "printf": {
                    "print_formatted": 2,
                    "print_formatted_output": 1,
                    "print_formatted_string": 10
                },
                "putchar": {
                    "output_character": 1,
                    "print_char": 2,
                    "print_character": 8,
                    "put_character": 2
                },
                "unaff_RBX": {
                    "arguments": 1,
                    "array_pointer": 4,
                    "array_ptr": 5,
                    "data": 2,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "input_array": 1,
                    "pointer": 4,
                    "pointer_to_data": 1,
                    "ptr_array": 1,
                    "rbx": 6
                },
                "undefined8": {
                    "string": 1
                }
            },
            "called": [
                "FUN_001054d0",
                "FUN_00104740",
                "printf",
                "putchar"
            ],
            "calling": [
                "FUN_001053c0"
            ],
            "code": "\nvoid print_formatted_error_message_001035a2(void)\n\n{\n  long *rbx;\n  long value;\n  \n  if (rbx[2] == 0) {\n    value = rbx[1];\n  }\n  else {\n    value = *(long *)(rbx[2] + 0x38);\n  }\n  if (value != 0) {\n    putchar(0x20);\n    if (rbx[2] == 0) {\n      value = rbx[1];\n    }\n    else {\n      value = *(long *)(rbx[2] + 0x38);\n    }\n    print_error_message(value);\n  }\n  printf(\" %c\",(ulong)(uint)(int)*(character *)(*rbx + 8));\n  if (*(character *)(*rbx + 8) != '-') {\n    printf_with_param(&DAT_0010712c);\n    return;\n  }\n  putchar(0x20);\n  printf(&DAT_0010b238,(ulong)(uint)(int)*(character *)(*rbx + 0x19));\n  putchar(0x20);\n  printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*rbx + 0x1a));\n  printf(\" %5s\",*(string *)(*rbx + 0x20));\n  printf_with_param(&DAT_0010712c);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001035a2",
            "entrypoint": "0x001035a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001035a2": "print_formatted_error_message_001035a2",
                "char": "character",
                "lVar1": "value",
                "print_formatted_error_message_001054d0": "print_error_message",
                "print_formatted_string_with_param_00104740": "print_formatted_string_with_param",
                "printf": "print_formatted_string",
                "putchar": "print_character",
                "unaff_RBX": "rbx",
                "undefined8": "string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001036a7": {
            "additional_data": {
                "DAT_0010b818": {
                    "data_flag": 1,
                    "flag": 1
                },
                "FUN_001036a7": {
                    "print_arguments": 1,
                    "print_data": 7,
                    "print_formatted_string": 2,
                    "print_function": 1,
                    "print_function_name_and_args": 1,
                    "print_info": 2,
                    "print_message": 2,
                    "print_parameters": 4,
                    "print_params": 3,
                    "print_string": 1,
                    "print_strings": 7
                },
                "param_1": {
                    "argument_1": 1,
                    "data1": 2,
                    "file_name": 1,
                    "message": 1,
                    "message1": 4,
                    "message_1": 4,
                    "name_parameter": 1,
                    "param_1": 1,
                    "str1_ptr": 1,
                    "string1": 5,
                    "string_1": 5,
                    "string_param": 2,
                    "string_param_1": 1,
                    "string_ptr": 1,
                    "title": 1
                },
                "param_2": {
                    "argument_2": 1,
                    "content": 1,
                    "data2": 2,
                    "header": 1,
                    "message": 1,
                    "message2": 4,
                    "message_2": 4,
                    "message_parameter": 1,
                    "param_2": 1,
                    "str2_ptr": 1,
                    "string2": 5,
                    "string_2": 5,
                    "string_param2": 1,
                    "string_param_2": 2,
                    "string_ptr_2": 1
                },
                "param_3": {
                    "argument_3": 1,
                    "param3": 4,
                    "param_3": 5,
                    "unused": 4,
                    "unused_param": 9,
                    "unused_param1": 1,
                    "unused_param3": 1,
                    "unused_param_1": 1,
                    "unused_param_3": 3,
                    "unused_parameter": 2
                },
                "param_4": {
                    "argument_4": 1,
                    "extra_string": 1,
                    "footer": 1,
                    "param4": 4,
                    "param_4": 4,
                    "separator": 1,
                    "severity_level": 1,
                    "string3": 3,
                    "string4": 1,
                    "string_3": 1,
                    "string_param": 1,
                    "string_param3": 1,
                    "unused_param": 2,
                    "unused_param2": 4,
                    "unused_param_2": 1,
                    "unused_param_4": 3,
                    "unused_parameter2": 1
                },
                "printf": {
                    "print": 2
                }
            },
            "called": [
                "printf"
            ],
            "calling": [],
            "code": "\nvoid print_formatted_string_001036a7(undefined8 *string1,undefined8 *string_2,undefined8 unused_param,undefined8 param4)\n\n{\n  if (DAT_0010b818 != 0) {\n    if (string1 != (undefined8 *)0x0) {\n      printf(\"%s:\",*string1);\n    }\n    printf(\"%s:\",*string_2,param4);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_formatted_string_001036a7",
            "entrypoint": "0x001036a7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001036a7": "print_formatted_string_001036a7",
                "param_1": "string1",
                "param_2": "string_2",
                "param_3": "unused_param",
                "param_4": "param4",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001036e0": {
            "additional_data": {
                "FUN_001036e0": {
                    "pretty_print_message": 1,
                    "print_formatted_string": 1,
                    "print_log_message": 3,
                    "print_message": 25,
                    "print_message_with_prefix": 1
                },
                "param_1": {
                    "category": 2,
                    "component_name": 1,
                    "context": 1,
                    "header": 2,
                    "label": 1,
                    "label_param": 1,
                    "log_tag": 1,
                    "message": 1,
                    "message_header": 1,
                    "message_type": 2,
                    "module": 1,
                    "module_name": 6,
                    "msg_header": 1,
                    "msg_type": 1,
                    "prefix": 2,
                    "section_name": 1,
                    "sender": 2,
                    "source": 2,
                    "source_name": 1,
                    "title": 1
                },
                "param_2": {
                    "default_message": 1,
                    "default_module": 1,
                    "default_name": 1,
                    "error_message": 4,
                    "file_name": 1,
                    "message": 17,
                    "message_param": 1,
                    "message_text": 1,
                    "message_type": 1,
                    "msg": 1,
                    "msg_body": 1,
                    "text": 1
                },
                "printf": {
                    "print_formatted": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001064a0"
            ],
            "code": "\nvoid print_log_message_001036e0(undefined8 *module_name,undefined8 *message)\n\n{\n  if (module_name != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*module_name);\n    return;\n  }\n  printf(\"%s: \",*message);\n  return;\n}\n\n",
            "current_name": "print_log_message_001036e0",
            "entrypoint": "0x001036e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001036e0": "print_log_message_001036e0",
                "param_1": "module_name",
                "param_2": "message",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010370a": {
            "additional_data": {
                "DAT_0010b23d": {
                    "format_specifier1": 1
                },
                "DAT_0010b7a8": {
                    "constant_0x20": 1
                },
                "FUN_0010370a": {
                    "format_print_info": 1,
                    "print_formatted_error": 1,
                    "print_formatted_error_info": 1,
                    "print_symbol_details": 1,
                    "print_symbol_info": 6,
                    "print_symbol_information": 18,
                    "print_symbol_type": 1,
                    "print_type_info": 2
                },
                "bVar8": {
                    "attribute_bits": 1,
                    "byte_value": 2,
                    "class": 1,
                    "class_number": 1,
                    "data_type_code": 1,
                    "section_type_code": 1,
                    "symbol_class": 9,
                    "symbol_class_byte": 1,
                    "symbol_data_type": 1,
                    "symbol_kind": 1,
                    "symbol_type": 3,
                    "symbol_type_bit": 1,
                    "symbol_type_byte": 1,
                    "symbol_type_class": 1,
                    "symbol_type_value": 1,
                    "symclass_value": 1,
                    "type_byte": 1,
                    "type_class": 1,
                    "type_flag": 1,
                    "type_identifier": 1
                },
                "bfd_is_undefined_symclass": {
                    "is_undefined_symbol_class": 1
                },
                "cVar1": {
                    "class_undefined": 1,
                    "is_symbol_undefined": 1,
                    "is_undefined": 14,
                    "is_undefined_sym_class": 2,
                    "is_undefined_symclass": 10
                },
                "dcgettext": {
                    "get_translated_message": 1
                },
                "iVar3": {
                    "asprintf_result": 20,
                    "asprintf_ret_val": 1,
                    "asprintf_return_value": 3,
                    "asprintf_status": 1,
                    "error": 1,
                    "format_result": 1,
                    "num_chars": 1,
                    "result": 1,
                    "status": 1
                },
                "joined_r0x00103964": {
                    "new_string_format_specifier": 1
                },
                "lVar7": {
                    "data_pointer": 1,
                    "data_type": 1,
                    "element_type": 1,
                    "info_address": 1,
                    "info_pointer": 1,
                    "info_value": 1,
                    "pointer_offset": 1,
                    "ptr_value": 1,
                    "symbol_address": 1,
                    "symbol_attribute": 1,
                    "symbol_data": 3,
                    "symbol_data_address": 1,
                    "symbol_data_ptr": 1,
                    "symbol_info": 14,
                    "symbol_info_ptr": 2
                },
                "pcVar10": {
                    "data_type": 3,
                    "data_type_string": 1,
                    "element_type_string": 1,
                    "symbol_category": 1,
                    "symbol_class": 1,
                    "symbol_class_str": 1,
                    "symbol_kind": 1,
                    "symbol_type": 12,
                    "symbol_type_name": 3,
                    "symbol_type_str": 1,
                    "symbol_type_string": 1,
                    "type_description": 1,
                    "type_name": 1,
                    "type_string": 1
                },
                "piVar5": {
                    "errno_location": 16,
                    "errno_pointer": 1,
                    "errno_ptr": 4,
                    "error_location": 3,
                    "error_number": 1
                },
                "plVar4": {
                    "error_message": 10,
                    "error_message_pointer": 3,
                    "error_msg": 1,
                    "format_string": 1,
                    "localized_error_message": 1,
                    "print_width": 9,
                    "print_width_pointer": 1,
                    "print_width_ptr": 2
                },
                "print_formatted_error_message_00106300": {
                    "print_formatted_error_message": 1
                },
                "print_formatted_string_with_param_00104740": {
                    "print_formatted_string": 1
                },
                "printf": {
                    "print_formatted_string": 1
                },
                "uVar2": {
                    "class_info": 1,
                    "data_type_flag": 1,
                    "data_type_value": 1,
                    "section_flags": 1,
                    "sym_class_value": 1,
                    "symbol_attr": 1,
                    "symbol_attributes": 2,
                    "symbol_class": 5,
                    "symbol_flag": 1,
                    "symbol_info": 1,
                    "symbol_type": 7,
                    "symbol_type_bits": 2,
                    "symbol_type_code": 1,
                    "symbol_type_mask": 1,
                    "symclass_value": 1,
                    "type": 1,
                    "type_bits": 1,
                    "type_category": 1,
                    "type_flag": 1
                },
                "uVar6": {
                    "error_description": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "error_string": 4,
                    "str_error": 1,
                    "strerror_result": 1,
                    "xstr_error": 1,
                    "xstrerror_message": 1,
                    "xstrerror_result": 2,
                    "xstrerror_return_value": 1,
                    "xstrerror_value": 2
                },
                "uVar9": {
                    "filtered_rbx": 2,
                    "formatted_rbx": 1,
                    "mask_rbx": 1,
                    "masked_input": 2,
                    "masked_rbx": 15,
                    "masked_symbol_info": 1,
                    "masked_value": 1,
                    "masked_width": 1,
                    "rbx": 1,
                    "rbx_masked_value": 1,
                    "rbx_value": 1,
                    "rbx_value_masked": 1,
                    "symbol_address": 1,
                    "symbol_value": 2
                },
                "unaff_RBX": {
                    "formatted_output": 1,
                    "input_rbx": 1,
                    "input_value": 2,
                    "original_rbx": 3,
                    "raw_input": 1,
                    "raw_rbx": 1,
                    "rbx": 1,
                    "rbx_masked": 1,
                    "rbx_value": 2,
                    "symbol_info": 1,
                    "symbol_mask": 1,
                    "unaff_data": 1,
                    "width": 1
                }
            },
            "called": [
                "FUN_00106300",
                "dcgettext"
            ],
            "calling": [
                "FUN_001054d0"
            ],
            "code": "\nvoid print_symbol_information_0010370a(void)\n\n{\n  char is_undefined;\n  ushort symbol_type;\n  int asprintf_result;\n  long *error_message;\n  int *errno_location;\n  undefined8 error_string;\n  long symbol_info;\n  ulong original_rbx;\n  byte symbol_class;\n  ulong masked_rbx;\n  char *symbol_type;\n  \n  error_message = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  masked_rbx = original_rbx & 0xffffffff;\n  print_formatted_error_message(error_message,masked_rbx);\n  print_formatted_string(\"%-20s|\",error_message,0,masked_rbx);\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*error_message + 8));\n  if (is_undefined == '\\0') {\n    print_formatted_error_message_001054d0(*(undefined8 *)*error_message);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    print_formatted_string(\"        \");\n  }\n  else {\n    print_formatted_string(\"                \");\n  }\n  print_formatted_string(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*error_message + 8));\n  if (*(char *)(*error_message + 8) == '-') {\n    print_formatted_string(\"%18s|  \",*(undefined8 *)(*error_message + 0x20));\n    print_formatted_string(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*error_message + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (error_message[2] == 0) {\n    if (error_message[3] != 0) {\n      symbol_info = *(long *)(error_message[3] + 0x30);\n      is_undefined = *(char *)(symbol_info + 0x28);\n      if (is_undefined == 'g') goto LAB_00103983;\n      if (is_undefined == 'h') {\n        symbol_type = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        symbol_type = \"Block\";\n      }\n      else if (*(ushort *)(symbol_info + 0x26) == 0) {\n        symbol_type = \"None\";\n      }\n      else {\n        symbol_type = *(ushort *)(symbol_info + 0x26) >> 4 & 3;\n        if (symbol_type == 2) {\n          symbol_type = \"Function\";\n        }\n        else if (symbol_type == 3) {\n          symbol_type = \"Array\";\n        }\n        else {\n          if (symbol_type != 1) {\n            free(DAT_0010b730);\n            symbol_type = *(ushort *)(symbol_info + 0x26);\n            symbol_class = *(byte *)(symbol_info + 0x28);\n            symbol_type = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprint_formatted_string(&DAT_0010b730,symbol_type,(ulong)symbol_class,(ulong)symbol_type);\n            symbol_type = DAT_0010b730;\n            goto new_string_format_specifier;\n          }\n          symbol_type = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    print_formatted_string(\"                  |\");\n  }\n  else {\n    symbol_class = *(byte *)(error_message[2] + 0x48) & 0xf;\n    switch(symbol_class) {\n    case 0:\n      symbol_type = \"NOTYPE\";\n      break;\n    case 1:\n      symbol_type = \"OBJECT\";\n      break;\n    case 2:\n      symbol_type = \"FUNC\";\n      break;\n    case 3:\n      symbol_type = \"SECTION\";\n      break;\n    case 4:\n      symbol_type = \"FILE\";\n      break;\n    case 5:\n      symbol_type = \"COMMON\";\n      break;\n    case 6:\n      symbol_type = \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      symbol_type = \"<processor specific>: %d\";\n      if ((2 < symbol_class - 0xd) && (symbol_type = \"<OS specific>: %d\", 2 < symbol_class - 10)) {\n        symbol_type = \"<unknown>: %d\";\n      }\n      symbol_type = (char *)dcgettext(0,symbol_type,5);\n      asprintf_result = asprint_formatted_string(&DAT_0010b728,symbol_type,(ulong)symbol_class);\n      symbol_type = DAT_0010b728;\nnew_string_format_specifier:\n      if (asprintf_result < 0) {\n        errno_location = __errno_location();\n        error_string = xstrerror(*errno_location);\n        print_formatted_error_message(&DAT_0010712d,error_string);\nLAB_00103983:\n        symbol_type = \"File\";\n      }\n    }\nLAB_001039c0:\n    print_formatted_string(\"%18s|\",symbol_type);\n  }\n  if (error_message[2] == 0) {\n    if (error_message[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      print_formatted_string(\"        \");\n    }\n    else {\n      print_formatted_string(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(error_message[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_formatted_error_message_001054d0();\n  }\n  symbol_info = error_message[2];\n  if ((symbol_info != 0) || (symbol_info = error_message[3], symbol_info != 0)) {\n    print_formatted_string(\"|     |%s\",**(undefined8 **)(symbol_info + 0x20));\n    return;\n  }\nLAB_00103a54:\n  print_formatted_string(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_symbol_information_0010370a",
            "entrypoint": "0x0010370a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010370a": "print_symbol_information_0010370a",
                "bVar8": "symbol_class",
                "bfd_is_undefined_symclass": "is_undefined_symbol_class",
                "cVar1": "is_undefined",
                "dcgettext": "get_translated_message",
                "iVar3": "asprintf_result",
                "joined_r0x00103964": "new_string_format_specifier",
                "lVar7": "symbol_info",
                "pcVar10": "symbol_type",
                "piVar5": "errno_location",
                "plVar4": "error_message",
                "print_formatted_error_message_00106300": "print_formatted_error_message",
                "print_formatted_string_with_param_00104740": "print_formatted_string",
                "printf": "print_formatted_string",
                "uVar2": "symbol_type",
                "uVar6": "error_string",
                "uVar9": "masked_rbx",
                "unaff_RBX": "original_rbx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103729": {
            "additional_data": {
                "DAT_0010b23d": {
                    "data2": 1
                },
                "DAT_0010b7a8": {
                    "data1": 1
                },
                "FUN_00103729": {
                    "print_and_format_symbol_info": 1,
                    "print_symbol_details": 2,
                    "print_symbol_info": 18,
                    "print_symbol_information": 10
                },
                "bVar7": {
                    "byte_value": 3,
                    "data_type": 2,
                    "flag": 1,
                    "info_type": 1,
                    "sym_class": 2,
                    "sym_type": 1,
                    "symbol_class": 4,
                    "symbol_type": 2,
                    "symbol_type_code": 1,
                    "tag": 1,
                    "type": 4,
                    "type_byte": 3,
                    "type_code": 6
                },
                "bfd_is_undefined_symclass": {
                    "is_undefined_symclass": 1
                },
                "cVar1": {
                    "is_defined": 1,
                    "is_undefined": 22,
                    "is_undefined_symbol": 2,
                    "is_undefined_symbol_class": 1,
                    "is_undefined_symclass": 4,
                    "undefined_sym": 1
                },
                "iVar3": {
                    "asprintf_result": 17,
                    "asprintf_ret": 1,
                    "asprintf_return_value": 1,
                    "error_status": 1,
                    "error_value": 1,
                    "format_error_return_value": 1,
                    "format_result": 1,
                    "mem_size": 1,
                    "result": 5,
                    "status": 2
                },
                "lVar6": {
                    "attribute_pointer": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "data_type": 1,
                    "info": 2,
                    "info_offset": 1,
                    "info_pointer": 2,
                    "info_ptr": 1,
                    "info_value": 1,
                    "metadata": 1,
                    "ptr": 1,
                    "section_info": 1,
                    "section_ptr": 1,
                    "sub_info": 1,
                    "sym_header": 1,
                    "symbol_data": 1,
                    "symbol_info": 6,
                    "symbol_info_address": 3,
                    "symbol_value": 1,
                    "temp": 2,
                    "temp_value": 1
                },
                "param_1": {
                    "symbol": 12,
                    "symbol_address": 2,
                    "symbol_array": 1,
                    "symbol_info": 12,
                    "symbol_information": 1,
                    "symbol_pointer": 1,
                    "symbol_ptr": 2
                },
                "param_2": {
                    "additional_info": 2,
                    "file": 1,
                    "format_option": 1,
                    "format_param": 3,
                    "format_specifier": 6,
                    "format_string": 2,
                    "param": 13,
                    "param_2": 2,
                    "symbol_name": 1
                },
                "pcVar8": {
                    "data_type_string": 3,
                    "info_string": 1,
                    "info_type": 1,
                    "string_ptr": 1,
                    "sym_class_string": 1,
                    "symbol_category": 3,
                    "symbol_class": 1,
                    "symbol_type": 4,
                    "symbol_type_string": 1,
                    "type_name": 9,
                    "type_string": 6
                },
                "piVar4": {
                    "errno_loc": 1,
                    "errno_location": 14,
                    "errno_ptr": 1,
                    "error": 4,
                    "error_code": 1,
                    "error_location": 4,
                    "error_location_ptr": 1,
                    "error_number": 2,
                    "error_pointer": 3
                },
                "print_formatted_error_message_001054d0": {
                    "print_formatted_error_message": 1
                },
                "print_formatted_string_with_param_00104740": {
                    "print_formatted_with_param": 1
                },
                "printf": {
                    "print": 1
                },
                "uVar2": {
                    "attribute": 1,
                    "class_type": 1,
                    "flag": 1,
                    "flags": 1,
                    "sym_class": 5,
                    "sym_type": 4,
                    "symbol_class": 1,
                    "symbol_type": 4,
                    "symbol_type_code": 1,
                    "symclass": 2,
                    "type": 4,
                    "type_code": 2,
                    "type_flag": 3,
                    "type_info": 1
                },
                "uVar5": {
                    "error_message": 8,
                    "error_str": 1,
                    "error_string": 15,
                    "str_error": 2,
                    "x_str_error": 1,
                    "xstrerror_message": 1,
                    "xstrerror_result": 2,
                    "xstrerror_return_value": 1
                }
            },
            "called": [
                "asprintf",
                "bfd_is_undefined_symclass",
                "xstrerror",
                "FUN_00106300",
                "FUN_001054d0",
                "FUN_00104740",
                "__errno_location",
                "printf",
                "free",
                "dcgettext"
            ],
            "calling": [],
            "code": "\nvoid print_and_format_symbol_info_00103729(long *symbol,undefined8 param)\n\n{\n  char is_undefined;\n  ushort sym_class;\n  int asprintf_result;\n  int *errno_location;\n  undefined8 error_string;\n  long symbol_info;\n  byte type_code;\n  char *type_name;\n  \n  print_formatted_with_param(\"%-20s|\",symbol,0,param);\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol + 8));\n  if (is_undefined == '\\0') {\n    print_formatted_error_message(*(undefined8 *)*symbol);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    print(\"        \");\n  }\n  else {\n    print(\"                \");\n  }\n  print(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*symbol + 8));\n  if (*(char *)(*symbol + 8) == '-') {\n    print(\"%18s|  \",*(undefined8 *)(*symbol + 0x20));\n    print(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (symbol[2] == 0) {\n    if (symbol[3] != 0) {\n      symbol_info = *(long *)(symbol[3] + 0x30);\n      is_undefined = *(char *)(symbol_info + 0x28);\n      if (is_undefined == 'g') goto LAB_00103983;\n      if (is_undefined == 'h') {\n        type_name = \"Line\";\n      }\n      else if (is_undefined == 'd') {\n        type_name = \"Block\";\n      }\n      else if (*(ushort *)(symbol_info + 0x26) == 0) {\n        type_name = \"None\";\n      }\n      else {\n        sym_class = *(ushort *)(symbol_info + 0x26) >> 4 & 3;\n        if (sym_class == 2) {\n          type_name = \"Function\";\n        }\n        else if (sym_class == 3) {\n          type_name = \"Array\";\n        }\n        else {\n          if (sym_class != 1) {\n            free(DAT_0010b730);\n            sym_class = *(ushort *)(symbol_info + 0x26);\n            type_code = *(byte *)(symbol_info + 0x28);\n            type_name = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprint(&DAT_0010b730,type_name,(ulong)type_code,(ulong)sym_class);\n            type_name = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          type_name = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    print(\"                  |\");\n  }\n  else {\n    type_code = *(byte *)(symbol[2] + 0x48) & 0xf;\n    switch(type_code) {\n    case 0:\n      type_name = \"NOTYPE\";\n      break;\n    case 1:\n      type_name = \"OBJECT\";\n      break;\n    case 2:\n      type_name = \"FUNC\";\n      break;\n    case 3:\n      type_name = \"SECTION\";\n      break;\n    case 4:\n      type_name = \"FILE\";\n      break;\n    case 5:\n      type_name = \"COMMON\";\n      break;\n    case 6:\n      type_name = \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      type_name = \"<processor specific>: %d\";\n      if ((2 < type_code - 0xd) && (type_name = \"<OS specific>: %d\", 2 < type_code - 10)) {\n        type_name = \"<unknown>: %d\";\n      }\n      type_name = (char *)dcgettext(0,type_name,5);\n      asprintf_result = asprint(&DAT_0010b728,type_name,(ulong)type_code);\n      type_name = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_location = __errno_location();\n        error_string = xstrerror(*errno_location);\n        print_formatted_error_message_00106300(&DAT_0010712d,error_string);\nLAB_00103983:\n        type_name = \"File\";\n      }\n    }\nLAB_001039c0:\n    print(\"%18s|\",type_name);\n  }\n  if (symbol[2] == 0) {\n    if (symbol[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      print(\"        \");\n    }\n    else {\n      print(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(symbol[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_formatted_error_message();\n  }\n  symbol_info = symbol[2];\n  if ((symbol_info != 0) || (symbol_info = symbol[3], symbol_info != 0)) {\n    print(\"|     |%s\",**(undefined8 **)(symbol_info + 0x20));\n    return;\n  }\nLAB_00103a54:\n  print(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_and_format_symbol_info_00103729",
            "entrypoint": "0x00103729",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103729": "print_and_format_symbol_info_00103729",
                "bVar7": "type_code",
                "bfd_is_undefined_symclass": "is_undefined_symclass",
                "cVar1": "is_undefined",
                "iVar3": "asprintf_result",
                "lVar6": "symbol_info",
                "param_1": "symbol",
                "param_2": "param",
                "pcVar8": "type_name",
                "piVar4": "errno_location",
                "print_formatted_error_message_001054d0": "print_formatted_error_message",
                "print_formatted_string_with_param_00104740": "print_formatted_with_param",
                "printf": "print",
                "uVar2": "sym_class",
                "uVar5": "error_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a66": {
            "additional_data": {
                "FUN_00103a66": {
                    "check_and_print_error": 1,
                    "check_and_print_error_message": 8,
                    "check_for_null_pointer": 1,
                    "check_if_data_empty": 1,
                    "check_if_data_invalid": 1,
                    "check_if_pointer_is_null": 11,
                    "check_if_pointer_is_valid": 3,
                    "check_if_valid_pointer": 1,
                    "check_is_null_pointer": 1,
                    "check_null_pointer": 2,
                    "check_validity_and_print_error": 1
                },
                "print_formatted_error_message_0010651a": {
                    "display_error_message": 3,
                    "print_error_message": 9,
                    "print_formatted_error_message": 1
                },
                "unaff_RBX": {
                    "address": 2,
                    "base_address": 6,
                    "data_address": 1,
                    "data_ptr": 2,
                    "input_pointer": 1,
                    "pointer": 9,
                    "pointer_address": 5,
                    "pointer_offset": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_to_memory": 1,
                    "rbx": 1
                }
            },
            "called": [
                "FUN_0010651a"
            ],
            "calling": [
                "FUN_001064b0"
            ],
            "code": "\nvoid check_if_pointer_is_null_00103a66(void)\n\n{\n  long pointer;\n  \n  if (*(long *)(pointer + 8) != 0) {\n    print_error_message();\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_if_pointer_is_null_00103a66",
            "entrypoint": "0x00103a66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a66": "check_if_pointer_is_null_00103a66",
                "print_formatted_error_message_0010651a": "print_error_message",
                "unaff_RBX": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "FUN_00103a78": {
                    "print_error": 7,
                    "print_error_code": 1,
                    "print_error_details": 1,
                    "print_error_info": 1,
                    "print_error_message": 21
                },
                "uVar1": {
                    "error_cause": 1,
                    "error_description": 2,
                    "error_message": 22,
                    "error_msg": 2,
                    "error_string": 1
                },
                "unaff_RBX": {
                    "error_code": 21,
                    "error_flag": 8,
                    "file_descriptor": 1,
                    "unknown_cause": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00106540"
            ],
            "code": "\n\n\nvoid print_error_message_00103a78(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "print_error_message_00103a78",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ab9": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103ab9(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103ab9",
            "entrypoint": "0x00103ab9",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103ab9": "FUNC_00103ab9"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103aba": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103aba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103aba",
            "entrypoint": "0x00103aba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103aba": "FUNC_00103aba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abb": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abb(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abb",
            "entrypoint": "0x00103abb",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abb": "FUNC_00103abb"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abc": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abc",
            "entrypoint": "0x00103abc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abc": "FUNC_00103abc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abd": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abd(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abd",
            "entrypoint": "0x00103abd",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abd": "FUNC_00103abd"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abe": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103abe(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103abe",
            "entrypoint": "0x00103abe",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103abe": "FUNC_00103abe"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103abf": {
            "additional_data": {
                "DAT_0010b7a8": {
                    "symbol_line_size": 1
                },
                "DAT_0010b7e8": {
                    "is_undefined_symbol": 1
                },
                "FUN_00103abf": {
                    "print_symbol_info": 11,
                    "print_symbol_information": 7,
                    "print_symbol_table": 7,
                    "print_symbols": 3,
                    "print_symbols_info": 1,
                    "print_undefined_symbols": 2
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "get_translated_message": 1,
                    "translate_message": 1,
                    "translate_text": 1
                },
                "param_1": {
                    "binary_name": 7,
                    "executable_name": 4,
                    "file_name": 5,
                    "file_path": 2,
                    "filename": 3,
                    "library": 1,
                    "library_name": 4,
                    "module_name": 1,
                    "program_name": 2,
                    "source_file": 1,
                    "symbol_library_name": 1
                },
                "param_2": {
                    "binary_name": 1,
                    "file_name": 2,
                    "filename": 1,
                    "library_name": 5,
                    "object_file": 1,
                    "section_name": 1,
                    "symbol": 4,
                    "symbol_file_name": 1,
                    "symbol_location": 1,
                    "symbol_name": 13,
                    "symbol_table": 1
                },
                "pcVar1": {
                    "error_message": 1,
                    "format_string": 18,
                    "message": 2,
                    "message_format": 1,
                    "printf_format_string": 1,
                    "symbol_format": 5,
                    "symbol_info_format": 1,
                    "symbols_header": 1,
                    "title": 1
                },
                "pcVar2": {
                    "header_format": 1
                },
                "printf": {
                    "print_formatted_text": 1,
                    "print_message": 1
                }
            },
            "called": [
                "printf",
                "dcgettext"
            ],
            "calling": [],
            "code": "\nvoid print_symbol_info_00103abf(undefined8 binary_name,undefined8 symbol_name)\n\n{\n  char *format_string;\n  \n  format_string = \"\\n\\nUndefined symbols from %s[%s]:\\n\\n\";\n  if (DAT_0010b7e8 == 0) {\n    format_string = \"\\n\\nSymbols from %s[%s]:\\n\\n\";\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string,binary_name,symbol_name);\n  format_string = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 != 0x20) {\n    format_string = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  format_string = (char *)dcgettext(0,format_string,5);\n  printf(format_string);\n  return;\n}\n\n",
            "current_name": "print_symbol_info_00103abf",
            "entrypoint": "0x00103abf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103abf": "print_symbol_info_00103abf",
                "dcgettext": "translate_text",
                "param_1": "binary_name",
                "param_2": "symbol_name",
                "pcVar1": "format_string",
                "printf": "print_formatted_text"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b2b": {
            "additional_data": {
                "FUN_00103b2b": {
                    "print_debug_info": 2,
                    "print_debug_message": 2,
                    "print_if_condition_false": 1,
                    "print_if_condition_is_met": 1,
                    "print_if_data_available": 1,
                    "print_if_data_is_zero": 1,
                    "print_if_data_not_zero": 1,
                    "print_if_debug": 1,
                    "print_if_flag_clear": 1,
                    "print_if_flag_not_set": 1,
                    "print_if_flag_set": 2,
                    "print_if_not_disabled": 1,
                    "print_if_not_initialized": 1,
                    "print_if_not_reversed": 1,
                    "print_info": 1,
                    "print_log_message": 5,
                    "print_message": 8
                },
                "param_1": {
                    "category": 2,
                    "component": 1,
                    "component_name": 1,
                    "description": 1,
                    "function": 1,
                    "function_name": 2,
                    "header": 2,
                    "log_message": 1,
                    "log_source": 2,
                    "logger_name": 1,
                    "message": 7,
                    "message_header": 1,
                    "message_type": 3,
                    "module_name": 2,
                    "msg": 1,
                    "prefix": 1,
                    "source": 1,
                    "title": 1
                },
                "param_2": {
                    "attribute": 1,
                    "data": 1,
                    "description": 1,
                    "details": 1,
                    "error_message": 1,
                    "label": 1,
                    "log_message": 4,
                    "message": 9,
                    "message_body": 1,
                    "message_content": 2,
                    "parameter_value": 1,
                    "result": 1,
                    "sender": 1,
                    "source": 1,
                    "string": 1,
                    "suffix": 1,
                    "tag": 2,
                    "title": 1
                },
                "printf": {
                    "print_formatted_debug_info": 1,
                    "print_formatted_message": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [],
            "code": "\nvoid print_log_message_00103b2b(undefined8 message,undefined8 message)\n\n{\n  if (DAT_0010b818 == 0) {\n    printf(\"%s[%s]:\\n\",message,message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_log_message_00103b2b",
            "entrypoint": "0x00103b2b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b2b": "print_log_message_00103b2b",
                "param_1": "message",
                "param_2": "message",
                "printf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b49": {
            "additional_data": {
                "FUN_00103b49": {
                    "format_and_print_string": 1,
                    "print_formatted_message": 2,
                    "print_formatted_param": 2,
                    "print_formatted_parameter": 1,
                    "print_formatted_string": 14,
                    "print_formatted_string_param": 1,
                    "print_formatted_string_with_param": 10
                },
                "param_1": {
                    "format_string": 16,
                    "formatted_string": 3,
                    "message": 6,
                    "message_format": 1,
                    "param1": 1,
                    "string": 1,
                    "string_param": 2,
                    "string_parameter": 1
                },
                "param_2": {
                    "additional_argument": 2,
                    "additional_param": 2,
                    "data": 1,
                    "extra_param": 1,
                    "format_parameter": 1,
                    "formatting_param": 1,
                    "int_param": 1,
                    "param": 2,
                    "param2": 1,
                    "param_value": 9,
                    "parameter": 2,
                    "parameter_value": 2,
                    "value": 4,
                    "variable_argument": 1,
                    "variable_parameter": 1
                },
                "print_formatted_string_with_param_00104740": {
                    "print_formatted_string": 1,
                    "print_formatted_string_with_param": 1
                }
            },
            "called": [
                "FUN_00104740"
            ],
            "calling": [],
            "code": "\nvoid print_formatted_string_with_param_00103b49(undefined8 format_string,undefined8 param_value)\n\n{\n  print_formatted_string_with_param_00103b49(&DAT_0010712d,format_string,0,param_value);\n  return;\n}\n\n",
            "current_name": "print_formatted_string_with_param_00103b49",
            "entrypoint": "0x00103b49",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b49": "print_formatted_string_with_param_00103b49",
                "param_1": "format_string",
                "param_2": "param_value",
                "print_formatted_string_with_param_00104740": "print_formatted_string_with_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b5d": {
            "additional_data": {
                "FUN_00103b5d": {
                    "print_matching_formats": 31
                },
                "__format": {
                    "error_message": 1,
                    "error_msg": 2,
                    "error_msg_format": 1,
                    "format_message": 3,
                    "format_msg": 1,
                    "format_string": 17,
                    "format_string_msg": 1,
                    "message": 1,
                    "translated_format": 1,
                    "translation_string": 1
                },
                "_stderr": {
                    "standard_error": 4
                },
                "_stdout": {
                    "standard_output": 4
                },
                "fprintf": {
                    "print_formatted_output": 1
                },
                "free": {
                    "release_memory": 1
                },
                "param_1": {
                    "format_list": 6,
                    "format_strings": 16,
                    "formats": 9
                },
                "plVar2": {
                    "current_format": 22,
                    "current_format_string": 3,
                    "format_iterator": 1,
                    "format_ptr": 2
                },
                "uVar1": {
                    "data": 1,
                    "data_pointer": 2,
                    "default_format": 5,
                    "default_value": 2,
                    "error_code": 1,
                    "format_string": 4,
                    "global_var": 1,
                    "matching_format": 1,
                    "matching_formats": 4,
                    "matching_formats_msg": 1,
                    "saved_value": 2,
                    "translation_file": 1
                }
            },
            "called": [
                "fflush",
                "dcgettext",
                "free",
                "fputc",
                "fprintf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103b5d(long *format_strings)\n\n{\n  undefined8 default_format;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  default_format = DAT_0010b820;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,default_format);\n  for (current_format = format_strings; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(format_strings);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103b5d",
            "entrypoint": "0x00103b5d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b5d": "print_matching_formats_00103b5d",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fprintf": "print_formatted_output",
                "free": "release_memory",
                "param_1": "format_strings",
                "plVar2": "current_format",
                "uVar1": "default_format"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bec": {
            "additional_data": {
                "FUN_00103bec": {
                    "compare_and_validate_strings": 1,
                    "validate_and_compare_strings": 19,
                    "validate_and_get_data": 1,
                    "validate_and_prepare_data": 1,
                    "validate_and_prepare_result": 1,
                    "validate_and_return_comparison_result": 1,
                    "validate_and_return_error_code": 2,
                    "validate_and_return_result": 4,
                    "validate_strings": 1
                },
                "auVar2": {
                    "output": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_data": 3,
                    "output_value": 1,
                    "prepared_data": 1,
                    "result": 10,
                    "result_array": 1,
                    "return_value": 6,
                    "reversed_result": 1
                },
                "compare_and_validate_strings_00105050": {
                    "compare_and_validate_strings": 1
                },
                "iVar1": {
                    "comparison_result": 26,
                    "error_code": 2,
                    "string_comparison_result": 1
                },
                "in_RAX": {
                    "input_data": 1,
                    "input_pointer": 1,
                    "input_string": 7,
                    "input_value": 9,
                    "result": 7,
                    "result_ptr": 1,
                    "return_value": 2,
                    "string_address": 1,
                    "validated_string_pointer": 1
                }
            },
            "called": [
                "FUN_00105050"
            ],
            "calling": [],
            "code": "\nundefined  [16] compare_and_validate_strings_00103bec(void)\n\n{\n  int comparison_result;\n  undefined8 input_value;\n  undefined result [16];\n  \n  comparison_result = compare_and_validate_strings_00103bec();\n  result._0_4_ = -comparison_result;\n  result._4_4_ = 0;\n  result._8_8_ = input_value;\n  return result;\n}\n\n",
            "current_name": "compare_and_validate_strings_00103bec",
            "entrypoint": "0x00103bec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bec": "compare_and_validate_strings_00103bec",
                "auVar2": "result",
                "compare_and_validate_strings_00105050": "compare_and_validate_strings",
                "iVar1": "comparison_result",
                "in_RAX": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bf6": {
            "additional_data": {
                "FUN_00103bf6": {
                    "calculate_difference": 1,
                    "compare_and_adjust_result": 1,
                    "compare_and_initialize": 1,
                    "compare_and_negate": 1,
                    "compare_and_negate_value": 1,
                    "compare_and_return": 2,
                    "compare_and_return_inverse": 3,
                    "compare_and_return_negated_result": 1,
                    "compare_and_return_negative": 3,
                    "compare_and_return_negative_result": 1,
                    "compare_and_return_result": 14,
                    "compare_strings_and_negate": 1,
                    "string_comparison": 1
                },
                "auVar2": {
                    "adjusted_result": 1,
                    "modified_return_value": 1,
                    "output_array": 1,
                    "result": 7,
                    "result_array": 3,
                    "result_container": 1,
                    "result_data": 1,
                    "result_variable": 1,
                    "return_value": 8,
                    "reversed_result": 2
                },
                "compare_strings_00104fa0": {
                    "compare_strings": 1
                },
                "iVar1": {
                    "comparison_result": 22,
                    "string_comparison_result": 9
                },
                "in_RAX": {
                    "comparison_input": 1,
                    "input": 1,
                    "input_value": 16,
                    "input_variable": 1,
                    "original_undefined_value": 1,
                    "original_value": 2,
                    "result": 1
                }
            },
            "called": [
                "FUN_00104fa0"
            ],
            "calling": [],
            "code": "\nundefined  [16] compare_and_return_negative_result_00103bf6(void)\n\n{\n  int comparison_result;\n  undefined8 input_value;\n  undefined return_value [16];\n  \n  comparison_result = compare_strings();\n  return_value._0_4_ = -comparison_result;\n  return_value._4_4_ = 0;\n  return_value._8_8_ = input_value;\n  return return_value;\n}\n\n",
            "current_name": "compare_and_return_negative_result_00103bf6",
            "entrypoint": "0x00103bf6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bf6": "compare_and_return_negative_result_00103bf6",
                "auVar2": "return_value",
                "compare_strings_00104fa0": "compare_strings",
                "iVar1": "comparison_result",
                "in_RAX": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c00": {
            "additional_data": {
                "FUN_00103c00": {
                    "decompile_and_improve": 1,
                    "extract_relocation_information": 1,
                    "extract_relocs": 1,
                    "initialize_relocation": 1,
                    "process_relocation": 7,
                    "relocate_and_initialize": 1,
                    "relocate_function": 1,
                    "set_reloc_values": 1,
                    "update_memory_and_return": 1,
                    "update_reloc_info": 1,
                    "update_reloc_table": 1,
                    "update_relocated_data": 1,
                    "update_relocation": 5,
                    "update_relocation_data": 2,
                    "update_relocation_info": 2,
                    "update_relocation_information": 1,
                    "update_relocation_table": 1,
                    "update_relocations": 1
                },
                "auVar2": {
                    "au_var2": 1,
                    "aux_data": 1,
                    "auxiliary_data": 1,
                    "auxiliary_var": 6,
                    "auxiliary_variable": 2,
                    "auxillary_data": 1,
                    "buffer": 1,
                    "new_reloc_array_element": 1,
                    "new_reloc_info": 1,
                    "new_reloc_value": 1,
                    "reloc_data": 2,
                    "reloc_temp": 1,
                    "relocated_value": 1,
                    "temp": 3,
                    "temp_array": 2,
                    "temp_buffer": 1,
                    "temp_var": 1,
                    "temporary_array": 1,
                    "updated_data": 2,
                    "var2": 1
                },
                "lVar3": {
                    "bound": 1,
                    "length": 1,
                    "new_reloc_size": 1,
                    "reloc_bounds": 1,
                    "reloc_size": 3,
                    "reloc_upper_bound": 8,
                    "size_bound": 1,
                    "temp_long": 1,
                    "upper_bound": 14
                },
                "param_1": {
                    "bfd_handle": 1,
                    "binary": 1,
                    "binary_data": 3,
                    "binary_file": 1,
                    "binary_path": 1,
                    "file_ptr": 1,
                    "input": 3,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_file": 2,
                    "input_obj": 1,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "inputs": 1,
                    "memory": 1,
                    "object_file": 1,
                    "param": 1,
                    "param_ptr": 2,
                    "reloc_config": 1,
                    "reloc_data": 1,
                    "reloc_info": 1
                },
                "param_2": {
                    "address": 3,
                    "base_address": 2,
                    "data_length": 1,
                    "offset": 1,
                    "param_size": 1,
                    "param_value": 2,
                    "reloc_address": 2,
                    "reloc_data": 3,
                    "reloc_entry": 1,
                    "reloc_offset": 1,
                    "reloc_size": 1,
                    "relocation": 1,
                    "relocation_addr": 1,
                    "relocation_address": 1,
                    "relocation_data": 1,
                    "relocation_info": 1,
                    "relocation_offset": 1,
                    "relocation_pointer": 1,
                    "relocation_size": 1,
                    "relocation_table_size": 1,
                    "size": 1,
                    "symbol_address": 1,
                    "symbol_value": 1,
                    "value": 1
                },
                "param_3": {
                    "memory_info": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_ptr": 2,
                    "reloc_array": 2,
                    "reloc_data": 1,
                    "reloc_info": 8,
                    "reloc_table": 1,
                    "relocated_data": 1,
                    "relocation_data": 3,
                    "relocation_info": 5,
                    "relocation_output": 1,
                    "relocation_table": 2,
                    "relocs": 1
                },
                "param_4": {
                    "data_1": 1,
                    "input_1": 1,
                    "input_param_4": 1,
                    "param4": 3,
                    "param_4": 13,
                    "unknown_param": 1,
                    "unknown_param1": 1,
                    "unused1": 2,
                    "unused_param": 3,
                    "unused_parameter": 1,
                    "value1": 1,
                    "var4": 2,
                    "var_4": 1
                },
                "param_5": {
                    "data_2": 1,
                    "input_2": 1,
                    "output": 1,
                    "output_param_5": 1,
                    "param5": 3,
                    "param_5": 11,
                    "return_value": 6,
                    "unknown_param2": 1,
                    "unused2": 2,
                    "value2": 1,
                    "var5": 2,
                    "var_5": 1
                },
                "print_error_message_and_exit_00106530": {
                    "print_error_and_exit": 2,
                    "print_error_message_and_exit": 2
                },
                "puVar1": {
                    "alloc_ptr": 1,
                    "array_ptr": 1,
                    "new_reloc": 1,
                    "new_reloc_data": 1,
                    "output_data_ptr": 1,
                    "output_ptr_2": 1,
                    "ptr1": 2,
                    "realloc_ptr": 1,
                    "reloc_addr": 1,
                    "reloc_address_ptr": 1,
                    "reloc_base": 1,
                    "reloc_buffer": 1,
                    "reloc_data_ptr": 3,
                    "reloc_dest_ptr": 1,
                    "reloc_entry": 1,
                    "reloc_ptr": 7,
                    "reloc_ptr1": 1,
                    "reloc_ptr_1": 1,
                    "relocation_buffer": 1,
                    "relocation_ptr": 1,
                    "target_pointer": 1,
                    "temp_ptr": 1
                },
                "uVar4": {
                    "alloc_mem": 1,
                    "allocated_buffer": 2,
                    "allocated_mem": 3,
                    "allocated_memory": 11,
                    "allocated_reloc": 3,
                    "allocation_ptr": 1,
                    "malloc_result": 2,
                    "malloced_reloc_ptr": 1,
                    "reloc_buffer": 1,
                    "reloc_src_ptr": 1,
                    "temp1": 2,
                    "temp_var1": 1,
                    "var6": 1,
                    "xmalloc_result": 1
                },
                "uVar5": {
                    "bfd_canonicalize_result": 1,
                    "canon_reloc": 1,
                    "canonical_reloc": 1,
                    "canonicalize_result": 1,
                    "canonicalized_data": 1,
                    "canonicalized_reloc": 18,
                    "canonicalized_reloc_ptr": 1,
                    "reloc_canonicalized": 1,
                    "reloc_ptr": 1,
                    "relocated_data": 1,
                    "temp2": 2,
                    "temp_var2": 1,
                    "var7": 1
                },
                "uft_canonicalize_reloc": {
                    "canonicalize_reloc": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "bfd_get_reloc_upper_bound",
                "FUN_00106530",
                "bfd_canonicalize_reloc",
                "xmalloc"
            ],
            "calling": [
                "FUN_00103238"
            ],
            "code": "\nundefined8\nupdate_reloc_info_00103c00(undefined8 *input,long reloc_data,undefined (*reloc_info) [16],undefined8 param_4,\n            undefined8 param_5)\n\n{\n  undefined8 *reloc_ptr;\n  undefined auxiliary_var [16];\n  long upper_bound;\n  undefined8 allocated_memory;\n  undefined8 canonicalized_reloc;\n  \n  **(long **)*reloc_info = reloc_data;\n  if ((*(byte *)(reloc_data + 0x24) & 4) == 0) {\n    **(undefined8 **)(*reloc_info + 8) = 0;\n    **(undefined8 **)reloc_info[1] = 0;\n  }\n  else {\n    upper_bound = bfd_get_reloc_upper_bound();\n    if (-1 < upper_bound) {\n      reloc_ptr = *(undefined8 **)(*reloc_info + 8);\n      allocated_memory = xmalloc(upper_bound);\n      canonicalized_reloc = *(undefined8 *)(reloc_info[1] + 8);\n      *reloc_ptr = allocated_memory;\n      reloc_ptr = *(undefined8 **)reloc_info[1];\n      canonicalized_reloc = bfd_canonicalize_reloc(input,reloc_data,**(undefined8 **)(*reloc_info + 8),canonicalized_reloc);\n      *reloc_ptr = canonicalized_reloc;\n      if (-1 < **(long **)reloc_info[1]) goto LAB_00103c7c;\n    }\n    print_error_and_exit(*input);\n  }\nLAB_00103c7c:\n  upper_bound = *(long *)(*reloc_info + 8) + 8;\n  *(long *)reloc_info[1] = *(long *)reloc_info[1] + 8;\n  auxiliary_var._8_4_ = (int)upper_bound;\n  auxiliary_var._0_8_ = *(long *)*reloc_info + 8;\n  auxiliary_var._12_4_ = (int)((ulong)upper_bound >> 0x20);\n  *reloc_info = auxiliary_var;\n  return param_5;\n}\n\n",
            "current_name": "update_reloc_info_00103c00",
            "entrypoint": "0x00103c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c00": "update_reloc_info_00103c00",
                "auVar2": "auxiliary_var",
                "lVar3": "upper_bound",
                "param_1": "input",
                "param_2": "reloc_data",
                "param_3": "reloc_info",
                "print_error_message_and_exit_00106530": "print_error_and_exit",
                "puVar1": "reloc_ptr",
                "uVar4": "allocated_memory",
                "uVar5": "canonicalized_reloc",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ca0": {
            "additional_data": {
                "FUN_00103ca0": {
                    "display_symbol_info": 1,
                    "display_usage": 2,
                    "display_usage_information": 1,
                    "print_symbol_info": 2,
                    "print_symbol_information": 3,
                    "print_symbol_list": 6,
                    "print_symbol_options": 5,
                    "print_symbols": 1,
                    "print_symbols_info": 1,
                    "print_symbols_usage": 3,
                    "print_usage": 5,
                    "print_usage_information": 1
                },
                "__ptr": {
                    "pointer_array": 1,
                    "pointer_variable1": 1,
                    "ptr_array": 2,
                    "target_list": 26,
                    "targets": 1
                },
                "bfd_target_list": {
                    "target_list": 1
                },
                "dcgettext": {
                    "get_localized_message": 1
                },
                "exit": {
                    "exit_program": 1
                },
                "fprintf": {
                    "write_formatted": 1
                },
                "fputc": {
                    "write_character": 1
                },
                "free": {
                    "release_memory": 1
                },
                "iVar2": {
                    "fprintf_result": 2,
                    "index_var1": 1,
                    "int_var": 1,
                    "int_variable1": 1,
                    "integer_var1": 1,
                    "num_chars": 1,
                    "print_result": 1,
                    "symbol_count": 1,
                    "symbol_length": 1,
                    "total_characters_printed": 1,
                    "total_chars": 3,
                    "total_chars_printed": 5,
                    "total_chars_written": 2,
                    "total_length": 5,
                    "total_output_length": 1,
                    "total_symbols": 1,
                    "total_symbols_printed": 1,
                    "total_written": 2
                },
                "iVar3": {
                    "char_count": 1,
                    "characters_printed": 1,
                    "chars_printed": 6,
                    "chars_written": 2,
                    "current_length": 2,
                    "current_output_length": 1,
                    "current_symbol_printed": 1,
                    "current_written": 1,
                    "fprintf_result": 1,
                    "fprintf_result2": 2,
                    "index_var2": 1,
                    "int_var2": 1,
                    "int_variable2": 1,
                    "integer_var2": 1,
                    "length": 2,
                    "num_chars2": 1,
                    "printed_count": 1,
                    "symbol_chars_written": 1,
                    "symbol_length": 2,
                    "symbol_printed": 1,
                    "total_length": 1
                },
                "lVar1": {
                    "default_target": 3,
                    "language": 1,
                    "language_id": 1,
                    "language_var": 1,
                    "language_variable": 2,
                    "language_variant1": 1,
                    "language_version": 1,
                    "message_id": 1,
                    "message_pointer": 1,
                    "supported_targets": 1,
                    "target": 2,
                    "target_format": 2,
                    "target_name": 13,
                    "target_platform": 1
                },
                "lVar5": {
                    "current_char_index": 3,
                    "current_char_pos": 1,
                    "current_index": 1,
                    "index": 9,
                    "iteration_count": 1,
                    "language_variant2": 1,
                    "length": 1,
                    "length_of_string": 1,
                    "local_counter": 1,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_variable": 1,
                    "loop_counter": 2,
                    "loop_variable": 1,
                    "space_count": 2,
                    "spaces_count": 1,
                    "start_index": 1,
                    "var1": 1
                },
                "local_3c": {
                    "character_count": 1,
                    "extra_chars": 1,
                    "local_var": 1,
                    "local_var_3c": 1,
                    "local_variable": 9,
                    "num_spaces": 1,
                    "number_of_spaces": 1,
                    "padding": 2,
                    "padding_length": 1,
                    "space_count": 5,
                    "space_length": 1,
                    "space_offset": 1,
                    "spaces": 1,
                    "spaces_to_skip": 1,
                    "special_symbol_index": 1,
                    "start_index": 1
                },
                "param_1": {
                    "file": 8,
                    "file_pointer": 4,
                    "file_stream": 2,
                    "output_file": 17
                },
                "param_2": {
                    "error_code": 5,
                    "exit_code": 25,
                    "exit_status": 1
                },
                "pcVar4": {
                    "locale_string": 1,
                    "localized_string": 5,
                    "localized_text": 2,
                    "message": 13,
                    "print_string": 1,
                    "string_var": 1,
                    "string_variable1": 1,
                    "symbol": 1,
                    "text": 6
                },
                "pcVar9": {
                    "delimiter": 15,
                    "separator": 13,
                    "string_variable2": 1,
                    "temp_string_var": 1,
                    "var_string": 1
                },
                "plVar7": {
                    "current_target": 6,
                    "list_iterator": 1,
                    "p_target": 1,
                    "pl_var_array": 1,
                    "pointer_list": 1,
                    "pointer_variable2": 1,
                    "ptr_target": 2,
                    "ptr_target_list": 1,
                    "ptr_to_target": 3,
                    "ptr_var": 1,
                    "target": 2,
                    "target_iterator": 1,
                    "target_list_item": 1,
                    "target_list_pointer": 1,
                    "target_list_ptr": 1,
                    "target_pointer": 4,
                    "target_ptr": 3
                },
                "ppcVar8": {
                    "char_ptr_ptr": 1,
                    "current_demangler": 1,
                    "demangler": 6,
                    "demangler_iterator": 1,
                    "demangler_list": 2,
                    "demangler_options": 1,
                    "demangler_ptr": 1,
                    "demanglers": 4,
                    "demanglers_list": 1,
                    "double_pointer_variable": 1,
                    "libiberty_demanglers": 1,
                    "mangler_list": 1,
                    "p_demangler": 1,
                    "plugin_iterator": 1,
                    "pointer_to_pointers": 1,
                    "pp_target": 1,
                    "ptr_demangler": 2,
                    "ptr_demanglers": 1,
                    "ptr_to_demangler": 1,
                    "string_array": 1
                },
                "sVar6": {
                    "length": 1,
                    "name_length": 2,
                    "option_length": 1,
                    "size_var": 2,
                    "size_variable": 1,
                    "str_len": 1,
                    "str_length": 1,
                    "string_length": 13,
                    "string_size": 1,
                    "symbol_length": 7,
                    "text_length": 1
                },
                "strlen": {
                    "string_length": 1
                }
            },
            "called": [
                "exit",
                "strlen",
                "fseek",
                "FUN_00102450",
                "dcgettext",
                "free",
                "fputc",
                "fprintf",
                "bfd_target_list"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid print_symbols_usage_00103ca0(FILE *output_file,int exit_code)\n\n{\n  long target_name;\n  int total_length;\n  int chars_printed;\n  char *message;\n  long index;\n  size_t strlen;\n  long *bfd_target_list;\n  long *current_target;\n  char **demangler;\n  char *delimiter;\n  uint local_variable;\n  \n  target_name = DAT_0010b820;\n  message = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(output_file,message,target_name);\n  message = (char *)dcgettext(0,\" List symbols in [file(s)] (a.out by default).\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -a, --debug-syms       Display debugger-only symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -A, --print-file-name  Print name of the input file before every symbol\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -B                     Same as --format=bsd\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -C, --demangle[=STYLE] Decode mangled/processed symbol names\\n\",5)\n  ;\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"                           STYLE can be \",5);\n  if (*message == ' ') {\n    target_name = 1;\n    do {\n      index = target_name;\n      target_name = index + 1;\n    } while (message[index] == ' ');\n    local_variable = (uint)index;\n  }\n  else {\n    local_variable = 0;\n  }\n  total_length = fprintf(output_file,\"%s\",message);\n  delimiter = \"\";\n  for (demangler = (char **)&libiberty_demanglers; *demangler != (char *)0x0; demangler = demangler + 3) {\n    string_length = string_length(*demangler);\n    if (0x4a < (long)total_length + string_length) {\n      fprintf(output_file,\"%.1s\\n\",delimiter);\n      delimiter = \"\";\n      total_length = fprintf(output_file,\"%.*s\",(ulong)local_variable,message);\n    }\n    chars_printed = fprintf(output_file,\"%s\\\"%s\\\"\",delimiter,*demangler);\n    total_length = total_length + chars_printed;\n    delimiter = \", \";\n  }\n  fputc(10,output_file);\n  message = (char *)dcgettext(0,\"      --no-demangle      Do not demangle low-level symbol names\\n\",5\n                            );\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"      --recurse-limit    Enable a demangling recursion limit.  (default)\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"      --no-recurse-limit Disable a demangling recursion limit.\\n\",5)\n  ;\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -e                     (ignored)\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd\\',\\n                           `sysv\\', `posix\\' or \\'just-symbols\\'.\\n                           The default is `bsd\\'\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -g, --extern-only      Display only external symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -j, --just-symbols     Same as --format=just-symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -l, --line-numbers     Use debugging information to find a filename and\\n                           line number for each symbol\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -n, --numeric-sort     Sort symbols numerically by address\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -o                     Same as -A\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -p, --no-sort          Do not sort the symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -P, --portability      Same as --format=posix\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -r, --reverse-sort     Reverse the sense of the sort\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"      --plugin NAME      Load the specified plugin\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -S, --print-size       Print size of defined symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -s, --print-armap      Include index for symbols from archive members\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"      --size-sort        Sort symbols by size\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"      --special-syms     Include special symbols in the output\\n\",5)\n  ;\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"      --synthetic        Display synthetic symbols as well\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -t, --radix=RADIX      Use RADIX for printing symbol values\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"      --target=BFDNAME   Specify the target object format as BFDNAME\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -u, --undefined-only   Display only undefined symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -U, --defined-only     Display only defined symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"      --unicode={default|show|invalid|hex|escape|highlight}\\n                         Specify how to treat UTF-8 encoded unicode characters\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -W, --no-weak          Ignore weak symbols\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"      --with-symbol-versions  Display version strings after symbol names\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -X 32_64               (ignored)\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  @FILE                  Read options from FILE\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -h, --help             Display this information\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\"  -V, --version          Display this program\\'s version number\\n\",5\n                            );\n  fprintf(output_file,message);\n  target_name = DAT_0010b820;\n  if (DAT_0010b820 == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target_name);\n  }\n  target_list = (long *)target_list();\n  current_target = target_list;\n  while( true ) {\n    target_name = *current_target;\n    current_target = current_target + 1;\n    if (target_name == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_code == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_symbols_usage_00103ca0",
            "entrypoint": "0x00103ca0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ca0": "print_symbols_usage_00103ca0",
                "__ptr": "target_list",
                "bfd_target_list": "target_list",
                "dcgettext": "get_localized_message",
                "exit": "exit_program",
                "fprintf": "write_formatted",
                "fputc": "write_character",
                "free": "release_memory",
                "iVar2": "total_length",
                "iVar3": "chars_printed",
                "lVar1": "target_name",
                "lVar5": "index",
                "local_3c": "local_variable",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar4": "message",
                "pcVar9": "delimiter",
                "plVar7": "current_target",
                "ppcVar8": "demangler",
                "sVar6": "string_length",
                "strlen": "string_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104370": {
            "additional_data": {
                "FUN_00104370": {
                    "initialize_data": 1,
                    "initialize_data_format": 1,
                    "initialize_output": 1,
                    "initialize_output_data": 1,
                    "initialize_output_format": 21,
                    "initialize_output_parameters": 2,
                    "initialize_param_data": 1,
                    "parse_output_format": 1,
                    "process_output_format": 2
                },
                "param_1": {
                    "format": 3,
                    "format_code": 2,
                    "format_identifier": 3,
                    "format_specifier": 1,
                    "format_type": 4,
                    "input": 1,
                    "input_format": 1,
                    "output_format": 16
                },
                "param_2": {
                    "data": 8,
                    "data_size": 1,
                    "file": 1,
                    "file_name": 2,
                    "file_path": 1,
                    "input_data": 1,
                    "param": 2,
                    "param_data": 13,
                    "param_data_address": 1,
                    "parameter": 1
                },
                "ppuVar2": {
                    "data_parameters": 1,
                    "initialized_data": 16,
                    "initialized_param": 1,
                    "initialized_param_data": 6,
                    "initialized_parameters": 1,
                    "param_data": 2,
                    "result": 3,
                    "result_ptr": 1
                },
                "uVar1": {
                    "error_message": 29,
                    "error_msg": 2
                }
            },
            "called": [
                "caseD_4a",
                "FUN_00104397",
                "FUN_00106300",
                "dcgettext"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nundefined ** initialize_output_format_00104370(undefined *output_format,undefined8 param_data)\n\n{\n  undefined8 error_message;\n  undefined **initialized_data;\n  \n  switch(*output_format) {\n  case 0x42:\n  case 0x62:\n    DAT_0010b7c0 = 0;\n    PTR_PTR_FUN_0010b260 = (undefined *)&PTR_FUN_0010ace0;\n    return &PTR_FUN_0010ace0;\n  default:\n    error_message = dcgettext(0,\"%s: invalid output format\",5);\n    print_formatted_error_message_00106300(error_message,output_format);\n    error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n    print_error_with_formatted_message_00106400(error_message);\n    return (undefined **)0x0;\n  case 0x4a:\n  case 0x6a:\n    initialized_data = (undefined **)initialize_param_data_00104397(output_format,param_data,3);\n    return initialized_data;\n  case 0x50:\n  case 0x70:\n    initialized_data = (undefined **)initialize_param_data_00104397(output_format,param_data,2);\n    return initialized_data;\n  case 0x53:\n  case 0x73:\n    initialized_data = (undefined **)initialize_param_data_00104397(output_format,param_data,1);\n    return initialized_data;\n  }\n}\n\n",
            "current_name": "initialize_output_format_00104370",
            "entrypoint": "0x00104370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104370": "initialize_output_format_00104370",
                "param_1": "output_format",
                "param_2": "param_data",
                "ppuVar2": "initialized_data",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104397": {
            "additional_data": {
                "DAT_0010b7c0": {
                    "dat_value": 1,
                    "data_variable": 1,
                    "param3_size": 1,
                    "param_value": 2
                },
                "FUN_00104397": {
                    "configure_settings": 1,
                    "initialize_data": 6,
                    "initialize_param": 7,
                    "initialize_param_data": 1,
                    "initialize_parameter": 3,
                    "initialize_pointer": 3,
                    "initialize_variable": 1,
                    "set_dat_value": 1,
                    "set_param_and_pointer": 2,
                    "set_param_for_function": 1,
                    "set_param_value": 1,
                    "set_pointer_and_value": 1,
                    "update_data": 1,
                    "update_param_and_ptr": 1,
                    "update_param_pointer": 1
                },
                "PTR_FUN_0010ace0": {
                    "fun_array": 1,
                    "func_pointer": 1,
                    "function_pointer": 4,
                    "initial_pointer": 1
                },
                "PTR_PTR_FUN_0010b260": {
                    "function_pointer_array": 1,
                    "pointer_array": 1,
                    "pointer_to_func_pointer": 1,
                    "pointer_to_function_pointer": 1,
                    "ptr_fun_array": 1
                },
                "param_1": {
                    "address1": 1,
                    "arg1": 5,
                    "argument1": 1,
                    "data1": 1,
                    "data_pointer1": 3,
                    "data_struct1": 1,
                    "first_argument": 1,
                    "input1": 1,
                    "new_value1": 1,
                    "param1": 7,
                    "param_1": 1,
                    "param_value": 1,
                    "param_value_1": 1,
                    "pointer1": 3,
                    "value1": 3
                },
                "param_2": {
                    "address2": 1,
                    "arg2": 5,
                    "argument2": 1,
                    "data2": 1,
                    "data_pointer2": 3,
                    "data_struct2": 1,
                    "input2": 1,
                    "new_value2": 1,
                    "param2": 7,
                    "param_2": 1,
                    "param_value_2": 1,
                    "pointer2": 3,
                    "ptr_value": 1,
                    "second_argument": 1,
                    "value2": 3
                },
                "param_3": {
                    "count": 1,
                    "data_index": 1,
                    "data_size": 2,
                    "data_value": 1,
                    "index": 4,
                    "initial_value": 1,
                    "input_value": 1,
                    "new_value": 1,
                    "param": 1,
                    "param3": 5,
                    "param_3": 1,
                    "param_count": 1,
                    "param_index": 2,
                    "param_value": 3,
                    "parameter_index": 1,
                    "set_param_value": 1,
                    "setting_index": 1,
                    "size": 2,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "caseD_4a",
                "FUN_00104370"
            ],
            "code": "\nvoid initialize_param_data_00104397(undefined8 param1,undefined8 param2,int param3)\n\n{\n  DAT_0010b7c0 = param3;\n  PTR_PTR_FUN_0010b260 = (undefined *)(&PTR_FUN_0010ace0 + (long)param3 * 5);\n  return;\n}\n\n",
            "current_name": "initialize_param_data_00104397",
            "entrypoint": "0x00104397",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104397": "initialize_param_data_00104397",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001043d0": {
            "additional_data": {
                "DAT_0010b7b0": {
                    "flag5": 1
                },
                "DAT_0010b7b8": {
                    "flag4": 1
                },
                "DAT_0010b7d0": {
                    "flag1": 1
                },
                "DAT_0010b804": {
                    "flag2": 1
                },
                "FUN_001043d0": {
                    "check_and_process_file": 8,
                    "check_and_process_object_file": 1,
                    "check_file": 10,
                    "check_file_and_print_warnings": 1,
                    "check_file_and_process": 7,
                    "check_file_properties": 2,
                    "check_file_stats": 1,
                    "validate_file": 1
                },
                "PTR_PTR_FUN_0010b260": {
                    "function_table_ptr": 1
                },
                "_DAT_0010b7f0": {
                    "flag3": 1
                },
                "cVar1": {
                    "check_format": 1,
                    "check_result": 6,
                    "format_check": 6,
                    "format_check_result": 10,
                    "format_match": 2,
                    "format_matched": 1,
                    "format_status": 1,
                    "format_valid": 4
                },
                "iVar2": {
                    "error_check": 1,
                    "error_code": 1,
                    "result": 17,
                    "return_value": 2,
                    "stat_result": 5,
                    "status": 5
                },
                "lVar7": {
                    "archive_index": 4,
                    "archived_file_offset": 1,
                    "element_identifier": 1,
                    "file_offset": 2,
                    "index": 2,
                    "map_ent": 1,
                    "map_entry": 7,
                    "map_entry_index": 2,
                    "map_entry_offset": 2,
                    "map_index": 1,
                    "next_map_entry": 3,
                    "next_map_index": 1
                },
                "local_c8": {
                    "file_info": 8,
                    "file_stat": 13,
                    "file_stats": 6,
                    "file_status": 1
                },
                "param_1": {
                    "file_path": 19,
                    "filename": 11,
                    "filename_in": 1
                },
                "pcVar8": {
                    "error_description": 2,
                    "error_message": 3,
                    "error_msg": 1,
                    "error_reason": 13,
                    "error_str": 2,
                    "error_string": 6,
                    "str_error": 2
                },
                "piVar4": {
                    "err_num": 1,
                    "errno": 1,
                    "errno_location": 5,
                    "errno_location_result": 1,
                    "errno_ptr": 9,
                    "error": 4,
                    "error_location": 3,
                    "error_number": 2,
                    "error_pointer": 1,
                    "error_ptr": 4
                },
                "puVar10": {
                    "archived_file": 1,
                    "next_archive_descriptor": 1,
                    "prev_archived_file": 7,
                    "prev_archived_file_handle": 4,
                    "prev_file_handle": 1,
                    "previous_archived_file": 5,
                    "previous_archived_file_descriptor": 2,
                    "previous_archived_file_handle": 4,
                    "previous_file": 3,
                    "previous_file_descriptor": 1,
                    "previously_opened_file": 1
                },
                "puVar6": {
                    "bfd_file": 5,
                    "bfd_file_descriptor": 1,
                    "bfd_handle": 12,
                    "binary_file": 1,
                    "file_descriptor": 7,
                    "file_handle": 5
                },
                "puVar9": {
                    "archive_descriptor": 1,
                    "archived_file": 16,
                    "archived_file_descriptor": 2,
                    "archived_file_handle": 8,
                    "bfd_file": 1,
                    "current_file_descriptor": 1,
                    "file_handle": 1
                },
                "uVar3": {
                    "result": 6,
                    "return_val": 3,
                    "return_value": 11,
                    "success": 10,
                    "success_flag": 1
                },
                "uVar5": {
                    "err_msg": 1,
                    "error_message": 25,
                    "error_msg": 2,
                    "formatted_error_message": 1,
                    "message": 1,
                    "warning_message": 1
                }
            },
            "called": [
                "bfd_get_next_mapent",
                "FUN_001048e0",
                "strerror",
                "bfd_openr",
                "FUN_00103b5d",
                "printf",
                "stat",
                "FUN_00104670",
                "FUN_0010351b",
                "FUN_001062d0",
                "bfd_get_error",
                "bfd_openr_next_archived_file",
                "FUN_00106530",
                "FUN_00102670",
                "FUN_00104740",
                "__errno_location",
                "bfd_close",
                "dcgettext",
                "FUN_00106540",
                "bfd_check_format_matches",
                "FUN_00106400",
                "bfd_check_format",
                "FUN_0010249f"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nundefined4 check_and_process_object_file_001043d0(char *file_path)\n\n{\n  char format_check_result;\n  int result;\n  undefined4 return_value;\n  int *errno_ptr;\n  undefined8 error_message;\n  undefined8 *bfd_handle;\n  long map_entry;\n  char *error_reason;\n  undefined8 *archived_file;\n  undefined8 *prev_archived_file;\n  stat file_stat;\n  \n  if (file_path != (char *)0x0) {\n    result = stat(file_path,&file_stat);\n    if (result < 0) {\nLAB_00102522:\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        print_error_with_formatted_message_00106400(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        print_error_with_formatted_message_00106400(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      print_error_with_formatted_message_00106400(error_message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (file_stat.st_size < 0) {\n        error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        print_error_with_formatted_message_00106400(error_message,file_path);\n      }\n      else if (file_stat.st_size != 0) {\n        if (DAT_0010b7d0 == 0) {\n          bfd_handle = (undefined8 *)bfd_openr(file_path,\"plugin\");\n        }\n        else {\n          bfd_handle = (undefined8 *)bfd_openr(file_path);\n        }\n        if (bfd_handle != (undefined8 *)0x0) {\n          if (DAT_0010b804 != 0) {\n            *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x8000;\n          }\n          format_check_result = bfd_check_format(bfd_handle,2);\n          if (format_check_result == '\\0') {\n            return_value = bfd_check_format_matches(bfd_handle,1,&file_stat);\n            if ((char)return_value == '\\0') goto LAB_001025ac;\n            get_architecture_size_00104670(bfd_handle);\n            (**(code **)PTR_PTR_FUN_0010b260)(file_path);\n            reverse_and_process_lto_object_001048e0(bfd_handle,0);\n          }\n          else {\n            (**(code **)(PTR_PTR_FUN_0010b260 + 8))(*bfd_handle);\n            if ((_DAT_0010b7f0 != 0) &&\n               (map_entry = bfd_get_next_mapent(bfd_handle,0xffffffffffffffff,&file_stat), map_entry != -1)) {\n              error_reason = (char *)dcgettext(0,\"\\nArchive index:\\n\",5);\n              printf(error_reason);\n              do {\n                archived_file = (undefined8 *)(**(code **)(bfd_handle[1] + 0x1e0))(bfd_handle,map_entry);\n                if (archived_file == (undefined8 *)0x0) goto LAB_00102516;\n                if (*(long *)file_stat.st_dev != 0) {\n                  print_formatted_string_with_param_00104740(&DAT_0010712d,0,*(long *)file_stat.st_dev,bfd_handle);\n                  printf(\" in %s\\n\",*archived_file);\n                }\n                map_entry = bfd_get_next_mapent(bfd_handle,map_entry,&file_stat);\n              } while (map_entry != -1);\n            }\n            archived_file = (undefined8 *)0x0;\n            do {\n              do {\n                prev_archived_file = archived_file;\n                archived_file = (undefined8 *)bfd_openr_next_archived_file(bfd_handle,prev_archived_file);\n                if (archived_file == (undefined8 *)0x0) {\n                  result = bfd_get_error();\n                  if (result != 9) {\n                    print_error_message_and_exit_00106530(*bfd_handle);\nLAB_00102516:\n                    print_error_message_and_exit_00106530(\"bfd_get_elt_at_index\");\n                    goto LAB_00102522;\n                  }\n                  if (prev_archived_file != (undefined8 *)0x0) {\n                    bfd_close(prev_archived_file);\n                    _DAT_0010b7b8 = 0;\n                    _DAT_0010b7b0 = 0;\n                  }\n                  goto LAB_001044b4;\n                }\n                format_check_result = bfd_check_format_matches(archived_file,1,&file_stat);\n                if (format_check_result == '\\0') {\n                  print_error_message_00106540(*archived_file);\n                  result = bfd_get_error();\n                  if (result == 0xd) {\n                    print_matching_formats_00103b5d(file_stat.st_dev);\n                  }\n                }\n                else {\n                  get_architecture_size_00104670(archived_file);\n                  (**(code **)(PTR_PTR_FUN_0010b260 + 0x10))(*bfd_handle,*archived_file);\n                  reverse_and_process_lto_object_001048e0(archived_file,bfd_handle);\n                }\n              } while (prev_archived_file == (undefined8 *)0x0);\n              bfd_close(prev_archived_file);\n              _DAT_0010b7b8 = 0;\n              _DAT_0010b7b0 = 0;\n            } while (prev_archived_file != archived_file);\n          }\nLAB_001044b4:\n          return_value = 1;\n          while (format_check_result = bfd_close(bfd_handle), format_check_result == '\\0') {\n            print_error_message_and_exit_00106530(file_path);\nLAB_001025ac:\n            print_error_message_00106540(file_path);\n            result = bfd_get_error();\n            if (result == 0xd) {\n              print_matching_formats_00103b5d(file_stat.st_dev);\n            }\n          }\n          _DAT_0010b7b0 = 0;\n          _DAT_0010b7b8 = 0;\n          return return_value;\n        }\n        print_error_message_00106540(file_path);\n      }\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      print_error_with_formatted_message_00106400(error_message,file_path);\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_object_file_001043d0",
            "entrypoint": "0x001043d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001043d0": "check_and_process_object_file_001043d0",
                "cVar1": "format_check_result",
                "iVar2": "result",
                "lVar7": "map_entry",
                "local_c8": "file_stat",
                "param_1": "file_path",
                "pcVar8": "error_reason",
                "piVar4": "errno_ptr",
                "puVar10": "prev_archived_file",
                "puVar6": "bfd_handle",
                "puVar9": "archived_file",
                "uVar3": "return_value",
                "uVar5": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104670": {
            "additional_data": {
                "DAT_001071ca": {
                    "default_string2": 1,
                    "string2": 1,
                    "suffix8": 1
                },
                "DAT_001071cd": {
                    "default_string3": 1,
                    "string3": 1,
                    "suffix10": 1
                },
                "DAT_001071d0": {
                    "default_string1": 1,
                    "default_suffix": 1,
                    "string1": 1
                },
                "DAT_001071d7": {
                    "base_string": 1,
                    "prefix": 1,
                    "string4": 1
                },
                "DAT_0010b244": {
                    "arch_type": 1,
                    "constant2": 1,
                    "constant3": 1,
                    "constant_2": 2,
                    "constant_val_2": 1,
                    "constant_value": 1,
                    "constant_value2": 2,
                    "constant_value_2": 1,
                    "file_type_bit": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "some_value": 1,
                    "version_number": 1
                },
                "DAT_0010b7a0": {
                    "arch_details": 1,
                    "arch_result": 1,
                    "arch_string_storage": 1,
                    "architecture_info_var": 1,
                    "architecture_string": 1,
                    "concat_result": 2,
                    "concatenated_string": 4,
                    "file_suffix": 1,
                    "memory_block": 1,
                    "result": 1,
                    "suffix": 1,
                    "temp_variable": 1
                },
                "DAT_0010b7a8": {
                    "arch_size": 1,
                    "arch_size_data": 1,
                    "arch_size_global": 1,
                    "arch_size_value": 2,
                    "architecture_size": 6,
                    "architecture_size_var": 2,
                    "constant2": 1,
                    "current_architecture_size": 1,
                    "size": 1
                },
                "DAT_0010b7b8": {
                    "minimum_file_extension_length": 1
                },
                "DAT_0010b7c0": {
                    "arch_max": 1,
                    "constant": 2,
                    "constant1": 1,
                    "constant_1": 1,
                    "constant_val": 1,
                    "constant_value": 4,
                    "file_extension_length": 1,
                    "file_size": 1,
                    "length": 1,
                    "length_of_string": 1,
                    "limit_value": 1,
                    "min_string_length": 1
                },
                "FUN_00104670": {
                    "analyze_architecture": 1,
                    "determine_arch_size": 3,
                    "determine_architecture_size": 2,
                    "extract_architecture_bits": 1,
                    "extract_architecture_info": 1,
                    "get_arch_size": 4,
                    "get_arch_size_and_concat": 1,
                    "get_arch_size_and_format": 1,
                    "get_architecture": 1,
                    "get_architecture_size": 7,
                    "initialize_arch_size": 1,
                    "initialize_architecture_info": 1,
                    "process_architecture_info": 1,
                    "resolve_architecture_and_version": 1,
                    "set_architecture_size": 1,
                    "update_arch_size": 2
                },
                "iVar1": {
                    "arch_size": 13,
                    "architecture": 1,
                    "architecture_size": 6,
                    "buffer_size": 1,
                    "comparison_result": 3,
                    "new_arch_size": 1,
                    "result": 4,
                    "size": 1,
                    "size_value": 1
                },
                "param_1": {
                    "argument": 1,
                    "binary_file": 1,
                    "binary_file_path": 1,
                    "binary_file_ptr": 1,
                    "binary_path": 2,
                    "input": 12,
                    "input_1": 1,
                    "input_data": 3,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "param": 3,
                    "parameter": 1
                },
                "pcVar2": {
                    "arch_info": 1,
                    "arch_name": 1,
                    "arch_ptr": 1,
                    "arch_size_str": 1,
                    "arch_string": 2,
                    "arch_substring": 4,
                    "arch_type": 1,
                    "architecture_info": 1,
                    "architecture_ptr": 1,
                    "architecture_str": 1,
                    "architecture_string": 3,
                    "architecture_substring": 1,
                    "architecture_suffix": 1,
                    "architecture_type": 1,
                    "pointer_to_str64": 1,
                    "ptr64": 1,
                    "ptr_to_substring": 1,
                    "search_result": 2,
                    "str_match_result": 1,
                    "string_position": 1,
                    "string_to_search": 1,
                    "sub_string": 1,
                    "substring_ptr": 1,
                    "substring_result": 1
                },
                "pcVar4": {
                    "arch_code": 1,
                    "arch_flag": 1,
                    "arch_info": 1,
                    "arch_string": 2,
                    "arch_string_ptr": 1,
                    "arch_type_string": 1,
                    "binary_name": 2,
                    "file_extension": 1,
                    "file_type": 2,
                    "platform_subtype": 1,
                    "ptr_str": 1,
                    "ptr_to_character": 1,
                    "result": 1,
                    "search_result": 2,
                    "search_string": 6,
                    "str_ptr": 1,
                    "str_value": 1,
                    "sub_str_result": 1,
                    "substring": 2,
                    "supported_architecture": 1,
                    "variant_option": 1
                },
                "puVar3": {
                    "additional_string": 1,
                    "arch_string": 1,
                    "concat_param": 4,
                    "concat_ptr": 1,
                    "concat_str": 2,
                    "concat_target": 1,
                    "concatenated_string": 5,
                    "concatenation_res": 1,
                    "concatenation_string": 1,
                    "format_ptr": 1,
                    "format_string": 1,
                    "message": 1,
                    "output_pointer": 1,
                    "platform_suffix": 1,
                    "pointer": 1,
                    "pointer_to_string": 1,
                    "ptr": 1,
                    "ptr_str": 1,
                    "ptr_to_undefined": 1,
                    "string_literal": 1,
                    "suffix": 1,
                    "suffix_ptr": 1,
                    "version_string": 1
                }
            },
            "called": [
                "strcmp",
                "strstr",
                "bfd_get_arch_size",
                "concat",
                "free",
                "FUN_001025f5"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid get_architecture_size_00104670(long input)\n\n{\n  int arch_size;\n  char *arch_substring;\n  undefined *concatenated_string;\n  char *search_string;\n  \n  DAT_0010b7a8 = bfd_get_arch_size();\n  if (DAT_0010b7a8 == -1) {\n    search_string = **(char ***)(input + 8);\n    arch_substring = strstr(search_string,\"64\");\n    arch_size = 0x40;\n    if (arch_substring == (char *)0x0) {\n      arch_size = strcmp(search_string,\"mmo\");\n      arch_size = (-(uint)(arch_size == 0) & 0x20) + 0x20;\n    }\n    DAT_0010b7a8 = arch_size;\n    free(DAT_0010b7a0);\n  }\n  else {\n    free(DAT_0010b7a0);\n  }\n  if (DAT_0010b7c0 - 2U < 2) {\n    search_string = \"\";\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    search_string = \"08\";\n  }\n  else {\n    search_string = \"016\";\n  }\n  concatenated_string = &DAT_001071d0;\n  if (DAT_0010b244 != 0x10) {\n    if (DAT_0010b244 < 0x11) {\n      if (DAT_0010b244 == 8) {\n        concatenated_string = &DAT_001071ca;\n      }\n      else {\n        if (DAT_0010b244 != 10) {\n          DAT_0010b7a0 = (void *)concat(&DAT_001071d7,search_string,0,0);\n          return;\n        }\n        concatenated_string = &DAT_001071cd;\n      }\n    }\n    else {\n      concatenated_string = (undefined *)0x0;\n    }\n  }\n  DAT_0010b7a0 = (void *)concat(&DAT_001071d7,search_string,concatenated_string,0);\n  return;\n}\n\n",
            "current_name": "get_architecture_size_00104670",
            "entrypoint": "0x00104670",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104670": "get_architecture_size_00104670",
                "iVar1": "arch_size",
                "param_1": "input",
                "pcVar2": "arch_substring",
                "pcVar4": "search_string",
                "puVar3": "concatenated_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104740": {
            "additional_data": {
                "DAT_0010b234": {
                    "is_ptr_null": 1
                },
                "DAT_0010b248": {
                    "param_2_value": 1
                },
                "DAT_0010b790": {
                    "hex_string": 1
                },
                "DAT_0010b7e0": {
                    "is_flag_set": 1
                },
                "FUN_00104740": {
                    "print_formatted_string": 26,
                    "print_formatted_string_with_param": 1,
                    "print_string": 1,
                    "reverse_and_print_string": 1
                },
                "_DAT_0010b798": {
                    "hex_string_size": 1
                },
                "__ptr": {
                    "concatenated_string": 6,
                    "concatenated_string_ptr": 1,
                    "new_pointer": 2,
                    "new_ptr": 1,
                    "new_string_pointer": 2,
                    "new_string_ptr": 1,
                    "output_string": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "ptr_result": 1,
                    "ptr_to_undefined8_3": 1,
                    "ptr_var2": 1,
                    "reconstructed_string": 2,
                    "result": 2,
                    "result_pointer": 1,
                    "result_ptr": 3,
                    "result_string": 4
                },
                "__s": {
                    "char_pointer3": 1,
                    "char_ptr": 3,
                    "char_ptr2": 2,
                    "char_ptr3": 2,
                    "new_string": 1,
                    "str": 1,
                    "str2": 1,
                    "str_ptr2": 1,
                    "str_var_2": 1,
                    "string": 1,
                    "string_pointer2": 1,
                    "temp_string": 1
                },
                "__s_00": {
                    "char_pointer4": 1,
                    "char_ptr00": 1,
                    "char_ptr2": 2,
                    "char_ptr3": 2,
                    "char_ptr4": 1,
                    "new_string_pointer_00": 1,
                    "ptr_to_undefined8_4": 1,
                    "str2": 1,
                    "str3": 1,
                    "str_var_3": 1,
                    "string_pointer3": 1,
                    "temp_string": 1,
                    "temp_string2": 1
                },
                "acStack_39": {
                    "at_sign_buffer": 1,
                    "char_array": 7,
                    "stack_arr": 1,
                    "stack_array": 18,
                    "stack_str": 1,
                    "stack_variable": 1,
                    "temp_stack": 1
                },
                "bVar15": {
                    "byte3": 5,
                    "byte_3": 1,
                    "byte_flag": 2,
                    "byte_val3": 1,
                    "byte_value": 1,
                    "byte_var": 5,
                    "byte_var15": 4,
                    "byte_var3": 5,
                    "byte_var4": 1,
                    "byte_variable": 1,
                    "flag": 1,
                    "zero_byte": 1
                },
                "bVar2": {
                    "byte1": 13,
                    "byte_1": 2,
                    "byte_val1": 2,
                    "byte_var1": 5,
                    "byte_var2": 8,
                    "current_byte": 1
                },
                "bVar3": {
                    "byte2": 13,
                    "byte_2": 2,
                    "byte_val2": 2,
                    "byte_var2": 5,
                    "byte_var3": 8,
                    "next_byte": 1
                },
                "iVar4": {
                    "i_var": 1,
                    "index": 2,
                    "int_val": 2,
                    "int_value": 2,
                    "int_var": 12,
                    "int_var4": 8,
                    "int_variable": 1,
                    "is_tty": 2,
                    "variable1": 1
                },
                "lVar13": {
                    "bytes_to_print": 1,
                    "length": 1,
                    "long_val": 2,
                    "long_var": 18,
                    "long_var1": 1,
                    "long_var13": 2,
                    "long_variable": 1,
                    "temp_length": 1,
                    "temp_var3": 1
                },
                "param_1": {
                    "format_string": 30,
                    "string_format": 1
                },
                "param_2": {
                    "address_parameters": 1,
                    "arg_array": 1,
                    "base_pointer": 2,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "memory_location": 2,
                    "memory_params": 1,
                    "param_array": 5,
                    "param_list": 1,
                    "pointer1": 1,
                    "pointer_array": 4,
                    "ptr_arr_param": 1,
                    "ptr_list": 1,
                    "ptr_to_long": 2,
                    "string_params": 1,
                    "string_ptr": 1
                },
                "param_3": {
                    "custom_str": 1,
                    "demangle_string": 1,
                    "demangled_name": 1,
                    "demangled_string": 4,
                    "demangled_string_ptr": 1,
                    "format_string": 1,
                    "input_string": 1,
                    "name": 2,
                    "pointer2": 1,
                    "ptr_param": 1,
                    "ptr_to_undefined8": 2,
                    "string": 1,
                    "string_pointer": 3,
                    "string_ptr": 4,
                    "string_value": 1,
                    "symbol": 2,
                    "symbol_name": 1,
                    "type_name": 2
                },
                "param_4": {
                    "address": 1,
                    "arg": 1,
                    "arg4": 1,
                    "argument": 1,
                    "binary_address": 1,
                    "binary_ptr": 1,
                    "d": 1,
                    "demangle_flags": 1,
                    "function_address": 1,
                    "length": 5,
                    "long_value": 1,
                    "memory_address": 1,
                    "param": 1,
                    "param4": 3,
                    "param_4": 6,
                    "param_length": 1,
                    "param_value": 2,
                    "parameter": 1,
                    "value": 1
                },
                "pcVar6": {
                    "at_sign_ptr": 1,
                    "at_symbol_position": 1,
                    "at_symbol_ptr": 2,
                    "char_pointer": 4,
                    "char_pointer1": 1,
                    "char_ptr": 6,
                    "char_ptr1": 4,
                    "char_ptr6": 1,
                    "char_var": 1,
                    "char_var6": 3,
                    "character_ptr": 1,
                    "pointer2": 1,
                    "pointer_var2": 1,
                    "ptr_char1": 1,
                    "str1": 1,
                    "str_ptr": 1,
                    "string_pointer2": 1
                },
                "pcVar8": {
                    "char_pointer2": 4,
                    "char_ptr": 1,
                    "char_ptr2": 6,
                    "char_ptr8": 1,
                    "char_ptr_2": 1,
                    "char_var8": 3,
                    "pointer4": 1,
                    "pointer_var4": 1,
                    "ptr_char2": 1,
                    "str_ptr": 1,
                    "str_var": 1,
                    "string_pointer3": 1,
                    "temp_var": 1
                },
                "puVar1": {
                    "byte_ptr": 1,
                    "pointer1": 4,
                    "pointer3": 1,
                    "pointer_var1": 3,
                    "ptr": 2,
                    "ptr1": 7,
                    "ptr_1": 2,
                    "ptr_to_undefined8_1": 1,
                    "ptr_var1": 5,
                    "temp_pointer": 1,
                    "temp_ptr1": 4
                },
                "puVar11": {
                    "pointer": 2,
                    "pointer3": 2,
                    "pointer5": 2,
                    "pointer_var11": 1,
                    "pointer_var3": 1,
                    "pointer_var5": 1,
                    "ptr3": 4,
                    "ptr4": 1,
                    "ptr_3": 2,
                    "ptr_var11": 5,
                    "string_ptr": 1,
                    "temp_ptr3": 2,
                    "undefined_pointer": 2,
                    "undefined_ptr": 1,
                    "undefined_var_ptr": 1,
                    "unknown_ptr": 1
                },
                "puVar12": {
                    "current_string": 1,
                    "formatted_string": 1,
                    "new_ptr2": 1,
                    "pointer3": 1,
                    "pointer4": 2,
                    "pointer6": 2,
                    "pointer_var12": 1,
                    "pointer_var4": 1,
                    "pointer_var6": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr4": 2,
                    "ptr5": 1,
                    "ptr_4": 2,
                    "ptr_var12": 5,
                    "ptr_var3": 1,
                    "symbol_pointer": 1,
                    "temp_pointer": 1,
                    "temp_ptr3": 1,
                    "temp_ptr4": 2
                },
                "puVar7": {
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "output_string_ptr": 1,
                    "pointer2": 3,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer_var2": 1,
                    "pointer_var3": 1,
                    "pointer_var7": 1,
                    "ptr2": 6,
                    "ptr_2": 2,
                    "ptr_to_undefined8_2": 1,
                    "ptr_var": 1,
                    "ptr_var7": 5,
                    "result_ptr": 1,
                    "temp_ptr2": 4
                },
                "sVar5": {
                    "demangled_name_length": 1,
                    "length": 1,
                    "size": 15,
                    "size_var": 2,
                    "size_var5": 4,
                    "str_len": 2,
                    "string_length": 5,
                    "string_size": 1
                },
                "uVar10": {
                    "brace_char": 1,
                    "extra_var": 1,
                    "hex_value": 1,
                    "temp_var2": 2,
                    "u_var10": 1,
                    "ulong2": 1,
                    "ulong_val2": 1,
                    "ulong_var10": 4,
                    "ulong_var2": 10,
                    "ulong_var_2": 2,
                    "ulong_variable2": 1,
                    "undefined8_var": 2,
                    "undefined_var": 1,
                    "unknown_val": 1,
                    "unsigned_var2": 1
                },
                "uVar14": {
                    "hex_string_length": 1,
                    "num_bytes": 1,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "uint_val": 2,
                    "uint_var": 17,
                    "uint_var1": 1,
                    "uint_var14": 2,
                    "uint_variable": 1,
                    "unsigned_var3": 1
                },
                "uVar9": {
                    "counter": 2,
                    "result_string_length": 1,
                    "temp_var1": 2,
                    "ulong1": 1,
                    "ulong_val": 2,
                    "ulong_var": 8,
                    "ulong_var1": 7,
                    "ulong_var9": 5,
                    "ulong_variable1": 1,
                    "unsigned_var": 1
                }
            },
            "called": [
                "FUN_00102739"
            ],
            "calling": [
                "FUN_001035a2",
                "FUN_001064b0",
                "FUN_001043d0",
                "FUN_00103b49",
                "FUN_00103729"
            ],
            "code": "\n\n\nvoid print_formatted_string_with_param_00104740(char *format_string,long *param_array,undefined8 *demangled_string,long param_4)\n\n{\n  undefined8 *ptr1;\n  byte byte1;\n  byte byte2;\n  int int_var;\n  size_t size;\n  char *char_ptr;\n  undefined8 *ptr2;\n  char *char_ptr2;\n  undefined8 *concatenated_string;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  undefined *ptr_var11;\n  undefined8 *ptr_var12;\n  char *char_ptr;\n  undefined8 *char_ptr2;\n  long long_var;\n  uint uint_var;\n  byte byte_var3;\n  char stack_array [9];\n  \n  byte_var3 = 0;\n  if (demangled_string == (undefined8 *)0x0) {\n    demangled_string = *(undefined8 **)(*param_array + 0x10);\n    if (DAT_0010b234 == 0) {\n      print_string_with_formatting_00102739();\n      return;\n    }\nLAB_00104775:\n    ptr_var12 = demangled_string;\n    if (DAT_0010b814 == 0) {\n      char_ptr = (char *)0x0;\n      if (DAT_0010b7e0 == 0) {\nLAB_00104794:\n        ptr_var12 = demangled_string;\n        concatenated_string = (undefined8 *)0x0;\n      }\n      else {\n        concatenated_string = (undefined8 *)0x0;\n        if (demangled_string != (undefined8 *)0x0) goto LAB_0010269d;\n        ptr_var12 = (undefined8 *)0x1073a6;\n      }\n    }\n    else {\n      char_ptr = (char *)0x0;\nLAB_0010482b:\n      if ((*(char *)ptr_var12 == '\\0') ||\n         (demangled_string = (undefined8 *)bfd_demangle(param_4,ptr_var12,DAT_0010b248),\n         demangled_string == (undefined8 *)0x0)) {\n        demangled_string = ptr_var12;\n        if (DAT_0010b7e0 != 0) goto LAB_00102698;\n        concatenated_string = (undefined8 *)0x0;\n      }\n      else {\n        ptr_var12 = demangled_string;\n        concatenated_string = demangled_string;\n        if (DAT_0010b7e0 != 0) goto LAB_0010269d;\n      }\n    }\n  }\n  else {\n    ptr_var12 = demangled_string;\n    if (DAT_0010b234 == 0) {\n      if (*(int *)(*(long *)(param_4 + 8) + 8) != 5) goto LAB_00104775;\n      char_ptr = strchr((char *)demangled_string,0x40);\n      if (char_ptr == (char *)0x0) {\n        if (DAT_0010b814 == 0) {\n          if (DAT_0010b7e0 == 0) {\n            if (param_array == (long *)0x0) {\n              concatenated_string = (undefined8 *)0x0;\n              printf(format_string,demangled_string);\n            }\n            else {\n              if (param_array[2] != 0) {\n                print_and_free_memory_001047d0();\n                return;\n              }\n              concatenated_string = (undefined8 *)0x0;\n              printf(format_string,demangled_string);\n            }\n            goto LAB_001047ba;\n          }\n          goto LAB_00102698;\n        }\n      }\n      else {\n        *char_ptr = '\\0';\n        if (DAT_0010b814 == 0) {\n          if (DAT_0010b7e0 == 0) goto LAB_00104794;\n          concatenated_string = (undefined8 *)0x0;\n          goto LAB_0010269d;\n        }\n      }\n      goto LAB_0010482b;\n    }\n    char_ptr = (char *)0x0;\n    if (DAT_0010b814 != 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 == 0) goto LAB_00104794;\nLAB_00102698:\n    ptr_var12 = demangled_string;\n    concatenated_string = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      byte1 = *(byte *)demangled_string;\n      demangled_string = (undefined8 *)((long)demangled_string + 1);\n      if (byte1 == 0) goto joined_r0x00104864;\n    } while ((((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) && (byte1 < 0xc0));\n    size = strlen((char *)ptr_var12);\n    char_ptr2 = DAT_0010b790;\n    if (_DAT_0010b798 < size * 9) {\n      free(DAT_0010b790);\n      size = strlen((char *)ptr_var12);\n      _DAT_0010b798 = size * 9;\n      DAT_0010b790 = (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      char_ptr2 = DAT_0010b790;\n    }\n    while( true ) {\n      ptr2 = DAT_0010b790;\n      byte1 = *(byte *)ptr_var12;\n      ptr1 = (undefined8 *)((long)ptr_var12 + 1);\n      if (byte1 == 0) break;\n      if (((&_sch_istable)[(ulong)byte1 * 2] & 2) == 0) {\n        if ((byte1 < 0xc0) || (DAT_0010b7e0 == 0)) {\n          *(byte *)char_ptr2 = byte1;\n          char_ptr2 = (undefined8 *)((long)char_ptr2 + 1);\n          ptr_var12 = ptr1;\n        }\n        else {\n          byte2 = *(byte *)((long)ptr_var12 + 1);\n          if ((byte2 & 0xc0) == 0x80) {\n            ptr2 = char_ptr2;\n            if ((byte1 & 0x20) == 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uint_var = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                long_var = 2;\n                goto LAB_00102917;\n              case 4:\n                int_var = isatty(1);\n                if (int_var == 0) {\n                  byte2 = *(byte *)((long)ptr_var12 + 1);\n                }\n                else {\n                  *(undefined *)(char_ptr2 + 1) = 0;\n                  *char_ptr2 = 0x6d37343b31335b1b;\n                  byte2 = *(byte *)((long)ptr_var12 + 1);\n                  ptr2 = char_ptr2 + 1;\n                }\n              case 2:\n                uint_var = 2;\n                sprintf((char *)ptr2,\"\\u%02x%02x\",(ulong)((int)(uint)*(byte *)ptr_var12 >> 2 & 7),\n                        (ulong)((*(byte *)ptr_var12 & 3) << 6 | byte2 & 0x3f));\n                ptr2 = (undefined8 *)((long)ptr2 + 6);\n                goto LAB_00102a27;\n              default:\n                uint_var = 2;\n              }\n            }\n            else {\n              byte2 = *(byte *)((long)ptr_var12 + 2);\n              if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((byte1 & 0x10) == 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 3;\nLAB_00102a62:\n                  for (ulong_var = (ulong)uint_var; ulong_var != 0; ulong_var = ulong_var - 1) {\n                    *(undefined *)ptr2 = *(undefined *)ptr_var12;\n                    ptr_var12 = (undefined8 *)((long)ptr_var12 + (ulong)byte_var3 * -2 + 1);\n                    ptr2 = (undefined8 *)((long)ptr2 + (ulong)byte_var3 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  long_var = 3;\nLAB_00102917:\n                  ulong_var2 = 0x7b;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3c;\n                  }\n                  sprintf((char *)char_ptr2,\"%c\",ulong_var2);\n                  *(undefined *)((long)char_ptr2 + 3) = 0;\n                  ptr2 = (undefined8 *)(long_var + (long)ptr_var12);\n                  *(undefined2 *)((long)char_ptr2 + 1) = 0x7830;\n                  char_ptr2 = (char *)((long)char_ptr2 + 3);\n                  do {\n                    char_ptr = char_ptr2;\n                    byte1 = *(byte *)ptr_var12;\n                    ptr_var12 = (undefined8 *)((long)ptr_var12 + 1);\n                    sprintf(char_ptr,\"%02x\",(ulong)byte1);\n                    char_ptr2 = char_ptr + 2;\n                  } while (ptr_var12 != ptr2);\n                  ulong_var2 = 0x7d;\n                  if (DAT_0010b7e0 == 3) {\n                    ulong_var2 = 0x3e;\n                  }\n                  uint_var = (uint)long_var;\n                  sprintf(char_ptr + 2,\"%c\",ulong_var2);\n                  ptr2 = (undefined8 *)(char_ptr + 3);\n                  break;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)ptr_var12 + 2);\n                  }\n                  else {\n                    *(undefined *)(char_ptr2 + 1) = 0;\n                    *char_ptr2 = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)ptr_var12 + 2);\n                    ptr2 = char_ptr2 + 1;\n                  }\n                case 2:\n                  uint_var = 3;\n                  sprintf((char *)ptr2,\"\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)ptr_var12 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)ptr_var12 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)ptr_var12 + 1) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 == 4) && (int_var = isatty(1), int_var != 0)) {\n                    *(undefined4 *)ptr2 = 0x6d305b1b;\n                    ptr2 = (undefined8 *)((long)ptr2 + 4);\n                    *(undefined *)ptr2 = 0;\n                  }\n                  break;\n                default:\n                  uint_var = 3;\n                }\n              }\n              else {\n                byte2 = *(byte *)((long)ptr_var12 + 3);\n                if ((byte2 & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uint_var = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  long_var = 4;\n                  goto LAB_00102917;\n                case 4:\n                  int_var = isatty(1);\n                  if (int_var == 0) {\n                    byte2 = *(byte *)((long)ptr_var12 + 3);\n                  }\n                  else {\n                    *(undefined *)(char_ptr2 + 1) = 0;\n                    *char_ptr2 = 0x6d37343b31335b1b;\n                    byte2 = *(byte *)((long)ptr_var12 + 3);\n                    ptr2 = char_ptr2 + 1;\n                  }\n                case 2:\n                  uint_var = 4;\n                  int_var = sprintf((char *)ptr2,\"\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)ptr_var12 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr_var12 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)ptr_var12 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)ptr_var12 + 2) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)ptr_var12 + 2) & 3) << 6 | byte2 & 0x3f));\n                  ptr2 = (undefined8 *)((long)ptr2 + (long)int_var);\n                  goto LAB_00102a27;\n                default:\n                  uint_var = 4;\n                }\n              }\n            }\n            ulong_var = (ulong)(uint)((int)ptr2 - (int)char_ptr2);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)char_ptr2 = byte1;\n            uint_var = 1;\n            ulong_var = 1;\n          }\n          char_ptr2 = (undefined8 *)((long)char_ptr2 + ulong_var);\n          ptr_var12 = (undefined8 *)((long)ptr1 + (ulong)(uint_var - 1));\n        }\n      }\n      else {\n        *(undefined *)char_ptr2 = 0x5e;\n        *(byte *)((long)char_ptr2 + 1) = byte1 + 0x40;\n        char_ptr2 = (undefined8 *)((long)char_ptr2 + 2);\n        ptr_var12 = ptr1;\n      }\n    }\n    *(undefined *)char_ptr2 = 0;\n    ptr_var12 = ptr2;\n  }\njoined_r0x00104864:\n  if ((((param_array != (long *)0x0) && (param_array[2] != 0)) && (DAT_0010b234 != 0)) &&\n     ((char_ptr2 = (char *)(**(code **)(*(long *)(param_4 + 8) + 0x220))\n                                  (param_4,param_array[2],0,stack_array), char_ptr2 != (char *)0x0 &&\n      (*char_ptr2 != '\\0')))) {\n    ptr_var11 = &DAT_001071e0;\n    if ((stack_array[0] == '\\0') && (*(long *)(param_array[2] + 0x20) != 0x10c2a8)) {\n      ptr_var11 = &DAT_001071df;\n    }\n    concatenated_string = (undefined8 *)reconcat(concatenated_string,ptr_var12,ptr_var11,char_ptr2,0);\n    ptr_var12 = concatenated_string;\n  }\n  printf(format_string,ptr_var12);\n  if (char_ptr != (char *)0x0) {\n    *char_ptr = '@';\n  }\nLAB_001047ba:\n  free(concatenated_string);\n  return;\n}\n\n",
            "current_name": "print_formatted_string_with_param_00104740",
            "entrypoint": "0x00104740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104740": "print_formatted_string_with_param_00104740",
                "__ptr": "concatenated_string",
                "__s": "char_ptr",
                "__s_00": "char_ptr2",
                "acStack_39": "stack_array",
                "bVar15": "byte_var3",
                "bVar2": "byte1",
                "bVar3": "byte2",
                "iVar4": "int_var",
                "lVar13": "long_var",
                "param_1": "format_string",
                "param_2": "param_array",
                "param_3": "demangled_string",
                "pcVar6": "char_ptr",
                "pcVar8": "char_ptr2",
                "puVar1": "ptr1",
                "puVar11": "ptr_var11",
                "puVar12": "ptr_var12",
                "puVar7": "ptr2",
                "sVar5": "size",
                "uVar10": "ulong_var2",
                "uVar14": "uint_var",
                "uVar9": "ulong_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001047d0": {
            "additional_data": {
                "FUN_001047d0": {
                    "print_and_free": 10,
                    "print_and_free_memory": 5,
                    "print_and_free_message": 1,
                    "print_and_free_result": 1,
                    "print_and_free_string": 3,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 4,
                    "print_message": 3,
                    "print_reconcatenated_string": 1,
                    "print_reversed_string": 1
                },
                "pcVar1": {
                    "function_result": 1,
                    "output_str": 1,
                    "reconcat_result_ptr": 1,
                    "result": 4,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "result_string": 1,
                    "returned_string": 1
                },
                "unaff_R12": {
                    "character_ptr": 1,
                    "error_code": 1,
                    "flag_holder": 1,
                    "flag_pointer": 2,
                    "flag_ptr": 7,
                    "format_flag": 1,
                    "output_char": 2,
                    "output_flag": 9,
                    "output_indicator": 1,
                    "output_pointer": 1,
                    "ptr_flag": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_ptr": 2
                },
                "unaff_R13": {
                    "concatenated_string": 5,
                    "concatenated_string_copy": 3,
                    "concatenated_string_ptr": 1,
                    "formatted_message": 1,
                    "formatted_string": 1,
                    "message": 1,
                    "message_to_print": 1,
                    "output_ptr": 1,
                    "print_parameter": 1,
                    "ptr_result": 1,
                    "reconcat_result": 1,
                    "reconcat_result_copy": 1,
                    "reconcat_result_ptr": 1,
                    "reconcatenated_string": 1,
                    "reconcatenated_string_copy": 2,
                    "reconstructed_string_temp": 1,
                    "result": 1,
                    "result_copy": 1,
                    "result_ptr": 1,
                    "reversed_string": 2,
                    "string_to_print": 3
                },
                "unaff_R14": {
                    "format_str": 1,
                    "format_string": 30
                },
                "unaff_R15": {
                    "callback_pointer": 1,
                    "context_ptr": 2,
                    "dynamic_pointer": 1,
                    "file_descriptor": 1,
                    "function_address": 1,
                    "function_context": 2,
                    "function_pointer": 9,
                    "function_pointer_address": 1,
                    "function_ptr": 4,
                    "helper_ptr": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_string": 1,
                    "input_val": 1,
                    "offset": 1,
                    "pointer": 1,
                    "pointer_arg": 1,
                    "ptr_struct": 1
                },
                "unaff_RBX": {
                    "buffer": 3,
                    "concatenated_message": 1,
                    "concatenated_string": 7,
                    "message_buffer": 1,
                    "message_ptr": 1,
                    "ptr_str": 1,
                    "reallocated_memory": 1,
                    "reconcat_ptr": 1,
                    "reconcat_result": 4,
                    "reconcatenated_string": 3,
                    "reconstructed_string": 2,
                    "rejoined_string": 1,
                    "result": 2,
                    "result_string": 3
                }
            },
            "called": [
                "reconcat",
                "printf",
                "free"
            ],
            "calling": [
                "FUN_00102739",
                "FUN_0010268b"
            ],
            "code": "\nvoid print_and_free_memory_001047d0(void)\n\n{\n  char *result;\n  void *concatenated_string;\n  undefined *output_flag;\n  void *concatenated_string;\n  char *format_string;\n  long function_pointer;\n  \n  if (((DAT_0010b234 != 0) &&\n      (result = (char *)(**(code **)(*(long *)(function_pointer + 8) + 0x220))(), result != (char *)0x0))\n     && (*result != '\\0')) {\n    concatenated_string = (void *)reconcat();\n    concatenated_string = concatenated_string;\n  }\n  printf(format_string,concatenated_string);\n  if (output_flag != (undefined *)0x0) {\n    *output_flag = 0x40;\n  }\n  free(concatenated_string);\n  return;\n}\n\n",
            "current_name": "print_and_free_memory_001047d0",
            "entrypoint": "0x001047d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001047d0": "print_and_free_memory_001047d0",
                "pcVar1": "result",
                "unaff_R12": "output_flag",
                "unaff_R13": "concatenated_string",
                "unaff_R14": "format_string",
                "unaff_R15": "function_pointer",
                "unaff_RBX": "concatenated_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001048e0": {
            "additional_data": {
                "DAT_0010b80c": {
                    "global_flag1": 1
                },
                "DAT_0010b810": {
                    "global_flag2": 1
                },
                "FUN_001048e0": {
                    "analyze_binary": 1,
                    "decompile_and_improve": 1,
                    "extract_and_process_lto_objects": 1,
                    "parse_object_file": 1,
                    "process_binary": 1,
                    "process_lto_objects": 1,
                    "process_object": 1,
                    "reverse_and_process_data": 1,
                    "reverse_and_process_lto": 1,
                    "reverse_and_process_lto_data": 1,
                    "reverse_and_process_lto_object": 3,
                    "reverse_and_process_lto_objects": 1,
                    "reverse_and_process_objects": 1
                },
                "bVar1": {
                    "bool_var_1": 1,
                    "byte_val": 1,
                    "byte_value": 2,
                    "byte_var": 12,
                    "byte_var1": 8,
                    "byte_var_1": 2,
                    "byte_variable1": 1,
                    "flag": 2,
                    "flag1": 1
                },
                "bVar19": {
                    "bool_val": 1,
                    "bool_value": 2,
                    "bool_var": 15,
                    "bool_var19": 4,
                    "bool_var_1": 2,
                    "bool_var_19": 2,
                    "bool_var_2": 1,
                    "bool_variable1": 1,
                    "flag2": 1
                },
                "bVar20": {
                    "bool_var_2": 1,
                    "bool_variable2": 1,
                    "byte_val2": 1,
                    "byte_value2": 1,
                    "byte_value_2": 1,
                    "byte_var": 2,
                    "byte_var2": 10,
                    "byte_var20": 4,
                    "byte_var_1": 2,
                    "byte_var_2": 2,
                    "byte_var_20": 3,
                    "flag2": 1
                },
                "cVar3": {
                    "char_val": 1,
                    "char_value": 2,
                    "char_var": 17,
                    "char_var3": 5,
                    "char_var_1": 1,
                    "char_var_3": 2,
                    "char_variable": 1,
                    "character": 1
                },
                "iVar4": {
                    "i_var": 1,
                    "index_var": 1,
                    "int_val": 1,
                    "int_value": 2,
                    "int_var": 16,
                    "int_var4": 4,
                    "int_var_1": 1,
                    "int_var_4": 2,
                    "int_variable": 1,
                    "integer_var": 1
                },
                "lVar10": {
                    "length_var": 1,
                    "long_value_2": 1,
                    "long_var": 1,
                    "long_var10": 4,
                    "long_var2": 11,
                    "long_var_1": 1,
                    "long_var_10": 3,
                    "long_var_2": 5,
                    "long_variable2": 1,
                    "size_value": 1,
                    "tmp_long": 1
                },
                "lVar7": {
                    "long_val": 1,
                    "long_value": 2,
                    "long_var": 18,
                    "long_var7": 4,
                    "long_var_1": 1,
                    "long_var_7": 2,
                    "long_variable1": 1,
                    "loop_var": 1
                },
                "local_40": {
                    "buffer_list": 1,
                    "local_40": 1,
                    "local_arr": 3,
                    "local_array": 5,
                    "local_array_40": 1,
                    "local_array_of_ptr_ptr_to_uint64": 1,
                    "local_data": 2,
                    "local_data_1": 1,
                    "local_pointer_arr_40": 1,
                    "local_ptr_array": 1,
                    "local_ptr_ptr_var_40": 1,
                    "local_var3": 3,
                    "local_var40": 1,
                    "local_var_3": 1,
                    "local_var_array": 1,
                    "local_var_ptr": 1,
                    "local_variable_array": 1,
                    "pointers_lists": 1,
                    "tmp_array": 1
                },
                "local_48": {
                    "local_48": 2,
                    "local_pointer_value": 1,
                    "local_ptr_to_uint64": 1,
                    "local_ulong_ptr": 1,
                    "local_value2": 1,
                    "local_var2": 11,
                    "local_var48": 1,
                    "local_var_2": 5,
                    "local_var_48": 4,
                    "local_variable2": 1,
                    "mem_pointer": 1,
                    "temp_pointer": 1
                },
                "local_4c": {
                    "local_4c": 3,
                    "local_int_value": 1,
                    "local_uint_1": 1,
                    "local_uint_var": 1,
                    "local_value1": 1,
                    "local_var": 1,
                    "local_var1": 10,
                    "local_var4c": 1,
                    "local_var_1": 5,
                    "local_var_4c": 4,
                    "local_variable1": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "arg1": 2,
                    "binary": 1,
                    "binary_data": 2,
                    "function_param_1": 1,
                    "input": 2,
                    "input1": 1,
                    "input_args": 1,
                    "input_data": 8,
                    "input_object": 1,
                    "input_param": 1,
                    "input_params": 4,
                    "input_pointer": 1,
                    "object": 1,
                    "object_data": 1,
                    "object_file": 1,
                    "object_list": 1,
                    "parameter_1": 1,
                    "pointer_to_param_1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_1": 1,
                    "arg_2": 1,
                    "function_param_2": 1,
                    "input2": 1,
                    "param2": 5,
                    "param_2": 18,
                    "parameter_2": 2
                },
                "param_3": {
                    "arg3": 2,
                    "arg_2": 1,
                    "arg_3": 1,
                    "function_param_3": 1,
                    "input3": 1,
                    "param3": 5,
                    "param_3": 18,
                    "parameter_3": 2
                },
                "param_4": {
                    "arg4": 2,
                    "arg_3": 1,
                    "arg_4": 1,
                    "function_param_4": 1,
                    "input4": 1,
                    "param4": 5,
                    "param_4": 18,
                    "parameter_4": 2
                },
                "param_5": {
                    "arg5": 2,
                    "args1": 1,
                    "data1": 1,
                    "debug_flag": 1,
                    "function_param_5": 1,
                    "input5": 1,
                    "input_data_2": 1,
                    "object_buffer": 1,
                    "output1": 1,
                    "output_data": 5,
                    "output_data1": 2,
                    "output_objects": 1,
                    "output_param_1": 1,
                    "output_params": 4,
                    "output_pointer_1": 1,
                    "param5": 2,
                    "parameter_5": 2,
                    "pointer_to_param_5": 1,
                    "strings_list": 1,
                    "temp_data_1": 1
                },
                "param_6": {
                    "additional_data": 1,
                    "arg6": 2,
                    "arg_6": 1,
                    "args2": 1,
                    "auxiliary_data": 1,
                    "data2": 1,
                    "extra_data": 1,
                    "function_buffer": 1,
                    "function_param_6": 1,
                    "input6": 1,
                    "input_data_3": 1,
                    "labels_list": 1,
                    "other_output_params": 1,
                    "output2": 1,
                    "output_data2": 3,
                    "output_flag": 1,
                    "output_param_2": 1,
                    "output_pointer_2": 1,
                    "param6": 2,
                    "param_6": 1,
                    "parameter_6": 2,
                    "pointer_to_param_6": 1,
                    "temp_data_2": 1,
                    "temp_params": 2,
                    "tmp_output_objects": 1
                },
                "pcVar2": {
                    "code_pointer": 1,
                    "code_ptr": 1,
                    "code_var": 7,
                    "code_var2": 3,
                    "code_var_2": 2,
                    "func_ptr": 5,
                    "function_pointer": 3,
                    "function_ptr": 5,
                    "pointer_to_function": 1,
                    "pointer_var": 1,
                    "ptr_to_function": 1
                },
                "ppuStack_78": {
                    "auxiliary_ptr5": 1,
                    "data10": 1,
                    "data_pointer_stack78": 1,
                    "pointer_pointer_stack_78": 1,
                    "pointer_pointer_stack_value": 1,
                    "pointer_to_pointer_stack_var_78": 1,
                    "pointer_to_pointer_var_stack_78": 1,
                    "pointer_to_stack_var": 1,
                    "ptr_pointer_var10": 1,
                    "ptr_ptr_3": 1,
                    "ptr_ptr_stack": 1,
                    "ptr_ptr_to_uint_var_b": 1,
                    "ptr_ptr_var_2": 1,
                    "ptr_ptr_var_stack_78": 1,
                    "ptr_stack": 1,
                    "ptr_to_stack": 1,
                    "stack_ptr1": 1,
                    "stack_var": 1,
                    "temp12": 1,
                    "temp8": 1,
                    "temp_buffer": 1,
                    "temp_data_ptr_9": 1,
                    "temp_list_ptr_stack": 1,
                    "temp_ptr5": 1,
                    "temp_stack": 1,
                    "temp_stack_var_78": 1,
                    "temp_var14": 1,
                    "tmp5_ptr": 1,
                    "ulong_double_pointer14": 1
                },
                "ppuVar12": {
                    "data3": 1,
                    "data_pointer3": 1,
                    "input_ptr2": 1,
                    "object_iter": 1,
                    "output_ptr_ptr": 1,
                    "pointer_pointer_value_3": 1,
                    "pointer_pointer_var3": 1,
                    "pointer_to_pointer_3": 1,
                    "pointer_to_pointer_var12": 1,
                    "pointer_to_pointer_var_12": 1,
                    "ptr_array3": 1,
                    "ptr_pointer_var3": 1,
                    "ptr_ptr_to_uint64_2": 1,
                    "ptr_ptr_var12": 1,
                    "ptr_to_ptr_3": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_data_ptr_3": 1,
                    "temp_param_12": 1,
                    "temp_pointer2": 1,
                    "temp_var4": 1,
                    "ulong_double_pointer4": 1
                },
                "ppuVar13": {
                    "current_object": 1,
                    "data4": 1,
                    "data_pointer4": 1,
                    "input_data2": 1,
                    "input_data_ptr_2": 1,
                    "input_params_ptr": 1,
                    "input_ptr3": 1,
                    "pointer_pointer_value_4": 1,
                    "pointer_pointer_var4": 1,
                    "pointer_to_pointer_4": 1,
                    "pointer_to_pointer_var13": 1,
                    "pointer_to_pointer_var_13": 1,
                    "ptr_array4": 1,
                    "ptr_pointer_var4": 1,
                    "ptr_ptr_to_uint_var_2": 1,
                    "ptr_ptr_var13": 1,
                    "ptr_to_ptr_4": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_param_13": 1,
                    "temp_var5": 1,
                    "ulong_double_pointer5": 1
                },
                "ppuVar14": {
                    "auxiliary_ptr2": 1,
                    "data5": 1,
                    "data_pointer5": 1,
                    "object_end": 1,
                    "pointer_pointer_value_5": 1,
                    "pointer_pointer_var5": 1,
                    "pointer_to_pointer_5": 1,
                    "pointer_to_pointer_var14": 1,
                    "pointer_to_pointer_var_14": 1,
                    "ptr_array5": 1,
                    "ptr_pointer_var5": 1,
                    "ptr_ptr_to_uint_var_3": 1,
                    "ptr_ptr_var14": 1,
                    "ptr_to_ptr_5": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp_data": 1,
                    "temp_data_ptr_4": 1,
                    "temp_param_14": 1,
                    "temp_ptr": 1,
                    "temp_var7": 1,
                    "ulong_double_pointer7": 1
                },
                "ppuVar15": {
                    "buffer_iter": 1,
                    "data6": 1,
                    "data_pointer6": 1,
                    "input_ptr4": 1,
                    "pointer_pointer_value_6": 1,
                    "pointer_pointer_var6": 1,
                    "pointer_to_pointer_6": 1,
                    "pointer_to_pointer_var15": 1,
                    "pointer_to_pointer_var_15": 1,
                    "ptr_array6": 1,
                    "ptr_pointer_var6": 1,
                    "ptr_ptr_to_uint_var_4": 1,
                    "ptr_ptr_var15": 1,
                    "ptr_to_ptr_6": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp_data2": 1,
                    "temp_data_ptr_5": 1,
                    "temp_param_15": 1,
                    "temp_ptr2": 1,
                    "temp_var8": 1,
                    "ulong_double_pointer8": 1
                },
                "ppuVar16": {
                    "data7": 1,
                    "data_pointer7": 1,
                    "function_iter": 1,
                    "input_ptr5": 1,
                    "pointer_pointer_value_7": 1,
                    "pointer_pointer_var7": 1,
                    "pointer_to_pointer_7": 1,
                    "pointer_to_pointer_var16": 1,
                    "pointer_to_pointer_var_16": 1,
                    "ptr_array7": 1,
                    "ptr_pointer_var7": 1,
                    "ptr_ptr_to_uint_var_5": 1,
                    "ptr_ptr_var16": 1,
                    "ptr_to_ptr_7": 1,
                    "temp5": 1,
                    "temp7": 1,
                    "temp_data3": 1,
                    "temp_data_ptr_6": 1,
                    "temp_param_16": 1,
                    "temp_ptr3": 1,
                    "temp_var9": 1,
                    "ulong_double_pointer9": 1
                },
                "ppuVar17": {
                    "auxiliary_ptr3": 1,
                    "buffer_end": 1,
                    "data8": 1,
                    "data_pointer8": 1,
                    "pointer_pointer_value_8": 1,
                    "pointer_pointer_var8": 1,
                    "pointer_to_pointer_8": 1,
                    "pointer_to_pointer_var17": 1,
                    "pointer_to_pointer_var_17": 1,
                    "ptr_array8": 1,
                    "ptr_pointer_var8": 1,
                    "ptr_ptr_to_uint_var_6": 1,
                    "ptr_ptr_var17": 1,
                    "ptr_to_ptr_8": 1,
                    "temp6": 1,
                    "temp8": 1,
                    "temp_data4": 1,
                    "temp_data_ptr_7": 1,
                    "temp_param_17": 1,
                    "temp_ptr4": 1,
                    "temp_var10": 1,
                    "ulong_double_pointer10": 1
                },
                "ppuVar18": {
                    "auxiliary_ptr4": 1,
                    "data9": 1,
                    "data_pointer9": 1,
                    "output_ptr_ptr2": 1,
                    "pointer_pointer_value_9": 1,
                    "pointer_pointer_var9": 1,
                    "pointer_to_pointer_9": 1,
                    "pointer_to_pointer_var18": 1,
                    "pointer_to_pointer_var_18": 1,
                    "ptr_array9": 1,
                    "ptr_pointer_var9": 1,
                    "ptr_ptr_to_uint_var_7": 1,
                    "ptr_ptr_var18": 1,
                    "ptr_to_ptr_9": 1,
                    "sorted_buffer": 1,
                    "temp7": 1,
                    "temp9": 1,
                    "temp_data5": 1,
                    "temp_data_ptr_8": 1,
                    "temp_param_18": 1,
                    "temp_var11": 1,
                    "ulong_double_pointer11": 1
                },
                "ppuVar8": {
                    "current_pointer": 1,
                    "data1": 1,
                    "data_pointer1": 1,
                    "debug_symbols_array": 1,
                    "input_data2": 1,
                    "input_ptr": 1,
                    "input_ptr_ptr": 1,
                    "object_start": 1,
                    "objects_list": 1,
                    "output1": 1,
                    "output_ptr": 1,
                    "pointer_pointer_value_1": 1,
                    "pointer_pointer_var1": 1,
                    "pointer_pointer_var_8": 1,
                    "pointer_to_pointer_1": 1,
                    "pointer_to_pointer_var8": 1,
                    "pointer_to_pointer_var_8": 1,
                    "ptr_array1": 1,
                    "ptr_pointer_var1": 1,
                    "ptr_ptr_1": 1,
                    "ptr_ptr_a": 1,
                    "ptr_ptr_to_uint64": 1,
                    "ptr_ptr_var": 1,
                    "ptr_ptr_var1": 1,
                    "ptr_ptr_var8": 1,
                    "ptr_to_ptr_1": 1,
                    "temp_data_ptr_1": 1,
                    "temp_param_8": 1,
                    "temp_var1": 1,
                    "ulong_double_pointer1": 1
                },
                "ppuVar9": {
                    "auxiliary_ptr": 1,
                    "buffer_start": 1,
                    "data2": 1,
                    "data_pointer2": 1,
                    "local_var": 1,
                    "output2": 1,
                    "pointer_pointer_value_2": 1,
                    "pointer_pointer_var2": 1,
                    "pointer_pointer_var_9": 1,
                    "pointer_to_pointer_2": 1,
                    "pointer_to_pointer_var9": 1,
                    "pointer_to_pointer_var_9": 1,
                    "ptr_array2": 1,
                    "ptr_pointer_var2": 1,
                    "ptr_ptr_2": 1,
                    "ptr_ptr_b": 1,
                    "ptr_ptr_to_uint_var": 1,
                    "ptr_ptr_var2": 1,
                    "ptr_ptr_var9": 1,
                    "ptr_ptr_var_1": 1,
                    "ptr_to_ptr_2": 1,
                    "temp_data_ptr_2": 1,
                    "temp_list_ptr": 1,
                    "temp_param_9": 1,
                    "temp_pointer": 1,
                    "temp_ptr_ptr": 1,
                    "temp_var2": 1,
                    "tmp_output_ptr": 1,
                    "tmp_ptr": 1,
                    "ulong_double_pointer2": 1
                },
                "puVar11": {
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "pointer_var11": 3,
                    "pointer_var_11": 2,
                    "ptr_to_uint64": 1,
                    "ptr_to_ulong": 1,
                    "ptr_var": 7,
                    "ptr_var11": 1,
                    "temp_ptr": 1,
                    "tmp_ptr2": 1,
                    "ulong_pointer": 1,
                    "ulong_pointer1": 1,
                    "ulong_ptr": 1,
                    "ulong_ptr_var": 3,
                    "ulong_var": 2,
                    "ulong_var_11": 1
                },
                "uVar5": {
                    "result_var": 1,
                    "uint_val": 1,
                    "uint_value": 2,
                    "uint_var": 17,
                    "uint_var5": 4,
                    "uint_var_1": 1,
                    "uint_var_5": 2,
                    "uint_variable": 1,
                    "unsigned_var": 1
                },
                "uVar6": {
                    "message_var": 1,
                    "output_value": 1,
                    "u_var": 2,
                    "u_var6": 1,
                    "uint64_var": 1,
                    "uint_var2": 2,
                    "uint_var6": 1,
                    "ulong_value": 1,
                    "ulong_var": 8,
                    "ulong_var_1": 1,
                    "ulong_var_6": 2,
                    "ulong_variable": 1,
                    "undefined8_var": 3,
                    "undefined_val": 1,
                    "undefined_var": 1,
                    "undefined_var6": 1,
                    "unsigned_var_2": 1,
                    "uvar6": 1
                },
                "unaff_R14": {
                    "num_elements": 1,
                    "pointer_r14": 1,
                    "pointer_var3": 1,
                    "ptr_ptr_to_uint_var_z": 1,
                    "reg_r14": 2,
                    "reg_var1": 1,
                    "size_param_ptr": 1,
                    "temp10": 1,
                    "temp_data8": 1,
                    "temp_var12": 1,
                    "temp_var3": 1,
                    "tmp3_var": 1,
                    "ulong_double_pointer12": 1,
                    "ulong_ptr_var_2": 1,
                    "ulong_ptr_var_unaff_r14": 1,
                    "unaff_r14": 1,
                    "unaff_var3": 1,
                    "unaffected_r14": 2,
                    "unaffected_reg_r14": 1,
                    "unaffected_register_r14": 1,
                    "unaffined_r14": 1
                },
                "unaff_R15": {
                    "pointer_r15": 1,
                    "pointer_var4": 1,
                    "ptr_ptr_to_uint_var_a": 1,
                    "reg_r15": 2,
                    "reg_var2": 1,
                    "size_param_ptr2": 1,
                    "sorted_function_buffer": 1,
                    "temp11": 1,
                    "temp_data9": 1,
                    "temp_var13": 1,
                    "temp_var4": 1,
                    "tmp4_var": 1,
                    "ulong_double_pointer13": 1,
                    "ulong_ptr_var_3": 1,
                    "ulong_ptr_var_unaff_r15": 1,
                    "unaff_r15": 1,
                    "unaff_var4": 1,
                    "unaffected_r15": 2,
                    "unaffected_reg_r15": 1,
                    "unaffected_register_r15": 1,
                    "unaffined_r15": 1
                },
                "unaff_RBP": {
                    "pointer_rbp": 1,
                    "pointer_var2": 1,
                    "ptr_ptr_to_uint_var_y": 1,
                    "reg_rbp": 2,
                    "temp4": 1,
                    "temp_data7": 1,
                    "temp_var2": 1,
                    "temp_var6": 1,
                    "tmp2_var": 1,
                    "ulong_double_pointer6": 1,
                    "ulong_ptr_var_unaff_rbp": 1,
                    "unaff_rbp": 1,
                    "unaff_var2": 1,
                    "unaffected_r_bp": 1,
                    "unaffected_rbp": 1,
                    "unaffected_reg_rbp": 1,
                    "unaffected_register_bp": 1,
                    "unaffined_rbp": 1
                },
                "unaff_RBX": {
                    "input_data_ptr": 1,
                    "input_ptr_ptr2": 1,
                    "object_pointer": 1,
                    "pointer_rbx": 1,
                    "pointer_var1": 1,
                    "ptr_ptr_to_uint_var_x": 1,
                    "reg_rbx": 2,
                    "temp1": 1,
                    "temp_data6": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "tmp1_var": 1,
                    "ulong_double_pointer3": 1,
                    "ulong_ptr_var_unaff_rbx": 1,
                    "unaff_rbx": 1,
                    "unaff_var1": 1,
                    "unaffected_r_bx": 1,
                    "unaffected_rbx": 1,
                    "unaffected_reg_rbx": 1,
                    "unaffected_register_bx": 1,
                    "unaffined_rbx": 1
                }
            },
            "called": [
                "bfd_get_error",
                "FUN_00106530",
                "dcgettext",
                "FUN_00106400"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid reverse_and_process_lto_object_001048e0(ulong **input_data,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 ulong **output_data,ulong **output_data2)\n\n{\n  byte byte_var;\n  code *code_var;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 ulong_var;\n  long long_var;\n  ulong **ptr_pointer_var1;\n  ulong **pointer_to_pointer_var9;\n  long long_var2;\n  ulong *ptr_var;\n  ulong **reg_rbx;\n  ulong **ptr_ptr_to_uint64_2;\n  ulong **data_pointer4;\n  ulong **reg_rbp;\n  ulong **ptr_ptr_to_uint_var_3;\n  ulong **ptr_array6;\n  ulong **function_iter;\n  ulong **ptr_ptr_var17;\n  ulong **data9;\n  ulong **unaffected_r14;\n  ulong **reg_r15;\n  bool bool_var;\n  byte byte_var2;\n  ulong **auxiliary_ptr5;\n  uint local_var1;\n  ulong *local_var2;\n  ulong **local_array [2];\n  \n  byte_var2 = 0;\n  local_var2 = (ulong *)0x0;\n  if ((DAT_0010b80c != 0) || ((*(byte *)((long)input_data + 0x44) & 0x10) != 0)) {\n    pointer_to_pointer_var9 = (ulong **)&local_var1;\n    ptr_pointer_var1 = (ulong **)(*(code *)input_data[1][0x4d])(input_data,DAT_0010b80c != 0,local_array);\n    if ((long)ptr_pointer_var1 < 0) {\n      if ((DAT_0010b80c != 0) && (int_var = bfd_get_error(), int_var == 7)) {\n        if (_DAT_0010b810 != 0) {\n          return;\n        }\n        ptr_var = *input_data;\n        ulong_var = dcgettext(0,\"%s: no symbols\",5);\n        print_error_with_formatted_message_00106400(ulong_var,ptr_var);\n        return;\n      }\n      print_error_message_and_exit_00106530(*input_data);\n      goto LAB_00102e9e;\n    }\n    if (ptr_pointer_var1 != (ulong **)0x0) {\n      if (DAT_0010b788 != 0) {\n        if (local_var1 == 8) goto LAB_00102d06;\n        goto LAB_00102cc2;\n      }\n      byte_var = *(byte *)((long)input_data + 0x4a);\n      data_pointer4 = input_data;\n      do {\n        if ((byte_var & 0x10) != 0) {\n          reg_rbx = (ulong **)*data_pointer4;\n          DAT_0010b230 = '\\0';\n          ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          print_error_with_formatted_message_00106400(ulong_var);\n        }\n        ptr_ptr_to_uint_var_3 = local_array[0];\n        unaffected_r14 = (ulong **)(ulong)local_var1;\n        bool_var = DAT_0010b80c != 0;\n        pointer_to_pointer_var9 = local_array[0];\n        reg_r15 = (ulong **)(*(code *)data_pointer4[1][0x41])(data_pointer4);\n        ptr_ptr_to_uint64_2 = reg_rbx;\n        reg_rbp = (ulong **)(ulong)bool_var;\n        input_data = data_pointer4;\n        if (reg_r15 == (ulong **)0x0) goto LAB_00102ea7;\n        ptr_ptr_var17 = (ulong **)((long)ptr_pointer_var1 * (long)unaffected_r14);\n        ptr_pointer_var1 = (ulong **)((long)ptr_ptr_to_uint_var_3 + (long)ptr_ptr_var17);\n        input_data = ptr_ptr_to_uint_var_3;\n        ptr_ptr_to_uint64_2 = ptr_ptr_to_uint_var_3;\njoined_r0x001049a4:\n        if (input_data < ptr_pointer_var1) {\n          do {\n            pointer_to_pointer_var9 = (ulong **)(*(code *)data_pointer4[1][0x4e])(data_pointer4,bool_var,input_data,reg_r15);\n            ptr_ptr_var17 = reg_r15;\n            if (pointer_to_pointer_var9 == (ulong **)0x0) goto LAB_00102eb0;\n            ptr_var = pointer_to_pointer_var9[1];\n            ptr_ptr_var17 = ptr_pointer_var1;\n            if (((ptr_var == (ulong *)0x0) || (*(char *)ptr_var != '_')) ||\n               (*(char *)((long)ptr_var + 1) != '_')) {\nLAB_00104a03:\n              if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n              uint_var = (uint)(pointer_to_pointer_var9[4] == (ulong *)0x10c2a8);\nLAB_00104af9:\n              if (uint_var == 0) goto code_r0x00104b01;\nLAB_00104a2d:\n              if (DAT_0010b81c == 0) {\n                if ((*(byte *)(pointer_to_pointer_var9 + 3) & 4) == 0) {\n                  if (DAT_0010b7f8 != 0) goto process_lto_slim_object_00104d5b_00104d5b;\nLAB_00104a53:\n                  output_data2 = (ulong **)(ulong)DAT_0010b7e4;\n                  if (DAT_0010b7e4 == 0) {\n                    char_var = (*(code *)data_pointer4[1][0x46])(data_pointer4,pointer_to_pointer_var9);\n                    if (char_var != '\\0') {\n                      process_lto_object_00102c19();\n                      return;\n                    }\n                    goto LAB_00104a7b;\n                  }\n                  if (pointer_to_pointer_var9[4] != (ulong *)0x10c2a8) goto LAB_00104cba;\n                }\n              }\n              else {\n                if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nprocess_lto_slim_object_00104d5b_00104d5b:\n                if ((pointer_to_pointer_var9[4] == (ulong *)0x10c2a8) || (pointer_to_pointer_var9[4] == (ulong *)0x10c3c0))\n                goto LAB_001049c3;\nLAB_00104cba:\n                char_var = (*(code *)data_pointer4[1][0x46])(data_pointer4,pointer_to_pointer_var9);\n                if (char_var != '\\0') {\n                  process_lto_object_00102c19();\n                  return;\n                }\nLAB_00104a7b:\n                if (ptr_ptr_to_uint64_2 != input_data) {\n                  if (unaffected_r14 == (ulong **)0x8) {\n                    *ptr_ptr_to_uint64_2 = *input_data;\n                    reverse_and_process_data_001049c0();\n                    return;\n                  }\n                  for (; unaffected_r14 != (ulong **)0x0; unaffected_r14 = (ulong **)((long)unaffected_r14 + -1)) {\n                    *(undefined *)ptr_ptr_to_uint64_2 = *(undefined *)input_data;\n                    input_data = (ulong **)((long)input_data + (ulong)byte_var2 * -2 + 1);\n                    ptr_ptr_to_uint64_2 = (ulong **)((long)ptr_ptr_to_uint64_2 + (ulong)byte_var2 * -2 + 1);\n                  }\n                  reverse_and_process_data_001049c0();\n                  return;\n                }\n                ptr_ptr_to_uint64_2 = (ulong **)((long)ptr_ptr_to_uint64_2 + (long)unaffected_r14);\n              }\n            }\n            else {\n              int_var = strcmp((char *)((long)ptr_var + (ulong)(*(char *)((long)ptr_var + 2) == '_')),\n                             \"__gnu_lto_slim\");\n              auxiliary_ptr5 = pointer_to_pointer_var9;\n              if (int_var == 0) {\n                if (DAT_0010b230 != '\\0') {\n                  auxiliary_ptr5 = (ulong **)*data_pointer4;\n                  DAT_0010b230 = '\\0';\n                  ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  print_error_with_formatted_message_00106400(ulong_var,auxiliary_ptr5);\n                }\n                goto LAB_00104a03;\n              }\n              if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n              if (DAT_0010b808 == 0) {\n                if (DAT_0010b7d8 != 0) {\n                  uint_var = (*(uint *)(pointer_to_pointer_var9 + 3) >> 7 ^ 1) & 1;\n                  goto LAB_00104af9;\n                }\n                goto LAB_00104a2d;\n              }\n              if ((((*(uint *)(pointer_to_pointer_var9 + 3) & 0x800082) != 0) || (pointer_to_pointer_var9[4] == (ulong *)0x10c2a8))\n                 || ((*(byte *)((long)pointer_to_pointer_var9[4] + 0x25) & 0x10) != 0)) goto LAB_00104a2d;\n            }\nLAB_001049c3:\n            input_data = (ulong **)((long)input_data + (long)unaffected_r14);\n            if (ptr_pointer_var1 <= input_data) break;\n          } while( true );\n        }\n        ptr_ptr_to_uint64_2 = (ulong **)((long)ptr_ptr_to_uint64_2 - (long)ptr_ptr_to_uint_var_3);\n        if (unaffected_r14 == (ulong **)0x8) {\n          ptr_var = data_pointer4[1];\n          ptr_ptr_to_uint_var_3 = (ulong **)((long)ptr_ptr_to_uint64_2 + 7);\n          if (-1 < (long)ptr_ptr_to_uint64_2) {\n            ptr_ptr_to_uint_var_3 = ptr_ptr_to_uint64_2;\n          }\n          output_data = (ulong **)(ulong)DAT_0010b800;\n          code_var = (code *)ptr_var[0x41];\n          ptr_ptr_to_uint_var_3 = (ulong **)((long)ptr_ptr_to_uint_var_3 >> 3);\n        }\n        else {\n          ptr_ptr_to_uint_var_3 = (ulong **)((long)ptr_ptr_to_uint64_2 / (long)unaffected_r14);\n          ptr_var = data_pointer4[1];\n          code_var = (code *)ptr_var[0x41];\n        }\n        if (DAT_0010b800 != 0) goto LAB_00104be2;\n        DAT_0010b778 = DAT_0010b80c != 0;\n        DAT_0010b780 = data_pointer4;\n        DAT_0010b770 = (ulong **)(*code_var)(data_pointer4);\n        DAT_0010b768 = (ulong **)(*(code *)data_pointer4[1][0x41])(data_pointer4);\n        ptr_ptr_to_uint64_2 = local_array[0];\n        if ((DAT_0010b770 != (ulong **)0x0) && (DAT_0010b768 != (ulong **)0x0)) {\n          ptr_pointer_var1 = (ulong **)(ulong)local_var1;\n          if (DAT_0010b7f8 != 0) {\n            bool_var = DAT_0010b80c != 0;\n            qsort(local_array[0],(size_t)ptr_ptr_to_uint_var_3,(size_t)ptr_pointer_var1,check_file_compile_status_00102fd2);\n            ptr_ptr_var17 = (ulong **)xmalloc((long)ptr_ptr_to_uint_var_3 << 4);\n            data9 = DAT_0010b770;\n            input_data = DAT_0010b768;\n            unaffected_r14 = (ulong **)((long)ptr_ptr_to_uint_var_3 * (long)ptr_pointer_var1 + (long)ptr_ptr_to_uint64_2);\n            pointer_to_pointer_var9 = DAT_0010b770;\n            if (unaffected_r14 <= ptr_ptr_to_uint64_2) goto LAB_00102ec2;\n            output_data2 = DAT_0010b768;\n            ptr_ptr_to_uint_var_3 = (ulong **)(*(code *)data_pointer4[1][0x4e])(data_pointer4,bool_var,ptr_ptr_to_uint64_2);\n            output_data = ptr_pointer_var1;\n            auxiliary_ptr5 = ptr_ptr_var17;\n            if (ptr_ptr_to_uint_var_3 == (ulong **)0x0) goto LAB_00102eb9;\n            goto LAB_00104e35;\n          }\n          qsort(local_array[0],(size_t)ptr_ptr_to_uint_var_3,(size_t)ptr_pointer_var1,\n                (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n          ptr_var = data_pointer4[1];\nLAB_00104be2:\n          input_data = data_pointer4;\n          data9 = (ulong **)0x0;\n          goto LAB_00104be5;\n        }\n        print_error_message_and_exit_00106530(*data_pointer4);\n        input_data = data_pointer4;\n        ptr_ptr_to_uint64_2 = reg_r15;\n        while( true ) {\n          reg_rbx = (ulong **)xmalloc();\n          ptr_pointer_var1 = (ulong **)(*(code *)input_data[1][0x6b])(input_data,reg_rbx);\n          pointer_to_pointer_var9 = ptr_ptr_var17;\n          if (-1 < (long)ptr_pointer_var1) break;\n          data_pointer4 = (ulong **)*input_data;\n          ptr_ptr_to_uint_var_3 = (ulong **)print_error_message_and_exit_00106530(data_pointer4,ptr_ptr_var17);\nLAB_00102dbe:\n          ptr_var = ptr_ptr_to_uint_var_3[2];\n          pointer_to_pointer_var9 = (ulong **)0x0;\nLAB_00102dc4:\n          ptr_var = (ulong *)((long)ptr_pointer_var1[8] - (long)ptr_var);\n          data9 = input_data;\n          ptr_array6 = ptr_ptr_to_uint64_2;\nLAB_00104ea7:\n          ptr_ptr_to_uint_var_3 = pointer_to_pointer_var9;\n          ptr_ptr_to_uint64_2 = reg_rbx;\n          input_data = output_data2;\n          if (ptr_var != (ulong *)0x0) {\n            *ptr_ptr_var17 = (ulong *)ptr_array6;\n            ptr_ptr_var17[1] = ptr_var;\n            ptr_ptr_var17 = ptr_ptr_var17 + 2;\n          }\nLAB_00104e35:\n          output_data2 = data9;\n          if (ptr_ptr_to_uint64_2 < unaffected_r14) goto code_r0x00104e3e;\n          ptr_ptr_to_uint_var_3 = (ulong **)((long)ptr_ptr_var17 - (long)auxiliary_ptr5 >> 4);\n          qsort(auxiliary_ptr5,(size_t)ptr_ptr_to_uint_var_3,0x10,compare_and_execute_function_00103533);\n          ptr_var = data_pointer4[1];\n          input_data = data_pointer4;\n          data9 = auxiliary_ptr5;\nLAB_00104be5:\n          reg_rbx = local_array[0];\n          ptr_pointer_var1 = (ulong **)(ulong)DAT_0010b7f8;\n          unaffected_r14 = (ulong **)(ulong)(DAT_0010b80c != 0);\n          if (DAT_0010b7f8 != 0) {\n            ptr_ptr_var17 = (ulong **)(*(code *)ptr_var[0x41])(input_data);\n            if (ptr_ptr_var17 == (ulong **)0x0) goto LAB_00102ed2;\n            ptr_ptr_to_uint64_2 = data9 + (long)ptr_ptr_to_uint_var_3 * 2;\n            ptr_ptr_to_uint_var_3 = data9;\n            goto LAB_00104ee9;\n          }\n          ptr_pointer_var1 = (ulong **)(ulong)local_var1;\n          reg_r15 = (ulong **)(*(code *)ptr_var[0x41])(input_data);\n          if (reg_r15 != (ulong **)0x0) {\n            reg_rbp = (ulong **)((long)ptr_ptr_to_uint_var_3 * (long)ptr_pointer_var1 + (long)reg_rbx);\n            if (reg_rbx < reg_rbp) goto LAB_00104c38;\n            goto LAB_00104c75;\n          }\n          print_error_message_and_exit_00106530(*input_data);\n          reg_r15 = data9;\nLAB_00102d06:\n          pointer_to_pointer_var9 = ptr_pointer_var1;\n          if (DAT_0010b80c != 0) {\n            reg_rbx = local_array[0];\n            ptr_ptr_to_uint_var_3 = (ulong **)0x0;\n            ptr_ptr_var17 = (ulong **)0x0;\n            break;\n          }\n          long_var2 = (*(code *)input_data[1][0x6a])(input_data);\n          ptr_ptr_to_uint_var_3 = local_array[0];\n          ptr_ptr_var17 = ptr_pointer_var1;\n          ptr_ptr_to_uint64_2 = reg_r15;\n          if (long_var2 < 1) {\n            ptr_pointer_var1 = (ulong **)0x0;\n            reg_rbx = (ulong **)0x0;\n            break;\n          }\n        }\n        output_data2 = &local_var2;\n        output_data = reg_rbx;\n        long_var2 = (*(code *)input_data[1][0x6c])(input_data,ptr_ptr_var17,ptr_ptr_to_uint_var_3,ptr_pointer_var1);\n        ptr_pointer_var1 = pointer_to_pointer_var9;\n        if (0 < long_var2) {\n          ptr_pointer_var1 = (ulong **)((long)pointer_to_pointer_var9 + long_var2);\n          local_array[0] = (ulong **)xrealloc(local_array[0]);\n          long_var = 0;\n          do {\n            local_array[0][(long)pointer_to_pointer_var9 + long_var] = local_var2 + long_var * 6;\n            long_var = long_var + 1;\n          } while (long_var2 != long_var);\n          local_array[0][(long)pointer_to_pointer_var9 + long_var2] = (ulong *)0x0;\n        }\n        if ((DAT_0010b80c == 0) && (reg_rbx != (ulong **)0x0)) {\n          free(reg_rbx);\n        }\nLAB_00102cc2:\n        byte_var = *(byte *)((long)input_data + 0x4a);\n        data_pointer4 = input_data;\n      } while( true );\n    }\n  }\n  if (_DAT_0010b810 == 0) {\n    ptr_var = *input_data;\n    ulong_var = dcgettext(0,\"%s: no symbols\",5);\n    print_error_with_formatted_message_00106400(ulong_var,ptr_var);\n  }\n  return;\ncode_r0x00104b01:\n  input_data = (ulong **)((long)input_data + (long)unaffected_r14);\n  goto joined_r0x001049a4;\ncode_r0x00104e3e:\n  reg_rbx = (ulong **)((long)ptr_ptr_to_uint64_2 + (long)output_data);\n  if (unaffected_r14 <= reg_rbx) {\n    ptr_pointer_var1 = (ulong **)ptr_ptr_to_uint_var_3[4];\n    if ((*(uint *)(ptr_ptr_to_uint_var_3 + 3) & 0x200100) != 0) goto LAB_00102dbe;\n    pointer_to_pointer_var9 = (ulong **)0x0;\nLAB_00104e95:\n    data9 = input_data;\n    ptr_array6 = ptr_ptr_to_uint64_2;\n    if (*(int *)(data_pointer4[1] + 1) == 5) {\n      ptr_var = ptr_ptr_to_uint_var_3[7];\n      goto LAB_00104ea7;\n    }\n    ptr_var = ptr_ptr_to_uint_var_3[2];\n    if ((*(byte *)((long)ptr_pointer_var1 + 0x25) & 0x10) != 0) goto LAB_00104ea7;\n    if (unaffected_r14 <= reg_rbx) goto LAB_00102dc4;\n    goto LAB_00102ee7;\n  }\n  ptr_pointer_var1 = input_data;\n  ptr_array6 = output_data;\n  function_iter = output_data2;\n  pointer_to_pointer_var9 = (ulong **)(*(code *)data_pointer4[1][0x4e])();\n  data9 = ptr_ptr_to_uint64_2;\n  if (pointer_to_pointer_var9 == (ulong **)0x0) goto LAB_00102edb;\n  ptr_pointer_var1 = (ulong **)ptr_ptr_to_uint_var_3[4];\n  if ((*(uint *)(ptr_ptr_to_uint_var_3 + 3) & 0x200100) == 0) goto LAB_00104e95;\n  goto LAB_00102ee3;\nLAB_00104ee9:\n  if (ptr_ptr_to_uint64_2 <= ptr_ptr_to_uint_var_3) {\nLAB_00104c75:\n    if (local_var2 == (ulong *)0x0) {\n      free(local_array[0]);\n      free(data9);\n      return;\n    }\n    free(local_var2);\n    free(local_array[0]);\n    free(data9);\n    return;\n  }\n  ptr_pointer_var1 = ptr_ptr_var17;\n  long_var2 = (*(code *)input_data[1][0x4e])(input_data,unaffected_r14,*ptr_ptr_to_uint_var_3);\n  if (long_var2 == 0) goto LAB_00102ec9;\n  ptr_pointer_var1 = ptr_ptr_to_uint_var_3 + 1;\n  ptr_ptr_to_uint_var_3 = ptr_ptr_to_uint_var_3 + 2;\n  print_labels_and_strings_00105110(input_data,long_var2,*ptr_pointer_var1,param_2);\n  goto LAB_00104ee9;\nLAB_00102ec9:\n  print_error_message_and_exit_00106530(*input_data,0);\nLAB_00102ed2:\n  data_pointer4 = (ulong **)*input_data;\n  print_error_message_and_exit_00106530();\n  reg_rbx = ptr_ptr_to_uint64_2;\n  ptr_array6 = output_data;\n  function_iter = output_data2;\nLAB_00102edb:\n  output_data2 = function_iter;\n  output_data = ptr_array6;\n  data_pointer4 = (ulong **)*data_pointer4;\n  pointer_to_pointer_var9 = (ulong **)print_error_message_and_exit_00106530();\n  ptr_ptr_to_uint64_2 = data9;\nLAB_00102ee3:\n  ptr_var = ptr_ptr_to_uint_var_3[2];\nLAB_00102ee7:\n  if (ptr_pointer_var1 != (ulong **)pointer_to_pointer_var9[4]) goto LAB_00102dc4;\n  ptr_var = (ulong *)((long)pointer_to_pointer_var9[2] - (long)ptr_var);\n  data9 = input_data;\n  ptr_array6 = ptr_ptr_to_uint64_2;\n  goto LAB_00104ea7;\nLAB_00104c38:\n  while (pointer_to_pointer_var9 = reg_r15, long_var2 = (*(code *)input_data[1][0x4e])(input_data,unaffected_r14,reg_rbx),\n        long_var2 != 0) {\n    reg_rbx = (ulong **)((long)reg_rbx + (long)ptr_pointer_var1);\n    print_labels_and_strings_00105110(input_data,long_var2,0,param_2);\n    if (reg_rbp <= reg_rbx) goto LAB_00104c75;\n  }\nLAB_00102e9e:\n  print_error_message_and_exit_00106530(*input_data);\n  ptr_ptr_to_uint64_2 = reg_rbx;\nLAB_00102ea7:\n  data_pointer4 = reg_rbp;\n  print_error_message_and_exit_00106530(*input_data);\n  ptr_ptr_var17 = reg_r15;\nLAB_00102eb0:\n  print_error_message_and_exit_00106530(*data_pointer4);\n  data_pointer4 = input_data;\nLAB_00102eb9:\n  print_error_message_and_exit_00106530(*data_pointer4);\n  input_data = output_data2;\nLAB_00102ec2:\n  ptr_ptr_to_uint_var_3 = (ulong **)0x0;\n  output_data = ptr_pointer_var1;\n  data9 = pointer_to_pointer_var9;\n  auxiliary_ptr5 = ptr_ptr_var17;\n  goto LAB_00104e35;\n}\n\n",
            "current_name": "reverse_and_process_lto_object_001048e0",
            "entrypoint": "0x001048e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001048e0": "reverse_and_process_lto_object_001048e0",
                "bVar1": "byte_var",
                "bVar19": "bool_var",
                "bVar20": "byte_var2",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "lVar10": "long_var2",
                "lVar7": "long_var",
                "local_40": "local_array",
                "local_48": "local_var2",
                "local_4c": "local_var1",
                "param_1": "input_data",
                "param_5": "output_data",
                "param_6": "output_data2",
                "pcVar2": "code_var",
                "ppuStack_78": "auxiliary_ptr5",
                "ppuVar12": "ptr_ptr_to_uint64_2",
                "ppuVar13": "data_pointer4",
                "ppuVar14": "ptr_ptr_to_uint_var_3",
                "ppuVar15": "ptr_array6",
                "ppuVar16": "function_iter",
                "ppuVar17": "ptr_ptr_var17",
                "ppuVar18": "data9",
                "ppuVar8": "ptr_pointer_var1",
                "ppuVar9": "pointer_to_pointer_var9",
                "puVar11": "ptr_var",
                "uVar5": "uint_var",
                "uVar6": "ulong_var",
                "unaff_R14": "unaffected_r14",
                "unaff_R15": "reg_r15",
                "unaff_RBP": "reg_rbp",
                "unaff_RBX": "reg_rbx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001049c0": {
            "additional_data": {
                "FUN_001049c0": {
                    "decode_and_transform_data": 1,
                    "decompiled_function": 3,
                    "process_data": 2,
                    "process_lto_object": 2,
                    "reverse_and_process_data": 1
                },
                "__compar_fn_t": {
                    "compar_fn_t": 1
                },
                "__ptr": {
                    "heap_data": 1,
                    "pointer": 2,
                    "pointer5": 1,
                    "pointer_to_undefined8_4": 1,
                    "pointer_var": 1,
                    "pointer_var3": 2,
                    "pointer_var_4": 1,
                    "pointer_variable3": 1,
                    "ptr": 1,
                    "ptr_var": 1,
                    "temp_ptr": 2,
                    "undefined8_pointer4": 1,
                    "undefined8_pointer_var2": 1
                },
                "bVar16": {
                    "bool_b_var16": 1,
                    "bool_var": 9,
                    "bool_var16": 1,
                    "bool_variable": 2,
                    "boolean": 3,
                    "boolean1": 1,
                    "boolean_var": 1,
                    "boolean_variable": 4,
                    "byte_var16": 1,
                    "flag": 1,
                    "temp_bool": 1,
                    "temp_flag2": 1
                },
                "bVar17": {
                    "boolean2": 1,
                    "byte": 1,
                    "byte_b_var17": 1,
                    "byte_flag": 2,
                    "byte_value": 1,
                    "byte_var": 10,
                    "byte_var17": 2,
                    "byte_variable": 6,
                    "flag2": 1,
                    "flag_17": 1,
                    "flag_variable_17": 1,
                    "temp_byte": 1,
                    "temp_flag": 1
                },
                "cVar3": {
                    "char_c_var3": 1,
                    "char_var": 9,
                    "char_var3": 1,
                    "char_variable": 5,
                    "character": 3,
                    "character_var": 3,
                    "character_variable": 1,
                    "flag": 1,
                    "temp_char": 2,
                    "variable_c": 1
                },
                "iVar4": {
                    "comparison_result": 1,
                    "int_i_var4": 1,
                    "int_value": 1,
                    "int_var": 11,
                    "int_var4": 1,
                    "int_variable": 3,
                    "integer": 2,
                    "integer1": 1,
                    "integer_var": 2,
                    "integer_variable": 2,
                    "temp_value5": 1,
                    "temp_var": 1,
                    "variable_i": 1
                },
                "in_R8": {
                    "in_register8": 1,
                    "input_register8": 1,
                    "pointer_3": 1,
                    "pointer_in_r8": 1,
                    "pointer_variable7": 1,
                    "register_8": 1,
                    "size": 1,
                    "temp_array_pointer2": 1,
                    "undefined8_pointer9": 1,
                    "undefined8_pointer_var7": 1
                },
                "in_R9": {
                    "compar_fn": 1,
                    "in_register9": 1,
                    "pointer_4": 1,
                    "pointer_variable8": 1,
                    "register_9": 1
                },
                "in_stack_00000008": {
                    "in_stack_var8": 1,
                    "local_var1": 1,
                    "one_stack_variable": 1,
                    "stack_param1": 1,
                    "stack_parameter1": 1,
                    "stack_value1": 2,
                    "stack_var1": 6,
                    "stack_variable1": 4,
                    "stack_variable_08": 1,
                    "temp_parameter": 1,
                    "temp_var_1": 1,
                    "undefined8_in_stack_00000008": 1,
                    "undefined8_var": 1,
                    "undefined8_variable2": 2,
                    "var1": 1,
                    "var_1": 1,
                    "var_in_stack_00000008": 1,
                    "variable_on_stack_1": 1,
                    "variable_stack_8": 1
                },
                "in_stack_00000010": {
                    "data_array": 1,
                    "in_stack_00000010": 1,
                    "in_stack_var10": 1,
                    "local_var2": 1,
                    "pointer_in_stack_00000010": 1,
                    "pointer_on_stack_1": 1,
                    "pointer_to_undefined8_15": 1,
                    "stack_pointer1": 1,
                    "stack_ptr1": 1,
                    "stack_var2": 6,
                    "stack_variable1": 1,
                    "stack_variable2": 4,
                    "stack_variable_10": 1,
                    "temp_array_pointer": 1,
                    "temp_ptr3": 1,
                    "temp_var_2": 1,
                    "undefined8_pointer16": 1,
                    "undefined8_pointer_var14": 1,
                    "var2": 1,
                    "var_2": 1,
                    "var_in_stack_00000010": 1,
                    "variable_stack_10": 1
                },
                "in_stack_00000018": {
                    "data_size": 1,
                    "in_stack_00000018": 1,
                    "in_stack_var18": 1,
                    "local_var3": 1,
                    "original_array_pointer": 1,
                    "pointer_in_stack_00000018": 1,
                    "pointer_on_stack_2": 1,
                    "pointer_to_undefined8_16": 1,
                    "stack_param3": 1,
                    "stack_pointer2": 1,
                    "stack_ptr2": 1,
                    "stack_var3": 6,
                    "stack_variable2": 1,
                    "stack_variable3": 4,
                    "stack_variable_18": 1,
                    "temp_var_3": 1,
                    "undefined8_pointer17": 1,
                    "undefined8_pointer_var15": 1,
                    "var3": 1,
                    "var_3": 1,
                    "var_in_stack_00000018": 1,
                    "variable_stack_18": 1
                },
                "in_stack_00000038": {
                    "another_parameter": 1,
                    "in_stack_00000038": 1,
                    "in_stack_var38": 1,
                    "local_var4": 1,
                    "size": 1,
                    "stack_param4": 1,
                    "stack_value2": 1,
                    "stack_var4": 6,
                    "stack_variable3": 1,
                    "stack_variable4": 4,
                    "stack_variable_38": 1,
                    "temp_value": 1,
                    "temp_var_4": 1,
                    "undefined8_in_stack_00000038": 1,
                    "undefined8_var1": 1,
                    "undefined8_variable3": 2,
                    "var4": 1,
                    "var_4": 1,
                    "var_in_stack_00000038": 1,
                    "variable_on_stack_2": 1,
                    "variable_stack_38": 1
                },
                "in_stack_00000040": {
                    "in_stack_00000040": 1,
                    "in_stack_var40": 1,
                    "local_var5": 1,
                    "pointer_in_stack_00000040": 1,
                    "pointer_on_stack_3": 1,
                    "pointer_variable": 1,
                    "some_pointer": 1,
                    "stack_param5": 1,
                    "stack_pointer3": 1,
                    "stack_ptr3": 1,
                    "stack_var5": 6,
                    "stack_variable4": 1,
                    "stack_variable5": 4,
                    "stack_variable_40": 1,
                    "temp_pointer5": 1,
                    "temp_ptr_var": 1,
                    "var5": 1,
                    "var_5": 1,
                    "var_in_stack_00000040": 1,
                    "variable_stack_40": 1,
                    "void_pointer": 1,
                    "void_pointer_var": 1
                },
                "in_stack_00000048": {
                    "in_stack_00000048": 1,
                    "in_stack_var48": 1,
                    "input_data": 1,
                    "local_var6": 1,
                    "pointer_in_stack_00000048": 1,
                    "pointer_on_stack_4": 1,
                    "pointer_to_undefined8_17": 1,
                    "stack_pointer4": 1,
                    "stack_ptr4": 1,
                    "stack_var6": 6,
                    "stack_variable5": 1,
                    "stack_variable6": 4,
                    "stack_variable_48": 1,
                    "temp_pointer6": 1,
                    "temp_ptr6": 1,
                    "temp_ptr_var": 1,
                    "undefined8_pointer18": 1,
                    "undefined8_pointer_var16": 1,
                    "var6": 1,
                    "var_6": 1,
                    "var_in_stack_00000048": 1,
                    "variable_stack_48": 1
                },
                "lVar7": {
                    "index": 1,
                    "length": 1,
                    "long1": 1,
                    "long_l_var7": 1,
                    "long_value": 1,
                    "long_value_1": 1,
                    "long_var": 10,
                    "long_var1": 2,
                    "long_var3": 1,
                    "long_var7": 1,
                    "long_var_7": 1,
                    "long_variable": 4,
                    "long_variable1": 1,
                    "temp_value3": 1,
                    "variable_l": 1
                },
                "lVar9": {
                    "long2": 1,
                    "long_l_var9": 1,
                    "long_value1": 1,
                    "long_value_2": 1,
                    "long_var": 3,
                    "long_var2": 7,
                    "long_var9": 2,
                    "long_var_2": 1,
                    "long_var_9": 1,
                    "long_variable2": 5,
                    "temp_value4": 1,
                    "tmp_var": 1,
                    "value": 1,
                    "variable_l": 1
                },
                "pcVar1": {
                    "char_pointer": 4,
                    "char_pointer_1": 1,
                    "character_pointer": 3,
                    "function_string": 1,
                    "plugin_name": 1,
                    "pointer1": 2,
                    "pointer_pc_var1": 1,
                    "pointer_to_char1": 1,
                    "pointer_var1": 1,
                    "ptr": 1,
                    "ptr_pc": 1,
                    "str_ptr": 3,
                    "string_pointer": 1,
                    "string_ptr": 3,
                    "temp_string": 1
                },
                "pcVar2": {
                    "code_pointer": 6,
                    "code_ptr": 1,
                    "fn_ptr": 1,
                    "func_ptr": 1,
                    "function_pointer": 5,
                    "function_ptr": 4,
                    "pointer2": 2,
                    "pointer_pc_var2": 1,
                    "pointer_to_code": 1,
                    "ptr_code": 1,
                    "temp_function": 1
                },
                "pcVar3": {
                    "char_var": 1
                },
                "puVar1": {
                    "pointer1": 1
                },
                "puVar10": {
                    "data_ptr": 1,
                    "pointer2": 2,
                    "pointer4": 3,
                    "pointer_10": 1,
                    "pointer_pu_var10": 1,
                    "pointer_to_undefined8_2": 1,
                    "pointer_var": 2,
                    "pointer_var10": 2,
                    "pointer_var2": 4,
                    "pointer_var_2": 1,
                    "pointer_variable2": 3,
                    "pointer_variable_2": 1,
                    "ptr_var2": 1,
                    "ptr_var_10": 1,
                    "temp_pointer8": 1,
                    "temp_ptr5": 1,
                    "undefined8_pointer2": 1,
                    "undefined8_pointer_var": 1
                },
                "puVar11": {
                    "index_ptr": 1,
                    "pointer3": 1,
                    "pointer5": 2,
                    "pointer6": 1,
                    "pointer_11": 1,
                    "pointer_pu_var11": 1,
                    "pointer_to_undefined8_6": 1,
                    "pointer_var": 2,
                    "pointer_var11": 2,
                    "pointer_var3": 2,
                    "pointer_var4": 2,
                    "pointer_var_6": 1,
                    "pointer_variable3": 2,
                    "pointer_variable4": 1,
                    "pointer_variable_3": 1,
                    "ptr1": 2,
                    "ptr_var3": 1,
                    "ptr_var_11": 1,
                    "temp_pointer3": 1,
                    "temp_result": 1,
                    "undefined8_pointer6": 1,
                    "undefined8_pointer_var4": 1
                },
                "puVar12": {
                    "backup_parameters": 1,
                    "parameter_ptr": 1,
                    "pointer6": 2,
                    "pointer7": 1,
                    "pointer_12": 1,
                    "pointer_pu_var12": 1,
                    "pointer_to_undefined8_7": 1,
                    "pointer_var": 2,
                    "pointer_var12": 2,
                    "pointer_var4": 2,
                    "pointer_var5": 2,
                    "pointer_var_7": 1,
                    "pointer_variable4": 2,
                    "pointer_variable5": 1,
                    "pointer_variable_4": 1,
                    "ptr2": 2,
                    "ptr_var4": 1,
                    "ptr_var_12": 1,
                    "temp_pointer2": 1,
                    "unaff_rbp": 1,
                    "undefined8_pointer7": 1,
                    "undefined8_pointer_var5": 1
                },
                "puVar13": {
                    "pointer4": 1,
                    "pointer7": 2,
                    "pointer8": 1,
                    "pointer_13": 1,
                    "pointer_pu_var13": 1,
                    "pointer_to_undefined8_8": 1,
                    "pointer_var": 2,
                    "pointer_var13": 2,
                    "pointer_var5": 2,
                    "pointer_var6": 1,
                    "pointer_var_8": 1,
                    "pointer_variable5": 1,
                    "pointer_variable6": 2,
                    "pointer_variable_5": 1,
                    "ptr3": 1,
                    "ptr_var5": 1,
                    "ptr_var_13": 1,
                    "temp_pointer9": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "undefined8_pointer8": 1,
                    "undefined8_pointer_var6": 1
                },
                "puVar14": {
                    "pointer5": 1,
                    "pointer8": 2,
                    "pointer_14": 1,
                    "pointer_pu_var14": 1,
                    "pointer_to_undefined8_9": 1,
                    "pointer_var": 2,
                    "pointer_var14": 2,
                    "pointer_var6": 2,
                    "pointer_var7": 1,
                    "pointer_variable5": 1,
                    "pointer_variable6": 1,
                    "pointer_variable7": 1,
                    "pointer_variable_6": 1,
                    "ptr4": 1,
                    "ptr_var_14": 1,
                    "temp_pointer10": 1,
                    "temp_ptr2": 1,
                    "temp_ptr4": 1,
                    "undefined8_pointer10": 1,
                    "undefined8_pointer_var8": 1
                },
                "puVar15": {
                    "output_ptr": 1,
                    "pointer6": 1,
                    "pointer9": 2,
                    "pointer_15": 1,
                    "pointer_pu_var15": 1,
                    "pointer_to_undefined8_10": 1,
                    "pointer_var": 2,
                    "pointer_var15": 2,
                    "pointer_var7": 2,
                    "pointer_var8": 1,
                    "pointer_variable7": 1,
                    "pointer_variable8": 1,
                    "pointer_variable_7": 1,
                    "ptr3": 1,
                    "ptr5": 1,
                    "ptr_var_15": 1,
                    "temp_pointer": 1,
                    "total_bytes": 1,
                    "undefined8_pointer11": 1,
                    "undefined8_pointer_var9": 1
                },
                "puVar2": {
                    "pointer2": 1
                },
                "puVar8": {
                    "pointer1": 2,
                    "pointer3": 3,
                    "pointer_8": 1,
                    "pointer_pu_var8": 1,
                    "pointer_to_undefined8_1": 1,
                    "pointer_var": 4,
                    "pointer_var1": 2,
                    "pointer_var8": 2,
                    "pointer_var_1": 1,
                    "pointer_variable": 3,
                    "pointer_variable_1": 1,
                    "ptr_var": 1,
                    "ptr_var_8": 1,
                    "result": 3,
                    "result_ptr": 1,
                    "return_value": 1,
                    "undefined8_pointer": 1,
                    "undefined8_pointer_var": 1
                },
                "puVar9": {
                    "unaff_r13": 1
                },
                "uVar18": {
                    "another_flag": 1,
                    "config_flag": 1,
                    "temp_value2": 1,
                    "uint_var18": 1,
                    "uint_var2": 1,
                    "ulong_u_var18": 1,
                    "ulong_value_4": 1,
                    "ulong_var": 2,
                    "ulong_var18": 1,
                    "ulong_var2": 2,
                    "ulong_var_3": 1,
                    "ulong_variable2": 2,
                    "unsigned_long2": 1,
                    "unsigned_long_value": 1,
                    "unsigned_var": 1,
                    "unsigned_var2": 1,
                    "unsigned_var3": 2,
                    "unsigned_variable2": 1,
                    "unsigned_variable3": 2,
                    "var18": 1,
                    "variable_18": 1
                },
                "uVar5": {
                    "flag_value": 1,
                    "is_match": 1,
                    "temp_value6": 1,
                    "uint_u_var5": 1,
                    "uint_value": 1,
                    "uint_var": 8,
                    "uint_var5": 1,
                    "uint_variable": 2,
                    "unsigned_int": 1,
                    "unsigned_integer": 1,
                    "unsigned_var": 3,
                    "unsigned_var1": 2,
                    "unsigned_variable": 3,
                    "var5": 1,
                    "variable_u": 1
                },
                "uVar6": {
                    "localized_string": 1,
                    "temp_value7": 1,
                    "ulong_value": 1,
                    "ulong_var": 6,
                    "ulong_var6": 1,
                    "undefined8_u_var6": 1,
                    "undefined8_var": 2,
                    "undefined8_variable": 1,
                    "undefined8_variable1": 1,
                    "undefined_var1": 1,
                    "unsigned_long": 2,
                    "unsigned_long_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_var2": 3,
                    "unsigned_variable2": 2,
                    "var6": 1,
                    "variable_u": 1
                },
                "unaff_R12": {
                    "destination": 1,
                    "end_pointer": 2,
                    "index": 1,
                    "pointer_5": 1,
                    "pointer_to_undefined8_11": 1,
                    "pointer_unaff_r12": 1,
                    "pointer_var": 1,
                    "pointer_var_9": 1,
                    "ptr3": 1,
                    "ptr_r12": 1,
                    "r12": 1,
                    "reg_r12": 1,
                    "register12": 3,
                    "register3": 2,
                    "register_12": 1,
                    "register_r12": 4,
                    "register_var1": 1,
                    "register_variable3": 1,
                    "temp_ptr5": 1,
                    "temp_size": 1,
                    "unaffected_pointer_r12": 1,
                    "undefined8_pointer12": 1,
                    "undefined8_pointer_var10": 1
                },
                "unaff_R13": {
                    "current_pointer": 2,
                    "data_ptr3": 1,
                    "loop_index": 1,
                    "pointer_6": 1,
                    "pointer_to_undefined8_12": 1,
                    "pointer_unaff_r13": 1,
                    "pointer_var": 1,
                    "pointer_var_10": 1,
                    "ptr4": 1,
                    "ptr_r13": 1,
                    "r13": 1,
                    "reg_r13": 1,
                    "register13": 3,
                    "register4": 2,
                    "register_13": 1,
                    "register_r13": 4,
                    "register_var2": 1,
                    "register_variable4": 1,
                    "source": 1,
                    "temp_ptr3": 1,
                    "unaffected_pointer_r13": 1,
                    "undefined8_pointer13": 1,
                    "undefined8_pointer_var11": 1
                },
                "unaff_R14": {
                    "data_len": 1,
                    "increment": 2,
                    "pointer_7": 1,
                    "pointer_to_undefined8_13": 1,
                    "pointer_unaff_r14": 1,
                    "pointer_var_11": 1,
                    "ptr5": 1,
                    "ptr_r14": 1,
                    "r14": 1,
                    "reg_r14": 1,
                    "register14": 3,
                    "register3": 1,
                    "register5": 2,
                    "register_14": 1,
                    "register_r14": 4,
                    "register_var3": 1,
                    "register_variable5": 1,
                    "step": 1,
                    "temp_pointer": 1,
                    "temp_ptr4": 1,
                    "unaffected_pointer_r14": 1,
                    "undefined8_pointer14": 1,
                    "undefined8_pointer_var12": 1
                },
                "unaff_R15": {
                    "in_stack_00000008": 1,
                    "output_ptr": 1,
                    "pointer_8": 1,
                    "pointer_to_undefined8_14": 1,
                    "pointer_unaff_r15": 1,
                    "pointer_var_12": 1,
                    "ptr_r15": 1,
                    "r15": 1,
                    "reg_r15": 1,
                    "register15": 3,
                    "register4": 1,
                    "register6": 2,
                    "register_15": 1,
                    "register_r15": 4,
                    "register_var4": 1,
                    "register_variable6": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_pointer4": 1,
                    "temp_ptr6": 1,
                    "temporary_register": 1,
                    "unaffected_pointer_r15": 1,
                    "undefined8_pointer15": 1,
                    "undefined8_pointer_var13": 1
                },
                "unaff_RBP": {
                    "base_pointer": 4,
                    "config_ptr": 1,
                    "input_ptr2": 1,
                    "parameters": 1,
                    "pointer_2": 1,
                    "pointer_to_undefined8_5": 1,
                    "pointer_unaff_rbp": 1,
                    "pointer_var_5": 1,
                    "ptr2": 1,
                    "ptr_rbp": 1,
                    "rbp": 1,
                    "reg_rbp": 1,
                    "register2": 3,
                    "register_bp": 7,
                    "register_rbp": 1,
                    "register_variable2": 1,
                    "undefined8_pointer5": 1,
                    "undefined8_pointer_var3": 1
                },
                "unaff_RBX": {
                    "accumulator": 3,
                    "bx": 1,
                    "counter": 1,
                    "input_ptr1": 1,
                    "pointer_1": 1,
                    "pointer_to_undefined8_3": 1,
                    "pointer_unaff_rbx": 1,
                    "pointer_var_3": 1,
                    "ptr1": 1,
                    "ptr_rbx": 1,
                    "reg_rbx": 1,
                    "register1": 3,
                    "register_b": 1,
                    "register_bx": 6,
                    "register_rbx": 1,
                    "register_variable1": 1,
                    "result_var": 1,
                    "temp_ptr": 1,
                    "undefined8_pointer3": 1,
                    "undefined8_pointer_var1": 1
                },
                "unaff_retaddr": {
                    "register7": 1,
                    "register_ret_addr": 1,
                    "register_retaddr": 1,
                    "register_return_address": 2,
                    "ret_addr": 3,
                    "return_addr": 1,
                    "return_address": 9,
                    "return_value": 1,
                    "ulong_unaff_retaddr": 1,
                    "ulong_value_3": 1,
                    "ulong_var": 2,
                    "ulong_var_2": 1,
                    "ulong_variable": 1,
                    "ulong_variable1": 1,
                    "unaff_retaddr": 1,
                    "unaffected_return_address": 1,
                    "unsigned_long_var": 1,
                    "unsigned_long_variable2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nvoid reverse_and_process_data_001049c0(void)\n\n{\n  char *char_pointer;\n  code *code_pointer;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 ulong_var;\n  long long_var;\n  undefined8 *pointer_var;\n  long long_var2;\n  undefined8 *pointer_var2;\n  undefined8 *register_bx;\n  undefined8 *pointer_var3;\n  undefined8 *register_bp;\n  undefined8 *pointer_var;\n  undefined8 *pointer_var12;\n  undefined8 *undefined8_pointer9;\n  undefined8 *pointer_var13;\n  undefined8 *register_9;\n  undefined8 *pointer_var;\n  undefined8 *pointer_var15;\n  undefined8 *register_r12;\n  undefined8 *register_r13;\n  undefined8 *register_r14;\n  undefined8 *register_r15;\n  bool bool_var;\n  byte byte_var;\n  ulong return_address;\n  ulong unsigned_var3;\n  undefined8 stack_var1;\n  undefined8 *stack_var2;\n  undefined8 *stack_var3;\n  undefined8 stack_var4;\n  void *stack_var5;\n  undefined8 *stack_var6;\n  \n  byte_var = 0;\n  do {\n    register_bx = (undefined8 *)((long)register_bx + (long)register_r14);\nLAB_001049c3:\n    do {\n      do {\n        register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n        pointer_var15 = register_r12;\n        pointer_var12 = register_bp;\n        if (register_r12 <= register_r13) goto LAB_00104b15;\nLAB_001049cf:\n        pointer_var = (undefined8 *)\n                 (**(code **)(register_bp[1] + 0x270))\n                           (register_bp,return_address & 0xffffffff,register_r13,register_r15);\n        pointer_var = register_bp;\n        pointer_var12 = register_r13;\n        pointer_var15 = register_r15;\n        if (pointer_var == (undefined8 *)0x0) goto LAB_00102eb0;\n        char_pointer = (char *)pointer_var[1];\n        if (((char_pointer == (char *)0x0) || (*char_pointer != '_')) || (char_pointer[1] != '_')) {\nLAB_00104a03:\n          if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uint_var = (uint)(pointer_var[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uint_var != 0) goto LAB_00104a2d;\n          register_r13 = (undefined8 *)((long)register_r13 + (long)register_r14);\n          pointer_var15 = register_r12;\n          pointer_var12 = register_bp;\n          if (register_r12 <= register_r13) {\nLAB_00104b15:\n            register_bx = (undefined8 *)((long)register_bx - (long)stack_var3);\n            if (register_r14 == (undefined8 *)0x8) {\n              long_var2 = pointer_var12[1];\n              pointer_var = (undefined8 *)((long)register_bx + 7);\n              if (-1 < (long)register_bx) {\n                pointer_var = register_bx;\n              }\n              undefined8_pointer9 = (undefined8 *)(ulong)DAT_0010b800;\n              code_pointer = *(code **)(long_var2 + 0x208);\n              pointer_var = (undefined8 *)((long)pointer_var >> 3);\n            }\n            else {\n              pointer_var = (undefined8 *)((long)register_bx / (long)register_r14);\n              long_var2 = pointer_var12[1];\n              code_pointer = *(code **)(long_var2 + 0x208);\n            }\n            register_bp = pointer_var12;\n            if (DAT_0010b800 == 0) {\n              DAT_0010b778 = DAT_0010b80c != 0;\n              DAT_0010b780 = pointer_var12;\n              DAT_0010b770 = (undefined8 *)(*code_pointer)(pointer_var12);\n              DAT_0010b768 = (undefined8 *)(**(code **)(pointer_var12[1] + 0x208))(pointer_var12);\n              register_bx = stack_var6;\n              if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n                print_error_message_and_exit_00106530(*pointer_var12);\n                pointer_var3 = register_r15;\n                goto LAB_00102d8e;\n              }\n              register_r12 = (undefined8 *)(ulong)stack_var4._4_4_;\n              if (DAT_0010b7f8 != 0) {\n                unsigned_var3 = (ulong)(DAT_0010b80c != 0);\n                qsort(stack_var6,(size_t)pointer_var,(size_t)register_r12,check_file_compile_status_00102fd2);\n                pointer_var15 = (undefined8 *)xmalloc((long)pointer_var << 4);\n                pointer_var13 = DAT_0010b770;\n                register_bp = DAT_0010b768;\n                register_r14 = (undefined8 *)((long)pointer_var * (long)register_r12 + (long)register_bx);\n                pointer_var = DAT_0010b770;\n                register_9 = DAT_0010b768;\n                if (register_r14 <= register_bx) goto LAB_00102ec2;\n                pointer_var = (undefined8 *)\n                          (**(code **)(pointer_var12[1] + 0x270))(pointer_var12,unsigned_var3 & 0xffffffff,register_bx);\n                pointer_var3 = register_bx;\n                undefined8_pointer9 = register_r12;\n                stack_var2 = pointer_var15;\n                if (pointer_var == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(stack_var6,(size_t)pointer_var,(size_t)register_r12,\n                    (compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2])\n              ;\n              long_var2 = pointer_var12[1];\n            }\n            pointer_var3 = (undefined8 *)0x0;\n            do {\n              pointer_var12 = stack_var6;\n              pointer_var = (undefined8 *)(ulong)DAT_0010b7f8;\n              register_r14 = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n              if (DAT_0010b7f8 != 0) {\n                pointer_var15 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n                if (pointer_var15 == (undefined8 *)0x0) goto LAB_00102ed2;\n                register_bx = pointer_var3 + (long)pointer_var * 2;\n                pointer_var = pointer_var3;\n                do {\n                  if (register_bx <= pointer_var) {\nLAB_00104c75:\n                    if (stack_var5 == (void *)0x0) {\n                      free(stack_var6);\n                      free(pointer_var3);\n                      return;\n                    }\n                    free(stack_var5);\n                    free(stack_var6);\n                    free(pointer_var3);\n                    return;\n                  }\n                  pointer_var = pointer_var15;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,*pointer_var);\n                  if (long_var2 == 0) {\n                    print_error_message_and_exit_00106530(*register_bp,0);\nLAB_00102ed2:\n                    pointer_var12 = (undefined8 *)*register_bp;\n                    print_error_message_and_exit_00106530();\n                    pointer_var13 = undefined8_pointer9;\n                    pointer_var = register_9;\n                    goto LAB_00102edb;\n                  }\n                  pointer_var12 = pointer_var + 1;\n                  pointer_var = pointer_var + 2;\n                  print_labels_and_strings_00105110(register_bp,long_var2,*pointer_var12,stack_var1);\n                } while( true );\n              }\n              register_r12 = (undefined8 *)(ulong)stack_var4._4_4_;\n              register_r15 = (undefined8 *)(**(code **)(long_var2 + 0x208))(register_bp);\n              if (register_r15 == (undefined8 *)0x0) {\n                print_error_message_and_exit_00106530(*register_bp);\n                pointer_var12 = register_r12;\n                if (DAT_0010b80c == 0) {\n                  long_var2 = (**(code **)(register_bp[1] + 0x350))(register_bp);\n                  pointer_var = stack_var6;\n                  pointer_var15 = register_r12;\n                  if (long_var2 < 1) {\n                    pointer_var = (undefined8 *)0x0;\n                    register_bx = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    register_bx = (undefined8 *)xmalloc();\n                    pointer_var = (undefined8 *)(**(code **)(register_bp[1] + 0x358))(register_bp,register_bx);\n                    pointer_var12 = pointer_var15;\n                    if ((long)pointer_var < 0) {\n                      pointer_var12 = (undefined8 *)*register_bp;\n                      pointer_var = (undefined8 *)print_error_message_and_exit_00106530(pointer_var12,pointer_var15);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  pointer_var = register_r12;\n                  register_bx = stack_var6;\n                  pointer_var = (undefined8 *)0x0;\n                  pointer_var15 = (undefined8 *)0x0;\n                }\n                register_9 = &stack0x00000040;\n                undefined8_pointer9 = register_bx;\n                long_var2 = (**(code **)(register_bp[1] + 0x360))(register_bp,pointer_var15,pointer_var,pointer_var);\n                register_r12 = pointer_var12;\n                if (0 < long_var2) {\n                  register_r12 = (undefined8 *)((long)pointer_var12 + long_var2);\n                  stack_var6 = (undefined8 *)xrealloc(stack_var6);\n                  long_var = 0;\n                  do {\n                    stack_var6[(long)((long)pointer_var12 + long_var)] =\n                         (void *)(long_var * 0x30 + (long)stack_var5);\n                    long_var = long_var + 1;\n                  } while (long_var2 != long_var);\n                  stack_var6[(long)((long)pointer_var12 + long_var2)] = 0;\n                }\n                if ((DAT_0010b80c == 0) && (register_bx != (undefined8 *)0x0)) {\n                  free(register_bx);\n                }\n                if ((*(byte *)((long)register_bp + 0x4a) & 0x10) != 0) {\n                  register_bx = (undefined8 *)*register_bp;\n                  DAT_0010b230 = '\\0';\n                  ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  print_error_with_formatted_message_00106400(ulong_var);\n                }\n                register_r14 = (undefined8 *)(ulong)stack_var4._4_4_;\n                bool_var = DAT_0010b80c != 0;\n                pointer_var = (undefined8 *)(ulong)bool_var;\n                pointer_var = stack_var6;\n                stack_var3 = stack_var6;\n                register_r15 = (undefined8 *)(**(code **)(register_bp[1] + 0x208))(register_bp);\n                if (register_r15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                pointer_var = (undefined8 *)((long)pointer_var * (long)register_r12 + (long)pointer_var12);\n                register_bx = pointer_var12;\n                while( true ) {\n                  if (pointer_var <= register_bx) goto LAB_00104c75;\n                  pointer_var = register_r15;\n                  long_var2 = (**(code **)(register_bp[1] + 0x270))(register_bp,register_r14,register_bx);\n                  if (long_var2 == 0) break;\n                  register_bx = (undefined8 *)((long)register_bx + (long)register_r12);\n                  print_labels_and_strings_00105110(register_bp,long_var2,0,stack_var1);\n                }\n                print_error_message_and_exit_00106530(*register_bp,0);\n              }\n              print_error_message_and_exit_00106530(*register_bp);\n              pointer_var12 = register_bp;\n              pointer_var15 = register_r15;\nLAB_00102eb0:\n              print_error_message_and_exit_00106530(*pointer_var);\nLAB_00102eb9:\n              print_error_message_and_exit_00106530(*pointer_var12);\nLAB_00102ec2:\n              pointer_var = (undefined8 *)0x0;\n              pointer_var3 = register_bx;\n              undefined8_pointer9 = register_r12;\n              pointer_var13 = pointer_var;\n              register_bp = register_9;\n              stack_var2 = pointer_var15;\nLAB_00104e35:\n              while (register_9 = pointer_var13, pointer_var3 < register_r14) {\n                register_bx = (undefined8 *)((long)pointer_var3 + (long)undefined8_pointer9);\n                if (register_bx < register_r14) {\n                  pointer_var = register_bp;\n                  pointer_var13 = undefined8_pointer9;\n                  pointer_var = register_9;\n                  pointer_var2 = (undefined8 *)(**(code **)(pointer_var12[1] + 0x270))();\n                  if (pointer_var2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    register_9 = pointer_var;\n                    undefined8_pointer9 = pointer_var13;\n                    pointer_var12 = (undefined8 *)*pointer_var12;\n                    pointer_var2 = (undefined8 *)print_error_message_and_exit_00106530();\n                  }\n                  else {\n                    pointer_var = (undefined8 *)pointer_var[4];\n                    if ((*(uint *)(pointer_var + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  long_var2 = pointer_var[2];\nLAB_00102ee7:\n                  if (pointer_var == (undefined8 *)pointer_var2[4]) {\n                    long_var2 = pointer_var2[2] - long_var2;\n                    pointer_var13 = register_bp;\n                    pointer_var = pointer_var3;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  long_var2 = pointer_var[8] - long_var2;\n                  pointer_var13 = register_bp;\n                  pointer_var = pointer_var3;\n                }\n                else {\n                  pointer_var = (undefined8 *)pointer_var[4];\n                  if ((*(uint *)(pointer_var + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    long_var2 = pointer_var[2];\n                    pointer_var2 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  pointer_var2 = (undefined8 *)0x0;\nLAB_00104e95:\n                  pointer_var13 = register_bp;\n                  pointer_var = pointer_var3;\n                  if (*(int *)(pointer_var12[1] + 8) == 5) {\n                    long_var2 = pointer_var[7];\n                  }\n                  else {\n                    long_var2 = pointer_var[2];\n                    if ((*(byte *)((long)pointer_var + 0x25) & 0x10) == 0) {\n                      if (register_bx < register_r14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                pointer_var = pointer_var2;\n                pointer_var3 = register_bx;\n                register_bp = register_9;\n                if (long_var2 != 0) {\n                  *pointer_var15 = pointer_var;\n                  pointer_var15[1] = long_var2;\n                  pointer_var15 = pointer_var15 + 2;\n                }\n              }\n              pointer_var = (undefined8 *)((long)pointer_var15 - (long)stack_var2 >> 4);\n              qsort(stack_var2,(size_t)pointer_var,0x10,FUN_00103533);\n              long_var2 = pointer_var12[1];\n              register_bx = pointer_var3;\n              register_bp = pointer_var12;\n              pointer_var3 = stack_var2;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        int_var = strcmp(char_pointer + (char_pointer[2] == '_'),\"__gnu_lto_slim\");\n        stack_var2 = pointer_var;\n        if (int_var == 0) {\n          if (DAT_0010b230 != '\\0') {\n            stack_var2 = (undefined8 *)*register_bp;\n            DAT_0010b230 = '\\0';\n            ulong_var = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            print_error_with_formatted_message_00106400(ulong_var,stack_var2);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 == 0) {\n          if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n          uint_var = (*(uint *)(pointer_var + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(pointer_var + 3) & 0x800082) == 0) && (pointer_var[4] != 0x10c2a8)) &&\n           ((*(byte *)(pointer_var[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c != 0) {\n          if (DAT_0010b7f8 == 0) goto LAB_00104a53;\nprocess_lto_slim_object_00104d5b_00104d5b:\n          if ((pointer_var[4] != 0x10c2a8) && (pointer_var[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(pointer_var + 3) & 4) != 0);\n      if (DAT_0010b7f8 != 0) goto process_lto_slim_object_00104d5b_00104d5b;\nLAB_00104a53:\n      register_9 = (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 == 0) {\n        char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n        if (char_var != '\\0') {\n          FUN_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (pointer_var[4] == 0x10c2a8);\nLAB_00104cba:\n    char_var = (**(code **)(register_bp[1] + 0x230))(register_bp);\n    if (char_var != '\\0') {\n      FUN_00102c19();\n      return;\n    }\nLAB_00104a7b:\n    if (register_bx != register_r13) {\n      if (register_r14 == (undefined8 *)0x8) {\n        *register_bx = *register_r13;\n        reverse_and_process_data_001049c0();\n        return;\n      }\n      for (; register_r14 != (undefined8 *)0x0; register_r14 = (undefined8 *)((long)register_r14 + -1)) {\n        *(undefined *)register_bx = *(undefined *)register_r13;\n        register_r13 = (undefined8 *)((long)register_r13 + (ulong)byte_var * -2 + 1);\n        register_bx = (undefined8 *)((long)register_bx + (ulong)byte_var * -2 + 1);\n      }\n      reverse_and_process_data_001049c0();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  pointer_var15 = (undefined8 *)((long)register_r12 * (long)register_r14);\n  register_r12 = (undefined8 *)((long)stack_var3 + (long)pointer_var15);\n  register_bx = stack_var3;\n  pointer_var12 = register_bp;\n  if (stack_var3 < register_r12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)bool_var;\n  register_r13 = stack_var3;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "reverse_and_process_data_001049c0",
            "entrypoint": "0x001049c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001049c0": "reverse_and_process_data_001049c0",
                "__compar_fn_t": "compar_fn_t",
                "__ptr": "pointer_var3",
                "bVar16": "bool_var",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "in_R8": "undefined8_pointer9",
                "in_R9": "register_9",
                "in_stack_00000008": "stack_var1",
                "in_stack_00000010": "stack_var2",
                "in_stack_00000018": "stack_var3",
                "in_stack_00000038": "stack_var4",
                "in_stack_00000040": "stack_var5",
                "in_stack_00000048": "stack_var6",
                "lVar7": "long_var",
                "lVar9": "long_var2",
                "pcVar1": "char_pointer",
                "pcVar2": "code_pointer",
                "puVar1": "pointer1",
                "puVar10": "pointer_var2",
                "puVar11": "pointer_var",
                "puVar12": "pointer_var12",
                "puVar13": "pointer_var13",
                "puVar14": "pointer_var",
                "puVar15": "pointer_var15",
                "puVar8": "pointer_var",
                "uVar18": "unsigned_var3",
                "uVar5": "uint_var",
                "uVar6": "ulong_var",
                "unaff_R12": "register_r12",
                "unaff_R13": "register_r13",
                "unaff_R14": "register_r14",
                "unaff_R15": "register_r15",
                "unaff_RBP": "register_bp",
                "unaff_RBX": "register_bx",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104d5b": {
            "additional_data": {
                "FUN_00104d5b": {
                    "process_lto_data": 1,
                    "process_lto_file": 3,
                    "process_lto_files": 2,
                    "process_lto_object": 19,
                    "process_lto_objects": 5,
                    "process_lto_slim_object_00104d5b": 1
                },
                "__ptr": {
                    "allocated_memory_ptr": 1,
                    "p_ptr": 1,
                    "pointer": 1,
                    "pointer_ptr": 1,
                    "pointer_var2": 1,
                    "pointer_var4": 1,
                    "pointer_variable": 1,
                    "pointer_variable2": 1,
                    "pointer_variable_3": 1,
                    "pointer_variable_ptr": 1,
                    "ptr_val2": 1,
                    "ptr_var2": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "var_ptr": 1
                },
                "bVar16": {
                    "b_var16": 1,
                    "bool16": 1,
                    "bool_val": 1,
                    "bool_var": 6,
                    "bool_variable": 1,
                    "boolean_flag": 1,
                    "boolean_var": 1,
                    "boolean_variable": 3,
                    "flag": 1,
                    "flag3": 1,
                    "is_flag_set": 1,
                    "is_lto_plugin": 1,
                    "is_plugin_needed": 1,
                    "temp_var_12": 1
                },
                "bVar17": {
                    "b_var17": 1,
                    "bool17": 1,
                    "bool_variable": 1,
                    "byte_val": 2,
                    "byte_value": 1,
                    "byte_var": 7,
                    "byte_variable": 4,
                    "counter": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "increment_step": 1,
                    "reverse_data": 2,
                    "swap_flag": 1,
                    "temp_var_13": 1
                },
                "base_pointer": {
                    "base_pointer": 1
                },
                "cVar3": {
                    "c_var3": 1,
                    "char3": 1,
                    "char_val": 2,
                    "char_value": 1,
                    "char_var": 7,
                    "char_variable": 4,
                    "character": 2,
                    "character_var": 1,
                    "compare_result": 1,
                    "comparison_result": 1,
                    "curr_char": 1,
                    "flag": 2,
                    "is_lto_object": 1,
                    "result": 1,
                    "temp_var_14": 1
                },
                "current_addr": {
                    "current_addr": 1
                },
                "current_object": {
                    "current_object": 1
                },
                "dVar16": {
                    "bool_var": 1
                },
                "false_cond": {
                    "0": 1
                },
                "flag": {
                    "flag": 1
                },
                "iVar4": {
                    "cmp_result": 1,
                    "comparison_result": 5,
                    "i_var4": 2,
                    "int4": 1,
                    "int_val": 2,
                    "int_var": 6,
                    "int_variable": 3,
                    "integer_var": 2,
                    "integer_variable": 1,
                    "result": 1,
                    "string_compare_result": 1,
                    "string_comparison_result": 1,
                    "temp_var_9": 1,
                    "var_4": 1
                },
                "in_R12": {
                    "item_size": 1,
                    "object_array": 1,
                    "object_array_end": 1
                },
                "in_R13": {
                    "current_object": 1,
                    "label_string_array": 1,
                    "source_buffer": 1
                },
                "in_R14": {
                    "item_count": 1,
                    "object_array_stride": 1,
                    "string_length": 1
                },
                "in_R15": {
                    "object_array_end": 1,
                    "sorted_array": 1,
                    "temporary_buffer": 1
                },
                "in_R8": {
                    "arg2": 1,
                    "element_size": 1,
                    "for_loop_variable": 1,
                    "input_ptr": 1,
                    "num_elements": 1,
                    "param_4": 1,
                    "param_r8": 1,
                    "parameters4": 1
                },
                "in_R9": {
                    "arg3": 1,
                    "for_loop_variable_2": 1,
                    "number_of_elements": 1,
                    "output_ptr": 1,
                    "parameters5": 1
                },
                "in_RBP": {
                    "context": 1,
                    "current_data_pointer": 1,
                    "object_array_base": 1,
                    "object_info": 1
                },
                "in_RBX": {
                    "current_object": 1,
                    "destination_array": 1,
                    "destination_buffer": 1,
                    "output_data": 1,
                    "parameters2": 1
                },
                "in_RCX": {
                    "arg1": 1,
                    "arguments": 1,
                    "array": 1,
                    "current_param": 1,
                    "file_data": 1,
                    "function_array": 1,
                    "input_array": 2,
                    "input_data": 2,
                    "lto_object": 1,
                    "object_array": 1,
                    "object_data": 1,
                    "objects": 1,
                    "p_in_rcx": 1,
                    "param_1": 2,
                    "parameters1": 1,
                    "pointer": 1,
                    "pointer_param1": 1,
                    "pointer_var11": 1,
                    "ptr_var10": 1,
                    "reg_rcx": 1
                },
                "in_stack_00000038": {
                    "data_size": 1,
                    "in_stack_00000038": 1,
                    "local_variable": 1,
                    "param": 1,
                    "param_10": 1,
                    "param_in_stack": 1,
                    "parameter_1": 1,
                    "parameter_6": 1,
                    "some_var": 1,
                    "stack_param": 1,
                    "stack_var": 2,
                    "stack_variable": 1,
                    "stack_variable_00000038": 1
                },
                "lVar8": {
                    "counter": 1,
                    "index": 1,
                    "l_var8": 2,
                    "length": 2,
                    "long8": 1,
                    "long_val": 2,
                    "long_var": 6,
                    "long_var1": 2,
                    "long_variable": 1,
                    "long_variable1": 1,
                    "long_variable_3": 1,
                    "long_variable_8": 1,
                    "loop_counter": 3,
                    "loop_var": 1,
                    "temp_var_7": 1,
                    "temp_variable": 1,
                    "var_l": 1
                },
                "lVar9": {
                    "address": 1,
                    "current_object_index": 1,
                    "function_pointer": 1,
                    "l_var9": 2,
                    "length": 1,
                    "long9": 1,
                    "long_val1": 1,
                    "long_var": 1,
                    "long_var2": 5,
                    "long_var_2": 2,
                    "long_variable2": 2,
                    "long_variable_4": 1,
                    "long_variable_9": 1,
                    "memory_address_2": 1,
                    "result_var": 1,
                    "size": 1,
                    "size_val": 1,
                    "temp_var_8": 1,
                    "temp_variable": 1,
                    "temp_variable_2": 1,
                    "var_l": 1
                },
                "null_pointer": {
                    "0x0": 1
                },
                "num_objects": {
                    "num_objects": 1
                },
                "object_data": {
                    "object_data": 1
                },
                "object_size": {
                    "object_size": 1
                },
                "param_13": {
                    "additional_param_4": 1,
                    "alloc_ptr": 1,
                    "allocated_memory": 1,
                    "arg7": 1,
                    "function_parameter_13": 1,
                    "heap_allocated_memory": 1,
                    "labels": 1,
                    "labels_and_strings": 2,
                    "p_param_13": 1,
                    "param13": 1,
                    "param14": 1,
                    "param_13": 4,
                    "param_3": 1,
                    "param_ptr": 1,
                    "param_val4": 1,
                    "param_var4": 2,
                    "parameter13": 1,
                    "parameter_13": 4,
                    "parameter_4": 1,
                    "parameter_var4": 1,
                    "temporary_buffer": 1,
                    "var_param_13": 1
                },
                "param_14": {
                    "additional_param_5": 1,
                    "arg8": 1,
                    "array_of_strings": 1,
                    "data": 1,
                    "destination_buffer": 1,
                    "function_parameter_14": 1,
                    "output_array": 1,
                    "p_param_14": 1,
                    "param14": 2,
                    "param15": 1,
                    "param_14": 3,
                    "param_4": 1,
                    "param_val5": 1,
                    "param_var5": 2,
                    "parameter14": 1,
                    "parameter_14": 3,
                    "parameter_5": 1,
                    "parameter_var5": 1,
                    "result_array": 1,
                    "strings": 1,
                    "temp_array": 1,
                    "unsorted_array": 1,
                    "unsorted_object_array": 1,
                    "var_param_14": 1
                },
                "param_7": {
                    "additional_param_1": 1,
                    "arg4": 1,
                    "comparator": 1,
                    "error_message": 1,
                    "function_argument": 1,
                    "function_param_7": 1,
                    "function_parameter_7": 1,
                    "param7": 2,
                    "param8": 1,
                    "param_1": 1,
                    "param_7": 9,
                    "param_val1": 1,
                    "param_var1": 2,
                    "parameter7": 1,
                    "parameter_1": 1,
                    "parameter_7": 4,
                    "parameter_var1": 1,
                    "var_param_7": 1
                },
                "param_8": {
                    "additional_param_2": 1,
                    "arg5": 1,
                    "array_of_pointers": 1,
                    "data_ptr1": 1,
                    "function_parameter_8": 1,
                    "input_data": 1,
                    "input_data_array": 1,
                    "labels": 1,
                    "p_param_8": 1,
                    "param8": 2,
                    "param9": 1,
                    "param_8": 4,
                    "param_val2": 1,
                    "param_var2": 2,
                    "parameter8": 1,
                    "parameter_2": 1,
                    "parameter_8": 3,
                    "parameter_var2": 1,
                    "reorganized_data": 1,
                    "sorted_array": 1,
                    "sorted_buffer": 1,
                    "sorted_object_array": 1,
                    "sorted_objects": 1,
                    "var_param_8": 1
                },
                "param_9": {
                    "additional_param_3": 1,
                    "arg6": 1,
                    "array_of_arguments": 1,
                    "array_to_sort": 1,
                    "data": 1,
                    "data_ptr2": 1,
                    "function_parameter_9": 1,
                    "input_objects": 1,
                    "num_elements": 1,
                    "object_array_chunk_size": 1,
                    "output_data_array": 1,
                    "p_param_9": 1,
                    "param10": 1,
                    "param9": 2,
                    "param_9": 4,
                    "param_val3": 1,
                    "param_var3": 2,
                    "parameter9": 1,
                    "parameter_3": 1,
                    "parameter_9": 3,
                    "parameter_var3": 1,
                    "source_buffer": 1,
                    "strings": 1,
                    "var_param_9": 1
                },
                "pcVar1": {
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "character_ptr": 1,
                    "current_entry": 1,
                    "current_string": 2,
                    "function_name": 3,
                    "p_pc_var1": 1,
                    "pointer_variable": 1,
                    "ptr": 3,
                    "ptr1": 1,
                    "str": 1,
                    "str_ptr": 2,
                    "string_pointer": 2,
                    "string_ptr": 3
                },
                "pcVar2": {
                    "code_pointer": 1,
                    "code_ptr": 2,
                    "current_function": 1,
                    "fn_ptr": 1,
                    "func_ptr": 4,
                    "function": 1,
                    "function_address": 1,
                    "function_pointer": 5,
                    "function_ptr": 6,
                    "p_pc_var2": 1,
                    "ptr2": 1
                },
                "puVar10": {
                    "function_result": 1,
                    "p_pu_var10": 1,
                    "pointer_var": 1,
                    "pointer_var2": 1,
                    "pointer_var3": 1,
                    "pointer_variable1": 1,
                    "pointer_variable_10": 1,
                    "pointer_variable_4": 1,
                    "ptr": 1,
                    "ptr10": 1,
                    "ptr_val3": 1,
                    "ptr_var2": 2,
                    "ptr_var_2": 1,
                    "result_pointer_2": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_var_6": 1,
                    "undefined8_ptr1": 1,
                    "var_10": 1
                },
                "puVar11": {
                    "current_element": 1,
                    "object_array_result": 1,
                    "p_pu_var11": 1,
                    "pointer": 1,
                    "pointer_1": 1,
                    "pointer_var": 1,
                    "pointer_var4": 1,
                    "pointer_var5": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_11": 1,
                    "pointer_variable_5": 1,
                    "ptr11": 1,
                    "ptr4": 1,
                    "ptr_val4": 1,
                    "ptr_var3": 2,
                    "ptr_var_1": 1,
                    "ptr_var_3": 1,
                    "temp_pointer_3": 1,
                    "temp_var_5": 1,
                    "undefined8_ptr2": 1,
                    "var_11": 1
                },
                "puVar12": {
                    "array_pointer": 1,
                    "base_pointer": 1,
                    "object_array_base": 1,
                    "p_pu_var12": 1,
                    "pointer_2": 1,
                    "pointer_var": 1,
                    "pointer_var5": 1,
                    "pointer_var7": 1,
                    "pointer_variable4": 1,
                    "pointer_variable_12": 1,
                    "pointer_variable_6": 1,
                    "ptr12": 1,
                    "ptr2": 1,
                    "ptr_val5": 1,
                    "ptr_var4": 2,
                    "ptr_var_2": 1,
                    "saved_rbp": 1,
                    "temp_var_1": 1,
                    "undefined8_ptr3": 1,
                    "var_12": 1
                },
                "puVar13": {
                    "array_pointer_2": 1,
                    "objects_allocated": 1,
                    "p_pu_var13": 1,
                    "param_r9": 1,
                    "pointer": 1,
                    "pointer_3": 1,
                    "pointer_var": 1,
                    "pointer_var6": 1,
                    "pointer_var8": 1,
                    "pointer_variable5": 1,
                    "pointer_variable_13": 1,
                    "pointer_variable_7": 1,
                    "ptr13": 1,
                    "ptr_val6": 1,
                    "ptr_var5": 2,
                    "ptr_var_3": 1,
                    "temp_var_2": 1,
                    "undefined8_ptr4": 1,
                    "var_13": 1
                },
                "puVar14": {
                    "array_pointer_3": 1,
                    "objects_allocated_end": 1,
                    "p_pu_var14": 1,
                    "pointer": 1,
                    "pointer_4": 1,
                    "pointer_var": 1,
                    "pointer_var11": 1,
                    "pointer_var7": 1,
                    "pointer_variable6": 1,
                    "pointer_variable_14": 1,
                    "pointer_variable_8": 1,
                    "ptr14": 1,
                    "ptr_val7": 1,
                    "ptr_var6": 2,
                    "ptr_var_4": 1,
                    "temp_ptr": 1,
                    "temp_var_3": 1,
                    "undefined8_ptr5": 1,
                    "var_14": 1
                },
                "puVar15": {
                    "allocated_memory_ptr": 1,
                    "p_pu_var15": 1,
                    "pointer_5": 1,
                    "pointer_var": 1,
                    "pointer_var12": 1,
                    "pointer_var8": 1,
                    "pointer_variable7": 1,
                    "pointer_variable_15": 1,
                    "pointer_variable_9": 1,
                    "ptr1": 1,
                    "ptr15": 1,
                    "ptr_val8": 1,
                    "ptr_var7": 2,
                    "ptr_var_5": 1,
                    "result_array_pointer": 1,
                    "result_pointer": 1,
                    "sorted_object_pointer": 1,
                    "temp_var_4": 1,
                    "undefined8_ptr6": 1,
                    "var_15": 1
                },
                "puVar7": {
                    "p_pu_var7": 1,
                    "pointer": 1,
                    "pointer_to_unsigned_long_variable": 1,
                    "pointer_var": 3,
                    "pointer_variable": 1,
                    "pointer_variable_2": 1,
                    "pointer_variable_7": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "ptr7": 1,
                    "ptr_val": 2,
                    "ptr_var": 4,
                    "ptr_var1": 1,
                    "result": 1,
                    "result_pointer": 1,
                    "return_value": 1,
                    "temp_pointer": 1,
                    "temp_var": 1,
                    "undefined8_pointer": 1,
                    "undefined8_ptr": 1,
                    "var_7": 1
                },
                "result_buffer": {
                    "result_buffer": 1
                },
                "return_address": {
                    "return_address": 1
                },
                "true_cond": {
                    "1": 1
                },
                "uVar18": {
                    "comparison_result": 1,
                    "data_index": 1,
                    "flag4": 1,
                    "is_lto_object": 1,
                    "is_plugin_needed": 1,
                    "plugin_needed": 1,
                    "result": 1,
                    "some_value": 1,
                    "temp_value": 1,
                    "u_var18": 3,
                    "ulong_val2": 1,
                    "ulong_var": 1,
                    "ulong_var2": 2,
                    "ulong_var_3": 1,
                    "ulong_variable2": 1,
                    "ulong_variable_18": 1,
                    "unsigned_var": 1,
                    "unsigned_var3": 1,
                    "unsigned_variable": 2,
                    "use_plugin": 1,
                    "var_18": 1,
                    "variable_1": 1
                },
                "uVar5": {
                    "bool_val": 1,
                    "boolean_value": 1,
                    "comparison_result": 1,
                    "condition_result": 1,
                    "flag": 2,
                    "is_condition_true": 1,
                    "is_match": 1,
                    "is_plugin_needed": 1,
                    "temp_var_10": 1,
                    "u_var5": 3,
                    "uint_val": 2,
                    "uint_var": 6,
                    "uint_variable": 2,
                    "unsigned_int_variable": 1,
                    "unsigned_var": 2,
                    "unsigned_variable_2": 1,
                    "var_5": 1
                },
                "uVar6": {
                    "comparison_result": 1,
                    "error_message": 4,
                    "formatted_message": 1,
                    "plugin_message": 1,
                    "result": 1,
                    "temp_var_11": 1,
                    "u_var6": 3,
                    "uint8_var": 1,
                    "ulong_val": 1,
                    "ulong_var": 3,
                    "ulong_variable": 1,
                    "undefined8_val": 1,
                    "undefined8_var": 1,
                    "undefined8_variable": 1,
                    "unknown_var": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_var2": 1,
                    "unsigned_variable_3": 1,
                    "unused_ret_val": 1,
                    "var_6": 1
                },
                "unaff_R12": {
                    "array_length": 1,
                    "buffer_end": 1,
                    "count": 1,
                    "item_size": 1,
                    "num_elements": 1,
                    "num_objects": 1,
                    "num_threads": 1,
                    "number_of_elements": 1,
                    "objects_per_chunk": 1,
                    "p_unaff_r12": 1,
                    "param_8": 1,
                    "pointer_6": 1,
                    "pointer_var13": 1,
                    "pointer_var9": 1,
                    "pointer_variable8": 1,
                    "pointer_variable_r12": 1,
                    "ptr_var11": 1,
                    "reg_r12": 1,
                    "register_r12": 1,
                    "size": 1,
                    "size_val": 1,
                    "start": 1,
                    "temp_var": 1,
                    "total_output_size": 1,
                    "undefined8_ptr7": 1,
                    "var_r12": 1
                },
                "unaff_R13": {
                    "buffer_start": 1,
                    "current": 1,
                    "current_data_pointer": 1,
                    "current_element": 1,
                    "current_index": 1,
                    "current_input_data": 1,
                    "current_object": 1,
                    "current_pointer": 1,
                    "element_index": 1,
                    "for_loop_variable_3": 1,
                    "index": 1,
                    "offset": 1,
                    "p_unaff_r13": 1,
                    "param_5": 1,
                    "pointer_7": 1,
                    "pointer_var10": 1,
                    "pointer_var12": 1,
                    "pointer_variable9": 1,
                    "pointer_variable_r13": 1,
                    "ptr_1": 1,
                    "ptr_var12": 1,
                    "reg_r13": 1,
                    "register_r13": 1,
                    "source_buffer": 1,
                    "start_index": 1,
                    "temp_var": 1,
                    "temp_variable_1": 1,
                    "var_r13": 1
                },
                "unaff_R14": {
                    "buffer_step": 1,
                    "calc_val": 1,
                    "data_chunk_size": 1,
                    "element_size": 3,
                    "end_index": 1,
                    "for_loop_variable_4": 1,
                    "item_count": 1,
                    "object_array_stride": 1,
                    "object_size": 1,
                    "output_data_size": 1,
                    "p_unaff_r14": 1,
                    "param_6": 1,
                    "pointer_8": 1,
                    "pointer_var13": 1,
                    "pointer_var14": 1,
                    "pointer_variable10": 1,
                    "pointer_variable_r14": 1,
                    "ptr_var13": 1,
                    "reg_r14": 1,
                    "register_r14": 1,
                    "step": 2,
                    "steps": 1,
                    "temp_var": 1,
                    "temp_variable_2": 1,
                    "var_r14": 1
                },
                "unaff_R15": {
                    "current_output_data": 1,
                    "data_end": 1,
                    "end": 1,
                    "for_loop_variable_5": 1,
                    "function_ptr": 1,
                    "input_base_ptr": 1,
                    "object_array_end": 1,
                    "operand": 1,
                    "output_buffer": 1,
                    "p_unaff_r15": 1,
                    "param_13": 1,
                    "param_7": 1,
                    "pointer_9": 1,
                    "pointer_var14": 1,
                    "pointer_var15": 1,
                    "pointer_variable11": 1,
                    "pointer_variable_r15": 1,
                    "ptr_2": 1,
                    "ptr_var14": 1,
                    "reg_r15": 1,
                    "register_r15": 1,
                    "result_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "temp_variable_3": 1,
                    "temporary_buffer": 1,
                    "thread_data": 1,
                    "var_r15": 1
                },
                "unaff_RBP": {
                    "array_pointer_5": 1,
                    "base": 1,
                    "base_pointer": 3,
                    "base_ptr": 3,
                    "current_param": 1,
                    "file_info": 1,
                    "function_context": 1,
                    "function_ptr": 1,
                    "input_array": 1,
                    "object_array_base": 1,
                    "object_info": 1,
                    "p_unaff_rbp": 1,
                    "param_3": 1,
                    "param_9": 1,
                    "parameters3": 1,
                    "pointer_var10": 1,
                    "pointer_var6": 1,
                    "pointer_variable_rbp": 1,
                    "ptr_var9": 1,
                    "rbp": 1,
                    "reg_rbp": 1,
                    "register_bp": 1,
                    "temp_var": 1,
                    "var_rbp": 1
                },
                "unaff_RBX": {
                    "array_pointer_4": 1,
                    "buffer_ptr": 1,
                    "current": 1,
                    "current_object": 1,
                    "data_ptr": 1,
                    "destination_buffer": 1,
                    "input_ptr": 1,
                    "iteration_variable": 1,
                    "loop_variable": 2,
                    "output_array": 2,
                    "output_data_pointer": 1,
                    "p_unaff_rbx": 1,
                    "param_14": 1,
                    "param_2": 1,
                    "pointer": 1,
                    "pointer_var3": 1,
                    "pointer_var9": 1,
                    "pointer_variable_rbx": 1,
                    "ptr_var8": 1,
                    "reg_rbx": 1,
                    "register_bx": 1,
                    "temp_var": 1,
                    "var_rbx": 1
                },
                "unaff_retaddr": {
                    "address": 1,
                    "p_unaff_retaddr": 1,
                    "reg_retaddr": 1,
                    "register_return_address": 1,
                    "ret_addr": 2,
                    "return_addr": 2,
                    "return_address": 13,
                    "return_value": 1,
                    "ulong_var": 1,
                    "ulong_var_2": 1,
                    "ulong_variable": 1,
                    "unsigned_long_var": 1,
                    "unsigned_long_variable2": 1,
                    "unused_ret_val": 1,
                    "var_retaddr": 1
                },
                "var_10": {
                    "var_10": 1
                },
                "var_11": {
                    "var_11": 1
                },
                "var_12": {
                    "var_12": 1
                },
                "var_13": {
                    "var_13": 1
                },
                "var_14": {
                    "var_14": 1
                },
                "var_15": {
                    "var_15": 1
                },
                "var_18": {
                    "var_18": 1
                },
                "var_4": {
                    "var_4": 1
                },
                "var_5": {
                    "var_5": 1
                },
                "var_6": {
                    "var_6": 1
                },
                "var_7": {
                    "var_7": 1
                },
                "var_8": {
                    "var_8": 1
                },
                "var_9": {
                    "var_9": 1
                },
                "var_l": {
                    "var_l": 1
                },
                "var_param_13": {
                    "var_param_13": 1
                },
                "var_param_14": {
                    "var_param_14": 1
                },
                "var_param_7": {
                    "var_param_7": 1
                },
                "var_param_8": {
                    "var_param_8": 1
                },
                "var_param_9": {
                    "var_param_9": 1
                },
                "var_ptr": {
                    "var_ptr": 1
                },
                "var_r12": {
                    "var_r12": 1
                },
                "var_r13": {
                    "var_r13": 1
                },
                "var_r14": {
                    "var_r14": 1
                },
                "var_r15": {
                    "var_r15": 1
                },
                "var_rbp": {
                    "var_rbp": 1
                },
                "var_rbx": {
                    "var_rbx": 1
                },
                "var_retaddr": {
                    "var_retaddr": 1
                }
            },
            "called": [
                "strcmp",
                "FUN_001049c0",
                "FUN_00102c19",
                "FUN_00104d5b",
                "xrealloc",
                "qsort",
                "FUN_00105110",
                "FUN_00102fd2",
                "free",
                "FUN_00103533",
                "FUN_00106530",
                "xmalloc",
                "dcgettext",
                "FUN_00106400"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\nvoid process_lto_slim_object_00104d5b_00104d5b(void)\n\n{\n  char *string_ptr;\n  code *function_ptr;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined8 error_message;\n  undefined8 *ptr_var;\n  long long_var;\n  long long_var2;\n  undefined8 *ptr_var2;\n  undefined8 *input_array;\n  undefined8 *loop_variable;\n  undefined8 *temp_ptr;\n  undefined8 *ptr_var3;\n  undefined8 *base_pointer;\n  undefined8 *ptr_var4;\n  undefined8 *for_loop_variable;\n  undefined8 *ptr_var5;\n  undefined8 *parameters5;\n  undefined8 *ptr_var6;\n  undefined8 *ptr_var7;\n  undefined8 *array_length;\n  undefined8 *ptr_var12;\n  undefined8 *element_size;\n  undefined8 *for_loop_variable_5;\n  bool bool_var;\n  byte byte_var;\n  ulong return_address;\n  ulong u_var18;\n  undefined8 param_7;\n  undefined8 *param_8;\n  undefined8 *param_9;\n  undefined8 stack_var;\n  void *parameter_13;\n  undefined8 *param_14;\n  \n  byte_var = 0;\n  do {\n    if ((input_array[4] != 0x10c2a8) && (input_array[4] != 0x10c3c0)) goto LAB_00104cba;\nLAB_001049c3:\n    do {\n      ptr_var12 = (undefined8 *)((long)ptr_var12 + (long)element_size);\n      ptr_var7 = array_length;\n      ptr_var4 = base_pointer;\n      if (array_length <= ptr_var12) goto LAB_00104b15;\nLAB_001049cf:\n      input_array = (undefined8 *)\n               (**(code **)(base_pointer[1] + 0x270))\n                         (base_pointer,return_address & 0xffffffff,ptr_var12,for_loop_variable_5);\n      ptr_var3 = base_pointer;\n      ptr_var4 = ptr_var12;\n      ptr_var7 = for_loop_variable_5;\n      if (input_array == (undefined8 *)0x0) goto LAB_00102eb0;\n      string_ptr = (char *)input_array[1];\n      if (((string_ptr == (char *)0x0) || (*string_ptr != '_')) || (string_ptr[1] != '_')) {\nLAB_00104a03:\n        if (DAT_0010b7e8 == 0) goto LAB_00104a11;\nLAB_00104ae2:\n        uint_var = (uint)(input_array[4] == 0x10c2a8);\nLAB_00104af9:\n        if (uint_var != 0) goto LAB_00104a2d;\n        ptr_var12 = (undefined8 *)((long)ptr_var12 + (long)element_size);\n        ptr_var7 = array_length;\n        ptr_var4 = base_pointer;\n        if (array_length <= ptr_var12) {\nLAB_00104b15:\n          loop_variable = (undefined8 *)((long)loop_variable - (long)param_9);\n          if (element_size == (undefined8 *)0x8) {\n            long_var2 = ptr_var4[1];\n            ptr_var3 = (undefined8 *)((long)loop_variable + 7);\n            if (-1 < (long)loop_variable) {\n              ptr_var3 = loop_variable;\n            }\n            for_loop_variable = (undefined8 *)(ulong)DAT_0010b800;\n            function_ptr = *(code **)(long_var2 + 0x208);\n            ptr_var3 = (undefined8 *)((long)ptr_var3 >> 3);\n          }\n          else {\n            ptr_var3 = (undefined8 *)((long)loop_variable / (long)element_size);\n            long_var2 = ptr_var4[1];\n            function_ptr = *(code **)(long_var2 + 0x208);\n          }\n          base_pointer = ptr_var4;\n          if (DAT_0010b800 == 0) {\n            DAT_0010b778 = DAT_0010b80c != 0;\n            DAT_0010b780 = ptr_var4;\n            DAT_0010b770 = (undefined8 *)(*function_ptr)(ptr_var4);\n            DAT_0010b768 = (undefined8 *)(**(code **)(ptr_var4[1] + 0x208))(ptr_var4);\n            loop_variable = param_14;\n            if ((DAT_0010b770 == (undefined8 *)0x0) || (DAT_0010b768 == (undefined8 *)0x0)) {\n              print_error_message_and_exit_00106530(*ptr_var4);\n              temp_ptr = for_loop_variable_5;\n              goto LAB_00102d8e;\n            }\n            array_length = (undefined8 *)(ulong)stack_var._4_4_;\n            if (DAT_0010b7f8 != 0) {\n              u_var18 = (ulong)(DAT_0010b80c != 0);\n              qsort(param_14,(size_t)ptr_var3,(size_t)array_length,check_file_compile_status_00102fd2);\n              ptr_var7 = (undefined8 *)xmalloc((long)ptr_var3 << 4);\n              ptr_var5 = DAT_0010b770;\n              base_pointer = DAT_0010b768;\n              element_size = (undefined8 *)((long)ptr_var3 * (long)array_length + (long)loop_variable);\n              input_array = DAT_0010b770;\n              parameters5 = DAT_0010b768;\n              if (element_size <= loop_variable) goto LAB_00102ec2;\n              ptr_var3 = (undefined8 *)\n                        (**(code **)(ptr_var4[1] + 0x270))(ptr_var4,u_var18 & 0xffffffff,loop_variable);\n              temp_ptr = loop_variable;\n              for_loop_variable = array_length;\n              param_8 = ptr_var7;\n              if (ptr_var3 == (undefined8 *)0x0) goto LAB_00102eb9;\n              goto LAB_00104e35;\n            }\n            qsort(param_14,(size_t)ptr_var3,(size_t)array_length,\n                  (__compar_fn_t)(&PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n            long_var2 = ptr_var4[1];\n          }\n          temp_ptr = (undefined8 *)0x0;\n          do {\n            ptr_var4 = param_14;\n            ptr_var = (undefined8 *)(ulong)DAT_0010b7f8;\n            element_size = (undefined8 *)(ulong)(DAT_0010b80c != 0);\n            if (DAT_0010b7f8 != 0) {\n              ptr_var7 = (undefined8 *)(**(code **)(long_var2 + 0x208))(base_pointer);\n              if (ptr_var7 == (undefined8 *)0x0) goto LAB_00102ed2;\n              loop_variable = temp_ptr + (long)ptr_var3 * 2;\n              ptr_var3 = temp_ptr;\n              do {\n                if (loop_variable <= ptr_var3) {\nLAB_00104c75:\n                  if (parameter_13 != (void *)0x0) {\n                    free(parameter_13);\n                    free(param_14);\n                    free(temp_ptr);\n                    return;\n                  }\n                  free(param_14);\n                  free(temp_ptr);\n                  return;\n                }\n                ptr_var = ptr_var7;\n                long_var2 = (**(code **)(base_pointer[1] + 0x270))(base_pointer,element_size,*ptr_var3);\n                if (long_var2 == 0) {\n                  print_error_message_and_exit_00106530(*base_pointer,0);\nLAB_00102ed2:\n                  ptr_var4 = (undefined8 *)*base_pointer;\n                  print_error_message_and_exit_00106530();\n                  ptr_var5 = for_loop_variable;\n                  ptr_var6 = parameters5;\n                  goto LAB_00102edb;\n                }\n                ptr_var4 = ptr_var3 + 1;\n                ptr_var3 = ptr_var3 + 2;\n                print_labels_and_strings_00105110(base_pointer,long_var2,*ptr_var4,param_7);\n              } while( true );\n            }\n            array_length = (undefined8 *)(ulong)stack_var._4_4_;\n            for_loop_variable_5 = (undefined8 *)(**(code **)(long_var2 + 0x208))(base_pointer);\n            if (for_loop_variable_5 == (undefined8 *)0x0) {\n              print_error_message_and_exit_00106530(*base_pointer);\n              ptr_var4 = array_length;\n              if (DAT_0010b80c == 0) {\n                long_var2 = (**(code **)(base_pointer[1] + 0x350))(base_pointer);\n                ptr_var3 = param_14;\n                ptr_var7 = array_length;\n                if (long_var2 < 1) {\n                  ptr_var = (undefined8 *)0x0;\n                  loop_variable = (undefined8 *)0x0;\n                }\n                else {\nLAB_00102d8e:\n                  loop_variable = (undefined8 *)xmalloc();\n                  ptr_var = (undefined8 *)(**(code **)(base_pointer[1] + 0x358))(base_pointer,loop_variable);\n                  ptr_var4 = ptr_var7;\n                  if ((long)ptr_var < 0) {\n                    ptr_var4 = (undefined8 *)*base_pointer;\n                    ptr_var3 = (undefined8 *)print_error_message_and_exit_00106530(ptr_var4,ptr_var7);\n                    goto LAB_00102dbe;\n                  }\n                }\n              }\n              else {\n                ptr_var = array_length;\n                loop_variable = param_14;\n                ptr_var3 = (undefined8 *)0x0;\n                ptr_var7 = (undefined8 *)0x0;\n              }\n              parameters5 = &stack0x00000040;\n              for_loop_variable = loop_variable;\n              long_var2 = (**(code **)(base_pointer[1] + 0x360))(base_pointer,ptr_var7,ptr_var3,ptr_var);\n              array_length = ptr_var4;\n              if (0 < long_var2) {\n                array_length = (undefined8 *)((long)ptr_var4 + long_var2);\n                param_14 = (undefined8 *)xrealloc(param_14);\n                long_var = 0;\n                do {\n                  param_14[(long)ptr_var4 + long_var] = (void *)(long_var * 0x30 + (long)parameter_13);\n                  long_var = long_var + 1;\n                } while (long_var2 != long_var);\n                param_14[(long)ptr_var4 + long_var2] = 0;\n              }\n              if ((DAT_0010b80c == 0) && (loop_variable != (undefined8 *)0x0)) {\n                free(loop_variable);\n              }\n              if ((*(byte *)((long)base_pointer + 0x4a) & 0x10) != 0) {\n                loop_variable = (undefined8 *)*base_pointer;\n                DAT_0010b230 = '\\0';\n                error_message = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                print_error_with_formatted_message_00106400(error_message);\n              }\n              element_size = (undefined8 *)(ulong)stack_var._4_4_;\n              bool_var = DAT_0010b80c != 0;\n              ptr_var3 = (undefined8 *)(ulong)bool_var;\n              input_array = param_14;\n              param_9 = param_14;\n              for_loop_variable_5 = (undefined8 *)(**(code **)(base_pointer[1] + 0x208))(base_pointer);\n              if (for_loop_variable_5 != (undefined8 *)0x0) goto code_r0x00104992;\n            }\n            else {\n              ptr_var3 = (undefined8 *)((long)ptr_var3 * (long)array_length + (long)ptr_var4);\n              loop_variable = ptr_var4;\n              while( true ) {\n                if (ptr_var3 <= loop_variable) goto LAB_00104c75;\n                input_array = for_loop_variable_5;\n                long_var2 = (**(code **)(base_pointer[1] + 0x270))(base_pointer,element_size,loop_variable);\n                if (long_var2 == 0) break;\n                loop_variable = (undefined8 *)((long)loop_variable + (long)array_length);\n                print_labels_and_strings_00105110(base_pointer,long_var2,0,param_7);\n              }\n              print_error_message_and_exit_00106530(*base_pointer,0);\n            }\n            print_error_message_and_exit_00106530(*base_pointer);\n            ptr_var4 = base_pointer;\n            ptr_var7 = for_loop_variable_5;\nLAB_00102eb0:\n            print_error_message_and_exit_00106530(*ptr_var3);\nLAB_00102eb9:\n            print_error_message_and_exit_00106530(*ptr_var4);\nLAB_00102ec2:\n            ptr_var3 = (undefined8 *)0x0;\n            temp_ptr = loop_variable;\n            for_loop_variable = array_length;\n            ptr_var5 = input_array;\n            base_pointer = parameters5;\n            param_8 = ptr_var7;\nLAB_00104e35:\n            while (parameters5 = ptr_var5, temp_ptr < element_size) {\n              loop_variable = (undefined8 *)((long)temp_ptr + (long)for_loop_variable);\n              if (loop_variable < element_size) {\n                ptr_var = base_pointer;\n                ptr_var5 = for_loop_variable;\n                ptr_var6 = parameters5;\n                ptr_var2 = (undefined8 *)(**(code **)(ptr_var4[1] + 0x270))();\n                if (ptr_var2 == (undefined8 *)0x0) {\nLAB_00102edb:\n                  parameters5 = ptr_var6;\n                  for_loop_variable = ptr_var5;\n                  ptr_var4 = (undefined8 *)*ptr_var4;\n                  ptr_var2 = (undefined8 *)print_error_message_and_exit_00106530();\n                }\n                else {\n                  ptr_var = (undefined8 *)ptr_var3[4];\n                  if ((*(uint *)(ptr_var3 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                }\n                long_var2 = ptr_var3[2];\nLAB_00102ee7:\n                if (ptr_var == (undefined8 *)ptr_var2[4]) {\n                  long_var2 = ptr_var2[2] - long_var2;\n                  ptr_var5 = base_pointer;\n                  ptr_var6 = temp_ptr;\n                  goto LAB_00104ea7;\n                }\nLAB_00102dc4:\n                long_var2 = ptr_var[8] - long_var2;\n                ptr_var5 = base_pointer;\n                ptr_var6 = temp_ptr;\n              }\n              else {\n                ptr_var = (undefined8 *)ptr_var3[4];\n                if ((*(uint *)(ptr_var3 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                  long_var2 = ptr_var3[2];\n                  ptr_var2 = (undefined8 *)0x0;\n                  goto LAB_00102dc4;\n                }\n                ptr_var2 = (undefined8 *)0x0;\nLAB_00104e95:\n                ptr_var5 = base_pointer;\n                ptr_var6 = temp_ptr;\n                if (*(int *)(ptr_var4[1] + 8) == 5) {\n                  long_var2 = ptr_var3[7];\n                }\n                else {\n                  long_var2 = ptr_var3[2];\n                  if ((*(byte *)((long)ptr_var + 0x25) & 0x10) == 0) {\n                    if (loop_variable < element_size) goto LAB_00102ee7;\n                    goto LAB_00102dc4;\n                  }\n                }\n              }\nLAB_00104ea7:\n              ptr_var3 = ptr_var2;\n              temp_ptr = loop_variable;\n              base_pointer = parameters5;\n              if (long_var2 != 0) {\n                *ptr_var7 = ptr_var6;\n                ptr_var7[1] = long_var2;\n                ptr_var7 = ptr_var7 + 2;\n              }\n            }\n            ptr_var3 = (undefined8 *)((long)ptr_var7 - (long)param_8 >> 4);\n            qsort(param_8,(size_t)ptr_var3,0x10,compare_and_execute_function_00103533);\n            long_var2 = ptr_var4[1];\n            loop_variable = temp_ptr;\n            base_pointer = ptr_var4;\n            temp_ptr = param_8;\n          } while( true );\n        }\n        goto LAB_001049cf;\n      }\n      int_var = strcmp(string_ptr + (string_ptr[2] == '_'),\"__gnu_lto_slim\");\n      param_8 = input_array;\n      if (int_var == 0) {\n        if (DAT_0010b230 != '\\0') {\n          param_8 = (undefined8 *)*base_pointer;\n          DAT_0010b230 = '\\0';\n          error_message = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          print_error_with_formatted_message_00106400(error_message,param_8);\n        }\n        goto LAB_00104a03;\n      }\n      if (DAT_0010b7e8 != 0) goto LAB_00104ae2;\nLAB_00104a11:\n      if (DAT_0010b808 == 0) {\n        if (DAT_0010b7d8 == 0) goto LAB_00104a2d;\n        uint_var = (*(uint *)(input_array + 3) >> 7 ^ 1) & 1;\n        goto LAB_00104af9;\n      }\n      if ((((*(uint *)(input_array + 3) & 0x800082) == 0) && (input_array[4] != 0x10c2a8)) &&\n         ((*(byte *)(input_array[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n    } while ((DAT_0010b81c == 0) && ((*(byte *)(input_array + 3) & 4) != 0));\n  } while (DAT_0010b7f8 != 0);\n  parameters5 = (undefined8 *)(ulong)DAT_0010b7e4;\n  if (DAT_0010b7e4 == 0) {\n    char_var = (**(code **)(base_pointer[1] + 0x230))(base_pointer);\n    if (char_var != '\\0') {\n      process_lto_object_00102c19();\n      return;\n    }\n  }\n  else {\n    if (input_array[4] == 0x10c2a8) goto LAB_001049c3;\nLAB_00104cba:\n    char_var = (**(code **)(base_pointer[1] + 0x230))(base_pointer);\n    if (char_var != '\\0') {\n      process_lto_object_00102c19();\n      return;\n    }\n  }\n  if (loop_variable != ptr_var12) {\n    if (element_size != (undefined8 *)0x8) {\n      for (; element_size != (undefined8 *)0x0; element_size = (undefined8 *)((long)element_size + -1)) {\n        *(undefined *)loop_variable = *(undefined *)ptr_var12;\n        ptr_var12 = (undefined8 *)((long)ptr_var12 + (ulong)byte_var * -2 + 1);\n        loop_variable = (undefined8 *)((long)loop_variable + (ulong)byte_var * -2 + 1);\n      }\n      reverse_and_process_data_001049c0();\n      return;\n    }\n    *loop_variable = *ptr_var12;\n    reverse_and_process_data_001049c0();\n    return;\n  }\n  loop_variable = (undefined8 *)((long)loop_variable + (long)element_size);\n  goto LAB_001049c3;\ncode_r0x00104992:\n  ptr_var7 = (undefined8 *)((long)array_length * (long)element_size);\n  array_length = (undefined8 *)((long)param_9 + (long)ptr_var7);\n  loop_variable = param_9;\n  ptr_var4 = base_pointer;\n  if (param_9 < array_length) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  return_address = (ulong)bool_var;\n  ptr_var12 = param_9;\n  goto LAB_001049cf;\n}\n\n",
            "current_name": "process_lto_slim_object_00104d5b_00104d5b",
            "entrypoint": "0x00104d5b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104d5b": "process_lto_slim_object_00104d5b_00104d5b",
                "__ptr": "temp_ptr",
                "bVar16": "bool_var",
                "bVar17": "byte_var",
                "cVar3": "char_var",
                "iVar4": "int_var",
                "in_R8": "for_loop_variable",
                "in_R9": "parameters5",
                "in_RCX": "input_array",
                "in_stack_00000038": "stack_var",
                "lVar8": "long_var",
                "lVar9": "long_var2",
                "param_13": "parameter_13",
                "pcVar1": "string_ptr",
                "pcVar2": "function_ptr",
                "puVar10": "ptr_var2",
                "puVar11": "ptr_var3",
                "puVar12": "ptr_var4",
                "puVar13": "ptr_var5",
                "puVar14": "ptr_var6",
                "puVar15": "ptr_var7",
                "puVar7": "ptr_var",
                "uVar18": "u_var18",
                "uVar5": "uint_var",
                "uVar6": "error_message",
                "unaff_R12": "array_length",
                "unaff_R13": "ptr_var12",
                "unaff_R14": "element_size",
                "unaff_R15": "for_loop_variable_5",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "loop_variable",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104fa0": {
            "additional_data": {
                "FUN_00104fa0": {
                    "compare_strings": 30,
                    "string_comparison": 1
                },
                "__s1": {
                    "ptr_string1": 2,
                    "ptr_string_1": 3,
                    "source_string": 1,
                    "str1": 8,
                    "str1_ptr": 1,
                    "str_1": 1,
                    "string1": 1,
                    "string1_pointer": 1,
                    "string1_ptr": 6,
                    "string_1_ptr": 5,
                    "string_one_ptr": 1,
                    "string_ptr1": 1
                },
                "__s2": {
                    "destination_string": 1,
                    "ptr_string2": 2,
                    "ptr_string_2": 3,
                    "str2": 8,
                    "str2_ptr": 1,
                    "str_2": 1,
                    "string2": 1,
                    "string2_pointer": 1,
                    "string2_ptr": 6,
                    "string_2_ptr": 5,
                    "string_ptr2": 1,
                    "string_two_ptr": 1
                },
                "lVar2": {
                    "func1_result": 1,
                    "length_1": 1,
                    "length_str1": 1,
                    "length_string_1": 1,
                    "ptr1": 2,
                    "ptr_1": 1,
                    "ptr_string1": 1,
                    "ptr_string1_length": 1,
                    "ptr_string_1_length": 1,
                    "result1": 4,
                    "result_1": 3,
                    "result_string1": 1,
                    "string1_length": 9,
                    "string_1_length": 2,
                    "string_one_length": 1
                },
                "lVar3": {
                    "func2_result": 1,
                    "length_2": 1,
                    "length_str2": 1,
                    "length_string_2": 1,
                    "ptr2": 2,
                    "ptr_2": 1,
                    "ptr_string2": 1,
                    "ptr_string2_length": 1,
                    "ptr_string_2_length": 1,
                    "result2": 4,
                    "result_2": 3,
                    "result_string2": 1,
                    "string2_length": 9,
                    "string_2_length": 2,
                    "string_two_length": 1
                },
                "param_1": {
                    "str1": 1,
                    "string1": 20,
                    "string_1": 9,
                    "string_one": 1
                },
                "param_2": {
                    "str2": 1,
                    "string2": 20,
                    "string_2": 9,
                    "string_two": 1
                },
                "uVar1": {
                    "comparison_result": 20,
                    "result": 4,
                    "string_comparison_result": 6
                }
            },
            "called": [
                "strcoll",
                "FUN_00102f9f"
            ],
            "calling": [
                "FUN_00105050",
                "FUN_00103bf6",
                "FUN_00102fd2"
            ],
            "code": "\nuint compare_strings_00104fa0(undefined8 string1,undefined8 string2)\n\n{\n  char *str2;\n  char *str1;\n  uint comparison_result;\n  long string1_length;\n  long string2_length;\n  \n  string1_length = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string1,DAT_0010b770);\n  string2_length = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string2,DAT_0010b768);\n  if ((string1_length == 0) || (string2_length == 0)) {\n    print_error_message_and_exit_00106530(*DAT_0010b780);\n  }\n  else {\n    str2 = *(char **)(string2_length + 8);\n    str1 = *(char **)(string1_length + 8);\n    if (str2 == (char *)0x0) {\n      return (uint)(str1 != (char *)0x0);\n    }\n    if (str1 != (char *)0x0) {\n      if (*str2 == '\\0') {\n        return (uint)(*str1 != '\\0');\n      }\n      if (*str1 == '\\0') {\n        return 0xffffffff;\n      }\n      comparison_result = strcoll(str1,str2);\n      return comparison_result;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "compare_strings_00104fa0",
            "entrypoint": "0x00104fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104fa0": "compare_strings_00104fa0",
                "__s1": "str1",
                "__s2": "str2",
                "lVar2": "string1_length",
                "lVar3": "string2_length",
                "param_1": "string1",
                "param_2": "string2",
                "uVar1": "comparison_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105050": {
            "additional_data": {
                "FUN_00105050": {
                    "check_string_lengths_and_formats": 1,
                    "compare_and_check_compilation": 1,
                    "compare_and_check_strings": 1,
                    "compare_and_print": 1,
                    "compare_and_return": 1,
                    "compare_and_validate": 2,
                    "compare_and_validate_strings": 6,
                    "compare_and_verify_files": 1,
                    "compare_binary_files": 4,
                    "compare_binary_function": 1,
                    "compare_compiled_code": 2,
                    "compare_data": 1,
                    "compare_file_versions": 2,
                    "compare_files": 1,
                    "compare_function": 2,
                    "compare_objects": 1,
                    "compare_strings": 3
                },
                "__s": {
                    "code_text1_ptr": 1,
                    "file_1_extension": 1,
                    "file_content_1": 1,
                    "file_data_1": 1,
                    "file_name1": 1,
                    "str1": 2,
                    "str_1": 1,
                    "string1": 3,
                    "string1_pointer": 1,
                    "string1_ptr": 3,
                    "string_1": 10,
                    "string_1_copy": 1,
                    "string_1_ptr": 3,
                    "string_ptr1": 1
                },
                "__s_00": {
                    "code_text2_ptr": 1,
                    "file_2_extension": 1,
                    "file_content_2": 1,
                    "file_data_2": 1,
                    "file_name2": 1,
                    "str2": 2,
                    "str_2": 1,
                    "string2": 3,
                    "string2_pointer": 1,
                    "string2_ptr": 3,
                    "string_2": 10,
                    "string_2_copy": 1,
                    "string_2_ptr": 3,
                    "string_ptr2": 1
                },
                "bVar16": {
                    "compare_result": 1,
                    "comparison_result": 1,
                    "flag": 1,
                    "flag_result": 1,
                    "is_different": 1,
                    "is_equal": 6,
                    "is_equal_length": 1,
                    "is_extension_matched": 1,
                    "is_less": 1,
                    "is_match": 5,
                    "size_comparison": 1,
                    "string_comparison_result": 1,
                    "string_length_comparison_check": 1,
                    "strings_are_equal": 1
                },
                "cVar1": {
                    "last_char": 6,
                    "last_char_first_string": 1,
                    "last_char_in_string": 1,
                    "last_char_string_1": 1
                },
                "lVar10": {
                    "exit_code": 1,
                    "file_1_header": 1,
                    "file_2": 1,
                    "file_size_result_2": 1,
                    "info2": 1,
                    "length2": 2,
                    "object_2_ptr": 1,
                    "result2": 4,
                    "result_2": 7,
                    "str_size2": 1,
                    "string2_details": 1,
                    "string2_metadata": 1,
                    "string_2_info": 3,
                    "string_2_length": 1,
                    "string_comparison_result": 1
                },
                "lVar3": {
                    "data_type1": 1,
                    "file_1_header": 1,
                    "file_info_1": 1,
                    "file_size_1": 2,
                    "file_type1": 1,
                    "file_type_1": 1,
                    "len_1": 1,
                    "length1": 4,
                    "length_1": 1,
                    "length_string_1": 3,
                    "num_1": 1,
                    "offset_1": 1,
                    "size1": 2,
                    "string1_info": 1,
                    "string1_length": 2,
                    "string_1_length": 5,
                    "string_1_type": 1,
                    "type1": 1,
                    "value_1": 1
                },
                "lVar9": {
                    "compilation_result": 1,
                    "file_1": 1,
                    "file_2_header": 1,
                    "file_descriptor_1": 1,
                    "file_size_result_1": 1,
                    "info1": 1,
                    "length_string_2": 1,
                    "object_1_ptr": 1,
                    "result1": 4,
                    "result_1": 7,
                    "size2": 1,
                    "string1_details": 1,
                    "string1_metadata": 1,
                    "string_1_info": 3
                },
                "param_1": {
                    "binary1": 1,
                    "binary_file1": 1,
                    "code1": 1,
                    "code_text1": 1,
                    "data_1": 1,
                    "file_path_1": 7,
                    "first_string": 1,
                    "input_1": 2,
                    "input_string1": 1,
                    "object_1": 1,
                    "string1": 7,
                    "string_1": 7
                },
                "param_2": {
                    "binary2": 1,
                    "binary_file2": 1,
                    "code2": 1,
                    "code_text2": 1,
                    "data_2": 1,
                    "file_path_2": 7,
                    "input_2": 2,
                    "input_string2": 1,
                    "object_2": 1,
                    "second_string": 1,
                    "string2": 7,
                    "string_2": 7
                },
                "pcVar7": {
                    "file_1_metadata_check": 1,
                    "find1": 1,
                    "find_str_1": 1,
                    "found_string": 1,
                    "gnu_compiled_check": 1,
                    "gnu_compiled_ptr": 2,
                    "gnu_compiled_str": 1,
                    "gnu_string1": 1,
                    "match_string": 1,
                    "pc_str1": 1,
                    "pc_str_1": 1,
                    "pointer_1": 1,
                    "search_result_1": 2,
                    "str1": 1,
                    "string_1_check": 1,
                    "strstr1": 1,
                    "strstr_result": 1,
                    "strstr_result_1": 3,
                    "substring_1": 1,
                    "substring_ptr": 1,
                    "substring_ptr1": 1
                },
                "pcVar8": {
                    "file_2_metadata_check": 1,
                    "find2": 1,
                    "find_str_2": 1,
                    "found_string_alt": 1,
                    "gcc2_compiled_check": 1,
                    "gcc2_compiled_ptr": 2,
                    "gcc2_compiled_str": 1,
                    "gcc_string1": 1,
                    "match_string2": 1,
                    "pc_str2": 1,
                    "pc_str_2": 1,
                    "pointer_2": 1,
                    "search_result_2": 2,
                    "str2": 1,
                    "string_2_check": 1,
                    "strstr2": 1,
                    "strstr_result_2": 4,
                    "substring_2": 1,
                    "substring_ptr2": 1,
                    "substring_ptr_2": 1
                },
                "sVar5": {
                    "content_length_1": 1,
                    "file_1_extension_length": 1,
                    "len1": 1,
                    "len_str1": 1,
                    "len_string_1": 1,
                    "length_1": 2,
                    "length_s1": 1,
                    "length_string_1": 2,
                    "str_1_length": 1,
                    "string1_length": 2,
                    "string_1_len": 1,
                    "string_1_length": 3,
                    "string_1_length_new": 1,
                    "string_length2": 1,
                    "string_length_1": 1,
                    "strlen1": 1
                },
                "sVar6": {
                    "content_length_2": 1,
                    "file_2_extension_length": 1,
                    "len2": 1,
                    "len_str2": 1,
                    "len_string_2": 1,
                    "length_2": 2,
                    "length_s2": 1,
                    "length_string_2": 2,
                    "str_2_length": 1,
                    "string2_length": 2,
                    "string_2_len": 1,
                    "string_2_length": 3,
                    "string_2_length_new": 1,
                    "string_length3": 1,
                    "string_length_2": 1,
                    "strlen2": 1
                },
                "uVar11": {
                    "comparison_result": 15,
                    "result": 14,
                    "validation_result": 1
                },
                "uVar12": {
                    "address_offset_2": 1,
                    "end_address1": 1,
                    "end_address_2": 1,
                    "end_address_string_2": 1,
                    "end_offset_2": 1,
                    "end_string_2": 1,
                    "file_2_data_end": 1,
                    "file_data_end_2": 1,
                    "file_end2": 1,
                    "file_size_2": 1,
                    "length_sum_1": 1,
                    "offset2": 3,
                    "offset_2": 2,
                    "str2_end": 1,
                    "string2_end_address": 1,
                    "string2_size": 1,
                    "string2_total": 1,
                    "string_2_end": 2,
                    "string_2_length": 1,
                    "string_2_length_with_offset": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "sum_1": 1,
                    "total_size2": 2
                },
                "uVar13": {
                    "address_offset_1": 1,
                    "end_address_1": 1,
                    "end_address_string_1": 1,
                    "file_1_data_end": 1,
                    "file_data_offset_1": 1,
                    "file_size1": 1,
                    "length_sum_2": 1,
                    "offset1": 3,
                    "offset_1": 2,
                    "offset_string_1": 1,
                    "size2": 1,
                    "size_1": 2,
                    "start_address1": 1,
                    "str1_offset": 1,
                    "string1_address": 1,
                    "string1_size": 1,
                    "string1_total": 1,
                    "string_1_offset": 4,
                    "string_1_size": 1,
                    "string_offset_1": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "sum_2": 1,
                    "total_size1": 1
                },
                "uVar14": {
                    "address_sum_1": 1,
                    "end1": 1,
                    "end_1": 1,
                    "end_address2": 1,
                    "end_address_string_1_check": 1,
                    "end_offset_1": 1,
                    "end_string_1": 1,
                    "file_1_data_start": 1,
                    "file_data_end_1": 1,
                    "file_end1": 1,
                    "offset_2": 1,
                    "result_offset1": 1,
                    "start_address_1": 1,
                    "str1_end": 1,
                    "string1_end": 1,
                    "string1_end_address": 1,
                    "string1_sum": 1,
                    "string_1_end": 3,
                    "string_1_length_with_offset": 1,
                    "string_offset_2": 1,
                    "sum3": 1,
                    "sum_1": 1,
                    "sum_3": 1,
                    "total_length_1": 1,
                    "total_offset1": 1,
                    "total_size1": 1,
                    "total_size1_str1": 1
                },
                "uVar15": {
                    "data": 1,
                    "error_code": 2,
                    "error_message": 13,
                    "error_string_pointer": 1,
                    "exit_code": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "message": 2,
                    "original_value": 1,
                    "program_name": 2,
                    "temp_result": 1
                },
                "uVar2": {
                    "data_type2": 1,
                    "file_data_offset_2": 1,
                    "file_size_2": 1,
                    "file_type2": 1,
                    "length2": 1,
                    "length_2": 1,
                    "offset_string_2": 1,
                    "result": 1,
                    "size1": 1,
                    "size2": 1,
                    "size_1": 1,
                    "size_2": 2,
                    "start_address2": 1,
                    "str2_offset": 1,
                    "str2_size": 1,
                    "string1_length": 1,
                    "string2_address": 1,
                    "string_2_length": 1,
                    "string_2_offset": 3,
                    "string_2_size": 1,
                    "string_length1": 1,
                    "value_2": 1
                },
                "uVar4": {
                    "file_2_attribute_check": 1,
                    "file_attributes_2": 1,
                    "file_flag": 1,
                    "file_type_2_flag": 1,
                    "flag": 9,
                    "flags": 5,
                    "string2_flags": 1,
                    "string_2_type_check": 1
                },
                "unaff_R13": {
                    "error": 2,
                    "error_code": 3,
                    "error_code_backup": 1,
                    "error_handler": 1,
                    "error_message_details": 1,
                    "error_message_info": 1,
                    "error_message_len": 1,
                    "error_string_metadata": 1,
                    "file_2_header": 1,
                    "file_attributes_result": 1,
                    "file_info_2": 1,
                    "result3": 1,
                    "result_temp": 1,
                    "return_value": 1,
                    "str1_size": 1,
                    "string2_info": 1,
                    "temp_1": 1,
                    "temp_address": 1,
                    "temp_result": 2,
                    "temp_var": 1,
                    "unaff_result": 1
                }
            },
            "called": [
                "FUN_00102fc3",
                "FUN_00104fa0"
            ],
            "calling": [
                "FUN_00103bec"
            ],
            "code": "\nulong compare_and_validate_strings_00105050(undefined8 string1,undefined8 string_2)\n\n{\n  char last_char;\n  ulong string_2_offset;\n  char *string_1;\n  char *string_2;\n  long string_1_length;\n  uint flag;\n  size_t string_1_length;\n  size_t string_2_length;\n  char *strstr_result_1;\n  char *strstr_result_2;\n  long result_1;\n  long result_2;\n  ulong comparison_result;\n  ulong offset2;\n  ulong string_1_offset;\n  ulong string_1_end;\n  undefined8 error_message;\n  long error_code;\n  bool is_equal;\n  \n  result_1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,string1,DAT_0010b770);\n  comparison_result = (ulong)DAT_0010b778;\n  result_2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,comparison_result,string_2,DAT_0010b768);\n  if ((result_1 != 0) && (result_2 != 0)) {\n    string_1_length = *(long *)(result_2 + 0x20);\n    if (*(long *)(result_1 + 0x20) == 0x10c2a8) {\n      comparison_result = 0xffffffff;\n      if (string_1_length == 0x10c2a8) {\nLAB_001050fa:\n        comparison_result = compare_strings_00104fa0(string1,string_2);\n        return comparison_result;\n      }\n    }\n    else if (string_1_length == 0x10c2a8) {\n      comparison_result = 1;\n    }\n    else {\n      string_1_offset = *(long *)(result_1 + 0x10) + *(long *)(*(long *)(result_1 + 0x20) + 0x30);\n      comparison_result = *(long *)(result_2 + 0x10) + *(long *)(string_1_length + 0x30);\n      if (string_1_offset == comparison_result) goto LAB_001050fa;\n      comparison_result = (ulong)(-(uint)(string_1_offset < comparison_result) | 1);\n    }\n    return comparison_result;\n  }\n  error_message = *DAT_0010b780;\n  print_error_message_and_exit_00106530();\n  result_1 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,error_message,DAT_0010b770);\n  result_2 = (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,comparison_result,DAT_0010b768);\n  if ((result_1 == 0) || (error_code = result_2, result_2 == 0)) {\n    result_2 = print_error_message_and_exit_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(result_1 + 0x20) == 0x10c2a8) || (*(long *)(result_2 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  string_1_offset = *(ulong *)(*(long *)(result_1 + 0x20) + 0x30);\n  string_2_offset = *(ulong *)(*(long *)(result_2 + 0x20) + 0x30);\n  string_1_end = *(long *)(result_1 + 0x10) + string_1_offset;\n  offset2 = *(long *)(error_code + 0x10) + string_2_offset;\n  is_equal = string_1_end < offset2;\n  if ((string_1_end != offset2) || (is_equal = string_1_offset < string_2_offset, string_1_offset != string_2_offset)) {\n    return (ulong)(-(uint)is_equal | 1);\n  }\n  string_1 = *(char **)(result_1 + 8);\n  string_2 = *(char **)(error_code + 8);\n  string_1_length = strlen(string_1);\n  string_2_length = strlen(string_2);\n  strstr_result_1 = strstr(string_1,\"gnu_compiled\");\n  if (strstr_result_1 == (char *)0x0) {\n    strstr_result_2 = strstr(string_1,\"gcc2_compiled\");\n    strstr_result_1 = strstr(string_2,\"gnu_compiled\");\n    if ((strstr_result_1 == (char *)0x0) && (strstr_result_1 = strstr(string_2,\"gcc2_compiled\"), strstr_result_1 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (strstr_result_2 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    strstr_result_1 = strstr(string_2,\"gnu_compiled\");\n    if (strstr_result_1 == (char *)0x0) {\n      strstr_result_2 = strstr(string_2,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (strstr_result_2 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  flag = *(uint *)(error_code + 0x18) & 0x4000;\n  if ((*(byte *)(result_1 + 0x19) & 0x40) == 0) {\n    if ((string_1_length < 3) || (string_1[string_1_length - 2] != '.')) {\n      if (flag != 0) {\n        return 1;\n      }\n      if ((string_2_length < 3) || (string_2[string_2_length - 2] != '.')) goto LAB_00103202;\n      is_equal = false;\n      goto LAB_001031e7;\n    }\n    last_char = string_1[string_1_length - 1];\n    is_equal = last_char == 'o' || last_char == 'a';\n    if (flag == 0) {\n      if ((string_2_length < 3) || (string_2[string_2_length - 2] != '.')) {\n        if (last_char == 'o' || last_char == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (flag != 0) goto LAB_00103202;\n    if (string_2_length < 3) {\n      return 0xffffffff;\n    }\n    if (string_2[string_2_length - 2] != '.') {\n      return 0xffffffff;\n    }\n    is_equal = true;\nLAB_001031e7:\n    if ((string_2[string_2_length - 1] != 'o') && (string_2[string_2_length - 1] != 'a')) {\n      if (is_equal) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!is_equal) {\n    return 1;\n  }\nLAB_00103202:\n  comparison_result = compare_strings_00104fa0(error_message,comparison_result);\n  return comparison_result;\n}\n\n",
            "current_name": "compare_and_validate_strings_00105050",
            "entrypoint": "0x00105050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105050": "compare_and_validate_strings_00105050",
                "__s": "string_1",
                "__s_00": "string_2",
                "bVar16": "is_equal",
                "cVar1": "last_char",
                "lVar10": "result_2",
                "lVar3": "string_1_length",
                "lVar9": "result_1",
                "param_1": "string1",
                "param_2": "string_2",
                "pcVar7": "strstr_result_1",
                "pcVar8": "strstr_result_2",
                "sVar5": "string_1_length",
                "sVar6": "string_2_length",
                "uVar11": "comparison_result",
                "uVar12": "offset2",
                "uVar13": "string_1_offset",
                "uVar14": "string_1_end",
                "uVar15": "error_message",
                "uVar2": "string_2_offset",
                "uVar4": "flag",
                "unaff_R13": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105110": {
            "additional_data": {
                "DAT_0010b738": {
                    "buffered_sectoin_data_aux": 1,
                    "data_8": 1,
                    "global_data_ptr6": 1,
                    "section_name_array": 1
                },
                "DAT_0010b740": {
                    "buffered_section_info": 1,
                    "data_7": 1,
                    "global_data_ptr5": 1,
                    "reloc_addr_array": 1
                },
                "DAT_0010b748": {
                    "data_9": 1,
                    "global_uint": 1,
                    "number_of_section_infos": 1
                },
                "DAT_0010b750": {
                    "buffered_section_data": 1,
                    "data_6": 1,
                    "global_data_ptr4": 1,
                    "section_array": 1
                },
                "DAT_0010b758": {
                    "data_5": 1,
                    "global_data_ptr2": 1,
                    "string_data": 1
                },
                "DAT_0010b7b0": {
                    "global_data_ptr3": 1
                },
                "DAT_0010b7b8": {
                    "data_4": 1
                },
                "DAT_0010b7c8": {
                    "additional_string": 1,
                    "data_2": 1,
                    "global_char_ptr1": 1
                },
                "DAT_0010b804": {
                    "global_var2": 1,
                    "line_feed_enabled": 1
                },
                "DAT_0010b818": {
                    "data_1": 1,
                    "global_var": 1,
                    "print_strings_enabled": 1
                },
                "FUN_00105110": {
                    "print_and_update_info": 2,
                    "print_debug_info": 1,
                    "print_function_details": 1,
                    "print_info": 1,
                    "print_label_and_string": 1,
                    "print_labels_and_strings": 3,
                    "print_labels_with_data": 1,
                    "print_related_info": 1,
                    "print_related_section_info": 1,
                    "print_section_info": 1,
                    "print_string_info": 1,
                    "print_strings": 6,
                    "print_strings_and_labels": 7,
                    "print_strings_and_update_reloc": 1,
                    "print_strings_and_update_reloc_info": 1,
                    "process_binary": 1
                },
                "PTR_PTR_FUN_0010b260": {
                    "pointer_to_function": 1
                },
                "_DAT_0010b758": {
                    "mapped_section_data": 1,
                    "section_array_ptr": 1
                },
                "_DAT_0010b7b0": {
                    "current_mapped_section": 1,
                    "current_section_ptr": 1
                },
                "_DAT_0010b7b8": {
                    "current_section_pointer": 1,
                    "current_section_ptr": 1,
                    "current_string": 1,
                    "global_data_ptr1": 1
                },
                "__ptr": {
                    "pointer": 2,
                    "ptr": 24,
                    "section_ptr": 3
                },
                "__s1": {
                    "label_string": 1,
                    "s1": 2,
                    "section_name": 7,
                    "section_name2": 1,
                    "str": 2,
                    "str1": 2,
                    "string": 6,
                    "string1": 7,
                    "string_1": 1
                },
                "_stdout": {
                    "stdout": 2
                },
                "cVar5": {
                    "ch": 1,
                    "char": 1,
                    "char1": 2,
                    "char_flag": 1,
                    "char_val": 1,
                    "char_value": 1,
                    "char_var": 9,
                    "char_var5": 1,
                    "char_variable": 1,
                    "character": 4,
                    "current_char": 2,
                    "label_char": 1,
                    "section_char": 1,
                    "section_type": 1,
                    "temp_char": 2
                },
                "iVar6": {
                    "category": 1,
                    "int1": 2,
                    "int_val": 1,
                    "int_value": 2,
                    "int_var": 11,
                    "int_var6": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "section_index": 1,
                    "section_index2": 1,
                    "section_int": 1,
                    "section_type": 3,
                    "temp_int": 2,
                    "var6": 1
                },
                "lVar10": {
                    "data_3": 1,
                    "index": 3,
                    "iter_count": 1,
                    "label_var4": 1,
                    "length": 1,
                    "long_val3": 1,
                    "long_value2": 1,
                    "long_var3": 2,
                    "long_var4": 1,
                    "long_var_2": 1,
                    "long_variable_3": 1,
                    "loop_var": 2,
                    "reloc_entry_index": 1,
                    "section_index": 1,
                    "section_iter": 1,
                    "size": 1,
                    "temp_long": 1,
                    "temp_long2": 1,
                    "val_3": 1,
                    "value3": 1,
                    "var10": 3,
                    "var3": 2
                },
                "lVar3": {
                    "data": 1,
                    "entry_offset": 1,
                    "header_value": 1,
                    "label_var2": 1,
                    "length": 1,
                    "long_val": 1,
                    "long_var": 2,
                    "long_var2": 1,
                    "long_variable": 1,
                    "reloc_entry_addr": 1,
                    "relocated_section_info_address": 1,
                    "section_address": 2,
                    "section_base": 1,
                    "section_data": 1,
                    "section_data_address": 1,
                    "section_data_offset": 1,
                    "section_offset": 1,
                    "section_ptr_value": 1,
                    "section_start_addr2": 1,
                    "size": 1,
                    "value": 1,
                    "value1": 1,
                    "var1": 2,
                    "var3": 3
                },
                "lVar8": {
                    "array_size": 1,
                    "current_section": 1,
                    "data_2": 1,
                    "info_var": 1,
                    "label_var3": 1,
                    "length": 1,
                    "long_val2": 1,
                    "long_value": 1,
                    "long_var": 1,
                    "long_var2": 2,
                    "long_var3": 1,
                    "long_variable_2": 1,
                    "param_2_base": 1,
                    "section_data": 1,
                    "section_data_size": 1,
                    "section_descriptor": 1,
                    "section_offset": 1,
                    "size": 1,
                    "temp_long": 1,
                    "temp_long_value": 1,
                    "val_1": 1,
                    "value": 1,
                    "value2": 1,
                    "var2": 2,
                    "var8": 3
                },
                "local_60": {
                    "char2": 2,
                    "char_var": 1,
                    "char_var2": 2,
                    "first_char": 1,
                    "first_character": 1,
                    "local_char": 13,
                    "local_character": 2,
                    "local_var60": 1,
                    "local_var_60": 1,
                    "section_indicator": 1,
                    "section_support": 1,
                    "temp_char": 1,
                    "temp_char2": 1,
                    "var_character": 1
                },
                "local_68": {
                    "array3": 1,
                    "local8": 1,
                    "local_arr2": 1,
                    "local_arr3": 1,
                    "local_arr68": 1,
                    "local_array2": 1,
                    "local_array3": 1,
                    "local_array_2": 2,
                    "local_array_3": 1,
                    "local_buffer": 2,
                    "local_buffer_2": 1,
                    "local_data_2": 1,
                    "local_undef_ptr2": 1,
                    "local_undefined": 1,
                    "local_undefined_8_2": 1,
                    "local_var68": 2,
                    "local_var_68": 2,
                    "local_variable": 1,
                    "section_char_temp": 1,
                    "section_type_buffer": 1,
                    "string_label": 1,
                    "target_buffer": 1,
                    "temp_buf2": 1,
                    "temp_buffer2": 2
                },
                "local_88": {
                    "buffer2": 1,
                    "local7": 1,
                    "local_data_ptr": 1,
                    "local_pointer": 1,
                    "local_pointer4": 1,
                    "local_ptr": 2,
                    "local_ptr1": 1,
                    "local_ptr2": 1,
                    "local_ptr88": 1,
                    "local_ptr_2": 1,
                    "local_ptr_var": 1,
                    "local_var5": 1,
                    "local_var88": 2,
                    "local_var_88": 1,
                    "local_void_pointer": 1,
                    "local_void_ptr": 1,
                    "malloc_pointer": 1,
                    "ptr2": 1,
                    "reloc_addr1": 1,
                    "reloc_addr_array": 1,
                    "reloc_buffer": 1,
                    "relocated_address": 1,
                    "section_data_buffer": 1,
                    "section_map_buffer": 1,
                    "symbol_info": 1,
                    "temp_ptr4": 1,
                    "var_88": 1
                },
                "local_90": {
                    "filtered_section_data2": 1,
                    "info2": 1,
                    "info_pointer2": 1,
                    "local6": 1,
                    "local_data_ptr2": 1,
                    "local_long2": 1,
                    "local_long_ptr2": 1,
                    "local_long_ptr_2": 1,
                    "local_param_3": 1,
                    "local_parameters": 1,
                    "local_pointer3": 1,
                    "local_ptr2": 1,
                    "local_ptr_2": 1,
                    "local_reloc_info_2": 1,
                    "local_section_ptr": 1,
                    "local_var4": 1,
                    "local_var90": 3,
                    "local_var_90": 1,
                    "relocation_table": 1,
                    "relocation_target": 1,
                    "section2": 1,
                    "section_data_ptr_3": 1,
                    "section_info2": 1,
                    "section_nomatch": 1,
                    "section_ptr_2": 1,
                    "var2": 1,
                    "var_90": 1
                },
                "local_98": {
                    "filtered_section_data": 1,
                    "info1": 1,
                    "info_pointer1": 1,
                    "local5": 1,
                    "local_data_ptr1": 1,
                    "local_long": 1,
                    "local_long_ptr": 1,
                    "local_long_ptr1": 1,
                    "local_param_2": 1,
                    "local_parameters": 1,
                    "local_pointer2": 1,
                    "local_ptr1": 1,
                    "local_ptr_1": 1,
                    "local_reloc_info": 1,
                    "local_section_ptr": 1,
                    "local_var3": 1,
                    "local_var98": 3,
                    "local_var_98": 1,
                    "possible_relocation_target": 1,
                    "section1": 1,
                    "section_data_ptr_2": 1,
                    "section_info1": 1,
                    "section_match": 1,
                    "section_ptr_1": 1,
                    "symbol_table": 1,
                    "var1": 1,
                    "var_98": 1
                },
                "local_a0": {
                    "buffer_size": 1,
                    "data": 1,
                    "label_address": 1,
                    "label_info": 1,
                    "label_value": 1,
                    "local4": 1,
                    "local_label": 2,
                    "local_long": 1,
                    "local_long_2": 1,
                    "local_param": 1,
                    "local_param_3": 1,
                    "local_undef2": 1,
                    "local_val": 1,
                    "local_val_3": 1,
                    "local_value": 1,
                    "local_value2": 1,
                    "local_var": 1,
                    "local_var2": 2,
                    "local_var_1": 1,
                    "local_var_a0": 4,
                    "target_least_significant_bytes": 1,
                    "temp_long3": 1,
                    "value": 2
                },
                "local_a8": {
                    "array2": 1,
                    "buf_ptr": 1,
                    "buffer": 2,
                    "buffer_ptr": 1,
                    "local3": 1,
                    "local_arr2": 1,
                    "local_array2": 1,
                    "local_array_1": 1,
                    "local_array_2": 1,
                    "local_buffer": 2,
                    "local_pointer": 2,
                    "local_ptr": 4,
                    "local_undef_ptr1": 1,
                    "local_undefined_pointer": 1,
                    "local_undefined_ptr": 1,
                    "local_var_a8": 4,
                    "section_buffer": 1,
                    "target_most_significant_bytes": 1,
                    "temp_ptr": 1,
                    "temp_ptr3": 1
                },
                "local_b0": {
                    "array1": 1,
                    "buffer": 2,
                    "label_buffer": 2,
                    "local2": 1,
                    "local_arr": 3,
                    "local_array": 2,
                    "local_array1": 1,
                    "local_array_1": 1,
                    "local_buffer": 1,
                    "local_data": 1,
                    "local_undef1": 1,
                    "local_undefined": 1,
                    "local_undefined_8": 1,
                    "local_val_2": 1,
                    "local_var": 1,
                    "local_var_b0": 4,
                    "local_variable_2": 1,
                    "temp_buf": 1,
                    "temp_buffer": 3
                },
                "local_b4": {
                    "line_number": 6,
                    "local1": 1,
                    "local_uint": 6,
                    "local_uint1": 1,
                    "local_uint_var": 1,
                    "local_unsigned_integer": 1,
                    "local_val_1": 1,
                    "local_value1": 1,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var_b4": 4,
                    "local_variable_1": 1,
                    "number_var": 1,
                    "relocation_offset": 1,
                    "temp_uint2": 1,
                    "uint2": 1
                },
                "malloc": {
                    "xmalloc": 1
                },
                "param_1": {
                    "arguments": 1,
                    "array_of_pointers": 1,
                    "function_pointer": 1,
                    "function_pointers": 1,
                    "label": 1,
                    "output_file_path": 1,
                    "param": 1,
                    "param_labels": 1,
                    "section_info": 1,
                    "string_1": 1,
                    "string_array": 4,
                    "string_label": 1,
                    "string_list": 1,
                    "string_pointers_array": 1,
                    "strings": 9,
                    "strings_array": 4
                },
                "param_2": {
                    "array_of_longs": 1,
                    "binary_data": 1,
                    "data": 4,
                    "elf_info": 1,
                    "info": 2,
                    "info_array": 1,
                    "info_data": 1,
                    "info_ptr": 1,
                    "label_array": 1,
                    "labels": 1,
                    "long_array": 2,
                    "param_data": 1,
                    "param_list": 1,
                    "parameters": 2,
                    "reloc_info": 1,
                    "relocated_section_info": 1,
                    "section": 1,
                    "section_data": 2,
                    "section_info": 3,
                    "section_pointers_array": 1,
                    "sections": 1
                },
                "param_3": {
                    "flag": 1,
                    "label": 17,
                    "param3": 1,
                    "param_3": 5,
                    "param_flag": 1,
                    "param_value": 1,
                    "reloc_info": 1,
                    "string_2": 1,
                    "string_value": 1,
                    "value": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_label": 3,
                    "array_of_pointers2": 1,
                    "file": 3,
                    "filename": 3,
                    "header": 1,
                    "label": 5,
                    "label_list": 1,
                    "label_string": 2,
                    "optional_string": 1,
                    "param_label": 1,
                    "param_string": 1,
                    "prefix": 1,
                    "program_name": 1,
                    "source": 1,
                    "string_3": 1,
                    "string_label": 2,
                    "strings_to_print": 1
                },
                "plVar1": {
                    "relocation_entry": 1
                },
                "plVar2": {
                    "header_ptr": 1,
                    "label_var": 1,
                    "long_ptr": 2,
                    "long_var": 1,
                    "p_var2": 1,
                    "pointer": 2,
                    "ptr": 1,
                    "ptr1": 2,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_data": 1,
                    "ptr_list": 1,
                    "ptr_long": 1,
                    "rel_section": 1,
                    "reloc_entry": 1,
                    "relocated_section_ptr": 1,
                    "section_base_ptr": 1,
                    "section_data": 2,
                    "section_data_ptr": 2,
                    "section_info": 1,
                    "section_ptr": 1,
                    "section_ptr_2": 1,
                    "section_size2": 1,
                    "single_pointer": 1
                },
                "pplVar1": {
                    "double_pointer": 2,
                    "double_ptr": 2,
                    "pointer_to_pointer": 1,
                    "pp_var1": 1,
                    "ptr2": 1,
                    "ptr_arr1": 1,
                    "ptr_list": 3,
                    "ptr_ptr": 2,
                    "ptr_ptr1": 1,
                    "ptr_ptr_data": 1,
                    "ptr_ptr_long": 1,
                    "rel_entry": 1,
                    "reloc_info": 1,
                    "section_data_ptr": 1,
                    "section_data_ptr_ptr": 1,
                    "section_info": 2,
                    "section_pointer": 1,
                    "section_ptr": 2,
                    "section_ptr2": 1,
                    "section_ptr_ptr": 1,
                    "sections_array": 1
                },
                "print_error_message_and_exit_00103463": {
                    "print_error_message_and_exit": 1
                },
                "print_error_message_and_exit_00106530": {
                    "print_error_message_and_exit": 1
                },
                "print_strings_with_label_001053b0": {
                    "print_strings_with_label": 1
                },
                "puVar4": {
                    "current_address": 1,
                    "current_label": 1,
                    "current_string": 1,
                    "pointer": 1,
                    "pointer_var4": 1,
                    "pointer_variable": 1,
                    "ptr": 1,
                    "ptr2": 2,
                    "ptr4": 2,
                    "ptr_2": 1,
                    "ptr_flags": 1,
                    "ptr_value": 1,
                    "ptr_var": 7,
                    "temp_ptr": 5,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "var4": 1
                },
                "pvStack_70": {
                    "local_ptr": 1,
                    "malloc_pointer3": 1,
                    "pointer_stack_3": 1,
                    "ptr": 1,
                    "ptr_stack3": 1,
                    "ptr_stack70": 3,
                    "ptr_stack_70": 1,
                    "ptr_var3": 1,
                    "ptr_var5": 1,
                    "ptr_var_stack_70": 1,
                    "pv_stack_70": 1,
                    "pv_stack_ptr3": 1,
                    "relocation_category_buffer": 1,
                    "section_buffer": 1,
                    "section_data_stack_3": 1,
                    "section_ptr_prev": 1,
                    "stack3": 1,
                    "stack_pointer3": 1,
                    "stack_pointer_70": 1,
                    "stack_ptr3": 1,
                    "stack_ptr_3": 2,
                    "stack_var3": 1,
                    "temp_ptr7": 1,
                    "temp_stack_ptr3": 1
                },
                "pvStack_78": {
                    "local_ptr": 1,
                    "malloc_pointer2": 1,
                    "pointer_stack_2": 1,
                    "ptr": 1,
                    "ptr_stack2": 1,
                    "ptr_stack78": 3,
                    "ptr_stack_78": 1,
                    "ptr_var2": 1,
                    "ptr_var4": 1,
                    "ptr_var_stack_78": 1,
                    "pv_stack_78": 1,
                    "pv_stack_ptr2": 1,
                    "reloc_addr3": 1,
                    "reloc_info_ptr2": 1,
                    "relocation_buffer1": 1,
                    "section_data_stack_2": 1,
                    "section_name_array": 1,
                    "section_offset_buffer": 1,
                    "stack2": 1,
                    "stack_pointer2": 1,
                    "stack_pointer_78": 1,
                    "stack_ptr2": 1,
                    "stack_ptr_2": 2,
                    "stack_var2": 1,
                    "temp_ptr6": 1,
                    "temp_stack_ptr2": 1
                },
                "pvStack_80": {
                    "local_ptr": 1,
                    "malloc_pointer1": 1,
                    "pointer_stack": 1,
                    "ptr": 1,
                    "ptr_stack": 1,
                    "ptr_stack80": 3,
                    "ptr_stack_80": 1,
                    "ptr_var1": 1,
                    "ptr_var3": 1,
                    "ptr_var_stack_80": 1,
                    "pv_stack_80": 1,
                    "pv_stack_ptr1": 1,
                    "reloc_addr2": 1,
                    "reloc_info_ptr1": 1,
                    "relocation_buffer2": 1,
                    "relocation_info_buffer": 1,
                    "section_array": 1,
                    "section_data_stack_1": 1,
                    "stack1": 1,
                    "stack_pointer1": 1,
                    "stack_pointer_80": 1,
                    "stack_ptr1": 1,
                    "stack_ptr_1": 2,
                    "stack_var1": 1,
                    "temp_ptr5": 1,
                    "temp_stack_ptr1": 1
                },
                "pvVar7": {
                    "aux_data": 1,
                    "data_ptr": 1,
                    "map_pointer": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "pointer_var7": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "ptr5": 1,
                    "ptr7": 1,
                    "ptr_data_2": 1,
                    "ptr_value2": 1,
                    "ptr_var": 3,
                    "ptr_var2": 4,
                    "reloc_info_ptr": 1,
                    "section_data2": 1,
                    "section_ptr_temp": 1,
                    "sections_buffer": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 2,
                    "void_pointer": 1,
                    "void_ptr": 1,
                    "void_ptr_var": 1
                },
                "stdin": {
                    "stdin": 1
                },
                "uVar9": {
                    "flag": 1,
                    "flag_var": 1,
                    "flags": 4,
                    "section_flags": 2,
                    "temp_uint": 2,
                    "temp_var3": 1,
                    "uint1": 2,
                    "uint_value": 1,
                    "uint_var": 10,
                    "uint_variable": 1,
                    "unsigned_integer": 1,
                    "val_2": 1,
                    "var9": 2
                },
                "update_reloc_info_00103c00": {
                    "update_reloc_info": 1
                },
                "xmalloc": {
                    "dynamic_memory_allocation": 1
                }
            },
            "called": [
                "FUN_001053b0",
                "FUN_00103463",
                "FUN_00103238",
                "FUN_00106530",
                "printf",
                "xmalloc",
                "FUN_001053c0",
                "free"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid print_labels_and_strings_00105110(undefined8 *strings,long *data,undefined8 label,undefined8 *label)\n\n{\n  void *ptr;\n  char *section_name;\n  long **ptr_list;\n  long *pointer;\n  long var3;\n  undefined8 *ptr_var;\n  char char_var;\n  int int_var;\n  void *ptr_var2;\n  long var8;\n  uint uint_var;\n  long var10;\n  uint local_uint;\n  undefined local_var_b0 [8];\n  undefined *local_var_a8;\n  undefined8 local_var_a0;\n  long *local_var98;\n  long *local_var90;\n  void *local_var88;\n  void *ptr_stack80;\n  void *ptr_stack78;\n  void *ptr_stack70;\n  undefined local_array_2 [8];\n  char local_char;\n  \n  if (*(code **)(PTR_PTR_FUN_0010b260 + 0x18) == print_strings_with_label) {\n    if (DAT_0010b818 != 0) {\n      if (label != (undefined8 *)0x0) {\n        printf(\"%s:\",*label);\n      }\n      printf(\"%s:\",*strings);\n    }\n  }\n  else {\n    (**(code **)(PTR_PTR_FUN_0010b260 + 0x18))(label,strings);\n  }\n  local_var_a8 = local_array_2;\n  (**(code **)(strings[1] + 0x218))(strings,data,local_var_a8);\n  uint_var = *(uint *)(data + 3);\n  char_var = local_char;\n  if (((((local_char == 'i') && ((uint_var & 0x400000) != 0)) && (DAT_0010b7c8 != (char *)0x0)) &&\n      ((*DAT_0010b7c8 != '\\0' && (char_var = *DAT_0010b7c8, (uint_var & 2) == 0)))) &&\n     (char_var = local_char, DAT_0010b7c8[1] != '\\0')) {\n    char_var = DAT_0010b7c8[1];\n  }\n  local_char = char_var;\n  local_var_a0 = label;\n  if ((uint_var & 0x200100) != 0) goto LAB_00103330;\n  var8 = *data;\n  int_var = *(int *)(*(long *)(var8 + 8) + 8);\n  if (((uint_var & 0x200000) == 0) && (int_var == 5)) {\n    local_var98 = data;\n    if (*(long *)(var8 + 0x110) == 0) {\n      local_var98 = (long *)0x0;\n    }\n  }\n  else {\n    local_var98 = (long *)0x0;\n    if (((int_var - 2U & 0xfffffffd) == 0) && (local_var90 = data, *(long *)(var8 + 0x110) != 0))\n    goto LAB_001051bf;\n  }\n  local_var90 = (long *)0x0;\nLAB_001051bf:\n  (**(code **)(PTR_PTR_FUN_0010b260 + 0x20))(&local_var_a8,strings);\n  do {\n    if (DAT_0010b804 == 0) {\nLAB_001051e6:\n      putc(10,stdout);\n      return;\n    }\n    if (_DAT_0010b7b8 == strings) {\n      ptr_var = _DAT_0010b7b8;\n      if (DAT_0010b758 == (void *)0x0) goto LAB_00105359;\nLAB_00105288:\n      _DAT_0010b7b8 = ptr_var;\n      ptr_var2 = DAT_0010b750;\n      if (data[4] == 0x10c2a8) {\n        if (_DAT_0010b7b0 == strings) {\n          if (DAT_0010b750 == (void *)0x0) goto LAB_001033d1;\n        }\n        else {\n          uint_var = 0;\n          if (DAT_0010b750 != (void *)0x0) {\n            for (; uint_var < DAT_0010b748; uint_var = uint_var + 1) {\n              ptr = *(void **)((long)ptr_var2 + (ulong)uint_var * 8);\n              if (ptr != (void *)0x0) {\n                free(ptr);\n              }\n            }\n            free(DAT_0010b740);\n            free(ptr_var2);\n            free(DAT_0010b738);\n            DAT_0010b740 = (void *)0x0;\n            DAT_0010b750 = (void *)0x0;\n            DAT_0010b738 = (void *)0x0;\n          }\nLAB_001033d1:\n          DAT_0010b748 = *(uint *)(strings + 0x14);\n          DAT_0010b740 = (void *)xmalloc((ulong)DAT_0010b748 * 8);\n          DAT_0010b750 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n          DAT_0010b738 = (void *)xmalloc((ulong)DAT_0010b748 << 3);\n          ptr_stack70 = DAT_0010b758;\n          local_var88 = DAT_0010b740;\n          ptr_stack80 = DAT_0010b750;\n          ptr_stack78 = DAT_0010b738;\n          bfd_map_over_sections(strings,update_reloc_info,&local_var88);\n          _DAT_0010b7b0 = strings;\n        }\n        section_name = (char *)data[1];\n        for (uint_var = 0; uint_var < DAT_0010b748; uint_var = uint_var + 1) {\n          var8 = (ulong)uint_var * 8;\n          ptr_var2 = DAT_0010b738;\n          for (var10 = 0;\n              *(long *)((long)ptr_var2 + var8) != var10 && var10 <= *(long *)((long)ptr_var2 + var8)\n              ; var10 = var10 + 1) {\n            ptr_list = *(long ***)(*(long *)((long)DAT_0010b750 + var8) + var10 * 8);\n            pointer = *ptr_list;\n            if ((((pointer != (long *)0x0) &&\n                 (var3 = *pointer, *(long *)(var3 + 0x20) == data[4])) &&\n                (*(long *)(var3 + 0x10) == data[2])) &&\n               (((int_var = strcmp(section_name,*(char **)(var3 + 8)), int_var == 0 &&\n                 (char_var = (**(code **)(strings[1] + 0x240))\n                                    (strings,DAT_0010b758,\n                                     *(undefined8 *)((long)DAT_0010b740 + var8),ptr_list[1],\n                                     &local_var88,local_var_b0,&local_uint,0), ptr_var2 = DAT_0010b738,\n                 char_var != '\\0')) && (local_var88 != (void *)0x0)))) {\n              printf(\"\\t%s:%u\",local_var88,(ulong)local_uint);\n              uint_var = DAT_0010b748;\n              break;\n            }\n          }\n        }\n      }\n      else if (*(undefined8 **)(data[4] + 0xe0) == strings) {\n        char_var = (**(code **)(strings[1] + 0x250))(strings,DAT_0010b758,data,&local_var88,&local_uint);\n        if (((char_var != '\\0') ||\n            (char_var = (**(code **)(strings[1] + 0x240))\n                               (strings,DAT_0010b758,data[4],data[2],&local_var88,local_var_b0,\n                                &local_uint,0), char_var != '\\0')) &&\n           ((local_var88 != (void *)0x0 && (local_uint != 0)))) {\n          printf(\"\\t%s:%u\");\n        }\n      }\n      goto LAB_001051e6;\n    }\n    if (DAT_0010b758 != (void *)0x0) {\n      free(DAT_0010b758);\n      DAT_0010b758 = (void *)0x0;\n    }\nLAB_00105359:\n    var8 = (**(code **)(strings[1] + 0x1f8))(strings);\n    if (var8 < 0) {\n      print_error_message_and_exit(var8);\n      return;\n    }\n    DAT_0010b758 = (void *)xmalloc();\n    var8 = (**(code **)(strings[1] + 0x200))(strings,DAT_0010b758);\n    ptr_var = strings;\n    if (-1 < var8) goto LAB_00105288;\n    print_error_message_and_exit(*strings);\nLAB_00103330:\n    local_var98 = (long *)0x0;\n    local_var90 = (long *)0x0;\n    (**(code **)(PTR_PTR_FUN_0010b260 + 0x20))(&local_var_a8,strings);\n  } while( true );\n}\n\n",
            "current_name": "print_labels_and_strings_00105110",
            "entrypoint": "0x00105110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105110": "print_labels_and_strings_00105110",
                "__ptr": "ptr",
                "__s1": "section_name",
                "_stdout": "stdout",
                "cVar5": "char_var",
                "iVar6": "int_var",
                "lVar10": "var10",
                "lVar3": "var3",
                "lVar8": "var8",
                "local_60": "local_char",
                "local_68": "local_array_2",
                "local_88": "local_var88",
                "local_90": "local_var90",
                "local_98": "local_var98",
                "local_a0": "local_var_a0",
                "local_a8": "local_var_a8",
                "local_b0": "local_var_b0",
                "local_b4": "local_uint",
                "malloc": "xmalloc",
                "param_1": "strings",
                "param_2": "data",
                "param_3": "label",
                "param_4": "label",
                "plVar1": "relocation_entry",
                "plVar2": "pointer",
                "pplVar1": "ptr_list",
                "print_error_message_and_exit_00103463": "print_error_message_and_exit",
                "print_error_message_and_exit_00106530": "print_error_message_and_exit",
                "print_strings_with_label_001053b0": "print_strings_with_label",
                "puVar4": "ptr_var",
                "pvStack_70": "ptr_stack70",
                "pvStack_78": "ptr_stack78",
                "pvStack_80": "ptr_stack80",
                "pvVar7": "ptr_var2",
                "uVar9": "uint_var",
                "update_reloc_info_00103c00": "update_reloc_info",
                "xmalloc": "dynamic_memory_allocation"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053b0": {
            "additional_data": {
                "DAT_0010b818": {
                    "flag": 1
                },
                "FUN_001053b0": {
                    "print_data": 4,
                    "print_formatted_message": 1,
                    "print_function_name_and_params": 1,
                    "print_info": 2,
                    "print_label_and_text": 1,
                    "print_message": 3,
                    "print_param_values": 1,
                    "print_parameters": 4,
                    "print_params": 1,
                    "print_string": 2,
                    "print_string_with_label": 1,
                    "print_strings": 8,
                    "print_strings_with_label": 1,
                    "print_values": 1
                },
                "param_1": {
                    "data1": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "input_string": 1,
                    "label": 6,
                    "label1": 1,
                    "message": 2,
                    "message1": 2,
                    "message_1": 3,
                    "message_header": 1,
                    "message_param": 1,
                    "string1": 5,
                    "string1_ptr": 2,
                    "string_1": 1,
                    "string_param": 2,
                    "text1_ptr": 1
                },
                "param_2": {
                    "another_string_param": 1,
                    "data2": 1,
                    "data_param": 1,
                    "format_param": 1,
                    "label": 1,
                    "label2": 1,
                    "message": 3,
                    "message2": 2,
                    "message_2": 3,
                    "message_body": 1,
                    "output_string": 1,
                    "second_param": 1,
                    "second_parameter": 1,
                    "source": 1,
                    "string": 1,
                    "string2": 5,
                    "string2_ptr": 2,
                    "string_2": 1,
                    "text": 1,
                    "text2_ptr": 1,
                    "value1": 1
                },
                "param_3": {
                    "param3": 1,
                    "param_3": 5,
                    "third_param": 1,
                    "unused": 5,
                    "unused1": 1,
                    "unused_argument": 1,
                    "unused_param": 12,
                    "unused_param1": 1,
                    "unused_parameter": 1,
                    "unused_variable": 1,
                    "value2": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_string": 1,
                    "delimiter": 2,
                    "extra_data": 1,
                    "format_param": 1,
                    "fourth_param": 1,
                    "message_3": 1,
                    "param4": 1,
                    "param_4": 6,
                    "separator_param": 1,
                    "string3": 2,
                    "string_3": 1,
                    "text3_ptr": 1,
                    "third_param": 1,
                    "third_parameter": 1,
                    "unused2": 2,
                    "unused_argument_2": 1,
                    "unused_param2": 4,
                    "value": 1,
                    "value3": 1
                },
                "printf": {
                    "print_formatted": 2,
                    "print_formatted_string": 1
                }
            },
            "called": [
                "FUN_00103573"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\nvoid print_strings_with_label_001053b0(undefined8 *label,undefined8 *string2,undefined8 unused_param,undefined8 param_4)\n\n{\n  if (DAT_0010b818 == 0) {\n    return;\n  }\n  if (label != (undefined8 *)0x0) {\n    printf(\"%s:\",*label);\n  }\n  printf(\"%s:\",*string2,param_4);\n  return;\n}\n\n",
            "current_name": "print_strings_with_label_001053b0",
            "entrypoint": "0x001053b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053b0": "print_strings_with_label_001053b0",
                "param_1": "label",
                "param_2": "string2",
                "param_3": "unused_param",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053c0": {
            "additional_data": {
                "DAT_0010b238": {
                    "char_print_format": 1,
                    "some_format": 1
                },
                "DAT_0010b23d": {
                    "short_print_format": 1,
                    "some_other_format": 1
                },
                "DAT_0010b7a0": {
                    "print_format": 2,
                    "symbol_format": 1
                },
                "DAT_0010b7a8": {
                    "default_print_width_constant": 1,
                    "max_symbol_width": 1,
                    "print_width": 1,
                    "some_constant_1": 1
                },
                "DAT_0010b7ec": {
                    "error_occured": 1,
                    "is_formatted_error_message": 1,
                    "is_print_error_message": 1,
                    "some_constant_3": 1
                },
                "DAT_0010b7f8": {
                    "initialized": 1,
                    "is_default_value": 1,
                    "is_initialized": 1,
                    "some_constant_2": 1
                },
                "FUN_001053c0": {
                    "print_formatted_data": 1,
                    "print_formatted_error": 1,
                    "print_formatted_error_message": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_formatted_symbol_info": 2,
                    "print_formatted_value": 1,
                    "print_symbol_details": 1,
                    "print_symbol_info": 17,
                    "print_symbol_information": 5
                },
                "LAB_00103603": {
                    "print_width_not_initialized": 1
                },
                "PTR_0010712c": {
                    "formatter": 1
                },
                "cVar2": {
                    "is_undefined": 19,
                    "is_undefined_sym": 1,
                    "is_undefined_sym_class": 1,
                    "is_undefined_symbol": 6,
                    "is_undefined_symbol_class": 1,
                    "is_undefined_symclass": 2,
                    "undefined_symbol": 1
                },
                "dcgettext": {
                    "get_error_message": 3
                },
                "iVar1": {
                    "data_size": 1,
                    "default_print_width": 1,
                    "error_code": 1,
                    "error_message": 1,
                    "error_value": 1,
                    "format_specifier": 1,
                    "formatting_width": 1,
                    "print_width": 16,
                    "symbol_class": 5,
                    "width": 2
                },
                "lVar4": {
                    "address": 4,
                    "alternative_value": 1,
                    "error_data": 2,
                    "error_message": 8,
                    "error_value": 1,
                    "format_width": 1,
                    "message_address": 1,
                    "message_arg": 1,
                    "offset": 1,
                    "pointer_address": 1,
                    "print_arg": 1,
                    "print_value": 1,
                    "print_width": 2,
                    "secondary_value": 1,
                    "symbol_address": 3,
                    "symbol_offset": 1,
                    "value": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 2,
                    "param_array": 1,
                    "symbol": 3,
                    "symbol_data": 2,
                    "symbol_info": 17,
                    "symbol_info_ptr": 3,
                    "symbol_ptrs": 1,
                    "value_pointer": 1
                },
                "param_2": {
                    "additional_info": 1,
                    "additional_param": 1,
                    "error_message": 1,
                    "extra_param": 1,
                    "format_arg": 1,
                    "format_param": 1,
                    "format_specifier": 14,
                    "format_string": 2,
                    "formatting_param": 1,
                    "message_param": 1,
                    "output_format": 1,
                    "param": 4,
                    "symbol_value": 1,
                    "unused_param": 1
                },
                "print_formatted_error_message_001035a2": {
                    "print_error_message": 1,
                    "print_error_message_end": 1
                },
                "print_formatted_error_message_001054d0": {
                    "print_formatted_error_message": 2
                },
                "print_formatted_error_message_00106300": {
                    "print_error_message": 2
                },
                "print_formatted_string_with_param_00104740": {
                    "print_formatted_string": 1,
                    "print_formatted_string_with_param": 1
                },
                "printf": {
                    "formatted_print": 1,
                    "print": 1,
                    "print_char_format": 1,
                    "print_formatted_output": 1
                },
                "putchar": {
                    "print_char": 1,
                    "print_character": 1,
                    "print_space": 1
                },
                "uVar3": {
                    "error_message": 2,
                    "formatted_data": 2,
                    "formatted_error_message": 1,
                    "formatted_message": 1,
                    "formatted_output": 3,
                    "formatted_string": 3,
                    "formatted_value": 1,
                    "message": 5,
                    "print_value": 2,
                    "print_width": 2,
                    "symbol_name": 1,
                    "symbol_value": 5,
                    "value": 1,
                    "width": 1,
                    "width_value": 1
                }
            },
            "called": [
                "FUN_001035a2",
                "bfd_is_undefined_symclass",
                "FUN_00106300",
                "FUN_001054d0",
                "printf",
                "dcgettext"
            ],
            "calling": [
                "FUN_00105110"
            ],
            "code": "\nvoid print_formatted_symbol_info_001053c0(long *symbol_info,undefined8 format_specifier)\n\n{\n  int print_width;\n  char is_undefined;\n  undefined8 symbol_value;\n  long error_message;\n  \n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*symbol_info + 8));\n  print_width = DAT_0010b7a8;\n  if (is_undefined == '\\0') {\n    if (DAT_0010b7f8 == 0) {\n      if ((DAT_0010b7a8 - 0x20U & 0xffffffdf) != 0) {\nprint_width_not_initialized:\n        symbol_value = dcgettext(0,\"Print width has not been initialized (%d)\",5);\n        print_error_message(symbol_value,print_width);\n        goto LAB_00103623;\n      }\n      symbol_value = *(undefined8 *)*symbol_info;\n    }\n    else {\n      if (DAT_0010b7ec == 0) {\n        if (symbol_info[2] == 0) {\n          error_message = symbol_info[1];\n        }\n        else {\n          error_message = *(long *)(symbol_info[2] + 0x38);\n        }\n        print_formatted_error_message(error_message);\n        if (DAT_0010b7ec != 0) {\n          print_error_message();\n          return;\n        }\n        goto LAB_00105423;\n      }\n      symbol_value = *(undefined8 *)*symbol_info;\n      if ((DAT_0010b7a8 - 0x20U & 0xffffffdf) != 0) goto print_width_not_initialized;\n    }\n    printf(DAT_0010b7a0,symbol_value);\n    if (DAT_0010b7ec != 0) {\n      print_error_message();\n      return;\n    }\n  }\n  else if (DAT_0010b7a8 == 0x40) {\n    printf(\"        \");\n    printf(\"        \");\n  }\n  else {\n    printf(\"        \");\n  }\nLAB_00105423:\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*symbol_info + 8));\n  if (*(char *)(*symbol_info + 8) != '-') {\n    print_formatted_string_with_param(&DAT_0010712c,symbol_info,0,format_specifier);\n    return;\n  }\nLAB_00103623:\n  putchar(0x20);\n  printf(&DAT_0010b238,(ulong)(uint)(int)*(char *)(*symbol_info + 0x19));\n  putchar(0x20);\n  printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*symbol_info + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*symbol_info + 0x20));\n  print_formatted_string_with_param(&DAT_0010712c,symbol_info,0,format_specifier);\n  return;\n}\n\n",
            "current_name": "print_formatted_symbol_info_001053c0",
            "entrypoint": "0x001053c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053c0": "print_formatted_symbol_info_001053c0",
                "LAB_00103603": "print_width_not_initialized",
                "cVar2": "is_undefined",
                "dcgettext": "get_error_message",
                "iVar1": "print_width",
                "lVar4": "error_message",
                "param_1": "symbol_info",
                "param_2": "format_specifier",
                "print_formatted_error_message_001035a2": "print_error_message",
                "print_formatted_error_message_001054d0": "print_formatted_error_message",
                "print_formatted_error_message_00106300": "print_error_message",
                "print_formatted_string_with_param_00104740": "print_formatted_string_with_param",
                "printf": "formatted_print",
                "putchar": "print_space",
                "uVar3": "symbol_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001054d0": {
            "additional_data": {
                "FUN_001054d0": {
                    "print_data": 1,
                    "print_format_message": 1,
                    "print_formatted_data": 1,
                    "print_formatted_error": 11,
                    "print_formatted_error_message": 3,
                    "print_formatted_info": 1,
                    "print_formatted_message": 3,
                    "print_formatted_symbol_information": 1,
                    "print_symbol_details": 1,
                    "print_symbol_info": 4,
                    "print_symbol_information": 4
                },
                "bVar9": {
                    "byte_value": 3,
                    "class_code": 1,
                    "data_type": 2,
                    "data_type_category": 1,
                    "info_type": 1,
                    "processor_spec": 1,
                    "sym_class": 2,
                    "sym_type": 2,
                    "symbol_class": 2,
                    "symbol_type": 3,
                    "symbol_type_modifier": 1,
                    "type": 7,
                    "type_code": 1,
                    "type_flag": 2,
                    "type_specifier": 1,
                    "type_value": 1
                },
                "cVar1": {
                    "class_flag": 1,
                    "is_undefined": 12,
                    "is_undefined_class": 2,
                    "is_undefined_symbol": 2,
                    "is_undefined_symclass": 14
                },
                "iVar3": {
                    "asprintf_result": 11,
                    "asprintf_ret": 1,
                    "asprintf_ret_val": 1,
                    "asprintf_return": 1,
                    "asprintf_return_value": 3,
                    "error": 1,
                    "error_code": 3,
                    "format_length": 1,
                    "format_result": 1,
                    "format_status": 2,
                    "length_flag": 1,
                    "result": 1,
                    "status": 1,
                    "temp": 1,
                    "value": 1
                },
                "in_R8": {
                    "arg1": 1,
                    "format_arg1": 1,
                    "format_param1": 1,
                    "in_r8": 1,
                    "param2": 1,
                    "param8": 3,
                    "param_8": 3,
                    "param_r8": 8,
                    "parameter_r8": 1,
                    "r8": 2,
                    "unused_arg": 1,
                    "unused_var1": 1
                },
                "in_R9": {
                    "arg2": 1,
                    "format_arg2": 1,
                    "format_param2": 1,
                    "in_r9": 1,
                    "param3": 1,
                    "param9": 3,
                    "param_9": 3,
                    "param_r9": 8,
                    "parameter_r9": 1,
                    "r9": 2,
                    "unused_arg2": 1,
                    "unused_var2": 1
                },
                "lVar7": {
                    "address": 1,
                    "class_info": 1,
                    "data_address": 1,
                    "data_ptr": 1,
                    "data_type": 1,
                    "element_address": 1,
                    "info": 1,
                    "info_address": 1,
                    "info_data": 1,
                    "info_offset": 1,
                    "info_pointer": 1,
                    "long_value": 1,
                    "message_ptr": 1,
                    "option": 1,
                    "ptr1": 1,
                    "sym_class": 1,
                    "sym_details": 1,
                    "sym_info": 3,
                    "sym_ptr": 1,
                    "symbol_info": 6,
                    "symbol_pointer": 1,
                    "symbol_type": 1,
                    "type": 1,
                    "value": 1
                },
                "param_1": {
                    "data": 2,
                    "error_message": 6,
                    "input_param": 1,
                    "message": 9,
                    "param": 4,
                    "symbol": 5,
                    "symbol_address": 1,
                    "symbol_info": 1,
                    "symbol_name": 1
                },
                "pcVar11": {
                    "char_ptr": 1,
                    "class_string": 1,
                    "data_string": 1,
                    "data_type": 4,
                    "data_type_str": 1,
                    "data_type_string": 2,
                    "info_type": 1,
                    "info_type_name": 1,
                    "message": 1,
                    "object_type": 1,
                    "print_type": 1,
                    "sym_type": 1,
                    "symbol_type": 1,
                    "symbol_type_name": 2,
                    "type_name": 4,
                    "type_str": 1,
                    "type_string": 6,
                    "variable_type": 1
                },
                "piVar5": {
                    "errno_loc": 1,
                    "errno_location": 14,
                    "errno_location_pointer": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 3,
                    "error_code": 1,
                    "error_location": 6,
                    "error_number": 1,
                    "error_number_ptr": 1,
                    "int_ptr": 1
                },
                "plVar4": {
                    "error_data": 2,
                    "error_message": 8,
                    "error_message_pointer": 1,
                    "error_message_ptr": 2,
                    "error_ptr": 1,
                    "error_string": 2,
                    "error_string_ptr": 1,
                    "format_data": 1,
                    "formatted_errors": 1,
                    "long_ptr": 1,
                    "message": 1,
                    "message_info": 1,
                    "message_params": 1,
                    "message_pointer": 4,
                    "symbol_data": 1,
                    "symbol_info": 2,
                    "symbol_info_ptr": 1
                },
                "uVar10": {
                    "data2": 1,
                    "global_var": 1,
                    "init_value": 1,
                    "initial_class_mask": 1,
                    "initial_print_width": 3,
                    "local_var": 1,
                    "old_print_width": 1,
                    "original_data_address": 1,
                    "original_print_width": 11,
                    "original_width": 2,
                    "prev_print_width": 1,
                    "print_width": 1,
                    "print_width_temp": 1,
                    "saved_print_width": 2,
                    "symbol_width": 1,
                    "temp_var": 2
                },
                "uVar2": {
                    "class": 2,
                    "class_flag": 1,
                    "class_type": 1,
                    "class_value": 1,
                    "info_type": 1,
                    "sym_class": 3,
                    "sym_type": 2,
                    "sym_type_temp": 1,
                    "symbol_category": 1,
                    "symbol_class": 5,
                    "symbol_type": 3,
                    "symclass": 4,
                    "type": 1,
                    "type_code": 1,
                    "type_flag": 2,
                    "value": 2
                },
                "uVar6": {
                    "errno_str": 1,
                    "errno_string": 1,
                    "error_message": 2,
                    "error_message_str": 1,
                    "error_str": 2,
                    "error_string": 17,
                    "result": 1,
                    "str_error": 3,
                    "strerror_result": 1,
                    "xstrerror_result": 1,
                    "xstrerror_return_value": 1
                },
                "uVar8": {
                    "class_mask": 1,
                    "data": 1,
                    "data_address": 1,
                    "length": 1,
                    "print_width": 23,
                    "width": 4
                }
            },
            "called": [
                "FUN_0010370a",
                "printf"
            ],
            "calling": [
                "FUN_001035a2",
                "FUN_001064b0",
                "FUN_0010651a",
                "FUN_001053c0",
                "FUN_00103729"
            ],
            "code": "\nvoid print_formatted_error_message_001054d0(undefined8 message)\n\n{\n  char is_undefined_symclass;\n  ushort symbol_class;\n  int asprintf_result;\n  long *error_message;\n  int *errno_location;\n  undefined8 error_string;\n  long symbol_info;\n  ulong print_width;\n  byte type;\n  ulong original_print_width;\n  char *type_string;\n  undefined8 param_r8;\n  undefined8 param_r9;\n  \n  print_width = (ulong)DAT_0010b7a8;\n  if ((DAT_0010b7a8 - 0x20 & 0xffffffdf) == 0) {\n    printf(DAT_0010b7a0,message);\n    return;\n  }\n  error_message = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  original_print_width = print_width;\n  print_formatted_error_message_001054d0_00106300(error_message,print_width);\n  print_formatted_string_with_param_00104740(\"%-20s|\",error_message,0,original_print_width,param_r8,param_r9,print_width);\n  is_undefined_symclass = bfd_is_undefined_symclass((int)*(char *)(*error_message + 8));\n  if (is_undefined_symclass == '\\0') {\n    print_formatted_error_message_001054d0(*(undefined8 *)*error_message);\n  }\n  else if (DAT_0010b7a8 == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*error_message + 8));\n  if (*(char *)(*error_message + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*error_message + 0x20));\n    printf(&DAT_0010b23d,(ulong)(uint)(int)*(short *)(*error_message + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (error_message[2] == 0) {\n    if (error_message[3] != 0) {\n      symbol_info = *(long *)(error_message[3] + 0x30);\n      is_undefined_symclass = *(char *)(symbol_info + 0x28);\n      if (is_undefined_symclass == 'g') goto LAB_00103983;\n      if (is_undefined_symclass == 'h') {\n        type_string = \"Line\";\n      }\n      else if (is_undefined_symclass == 'd') {\n        type_string = \"Block\";\n      }\n      else if (*(ushort *)(symbol_info + 0x26) == 0) {\n        type_string = \"None\";\n      }\n      else {\n        symbol_class = *(ushort *)(symbol_info + 0x26) >> 4 & 3;\n        if (symbol_class == 2) {\n          type_string = \"Function\";\n        }\n        else if (symbol_class == 3) {\n          type_string = \"Array\";\n        }\n        else {\n          if (symbol_class != 1) {\n            free(DAT_0010b730);\n            symbol_class = *(ushort *)(symbol_info + 0x26);\n            type = *(byte *)(symbol_info + 0x28);\n            type_string = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            asprintf_result = asprintf(&DAT_0010b730,type_string,(ulong)type,(ulong)symbol_class);\n            type_string = DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          type_string = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    type = *(byte *)(error_message[2] + 0x48) & 0xf;\n    switch(type) {\n    case 0:\n      type_string = \"NOTYPE\";\n      break;\n    case 1:\n      type_string = \"OBJECT\";\n      break;\n    case 2:\n      type_string = \"FUNC\";\n      break;\n    case 3:\n      type_string = \"SECTION\";\n      break;\n    case 4:\n      type_string = \"FILE\";\n      break;\n    case 5:\n      type_string = \"COMMON\";\n      break;\n    case 6:\n      type_string = \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      type_string = \"<processor specific>: %d\";\n      if ((2 < type - 0xd) && (type_string = \"<OS specific>: %d\", 2 < type - 10)) {\n        type_string = \"<unknown>: %d\";\n      }\n      type_string = (char *)dcgettext(0,type_string,5);\n      asprintf_result = asprintf(&DAT_0010b728,type_string,(ulong)type);\n      type_string = DAT_0010b728;\njoined_r0x00103964:\n      if (asprintf_result < 0) {\n        errno_location = __errno_location();\n        error_string = xstrerror(*errno_location);\n        print_formatted_error_message_001054d0_00106300(&DAT_0010712d,error_string);\nLAB_00103983:\n        type_string = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",type_string);\n  }\n  if (error_message[2] == 0) {\n    if (error_message[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(error_message[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_formatted_error_message_001054d0();\n  }\n  symbol_info = error_message[2];\n  if ((symbol_info != 0) || (symbol_info = error_message[3], symbol_info != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(symbol_info + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001054d0",
            "entrypoint": "0x001054d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001054d0": "print_formatted_error_message_001054d0",
                "bVar9": "type",
                "cVar1": "is_undefined_symclass",
                "iVar3": "asprintf_result",
                "in_R8": "param_r8",
                "in_R9": "param_r9",
                "lVar7": "symbol_info",
                "param_1": "message",
                "pcVar11": "type_string",
                "piVar5": "errno_location",
                "plVar4": "error_message",
                "uVar10": "original_print_width",
                "uVar2": "symbol_class",
                "uVar6": "error_string",
                "uVar8": "print_width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105530": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105543) */\n/* WARNING: Removing unreachable block (ram,0x0010554f) */\n\nvoid FUNC_00105530(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105530",
            "entrypoint": "0x00105530",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105530": "FUNC_00105530"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105560": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105584) */\n/* WARNING: Removing unreachable block (ram,0x00105590) */\n\nvoid FUNC_00105560(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105560",
            "entrypoint": "0x00105560",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105560": "FUNC_00105560"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001055f0": {
            "additional_data": {
                "FUN_001055f0": {
                    "check_and_process_object_files": 1,
                    "decode_and_process_files": 1,
                    "parse_and_process_files": 2,
                    "parse_object_files": 1,
                    "process_binary": 1,
                    "process_object_files": 16
                },
                "__ptr": {
                    "byte_pointer": 1,
                    "byte_pointer3": 2,
                    "byte_ptr": 3,
                    "byte_ptr2": 2,
                    "byte_ptr3": 6,
                    "byte_ptr_ptr": 2,
                    "escaped_string": 1,
                    "line": 1,
                    "new_buffer": 2,
                    "new_byte_array": 1,
                    "ptr": 1,
                    "ptr3": 2,
                    "result": 1
                },
                "__s": {
                    "buffer": 3,
                    "byte_array": 2,
                    "byte_pointer2": 2,
                    "byte_ptr": 3,
                    "byte_ptr2": 5,
                    "byte_ptr_s": 2,
                    "byte_stream": 2,
                    "file_buffer": 1,
                    "file_content": 1,
                    "source": 1,
                    "str": 1,
                    "string": 1,
                    "temp_file_content": 1
                },
                "__src": {
                    "line_pointers": 1,
                    "long_pointer": 2,
                    "long_pointer1": 1,
                    "long_ptr": 2,
                    "long_ptr1": 6,
                    "long_ptr2": 1,
                    "long_ptr_src": 3,
                    "new_file_name_ptr2": 1,
                    "ptr_source": 1,
                    "source": 2,
                    "src": 4,
                    "string_array": 1
                },
                "__stream": {
                    "file": 2,
                    "file_pointer": 1,
                    "file_ptr": 3,
                    "file_stream": 14,
                    "new_file_ptr": 1,
                    "stream": 3,
                    "temp_file_stream": 1
                },
                "_optarg": {
                    "option_argument": 1
                },
                "_optind": {
                    "option_index": 1
                },
                "_sch_istable": {
                    "character_table": 1
                },
                "_stderr": {
                    "standard_error_stream": 1
                },
                "_stdout": {
                    "standard_output_stream": 1
                },
                "bVAr5": {
                    "bool_var3": 1
                },
                "bVar2": {
                    "bool_var2": 1,
                    "boolean_var1": 1,
                    "byte2": 1,
                    "byte_var": 6,
                    "byte_var2": 11,
                    "byte_var_2": 1,
                    "byte_variable2": 1,
                    "current_byte_value": 2,
                    "current_char": 1,
                    "flag1": 3,
                    "var2": 2
                },
                "bVar3": {
                    "backslash": 1,
                    "bool_var1": 8,
                    "bool_var3": 8,
                    "bool_var5": 1,
                    "bool_var_3": 1,
                    "bool_variable3": 1,
                    "boolean_var2": 1,
                    "flag1": 1,
                    "flag2": 3,
                    "is_alpha": 1,
                    "is_in_single_quote": 1,
                    "is_table1": 1,
                    "is_var3": 1,
                    "var3": 1
                },
                "bVar4": {
                    "bool_var2": 8,
                    "bool_var4": 8,
                    "bool_var6": 1,
                    "bool_var_4": 1,
                    "bool_variable4": 1,
                    "boolean_var3": 1,
                    "flag2": 1,
                    "flag3": 3,
                    "is_backslash": 2,
                    "is_table2": 1,
                    "is_var4": 1,
                    "single_quote": 1,
                    "var4": 1
                },
                "bVar5": {
                    "bool_var3": 7,
                    "bool_var4": 1,
                    "bool_var5": 8,
                    "bool_var_5": 1,
                    "bool_variable5": 1,
                    "boolean_var4": 1,
                    "double_quote": 1,
                    "flag3": 1,
                    "flag4": 3,
                    "is_in_double_quote": 1,
                    "is_quote": 1,
                    "is_table3": 1,
                    "is_var5": 1,
                    "var5": 1
                },
                "bVar7": {
                    "byte1": 3,
                    "byte3": 1,
                    "byte_var1": 1,
                    "byte_var2": 6,
                    "byte_var3": 3,
                    "byte_var7": 9,
                    "byte_var_7": 1,
                    "byte_variable7": 1,
                    "next_byte": 1,
                    "next_byte_value": 1,
                    "next_character": 1,
                    "var3": 1,
                    "var7": 1
                },
                "bfd_plugin_set_program_name": {
                    "set_plugin_program_name": 1
                },
                "bfd_set_error_program_name": {
                    "set_error_program_name": 1
                },
                "bindtextdomain": {
                    "bind_text_domain": 1
                },
                "cVar10": {
                    "var10": 1
                },
                "cVar13": {
                    "option_arg": 1
                },
                "cVar21": {
                    "option_string": 1
                },
                "cVar22": {
                    "text_domain": 1
                },
                "cVar26": {
                    "program_name": 1
                },
                "cVar27": {
                    "error_message": 1
                },
                "cVar28": {
                    "default_target": 1
                },
                "cVar6": {
                    "char1": 5,
                    "char_var1": 10,
                    "char_var6": 9,
                    "char_var_6": 1,
                    "char_variable6": 1,
                    "current_character": 1,
                    "hex_char": 1,
                    "radix_char": 1,
                    "var6": 1
                },
                "cVar8": {
                    "char2": 5,
                    "char_var2": 10,
                    "char_var8": 9,
                    "char_var_8": 1,
                    "char_variable8": 1,
                    "demangle_style": 1,
                    "is_escape": 1,
                    "return_value": 1,
                    "var8": 1
                },
                "cVar9": {
                    "char3": 5,
                    "char_var3": 10,
                    "char_var9": 9,
                    "char_var_9": 1,
                    "char_variable9": 1,
                    "is_locale": 1,
                    "option": 1,
                    "var9": 1
                },
                "check_and_process_object_file_001043d0": {
                    "check_and_process_object_file": 1
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "exit": {
                    "terminate_program": 1
                },
                "fclose": {
                    "close_file": 1
                },
                "ferror": {
                    "file_error": 1
                },
                "fopen": {
                    "open_file": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "fread": {
                    "read_file": 1
                },
                "fseek": {
                    "seek_file": 1
                },
                "ftell": {
                    "tell_file": 1
                },
                "iVar10": {
                    "count": 1,
                    "counter": 1,
                    "file_status": 1,
                    "index": 1,
                    "index_var1": 1,
                    "int_var1": 9,
                    "int_var10": 8,
                    "int_var_10": 1,
                    "int_variable10": 1,
                    "len": 1,
                    "num1": 1,
                    "result_code": 1,
                    "var1": 1
                },
                "iVar12": {
                    "counter": 1,
                    "file_index": 1,
                    "i": 1,
                    "index_var2": 1,
                    "int_var12": 8,
                    "int_var2": 6,
                    "int_var3": 2,
                    "int_var5": 1,
                    "int_var_12": 1,
                    "int_variable12": 1,
                    "iter": 1,
                    "num3": 1,
                    "temp_var": 1,
                    "var12": 1,
                    "var3": 1
                },
                "iVar12_2": {
                    "int_var12_2": 2
                },
                "iVar13": {
                    "int_var3": 1,
                    "int_variable13": 1
                },
                "iVar14": {
                    "int_variable14": 1
                },
                "iVar15": {
                    "int_pointer": 1,
                    "int_pointer1": 1
                },
                "iVar27": {
                    "int_var3": 1,
                    "int_var4": 1,
                    "num4": 1
                },
                "lVar17": {
                    "long_var": 1,
                    "long_var1": 10,
                    "long_var17": 9,
                    "long_var_17": 1,
                    "long_variable17": 1,
                    "num5": 1,
                    "result": 1,
                    "str_length": 1,
                    "temp3": 1,
                    "var1": 1,
                    "var7": 1
                },
                "lVar24": {
                    "curr_file_path": 1,
                    "file_offset": 2,
                    "file_size": 1,
                    "long_var2": 6,
                    "long_var24": 7,
                    "long_var3": 1,
                    "long_var_24": 1,
                    "long_variable24": 1,
                    "num8": 1,
                    "temp_var": 1,
                    "temp_var6": 1,
                    "var1": 1,
                    "var11": 1
                },
                "local_100": {
                    "source_files": 1
                },
                "local_108": {
                    "count2": 1,
                    "file_length": 1,
                    "line_size": 1,
                    "local_size": 3,
                    "local_size108": 1,
                    "local_size_t_108": 1,
                    "local_size_t_var": 1,
                    "local_size_var": 1,
                    "local_var108": 5,
                    "local_var3": 7,
                    "local_var_108": 1,
                    "size_var2": 1,
                    "strlen_result": 2,
                    "temp9": 1,
                    "var16": 1
                },
                "local_10c": {
                    "file_limit": 1,
                    "int_var7": 1,
                    "limit": 1,
                    "local_int10c": 1,
                    "local_int2": 4,
                    "local_int_10c": 1,
                    "local_int_var2": 1,
                    "local_var10_c": 3,
                    "local_var10c": 2,
                    "local_var2": 7,
                    "local_var_10c": 1,
                    "max_files": 2,
                    "temp8": 1,
                    "temp_var4": 1,
                    "var15": 1
                },
                "local_110": {
                    "count1": 1,
                    "current_file_index": 1,
                    "file_counter": 1,
                    "int_var6": 1,
                    "iteration_counter": 1,
                    "local_int1": 4,
                    "local_int110": 1,
                    "local_int_110": 1,
                    "local_int_var1": 1,
                    "local_var1": 7,
                    "local_var110": 5,
                    "local_var_110": 1,
                    "temp7": 1,
                    "temp_var3": 1,
                    "var14": 1
                },
                "local_14": {
                    "current_option": 1
                },
                "local_18": {
                    "current_argument": 1
                },
                "local_1c": {
                    "argument_index": 1
                },
                "local_40": {
                    "input_file": 1
                },
                "local_4c": {
                    "radix": 1
                },
                "local_68": {
                    "output_filename": 1
                },
                "local_70": {
                    "demangle_style": 1
                },
                "local_78": {
                    "highlight_style": 1
                },
                "local_80": {
                    "hex_style": 1
                },
                "local_88": {
                    "undefined_filter": 1
                },
                "local_90": {
                    "output_style": 1
                },
                "local_98": {
                    "options": 1
                },
                "local_c8": {
                    "file_information": 1,
                    "file_stat": 2,
                    "local_c8": 1,
                    "local_stat": 2,
                    "local_stat1": 1,
                    "local_stat_c8": 2,
                    "local_stat_var": 1,
                    "local_var4": 4,
                    "local_var_c8": 3,
                    "local_varc8": 1,
                    "stat_result": 1,
                    "stat_struct": 1,
                    "stat_var": 1,
                    "stat_var1": 2,
                    "stats": 1,
                    "temp10": 1,
                    "var17": 1
                },
                "memcpy": {
                    "copy_memory": 1
                },
                "memmove": {
                    "move_memory": 1
                },
                "memset": {
                    "set_memory": 1
                },
                "param_1": {
                    "argc": 13,
                    "num": 1,
                    "num_files": 13,
                    "num_params": 3,
                    "number_of_parameters": 1
                },
                "param_2": {
                    "argv": 13,
                    "file_list": 3,
                    "file_names": 3,
                    "file_paths": 7,
                    "files": 1,
                    "files_array": 1,
                    "param_array": 3
                },
                "pbVar1": {
                    "byte1": 1,
                    "byte_pointer": 1,
                    "byte_pointer1": 5,
                    "byte_ptr": 2,
                    "byte_ptr1": 6,
                    "current_byte": 4,
                    "ptr1": 6,
                    "ptr_byte1": 4,
                    "ptr_byte_1": 1
                },
                "pbVar23": {
                    "byte_array1": 1,
                    "byte_p_var23": 1,
                    "byte_pointer2": 3,
                    "byte_pointer4": 2,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "byte_ptr23": 2,
                    "byte_ptr3": 1,
                    "byte_ptr4": 6,
                    "byte_ptr_23": 1,
                    "byte_ptr_var23": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr4": 1,
                    "ptr6": 1,
                    "ptr_byte2": 1,
                    "string_ptr": 1
                },
                "pbVar25": {
                    "byte_array2": 1,
                    "byte_pointer3": 3,
                    "byte_pointer5": 2,
                    "byte_ptr2": 1,
                    "byte_ptr25": 3,
                    "byte_ptr4": 1,
                    "byte_ptr5": 5,
                    "byte_ptr6": 1,
                    "byte_ptr_25": 1,
                    "byte_ptr_var25": 1,
                    "curr_ptr": 1,
                    "ptr3": 1,
                    "ptr8": 1,
                    "string_pointer": 1,
                    "temp_byte": 1
                },
                "pcVar22": {
                    "char_pointer1": 1,
                    "char_ptr1": 1,
                    "char_ptr_var22": 1,
                    "current_file": 1,
                    "file_name": 1,
                    "str": 3,
                    "str1": 3,
                    "str_ptr": 2,
                    "str_ptr1": 3,
                    "str_var": 1,
                    "str_var22": 3,
                    "str_var_22": 1,
                    "string_var1": 2,
                    "string_var22": 2,
                    "text_domain_variable": 1,
                    "textdomain_name": 1
                },
                "pcVar26": {
                    "char_pointer1": 1,
                    "char_pointer2": 1,
                    "char_ptr2": 1,
                    "char_ptr_var26": 1,
                    "err_msg3": 1,
                    "error_message": 1,
                    "format_str": 1,
                    "str2": 3,
                    "str_ptr2": 5,
                    "str_var2": 1,
                    "str_var26": 3,
                    "str_var_26": 1,
                    "string_var2": 2,
                    "string_var26": 2,
                    "temp_str": 1
                },
                "pcVar34": {
                    "output_format": 1
                },
                "piVar15": {
                    "int_pointer1": 2,
                    "int_pointer15": 1,
                    "int_ptr1": 8,
                    "int_ptr15": 4,
                    "optarg_index": 1,
                    "ptr2": 4,
                    "ptr_int": 1,
                    "ptr_int_15": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "var6": 1
                },
                "piVar27": {
                    "int_pointer27": 1,
                    "int_pointer3": 4,
                    "int_ptr2": 2,
                    "int_ptr27": 3,
                    "int_ptr3": 5,
                    "int_ptr_var27": 1,
                    "opt": 1,
                    "option": 1,
                    "pointer_var28": 1,
                    "ptr10": 1,
                    "ptr2": 1,
                    "ptr_int_27": 1,
                    "temp_var2": 1,
                    "var13": 1
                },
                "plVar18": {
                    "current_file": 1,
                    "file_list_ptr": 2,
                    "file_name_ptr": 1,
                    "file_paths": 3,
                    "file_paths_pointer": 3,
                    "file_paths_ptr": 2,
                    "file_pointer_array": 1,
                    "files_array": 1,
                    "long_array": 1,
                    "long_array_ptr1": 1,
                    "long_pointer1": 1,
                    "long_pointer_array": 1,
                    "long_ptr2": 2,
                    "long_ptr_18": 1,
                    "long_ptr_array": 1,
                    "long_ptr_var18": 1,
                    "param2_modified": 1,
                    "param2_ptr": 1,
                    "param2_var": 1,
                    "param_2_copy": 1,
                    "ptr4": 1,
                    "ptr_file_names": 1
                },
                "plVar19": {
                    "file_list_ptr2": 1,
                    "file_paths_pointer2": 1,
                    "file_paths_ptr2": 1,
                    "long_array2": 1,
                    "long_array_ptr3": 1,
                    "long_pointer2": 2,
                    "long_pointer_array2": 1,
                    "long_ptr3": 2,
                    "long_ptr_19": 1,
                    "long_ptr_array2": 1,
                    "long_ptr_var19": 1,
                    "new_file_list_ptr": 1,
                    "new_file_name_ptr": 1,
                    "new_file_paths": 2,
                    "param2_ptr2": 1,
                    "param2_var2": 1,
                    "param_2_copy2": 1,
                    "ptr5": 1,
                    "ptr_current_file_names": 1,
                    "temp4": 1,
                    "temp_file_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "var8": 1
                },
                "print_error_with_formatted_message_00106400": {
                    "print_error_message_with_formatted_msg": 1
                },
                "print_symbols_usage_00103ca0": {
                    "print_symbol_usage": 1
                },
                "printf": {
                    "print_formatted": 1
                },
                "sVar16": {
                    "buffer_size": 1,
                    "size": 5,
                    "size_t_var": 2,
                    "size_t_var_16": 1,
                    "size_var": 4,
                    "size_var1": 4,
                    "size_var16": 7,
                    "size_variable16": 1,
                    "str_len": 1,
                    "str_length": 1
                },
                "setlocale": {
                    "set_locale": 1
                },
                "stat": {
                    "file_stat": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "textdomain": {
                    "text_domain": 1
                },
                "uVar11": {
                    "file_index": 1,
                    "index": 2,
                    "loop_iterator": 1,
                    "num2": 1,
                    "result": 1,
                    "uint_var": 4,
                    "uint_var1": 5,
                    "uint_var11": 8,
                    "uint_var4": 1,
                    "uint_var_11": 1,
                    "uint_variable11": 1,
                    "unint_var11": 1,
                    "var11": 1,
                    "var2": 1
                },
                "uVar13": {
                    "temp1": 1,
                    "temp_var13": 1,
                    "temp_var2": 1,
                    "u_var1": 1,
                    "uint_var1": 2,
                    "uint_var13": 5,
                    "uint_var2": 4,
                    "unint_var13": 1,
                    "uval13": 1,
                    "var13": 1,
                    "var4": 1
                },
                "uVar14": {
                    "radix": 1,
                    "temp2": 1,
                    "temp_var14": 1,
                    "temp_var3": 1,
                    "u_var2": 1,
                    "uint_var14": 5,
                    "uint_var2": 3,
                    "uint_var3": 4,
                    "unint_var14": 1,
                    "var14": 1,
                    "var5": 1
                },
                "uVar20": {
                    "err_msg1": 1,
                    "new_filename": 1,
                    "num6": 1,
                    "temp5": 1,
                    "temp_str": 1,
                    "temp_var20": 1,
                    "temp_var4": 1,
                    "u_var1": 1,
                    "u_var3": 1,
                    "uint_var20": 3,
                    "uint_var3": 1,
                    "uint_var4": 1,
                    "undefined8_var": 1,
                    "undefined8_var1": 3,
                    "undefined8_var20": 3,
                    "undefined8_var_20": 1,
                    "undefined_ptr1": 1,
                    "undefined_variable20": 1,
                    "unint_var20": 1,
                    "var9": 1
                },
                "uVar21": {
                    "err_msg2": 1,
                    "errmsg": 1,
                    "num7": 1,
                    "temp6": 1,
                    "temp_str2": 1,
                    "temp_var21": 1,
                    "temp_var5": 1,
                    "u_var2": 1,
                    "u_var4": 1,
                    "uint_var21": 3,
                    "uint_var4": 1,
                    "uint_var5": 1,
                    "undefined8_var2": 4,
                    "undefined8_var21": 3,
                    "undefined8_var_21": 1,
                    "undefined_ptr2": 1,
                    "undefined_variable21": 1,
                    "unint_var21": 1,
                    "var10": 1
                },
                "unaff_R12": {
                    "current_ptr2": 1,
                    "file_index": 1,
                    "file_index_ptr": 1,
                    "int_double_ptr1": 1,
                    "int_pointer2": 4,
                    "int_ptr": 1,
                    "int_ptr2": 5,
                    "int_ptr_unaff_r12": 1,
                    "pointer_var27": 1,
                    "ptr3": 1,
                    "ptr9": 1,
                    "ptr_int_unaff_r12": 1,
                    "temp_ptr2": 1,
                    "temp_var1": 1,
                    "unaff_int_ptr_r12": 1,
                    "unaff_ints": 1,
                    "unaff_r12": 2,
                    "var12": 1
                },
                "unaff_RBP": {
                    "current_ptr": 1,
                    "exit_code": 1,
                    "ptr7": 1,
                    "ptr_undefined": 1,
                    "result": 2,
                    "result_ptr": 2,
                    "ret_ptr": 1,
                    "ret_val": 1,
                    "return_val": 1,
                    "return_value": 1,
                    "return_value_pointer": 1,
                    "unaff_ptr_rbp": 1,
                    "unaff_rbp": 2,
                    "undefined_double_ptr1": 1,
                    "undefined_double_ptr_rbp": 1,
                    "undefined_pointer": 2,
                    "undefined_pointer1": 1,
                    "undefined_ptr": 1,
                    "undefined_ptr1": 3,
                    "undefined_var1": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 1
                },
                "xrealloc": {
                    "reallocate_memory": 1
                },
                "xstrdup": {
                    "duplicate_string": 1
                }
            },
            "called": [
                "strcmp",
                "bfd_plugin_set_plugin",
                "cplus_demangle_set_style",
                "xrealloc",
                "FUN_001043d0",
                "bfd_plugin_set_program_name",
                "FUN_00103ca0",
                "bfd_errmsg",
                "printf",
                "setlocale",
                "fseek",
                "xmalloc_set_program_name",
                "ftell",
                "bfd_set_error_program_name",
                "fopen",
                "fread",
                "xstrdup",
                "xmalloc",
                "bfd_set_default_target",
                "FUN_00106400",
                "cplus_demangle_name_to_style",
                "exit",
                "FUN_00106300",
                "memcpy",
                "memmove",
                "textdomain",
                "bfd_init",
                "strlen",
                "free",
                "fclose",
                "ferror",
                "stat",
                "bfd_get_error",
                "FUN_00104370",
                "xexit",
                "bindtextdomain",
                "getopt_long",
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nundefined ** check_and_process_object_files_001055f0(int num_files,long *argv)\n\n{\n  byte *ptr1;\n  byte byte_var2;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var5;\n  char char_var1;\n  byte byte_var7;\n  char char_var2;\n  char char_var3;\n  int int_var1;\n  uint uint_var11;\n  int int_var12;\n  undefined4 uint_var13;\n  undefined4 uint_var14;\n  FILE *file_stream;\n  byte *byte_ptr2;\n  int *int_ptr1;\n  size_t size_var16;\n  byte *byte_ptr3;\n  long *long_ptr1;\n  long long_var1;\n  long *file_paths_pointer;\n  long *long_pointer2;\n  undefined8 undefined8_var1;\n  undefined8 undefined8_var2;\n  char *str;\n  byte *byte_ptr4;\n  undefined **undefined_ptr1;\n  long long_var24;\n  byte *byte_ptr5;\n  char *str_ptr2;\n  int *int_ptr2;\n  int *int_ptr3;\n  int local_var1;\n  int local_var2;\n  size_t local_var3;\n  file_stat local_var4;\n  \n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  str = \"binutils\";\n  setlocale(3,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_0010b820 = *argv;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_0010b820);\n  bfd_plugin_set_program_name(DAT_0010b820);\n  file_paths_pointer = argv;\n  if (1 < num_files) {\n    local_var2 = 2000;\n    int_ptr2 = (int *)0x1;\n    local_var1 = 0;\n    do {\n      int_var12 = (int)int_ptr2;\n      undefined_ptr1 = (undefined **)(long)int_var12;\n      int_ptr3 = (int *)((long)undefined_ptr1 * 8);\n      if (*(char *)file_paths_pointer[(long)undefined_ptr1] != '@') goto LAB_00105a70;\n      local_var2 = local_var2 + -1;\n      if (local_var2 == 0) {\n        long_var24 = *file_paths_pointer;\n        str_ptr2 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_00105f1d;\n      }\n      str = (char *)file_paths_pointer[(long)undefined_ptr1] + 1;\n      int_var1 = file_stat(str,&local_var4);\n      if (int_var1 < 0) {\nLAB_00105a70:\n        if (num_files <= int_var12 + 1) break;\nLAB_00105a7a:\n        uint_var11 = int_var12 + 1;\n        local_var1 = int_var12;\n      }\n      else {\n        if ((local_var4.st_mode & 0xf000) == 0x4000) goto LAB_00105f13;\n        file_stream = fopen(str,\"r\");\n        if (file_stream == (FILE *)0x0) goto LAB_00105a70;\n        int_var1 = fseek(file_stream,0,2);\n        if (((int_var1 == -1) ||\n            (str = (char *)ftell(file_stream), (int *)str == (int *)0xffffffffffffffff)) ||\n           (int_var1 = fseek(file_stream,0,0), int_var1 == -1)) {\nLAB_00105ad0:\n          fclose(file_stream);\n          if (int_var12 + 1 < num_files) goto LAB_00105a7a;\n          break;\n        }\n        byte_ptr2 = (byte *)xmalloc((char *)((long)str + 1));\n        int_ptr1 = (int *)fread(byte_ptr2,1,(size_t)str,file_stream);\n        if (((int *)str != int_ptr1) && (int_var1 = ferror(file_stream), int_var1 != 0)) {\n          free(byte_ptr2);\n          goto LAB_00105ad0;\n        }\n        byte_ptr2[(long)int_ptr1] = 0;\n        byte_var7 = *byte_ptr2;\n        byte_ptr4 = byte_ptr2;\n        if (byte_var7 != 0) {\nLAB_001057d0:\n          if (((&character_table)[(ulong)byte_var7 * 2] & 0x40) != 0) goto LAB_001057c0;\n          size_var16 = strlen((char *)byte_ptr2);\n          byte_ptr3 = (byte *)xmalloc(size_var16 + 1);\n          int_var1 = 0;\n          bool_var5 = false;\n          bool_var1 = false;\n          long_var24 = 0;\n          long_ptr1 = (long *)0x0;\n          bool_var2 = false;\n          byte_ptr4 = byte_ptr2;\n          do {\n            while (((&character_table)[(ulong)*byte_ptr4 * 2] & 0x40) != 0) {\n              byte_ptr4 = byte_ptr4 + 1;\n            }\n            if ((int_var1 == 0) || (long_pointer2 = long_ptr1 + long_var24, int_var1 + -1 <= (int)long_var24)) {\n              if (long_ptr1 == (long *)0x0) {\n                int_var1 = 8;\n                long_ptr1 = (long *)xmalloc(0x40);\n                long_pointer2 = long_ptr1 + long_var24;\n                *long_pointer2 = 0;\n              }\n              else {\n                int_var1 = int_var1 * 2;\n                long_ptr1 = (long *)xrealloc(long_ptr1,(long)int_var1 << 3);\n                long_pointer2 = long_ptr1 + long_var24;\n                *long_pointer2 = 0;\n              }\n            }\n            byte_var7 = *byte_ptr4;\n            byte_ptr5 = byte_ptr3;\n            while (byte_var7 != 0) {\n              while( true ) {\n                if ((((&character_table)[(ulong)byte_var7 * 2] & 0x40) != 0) &&\n                   (!(bool)(bool_var5 | bool_var2 | bool_var1))) {\n                  bool_var2 = false;\n                  bool_var5 = false;\n                  bool_var1 = false;\n                  goto LAB_001058e0;\n                }\n                if (!bool_var2) break;\n                byte_ptr4 = byte_ptr4 + 1;\n                *byte_ptr5 = byte_var7;\n                byte_ptr5 = byte_ptr5 + 1;\n                bool_var2 = false;\n                byte_var7 = *byte_ptr4;\n                if (byte_var7 == 0) goto LAB_001058e0;\n              }\n              if (byte_var7 == 0x5c) {\n                bool_var2 = true;\n              }\n              else if (bool_var1) {\n                if (byte_var7 == 0x27) {\n                  bool_var1 = false;\n                }\n                else {\nLAB_00105a55:\n                  *byte_ptr5 = byte_var7;\n                  byte_ptr5 = byte_ptr5 + 1;\n                }\n              }\n              else if (bool_var5) {\n                if (byte_var7 != 0x22) goto LAB_00105a55;\n                bool_var5 = false;\n              }\n              else if (byte_var7 == 0x27) {\n                bool_var1 = true;\n              }\n              else {\n                if (byte_var7 != 0x22) goto LAB_00105a55;\n                bool_var5 = true;\n              }\n              ptr1 = byte_ptr4 + 1;\n              byte_ptr4 = byte_ptr4 + 1;\n              byte_var7 = *ptr1;\n            }\nLAB_001058e0:\n            *byte_ptr5 = 0;\n            long_var1 = xstrdup(byte_ptr3);\n            *long_pointer2 = long_var1;\n            long_ptr1[long_var24 + 1] = 0;\n            byte_var7 = *byte_ptr4;\n            byte_var2 = (&character_table)[(ulong)byte_var7 * 2];\n            while ((byte_var2 & 0x40) != 0) {\n              byte_var7 = byte_ptr4[1];\n              byte_ptr4 = byte_ptr4 + 1;\n              byte_var2 = (&character_table)[(ulong)byte_var7 * 2];\n            }\n            long_var24 = long_var24 + 1;\n          } while (byte_var7 != 0);\n          free(byte_ptr3);\n          long_pointer2 = file_paths_pointer;\n          if (argv == file_paths_pointer) goto LAB_00105c79;\n          goto LAB_0010597d;\n        }\nLAB_00105c5c:\n        long_ptr1 = (long *)xmalloc(8);\n        *long_ptr1 = 0;\n        if (argv == file_paths_pointer) {\nLAB_00105c79:\n          if (*file_paths_pointer == 0) {\n            int_var1 = 0;\n          }\n          else {\n            long_var24 = 1;\n            do {\n              int_var1 = (int)long_var24;\n              long_pointer2 = file_paths_pointer + long_var24;\n              long_var24 = long_var24 + 1;\n            } while (*long_pointer2 != 0);\n          }\n          long_var1 = 0;\n          long_pointer2 = (long *)xmalloc((long)(int_var1 + 1) << 3);\n          long_var24 = *file_paths_pointer;\n          while (long_var24 != 0) {\n            undefined8_var1 = xstrdup();\n            *(undefined8 *)((long)long_pointer2 + long_var1) = undefined8_var1;\n            long_var1 = long_var1 + 8;\n            long_var24 = *(long *)((long)file_paths_pointer + long_var1);\n          }\n          *(undefined8 *)((long)long_pointer2 + long_var1) = 0;\nLAB_0010597d:\n          file_paths_pointer = long_pointer2;\n          if (*long_ptr1 == 0) goto LAB_00105d50;\n          str = (char *)0x0;\n          do {\n            str = (char *)((long)str + 1);\n          } while (long_ptr1[(long)str] != 0);\n          local_var3 = (long)str * 8;\n        }\n        else {\nLAB_00105d50:\n          str = (char *)0x0;\n          local_var3 = 0;\n        }\n        free((void *)file_paths_pointer[(long)undefined_ptr1]);\n        file_paths_pointer = (long *)xrealloc(file_paths_pointer,(long)((long)str + (long)num_files + 1) * 8);\n        int_var1 = num_files + -1 + (int)str;\n        memmove(file_paths_pointer + (long)(undefined **)((long)undefined_ptr1 + (long)str),\n                file_paths_pointer + 1 + (long)undefined_ptr1,(long)(num_files - int_var12) << 3);\n        memcpy(file_paths_pointer + (long)undefined_ptr1,long_ptr1,local_var3);\n        free(long_ptr1);\n        free(byte_ptr2);\n        fclose(file_stream);\n        uint_var11 = local_var1 + 1;\n        undefined_ptr1 = (undefined **)((long)undefined_ptr1 + (long)str);\n        int_ptr2 = int_ptr3;\n        num_files = int_var1;\n        if (int_var1 <= (int)uint_var11) break;\n      }\n      int_ptr2 = (int *)(ulong)uint_var11;\n    } while( true );\n  }\n  int_var12 = bfd_init();\n  str_ptr2 = \"fatal error: libbfd ABI mismatch\";\n  if (int_var12 != 0x118) goto LAB_00106085;\n  undefined_ptr1 = &PTR_s_debug_syms_0010b280;\n  char_var2 = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n  str = \"aABCDef:gHhjJlnopPrSst:uU:vVvWX:\";\n  int_ptr2 = (int *)\"x86_64-pc-linux-gnu\";\n  char_var3 = DAT_0010b23b;\n  char_var1 = DAT_0010b240;\n  uint_var14 = DAT_0010b244;\n  if (char_var2 != '\\0') {\nswitchD_00105c5a_caseD_0:\n    DAT_0010b244 = uint_var14;\n    DAT_0010b240 = char_var1;\n    DAT_0010b23b = char_var3;\n    uint_var13 = getopt_long(num_files,file_paths_pointer,str);\n    int_ptr3 = option_argument;\n    int_ptr1 = (int *)str;\n    char_var3 = DAT_0010b23b;\n    char_var1 = DAT_0010b240;\n    uint_var14 = DAT_0010b244;\n    switch(uint_var13) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x54:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x69:\n    case 0x6b:\n    case 0x6d:\n    case 0x71:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x87:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n    case 0xa1:\n    case 0xa2:\n    case 0xa3:\n    case 0xa4:\n    case 0xa5:\n    case 0xa6:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n    case 0xaa:\n    case 0xab:\n    case 0xac:\n    case 0xad:\n    case 0xae:\n    case 0xaf:\n    case 0xb0:\n    case 0xb1:\n    case 0xb2:\n    case 0xb3:\n    case 0xb4:\n    case 0xb5:\n    case 0xb6:\n    case 0xb7:\n    case 0xb8:\n    case 0xb9:\n    case 0xba:\n    case 0xbb:\n    case 0xbc:\n    case 0xbd:\n    case 0xbe:\n    case 0xbf:\n    case 0xc0:\n    case 0xc1:\n    case 0xc2:\n    case 0xc3:\n    case 0xc4:\n    case 0xc5:\n    case 0xc6:\n    case 199:\n      print_symbol_usage(standard_error_stream,1);\n      int_ptr3 = int_ptr2;\nLAB_001061d5:\n      int_var12 = strcmp((char *)int_ptr3,\"l\");\n      if (int_var12 == 0) goto LAB_001061a3;\n      int_var12 = strcmp((char *)int_ptr3,\"escape\");\n      int_ptr2 = int_ptr3;\n      if ((int_var12 == 0) || (int_var12 = strcmp((char *)int_ptr3,\"e\"), int_var12 == 0)) {\n        DAT_0010b7e0 = 2;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var12 = strcmp((char *)int_ptr3,\"invalid\");\n      if ((int_var12 == 0) || (int_var12 = strcmp((char *)int_ptr3,\"i\"), int_var12 == 0)) {\n        DAT_0010b7e0 = 5;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var12 = strcmp((char *)int_ptr3,\"hex\");\n      if ((int_var12 == 0) || (int_var12 = strcmp((char *)int_ptr3,\"x\"), int_var12 == 0)) {\n        DAT_0010b7e0 = 3;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      int_var12 = strcmp((char *)int_ptr3,\"highlight\");\n      if ((int_var12 == 0) || (int_var12 = strcmp((char *)int_ptr3,\"h\"), int_var12 == 0)) {\n        DAT_0010b7e0 = 4;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      str_ptr2 = \"invalid argument to -U/--unicode: %s\";\n      break;\n    case 0x41:\n    case 0x6f:\n      DAT_0010b818 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x42:\n      initialize_output_format_00104370(&DAT_00107033);\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x43:\n      goto switchD_00105c5a_caseD_43;\n    case 0x44:\n      DAT_0010b80c = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x48:\n    case 0x68:\n      print_symbol_usage(standard_output_stream,0);\nswitchD_00105c5a_caseD_43:\n      int_ptr2 = (int *)&optarg;\n      DAT_0010b814 = 1;\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      if (option_argument != (int *)0x0) {\n        int_var12 = cplus_demangle_name_to_style();\n        int_ptr1 = option_argument;\n        if (int_var12 == 0) {\n          undefined8_var1 = dcgettext(0,\"unknown demangling style `%s\\'\",5);\n          fprintf_error_message_00106300(undefined8_var1,int_ptr1);\nswitchD_00105c5a_caseD_cc:\n          DAT_0010b248 = DAT_0010b248 | 0x40000;\n          str = (char *)int_ptr1;\n          char_var3 = DAT_0010b23b;\n          char_var1 = DAT_0010b240;\n          uint_var14 = DAT_0010b244;\n        }\n        else {\n          cplus_demangle_set_style();\n          char_var3 = DAT_0010b23b;\n          char_var1 = DAT_0010b240;\n          uint_var14 = DAT_0010b244;\n        }\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x50:\n      initialize_output_format_00104370(\"posix\");\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x53:\n      DAT_0010b7ec = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x55:\n      DAT_0010b7e4 = 1;\n      DAT_0010b7e8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x56:\n      goto switchD_00105c5a_caseD_56;\n    case 0x57:\n      DAT_0010b7d8 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x58:\n      int_var12 = strcmp((char *)option_argument,\"32_64\");\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      if (int_var12 != 0) {\n        str_ptr2 = \"Only -X 32_64 is supported\";\nLAB_00106085:\n        undefined8_var1 = dcgettext(0,str_ptr2,5);\n        printf_error_message_00106300(undefined8_var1);\nswitchD_00105c5a_caseD_56:\n        DAT_0010b7dc = 1;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x61:\n      DAT_0010b81c = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x66:\n      initialize_output_format_00104370(option_argument);\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x67:\n      DAT_0010b808 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6a:\n      initialize_output_format_00104370(\"just-symbols\");\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6c:\n      DAT_0010b804 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6e:\n    case 0x76:\n      DAT_0010b7fc = 1;\n      DAT_0010b800 = 0;\n      DAT_0010b7f8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x70:\n      DAT_0010b800 = 1;\n      DAT_0010b7fc = 0;\n      DAT_0010b7f8 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x72:\n      DAT_0010b7f4 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x73:\n      _DAT_0010b7f0 = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x74:\n      char_var3 = *(char *)option_argument;\n      int_ptr2 = int_ptr3;\n      char_var1 = char_var3;\n      uint_var14 = 10;\n      if (char_var3 == 'd') goto switchD_00105c5a_caseD_0;\n      if ('c' < char_var3) {\n        if (char_var3 == 'o') {\n          uint_var14 = 8;\n          goto switchD_00105c5a_caseD_0;\n        }\n        if (char_var3 == 'x') {\n          uint_var14 = 0x10;\n          goto switchD_00105c5a_caseD_0;\n        }\n      }\n      str_ptr2 = \"%s: invalid radix\";\n      break;\n    case 0x75:\n      DAT_0010b7e8 = 1;\n      DAT_0010b7e4 = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 200:\n      DAT_0010b7d0 = option_argument;\n      goto switchD_00105c5a_caseD_0;\n    case 0xc9:\n      bfd_plugin_set_plugin(option_argument);\n      char_var3 = DAT_0010b23b;\n      char_var1 = DAT_0010b240;\n      uint_var14 = DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0xca:\n      DAT_0010b7f8 = 1;\n      DAT_0010b800 = 0;\n      DAT_0010b7fc = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcb:\n      DAT_0010b248 = DAT_0010b248 & 0xfffbffff;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcc:\n      goto switchD_00105c5a_caseD_cc;\n    case 0xcd:\n      DAT_0010b7c8 = option_argument;\n      goto switchD_00105c5a_caseD_0;\n    case 0xce:\n      int_var12 = strcmp((char *)option_argument,\"default\");\n      if ((int_var12 == 0) || (int_var12 = strcmp((char *)int_ptr3,\"d\"), int_var12 == 0)) {\n        DAT_0010b7e0 = 0;\n        int_ptr2 = int_ptr3;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n      }\n      else {\n        int_var12 = strcmp((char *)int_ptr3,\"locale\");\n        if (int_var12 != 0) goto LAB_001061d5;\nLAB_001061a3:\n        DAT_0010b7e0 = 1;\n        int_ptr2 = int_ptr3;\n        char_var3 = DAT_0010b23b;\n        char_var1 = DAT_0010b240;\n        uint_var14 = DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0xcf:\n      goto switchD_00105c5a_caseD_cf;\n    default:\n      goto code_r0x00105b40;\n    }\n    undefined8_var1 = dcgettext(0,str_ptr2,5);\n    print_formatted_error_message_00106300(undefined8_var1,int_ptr3);\nLAB_00105f13:\n    long_var24 = *file_paths_pointer;\n    str_ptr2 = \"%s: error: @-file refers to a directory\\n\";\nLAB_00105f1d:\n    print_formatted(standard_error_stream,str_ptr2,long_var24);\n    xexit(1);\n    goto LAB_00105f38;\n  }\n  uint_var14 = bfd_get_error();\n  undefined8_var1 = bfd_errmsg(uint_var14);\n  undefined8_var2 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n  print_formatted_error_message_00106300(undefined8_var2,\"x86_64-pc-linux-gnu\",undefined8_var1);\n  goto LAB_0010613c;\nLAB_001057c0:\n  byte_var7 = byte_ptr4[1];\n  byte_ptr4 = byte_ptr4 + 1;\n  if (byte_var7 == 0) goto LAB_00105c5c;\n  goto LAB_001057d0;\nswitchD_00105c5a_caseD_cf:\n  _DAT_0010b810 = 1;\n  goto switchD_00105c5a_caseD_0;\ncode_r0x00105b40:\n  undefined_ptr1 = (undefined **)(ulong)DAT_0010b7dc;\n  if (DAT_0010b7dc != 0) {\n    print_formatted(\"GNU %s %s\\n\",&DAT_001070c6,\"(GNU Binutils for Debian) 2.40\");\n    str = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n    print_formatted(str);\n    str = (char *)dcgettext(0,\n                                \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                ,5);\n    print_formatted(str);\n                    \n    exit(0);\n  }\n  if ((DAT_0010b7f8 != 0) && (DAT_0010b7e8 != 0)) {\n    undefined8_var1 = dcgettext(0,\"Using the --size-sort and --undefined-only options together\",5);\n    print_error_message_with_formatted_msg(undefined8_var1);\n    undefined8_var1 = dcgettext(0,\"will produce no output, since undefined symbols have no size.\",5);\n    print_error_message_with_formatted_msg(undefined8_var1);\n    return undefined_ptr1;\n  }\n  str = &optind;\n  if (option_index != num_files) {\n    if (1 < num_files - option_index) {\nLAB_00105f38:\n      _DAT_0010b7c4 = 1;\n    }\n    while( true ) {\n      int_var12 = *(int *)str;\n      if (num_files <= int_var12) break;\n      long_var24 = file_paths_pointer[int_var12];\n      *(int *)str = int_var12 + 1;\n      char_var3 = check_and_process_object_file(long_var24);\n      if (char_var3 != '\\0') {\n        int_var12 = *(int *)str;\n        if (num_files <= int_var12) break;\n        long_var24 = file_paths_pointer[int_var12];\n        *(int *)str = int_var12 + 1;\n        char_var3 = check_and_process_object_file(long_var24);\n        if (char_var3 != '\\0') {\n          int_var12 = *(int *)str;\n          while( true ) {\n            if (num_files <= int_var12) goto LAB_00105bdd;\n            long_var24 = file_paths_pointer[int_var12];\n            *(int *)str = int_var12 + 1;\n            char_var3 = check_and_process_object_file(long_var24);\n            if (char_var3 == '\\0') break;\n            int_var12 = *(int *)str;\n          }\n        }\n      }\n      undefined_ptr1 = (undefined **)(ulong)((int)undefined_ptr1 + 1);\n    }\nLAB_00105bdd:\n                    \n    exit((int)undefined_ptr1);\n  }\nLAB_0010613c:\n  uint_var11 = check_and_process_object_file(\"a.out\");\n  return (undefined **)(ulong)((uint_var11 ^ 1) & 0xff);\n}\n\n",
            "current_name": "check_and_process_object_files_001055f0",
            "entrypoint": "0x001055f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001055f0": "check_and_process_object_files_001055f0",
                "__ptr": "byte_ptr3",
                "__s": "byte_ptr2",
                "__src": "long_ptr1",
                "__stream": "file_stream",
                "_optarg": "option_argument",
                "_optind": "option_index",
                "_sch_istable": "character_table",
                "_stderr": "standard_error_stream",
                "_stdout": "standard_output_stream",
                "bVar2": "byte_var2",
                "bVar3": "bool_var1",
                "bVar4": "bool_var2",
                "bVar5": "bool_var5",
                "bVar7": "byte_var7",
                "bfd_plugin_set_program_name": "set_plugin_program_name",
                "bfd_set_error_program_name": "set_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar22": "text_domain",
                "cVar26": "program_name",
                "cVar6": "char_var1",
                "cVar8": "char_var2",
                "cVar9": "char_var3",
                "check_and_process_object_file_001043d0": "check_and_process_object_file",
                "dcgettext": "get_translated_string",
                "exit": "terminate_program",
                "fclose": "close_file",
                "ferror": "file_error",
                "fopen": "open_file",
                "fprintf": "print_formatted",
                "fread": "read_file",
                "fseek": "seek_file",
                "ftell": "tell_file",
                "iVar10": "int_var1",
                "iVar12": "int_var12",
                "iVar15": "int_pointer",
                "iVar27": "int_var3",
                "lVar17": "long_var1",
                "lVar24": "long_var24",
                "local_108": "local_var3",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "local_var4",
                "memcpy": "copy_memory",
                "memmove": "move_memory",
                "param_1": "num_files",
                "param_2": "argv",
                "pbVar1": "ptr1",
                "pbVar23": "byte_ptr4",
                "pbVar25": "byte_ptr5",
                "pcVar22": "str",
                "pcVar26": "str_ptr2",
                "piVar15": "int_ptr1",
                "piVar27": "int_ptr3",
                "plVar18": "file_paths_pointer",
                "plVar19": "long_pointer2",
                "print_error_with_formatted_message_00106400": "print_error_message_with_formatted_msg",
                "print_symbols_usage_00103ca0": "print_symbol_usage",
                "printf": "print_formatted",
                "sVar16": "size_var16",
                "setlocale": "set_locale",
                "stat": "file_stat",
                "strcmp": "compare_strings",
                "textdomain": "text_domain",
                "uVar11": "uint_var11",
                "uVar13": "uint_var13",
                "uVar14": "uint_var14",
                "uVar20": "undefined8_var1",
                "uVar21": "undefined8_var2",
                "unaff_R12": "int_ptr2",
                "unaff_RBP": "undefined_ptr1",
                "xmalloc": "allocate_memory",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "reallocate_memory",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001062d0": {
            "additional_data": {
                "DAT_0010b818": {
                    "condition2": 1,
                    "global_condition_2": 1,
                    "is_logging_in_progress": 1
                },
                "FUN_001062d0": {
                    "print_function_if_condition_true": 1,
                    "print_if_condition_met": 9,
                    "print_if_condition_valid": 1,
                    "print_if_debug_enabled": 1,
                    "print_if_enabled": 5,
                    "print_if_flag_not_set": 1,
                    "print_if_flag_set": 3,
                    "print_if_logging_enabled": 2,
                    "print_if_not_disabled": 1,
                    "print_if_valid": 1,
                    "print_message": 3,
                    "print_message_if_enabled": 1,
                    "print_message_if_initialized": 1,
                    "print_message_if_valid": 1
                },
                "_DAT_0010b7c4": {
                    "condition1": 1,
                    "global_condition_1": 1,
                    "is_logging_enabled": 1
                },
                "param_1": {
                    "log_message": 1,
                    "message": 30
                },
                "param_n": {
                    "new_parameter_name_n": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_if_condition_met_001062d0(undefined8 message)\n\n{\n  if ((_DAT_0010b7c4 != 0) && (DAT_0010b818 == 0)) {\n    printf(\"\\n%s:\\n\",message);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_if_condition_met_001062d0",
            "entrypoint": "0x001062d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001062d0": "print_if_condition_met_001062d0",
                "param_1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106300": {
            "additional_data": {
                "FUN_00106300": {
                    "print_and_exit_error": 1,
                    "print_and_exit_with_error": 1,
                    "print_error_and_exit": 4,
                    "print_error_message": 21,
                    "print_error_message_and_exit": 1,
                    "print_formatted_error": 1,
                    "print_formatted_error_message": 2
                },
                "__arg": {
                    "arg": 3,
                    "arg_array": 3,
                    "arg_buffer": 1,
                    "arg_ptr": 6,
                    "args": 3,
                    "args_ptr": 2,
                    "argument": 1,
                    "arguments": 1,
                    "local_arg": 2,
                    "local_args": 3,
                    "output_arguments": 1,
                    "ptr_local_d8": 1
                },
                "__format": {
                    "error_format": 1,
                    "format": 4,
                    "format_ptr": 1,
                    "format_str": 6,
                    "format_string": 10,
                    "local_format": 2,
                    "message_format": 2,
                    "ptr_format": 1
                },
                "in_AL": {
                    "bool_condition": 1,
                    "bool_run": 1,
                    "condition": 1,
                    "condition_flag": 2,
                    "flag": 14,
                    "input_flag": 2,
                    "is_error": 1,
                    "is_error_set": 1,
                    "is_non_zero": 1,
                    "print_error": 1,
                    "some_condition": 1,
                    "some_flag": 2
                },
                "local_18": {
                    "arg7": 1,
                    "arg8": 1,
                    "arg8_copy": 2,
                    "arg8_copy_if_set": 1,
                    "error_param_8_copy": 1,
                    "local_arg8": 1,
                    "local_input_8": 1,
                    "local_param8": 3,
                    "local_param_8": 3,
                    "local_variable_18": 1,
                    "param8": 1,
                    "param8_local": 1,
                    "param_8": 5,
                    "param_8_copy": 2,
                    "param_8_cpy": 1,
                    "var8": 1,
                    "var_17": 1
                },
                "local_28": {
                    "arg6": 1,
                    "arg7": 1,
                    "arg7_copy": 2,
                    "arg7_copy_if_set": 1,
                    "error_param_7_copy": 1,
                    "local_arg7": 1,
                    "local_input_7": 1,
                    "local_param7": 3,
                    "local_param_7": 3,
                    "local_variable_28": 1,
                    "param7": 1,
                    "param7_local": 1,
                    "param_7": 5,
                    "param_7_copy": 2,
                    "param_7_cpy": 1,
                    "var7": 1,
                    "var_16": 1
                },
                "local_38": {
                    "arg5": 1,
                    "arg6": 1,
                    "arg6_copy": 2,
                    "arg6_copy_if_set": 1,
                    "error_param_6_copy": 1,
                    "local_arg6": 1,
                    "local_input_6": 1,
                    "local_param6": 3,
                    "local_param_6": 3,
                    "local_variable_38": 1,
                    "param6": 1,
                    "param6_local": 1,
                    "param_6": 5,
                    "param_6_copy": 2,
                    "param_6_cpy": 1,
                    "var6": 1,
                    "var_15": 1
                },
                "local_48": {
                    "arg4": 1,
                    "arg5": 1,
                    "arg5_copy": 2,
                    "arg5_copy_if_set": 1,
                    "error_param_5_copy": 1,
                    "local_arg5": 1,
                    "local_input_5": 1,
                    "local_param5": 3,
                    "local_param_5": 3,
                    "local_var_condition_5": 1,
                    "local_variable_48": 1,
                    "param5": 1,
                    "param5_local": 1,
                    "param_5": 5,
                    "param_5_copy": 2,
                    "param_5_cpy": 1,
                    "var5": 1,
                    "var_14": 1
                },
                "local_58": {
                    "arg3": 1,
                    "arg4": 1,
                    "arg4_copy": 2,
                    "arg4_copy_if_set": 1,
                    "error_code_ptr": 1,
                    "error_param_4_copy": 1,
                    "local_arg4": 1,
                    "local_input_4": 1,
                    "local_param4": 3,
                    "local_param_4": 3,
                    "local_var_condition_4": 1,
                    "local_variable_58": 1,
                    "param4": 1,
                    "param4_local": 1,
                    "param_4": 5,
                    "param_4_copy": 2,
                    "param_4_cpy": 1,
                    "var4": 1,
                    "var_13": 1
                },
                "local_68": {
                    "arg2": 1,
                    "arg3": 1,
                    "arg3_copy": 2,
                    "arg3_copy_if_set": 1,
                    "error_param_3_copy": 1,
                    "line_number_ptr": 1,
                    "local_arg3": 1,
                    "local_input_3": 1,
                    "local_param3": 3,
                    "local_param_3": 3,
                    "local_var_condition_3": 1,
                    "local_variable_68": 1,
                    "param3": 1,
                    "param3_local": 1,
                    "param_3": 5,
                    "param_3_copy": 2,
                    "param_3_cpy": 1,
                    "var3": 1,
                    "var_12": 1
                },
                "local_78": {
                    "arg1": 1,
                    "arg2": 1,
                    "arg2_copy": 2,
                    "arg2_copy_if_set": 1,
                    "error_code": 1,
                    "error_param_2_copy": 1,
                    "file_name_ptr": 1,
                    "local_arg2": 1,
                    "local_input_2": 1,
                    "local_param2": 3,
                    "local_param_2": 3,
                    "local_var_condition_2": 1,
                    "local_variable_78": 1,
                    "param2": 1,
                    "param2_local": 1,
                    "param_2": 4,
                    "param_2_copy": 2,
                    "param_2_cpy": 1,
                    "var2": 1,
                    "var_11": 1
                },
                "local_88": {
                    "arg1_copy": 1,
                    "arg1_copy_if_set": 1,
                    "error_code": 5,
                    "error_code_copy": 2,
                    "error_code_local": 1,
                    "error_message_ptr": 1,
                    "error_param_1_copy": 1,
                    "error_type": 1,
                    "local_arg1": 1,
                    "local_input_1": 1,
                    "local_param1": 3,
                    "local_param_1": 3,
                    "local_var_condition_1": 1,
                    "local_variable_88": 1,
                    "param_1": 2,
                    "param_1_copy": 1,
                    "param_1_cpy": 1,
                    "var1": 1,
                    "var_10": 1
                },
                "local_90": {
                    "error_message5_cpy": 1,
                    "formatted_arg_5": 1,
                    "local_param14": 4,
                    "local_param_14": 4,
                    "local_var7": 1,
                    "local_var9": 1,
                    "local_var_message_5": 1,
                    "local_variable_90": 1,
                    "message_5": 1,
                    "param14_copy": 1,
                    "param_14": 4,
                    "param_14_copy": 5,
                    "unknown_param_6": 1,
                    "value14": 1,
                    "var14": 1,
                    "var_9": 1
                },
                "local_98": {
                    "error_message4_cpy": 1,
                    "formatted_arg_4": 1,
                    "local_param13": 4,
                    "local_param_13": 4,
                    "local_var6": 1,
                    "local_var8": 1,
                    "local_var_message_4": 1,
                    "local_variable_98": 1,
                    "message_4": 1,
                    "param13_copy": 1,
                    "param_13": 4,
                    "param_13_copy": 5,
                    "unknown_param_5": 1,
                    "value13": 1,
                    "var13": 1,
                    "var_8": 1
                },
                "local_a0": {
                    "error_message3_cpy": 1,
                    "formatted_arg_3": 1,
                    "local_param12": 4,
                    "local_param_12": 4,
                    "local_var5": 1,
                    "local_var7": 1,
                    "local_var_message_3": 1,
                    "local_variable_a0": 1,
                    "message_3": 1,
                    "param12_copy": 1,
                    "param_12": 4,
                    "param_12_copy": 5,
                    "unknown_param_4": 1,
                    "value12": 1,
                    "var12": 1,
                    "var_7": 1
                },
                "local_a8": {
                    "error_message2_cpy": 1,
                    "formatted_arg_2": 1,
                    "local_param11": 4,
                    "local_param_11": 4,
                    "local_var4": 1,
                    "local_var6": 1,
                    "local_var_message_2": 1,
                    "local_variable_a8": 1,
                    "message_2": 1,
                    "param11_copy": 1,
                    "param_11": 4,
                    "param_11_copy": 5,
                    "unknown_param_3": 1,
                    "value11": 1,
                    "var11": 1,
                    "var_6": 1
                },
                "local_b0": {
                    "formatted_arg_1": 1,
                    "local_param10": 4,
                    "local_param_10": 4,
                    "local_var3": 1,
                    "local_var5": 1,
                    "local_var_message_1": 1,
                    "local_variable_b0": 1,
                    "message_1": 1,
                    "param10_copy": 1,
                    "param_10": 4,
                    "param_10_copy": 5,
                    "unknown_param_2": 1,
                    "value10": 1,
                    "var10": 1,
                    "var_5": 1
                },
                "local_b8": {
                    "buf": 1,
                    "buffer": 2,
                    "error_buffer": 1,
                    "error_message": 1,
                    "formatted_output": 1,
                    "local_array": 2,
                    "local_buffer": 6,
                    "local_buffer_b8": 1,
                    "local_buffer_cpy": 1,
                    "local_char_buffer": 1,
                    "local_data": 1,
                    "local_var": 1,
                    "local_var_buffer": 1,
                    "message": 1,
                    "message_buffer": 1,
                    "stack_buffer": 1,
                    "temp_buffer": 3,
                    "temporary_buffer": 2,
                    "unknown_buffer": 1
                },
                "local_c8": {
                    "arg_local_c8": 1,
                    "buffer": 4,
                    "local_array_ptr": 1,
                    "local_buffer": 14,
                    "local_buffer_ptr": 1,
                    "local_ptr2": 1,
                    "local_ptr_c8": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "local_var_array": 1,
                    "pointer_c8": 1,
                    "ptr_local_b8": 1,
                    "var_4": 1
                },
                "local_d0": {
                    "arg_buffer": 1,
                    "arg_local_d0": 1,
                    "array_ptr": 1,
                    "buffer": 8,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "data": 1,
                    "local_buffer": 1,
                    "local_ptr": 1,
                    "local_ptr_d0": 1,
                    "local_var1": 1,
                    "local_var3": 1,
                    "local_var_ptr": 1,
                    "pointer": 1,
                    "pointer_d0": 1,
                    "pointer_value": 1,
                    "ptr_local_argument_3": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 1,
                    "str_ptr": 1,
                    "var_3": 1
                },
                "local_d4": {
                    "arg2": 4,
                    "arg2_copy": 1,
                    "arg2_local": 1,
                    "arg_local_d4": 1,
                    "buffer_length": 1,
                    "buffer_size": 3,
                    "constant": 1,
                    "constant_30": 1,
                    "format_length": 1,
                    "length": 3,
                    "local_1": 1,
                    "local_argument_2": 1,
                    "local_var2": 2,
                    "local_var_arg2": 1,
                    "local_variable_d4": 1,
                    "max_length": 1,
                    "message_length": 1,
                    "offset": 2,
                    "param_9_length": 1,
                    "var_2": 1
                },
                "local_d8": {
                    "arg": 1,
                    "arg1": 6,
                    "arg1_copy": 1,
                    "arg1_local": 1,
                    "arg_buffer_length": 1,
                    "arg_local_d8": 1,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "error": 1,
                    "error_message_length": 1,
                    "local_argument": 1,
                    "local_var1": 2,
                    "local_var_arg1": 1,
                    "local_variable_d8": 1,
                    "num_args": 3,
                    "size": 5,
                    "var_1": 1
                },
                "param_1": {
                    "arg1": 2,
                    "error_code": 25,
                    "error_message": 2,
                    "error_param_1": 1,
                    "error_type": 1
                },
                "param_10": {
                    "arg10": 2,
                    "error_message": 1,
                    "error_message1": 1,
                    "error_msg": 1,
                    "error_param_10": 1,
                    "format_string": 2,
                    "formatted_arg_1": 1,
                    "message_1": 1,
                    "message_param_1": 1,
                    "param10": 6,
                    "param_10": 11,
                    "unknown_param_2": 1
                },
                "param_11": {
                    "arg11": 2,
                    "error_message2": 1,
                    "error_param_11": 1,
                    "formatted_arg_2": 1,
                    "message_2": 1,
                    "message_param_2": 1,
                    "param11": 6,
                    "param_10": 1,
                    "param_11": 14,
                    "unknown_param_3": 1
                },
                "param_12": {
                    "arg12": 2,
                    "error_message3": 1,
                    "error_param_12": 1,
                    "formatted_arg_3": 1,
                    "message_3": 1,
                    "message_param_3": 1,
                    "param12": 6,
                    "param_11": 1,
                    "param_12": 14,
                    "unknown_param_4": 1
                },
                "param_13": {
                    "arg13": 2,
                    "error_message4": 1,
                    "error_param_13": 1,
                    "formatted_arg_4": 1,
                    "message_4": 1,
                    "message_param_4": 1,
                    "param13": 6,
                    "param_12": 1,
                    "param_13": 14,
                    "unknown_param_5": 1
                },
                "param_14": {
                    "arg14": 2,
                    "error_message5": 1,
                    "error_param_14": 1,
                    "formatted_arg_5": 1,
                    "message_5": 1,
                    "message_param_5": 1,
                    "param14": 6,
                    "param_13": 1,
                    "param_14": 14,
                    "unknown_param_6": 1
                },
                "param_2": {
                    "arg1": 2,
                    "arg2": 8,
                    "arg_2": 1,
                    "error_code": 1,
                    "error_param_2": 1,
                    "error_type": 1,
                    "file_name": 1,
                    "input_1": 1,
                    "param2": 5,
                    "param_2": 10
                },
                "param_3": {
                    "arg2": 2,
                    "arg3": 8,
                    "arg_3": 1,
                    "error_param_3": 1,
                    "input_2": 1,
                    "line_number": 1,
                    "param3": 5,
                    "param_3": 12
                },
                "param_4": {
                    "arg3": 2,
                    "arg4": 8,
                    "arg_4": 1,
                    "error_code": 1,
                    "error_param_4": 1,
                    "input_3": 1,
                    "param4": 5,
                    "param_4": 12
                },
                "param_5": {
                    "arg4": 2,
                    "arg5": 8,
                    "arg_5": 1,
                    "error_param_5": 1,
                    "input_4": 1,
                    "param5": 5,
                    "param_5": 13
                },
                "param_6": {
                    "arg5": 2,
                    "arg6": 8,
                    "arg_6": 1,
                    "error_param_6": 1,
                    "input_5": 1,
                    "param6": 5,
                    "param_6": 13
                },
                "param_7": {
                    "arg6": 2,
                    "arg7": 8,
                    "arg_7": 1,
                    "error_param_7": 1,
                    "input_6": 1,
                    "param7": 5,
                    "param_7": 13
                },
                "param_8": {
                    "arg7": 2,
                    "arg8": 8,
                    "arg_8": 1,
                    "error_param_8": 1,
                    "input_7": 1,
                    "param8": 5,
                    "param_8": 13
                },
                "param_9": {
                    "arg8": 1,
                    "arg9": 1,
                    "error_param_9": 1,
                    "param9": 5,
                    "param_9": 14,
                    "unknown_param_1": 1
                }
            },
            "called": [
                "FUN_001063a0",
                "xexit"
            ],
            "calling": [
                "FUN_00104370",
                "FUN_001055f0",
                "FUN_0010370a",
                "FUN_001053c0",
                "FUN_00103729"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_00106300(undefined4 error_code,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 error_code0,undefined8 error_code1,undefined8 error_code2,\n                 undefined8 error_code3,undefined8 error_code4)\n\n{\n  char flag;\n  undefined4 *arg_ptr;\n  char *format_string;\n  undefined4 arg1;\n  undefined4 arg2;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param_10_copy;\n  undefined8 param_11_copy;\n  undefined8 param_12_copy;\n  undefined8 param_13_copy;\n  undefined8 param_14_copy;\n  undefined4 error_code;\n  undefined4 param_2;\n  undefined4 param_3;\n  undefined4 param_4;\n  undefined4 param_5;\n  undefined4 param_6;\n  undefined4 param_7;\n  undefined4 param_8;\n  \n  arg_ptr = &arg1;\n  if (flag != '\\0') {\n    error_code = error_code;\n    param_2 = param_2;\n    param_3 = param_3;\n    param_4 = param_4;\n    param_5 = param_5;\n    param_6 = param_6;\n    param_7 = param_7;\n    param_8 = param_8;\n  }\n  buffer = &stack0x00000008;\n  arg1 = 8;\n  local_buffer = local_buffer;\n  arg2 = 0x30;\n  param_10_copy = error_code0;\n  param_11_copy = error_code1;\n  param_12_copy = error_code2;\n  param_13_copy = error_code3;\n  param_14_copy = error_code4;\n  print_formatted_error_message_00106300_001063a0();\n  format_string = (char *)0x1;\n  xexit();\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",DAT_0010b820);\n  vfprintf(_stderr,format_string,arg_ptr);\n  putc(10,_stderr);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_00106300",
            "entrypoint": "0x00106300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106300": "print_formatted_error_message_00106300",
                "__arg": "arg_ptr",
                "__format": "format_string",
                "in_AL": "flag",
                "local_18": "param_8",
                "local_28": "param_7",
                "local_38": "param_6",
                "local_48": "param_5",
                "local_58": "param_4",
                "local_68": "param_3",
                "local_78": "param_2",
                "local_88": "error_code",
                "local_90": "param_14_copy",
                "local_98": "param_13_copy",
                "local_a0": "param_12_copy",
                "local_a8": "param_11_copy",
                "local_b0": "param_10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "arg2",
                "local_d8": "arg1",
                "param_1": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001063a0": {
            "additional_data": {
                "DAT_0010b820": {
                    "error_message": 1,
                    "error_prefix": 2
                },
                "FFlush": {
                    "flush_output": 1
                },
                "FUN_001063a0": {
                    "print_error": 1,
                    "print_error_message": 26,
                    "print_formatted_error_message": 3,
                    "print_formatted_message": 1
                },
                "__gnuc_va_list": {
                    "variable_arguments": 1,
                    "variadic_arguments": 1
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 18,
                    "stderr": 2
                },
                "_stdout": {
                    "standard_output": 18,
                    "standard_output_stream": 1,
                    "stdout": 2
                },
                "fflush": {
                    "flush_output": 1,
                    "flush_streams": 1
                },
                "fprintf": {
                    "format_and_write_to_output": 1,
                    "print": 1,
                    "print_to_error_stream": 1,
                    "write_to_error_stream": 1
                },
                "param_1": {
                    "error_message": 14,
                    "error_message_format": 1,
                    "format_string": 6,
                    "message": 10
                },
                "param_2": {
                    "ap": 1,
                    "args": 9,
                    "arguments": 15,
                    "format_arguments": 2,
                    "format_parameters": 1,
                    "var_args": 1,
                    "variable_arguments": 1
                },
                "param_3": {
                    "formatted_message": 1
                },
                "param_4": {
                    "new_line_char": 1
                },
                "putc": {
                    "print_new_line": 1,
                    "print_newline": 1,
                    "write_character": 3,
                    "write_newline": 1
                },
                "stderr": {
                    "standard_error": 2
                },
                "stdout": {
                    "standard_output": 2
                },
                "vfprintf": {
                    "format_and_write": 1
                }
            },
            "called": [
                "vfprintf",
                "fflush",
                "putc",
                "fprintf"
            ],
            "calling": [
                "FUN_00106300",
                "FUN_00106400"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_001063a0(char *error_message,variable_arguments arguments)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_0010b820);\n  vfprintf(standard_error,error_message,arguments);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001063a0",
            "entrypoint": "0x001063a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001063a0": "print_formatted_error_message_001063a0",
                "__gnuc_va_list": "variable_arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "print",
                "param_1": "error_message",
                "param_2": "arguments",
                "putc": "write_character",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "vfprintf": "format_and_write"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106400": {
            "additional_data": {
                "FUN_00106400": {
                    "print_error": 4,
                    "print_error_message": 11,
                    "print_error_with_formatted_message": 1,
                    "print_error_with_parameters": 2,
                    "print_formatted_error_message": 12,
                    "print_formatted_message": 1
                },
                "in_AL": {
                    "boolean_flag": 2,
                    "condition": 5,
                    "condition_flag": 3,
                    "flag": 10,
                    "input_flag": 4,
                    "is_enabled": 1,
                    "is_error": 3,
                    "is_print_enabled": 1,
                    "should_print": 1
                },
                "local_18": {
                    "arg7_value": 1,
                    "arg8_copy": 1,
                    "condition_var8": 1,
                    "error_code8": 1,
                    "error_code8_copy": 1,
                    "local8": 1,
                    "local_18": 1,
                    "local_9": 1,
                    "local_param8": 2,
                    "local_var8": 1,
                    "local_variable15": 1,
                    "param8": 8,
                    "param8_copy": 9,
                    "param8_value": 1
                },
                "local_28": {
                    "arg6_value": 1,
                    "arg7_copy": 1,
                    "condition_var7": 1,
                    "error_code7": 1,
                    "error_code7_copy": 1,
                    "local7": 1,
                    "local_28": 1,
                    "local_8": 1,
                    "local_param7": 2,
                    "local_var7": 1,
                    "local_variable14": 1,
                    "param7": 8,
                    "param7_copy": 9,
                    "param7_value": 1
                },
                "local_38": {
                    "arg5_value": 1,
                    "arg6_copy": 1,
                    "condition_var6": 1,
                    "error_code6": 1,
                    "error_code6_copy": 1,
                    "local6": 1,
                    "local_38": 1,
                    "local_7": 1,
                    "local_param6": 2,
                    "local_var6": 1,
                    "local_variable13": 1,
                    "param6": 8,
                    "param6_copy": 9,
                    "param6_value": 1
                },
                "local_48": {
                    "arg4_value": 1,
                    "arg5_copy": 1,
                    "condition_var5": 1,
                    "error_code5": 1,
                    "error_code5_copy": 1,
                    "local5": 1,
                    "local_48": 1,
                    "local_6": 1,
                    "local_param5": 2,
                    "local_var5": 1,
                    "local_variable12": 1,
                    "offset": 1,
                    "param5": 7,
                    "param5_copy": 9,
                    "param5_value": 1
                },
                "local_58": {
                    "arg3_value": 1,
                    "arg4_copy": 1,
                    "column_number": 1,
                    "condition_var4": 1,
                    "error_code4": 1,
                    "error_code4_copy": 1,
                    "local4": 1,
                    "local_5": 1,
                    "local_58": 1,
                    "local_param4": 2,
                    "local_var4": 1,
                    "local_variable11": 1,
                    "param4": 7,
                    "param4_copy": 9,
                    "param4_value": 1
                },
                "local_68": {
                    "arg2_value": 1,
                    "arg3_copy": 1,
                    "condition_var3": 1,
                    "error_code3": 1,
                    "error_code3_copy": 1,
                    "line_number": 1,
                    "local3": 1,
                    "local_4": 1,
                    "local_68": 1,
                    "local_param3": 2,
                    "local_var3": 1,
                    "local_variable10": 1,
                    "param3": 7,
                    "param3_copy": 9,
                    "param3_value": 1
                },
                "local_78": {
                    "arg1_value": 1,
                    "arg2_copy": 1,
                    "condition_var2": 1,
                    "error_code2": 1,
                    "error_code2_copy": 1,
                    "error_code_copy": 1,
                    "file_descriptor": 1,
                    "local2": 1,
                    "local_3": 1,
                    "local_78": 1,
                    "local_param2": 2,
                    "local_var2": 1,
                    "local_variable9": 1,
                    "param2": 7,
                    "param2_copy": 8,
                    "param2_value": 1
                },
                "local_88": {
                    "condition_var1": 1,
                    "error_code": 8,
                    "error_code1": 1,
                    "error_code1_copy": 1,
                    "error_code_copy": 9,
                    "error_code_value": 2,
                    "error_type_copy": 1,
                    "local1": 1,
                    "local_2": 1,
                    "local_88": 1,
                    "local_param1": 2,
                    "local_var1": 1,
                    "local_variable8": 1
                },
                "local_90": {
                    "address5": 1,
                    "arg19": 1,
                    "arg5": 1,
                    "local_90": 1,
                    "local_param14": 1,
                    "local_var8": 1,
                    "local_variable7": 1,
                    "message_data5": 1,
                    "param14": 7,
                    "param14_copy": 10,
                    "param14_value": 2,
                    "param_e": 1,
                    "pointer5": 1,
                    "temp14": 1
                },
                "local_98": {
                    "address4": 1,
                    "arg18": 1,
                    "arg4": 1,
                    "local_98": 1,
                    "local_param13": 1,
                    "local_var7": 1,
                    "local_variable6": 1,
                    "message_data4": 1,
                    "param13": 7,
                    "param13_copy": 10,
                    "param13_value": 2,
                    "param_d": 1,
                    "pointer4": 1,
                    "temp13": 1
                },
                "local_a0": {
                    "address3": 1,
                    "arg17": 1,
                    "arg3": 1,
                    "local_a0": 1,
                    "local_param12": 1,
                    "local_var6": 1,
                    "local_variable5": 1,
                    "message_data3": 1,
                    "param12": 7,
                    "param12_copy": 10,
                    "param12_value": 2,
                    "param_c": 1,
                    "pointer3": 1,
                    "temp12": 1
                },
                "local_a8": {
                    "address2": 1,
                    "arg16": 1,
                    "arg2": 1,
                    "local_a8": 1,
                    "local_param11": 1,
                    "local_var5": 1,
                    "local_variable4": 1,
                    "message_data2": 1,
                    "param11": 7,
                    "param11_copy": 10,
                    "param11_value": 2,
                    "param_b": 1,
                    "pointer2": 1,
                    "temp11": 1
                },
                "local_b0": {
                    "address1": 1,
                    "arg1": 1,
                    "arg15": 1,
                    "local_b0": 1,
                    "local_param10": 1,
                    "local_var4": 1,
                    "local_variable3": 1,
                    "message_data1": 1,
                    "param10": 7,
                    "param10_copy": 10,
                    "param10_value": 2,
                    "param_a": 1,
                    "pointer1": 1,
                    "temp10": 1
                },
                "local_b8": {
                    "buffer": 1,
                    "data_array": 1,
                    "error_buffer": 3,
                    "error_code_array": 1,
                    "error_message_array": 1,
                    "error_message_buffer": 1,
                    "formatted_error": 1,
                    "formatted_error_message": 1,
                    "formatted_message": 5,
                    "local_array": 3,
                    "local_array3": 1,
                    "local_b8": 1,
                    "local_buffer": 2,
                    "local_data": 1,
                    "message": 3,
                    "message_buffer": 2,
                    "temporary_buffer": 1,
                    "value_buffer": 1
                },
                "local_c8": {
                    "buffer": 5,
                    "error_buffer": 1,
                    "error_message_buffer": 1,
                    "local_array": 3,
                    "local_array2": 1,
                    "local_b8_ptr": 1,
                    "local_buffer": 10,
                    "local_c8": 1,
                    "local_var3": 1,
                    "local_variable": 1,
                    "local_variable_c8": 1,
                    "output_buffer": 1,
                    "temp_buffer": 2
                },
                "local_d0": {
                    "arg_pointer": 1,
                    "buffer": 8,
                    "buffer_pointer": 2,
                    "buffer_ptr": 3,
                    "char_pointer": 1,
                    "formatted_buffer": 1,
                    "input_buffer": 1,
                    "local_array1": 1,
                    "local_buffer": 1,
                    "local_d0_ptr": 1,
                    "local_var2": 1,
                    "message_buffer": 2,
                    "pointer": 1,
                    "stack_pointer": 4
                },
                "local_d4": {
                    "buffer_length": 3,
                    "buffer_size": 2,
                    "bytes_to_read": 1,
                    "char_count": 1,
                    "length": 2,
                    "local_1": 1,
                    "local_b8_size": 1,
                    "local_d4": 1,
                    "local_var1": 1,
                    "local_var_size": 1,
                    "local_variable": 1,
                    "local_variable1": 1,
                    "local_variable2": 1,
                    "local_variable_d4": 1,
                    "message_size": 2,
                    "offset": 2,
                    "string_size": 1
                },
                "local_d8": {
                    "arg_size": 1,
                    "buffer_size": 15,
                    "bytes_to_print": 1,
                    "error_code_length": 1,
                    "error_code_size": 1,
                    "formatted_length": 1,
                    "input_size": 1,
                    "length": 1,
                    "local_size": 2,
                    "local_variable1": 1,
                    "message_length": 3,
                    "size": 2
                },
                "param_1": {
                    "error_code": 28,
                    "error_code1": 1,
                    "error_type": 2
                },
                "param_10": {
                    "address1": 1,
                    "arg10": 1,
                    "data1": 1,
                    "param10": 24,
                    "param8": 1,
                    "param_10": 1,
                    "pointer1": 1,
                    "value1": 1
                },
                "param_11": {
                    "address2": 1,
                    "arg11": 1,
                    "data2": 1,
                    "param11": 24,
                    "param9": 1,
                    "param_11": 1,
                    "pointer2": 1,
                    "value2": 1
                },
                "param_12": {
                    "address3": 1,
                    "arg12": 1,
                    "data3": 1,
                    "param10": 1,
                    "param12": 24,
                    "param_12": 1,
                    "pointer3": 1,
                    "value3": 1
                },
                "param_13": {
                    "address4": 1,
                    "arg13": 1,
                    "data4": 1,
                    "param11": 1,
                    "param13": 24,
                    "param_13": 1,
                    "pointer4": 1,
                    "value4": 1
                },
                "param_14": {
                    "address5": 1,
                    "arg14": 1,
                    "data5": 1,
                    "param12": 1,
                    "param14": 24,
                    "param_14": 1,
                    "pointer5": 1,
                    "value5": 1
                },
                "param_2": {
                    "address": 1,
                    "arg1": 1,
                    "arg2": 1,
                    "error_code": 2,
                    "error_code2": 1,
                    "error_flag": 1,
                    "error_type": 1,
                    "file_descriptor": 1,
                    "message1": 1,
                    "message_type": 1,
                    "param1": 1,
                    "param2": 19
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "error_code3": 1,
                    "line_number": 1,
                    "message2": 1,
                    "param2": 1,
                    "param3": 23,
                    "param_3": 1,
                    "port": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "column_number": 1,
                    "error_code4": 1,
                    "message3": 1,
                    "param3": 1,
                    "param4": 24,
                    "param_4": 1
                },
                "param_5": {
                    "arg4": 1,
                    "arg5": 1,
                    "error_code5": 1,
                    "message4": 1,
                    "offset": 1,
                    "param4": 1,
                    "param5": 24,
                    "param_5": 1
                },
                "param_6": {
                    "arg5": 1,
                    "arg6": 1,
                    "error_code6": 1,
                    "message5": 1,
                    "param5": 1,
                    "param6": 25,
                    "param_6": 1
                },
                "param_7": {
                    "arg6": 1,
                    "arg7": 1,
                    "error_code7": 1,
                    "message6": 1,
                    "param6": 1,
                    "param7": 25,
                    "param_7": 1
                },
                "param_8": {
                    "arg7": 1,
                    "arg8": 1,
                    "error_code8": 1,
                    "message7": 1,
                    "param7": 1,
                    "param8": 25,
                    "param_8": 1
                },
                "param_9": {
                    "error_message": 31
                }
            },
            "called": [
                "FUN_001063a0"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_001048e0",
                "FUN_001043d0",
                "FUN_001055f0",
                "FUN_0010249f"
            ],
            "code": "\nvoid print_error_with_formatted_message_00106400(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 undefined8 error_message,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 buffer_size;\n  undefined4 buffer_length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined formatted_message [8];\n  undefined8 param10_copy;\n  undefined8 param11_copy;\n  undefined8 param12_copy;\n  undefined8 param13_copy;\n  undefined8 param14_copy;\n  undefined4 error_code_copy;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 param4_copy;\n  undefined4 param5_copy;\n  undefined4 param6_copy;\n  undefined4 param7_copy;\n  undefined4 param8_copy;\n  \n  if (flag != '\\0') {\n    error_code_copy = error_code;\n    param2_copy = param2;\n    param3_copy = param3;\n    param4_copy = param4;\n    param5_copy = param5;\n    param6_copy = param6;\n    param7_copy = param7;\n    param8_copy = param8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = formatted_message;\n  buffer_length = 0x30;\n  param10_copy = param10;\n  param11_copy = param11;\n  param12_copy = param12;\n  param13_copy = param13;\n  param14_copy = param14;\n  print_formatted_error_message_001063a0(error_message,&buffer_size);\n  return;\n}\n\n",
            "current_name": "print_error_with_formatted_message_00106400",
            "entrypoint": "0x00106400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106400": "print_error_with_formatted_message_00106400",
                "in_AL": "flag",
                "local_18": "param8_copy",
                "local_28": "param7_copy",
                "local_38": "param6_copy",
                "local_48": "param5_copy",
                "local_58": "param4_copy",
                "local_68": "param3_copy",
                "local_78": "param2_copy",
                "local_88": "error_code_copy",
                "local_90": "param14_copy",
                "local_98": "param13_copy",
                "local_a0": "param12_copy",
                "local_a8": "param11_copy",
                "local_b0": "param10_copy",
                "local_b8": "formatted_message",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "buffer_length",
                "local_d8": "buffer_size",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001064a0": {
            "additional_data": {
                "FUN_001064a0": {
                    "print_formatted_message": 2,
                    "print_formatted_string": 1,
                    "print_log_message": 4,
                    "print_message": 24
                },
                "param_1": {
                    "category": 1,
                    "component_name": 1,
                    "first_string": 1,
                    "header": 3,
                    "log_name": 1,
                    "message1": 7,
                    "message_header": 4,
                    "message_prefix": 1,
                    "message_title": 1,
                    "module_name": 6,
                    "source_name": 2,
                    "title": 3
                },
                "param_2": {
                    "default_log_name": 1,
                    "default_name": 3,
                    "error_message": 5,
                    "message": 14,
                    "message2": 7,
                    "second_string": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted": 2
                }
            },
            "called": [
                "FUN_001036e0"
            ],
            "calling": [],
            "code": "\nvoid print_log_message_001064a0(undefined8 *message1,undefined8 *message)\n\n{\n  if (DAT_0010b818 == 0) {\n    return;\n  }\n  if (message1 != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*message1);\n    return;\n  }\n  printf(\"%s: \",*message);\n  return;\n}\n\n",
            "current_name": "print_log_message_001064a0",
            "entrypoint": "0x001064a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001064a0": "print_log_message_001064a0",
                "param_1": "message1",
                "param_2": "message",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001064b0": {
            "additional_data": {
                "DAT_00107363": {
                    "error_message_format": 1,
                    "format_str": 1,
                    "format_string": 1,
                    "formatted_string": 1
                },
                "FUN_001064b0": {
                    "format_and_print_error_message": 2,
                    "format_error_message": 1,
                    "print_and_check_symbol_information": 1,
                    "print_error_details": 3,
                    "print_error_info": 5,
                    "print_error_information": 1,
                    "print_error_message": 8,
                    "print_formatted_error_message": 4,
                    "print_formatted_error_messages": 1,
                    "print_symbol_details": 1,
                    "print_symbol_info": 1,
                    "print_symbol_information": 2,
                    "process_binary_data": 1
                },
                "bfd_is_undefined_symclass": {
                    "check_symclass_undefined": 1,
                    "check_undefined_symclass": 2,
                    "is_undefined_sym_class": 4,
                    "is_undefined_symbol": 2,
                    "is_undefined_symbol_class": 4,
                    "is_undefined_symclass": 4
                },
                "cVar1": {
                    "is_undefined": 11,
                    "is_undefined_class": 1,
                    "is_undefined_sym": 3,
                    "is_undefined_sym_class": 2,
                    "is_undefined_symbol": 2,
                    "is_undefined_symbol_class": 2,
                    "is_undefined_symclass": 10
                },
                "param_1": {
                    "binary_data": 1,
                    "data_pointer": 1,
                    "error_data": 2,
                    "error_details": 2,
                    "error_info": 7,
                    "error_info_ptr": 1,
                    "error_list": 1,
                    "error_params": 1,
                    "input_params": 1,
                    "message_buffer": 1,
                    "param_array": 1,
                    "param_pointer": 2,
                    "parameter1": 1,
                    "pointer": 3,
                    "symbol_address": 2,
                    "symbol_info": 1,
                    "symbol_information": 1,
                    "symbol_ptr": 1
                },
                "param_2": {
                    "additional_info": 2,
                    "additional_param": 1,
                    "format_param": 5,
                    "format_specifier": 1,
                    "format_string": 1,
                    "formatted_param": 1,
                    "formatted_string": 1,
                    "formatting_parameter": 2,
                    "param": 7,
                    "param2": 1,
                    "param_data": 1,
                    "param_value": 5,
                    "parameter": 1,
                    "parameter2": 1,
                    "value": 1
                },
                "print_formatted_error_message_001054d0": {
                    "print_error_message": 7,
                    "print_formatted_error_message": 11,
                    "print_formatted_error_message2": 1
                },
                "print_formatted_error_message_0010651a": {
                    "print_error_code_message": 1,
                    "print_error_message": 1,
                    "print_error_message2": 1,
                    "print_extra_formatted_error_message": 1,
                    "print_formatted_error_message": 2,
                    "print_formatted_error_message2": 1,
                    "print_formatted_error_message3": 1,
                    "print_formatted_error_message_v2": 1
                },
                "print_formatted_string_with_param_00104740": {
                    "print_formatted_string": 3,
                    "print_formatted_string_with_param": 14,
                    "print_formatted_string_with_parameter": 1,
                    "print_formatted_string_with_params": 1
                },
                "printf": {
                    "print": 6,
                    "print_character": 2,
                    "print_format": 1
                },
                "putchar": {
                    "print_char": 8,
                    "print_character": 10,
                    "put_char": 1
                }
            },
            "called": [
                "bfd_is_undefined_symclass",
                "FUN_0010651a",
                "FUN_001054d0",
                "FUN_00103a66",
                "FUN_00104740",
                "printf",
                "putchar"
            ],
            "calling": [],
            "code": "\nvoid print_formatted_error_message_001064b0(long *error_info,undefined8 param)\n\n{\n  char is_undefined;\n  \n  printf_formatted_string_with_param(&DAT_00107363,error_info,0,param);\n  printf(\"%c \",(ulong)(uint)(int)*(char *)(*error_info + 8));\n  is_undefined = bfd_is_undefined_symclass((int)*(char *)(*error_info + 8));\n  if (is_undefined != '\\0') {\n    printf(\"        \");\n    return;\n  }\n  print_formatted_error_message_001064b0(*(undefined8 *)*error_info);\n  putchar(0x20);\n  if (error_info[2] == 0) {\n    if (error_info[1] != 0) {\n      print_formatted_error_message_001064b0();\n      return;\n    }\n  }\n  else if (*(long *)(error_info[2] + 0x38) != 0) {\n    print_formatted_error_message_001064b0();\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001064b0",
            "entrypoint": "0x001064b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001064b0": "print_formatted_error_message_001064b0",
                "bfd_is_undefined_symclass": "is_undefined_symclass",
                "cVar1": "is_undefined",
                "param_1": "error_info",
                "param_2": "param",
                "print_formatted_error_message_001054d0": "print_formatted_error_message",
                "print_formatted_error_message_0010651a": "print_formatted_error_message",
                "print_formatted_string_with_param_00104740": "print_formatted_string_with_param",
                "printf": "print",
                "putchar": "print_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010651a": {
            "additional_data": {
                "FUN_0010651a": {
                    "display_formatted_error_message": 1,
                    "print_error": 3,
                    "print_error_and_return": 1,
                    "print_error_message": 17,
                    "print_error_messages": 5,
                    "print_error_with_format": 1,
                    "print_formatted_error_message": 3
                },
                "print_formatted_error_message_001054d0": {
                    "format_error_message": 1,
                    "print_error": 2,
                    "print_error_message": 13,
                    "print_error_message_helper": 1,
                    "print_formatted_error": 1,
                    "print_formatted_error_message": 13
                }
            },
            "called": [
                "FUN_001054d0"
            ],
            "calling": [
                "FUN_001064b0",
                "FUN_00103a66"
            ],
            "code": "\nvoid print_formatted_error_message_0010651a(void)\n\n{\n  print_error_message();\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_0010651a",
            "entrypoint": "0x0010651a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010651a": "print_formatted_error_message_0010651a",
                "print_formatted_error_message_001054d0": "print_error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106530": {
            "additional_data": {
                "FUN_00106530": {
                    "display_error_message": 1,
                    "print_error": 2,
                    "print_error_and_exit": 6,
                    "print_error_message": 20,
                    "print_error_message_and_exit": 2
                },
                "PTR_0010b820": {
                    "ptr_message": 1
                },
                "_stderr": {
                    "standard_error": 3
                },
                "_stdout": {
                    "standard_output": 3
                },
                "bfd_errmsg": {
                    "get_bfd_error_message": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 1
                },
                "dcgettext": {
                    "get_error_description": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "iVar1": {
                    "bfd_error": 10,
                    "bfd_error_code": 2,
                    "error": 9,
                    "error_code": 7,
                    "error_num": 1,
                    "error_status": 1
                },
                "in_R10": {
                    "additional_data": 1,
                    "additional_info": 17,
                    "error_code": 1,
                    "error_info": 1,
                    "input_arg": 1,
                    "input_argument": 1,
                    "input_param": 1,
                    "input_parameter": 4,
                    "user_input": 1
                },
                "lVar3": {
                    "error_code": 13,
                    "error_flag": 2,
                    "exit_status": 1,
                    "flag": 7,
                    "has_error": 3,
                    "has_unknown_cause": 1,
                    "is_err_known": 1,
                    "is_unknown": 1,
                    "line_number": 1
                },
                "uVar2": {
                    "error_message": 25,
                    "error_msg": 3,
                    "error_string": 2
                }
            },
            "called": [
                "xexit",
                "FUN_00106540"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_00102fc3",
                "FUN_001048e0",
                "FUN_00103463",
                "FUN_001043d0",
                "FUN_00103c00",
                "FUN_00105110",
                "FUN_00102fd2",
                "FUN_00102f9f"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_00106530(void)\n\n{\n  int bfd_error;\n  undefined8 error_message;\n  long error_code;\n  undefined8 additional_info;\n  \n  print_error_message_00106540();\n  error_code = 1;\n  xexit();\n  bfd_error = bfd_get_error();\n  if (bfd_error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(bfd_error);\n  }\n  fflush(standard_output);\n  if (error_code != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_0010b820,error_code,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_0010b820,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_and_exit_00106530",
            "entrypoint": "0x00106530",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106530": "print_error_message_and_exit_00106530",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bfd_errmsg": "get_bfd_error_message",
                "bfd_get_error": "get_bfd_error",
                "dcgettext": "get_error_description",
                "fprintf": "print_formatted",
                "iVar1": "bfd_error",
                "in_R10": "additional_info",
                "lVar3": "error_code",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00106540": {
            "additional_data": {
                "FUN_00106540": {
                    "print_error": 2,
                    "print_error_details": 1,
                    "print_error_message": 28
                },
                "_stderr": {
                    "standard_error": 1
                },
                "_stdout": {
                    "standard_output": 1
                },
                "iVar1": {
                    "bfd_error": 3,
                    "error": 11,
                    "error_code": 10,
                    "error_number": 1,
                    "error_status": 3,
                    "error_type": 1,
                    "error_value": 1
                },
                "in_R10": {
                    "additional_info": 6,
                    "context": 1,
                    "extra_info": 3,
                    "unknown_param": 1,
                    "unspecified_argument": 1,
                    "unused_var": 1,
                    "unused_variable": 3
                },
                "param_1": {
                    "error_cause": 1,
                    "error_code": 4,
                    "error_description": 8,
                    "error_message": 3,
                    "error_param": 1,
                    "error_string": 2,
                    "error_type": 7,
                    "file_name": 3,
                    "filename": 1,
                    "input_param": 1
                },
                "uVar2": {
                    "error_message": 25,
                    "error_message_text": 1,
                    "error_msg": 2,
                    "error_string": 1,
                    "error_text": 1,
                    "localized_error_message": 1
                }
            },
            "called": [
                "bfd_get_error",
                "FUN_00103a78",
                "fflush",
                "bfd_errmsg",
                "fprintf"
            ],
            "calling": [
                "FUN_00106530",
                "FUN_001043d0"
            ],
            "code": "\n\n\nvoid print_error_message_00106540(long error_description)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_description != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_0010b820,error_description,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_0010b820,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_00106540",
            "entrypoint": "0x00106540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00106540": "print_error_message_00106540",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_description",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x001065a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "__cxa_finalize",
                "FUN_00105530"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_0010b720 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010b228);\n  FUNC_00105530();\n  DAT_0010b720 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x001055a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00105560"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00105560();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x001055e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_001043d0",
                "FUN_00103729"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "abort": {
            "called": [
                "abort"
            ],
            "calling": [
                "FUN_00102fd2"
            ],
            "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n",
            "current_name": "abort",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "asprintf": {
            "called": [
                "asprintf"
            ],
            "calling": [
                "FUN_00103729"
            ],
            "code": "\n\n\nint asprintf(char **__ptr,char *__fmt,...)\n\n{\n  int iVar1;\n  \n  iVar1 = asprintf(__ptr,__fmt);\n  return iVar1;\n}\n\n",
            "current_name": "asprintf",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_canonicalize_reloc": {
            "called": [
                "bfd_canonicalize_reloc"
            ],
            "calling": [
                "FUN_00103c00"
            ],
            "code": "\nvoid bfd_canonicalize_reloc(void)\n\n{\n  bfd_canonicalize_reloc();\n  return;\n}\n\n",
            "current_name": "bfd_canonicalize_reloc",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_demangle": {
            "called": [
                "bfd_demangle"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n",
            "current_name": "bfd_demangle",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_001055f0",
                "FUN_00106540"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_arch_size": {
            "called": [
                "bfd_get_arch_size"
            ],
            "calling": [
                "FUN_00104670"
            ],
            "code": "\nvoid bfd_get_arch_size(void)\n\n{\n  bfd_get_arch_size();\n  return;\n}\n\n",
            "current_name": "bfd_get_arch_size",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_001048e0",
                "FUN_001043d0",
                "FUN_001055f0",
                "FUN_00106540"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_next_mapent": {
            "called": [
                "bfd_get_next_mapent"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_get_next_mapent(void)\n\n{\n  bfd_get_next_mapent();\n  return;\n}\n\n",
            "current_name": "bfd_get_next_mapent",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_reloc_upper_bound": {
            "called": [
                "bfd_get_reloc_upper_bound"
            ],
            "calling": [
                "FUN_00103c00"
            ],
            "code": "\nvoid bfd_get_reloc_upper_bound(void)\n\n{\n  bfd_get_reloc_upper_bound();\n  return;\n}\n\n",
            "current_name": "bfd_get_reloc_upper_bound",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_is_undefined_symclass": {
            "called": [
                "bfd_is_undefined_symclass"
            ],
            "calling": [
                "FUN_001064b0",
                "FUN_001053c0",
                "FUN_00103729"
            ],
            "code": "\nvoid bfd_is_undefined_symclass(void)\n\n{\n  bfd_is_undefined_symclass();\n  return;\n}\n\n",
            "current_name": "bfd_is_undefined_symclass",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_map_over_sections": {
            "called": [
                "bfd_map_over_sections"
            ],
            "calling": [
                "FUN_00103238"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "bfd_map_over_sections",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_plugin": {
            "called": [
                "bfd_plugin_set_plugin"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_plugin",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_program_name": {
            "called": [
                "bfd_plugin_set_program_name"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_program_name",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_00103ca0"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "caseD_4a": {
            "called": [
                "FUN_00104397"
            ],
            "calling": [
                "FUN_00104370"
            ],
            "code": "\nvoid switchD_00104393::caseD_4a(undefined8 param_1,undefined8 param_2)\n\n{\n  initialize_param_data_00104397(param_1,param_2,3);\n  return;\n}\n\n",
            "current_name": "caseD_4a",
            "entrypoint": "0x00102475",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "concat": {
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_001025f5"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "concat",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_name_to_style": {
            "called": [
                "cplus_demangle_name_to_style"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_name_to_style",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_set_style": {
            "called": [
                "cplus_demangle_set_style"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_set_style",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_001048e0",
                "FUN_001043d0",
                "FUN_001055f0",
                "FUN_00103ca0",
                "FUN_0010370a",
                "FUN_00103b5d",
                "FUN_001053c0",
                "FUN_00102f19",
                "FUN_00104370",
                "FUN_00103abf",
                "FUN_00103a78",
                "FUN_00102450",
                "FUN_0010249f",
                "FUN_00103729"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_001055f0",
                "__libc_start_main"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(check_and_process_object_files_001055f0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00105500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_001055f0",
                "FUN_00103ca0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_001063a0",
                "FUN_00103b5d",
                "FUN_00106540"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_001063a0",
                "FUN_001055f0",
                "FUN_00103ca0",
                "FUN_00103b5d",
                "FUN_00102450",
                "FUN_00106540"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_00103ca0",
                "FUN_00103b5d"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_00104670",
                "FUN_00103238",
                "FUN_001055f0",
                "FUN_00103ca0",
                "FUN_00105110",
                "FUN_00103b5d",
                "FUN_001047d0",
                "FUN_0010268b",
                "FUN_00103729"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "isatty": {
            "called": [
                "isatty"
            ],
            "calling": [
                "FUN_0010268b"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "isatty",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001035a2",
                "FUN_001036e0",
                "FUN_00103463",
                "FUN_001054d0",
                "FUN_001043d0",
                "FUN_001055f0",
                "FUN_001036a7",
                "FUN_00105110",
                "FUN_00102f7b",
                "FUN_001047d0",
                "FUN_001053c0",
                "FUN_00102739",
                "FUN_00102f19",
                "FUN_001064b0",
                "FUN_0010351b",
                "FUN_00103b2b",
                "FUN_001062d0",
                "FUN_00102670",
                "FUN_00103abf",
                "FUN_00103573",
                "FUN_00103729"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_00103463",
                "FUN_001063a0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putchar": {
            "called": [
                "putchar"
            ],
            "calling": [
                "FUN_001035a2",
                "FUN_001064b0"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "putchar",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "qsort": {
            "called": [
                "qsort"
            ],
            "calling": [
                "FUN_00104d5b"
            ],
            "code": "\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  qsort(__base,__nmemb,__size,__compar);\n  return;\n}\n\n",
            "current_name": "qsort",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "reconcat": {
            "called": [
                "reconcat"
            ],
            "calling": [
                "FUN_001047d0"
            ],
            "code": "\nvoid reconcat(void)\n\n{\n  reconcat();\n  return;\n}\n\n",
            "current_name": "reconcat",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_0010268b"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_001043d0",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strchr": {
            "called": [
                "strchr"
            ],
            "calling": [
                "FUN_00102739"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strchr",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_00104670",
                "FUN_00103463",
                "FUN_001055f0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcoll": {
            "called": [
                "strcoll"
            ],
            "calling": [
                "FUN_00104fa0"
            ],
            "code": "\n\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcoll(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcoll",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_001043d0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_001055f0",
                "FUN_00103ca0",
                "FUN_00102fd2",
                "FUN_0010268b"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strstr": {
            "called": [
                "strstr"
            ],
            "calling": [
                "FUN_00104670",
                "FUN_00102fd2"
            ],
            "code": "\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strstr(__haystack,__needle);\n  return pcVar1;\n}\n\n",
            "current_name": "strstr",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_001063a0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00106300",
                "FUN_00106530",
                "FUN_001055f0"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_00103238",
                "FUN_001055f0",
                "FUN_00103c00",
                "FUN_00105110",
                "FUN_0010268b"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00104d5b",
                "FUN_001055f0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_001055f0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrerror": {
            "called": [
                "xstrerror"
            ],
            "calling": [
                "FUN_00103729"
            ],
            "code": "\nvoid xstrerror(void)\n\n{\n  xstrerror();\n  return;\n}\n\n",
            "current_name": "xstrerror",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_00102450",
            "FUN_001025f5",
            "FUN_00102670",
            "FUN_0010268b",
            "FUN_00102c19",
            "FUN_00102f19",
            "FUN_00102f7b",
            "FUN_00103238",
            "FUN_0010351b",
            "FUN_00103533",
            "FUN_00103573",
            "FUN_001036a7",
            "FUN_001036e0",
            "FUN_00103a78",
            "FUN_00103abf",
            "FUN_00103b2b",
            "FUN_00103b5d",
            "FUN_00103ca0",
            "FUN_00104397",
            "FUN_00104670",
            "FUN_001047d0",
            "FUN_001049c0",
            "FUN_001053b0",
            "FUN_001062d0",
            "FUN_001063a0",
            "FUN_001064a0",
            "FUN_00106540"
        ],
        [
            "FUN_00102739",
            "FUN_00106300",
            "FUN_00106400",
            "FUN_00106530"
        ],
        [
            "FUN_0010249f",
            "FUN_00102f9f",
            "FUN_00103463",
            "FUN_00103c00",
            "FUN_00104370",
            "FUN_00104740",
            "FUN_00104fa0"
        ],
        [
            "FUN_00102fc3",
            "FUN_00102fd2",
            "FUN_00103b49",
            "FUN_00103bf6",
            "FUN_00105050",
            "FUN_00105110"
        ],
        [
            "FUN_00103bec",
            "FUN_00104d5b"
        ],
        [
            "FUN_001048e0"
        ],
        [
            "FUN_001043d0"
        ],
        [
            "FUN_001055f0"
        ],
        [
            "FUN_001054d0"
        ],
        [
            "FUN_001035a2",
            "FUN_0010370a",
            "FUN_00103729",
            "FUN_0010651a"
        ],
        [
            "FUN_00103a66",
            "FUN_001053c0",
            "FUN_001064b0"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 343926
}