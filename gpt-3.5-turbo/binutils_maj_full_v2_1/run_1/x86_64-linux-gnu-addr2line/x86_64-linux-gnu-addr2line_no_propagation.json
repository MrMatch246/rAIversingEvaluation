{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0x0": {
                    "address": 1
                },
                "FUN_00102020": {
                    "call_function_at_address": 1,
                    "call_indirect_jump": 2,
                    "execute_dynamic_code": 1,
                    "execute_function": 4,
                    "execute_function_at_memory_address": 1,
                    "execute_indirect": 1,
                    "execute_indirect_call": 6,
                    "execute_indirect_function": 2,
                    "execute_indirect_jump": 11,
                    "execute_undefined_memory_address": 1
                },
                "PTR_undefined": {
                    "function_address": 1
                },
                "code": {
                    "func_ptr": 1,
                    "function": 1,
                    "function_pointer": 4,
                    "function_ptr": 1,
                    "indirect_function": 1,
                    "indirect_function_pointer": 1
                },
                "original_function_name": {
                    "new_function_name": 1
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1
                },
                "original_parameter_name_2": {
                    "new_parameter_name_2": 1
                },
                "original_variable_name_1": {
                    "new_variable_name_1": 1
                },
                "original_variable_name_2": {
                    "new_variable_name_2": 1
                },
                "undefined": {
                    "function_address": 2,
                    "function_pointer": 4,
                    "indirect_function_ptr": 1,
                    "jump_target": 1,
                    "ptr": 1,
                    "target_address": 3,
                    "undefined_memory_address": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_pointer *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023a0": {
            "additional_data": {
                "FUN_001023a0": {
                    "handle_error": 3,
                    "handle_unknown_error": 1,
                    "print_error": 4,
                    "print_error_description": 1,
                    "print_error_information": 1,
                    "print_error_message": 21
                },
                "__format": {
                    "format_string": 1
                },
                "__stream": {
                    "file_stream": 1
                },
                "uVar1": {
                    "error_description": 1,
                    "error_message": 16,
                    "localized_error_message": 1
                },
                "unaff_RBX": {
                    "error_cause": 1,
                    "error_code": 17,
                    "error_flag": 9,
                    "error_info": 1,
                    "error_type": 2,
                    "unknown_error_flag": 1
                },
                "unaff_retaddr": {
                    "return_address": 30
                }
            },
            "called": [
                "fprintf",
                "dcgettext",
                "fflush"
            ],
            "calling": [
                "FUN_00103c70"
            ],
            "code": "\n\n\nvoid print_error_message_001023a0(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00106438);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_00106438,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_001023a0",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023a0": "print_error_message_001023a0",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023e1": {
            "additional_data": {
                "FUN_001023e1": {
                    "display_usage": 2,
                    "print_usage": 22,
                    "print_usage_and_exit": 3,
                    "print_usage_info": 3,
                    "show_usage": 1
                },
                "__c": {
                    "character": 9
                },
                "__format": {
                    "format": 5,
                    "format_string": 4
                },
                "__ptr": {
                    "bfd_targets": 2,
                    "ptr": 1,
                    "target_list": 26,
                    "target_list_ptr": 1,
                    "targets_ptr": 1
                },
                "__status": {
                    "status": 4,
                    "status_code": 1
                },
                "__stream": {
                    "file_stream": 1,
                    "output_stream": 3,
                    "stream": 5
                },
                "bf_target_list": {
                    "get_target_list": 1
                },
                "bfd_target_list": {
                    "get_supported_targets": 1,
                    "get_target_list": 7,
                    "list_target_formats": 1
                },
                "dcgettext": {
                    "get_language_text": 1,
                    "get_localized_string": 1,
                    "get_localized_text": 1,
                    "get_message": 3,
                    "get_translated_message": 1,
                    "get_translated_text": 1,
                    "gettext": 1,
                    "translate_text": 2
                },
                "dealloc": {
                    "free": 1
                },
                "exit": {
                    "exit_program": 3,
                    "terminate": 1,
                    "terminate_program": 7
                },
                "fprintf": {
                    "print": 2,
                    "print_formatted": 3,
                    "print_message": 1,
                    "print_text": 1,
                    "print_to_file": 1,
                    "write_to_file": 2,
                    "write_to_output": 1
                },
                "fputc": {
                    "print_character": 1,
                    "write": 1,
                    "write_char": 5,
                    "write_char_to_file": 2,
                    "write_character": 2
                },
                "free": {
                    "deallocate": 2,
                    "deallocate_memory": 2,
                    "free_memory": 1,
                    "release": 1,
                    "release_memory": 3
                },
                "lVar1": {
                    "default_target": 3,
                    "default_value": 1,
                    "lang_var": 1,
                    "lang_version": 1,
                    "language": 1,
                    "language_code": 3,
                    "language_variable": 1,
                    "support_str": 1,
                    "supported_target": 1,
                    "supported_targets": 5,
                    "supported_targets_message": 1,
                    "target": 6,
                    "target_name": 4,
                    "target_string": 1
                },
                "param_1": {
                    "file": 8,
                    "file_ptr": 2,
                    "file_stream": 2,
                    "output_file": 19
                },
                "param_2": {
                    "exit_code": 8,
                    "exit_status": 19,
                    "status": 4
                },
                "pcVar2": {
                    "lang_str": 1,
                    "localized_string": 1,
                    "message": 24,
                    "msg": 2,
                    "text": 1,
                    "translated_text": 1
                },
                "plVar3": {
                    "current_target": 9,
                    "ptr": 7,
                    "target": 7,
                    "target_item": 1,
                    "target_list_pointer": 1,
                    "target_list_ptr": 1,
                    "target_pointer": 2,
                    "target_ptr": 3
                },
                "supportedTargets": {
                    "supported_targets": 1
                }
            },
            "called": [
                "free",
                "fprintf",
                "exit",
                "fputc",
                "dcgettext",
                "bfd_target_list"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid print_usage_and_exit_001023e1(FILE *output_file,int exit_status)\n\n{\n  long target;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  target = DAT_00106438;\n  message = (char *)dcgettext(0,\"Usage: %s [option(s)] [addr(s)]\\n\",5);\n  fprintf(output_file,message,target);\n  message = (char *)dcgettext(0,\" Convert addresses into line number/file name pairs.\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \" If no addresses are specified on the command line, they will be read from stdin\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \" The options are:\\n  @<file>                Read options from <file>\\n  -a --addresses         Show addresses\\n  -b --target=<bfdname>  Set the binary file format\\n  -e --exe=<executable>  Set the input file name (default is a.out)\\n  -i --inlines           Unwind inlined functions\\n  -j --section=<name>    Read section-relative offsets instead of addresses\\n  -p --pretty-print      Make the output easier to read for humans\\n  -s --basenames         Strip directory names\\n  -f --functions         Show function names\\n  -C --demangle[=style]  Demangle function names\\n  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\\n  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\\n  -h --help              Display this information\\n  -v --version           Display the program\\'s version\\n\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  target = DAT_00106438;\n  if (DAT_00106438 == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    target = *current_target;\n    current_target = current_target + 1;\n    if (target == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_status == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  terminate_program(exit_status);\n}\n\n",
            "current_name": "print_usage_and_exit_001023e1",
            "entrypoint": "0x001023e1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023e1": "print_usage_and_exit_001023e1",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_message",
                "exit": "terminate_program",
                "fprintf": "print_formatted",
                "fputc": "write_char",
                "free": "release_memory",
                "lVar1": "target",
                "param_1": "output_file",
                "param_2": "exit_status",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102540": {
            "additional_data": {
                "DAT_001063f0": {
                    "data4": 2,
                    "data_param4": 1,
                    "output4": 2,
                    "result4": 2,
                    "temp_variable4": 1,
                    "var4": 1
                },
                "DAT_001063f4": {
                    "data3": 2,
                    "data_param3": 1,
                    "output3": 2,
                    "result3": 2,
                    "temp_variable3": 1,
                    "var3": 1
                },
                "DAT_001063f8": {
                    "data1": 3,
                    "data_1": 1,
                    "output1": 2,
                    "result1": 2,
                    "temp_variable1": 1,
                    "var1": 2
                },
                "DAT_00106400": {
                    "data2": 2,
                    "data_param2": 1,
                    "output2": 2,
                    "result2": 2,
                    "temp_variable2": 1,
                    "var2": 1
                },
                "DAT_00106408": {
                    "condition_flag": 1,
                    "flag": 11,
                    "is_data_processed": 1,
                    "is_executed": 1,
                    "is_initialized": 1,
                    "is_processed": 1
                },
                "DAT_00106410": {
                    "bound": 1,
                    "data_limit": 1,
                    "data_threshold": 1,
                    "end_address": 2,
                    "limit": 2,
                    "limit_value": 1,
                    "max_data_size": 2,
                    "max_limit": 1,
                    "memory_size": 1,
                    "target_size": 1,
                    "upper_bound": 1,
                    "upper_limit": 2
                },
                "DAT_00106418": {
                    "argument": 1,
                    "constant_value1": 1,
                    "constant_value_1": 1,
                    "data_info": 1,
                    "data_param": 1,
                    "data_param1": 1,
                    "data_ptr": 1,
                    "extra_data": 2,
                    "extra_info": 1,
                    "other_data": 2,
                    "param2_val": 1,
                    "some_data": 1,
                    "special_data": 1
                },
                "FUN_00102540": {
                    "check_and_update_data": 1,
                    "decode_and_execute": 1,
                    "execute_computation": 1,
                    "execute_function": 10,
                    "execute_operation": 1,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "process_data": 11,
                    "process_parameters": 1
                },
                "FUN_PTR_00102540": {
                    "function_ptr": 1
                },
                "PTR_001063f0": {
                    "parameter4": 1
                },
                "PTR_001063f4": {
                    "parameter3": 1
                },
                "PTR_001063f8": {
                    "parameter1": 1
                },
                "PTR_00106400": {
                    "parameter2": 1
                },
                "byteVal": {
                    "flags": 1
                },
                "code": {
                    "function_pointer": 2
                },
                "param_1": {
                    "arg1": 1,
                    "binary_address": 1,
                    "data": 1,
                    "data_pointer1": 1,
                    "data_ptr": 2,
                    "data_struct_addr": 1,
                    "function_data": 1,
                    "function_pointer": 5,
                    "input": 2,
                    "input_1": 1,
                    "input_address": 2,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_data_ptr": 1,
                    "input_param": 4,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_value1": 1,
                    "source_pointer": 1
                },
                "param_2": {
                    "arg2": 1,
                    "binary": 1,
                    "binary_data_param": 2,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "computation_addr": 1,
                    "data": 3,
                    "data_address": 2,
                    "data_block": 1,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_pointer": 5,
                    "data_pointer2": 1,
                    "data_ptr": 1,
                    "entry_point": 1,
                    "input_2": 1,
                    "input_data": 1,
                    "input_value2": 1,
                    "object_data": 1,
                    "operation_param": 1,
                    "struct_ptr": 2
                },
                "uVar1": {
                    "base_address": 2,
                    "binary_offset": 1,
                    "buffer_size": 1,
                    "data_length": 3,
                    "data_offset": 4,
                    "data_size": 5,
                    "data_start": 1,
                    "object_size": 1,
                    "offset": 2,
                    "param1_val": 1,
                    "size": 3,
                    "start_offset": 1,
                    "start_range": 1,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "value": 1
                },
                "uVar2": {
                    "input_limit": 1
                },
                "uVar3": {
                    "output_limit": 1
                },
                "uVar4": {
                    "input_data": 1
                },
                "uVar5": {
                    "output_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid process_data_00102540(long function_pointer,long data_pointer)\n\n{\n  ulong data_size;\n  \n  if ((DAT_00106408 == '\\0') && ((*(byte *)(data_pointer + 0x24) & 1) != 0)) {\n    data_size = *(ulong *)(data_pointer + 0x30);\n    if ((data_size <= DAT_00106410) && (DAT_00106410 < *(long *)(data_pointer + 0x40) + data_size)) {\n      DAT_00106408 = (**(function_pointer **)(*(long *)(function_pointer + 8) + 0x240))\n                               (function_pointer,DAT_00106418,data_pointer,DAT_00106410 - data_size,&DAT_001063f8,\n                                &DAT_00106400,&DAT_001063f4,&DAT_001063f0);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_00102540",
            "entrypoint": "0x00102540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102540": "process_data_00102540",
                "code": "function_pointer",
                "param_1": "function_pointer",
                "param_2": "data_pointer",
                "uVar1": "data_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025c0": {
            "additional_data": {
                "DAT_00106438": {
                    "program_name": 1
                },
                "FUN_001025c0": {
                    "print_error": 1,
                    "print_error_message": 29,
                    "print_formatted_message": 1
                },
                "__arg": {
                    "argument_list": 2,
                    "arguments": 5,
                    "format_arguments": 1
                },
                "__c": {
                    "character": 11
                },
                "__format": {
                    "format": 6,
                    "format_string": 5
                },
                "__gnuc_va_list": {
                    "arg_list": 1,
                    "args": 3,
                    "arguments": 1
                },
                "__s": {
                    "file": 1,
                    "file_s": 1,
                    "file_stream": 1,
                    "output_file": 1,
                    "output_stream": 5,
                    "s": 1
                },
                "__stream": {
                    "file": 3,
                    "file_stream": 5,
                    "stream": 3
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 13,
                    "standard_error_file": 1,
                    "stderr": 1,
                    "stderr_file": 1
                },
                "_stdout": {
                    "standard_output": 13,
                    "standard_output_file": 1,
                    "stdout": 1,
                    "stdout_file": 1
                },
                "fflush": {
                    "flush_buffer": 2,
                    "flush_file": 1,
                    "flush_file_buffer": 1,
                    "flush_output": 7,
                    "flush_output_stream": 2,
                    "flush_stream": 1
                },
                "fprint": {
                    "print": 1,
                    "print_error": 1,
                    "write_data_to_file": 1,
                    "write_formatted": 1
                },
                "fprintf": {
                    "format_and_print": 1,
                    "format_output": 1,
                    "formatted_print": 1,
                    "print": 1,
                    "print_error": 1,
                    "print_formatted": 1,
                    "print_formatted_error_message": 1,
                    "print_output": 1,
                    "write_formatted": 1,
                    "write_text": 1
                },
                "param_1": {
                    "error_message": 16,
                    "error_msg": 1,
                    "format_string": 1,
                    "message": 13
                },
                "param_2": {
                    "arg_list": 1,
                    "args": 8,
                    "arguments": 14,
                    "print_arguments": 1,
                    "variable_arguments": 1
                },
                "putc": {
                    "put_character": 4,
                    "write_char_to_stream": 1,
                    "write_character": 8,
                    "write_character_to_file": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "vfprintf": {
                    "format_and_va_print": 1,
                    "format_and_write": 2,
                    "format_print": 1,
                    "format_variable_output": 1,
                    "print_formatted": 2,
                    "print_formatted_error": 2,
                    "print_formatted_error_message_with_args": 1,
                    "print_formatted_output": 1,
                    "write_formatted_data_to_file": 1,
                    "write_formatted_text": 1
                }
            },
            "called": [
                "putc",
                "vfprintf",
                "fprintf",
                "fflush"
            ],
            "calling": [
                "FUN_00102620",
                "FUN_00103bd0"
            ],
            "code": "\n\n\nvoid print_error_message_001025c0(char *error_message,args arguments)\n\n{\n  fflush(standard_output);\n  print(standard_error,\"%s: \",DAT_00106438);\n  vfprintf(standard_error,error_message,arguments);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_001025c0",
            "entrypoint": "0x001025c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025c0": "print_error_message_001025c0",
                "__gnuc_va_list": "args",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprint": "print",
                "fprintf": "print",
                "param_1": "error_message",
                "param_2": "arguments",
                "putc": "write_character",
                "stderr": "standard_error",
                "vfprintf": "format_and_write"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102620": {
            "additional_data": {
                "FUN_001025c0": {
                    "apply_encoding": 1,
                    "decode_and_process": 1,
                    "process_buffer": 1,
                    "process_data": 2,
                    "process_data_helper": 2
                },
                "FUN_00102620": {
                    "copy_data_if_non_null": 1,
                    "decode_and_process_data": 3,
                    "extract_data": 3,
                    "extract_data_from_binary": 2,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "process_data": 12,
                    "reverse_and_copy_data": 1,
                    "reverse_and_process_data": 2
                },
                "in_AL": {
                    "bool_flag": 1,
                    "condition": 1,
                    "condition_flag": 2,
                    "flag": 17,
                    "flag_variable": 1,
                    "input_flag": 3,
                    "is_not_empty": 1,
                    "is_true": 1,
                    "should_copy_data": 1,
                    "some_condition": 1
                },
                "local_18": {
                    "arg8": 1,
                    "arg8_copy": 2,
                    "arg_14": 1,
                    "decoded_param_8": 1,
                    "extracted_param8_copy": 1,
                    "input8_copy": 4,
                    "input_8_copy": 1,
                    "input_8_renamed": 1,
                    "input_param8_copy": 1,
                    "input_param_8": 1,
                    "input_param_8_copy": 1,
                    "local_input_8": 1,
                    "local_var_13": 1,
                    "local_variable17": 1,
                    "new_param8": 2,
                    "param_8": 1,
                    "param_8_copy": 1,
                    "result8": 1,
                    "temp_arg8": 1,
                    "temp_var15": 1,
                    "value8_copy": 1,
                    "var18": 1,
                    "var22": 1,
                    "variable13": 1
                },
                "local_28": {
                    "arg7": 1,
                    "arg7_copy": 2,
                    "arg_13": 1,
                    "decoded_param_7": 1,
                    "extracted_param7_copy": 1,
                    "input7_copy": 4,
                    "input_7_copy": 1,
                    "input_7_renamed": 1,
                    "input_param7_copy": 1,
                    "input_param_7": 1,
                    "input_param_7_copy": 1,
                    "local_input_7": 1,
                    "local_var_12": 1,
                    "local_variable16": 1,
                    "new_param7": 2,
                    "param_7": 1,
                    "param_7_copy": 1,
                    "result7": 1,
                    "temp_arg7": 1,
                    "temp_var14": 1,
                    "value7_copy": 1,
                    "var17": 1,
                    "var21": 1,
                    "variable12": 1
                },
                "local_38": {
                    "arg6": 1,
                    "arg6_copy": 2,
                    "arg_12": 1,
                    "decoded_param_6": 1,
                    "extracted_param6_copy": 1,
                    "input6_copy": 4,
                    "input_6_copy": 1,
                    "input_6_renamed": 1,
                    "input_param6_copy": 1,
                    "input_param_6": 1,
                    "input_param_6_copy": 1,
                    "local_input_6": 1,
                    "local_var_11": 1,
                    "local_variable15": 1,
                    "new_param6": 2,
                    "param_6": 1,
                    "param_6_copy": 1,
                    "result6": 1,
                    "temp_arg6": 1,
                    "temp_var13": 1,
                    "value6_copy": 1,
                    "var16": 1,
                    "var20": 1,
                    "variable11": 1
                },
                "local_48": {
                    "arg5": 1,
                    "arg5_copy": 2,
                    "arg_11": 1,
                    "decoded_param_5": 1,
                    "extracted_param5_copy": 1,
                    "input5_copy": 4,
                    "input_5_copy": 1,
                    "input_5_renamed": 1,
                    "input_param5_copy": 1,
                    "input_param_5": 1,
                    "input_param_5_copy": 1,
                    "local_input_5": 1,
                    "local_var_10": 1,
                    "local_variable14": 1,
                    "new_param5": 2,
                    "param_5": 1,
                    "param_5_copy": 1,
                    "result5": 1,
                    "temp_arg5": 1,
                    "temp_var12": 1,
                    "value5_copy": 1,
                    "var15": 1,
                    "var19": 1,
                    "variable10": 1
                },
                "local_58": {
                    "arg4": 1,
                    "arg4_copy": 2,
                    "arg_10": 1,
                    "decoded_param_4": 1,
                    "extracted_param4_copy": 1,
                    "input4_copy": 4,
                    "input_4_copy": 1,
                    "input_4_renamed": 1,
                    "input_param4_copy": 1,
                    "input_param_4": 1,
                    "input_param_4_copy": 1,
                    "local_input_4": 1,
                    "local_var_9": 1,
                    "local_variable13": 1,
                    "new_param4": 2,
                    "param_4": 1,
                    "param_4_copy": 1,
                    "result4": 1,
                    "temp_arg4": 1,
                    "temp_var11": 1,
                    "value4_copy": 1,
                    "var14": 1,
                    "var18": 1,
                    "variable9": 1
                },
                "local_68": {
                    "arg3": 1,
                    "arg3_copy": 2,
                    "arg_9": 1,
                    "decoded_param_3": 1,
                    "extracted_param3_copy": 1,
                    "input3_copy": 4,
                    "input_3_copy": 1,
                    "input_3_renamed": 1,
                    "input_param3_copy": 1,
                    "input_param_3": 1,
                    "input_param_3_copy": 1,
                    "local_input_3": 1,
                    "local_var_8": 1,
                    "local_variable12": 1,
                    "new_param3": 2,
                    "param_3": 1,
                    "param_3_copy": 1,
                    "result3": 1,
                    "temp_arg3": 1,
                    "temp_var10": 1,
                    "value3_copy": 1,
                    "var13": 1,
                    "var17": 1,
                    "variable8": 1
                },
                "local_78": {
                    "arg2": 1,
                    "arg2_copy": 2,
                    "arg_8": 1,
                    "decoded_param_2": 1,
                    "extracted_param2_copy": 1,
                    "input2_copy": 4,
                    "input_2_copy": 1,
                    "input_2_renamed": 1,
                    "input_param2_copy": 1,
                    "input_param_2": 1,
                    "input_param_2_copy": 1,
                    "local_input_2": 1,
                    "local_var_7": 1,
                    "local_variable11": 1,
                    "new_param2": 2,
                    "param_2": 1,
                    "param_2_copy": 1,
                    "result2": 1,
                    "temp_arg2": 1,
                    "temp_var9": 1,
                    "value2_copy": 1,
                    "var12": 1,
                    "var16": 1,
                    "variable7": 1
                },
                "local_88": {
                    "arg1": 1,
                    "arg1_copy": 2,
                    "arg_7": 1,
                    "decoded_param_1": 1,
                    "extracted_param1_copy": 1,
                    "input1_copy": 4,
                    "input_1_copy": 1,
                    "input_1_renamed": 1,
                    "input_param1_copy": 1,
                    "input_param_1": 1,
                    "input_param_1_copy": 1,
                    "local_input_1": 1,
                    "local_var_6": 1,
                    "local_variable10": 1,
                    "new_param1": 2,
                    "param_1": 1,
                    "param_1_copy": 1,
                    "result1": 1,
                    "temp_arg1": 1,
                    "temp_var8": 1,
                    "value1_copy": 1,
                    "var11": 1,
                    "var15": 1,
                    "variable6": 1
                },
                "local_90": {
                    "arg_6": 1,
                    "data_6_copy": 1,
                    "input_param6_copy": 1,
                    "local_param_14": 2,
                    "local_var6": 1,
                    "local_var_5": 1,
                    "local_variable9": 1,
                    "param14": 2,
                    "param14_copy": 2,
                    "param6_copy": 2,
                    "param6_flag": 1,
                    "param6_value": 1,
                    "param_14": 3,
                    "param_14_copy": 3,
                    "param_14_renamed": 1,
                    "param_e_copy": 1,
                    "param_ptr6_copy": 1,
                    "reverse_param5": 1,
                    "temp_data5": 1,
                    "temp_var7": 1,
                    "var10": 1,
                    "var14": 1,
                    "variable5": 1
                },
                "local_98": {
                    "arg_5": 1,
                    "data_5_copy": 1,
                    "input_param5_copy": 1,
                    "local_param_13": 2,
                    "local_var5": 1,
                    "local_var_4": 1,
                    "local_variable8": 1,
                    "param13": 2,
                    "param13_copy": 2,
                    "param5_copy": 2,
                    "param5_flag": 1,
                    "param5_value": 1,
                    "param_13": 3,
                    "param_13_copy": 3,
                    "param_13_renamed": 1,
                    "param_d_copy": 1,
                    "param_ptr5_copy": 1,
                    "reverse_param4": 1,
                    "temp_data4": 1,
                    "temp_var6": 1,
                    "var13": 1,
                    "var9": 1,
                    "variable4": 1
                },
                "local_a0": {
                    "arg_4": 1,
                    "data_4_copy": 1,
                    "input_param4_copy": 1,
                    "local_param_12": 2,
                    "local_var4": 1,
                    "local_var_3": 1,
                    "local_variable7": 1,
                    "param12": 2,
                    "param12_copy": 2,
                    "param4_copy": 2,
                    "param4_flag": 1,
                    "param4_value": 1,
                    "param_12": 3,
                    "param_12_copy": 3,
                    "param_12_renamed": 1,
                    "param_c_copy": 1,
                    "param_ptr4_copy": 1,
                    "reverse_param3": 1,
                    "temp_data3": 1,
                    "temp_var5": 1,
                    "var12": 1,
                    "var8": 1,
                    "variable3": 1
                },
                "local_a8": {
                    "arg_3": 1,
                    "data_3_copy": 1,
                    "input_param3_copy": 1,
                    "local_param_11": 2,
                    "local_var3": 1,
                    "local_var_2": 1,
                    "local_variable6": 1,
                    "param11": 2,
                    "param11_copy": 2,
                    "param3_copy": 2,
                    "param3_flag": 1,
                    "param3_value": 1,
                    "param_11": 3,
                    "param_11_copy": 3,
                    "param_11_renamed": 1,
                    "param_b_copy": 1,
                    "param_ptr3_copy": 1,
                    "reverse_param2": 1,
                    "temp_data2": 1,
                    "temp_var4": 1,
                    "var11": 1,
                    "var7": 1,
                    "variable2": 1
                },
                "local_b0": {
                    "arg_2": 1,
                    "data_2_copy": 1,
                    "input_param2_copy": 1,
                    "local_param_10": 2,
                    "local_var2": 1,
                    "local_var_1": 1,
                    "local_variable5": 1,
                    "param10": 2,
                    "param10_copy": 2,
                    "param2_copy": 2,
                    "param2_flag": 1,
                    "param2_value": 1,
                    "param_10": 3,
                    "param_10_copy": 3,
                    "param_10_renamed": 1,
                    "param_a_copy": 1,
                    "param_ptr2_copy": 1,
                    "reverse_param1": 1,
                    "temp_data1": 1,
                    "temp_var3": 1,
                    "var10": 1,
                    "var6": 1,
                    "variable1": 1
                },
                "local_b8": {
                    "buffer": 2,
                    "data_buffer": 1,
                    "local_array": 4,
                    "local_buf_array": 1,
                    "local_buffer": 5,
                    "local_buffer3": 1,
                    "local_char_array": 1,
                    "local_data": 1,
                    "local_string": 1,
                    "output_buffer": 2,
                    "result_buffer": 1,
                    "temp_buffer": 4,
                    "temporary_buffer": 6
                },
                "local_c8": {
                    "buffer": 6,
                    "buffer2": 1,
                    "buffer_dest": 1,
                    "data": 1,
                    "local_array_ptr_2": 1,
                    "local_buf": 1,
                    "local_buffer": 13,
                    "local_buffer2": 1,
                    "local_char_array_pointer": 1,
                    "local_destination_address": 1,
                    "local_variable4": 1,
                    "pointer2": 2,
                    "ptr2": 1
                },
                "local_d0": {
                    "buffer": 9,
                    "buffer1": 1,
                    "buffer_pointer": 2,
                    "buffer_ptr": 1,
                    "buffer_src": 1,
                    "local_array": 1,
                    "local_array_ptr_1": 1,
                    "local_buffer1": 1,
                    "local_buffer_pointer": 1,
                    "local_source_address": 1,
                    "local_variable3": 1,
                    "point_to_stack": 1,
                    "pointer1": 2,
                    "ptr1": 1,
                    "stack_buf_ptr": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 2
                },
                "local_d4": {
                    "buffer_size": 1,
                    "char_array_length": 1,
                    "constant": 2,
                    "count": 2,
                    "length": 6,
                    "local_buffer_size": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "local_variable2": 1,
                    "num_elements": 1,
                    "offset": 2,
                    "size_of_string": 1,
                    "size_var_2": 1,
                    "temp_var2": 1,
                    "value": 1,
                    "variable1": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 4,
                    "count": 1,
                    "destination_size": 1,
                    "length": 3,
                    "local_variable1": 1,
                    "num_elems": 1,
                    "size": 14,
                    "size_of_array": 1,
                    "size_var_1": 1,
                    "stack_size": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "arg1": 3,
                    "data1": 1,
                    "extracted_param1": 1,
                    "input1": 7,
                    "input_1": 5,
                    "input_arg1": 1,
                    "input_flag": 1,
                    "input_param1": 4,
                    "input_param_1": 2,
                    "original_param1": 1,
                    "param_sub_function_1": 1,
                    "source_address": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_10": {
                    "arg10": 2,
                    "data2": 1,
                    "data_2": 2,
                    "dest_ptr": 1,
                    "encoded_param1": 1,
                    "input_param10": 2,
                    "input_param2": 1,
                    "input_param_10": 2,
                    "output_2": 1,
                    "param10": 3,
                    "param2": 5,
                    "param_10": 3,
                    "param_a": 1,
                    "param_pointer2": 1,
                    "param_ptr2": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_11": {
                    "arg11": 2,
                    "data3": 1,
                    "data_3": 2,
                    "encoded_param2": 1,
                    "input_param11": 2,
                    "input_param3": 1,
                    "input_param_11": 2,
                    "output_3": 1,
                    "param11": 3,
                    "param3": 5,
                    "param_11": 4,
                    "param_b": 1,
                    "param_pointer3": 1,
                    "param_ptr3": 1,
                    "value2": 1,
                    "var2": 1
                },
                "param_12": {
                    "arg12": 2,
                    "data4": 1,
                    "data_4": 2,
                    "encoded_param3": 1,
                    "input_param12": 2,
                    "input_param4": 1,
                    "input_param_12": 2,
                    "output_4": 1,
                    "param12": 3,
                    "param4": 5,
                    "param_12": 4,
                    "param_c": 1,
                    "param_pointer4": 1,
                    "param_ptr4": 1,
                    "value3": 1,
                    "var3": 1
                },
                "param_13": {
                    "arg13": 2,
                    "data5": 1,
                    "data_5": 2,
                    "encoded_param4": 1,
                    "input_param13": 2,
                    "input_param5": 1,
                    "input_param_13": 2,
                    "output_5": 1,
                    "param13": 3,
                    "param5": 5,
                    "param_13": 4,
                    "param_d": 1,
                    "param_pointer5": 1,
                    "param_ptr5": 1,
                    "value4": 1,
                    "var4": 1
                },
                "param_14": {
                    "arg14": 2,
                    "data6": 1,
                    "data_6": 2,
                    "encoded_param5": 1,
                    "input_param14": 2,
                    "input_param6": 1,
                    "input_param_14": 2,
                    "output_6": 1,
                    "param14": 3,
                    "param6": 5,
                    "param_14": 4,
                    "param_e": 1,
                    "param_pointer6": 1,
                    "param_ptr6": 1,
                    "value5": 1,
                    "var5": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data2": 1,
                    "extracted_param2": 1,
                    "input2": 7,
                    "input_2": 5,
                    "input_arg2": 1,
                    "input_param2": 4,
                    "input_param_2": 3,
                    "original_param2": 1,
                    "param2": 1,
                    "source_data": 1,
                    "value2": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "data3": 1,
                    "extracted_param3": 1,
                    "input3": 7,
                    "input_3": 5,
                    "input_arg3": 1,
                    "input_param3": 4,
                    "input_param_3": 3,
                    "original_param3": 1,
                    "param3": 1,
                    "param_3": 1,
                    "value3": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "data4": 1,
                    "extracted_param4": 1,
                    "input4": 7,
                    "input_4": 5,
                    "input_arg4": 1,
                    "input_param4": 4,
                    "input_param_4": 3,
                    "original_param4": 1,
                    "param4": 1,
                    "param_4": 1,
                    "value4": 1,
                    "var4": 1
                },
                "param_5": {
                    "arg5": 3,
                    "data5": 1,
                    "extracted_param5": 1,
                    "input5": 7,
                    "input_5": 5,
                    "input_arg5": 1,
                    "input_param5": 4,
                    "input_param_5": 3,
                    "original_param5": 1,
                    "param5": 1,
                    "param_5": 1,
                    "value5": 1,
                    "var5": 1
                },
                "param_6": {
                    "arg6": 3,
                    "data6": 1,
                    "extracted_param6": 1,
                    "input6": 7,
                    "input_6": 5,
                    "input_arg6": 1,
                    "input_param6": 4,
                    "input_param_6": 3,
                    "original_param6": 1,
                    "param6": 1,
                    "param_6": 1,
                    "value6": 1,
                    "var6": 1
                },
                "param_7": {
                    "arg7": 3,
                    "data7": 1,
                    "extracted_param7": 1,
                    "input7": 7,
                    "input_7": 5,
                    "input_arg7": 1,
                    "input_param7": 4,
                    "input_param_7": 3,
                    "original_param7": 1,
                    "param7": 1,
                    "param_7": 1,
                    "value7": 1,
                    "var7": 1
                },
                "param_8": {
                    "arg8": 3,
                    "data8": 1,
                    "extracted_param8": 1,
                    "input8": 7,
                    "input_8": 5,
                    "input_arg8": 1,
                    "input_param8": 4,
                    "input_param_8": 3,
                    "original_param8": 1,
                    "param8": 1,
                    "param_8": 1,
                    "value8": 1,
                    "var8": 1
                },
                "param_9": {
                    "arg9": 2,
                    "data": 1,
                    "data1": 1,
                    "data_1": 2,
                    "data_buffer": 1,
                    "destination_address": 1,
                    "input9": 1,
                    "input_data": 1,
                    "input_param1": 1,
                    "input_param9": 2,
                    "input_param_9": 2,
                    "output_1": 1,
                    "param1": 5,
                    "param9": 3,
                    "param_9": 2,
                    "param_pointer1": 1,
                    "param_ptr1": 1,
                    "src_ptr": 1
                }
            },
            "called": [
                "FUN_001025c0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid decode_and_process_data_00102620(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param1,undefined8 param2,undefined8 param3,undefined8 param4,\n                 undefined8 param5,undefined8 param6)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined temporary_buffer [8];\n  undefined8 param_10;\n  undefined8 param_11_copy;\n  undefined8 param_12_copy;\n  undefined8 param_13;\n  undefined8 param_14;\n  undefined4 input1_copy;\n  undefined4 input2_copy;\n  undefined4 input3_copy;\n  undefined4 input4_copy;\n  undefined4 input5_copy;\n  undefined4 input6_copy;\n  undefined4 input7_copy;\n  undefined4 input8_copy;\n  \n  if (flag != '\\0') {\n    input1_copy = input1;\n    input2_copy = input2;\n    input3_copy = input3;\n    input4_copy = input4;\n    input5_copy = input5;\n    input6_copy = input6;\n    input7_copy = input7;\n    input8_copy = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = temporary_buffer;\n  length = 0x30;\n  param_10 = param2;\n  param_11_copy = param3;\n  param_12_copy = param4;\n  param_13 = param5;\n  param_14 = param6;\n  FUN_001025c0(param1,&size);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_00102620",
            "entrypoint": "0x00102620",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102620": "decode_and_process_data_00102620",
                "in_AL": "flag",
                "local_18": "input8_copy",
                "local_28": "input7_copy",
                "local_38": "input6_copy",
                "local_48": "input5_copy",
                "local_58": "input4_copy",
                "local_68": "input3_copy",
                "local_78": "input2_copy",
                "local_88": "input1_copy",
                "local_90": "param_14",
                "local_98": "param_13",
                "local_a0": "param_12_copy",
                "local_a8": "param_11_copy",
                "local_b0": "param_10",
                "local_b8": "temporary_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param2",
                "param_11": "param3",
                "param_12": "param4",
                "param_13": "param5",
                "param_14": "param6",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026f0": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102703) */\n/* WARNING: Removing unreachable block (ram,0x0010270f) */\n\nvoid FUNC_001026f0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001026f0",
            "entrypoint": "0x001026f0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001026f0": "FUNC_001026f0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00102720": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102744) */\n/* WARNING: Removing unreachable block (ram,0x00102750) */\n\nvoid FUNC_00102720(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00102720",
            "entrypoint": "0x00102720",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00102720": "FUNC_00102720"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001027b0": {
            "additional_data": {
                "DAT_001063e8": {
                    "file_count": 1
                },
                "DAT_00106420": {
                    "file_list_count": 1
                },
                "DAT_00106428": {
                    "file_list": 1
                },
                "DAT_00106430": {
                    "is_address": 1
                },
                "DAT_00106431": {
                    "is_line_info": 1
                },
                "DAT_00106432": {
                    "is_inlined": 1
                },
                "DAT_00106434": {
                    "bool_var4": 1,
                    "is_demangle": 1
                },
                "DAT_00106435": {
                    "bool_var5": 1,
                    "is_verbose": 1
                },
                "DAT_00106438": {
                    "file_handle_array": 1
                },
                "FUN_001027b0": {
                    "analyze_binary": 3,
                    "analyze_binary_file": 1,
                    "analyze_executable_files": 1,
                    "analyze_file": 1,
                    "decompile_and_improve": 1,
                    "extract_addresses_from_file": 1,
                    "find_addresses": 1,
                    "parse_file": 1,
                    "parse_input": 1,
                    "parse_inputs": 1,
                    "process_files": 1,
                    "process_input": 1
                },
                "__ptr": {
                    "byte_array2": 1,
                    "byte_array_ptr": 1,
                    "byte_pointer": 1,
                    "byte_pointer2": 2,
                    "byte_pointer3": 5,
                    "byte_pointer_3": 1,
                    "byte_ptr2": 4,
                    "byte_ptr3": 2,
                    "dest_ptr": 1,
                    "dst_ptr": 1,
                    "line": 1,
                    "line_buffer": 1,
                    "other_byte_pointer_var": 1,
                    "ptr": 3,
                    "ptr1": 1,
                    "ptr4": 1,
                    "str2": 1,
                    "temp_ptr": 1
                },
                "__s": {
                    "byte_array": 2,
                    "byte_array1": 1,
                    "byte_array2": 1,
                    "byte_pointer": 1,
                    "byte_pointer2": 5,
                    "byte_pointer_2": 1,
                    "byte_pointer_var": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 2,
                    "byte_ptr2": 2,
                    "byte_var": 1,
                    "file_content": 1,
                    "opt_short_opts": 1,
                    "str": 2,
                    "str1": 2,
                    "string": 2,
                    "string_pointer": 1
                },
                "__s_00": {
                    "byte_pointer4": 1,
                    "byte_pointer_4": 1,
                    "byte_ptr3": 1,
                    "byte_var_00": 1,
                    "optarg_short": 1,
                    "stat_pointer": 1,
                    "stat_pointer1": 1,
                    "stat_pointer2": 1,
                    "stat_ptr00": 1,
                    "stat_ptr1": 1,
                    "stat_ptr2": 7,
                    "str2": 1,
                    "str3": 1,
                    "str_2": 1,
                    "string2": 1
                },
                "__s_01": {
                    "str3": 1
                },
                "__stream": {
                    "current_file": 1,
                    "file": 3,
                    "file1": 1,
                    "file_object": 1,
                    "file_pointer": 2,
                    "file_pointer2": 1,
                    "file_pointer4": 1,
                    "file_ptr1": 1,
                    "file_stream": 3,
                    "file_stream_var": 1,
                    "input_file": 2,
                    "input_stream": 1,
                    "stream": 11
                },
                "bVar10": {
                    "byte": 1,
                    "byte_var": 2,
                    "byte_var1": 1,
                    "byte_var10": 5,
                    "byte_var2": 13,
                    "byte_var_1": 1,
                    "byte_var_10": 1,
                    "byte_var_2": 1,
                    "byte_variable2": 1,
                    "current_char": 1
                },
                "bVar3": {
                    "boolean_var3": 1,
                    "byte_var": 9,
                    "byte_var1": 6,
                    "byte_var3": 4,
                    "byte_var_1": 1,
                    "byte_var_3": 1,
                    "byte_variable": 1,
                    "ctype_result": 1,
                    "flag": 1,
                    "flag_check": 1
                },
                "bVar6": {
                    "bool_var1": 18,
                    "bool_var6": 3,
                    "bool_var_1": 2,
                    "bool_var_6": 1,
                    "bool_variable1": 1,
                    "boolean_var6": 1,
                    "in_single_quoted_string": 1,
                    "in_single_quotes": 1
                },
                "bVar7": {
                    "bool_var2": 18,
                    "bool_var7": 3,
                    "bool_var_2": 2,
                    "bool_var_7": 1,
                    "bool_variable2": 1,
                    "boolean_var7": 1,
                    "in_double_quoted_string": 1,
                    "in_double_quotes": 1
                },
                "bVar8": {
                    "bool_var3": 18,
                    "bool_var8": 3,
                    "bool_var_3": 2,
                    "bool_var_8": 1,
                    "bool_variable3": 1,
                    "boolean_var8": 1,
                    "escape_next_character": 1,
                    "escape_sequence": 1
                },
                "cVar11": {
                    "bfd_set_target_result": 1,
                    "char_var": 12,
                    "char_var1": 7,
                    "char_var11": 4,
                    "char_var_11": 1,
                    "char_variable": 1
                },
                "cp_long": {
                    "line_length": 1
                },
                "fileMode": {
                    "mode": 1
                },
                "iVar12": {
                    "int_var": 7,
                    "int_var1": 11,
                    "int_var12": 4,
                    "int_var_1": 2,
                    "int_var_12": 1,
                    "int_variable": 1,
                    "line_index": 1,
                    "status": 1
                },
                "iVar14": {
                    "count": 1,
                    "error_count": 1,
                    "int_var1": 2,
                    "int_var14": 4,
                    "int_var2": 14,
                    "int_var_14": 1,
                    "int_var_2": 2,
                    "int_variable2": 1,
                    "result": 2
                },
                "iVar23": {
                    "int_var2": 1
                },
                "iVar34": {
                    "at_file_index": 1,
                    "int_var1": 1,
                    "int_var2": 1,
                    "int_var3": 13,
                    "int_var34": 2,
                    "int_var_3": 2,
                    "int_var_34": 1,
                    "int_variable3": 1
                },
                "iVar36": {
                    "argc": 1,
                    "i_var36": 1,
                    "int_var1": 1,
                    "int_var3": 1,
                    "int_var36": 2,
                    "int_var4": 12,
                    "int_var_36": 1,
                    "int_var_4": 2,
                    "int_variable4": 1,
                    "section_count": 1
                },
                "lVar20": {
                    "file_size": 1,
                    "len": 1,
                    "line_index": 1,
                    "long_var1": 3,
                    "long_var2": 10,
                    "long_var20": 4,
                    "long_var6": 1,
                    "long_var_2": 2,
                    "long_var_20": 1,
                    "long_variable2": 1,
                    "loop_index": 1
                },
                "lVar26": {
                    "long_var3": 1
                },
                "lVar30": {
                    "i_var34": 1,
                    "iteration_index": 1,
                    "long_var1": 1,
                    "long_var2": 4,
                    "long_var3": 10,
                    "long_var30": 2,
                    "long_var4": 1,
                    "long_var_3": 2,
                    "long_var_30": 1,
                    "long_variable3": 1
                },
                "lVar5": {
                    "long_var": 12,
                    "long_var1": 6,
                    "long_var5": 5,
                    "long_var_5": 1,
                    "long_variable": 1,
                    "size": 1
                },
                "lbl_1": {
                    "error_label1": 1
                },
                "lbl_2": {
                    "error_label2": 1
                },
                "local_118": {
                    "input_file_index": 1,
                    "local_var2": 1,
                    "long_local": 1,
                    "long_local118": 1,
                    "long_var118": 1,
                    "long_var3": 4,
                    "long_var4": 8,
                    "long_var7": 1,
                    "long_var_4": 2,
                    "long_var_local_118": 1,
                    "long_variable4": 1
                },
                "local_120": {
                    "file_count": 1,
                    "local_var1": 1,
                    "path_size": 1,
                    "size_t_local": 1,
                    "size_t_local120": 1,
                    "size_t_var": 3,
                    "size_t_var1": 2,
                    "size_t_var2": 1,
                    "size_t_var_local_120": 1,
                    "size_t_variable": 1,
                    "size_var": 4,
                    "size_var1": 1,
                    "size_var120": 1,
                    "size_var2": 4
                },
                "local_140": {
                    "arch_names": 1,
                    "at_files": 1,
                    "demangle_list": 1,
                    "local_ptr2": 1,
                    "ppu_var36": 1,
                    "ptr12": 1,
                    "ptr_ptr6": 1,
                    "ptr_ptr_local140": 1,
                    "ptr_to_ptr_5": 1,
                    "ptr_undefined_var_local_140": 1,
                    "undefined_pointer5": 1,
                    "undefined_pointer7": 3,
                    "undefined_pointer_6": 1,
                    "undefined_pointer_pointer4": 1,
                    "undefined_pointer_ptr4": 1,
                    "undefined_ptr5": 1,
                    "undefined_ptr6": 2,
                    "undefined_ptr_array2": 1,
                    "undefined_ptr_ptr6": 1,
                    "void_pointer_pointer_local": 1,
                    "void_ptr_ptr6": 1
                },
                "local_148": {
                    "input_files": 1,
                    "local_ptr": 1,
                    "long_options": 1,
                    "ppu_var35": 1,
                    "ptr11": 1,
                    "ptr_ptr5": 1,
                    "ptr_ptr_local148": 1,
                    "ptr_to_ptr_4": 1,
                    "ptr_undefined_var_local_148": 1,
                    "section_list": 1,
                    "undefined_pointer4": 1,
                    "undefined_pointer6": 3,
                    "undefined_pointer_5": 1,
                    "undefined_pointer_pointer3": 1,
                    "undefined_pointer_ptr3": 1,
                    "undefined_ptr4": 1,
                    "undefined_ptr5": 2,
                    "undefined_ptr_array": 1,
                    "undefined_ptr_ptr5": 1,
                    "void_pointer_pointer_local": 1,
                    "void_ptr_ptr5": 1
                },
                "local_c8": {
                    "buf_stat": 1,
                    "file_info": 1,
                    "input_file_stat": 1,
                    "local_stat_buffer": 1,
                    "stat1": 1,
                    "stat3": 1,
                    "stat_local": 1,
                    "stat_local_c8": 1,
                    "stat_struct": 2,
                    "stat_struct1": 2,
                    "stat_struct3": 1,
                    "stat_var": 3,
                    "stat_var1": 4,
                    "stat_var2": 1,
                    "stat_var_local_c8": 1,
                    "stat_variable": 1
                },
                "local_d0": {
                    "buffer": 1,
                    "input_file_stats": 1,
                    "local_array": 1,
                    "long_pointer2": 4,
                    "long_pointer_2": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 4,
                    "long_ptr_local_d0": 1,
                    "ptr13": 1,
                    "ptr_long2": 1,
                    "ptr_long_var_local_d0": 1,
                    "stat_local": 1,
                    "stat_ptr3": 2,
                    "stat_var": 3
                },
                "opt_long_opts": {
                    "opt_long_opts": 1
                },
                "optarg_long": {
                    "optarg_long": 1
                },
                "pFVar19": {
                    "current_file": 1,
                    "file": 2,
                    "file2": 2,
                    "file_object1": 1,
                    "file_pointer": 2,
                    "file_pointer1": 1,
                    "file_pointer3": 1,
                    "file_pointer_2": 1,
                    "file_pointer_var19": 1,
                    "file_ptr": 7,
                    "file_ptr1": 2,
                    "file_ptr2": 2,
                    "file_ptr_var_19": 1,
                    "file_stream": 1,
                    "input_file": 1
                },
                "pFVar27": {
                    "current_file": 1,
                    "file": 1,
                    "file3": 1,
                    "file_object2": 1,
                    "file_pointer2": 2,
                    "file_pointer3": 1,
                    "file_ptr": 1,
                    "file_ptr1": 2,
                    "file_ptr2": 5,
                    "file_ptr27": 1,
                    "file_ptr3": 1,
                    "file_ptr_2": 1,
                    "file_var_27": 1
                },
                "param_1": {
                    "argc": 14,
                    "count": 1,
                    "file_flag": 1,
                    "file_handle": 1,
                    "file_mode": 2,
                    "file_pointer": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "param1": 7,
                    "param_1": 2
                },
                "param_2": {
                    "argv": 11,
                    "file": 1,
                    "file_object": 1,
                    "file_param": 1,
                    "file_pointer": 5,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "param2": 6,
                    "param_2": 2
                },
                "pbVar1": {
                    "byte_array1": 1,
                    "byte_pointer": 2,
                    "byte_pointer1": 7,
                    "byte_pointer_1": 1,
                    "byte_ptr": 4,
                    "byte_ptr1": 2,
                    "current_char": 1,
                    "pointer_byte_var1": 1,
                    "ptr": 1,
                    "ptr1": 3,
                    "ptr_byte1": 2,
                    "ptr_byte_1": 1
                },
                "pbVar29": {
                    "byte_pointer": 1,
                    "byte_pointer3": 2,
                    "byte_pointer4": 3,
                    "byte_pointer5": 1,
                    "byte_pointer_5": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr2": 1,
                    "byte_ptr29": 1,
                    "byte_ptr3": 2,
                    "byte_ptr4": 3,
                    "byte_ptr_2": 1,
                    "current_char": 1,
                    "ptr7": 1,
                    "ptr_byte2": 1,
                    "ptr_byte_29": 1
                },
                "pbVar31": {
                    "byte_pointer": 1,
                    "byte_pointer4": 2,
                    "byte_pointer5": 3,
                    "byte_pointer6": 1,
                    "byte_pointer_6": 1,
                    "byte_ptr2": 1,
                    "byte_ptr3": 1,
                    "byte_ptr31": 1,
                    "byte_ptr4": 1,
                    "byte_ptr5": 2,
                    "byte_ptr_3": 1,
                    "current_char": 1,
                    "ptr8": 1,
                    "ptr_byte3": 1,
                    "ptr_byte_31": 1
                },
                "pcVar28": {
                    "char_array": 1,
                    "char_pointer": 5,
                    "char_pointer1": 1,
                    "char_ptr": 3,
                    "char_ptr1": 2,
                    "char_ptr28": 1,
                    "char_var_28": 1,
                    "error_message": 1,
                    "program_name": 2,
                    "str": 1,
                    "str4": 2,
                    "str_ptr": 1,
                    "string1": 1,
                    "target": 1
                },
                "pcVar32": {
                    "char_pointer": 1,
                    "char_pointer2": 1,
                    "char_pointer3": 3,
                    "char_pointer_3": 1,
                    "char_ptr2": 3,
                    "char_ptr3": 5,
                    "char_ptr32": 1,
                    "char_var_32": 1,
                    "error_message": 1,
                    "message_format": 1,
                    "str5": 2,
                    "str_ptr_2": 1,
                    "string2": 1
                },
                "piVar23": {
                    "errno_p": 1,
                    "error_code": 1,
                    "int_pointer": 6,
                    "int_pointer1": 1,
                    "int_ptr": 5,
                    "int_ptr1": 5,
                    "int_ptr23": 1,
                    "pointer_int_var23": 1,
                    "ptr6": 2,
                    "ptr_int": 1,
                    "ptr_int_23": 1,
                    "ptr_int_ptr1": 1
                },
                "plVar26": {
                    "file_names": 1,
                    "filename": 1,
                    "input_file_list": 1,
                    "long_pointer": 5,
                    "long_pointer1": 1,
                    "long_ptr": 5,
                    "long_ptr1": 3,
                    "long_ptr26": 1,
                    "long_var_pointer": 1,
                    "ptr2": 1,
                    "ptr8": 1,
                    "ptr_long1": 1,
                    "ptr_long_26": 1
                },
                "ppuVar16": {
                    "file_names": 1,
                    "lines": 1,
                    "pointer_to_pointer_var16": 1,
                    "ptr4": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr1": 1,
                    "ptr_ptr_16": 1,
                    "ptr_ptr_undef1": 1,
                    "ptr_to_ptr": 1,
                    "undefined_pointer": 1,
                    "undefined_pointer1": 2,
                    "undefined_ptr_ptr1": 1,
                    "void_ptr_ptr": 1,
                    "void_ptr_ptr1": 1
                },
                "ppuVar24": {
                    "line": 1,
                    "ptr7": 1,
                    "ptr_ptr": 1,
                    "ptr_ptr2": 2,
                    "ptr_ptr24": 1,
                    "ptr_ptr_24": 1,
                    "ptr_ptr_undef2": 1,
                    "sec_names": 1,
                    "undefined_pointer": 1,
                    "undefined_pointer3": 3,
                    "undefined_pointer_2": 1,
                    "undefined_pointer_pointer": 1,
                    "undefined_pointer_pointer3": 1,
                    "undefined_pointer_ptr1": 1,
                    "undefined_ptr1": 1,
                    "undefined_ptr2": 2,
                    "undefined_ptr_ptr2": 1,
                    "void_pointer_pointer": 1,
                    "void_ptr_array": 1,
                    "void_ptr_ptr": 1,
                    "void_ptr_ptr2": 2
                },
                "ppuVar33": {
                    "demangled_name": 1,
                    "file_section": 1,
                    "path": 1,
                    "ptr9": 1,
                    "ptr_ptr3": 1,
                    "ptr_ptr33": 1,
                    "ptr_ptr_33": 1,
                    "ptr_ptr_undef3": 1,
                    "ptr_to_ptr_2": 1,
                    "undefined_pointer2": 1,
                    "undefined_pointer4": 3,
                    "undefined_pointer_3": 1,
                    "undefined_pointer_pointer2": 2,
                    "undefined_pointer_ptr2": 1,
                    "undefined_ptr2": 1,
                    "undefined_ptr3": 2,
                    "undefined_ptr_ptr3": 1,
                    "void_pointer_pointer": 1,
                    "void_ptr_array2": 1,
                    "void_ptr_ptr2": 1,
                    "void_ptr_ptr3": 2
                },
                "ppuVar34": {
                    "ptr_ptr_undef4": 1
                },
                "psVar21": {
                    "current_file_stat": 1,
                    "file_stat": 1,
                    "pointer_stat_var21": 1,
                    "ptr_stat": 1,
                    "ptr_stat_21": 1,
                    "stat1": 1,
                    "stat_buffer": 1,
                    "stat_pointer": 4,
                    "stat_ptr": 7,
                    "stat_ptr1": 4,
                    "stat_struct": 1,
                    "stat_struct_pointer": 1,
                    "stat_struct_pointer1": 1,
                    "stat_struct_ptr1": 1
                },
                "psVar35": {
                    "current_address_stat": 1,
                    "demangled": 1,
                    "ptr_stat1": 1,
                    "ptr_stat_35": 1,
                    "star_ptr1": 1,
                    "stat2": 1,
                    "stat_pointer2": 1,
                    "stat_pointer3": 1,
                    "stat_ptr2": 2,
                    "stat_ptr3": 6,
                    "stat_ptr35": 1,
                    "stat_ptr_2": 1,
                    "stat_struct2": 1,
                    "stat_struct_pointer2": 1,
                    "stat_struct_pointer_2": 1,
                    "stat_struct_ptr2": 1
                },
                "pszFile": {
                    "file_name": 1
                },
                "puVar18": {
                    "byte_pointer": 1,
                    "cloned_line": 1,
                    "dst_ptr": 1,
                    "line_copy": 1,
                    "pointer": 1,
                    "pointer_void_var18": 1,
                    "ptr": 1,
                    "ptr5": 2,
                    "ptr_undef1": 1,
                    "ptr_var18": 1,
                    "ptr_void2": 1,
                    "strdup_result": 1,
                    "undefined_pointer": 4,
                    "undefined_pointer2": 3,
                    "undefined_ptr": 1,
                    "undefined_ptr1": 2,
                    "void_pointer": 1,
                    "void_ptr1": 1,
                    "void_ptr2": 4
                },
                "puVar2": {
                    "current_line": 1,
                    "pointer_uint_var2": 1,
                    "ptr2": 4,
                    "ptr_u_int": 1,
                    "ptr_u_int1": 1,
                    "ptr_uint_2": 1,
                    "uint_pointer": 9,
                    "uint_pointer_1": 1,
                    "uint_ptr": 5,
                    "uint_ptr1": 2
                },
                "pvVar9": {
                    "pointer_var1": 1,
                    "pointer_void_var9": 1,
                    "ptr3": 2,
                    "ptr_var": 1,
                    "ptr_void": 1,
                    "ptr_void1": 1,
                    "ptr_void_9": 1,
                    "section_name": 1,
                    "void_pointer": 7,
                    "void_pointer1": 2,
                    "void_ptr": 6,
                    "void_ptr1": 2
                },
                "sVar17": {
                    "file_size": 1,
                    "length": 1,
                    "path_length": 1,
                    "size": 6,
                    "size_t_var1": 1,
                    "size_t_var_17": 1,
                    "size_var": 1,
                    "size_var1": 3,
                    "size_var17": 2,
                    "str_len": 1
                },
                "tVar34": {
                    "demangle_style": 1
                },
                "uVar13": {
                    "file_index": 1,
                    "uint_var": 10,
                    "uint_var1": 9,
                    "uint_var13": 4,
                    "uint_var_13": 1,
                    "uint_variable": 1
                },
                "uVar15": {
                    "bfd_get_error_result": 1,
                    "opt_value": 1,
                    "uint_var1": 1,
                    "uint_var15": 3,
                    "uint_var2": 13,
                    "uint_var_15": 1,
                    "uint_var_2": 2,
                    "uint_variable2": 1,
                    "undefined4_var": 1,
                    "undefined4_var15": 1
                },
                "uVar22": {
                    "err_string": 1,
                    "error_message": 2,
                    "long_var2": 1,
                    "result_var": 1,
                    "uchar_var": 1,
                    "uint_var22": 2,
                    "uint_var3": 1,
                    "ulong_var": 3,
                    "ulong_var1": 4,
                    "ulong_var22": 1,
                    "ulong_var_22": 1,
                    "ulong_variable": 1,
                    "undefined8_var": 4,
                    "undefined8_var1": 1,
                    "undefined8_var22": 1,
                    "undefined_var": 1,
                    "unknown_var": 1
                },
                "uVar25": {
                    "ulong_var": 6,
                    "ulong_var1": 3,
                    "ulong_var2": 5,
                    "ulong_var25": 1,
                    "ulong_var_25": 1,
                    "ulong_variable2": 1
                },
                "uVar37": {
                    "last_file_index": 1,
                    "u_var37": 1,
                    "uint_var1": 1,
                    "uint_var2": 1,
                    "uint_var3": 9,
                    "uint_var37": 2,
                    "uint_var_3": 2,
                    "uint_var_37": 1,
                    "uint_variable3": 1
                },
                "uVar4": {
                    "ctype_value": 1,
                    "ushort_var": 14,
                    "ushort_var1": 4,
                    "ushort_var4": 5,
                    "ushort_var_4": 1,
                    "ushort_variable": 1
                },
                "unaff_R12": {
                    "options": 1,
                    "ptr10": 1,
                    "ptr_ptr4": 1,
                    "ptr_ptr_r12": 1,
                    "ptr_ptr_undef5": 1,
                    "ptr_to_ptr_3": 1,
                    "ptr_undefined_var_r12": 1,
                    "section": 1,
                    "short_options": 1,
                    "undefined_pointer2": 1,
                    "undefined_pointer3": 1,
                    "undefined_pointer5": 3,
                    "undefined_pointer_4": 1,
                    "undefined_ptr": 1,
                    "undefined_ptr3": 1,
                    "undefined_ptr4": 2,
                    "undefined_ptr_ptr4": 1,
                    "void_ptr_ptr3": 1,
                    "void_ptr_ptr4": 1
                },
                "unaff_RBP": {
                    "char_pointer": 1,
                    "char_pointer1": 1,
                    "char_pointer2": 3,
                    "char_pointer_2": 1,
                    "char_ptr": 2,
                    "char_ptr1": 6,
                    "char_ptr2": 5,
                    "char_ptr_rbp": 1,
                    "char_var_rbp": 1,
                    "current_file": 1,
                    "long_options_index": 1,
                    "tmp_ptr": 1
                }
            },
            "called": [
                "FUN_00102540",
                "bfd_map_over_sections",
                "bfd_close",
                "bfd_get_error",
                "bfd_fprintf_vma",
                "bfd_demangle",
                "fflush",
                "bfd_get_section_by_name",
                "fgets",
                "xstrdup",
                "strcmp",
                "bfd_check_format_matches",
                "putchar",
                "strtoul",
                "fclose",
                "strlen",
                "setlocale",
                "bfd_errmsg",
                "printf",
                "free",
                "xrealloc",
                "fprintf",
                "cplus_demangle_set_style",
                "__errno_location",
                "bfd_scan_vma",
                "fputc",
                "bfd_openr",
                "bfd_check_format",
                "bindtextdomain",
                "ftell",
                "memcpy",
                "xmalloc_set_program_name",
                "bfd_set_error_program_name",
                "bfd_init",
                "cplus_demangle_name_to_style",
                "textdomain",
                "getopt_long",
                "puts",
                "memmove",
                "dcgettext",
                "FUN_00103c70",
                "strrchr",
                "FUN_001023e1",
                "xexit",
                "ferror",
                "FUN_00103bd0",
                "xmalloc",
                "strchr",
                "fseek",
                "FUN_00102620",
                "fopen",
                "stat",
                "bfd_set_default_target",
                "exit",
                "strerror",
                "fread"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\n\nundefined8 analyze_binary_file_001027b0(uint argc,FILE *argv)\n\n{\n  byte *byte_pointer1;\n  uint *uint_pointer;\n  byte byte_var;\n  ushort ushort_var;\n  long long_var;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var3;\n  void *void_pointer;\n  byte byte_var2;\n  char char_var;\n  int int_var1;\n  uint uint_var;\n  int int_var2;\n  undefined4 uint_var2;\n  FILE *stream;\n  byte *byte_pointer2;\n  undefined **undefined_pointer1;\n  size_t size;\n  byte *byte_pointer3;\n  undefined *undefined_pointer;\n  FILE *file_ptr;\n  long long_var2;\n  stat *stat_ptr;\n  undefined8 ulong_var1;\n  int *int_pointer;\n  undefined **undefined_pointer3;\n  stat *stat_ptr2;\n  ulong ulong_var;\n  long *long_ptr;\n  FILE *file_ptr2;\n  char *char_pointer;\n  byte *byte_pointer4;\n  char *char_ptr1;\n  long long_var3;\n  byte *byte_pointer5;\n  char *char_ptr3;\n  undefined **undefined_pointer4;\n  int int_var3;\n  undefined **undefined_pointer5;\n  stat *stat_ptr3;\n  int int_var4;\n  uint uint_var3;\n  undefined **undefined_pointer6;\n  undefined **undefined_pointer7;\n  size_t size_var;\n  long long_var4;\n  long *long_ptr2;\n  stat stat_var1;\n  \n  file_ptr2 = (FILE *)(ulong)argc;\n  setlocale(5,\"\");\n  char_pointer = \"binutils\";\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_00106438 = *(long **)argv;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_00106438);\n  file_ptr = argv;\n  stream = argv;\n  if (1 < (int)argc) {\n    int_var2 = 2000;\n    undefined_pointer5 = (undefined **)0x1;\n    undefined_pointer7 = (undefined **)0x0;\n    do {\n      int_var3 = (int)undefined_pointer5;\n      char_ptr1 = (char *)(long)int_var3;\n      undefined_pointer6 = (undefined **)((long)char_ptr1 * 8);\n      int_var4 = (int)file_ptr2;\n      if (**(char **)(&file_ptr->_flags + (long)char_ptr1 * 2) == '@') {\n        int_var2 = int_var2 + -1;\n        if (int_var2 == 0) {\n          long_ptr = *(long **)file_ptr;\n          char_pointer = \"%s: error: too many @-files encountered\\n\";\n          goto LAB_00103239;\n        }\n        char_pointer = *(char **)(&file_ptr->_flags + (long)char_ptr1 * 2) + 1;\n        int_var1 = stat(char_pointer,&stat_var1);\n        if (int_var1 < 0) goto LAB_00102c30;\n        if ((stat_var1.st_mode & 0xf000) == 0x4000) {\n          do {\n            long_ptr = *(long **)file_ptr;\n            char_pointer = \"%s: error: @-file refers to a directory\\n\";\nLAB_00103239:\n            fprintf(_stderr,char_pointer,long_ptr);\n            xexit(1);\n          } while( true );\n        }\n        stream = fopen(char_pointer,\"r\");\n        if (stream == (FILE *)0x0) goto LAB_00102c30;\n        int_var1 = fseek(stream,0,2);\n        if (((int_var1 == -1) ||\n            (char_pointer = (char *)ftell(stream),\n            (undefined **)char_pointer == (undefined **)0xffffffffffffffff)) ||\n           (int_var1 = fseek(stream,0,0), int_var1 == -1)) {\nLAB_00102c90:\n          fclose(stream);\n          if (int_var3 + 1 < int_var4) goto LAB_00102c3a;\n          break;\n        }\n        byte_pointer2 = (byte *)xmalloc((long)char_pointer + 1);\n        undefined_pointer1 = (undefined **)fread(byte_pointer2,1,(size_t)char_pointer,stream);\n        if (((undefined **)char_pointer != undefined_pointer1) && (int_var1 = ferror(stream), int_var1 != 0)) {\n          free(byte_pointer2);\n          goto LAB_00102c90;\n        }\n        byte_pointer2[(long)undefined_pointer1] = 0;\n        byte_var2 = *byte_pointer2;\n        byte_pointer4 = byte_pointer2;\n        if (byte_var2 != 0) {\nLAB_00102980:\n          if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) goto LAB_00102970;\n          size = strlen((char *)byte_pointer2);\n          byte_pointer3 = (byte *)xmalloc(size + 1);\n          undefined_pointer1 = (undefined **)0x0;\n          int_var1 = 0;\n          bool_var1 = false;\n          bool_var2 = false;\n          bool_var3 = false;\n          long_var4 = 0;\n          byte_pointer4 = byte_pointer2;\n          do {\n            while (((&_sch_istable)[(ulong)*byte_pointer4 * 2] & 0x40) != 0) {\n              byte_pointer4 = byte_pointer4 + 1;\n            }\n            if ((int_var1 == 0) || (undefined_pointer3 = undefined_pointer1 + long_var4, int_var1 + -1 <= (int)long_var4)) {\n              if (undefined_pointer1 == (undefined **)0x0) {\n                undefined_pointer1 = (undefined **)xmalloc(0x40);\n                int_var1 = 8;\n                undefined_pointer3 = undefined_pointer1 + long_var4;\n                *undefined_pointer3 = (undefined *)0x0;\n              }\n              else {\n                int_var1 = int_var1 * 2;\n                undefined_pointer1 = (undefined **)xrealloc(undefined_pointer1,(long)int_var1 << 3);\n                undefined_pointer3 = undefined_pointer1 + long_var4;\n                *undefined_pointer3 = (undefined *)0x0;\n              }\n            }\n            byte_var2 = *byte_pointer4;\n            byte_pointer5 = byte_pointer3;\n            while (byte_var2 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                   (!(bool)(bool_var3 | bool_var2 | bool_var1))) {\n                  bool_var3 = false;\n                  bool_var1 = false;\n                  bool_var2 = false;\n                  goto LAB_00102a9e;\n                }\n                if (!bool_var3) break;\n                byte_pointer4 = byte_pointer4 + 1;\n                *byte_pointer5 = byte_var2;\n                byte_pointer5 = byte_pointer5 + 1;\n                bool_var3 = false;\n                byte_var2 = *byte_pointer4;\n                if (byte_var2 == 0) goto LAB_00102a9e;\n              }\n              if (byte_var2 == 0x5c) {\n                bool_var3 = true;\n              }\n              else if (bool_var2) {\n                if (byte_var2 == 0x27) {\n                  bool_var2 = false;\n                }\n                else {\nLAB_00102c0d:\n                  *byte_pointer5 = byte_var2;\n                  byte_pointer5 = byte_pointer5 + 1;\n                }\n              }\n              else if (bool_var1) {\n                if (byte_var2 != 0x22) goto LAB_00102c0d;\n                bool_var1 = false;\n              }\n              else if (byte_var2 == 0x27) {\n                bool_var2 = true;\n              }\n              else {\n                if (byte_var2 != 0x22) goto LAB_00102c0d;\n                bool_var1 = true;\n              }\n              byte_pointer1 = byte_pointer4 + 1;\n              byte_pointer4 = byte_pointer4 + 1;\n              byte_var2 = *byte_pointer1;\n            }\nLAB_00102a9e:\n            *byte_pointer5 = 0;\n            undefined_pointer = (undefined *)xstrdup(byte_pointer3);\n            *undefined_pointer3 = undefined_pointer;\n            undefined_pointer1[long_var4 + 1] = (undefined *)0x0;\n            byte_var2 = *byte_pointer4;\n            byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n            while ((byte_var & 0x40) != 0) {\n              byte_var2 = byte_pointer4[1];\n              byte_pointer4 = byte_pointer4 + 1;\n              byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n            }\n            long_var4 = long_var4 + 1;\n          } while (byte_var2 != 0);\n          free(byte_pointer3);\n          file_ptr2 = file_ptr;\n          if (argv == file_ptr) goto LAB_001030d9;\n          goto LAB_00102b38;\n        }\nLAB_001030bb:\n        undefined_pointer1 = (undefined **)xmalloc(8);\n        *undefined_pointer1 = (undefined *)0x0;\n        if (argv == file_ptr) {\nLAB_001030d9:\n          if (*(long **)file_ptr == (long *)0x0) {\n            int_var1 = 0;\n          }\n          else {\n            long_var2 = 1;\n            do {\n              int_var1 = (int)long_var2;\n              long_var3 = long_var2 * 2;\n              long_var2 = long_var2 + 1;\n            } while (*(long *)(&file_ptr->_flags + long_var3) != 0);\n          }\n          file_ptr2 = (FILE *)xmalloc((long)(int_var1 + 1) << 3);\n          long_ptr = *(long **)file_ptr;\n          long_var2 = 0;\n          while (long_ptr != (long *)0x0) {\n            ulong_var1 = xstrdup();\n            *(undefined8 *)((long)&file_ptr2->_flags + long_var2) = ulong_var1;\n            long_ptr = *(long **)(file_ptr->_shortbuf + long_var2 + -0x7b);\n            long_var2 = long_var2 + 8;\n          }\n          *(undefined8 *)((long)&file_ptr2->_flags + long_var2) = 0;\nLAB_00102b38:\n          file_ptr = file_ptr2;\n          if (*undefined_pointer1 == (undefined *)0x0) goto LAB_0010318e;\n          char_pointer = (char *)0x0;\n          do {\n            char_pointer = (char *)((long)char_pointer + 1);\n          } while (undefined_pointer1[(long)char_pointer] != (undefined *)0x0);\n          size_var = (long)char_pointer * 8;\n        }\n        else {\nLAB_0010318e:\n          char_pointer = (char *)0x0;\n          size_var = 0;\n        }\n        free(*(void **)(&file_ptr->_flags + (long)char_ptr1 * 2));\n        file_ptr = (FILE *)xrealloc(file_ptr,((long)char_pointer + (long)int_var4 + 1) * 8);\n        uint_var3 = int_var4 + -1 + (int)char_pointer;\n        file_ptr2 = (FILE *)(ulong)uint_var3;\n        memmove(&file_ptr->_flags + (long)(FILE **)((long)char_ptr1 + (long)char_pointer) * 2,\n                &file_ptr->_IO_read_ptr + (long)char_ptr1,(long)(int_var4 - int_var3) << 3);\n        memcpy(&file_ptr->_flags + (long)char_ptr1 * 2,undefined_pointer1,size_var);\n        free(undefined_pointer1);\n        free(byte_pointer2);\n        fclose(stream);\n        uint_var = (int)undefined_pointer7 + 1;\n        char_ptr1 = (char *)(FILE **)((long)char_ptr1 + (long)char_pointer);\n        undefined_pointer5 = undefined_pointer6;\n        undefined_pointer6 = undefined_pointer1;\n        if ((int)uint_var3 <= (int)uint_var) break;\n      }\n      else {\nLAB_00102c30:\n        if (int_var4 <= int_var3 + 1) break;\nLAB_00102c3a:\n        uint_var = int_var3 + 1;\n        undefined_pointer7 = undefined_pointer5;\n      }\n      undefined_pointer5 = (undefined **)(ulong)uint_var;\n    } while( true );\n  }\n  int_var2 = bfd_init();\n  if (int_var2 != 0x118) {\n    ulong_var1 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n    FUN_00103bd0(ulong_var1);\n    goto switchD_00102d16_caseD_43;\n  }\n  char_pointer = \"x86_64-pc-linux-gnu\";\n  char_var = bfd_set_default_target();\n  if (char_var == '\\0') {\n    uint_var2 = bfd_get_error();\n    char_ptr1 = (char *)bfd_errmsg(uint_var2);\n    ulong_var1 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    FUN_00103bd0(ulong_var1,\"x86_64-pc-linux-gnu\",char_ptr1);\n    goto switchD_00102d16_caseD_61;\n  }\n  undefined_pointer5 = &PTR_s_addresses_001061e0;\n  undefined_pointer7 = (undefined **)0x0;\n  char_ptr1 = \"ab:Ce:rRsfHhij:pVv\";\n  undefined_pointer6 = (undefined **)0x0;\n  char_pointer = (char *)(undefined **)0x0;\nswitchD_00102d16_caseD_0:\n  do {\n    uint_var2 = getopt_long(file_ptr2,file_ptr,char_ptr1,undefined_pointer5,0);\n    switch(uint_var2) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 99:\n    case 100:\n    case 0x67:\n    case 0x6b:\n    case 0x6c:\n    case 0x6d:\n    case 0x6e:\n    case 0x6f:\n    case 0x71:\n    case 0x74:\n    case 0x75:\n      FUN_001023e1(_stderr,1);\n    case 0x6a:\n      undefined_pointer6 = _optarg;\n      break;\n    case 0x43:\nswitchD_00102d16_caseD_43:\n      stream = (FILE *)&optarg;\n      DAT_00106434 = '\\x01';\n      if (_optarg != (undefined **)0x0) {\n        int_var2 = cplus_demangle_name_to_style();\n        if (int_var2 == 0) goto LAB_0010339f;\n        cplus_demangle_set_style();\n      }\n      break;\n    case 0x48:\n    case 0x68:\n      FUN_001023e1(_stdout,0);\nLAB_0010339f:\n      char_pointer = *(char **)stream;\n      char_ptr3 = \"unknown demangling style `%s\\'\";\nLAB_001033ae:\n      ulong_var1 = dcgettext(0,char_ptr3,5);\n      FUN_00103bd0(ulong_var1,char_pointer);\nswitchD_00102d16_caseD_72:\n      DAT_001061d0 = DAT_001061d0 | 0x40000;\n      break;\n    case 0x52:\n      DAT_001061d0 = DAT_001061d0 & 0xfffbffff;\n      break;\n    case 0x56:\n    case 0x76:\n      printf(\"GNU %s %s\\n\",\"addr2line\",\"(GNU Binutils for Debian) 2.40\");\n      char_pointer = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      printf(char_pointer);\n      char_pointer = (char *)dcgettext(0,\n                                  \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      printf(char_pointer);\n                    \n      exit(0);\n    case 0x61:\nswitchD_00102d16_caseD_61:\n      DAT_00106435 = '\\x01';\n      break;\n    case 0x62:\n      undefined_pointer7 = _optarg;\n      break;\n    case 0x65:\n      char_pointer = (char *)_optarg;\n      break;\n    case 0x66:\n      DAT_00106432 = '\\x01';\n      break;\n    case 0x69:\n      DAT_00106430 = '\\x01';\n      break;\n    case 0x70:\n      DAT_00106431 = '\\x01';\n      break;\n    case 0x72:\n      goto switchD_00102d16_caseD_72;\n    case 0x73:\n      goto switchD_00102d16_caseD_73;\n    default:\n      DAT_00106428 = (char **)(&file_ptr->_flags + (long)_optind * 2);\n      DAT_00106420 = (int)file_ptr2 - _optind;\n      if ((undefined **)char_pointer == (undefined **)0x0) {\n        char_pointer = \"a.out\";\n      }\n      int_var2 = stat(char_pointer,&stat_var1);\n      if (int_var2 < 0) {\n        int_pointer = __errno_location();\n        char_ptr3 = \"\\'%s\\': No such file\";\n        if (*int_pointer != 2) {\n          char_ptr3 = strerror(*int_pointer);\n          ulong_var1 = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n          FUN_00102620(ulong_var1,char_pointer,char_ptr3);\n          return 1;\n        }\nLAB_001039cd:\n        ulong_var1 = dcgettext(0,char_ptr3,5);\n        FUN_00102620(ulong_var1,char_pointer);\n        return 1;\n      }\n      if ((stat_var1.st_mode & 0xf000) == 0x4000) {\n        char_ptr3 = \"Warning: \\'%s\\' is a directory\";\n        goto LAB_001039cd;\n      }\n      char_ptr3 = \"Warning: \\'%s\\' is not an ordinary file\";\n      if ((stat_var1.st_mode & 0xf000) != 0x8000) goto LAB_001039cd;\n      char_ptr3 = \"Warning: \\'%s\\' has negative size, probably it is too large\";\n      if (stat_var1.st_size < 0) goto LAB_001039cd;\n      if (stat_var1.st_size == 0) {\n        return 1;\n      }\n      file_ptr = (FILE *)bfd_openr(char_pointer,undefined_pointer7);\n      if (file_ptr == (FILE *)0x0) {\n        FUN_00103c70(char_pointer);\n        xexit(1);\n        goto LAB_00103a85;\n      }\n      uint_pointer = (uint *)((long)&file_ptr->_IO_buf_end + 4);\n      *uint_pointer = *uint_pointer | 0x8000;\n      char_var = bfd_check_format(file_ptr,2);\n      if (char_var != '\\0') {\n        char_ptr3 = \"%s: cannot get addresses from archive\";\n        goto LAB_001033ae;\n      }\n      char_var = bfd_check_format_matches(file_ptr,1,&long_ptr2);\n      if (char_var == '\\0') {\n        FUN_00103c70(*(long **)file_ptr);\n        int_var2 = bfd_get_error();\n        if (int_var2 == 0xd) {\n          file_ptr = (FILE *)0x1040e1;\n          fflush(_stdout);\n          long_ptr = DAT_00106438;\n          char_pointer = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n          fprintf(_stderr,char_pointer,long_ptr);\n          for (long_ptr = long_ptr2; *long_ptr != 0; long_ptr = long_ptr + 1) {\n            fprintf(_stderr,\" %s\");\n          }\n          free(long_ptr2);\n          fputc(10,_stderr);\n        }\n        goto LAB_00103801;\n      }\n      undefined_pointer1 = undefined_pointer6;\n      if ((undefined_pointer6 != (undefined **)0x0) &&\n         (undefined_pointer1 = (undefined **)bfd_get_section_by_name(file_ptr), undefined_pointer1 == (undefined **)0x0))\n      {\n        ulong_var1 = dcgettext(0,\"%s: cannot find section %s\",5);\n        FUN_00103bd0(ulong_var1,char_pointer,undefined_pointer6);\n        goto LAB_0010399c;\n      }\n      undefined_pointer6 = undefined_pointer1;\n      if ((*(byte *)((long)&file_ptr->_IO_buf_end + 4) & 0x10) == 0) goto LAB_00102ecd;\n      long_var2 = (**(code **)(file_ptr->_IO_read_ptr + 0x1f8))(file_ptr);\n      if (long_var2 == 0) {\n        long_var2 = (**(code **)(file_ptr->_IO_read_ptr + 0x350))(file_ptr);\n        if (-1 < long_var2) {\n          DAT_00106418 = (void *)xmalloc(long_var2);\n          DAT_001063e8 = (**(code **)(file_ptr->_IO_read_ptr + 0x358))(file_ptr);\n          if (-1 < DAT_001063e8) goto LAB_00102ebf;\n        }\n      }\n      else if (-1 < long_var2) {\n        DAT_00106418 = (void *)xmalloc(long_var2);\n        DAT_001063e8 = (**(code **)(file_ptr->_IO_read_ptr + 0x200))(file_ptr);\n        if (-1 < DAT_001063e8) {\n          if (DAT_001063e8 == 0) goto LAB_0010380b;\n          goto LAB_00102ebf;\n        }\n      }\n      FUN_00103c70(*(long **)file_ptr);\nLAB_00103801:\n      xexit(1);\nLAB_0010380b:\n      long_var2 = (**(code **)(file_ptr->_IO_read_ptr + 0x350))(file_ptr);\n      if (0 < long_var2) {\n        free(DAT_00106418);\n        DAT_00106418 = (void *)xmalloc(long_var2);\n        DAT_001063e8 = (**(code **)(file_ptr->_IO_read_ptr + 0x358))(file_ptr);\n      }\nLAB_00102ebf:\n      if (DAT_001063e8 < 1) {\n        free(DAT_00106418);\n        DAT_00106418 = (void *)0x0;\n      }\nLAB_00102ecd:\n      undefined_pointer5 = (undefined **)(ulong)DAT_00106420;\n      stream = (FILE *)&DAT_0010400a;\n      if (DAT_00106420 == 0) goto LAB_00103065;\nLAB_00102ee7:\n      if ((int)DAT_00106420 < 1) {\nLAB_0010308a:\n        free(DAT_00106418);\n        DAT_00106418 = (void *)0x0;\n        bfd_close(file_ptr);\n        return 0;\n      }\n      DAT_00106420 = DAT_00106420 - 1;\n      stat_ptr = (stat *)*DAT_00106428;\n      DAT_00106428 = DAT_00106428 + 1;\n      do {\n        byte_var2 = *(byte *)&stat_ptr->st_dev;\n        ulong_var = (ulong)byte_var2;\n        ushort_var = *(ushort *)(&_sch_istable + ulong_var * 2);\n        stat_ptr2 = stat_ptr;\n        while ((ushort_var & 0x40) != 0) {\n          byte_var2 = *(byte *)((long)&stat_ptr2->st_dev + 1);\n          ulong_var = (ulong)byte_var2;\n          stat_ptr2 = (stat *)((long)&stat_ptr2->st_dev + 1);\n          ushort_var = *(ushort *)(&_sch_istable + ulong_var * 2);\n        }\n        if ((((ushort_var & 4) == 0) && (byte_var2 != 0)) &&\n           ((stat_ptr3 = stat_ptr2, 5 < (byte)((&_sch_toupper)[ulong_var] + 0xbf) ||\n            (char_pointer = strchr((char *)stat_ptr2,0x2b), char_pointer != (char *)0x0)))) {\n          while( true ) {\n            byte_var2 = *(byte *)&stat_ptr3->st_dev;\n            stat_ptr = stat_ptr3;\n            if (((byte_var2 == 0) || ((*(ushort *)(&_sch_istable + (ulong)byte_var2 * 2) & 0x40) != 0)) ||\n               (byte_var2 == 0x2b)) break;\n            stat_ptr3 = (stat *)((long)&stat_ptr3->st_dev + 1);\n          }\n          while (((&_sch_istable)[(ulong)*(byte *)&stat_ptr->st_dev * 2] & 0x40) != 0) {\n            stat_ptr = (stat *)((long)&stat_ptr->st_dev + 1);\n          }\n          ulong_var = 0;\n          if (*(byte *)&stat_ptr->st_dev == 0x2b) {\n            ulong_var = strtoul((char *)((long)&stat_ptr->st_dev + 1),(char **)0x0,0);\n          }\n          void_pointer = DAT_00106418;\n          long_var2 = DAT_001063e8;\n          *(undefined *)&stat_ptr3->st_dev = 0;\n          for (long_var3 = 0; long_var3 < long_var2; long_var3 = long_var3 + 1) {\n            long_var = *(long *)((long)void_pointer + long_var3 * 8);\n            int_var2 = strcmp(*(char **)(long_var + 8),(char *)stat_ptr2);\n            if (int_var2 == 0) {\n              undefined_pointer5 = (undefined **)((ulong)undefined_pointer5 & 0xffffffff);\n              DAT_00106410 = (undefined *)\n                             (ulong_var + *(long *)(long_var + 0x10) +\n                             *(long *)(*(long *)(long_var + 0x20) + 0x30));\n              goto LAB_00102f4b;\n            }\n          }\n          undefined_pointer5 = (undefined **)((ulong)undefined_pointer5 & 0xffffffff);\n          for (long_var2 = 0; long_var2 < DAT_001063e8; long_var2 = long_var2 + 1) {\n            char_pointer = (char *)bfd_demangle(file_ptr,*(undefined8 *)\n                                                    (*(long *)((long)DAT_00106418 + long_var2 * 8) + 8)\n                                           ,DAT_001061d0);\n            if ((char_pointer != (char *)0x0) && (int_var2 = strcmp(char_pointer,(char *)stat_ptr2), int_var2 == 0))\n            {\n              free(char_pointer);\n              long_var2 = *(long *)((long)DAT_00106418 + long_var2 * 8);\n              DAT_00106410 = (undefined *)\n                             (*(long *)(long_var2 + 0x10) + ulong_var +\n                             *(long *)(*(long *)(long_var2 + 0x20) + 0x30));\n              goto LAB_00102f4b;\n            }\n            free(char_pointer);\n          }\n          DAT_00106410 = (undefined *)0x0;\n        }\n        else {\n          DAT_00106410 = (undefined *)bfd_scan_vma(stat_ptr,0,0x10);\n        }\nLAB_00102f4b:\n        if (*(int *)(file_ptr->_IO_read_ptr + 8) == 5) {\n          long_var2 = *(long *)(file_ptr->_IO_read_ptr + 0x380);\n          ulong_var = 1L << (*(char *)(*(long *)(long_var2 + 0x340) + 10) - 1U & 0x3f);\n          DAT_00106410 = (undefined *)((ulong)DAT_00106410 & ulong_var * 2 - 1);\n          if ((*(byte *)(long_var2 + 0x3f1) & 1) != 0) {\n            DAT_00106410 = (undefined *)(((ulong)DAT_00106410 ^ ulong_var) - ulong_var);\n          }\n        }\n        if (DAT_00106435 != '\\0') {\n          printf(\"0x\");\n          bfd_fprintf_vma(file_ptr,_stdout,DAT_00106410);\n          if (DAT_00106431 == '\\0') {\n            putchar(10);\n          }\n          else {\n            printf(\": \");\n          }\n        }\n        char_ptr1 = &stdout;\n        DAT_00106408 = '\\0';\n        if (undefined_pointer6 == (undefined **)0x0) {\n          bfd_map_over_sections(file_ptr,FUN_00102540,0);\nLAB_00102fcf:\n          if (DAT_00106408 != '\\0') {\n            do {\n              if (DAT_00106432 != '\\0') {\n                undefined_pointer1 = DAT_00106400;\n                if (DAT_00106400 == (undefined **)0x0) {\nLAB_00103a4a:\n                  undefined_pointer3 = (undefined **)&DAT_0010400a;\n                }\n                else {\n                  if (*(char *)DAT_00106400 == '\\0') {\n                    undefined_pointer1 = (undefined **)0x0;\n                    goto LAB_00103a4a;\n                  }\n                  char_pointer = (char *)DAT_00106400;\n                  file_ptr2 = file_ptr;\n                  if (DAT_00106434 == '\\0') {\nLAB_001031f4:\n                    undefined_pointer1 = (undefined **)0x0;\n                    undefined_pointer3 = (undefined **)char_pointer;\n                    file_ptr = file_ptr2;\n                  }\n                  else {\nLAB_0010399c:\n                    undefined_pointer1 = (undefined **)bfd_demangle(file_ptr2,char_pointer,DAT_001061d0);\n                    undefined_pointer3 = undefined_pointer1;\n                    file_ptr = file_ptr2;\n                    if (undefined_pointer1 == (undefined **)0x0) goto LAB_001031f4;\n                  }\n                }\n                printf(\"%s\",undefined_pointer3);\n                if (DAT_00106431 == '\\0') {\n                  putchar(10);\n                }\n                else {\n                  char_pointer = (char *)dcgettext(0,&DAT_001040f1,5);\n                  printf(char_pointer);\n                }\n                free(undefined_pointer1);\n              }\n              file_ptr2 = DAT_001063f8;\n              if (DAT_00106433 == '\\0') {\n                if (DAT_001063f8 == (FILE *)0x0) {\n                  file_ptr2 = stream;\n                }\n              }\n              else if (DAT_001063f8 == (FILE *)0x0) {\n                file_ptr2 = (FILE *)&DAT_0010400a;\n              }\n              else {\n                char_pointer = strrchr((char *)DAT_001063f8,0x2f);\n                if (char_pointer != (char *)0x0) {\n                  file_ptr2 = (FILE *)(char_pointer + 1);\n                  DAT_001063f8 = file_ptr2;\n                }\n              }\n              printf(\"%s:\",file_ptr2);\n              file_ptr2 = file_ptr;\n              if (DAT_001063f4 == 0) {\nLAB_00103a85:\n                puts(\"?\");\n                file_ptr = file_ptr2;\n              }\n              else if (DAT_001063f0 == 0) {\n                printf(\"%u\\n\");\n              }\n              else {\n                printf(\"%u (discriminator %u)\\n\");\n              }\n              if (DAT_00106430 == '\\0') {\nLAB_0010304c:\n                DAT_00106408 = '\\0';\n                goto LAB_00103053;\n              }\n              DAT_00106408 = (**(code **)(file_ptr->_IO_read_ptr + 600))\n                                       (file_ptr,&DAT_001063f8,&DAT_00106400,&DAT_001063f4);\n              undefined_pointer1 = DAT_00106400;\n              if (DAT_00106408 == '\\0') goto LAB_00103053;\n              while (DAT_00106400 = undefined_pointer1, DAT_00106431 == '\\0') {\n                if (DAT_00106432 != '\\0') {\n                  undefined_pointer3 = undefined_pointer1;\n                  if (undefined_pointer1 == (undefined **)0x0) {\nLAB_00103b7b:\n                    undefined_pointer4 = (undefined **)&DAT_0010400a;\n                  }\n                  else {\n                    if (*(char *)undefined_pointer1 == '\\0') {\n                      undefined_pointer3 = (undefined **)0x0;\n                      goto LAB_00103b7b;\n                    }\n                    if ((DAT_00106434 == '\\0') ||\n                       (undefined_pointer3 = (undefined **)bfd_demangle(file_ptr,undefined_pointer1,DAT_001061d0),\n                       undefined_pointer4 = undefined_pointer3, undefined_pointer3 == (undefined **)0x0)) {\n                      undefined_pointer3 = (undefined **)0x0;\n                      undefined_pointer4 = undefined_pointer1;\n                    }\n                  }\n                  printf(\"%s\",undefined_pointer4);\n                  if (DAT_00106431 == '\\0') {\n                    putchar(10);\n                  }\n                  else {\n                    char_pointer = (char *)dcgettext(0,&DAT_001040f1,5);\n                    printf(char_pointer);\n                  }\n                  free(undefined_pointer3);\n                }\n                file_ptr2 = DAT_001063f8;\n                if (DAT_00106433 == '\\0') {\n                  if (DAT_001063f8 == (FILE *)0x0) {\n                    file_ptr2 = (FILE *)&DAT_0010400a;\n                  }\n                }\n                else if (DAT_001063f8 == (FILE *)0x0) {\n                  file_ptr2 = (FILE *)&DAT_0010400a;\n                }\n                else {\n                  char_pointer = strrchr((char *)DAT_001063f8,0x2f);\n                  if (char_pointer != (char *)0x0) {\n                    file_ptr2 = (FILE *)(char_pointer + 1);\n                    DAT_001063f8 = file_ptr2;\n                  }\n                }\n                printf(\"%s:\",file_ptr2);\n                if (DAT_001063f4 == 0) {\n                  puts(\"?\");\n                }\n                else if (DAT_001063f0 == 0) {\n                  printf(\"%u\\n\");\n                }\n                else {\n                  printf(\"%u (discriminator %u)\\n\");\n                }\n                if (DAT_00106430 == '\\0') goto LAB_0010304c;\n                DAT_00106408 = (**(code **)(file_ptr->_IO_read_ptr + 600))\n                                         (file_ptr,&DAT_001063f8,&DAT_00106400,&DAT_001063f4);\n                undefined_pointer1 = DAT_00106400;\n                if (DAT_00106408 == '\\0') {\n                  DAT_00106408 = '\\0';\n                  goto LAB_00103053;\n                }\n              }\n              char_pointer = (char *)dcgettext(0,\" (inlined by) \",5);\n              printf(char_pointer);\n            } while( true );\n          }\n        }\n        else if (((*(byte *)((long)undefined_pointer6 + 0x24) & 1) != 0) && (DAT_00106410 < undefined_pointer6[8])) {\n          DAT_00106408 = (**(code **)(file_ptr->_IO_read_ptr + 0x240))\n                                   (file_ptr,DAT_00106418,undefined_pointer6,DAT_00106410,&DAT_001063f8,\n                                    &DAT_00106400,&DAT_001063f4,&DAT_001063f0);\n          goto LAB_00102fcf;\n        }\n        if (DAT_00106432 != '\\0') {\n          if (DAT_00106431 == '\\0') {\n            puts(\"??\");\n          }\n          else {\n            printf(\"?? \");\n          }\n        }\n        puts(\"??:0\");\nLAB_00103053:\n        fflush(*(FILE **)char_ptr1);\n        if ((int)undefined_pointer5 != 0) goto LAB_00102ee7;\nLAB_00103065:\n        char_pointer = fgets((char *)&stat_var1,100,_stdin);\n        stat_ptr = &stat_var1;\n        if (char_pointer == (char *)0x0) goto LAB_0010308a;\n      } while( true );\n    }\n  } while( true );\nLAB_00102970:\n  byte_var2 = byte_pointer4[1];\n  byte_pointer4 = byte_pointer4 + 1;\n  if (byte_var2 == 0) goto LAB_001030bb;\n  goto LAB_00102980;\nswitchD_00102d16_caseD_73:\n  DAT_00106433 = '\\x01';\n  goto switchD_00102d16_caseD_0;\n}\n\n",
            "current_name": "analyze_binary_file_001027b0",
            "entrypoint": "0x001027b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001027b0": "analyze_binary_file_001027b0",
                "__ptr": "byte_pointer3",
                "__s": "byte_pointer2",
                "__s_00": "stat_ptr2",
                "__stream": "stream",
                "bVar10": "byte_var2",
                "bVar3": "byte_var",
                "bVar6": "bool_var1",
                "bVar7": "bool_var2",
                "bVar8": "bool_var3",
                "cVar11": "char_var",
                "iVar12": "int_var1",
                "iVar14": "int_var2",
                "iVar23": "int_var2",
                "iVar34": "int_var3",
                "iVar36": "int_var4",
                "lVar20": "long_var2",
                "lVar26": "long_var3",
                "lVar30": "long_var3",
                "lVar5": "long_var",
                "local_118": "long_var4",
                "local_120": "size_var",
                "local_140": "undefined_pointer7",
                "local_148": "undefined_pointer6",
                "local_c8": "stat_var1",
                "local_d0": "long_ptr2",
                "pFVar19": "file_ptr",
                "pFVar27": "file_ptr2",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_pointer1",
                "pbVar29": "byte_pointer4",
                "pbVar31": "byte_pointer5",
                "pcVar28": "char_pointer",
                "pcVar32": "char_ptr3",
                "piVar23": "int_pointer",
                "plVar26": "long_ptr",
                "ppuVar16": "undefined_pointer1",
                "ppuVar24": "undefined_pointer3",
                "ppuVar33": "undefined_pointer4",
                "psVar21": "stat_ptr",
                "psVar35": "stat_ptr3",
                "puVar18": "undefined_pointer",
                "puVar2": "uint_pointer",
                "pvVar9": "void_pointer",
                "sVar17": "size",
                "uVar13": "uint_var",
                "uVar15": "uint_var2",
                "uVar22": "ulong_var1",
                "uVar25": "ulong_var",
                "uVar37": "uint_var3",
                "uVar4": "ushort_var",
                "unaff_R12": "undefined_pointer5",
                "unaff_RBP": "char_ptr1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bd0": {
            "additional_data": {
                "DAT_00106438": {
                    "data_variable": 1
                },
                "FUN_001025c0": {
                    "process_and_copy_buffer": 1,
                    "process_data": 1,
                    "update_buffer_function": 1
                },
                "FUN_00103bd0": {
                    "decode_and_print_error": 3,
                    "decode_and_print_error_message": 1,
                    "decode_binary_function": 2,
                    "decompiled_function": 1,
                    "process_binary": 1,
                    "process_binary_data": 1,
                    "process_error": 2
                },
                "_stderr": {
                    "stderr": 1
                },
                "_stdout": {
                    "stdout": 1
                },
                "iVar1": {
                    "bfd_error": 5,
                    "error": 10,
                    "error_code": 10,
                    "error_status": 2
                },
                "in_AL": {
                    "boolean_flag": 1,
                    "condition": 3,
                    "condition_check": 1,
                    "flag": 19,
                    "input_flag": 3,
                    "is_error": 1,
                    "is_true": 1
                },
                "in_R10": {
                    "additional_info": 4,
                    "additional_param": 5,
                    "arg_7": 1,
                    "extra_argument": 1,
                    "flag_r10": 1,
                    "format_param": 1,
                    "input_register": 1,
                    "loop_counter": 1,
                    "param7": 1,
                    "param_r10": 1,
                    "parameter": 1,
                    "parameter10": 1,
                    "register_10": 2,
                    "register_r10": 1,
                    "some_other_param": 1,
                    "unused_parameter": 1
                },
                "lVar3": {
                    "cause_of_error": 2,
                    "condition": 1,
                    "error_code": 2,
                    "error_code_flag": 1,
                    "error_flag": 1,
                    "error_line": 1,
                    "exit_code": 1,
                    "exit_status": 1,
                    "file_open_result": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag_error": 1,
                    "has_error": 1,
                    "result": 6,
                    "return_value": 6,
                    "status": 1,
                    "success": 1,
                    "success_flag": 1
                },
                "local_18": {
                    "condition8": 1,
                    "error8_copy": 1,
                    "error_code_8_copy": 1,
                    "input_8_copy": 1,
                    "input_param8_copy": 1,
                    "input_param_8": 1,
                    "local_error_code8": 1,
                    "local_input8": 2,
                    "local_input_8": 1,
                    "local_input_param_8": 1,
                    "local_param8": 1,
                    "local_param_8": 3,
                    "local_var13": 1,
                    "local_var18": 1,
                    "local_var8": 1,
                    "local_var_16": 1,
                    "local_variable_14": 1,
                    "local_variable_17": 1,
                    "output_param_13": 1,
                    "param_8_copy": 1,
                    "temp_input_param8": 1,
                    "temp_param_8": 1,
                    "var_8_local": 1
                },
                "local_28": {
                    "condition7": 1,
                    "error7_copy": 1,
                    "error_code_7_copy": 1,
                    "input_7_copy": 1,
                    "input_param7_copy": 1,
                    "input_param_7": 1,
                    "local_error_code7": 1,
                    "local_input7": 2,
                    "local_input_7": 1,
                    "local_input_param_7": 1,
                    "local_param7": 1,
                    "local_param_7": 3,
                    "local_var12": 1,
                    "local_var28": 1,
                    "local_var7": 1,
                    "local_var_15": 1,
                    "local_variable_13": 1,
                    "local_variable_16": 1,
                    "output_param_12": 1,
                    "param_7_copy": 1,
                    "temp_input_param7": 1,
                    "temp_param_7": 1,
                    "var_7_local": 1
                },
                "local_38": {
                    "condition6": 1,
                    "error6_copy": 1,
                    "error_code_6_copy": 1,
                    "input_6_copy": 1,
                    "input_param6_copy": 1,
                    "input_param_6": 1,
                    "local_error_code6": 1,
                    "local_input6": 2,
                    "local_input_6": 1,
                    "local_input_param_6": 1,
                    "local_param6": 1,
                    "local_param_6": 3,
                    "local_var11": 1,
                    "local_var38": 1,
                    "local_var6": 1,
                    "local_var_14": 1,
                    "local_variable_12": 1,
                    "local_variable_15": 1,
                    "output_param_11": 1,
                    "param_6_copy": 1,
                    "temp_input_param6": 1,
                    "temp_param_6": 1,
                    "var_6_local": 1
                },
                "local_48": {
                    "condition5": 1,
                    "error5_copy": 1,
                    "error_code_5_copy": 1,
                    "input_5_copy": 1,
                    "input_param5_copy": 1,
                    "input_param_5": 1,
                    "local_error_code5": 1,
                    "local_input5": 2,
                    "local_input_5": 1,
                    "local_input_param_5": 1,
                    "local_param5": 1,
                    "local_param_5": 3,
                    "local_var10": 1,
                    "local_var48": 1,
                    "local_var5": 1,
                    "local_var_13": 1,
                    "local_variable_11": 1,
                    "local_variable_14": 1,
                    "output_param_10": 1,
                    "param_5_copy": 1,
                    "temp_input_param5": 1,
                    "temp_param_5": 1,
                    "var_5_local": 1
                },
                "local_58": {
                    "condition4": 1,
                    "error4_copy": 1,
                    "error_code_4_copy": 1,
                    "input_4_copy": 1,
                    "input_param4_copy": 1,
                    "input_param_4": 1,
                    "local_error_code4": 1,
                    "local_input4": 2,
                    "local_input_4": 1,
                    "local_input_param_4": 1,
                    "local_param4": 1,
                    "local_param_4": 3,
                    "local_var4": 1,
                    "local_var58": 1,
                    "local_var9": 1,
                    "local_var_12": 1,
                    "local_variable_10": 1,
                    "local_variable_13": 1,
                    "output_param_9": 1,
                    "param_4_copy": 1,
                    "temp_input_param4": 1,
                    "temp_param_4": 1,
                    "var_4_local": 1
                },
                "local_68": {
                    "condition3": 1,
                    "error3_copy": 1,
                    "error_code_3_copy": 1,
                    "input_3_copy": 1,
                    "input_param3_copy": 1,
                    "input_param_3": 1,
                    "local_error_code3": 1,
                    "local_input3": 2,
                    "local_input_3": 1,
                    "local_input_param_3": 1,
                    "local_param3": 1,
                    "local_param_3": 3,
                    "local_var3": 1,
                    "local_var68": 1,
                    "local_var8": 1,
                    "local_var_11": 1,
                    "local_variable_12": 1,
                    "local_variable_9": 1,
                    "output_param_8": 1,
                    "param_3_copy": 1,
                    "temp_input_param3": 1,
                    "temp_param_3": 1,
                    "var_3_local": 1
                },
                "local_78": {
                    "condition2": 1,
                    "error2_copy": 1,
                    "error_code_2_copy": 1,
                    "input_2_copy": 1,
                    "input_param2_copy": 1,
                    "input_param_2": 1,
                    "local_error_code2": 1,
                    "local_input2": 2,
                    "local_input_2": 1,
                    "local_input_param_2": 1,
                    "local_param2": 1,
                    "local_param_2": 3,
                    "local_var2": 1,
                    "local_var7": 1,
                    "local_var78": 1,
                    "local_var_10": 1,
                    "local_variable_11": 1,
                    "local_variable_8": 1,
                    "output_param_7": 1,
                    "param_2_copy": 1,
                    "temp_input_param2": 1,
                    "temp_param_2": 1,
                    "var_2_local": 1
                },
                "local_88": {
                    "condition1": 1,
                    "error1_copy": 1,
                    "error_code_1_copy": 1,
                    "error_code_copy": 1,
                    "input_1_copy": 1,
                    "input_param1_copy": 1,
                    "input_param_1": 1,
                    "local_error_code1": 1,
                    "local_input1": 2,
                    "local_input_1": 1,
                    "local_input_param_1": 1,
                    "local_param1": 1,
                    "local_param_1": 3,
                    "local_var1": 1,
                    "local_var6": 1,
                    "local_var88": 1,
                    "local_var_9": 1,
                    "local_variable_10": 1,
                    "local_variable_7": 1,
                    "output_param_6": 1,
                    "param_1_copy": 1,
                    "temp_input_param1": 1,
                    "temp_param_1": 1,
                    "var_1_local": 1
                },
                "local_90": {
                    "buffer_param_5": 1,
                    "file_param_6": 1,
                    "local_address_param_14": 1,
                    "local_arg5": 1,
                    "local_argument5": 1,
                    "local_param14": 2,
                    "local_param5": 1,
                    "local_param6": 1,
                    "local_param_14": 3,
                    "local_ptr_5": 1,
                    "local_var5": 2,
                    "local_var90": 1,
                    "local_var_8": 1,
                    "local_variable_6": 1,
                    "local_variable_9": 1,
                    "output_param_5": 1,
                    "param14": 1,
                    "param14_copy": 2,
                    "param6_copy": 1,
                    "param_14_copy": 2,
                    "temp_param14": 1,
                    "temp_param6": 1,
                    "var_14_local": 1
                },
                "local_98": {
                    "buffer_param_4": 1,
                    "file_param_5": 1,
                    "local_address_param_13": 1,
                    "local_arg4": 1,
                    "local_argument4": 1,
                    "local_param13": 2,
                    "local_param4": 1,
                    "local_param5": 1,
                    "local_param_13": 3,
                    "local_ptr_4": 1,
                    "local_var4": 2,
                    "local_var98": 1,
                    "local_var_7": 1,
                    "local_variable_5": 1,
                    "local_variable_8": 1,
                    "output_param_4": 1,
                    "param13": 1,
                    "param13_copy": 2,
                    "param5_copy": 1,
                    "param_13_copy": 2,
                    "temp_param13": 1,
                    "temp_param5": 1,
                    "var_13_local": 1
                },
                "local_a0": {
                    "buffer_param_3": 1,
                    "file_param_4": 1,
                    "local_address_param_12": 1,
                    "local_arg3": 1,
                    "local_argument3": 1,
                    "local_param12": 2,
                    "local_param3": 1,
                    "local_param4": 1,
                    "local_param_12": 3,
                    "local_ptr_3": 1,
                    "local_var3": 2,
                    "local_var_6": 1,
                    "local_var_a0": 1,
                    "local_variable_4": 1,
                    "local_variable_7": 1,
                    "output_param_3": 1,
                    "param12": 1,
                    "param12_copy": 2,
                    "param4_copy": 1,
                    "param_12_copy": 2,
                    "temp_param12": 1,
                    "temp_param4": 1,
                    "var_12_local": 1
                },
                "local_a8": {
                    "buffer_param_2": 1,
                    "file_param_3": 1,
                    "local_address_param_11": 1,
                    "local_arg2": 1,
                    "local_argument2": 1,
                    "local_param11": 2,
                    "local_param2": 1,
                    "local_param3": 1,
                    "local_param_11": 3,
                    "local_ptr_2": 1,
                    "local_var2": 2,
                    "local_var_5": 1,
                    "local_var_a8": 1,
                    "local_variable_3": 1,
                    "local_variable_6": 1,
                    "output_param_2": 1,
                    "param11": 1,
                    "param11_copy": 2,
                    "param3_copy": 1,
                    "param_11_copy": 2,
                    "temp_param11": 1,
                    "temp_param3": 1,
                    "var_11_local": 1
                },
                "local_b0": {
                    "buffer_param_1": 1,
                    "file_param_2": 1,
                    "local_address_param_10": 1,
                    "local_arg1": 1,
                    "local_argument1": 1,
                    "local_param1": 1,
                    "local_param10": 2,
                    "local_param2": 1,
                    "local_param_10": 3,
                    "local_ptr_1": 1,
                    "local_var1": 2,
                    "local_var_4": 1,
                    "local_var_b0": 1,
                    "local_variable_2": 1,
                    "local_variable_5": 1,
                    "output_param_1": 1,
                    "param10": 1,
                    "param10_copy": 2,
                    "param2_copy": 1,
                    "param_10_copy": 2,
                    "temp_param10": 1,
                    "temp_param2": 1,
                    "var_10_local": 1
                },
                "local_b8": {
                    "buffer": 4,
                    "data_buffer": 1,
                    "local_array": 4,
                    "local_array_b8": 1,
                    "local_buffer": 7,
                    "local_data": 2,
                    "local_variable_1": 1,
                    "temp_buffer": 1,
                    "temporary_buffer": 4,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "local_array": 3,
                    "local_buffer": 16,
                    "local_buffer_2": 1,
                    "local_buffer_ptr": 1,
                    "local_var_2": 1,
                    "local_var_c8": 1,
                    "local_variable_4": 1,
                    "pointer_2": 1
                },
                "local_d0": {
                    "array": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "buffer": 6,
                    "buffer_pointer": 2,
                    "buffer_ptr": 3,
                    "data_pointer": 1,
                    "local_buffer": 1,
                    "local_data_ptr": 1,
                    "local_var_3": 1,
                    "local_var_d0": 1,
                    "local_variable_3": 1,
                    "pointer_1": 1,
                    "pointer_param": 1,
                    "stack_pointer": 1,
                    "stack_ptr": 2
                },
                "local_d4": {
                    "buffer_size": 1,
                    "copy_size": 1,
                    "count": 1,
                    "data_size": 1,
                    "local_buffer_offset": 1,
                    "local_var_d4": 1,
                    "local_variable_2": 1,
                    "size_2": 1
                },
                "local_d8": {
                    "array_size": 3,
                    "buffer_length": 2,
                    "buffer_size": 8,
                    "data_size": 1,
                    "length": 2,
                    "local_buffer_length": 1,
                    "local_var_1": 1,
                    "local_variable_1": 1,
                    "size": 6,
                    "size_1": 1,
                    "size_param": 1,
                    "stack_length": 1,
                    "stack_size": 1
                },
                "lvar3": {
                    "error_code": 1
                },
                "param_1": {
                    "arg1": 1,
                    "error1": 1,
                    "error_code": 3,
                    "error_code1": 1,
                    "error_code_1": 1,
                    "flag_param": 1,
                    "input1": 4,
                    "input_1": 5,
                    "input_param1": 4,
                    "input_param_1": 5,
                    "param1": 1,
                    "parameter_1": 1,
                    "value1": 1,
                    "var_1": 1
                },
                "param_10": {
                    "address_param_10": 1,
                    "arg_2": 1,
                    "argument2": 1,
                    "data2": 1,
                    "error_string": 1,
                    "file_param_2": 2,
                    "input_param10": 4,
                    "input_param2": 1,
                    "input_param_10": 3,
                    "param1": 1,
                    "param10": 4,
                    "param2": 3,
                    "param_10": 4,
                    "param_b": 1,
                    "ptr_1": 1,
                    "var_10": 1
                },
                "param_11": {
                    "address_param_11": 1,
                    "arg_3": 1,
                    "argument3": 1,
                    "data3": 1,
                    "file_param_3": 2,
                    "input_param11": 4,
                    "input_param3": 1,
                    "input_param_11": 3,
                    "param11": 4,
                    "param2": 1,
                    "param3": 3,
                    "param_11": 5,
                    "param_c": 1,
                    "ptr_2": 1,
                    "var_11": 1
                },
                "param_12": {
                    "address_param_12": 1,
                    "arg_4": 1,
                    "argument4": 1,
                    "data4": 1,
                    "file_param_4": 2,
                    "input_param12": 4,
                    "input_param4": 1,
                    "input_param_12": 3,
                    "param12": 4,
                    "param3": 1,
                    "param4": 3,
                    "param_12": 5,
                    "param_d": 1,
                    "ptr_3": 1,
                    "var_12": 1
                },
                "param_13": {
                    "address_param_13": 1,
                    "arg_5": 1,
                    "argument5": 1,
                    "data5": 1,
                    "file_param_5": 2,
                    "input_param13": 4,
                    "input_param5": 1,
                    "input_param_13": 3,
                    "param13": 4,
                    "param4": 1,
                    "param5": 3,
                    "param_13": 5,
                    "param_e": 1,
                    "ptr_4": 1,
                    "var_13": 1
                },
                "param_14": {
                    "address_param_14": 1,
                    "arg_6": 1,
                    "argument6": 1,
                    "data6": 1,
                    "file_param_6": 2,
                    "input_param14": 4,
                    "input_param6": 1,
                    "input_param_14": 3,
                    "param14": 4,
                    "param5": 1,
                    "param6": 3,
                    "param_14": 5,
                    "param_f": 1,
                    "ptr_5": 1,
                    "var_14": 1
                },
                "param_2": {
                    "arg2": 2,
                    "error2": 1,
                    "error_code2": 1,
                    "error_code_2": 1,
                    "input2": 4,
                    "input_2": 5,
                    "input_param": 1,
                    "input_param2": 4,
                    "input_param_2": 5,
                    "param2": 1,
                    "param_2": 2,
                    "parameter_2": 1,
                    "value2": 1,
                    "var_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "count_param": 1,
                    "error3": 1,
                    "error_code3": 1,
                    "error_code_3": 1,
                    "input3": 4,
                    "input_3": 5,
                    "input_param3": 4,
                    "input_param_3": 5,
                    "param3": 1,
                    "param_3": 2,
                    "parameter_3": 1,
                    "value3": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "error4": 1,
                    "error_code4": 1,
                    "error_code_4": 1,
                    "input4": 4,
                    "input_4": 5,
                    "input_param4": 4,
                    "input_param_4": 5,
                    "length_param": 1,
                    "param4": 1,
                    "param_4": 2,
                    "parameter_4": 1,
                    "value4": 1,
                    "var_4": 1
                },
                "param_5": {
                    "arg5": 2,
                    "error5": 1,
                    "error_code5": 1,
                    "error_code_5": 1,
                    "input5": 4,
                    "input_5": 5,
                    "input_param5": 4,
                    "input_param_5": 5,
                    "param5": 1,
                    "param_5": 2,
                    "parameter_5": 1,
                    "size_param": 1,
                    "value5": 1,
                    "var_5": 1
                },
                "param_6": {
                    "arg6": 2,
                    "error6": 1,
                    "error_code6": 1,
                    "error_code_6": 1,
                    "input6": 4,
                    "input_6": 5,
                    "input_param6": 4,
                    "input_param_6": 5,
                    "param6": 1,
                    "param_6": 2,
                    "parameter_6": 1,
                    "value6": 1,
                    "value_param": 1,
                    "var_6": 1
                },
                "param_7": {
                    "arg7": 2,
                    "error7": 1,
                    "error_code7": 1,
                    "error_code_7": 1,
                    "input7": 4,
                    "input_7": 5,
                    "input_param7": 4,
                    "input_param_7": 5,
                    "param7": 1,
                    "param_7": 2,
                    "parameter_7": 1,
                    "size_param_2": 1,
                    "value7": 1,
                    "var_7": 1
                },
                "param_8": {
                    "arg8": 2,
                    "error8": 1,
                    "error_code8": 1,
                    "error_code_8": 1,
                    "input8": 4,
                    "input_8": 5,
                    "input_param8": 4,
                    "input_param_8": 5,
                    "param8": 1,
                    "param_8": 2,
                    "parameter_8": 1,
                    "value8": 1,
                    "value_param_2": 1,
                    "var_8": 1
                },
                "param_9": {
                    "address_param_9": 1,
                    "arg9": 1,
                    "arg_1": 1,
                    "argument1": 1,
                    "data1": 1,
                    "file_param_1": 2,
                    "input_param1": 1,
                    "input_param9": 4,
                    "input_param_9": 3,
                    "param1": 3,
                    "param9": 3,
                    "param_9": 4,
                    "param_a": 1,
                    "param_pointer1": 1,
                    "param_ptr": 1,
                    "var_9": 1
                },
                "uVar2": {
                    "error_message": 28,
                    "error_msg": 3
                },
                "xexit": {
                    "clean_up": 1,
                    "cleanup_and_exit": 1,
                    "exit_function": 1
                }
            },
            "called": [
                "FUN_001025c0",
                "xexit"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid decode_and_print_error_message_00103bd0(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_4,\n                 undefined4 input_param_5,undefined4 input_6,undefined4 input_7,undefined4 input_param_8,\n                 undefined8 input_param9,undefined8 input_param_10,undefined8 input_param_11,undefined8 input_param_12,\n                 undefined8 input_param_13,undefined8 input_param_14)\n\n{\n  char flag;\n  int error;\n  undefined8 error_message;\n  long return_value;\n  undefined8 additional_param;\n  undefined4 buffer_size;\n  undefined4 buffer_size;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 local_param_10;\n  undefined8 local_param_11;\n  undefined8 local_param_12;\n  undefined8 local_param_13;\n  undefined8 local_param_14;\n  undefined4 local_param_1;\n  undefined4 local_param_2;\n  undefined4 local_param_3;\n  undefined4 local_param_4;\n  undefined4 local_param_5;\n  undefined4 local_param_6;\n  undefined4 local_param_7;\n  undefined4 local_param_8;\n  \n  if (flag != '\\0') {\n    local_param_1 = input_param_1;\n    local_param_2 = input_param_2;\n    local_param_3 = input_param_3;\n    local_param_4 = input_4;\n    local_param_5 = input_param_5;\n    local_param_6 = input_6;\n    local_param_7 = input_7;\n    local_param_8 = input_param_8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  buffer_size = 0x30;\n  local_param_10 = input_param_10;\n  local_param_11 = input_param_11;\n  local_param_12 = input_param_12;\n  local_param_13 = input_param_13;\n  local_param_14 = input_param_14;\n  FUN_001025c0(input_param9,&buffer_size);\n  return_value = 1;\n  xexit();\n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(stdout);\n  if (return_value != 0) {\n    fprintf(stderr,\"%s: %s: %s\\n\",DAT_00106438,return_value,error_message,additional_param);\n    return;\n  }\n  fprintf(stderr,\"%s: %s\\n\",DAT_00106438,error_message,additional_param);\n  return;\n}\n\n",
            "current_name": "decode_and_print_error_message_00103bd0",
            "entrypoint": "0x00103bd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bd0": "decode_and_print_error_message_00103bd0",
                "_stderr": "stderr",
                "_stdout": "stdout",
                "iVar1": "error",
                "in_AL": "flag",
                "in_R10": "additional_param",
                "lVar3": "return_value",
                "local_18": "local_param_8",
                "local_28": "local_param_7",
                "local_38": "local_param_6",
                "local_48": "local_param_5",
                "local_58": "local_param_4",
                "local_68": "local_param_3",
                "local_78": "local_param_2",
                "local_88": "local_param_1",
                "local_90": "local_param_14",
                "local_98": "local_param_13",
                "local_a0": "local_param_12",
                "local_a8": "local_param_11",
                "local_b0": "local_param_10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "buffer_size",
                "local_d8": "buffer_size",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_4",
                "param_5": "input_param_5",
                "param_6": "input_6",
                "param_7": "input_7",
                "param_8": "input_param_8",
                "param_9": "input_param9",
                "uVar2": "error_message",
                "xexit": "clean_up"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c70": {
            "additional_data": {
                "DAT_00106438": {
                    "application_name": 1
                },
                "FUN_00103c70": {
                    "handle_error": 1,
                    "print_bfd_error_message": 1,
                    "print_error": 3,
                    "print_error_details": 1,
                    "print_error_message": 25
                },
                "_stderr": {
                    "standard_error": 3
                },
                "_stdout": {
                    "standard_output": 3
                },
                "iVar1": {
                    "bfd_error": 1,
                    "error": 10,
                    "error_code": 15,
                    "error_flag": 1,
                    "error_status": 4
                },
                "in_R10": {
                    "additional_info": 16,
                    "additional_message": 2,
                    "additional_string": 1,
                    "some_argument": 1,
                    "unknown": 2,
                    "unknown_cause": 2,
                    "unknown_error": 1,
                    "unknown_value": 1,
                    "unspecified_argument": 1
                },
                "param_1": {
                    "error_cause": 2,
                    "error_code": 1,
                    "error_description": 5,
                    "error_message": 8,
                    "error_string": 2,
                    "error_type": 8,
                    "file_name": 2,
                    "filename": 3
                },
                "uVar2": {
                    "error_message": 23,
                    "error_message_text": 1,
                    "error_msg": 2,
                    "error_string": 5
                }
            },
            "called": [
                "bfd_get_error",
                "FUN_001023a0",
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00103c70(long error_type)\n\n{\n  int error_code;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error_code = bfd_get_error();\n  if (error_code == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error_code);\n  }\n  fflush(standard_output);\n  if (error_type != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_00106438,error_type,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_00106438,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00103c70",
            "entrypoint": "0x00103c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c70": "print_bfd_error_message_00103c70",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "iVar1": "error_code",
                "in_R10": "additional_info",
                "param_1": "error_type",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x00103cd0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "FUN_001026f0",
                "__cxa_finalize"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_001063e0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_001061c8);\n  FUNC_001026f0();\n  DAT_001063e0 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x00102760",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00102720"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00102720();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x001027a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_demangle": {
            "called": [
                "bfd_demangle"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n",
            "current_name": "bfd_demangle",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_00103c70"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fprintf_vma": {
            "called": [
                "bfd_fprintf_vma"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_fprintf_vma(void)\n\n{\n  bfd_fprintf_vma();\n  return;\n}\n\n",
            "current_name": "bfd_fprintf_vma",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_00103c70"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_section_by_name": {
            "called": [
                "bfd_get_section_by_name"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_get_section_by_name(void)\n\n{\n  bfd_get_section_by_name();\n  return;\n}\n\n",
            "current_name": "bfd_get_section_by_name",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_map_over_sections": {
            "called": [
                "bfd_map_over_sections"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "bfd_map_over_sections",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_scan_vma": {
            "called": [
                "bfd_scan_vma"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_scan_vma(void)\n\n{\n  bfd_scan_vma();\n  return;\n}\n\n",
            "current_name": "bfd_scan_vma",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_001023e1"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_name_to_style": {
            "called": [
                "cplus_demangle_name_to_style"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_name_to_style",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_set_style": {
            "called": [
                "cplus_demangle_set_style"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_set_style",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_001023e1",
                "FUN_001023a0",
                "FUN_001027b0"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "__libc_start_main",
                "FUN_001027b0"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_001027b0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x001026c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_001023e1",
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_001025c0",
                "FUN_001023a0",
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fgets": {
            "called": [
                "fgets"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * fgets(char *__s,int __n,FILE *__stream)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = fgets(__s,__n,__stream);\n  return pcVar1;\n}\n\n",
            "current_name": "fgets",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_001025c0",
                "FUN_001023e1",
                "FUN_001023a0",
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_001023e1",
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_001023e1",
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_001025c0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putchar": {
            "called": [
                "putchar"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "putchar",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "puts": {
            "called": [
                "puts"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n",
            "current_name": "puts",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strchr": {
            "called": [
                "strchr"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strchr",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strrchr": {
            "called": [
                "strrchr"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strrchr",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtoul": {
            "called": [
                "strtoul"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n",
            "current_name": "strtoul",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_001025c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00103bd0",
                "FUN_001027b0"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_001023a0",
            "FUN_001023e1",
            "FUN_00102540",
            "FUN_001025c0",
            "FUN_00102620",
            "FUN_001027b0",
            "FUN_00103bd0",
            "FUN_00103c70"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 99106
}