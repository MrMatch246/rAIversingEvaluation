{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_null_terminator_08000178",
            "code": "\nchar * find_null_terminator_08000178(char *string)\n\n{\n  char current_char;\n  char *next_character;\n  char *current_character;\n  \n  current_character = string;\n  do {\n    next_character = current_character + 1;\n    current_char = *current_character;\n    current_character = next_character;\n  } while (current_char != '\\0');\n  return next_character + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_null_terminator_08000178",
                "param_1": "string",
                "pcVar2": "next_character",
                "pcVar3": "current_character",
                "cVar1": "current_char"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_unsigned_multiply_08000190",
            "code": "\nulonglong calculate_unsigned_multiply_08000190(uint x,uint y,uint z,uint w)\n\n{\n  int shift;\n  byte carry;\n  uint result1;\n  uint result2;\n  uint partial_sum;\n  uint partial_sum2;\n  uint x_adjusted;\n  int x_shifted;\n  uint y_adjusted;\n  uint z_adjusted;\n  uint w_adjusted;\n  uint one;\n  bool less_than_adjusted;\n  bool overflow;\n  bool underflow;\n  \n  partial_sum2 = w ^ 0x80000000;\n  y_adjusted = y << 1;\n  w = w << 1;\n  less_than_adjusted = ((y ^ partial_sum2) & 0x7fffffff) == 0;\n  overflow = less_than_adjusted && x == z;\n  if (!less_than_adjusted || x != z) {\n    overflow = (y_adjusted | x) == 0;\n  }\n  if (!overflow) {\n    overflow = (w | z) == 0;\n  }\n  x_shifted = (int)y_adjusted >> 0x15;\n  if (!overflow) {\n    overflow = x_shifted == -1;\n  }\n  shift = (int)w >> 0x15;\n  if (!overflow) {\n    overflow = shift == -1;\n  }\n  if (overflow) {\n    if (x_shifted == -1 || shift == -1) {\n      y_adjusted = partial_sum2;\n      w_adjusted = z;\n      if (x_shifted == -1) {\n        y_adjusted = y;\n        w_adjusted = x;\n      }\n      if (x_shifted != -1 || shift != -1) {\n        z = w_adjusted;\n        partial_sum2 = y_adjusted;\n      }\n      overflow = (w_adjusted | y_adjusted << 0xc) == 0;\n      if (overflow) {\n        overflow = (z | partial_sum2 << 0xc) == 0;\n      }\n      if (overflow) {\n        overflow = y_adjusted == partial_sum2;\n      }\n      if (!overflow) {\n        y_adjusted = y_adjusted | 0x80000;\n      }\n      return CONCAT44(y_adjusted,w_adjusted);\n    }\n    if (((y ^ partial_sum2) & 0x7fffffff) != 0 || x != z) {\n      if ((y_adjusted | x) == 0) {\n        x = z;\n        y = partial_sum2;\n      }\n      return CONCAT44(y,x);\n    }\n    if (y != partial_sum2) {\n      return 0;\n    }\n    if (y_adjusted >> 0x15 == 0) {\n      overflow = (x & 0x80000000) != 0;\n      partial_sum2 = y * 2 + (uint)overflow;\n      if (CARRY4(y,y) || CARRY4(y * 2,(uint)overflow)) {\n        partial_sum2 = partial_sum2 | 0x80000000;\n      }\n      return CONCAT44(partial_sum2,x << 1);\n    }\n    if (y_adjusted < 0xffc00000) {\n      return CONCAT44(y + 0x100000,x);\n    }\n    y = y & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(y | 0x7ff00000) << 0x20;\n  }\n  y_adjusted = y_adjusted >> 0x15;\n  w = w >> 0x15;\n  w_adjusted = w - y_adjusted;\n  overflow = w_adjusted != 0;\n  if (w < y_adjusted) {\n    w_adjusted = -w_adjusted;\n  }\n  z_adjusted = x;\n  x_adjusted = y;\n  if (overflow && y_adjusted <= w) {\n    y_adjusted = y_adjusted + w_adjusted;\n    z_adjusted = z;\n    x_adjusted = partial_sum2;\n    z = x;\n    partial_sum2 = y;\n  }\n  if (0x36 < w_adjusted) {\n    return CONCAT44(x_adjusted,z_adjusted);\n  }\n  result2 = x_adjusted & 0xfffff | 0x100000;\n  if ((x_adjusted & 0x80000000) != 0) {\n    overflow = z_adjusted != 0;\n    z_adjusted = -z_adjusted;\n    result2 = -result2 - (uint)overflow;\n  }\n  x_adjusted = partial_sum2 & 0xfffff | 0x100000;\n  if ((partial_sum2 & 0x80000000) != 0) {\n    overflow = z != 0;\n    z = -z;\n    x_adjusted = -x_adjusted - (uint)overflow;\n  }\n  if (y_adjusted == w_adjusted) {\n    x_adjusted = x_adjusted ^ 0x100000;\n    if (y_adjusted == 0) {\n      result2 = result2 ^ 0x100000;\n      y_adjusted = 1;\n    }\n    else {\n      w_adjusted = w_adjusted - 1;\n    }\n  }\n  partial_sum2 = -w_adjusted + 0x20;\n  if ((int)w_adjusted < 0x21) {\n    one = z << (partial_sum2 & 0xff);\n    z = z >> (w_adjusted & 0xff);\n    result1 = z_adjusted + z;\n    partial_sum = x_adjusted << (partial_sum2 & 0xff);\n    partial_sum2 = result1 + partial_sum;\n    result2 = result2 + CARRY4(z_adjusted,z) + ((int)x_adjusted >> (w_adjusted & 0xff)) +\n            (uint)CARRY4(result1,partial_sum);\n  }\n  else {\n    one = x_adjusted << (-w_adjusted + 0x40 & 0xff);\n    if (z != 0) {\n      one = one | 2;\n    }\n    x_adjusted = (int)x_adjusted >> (w_adjusted - 0x20 & 0xff);\n    partial_sum2 = z_adjusted + x_adjusted;\n    result2 = result2 + ((int)x_adjusted >> 0x1f) + (uint)CARRY4(z_adjusted,x_adjusted);\n  }\n  y = result2 & 0x80000000;\n  w_adjusted = result2;\n  if ((int)result2 < 0) {\n    overflow = one == 0;\n    one = -one;\n    w_adjusted = -partial_sum2;\n    partial_sum2 = -(uint)!overflow - partial_sum2;\n    w_adjusted = -(uint)(overflow <= w_adjusted) - result2;\n  }\n  if (0xfffff < w_adjusted) {\n    z_adjusted = y_adjusted - 1;\n    if (0x1fffff < w_adjusted) {\n      z_adjusted = w_adjusted & 1;\n      w_adjusted = w_adjusted >> 1;\n      carry = (byte)partial_sum2;\n      partial_sum2 = (uint)(z_adjusted != 0) << 0x1f | partial_sum2 >> 1;\n      one = (uint)(carry & 1) << 0x1f | one >> 1;\n      z_adjusted = y_adjusted;\n      if (0xffbfffff < y_adjusted * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    overflow = 0x7fffffff < one;\n    if (one == 0x80000000) {\n      overflow = (partial_sum2 & 1) != 0;\n    }\n    return CONCAT44(w_adjusted + z_adjusted * 0x100000 + (uint)CARRY4(partial_sum2,(uint)overflow) | y,\n                    partial_sum2 + overflow);\n  }\n  less_than_adjusted = (one & 0x80000000) != 0;\n  one = one << 1;\n  z_adjusted = partial_sum2 * 2;\n  overflow = CARRY4(partial_sum2,partial_sum2);\n  partial_sum2 = partial_sum2 * 2 + (uint)less_than_adjusted;\n  w_adjusted = w_adjusted * 2 + (uint)(overflow || CARRY4(z_adjusted,(uint)less_than_adjusted));\n  z_adjusted = y_adjusted - 2;\n  if ((w_adjusted & 0x100000) != 0) goto LAB_080002a0;\n  x_adjusted = partial_sum2;\n  y_adjusted = w_adjusted;\n  if (w_adjusted == 0) {\n    x_adjusted = 0;\n    y_adjusted = partial_sum2;\n  }\n  x_shifted = LZCOUNT(y_adjusted);\n  if (w_adjusted == 0) {\n    x_shifted = x_shifted + 0x20;\n  }\n  w_adjusted = x_shifted - 0xb;\n  underflow = SBORROW4(w_adjusted,0x20);\n  partial_sum2 = x_shifted - 0x2b;\n  overflow = (int)partial_sum2 < 0;\n  less_than_adjusted = partial_sum2 == 0;\n  if ((int)w_adjusted < 0x20) {\n    underflow = SCARRY4(partial_sum2,0xc);\n    x_shifted = x_shifted + -0x1f;\n    overflow = x_shifted < 0;\n    less_than_adjusted = x_shifted == 0;\n    partial_sum2 = w_adjusted;\n    if (!less_than_adjusted && overflow == underflow) {\n      x_adjusted = y_adjusted << (w_adjusted & 0xff);\n      y_adjusted = y_adjusted >> (0xcU - x_shifted & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (less_than_adjusted || overflow != underflow) {\n    one = 0x20 - partial_sum2;\n  }\n  y_adjusted = y_adjusted << (partial_sum2 & 0xff);\n  if (less_than_adjusted || overflow != underflow) {\n    y_adjusted = y_adjusted | x_adjusted >> (one & 0xff);\n  }\n  if (less_than_adjusted || overflow != underflow) {\n    x_adjusted = x_adjusted << (partial_sum2 & 0xff);\n  }\nLAB_08000318:\n  if ((int)w_adjusted <= (int)z_adjusted) {\n    return CONCAT44(y_adjusted + (z_adjusted - w_adjusted) * 0x100000 | y,x_adjusted);\n  }\n  partial_sum2 = ~(z_adjusted - w_adjusted);\n  if ((int)partial_sum2 < 0x1f) {\n    x_shifted = partial_sum2 - 0x13;\n    if (x_shifted != 0 && x_shifted < 0 == SCARRY4(partial_sum2 - 0x1f,0xc)) {\n      return CONCAT44(result2,x_adjusted >> (0x20 - (0xcU - x_shifted) & 0xff) | y_adjusted << (0xcU - x_shifted & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    partial_sum2 = partial_sum2 + 1;\n    return CONCAT44(y | y_adjusted >> (partial_sum2 & 0xff),\n                    x_adjusted >> (partial_sum2 & 0xff) | y_adjusted << (0x20 - partial_sum2 & 0xff));\n  }\n  return CONCAT44(result2,y_adjusted >> (partial_sum2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_unsigned_multiply_08000190",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "iVar1": "shift",
                "bVar2": "carry",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "partial_sum",
                "uVar6": "partial_sum2",
                "uVar7": "x_adjusted",
                "iVar8": "x_shifted",
                "uVar9": "y_adjusted",
                "uVar10": "z_adjusted",
                "uVar11": "w_adjusted",
                "uVar12": "one",
                "bVar13": "less_than_adjusted",
                "bVar14": "overflow",
                "bVar15": "underflow"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "reverse_binary_operation_08000194",
            "code": "\nulonglong reverseBinaryOperation_08000194(uint operand1,uint operand2,uint operand3,uint operand4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp4 = operand2 << 1;\n  temp6 = operand4 << 1;\n  flag1 = ((operand2 ^ operand4) & 0x7fffffff) == 0;\n  flag2 = flag1 && operand1 == operand3;\n  if (!flag1 || operand1 != operand3) {\n    flag2 = (temp4 | operand1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (temp6 | operand3) == 0;\n  }\n  shift2 = (int)temp4 >> 0x15;\n  if (!flag2) {\n    flag2 = shift2 == -1;\n  }\n  shift1 = (int)temp6 >> 0x15;\n  if (!flag2) {\n    flag2 = shift1 == -1;\n  }\n  if (flag2) {\n    if (shift2 == -1 || shift1 == -1) {\n      temp6 = operand4;\n      temp4 = operand3;\n      if (shift2 == -1) {\n        temp6 = operand2;\n        temp4 = operand1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        operand3 = temp4;\n        operand4 = temp6;\n      }\n      flag2 = (temp4 | temp6 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (operand3 | operand4 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = temp6 == operand4;\n      }\n      if (!flag2) {\n        temp6 = temp6 | 0x80000;\n      }\n      return CONCAT44(temp6,temp4);\n    }\n    if (((operand2 ^ operand4) & 0x7fffffff) != 0 || operand1 != operand3) {\n      if ((temp4 | operand1) == 0) {\n        operand1 = operand3;\n        operand2 = operand4;\n      }\n      return CONCAT44(operand2,operand1);\n    }\n    if (operand2 != operand4) {\n      return 0;\n    }\n    if (temp4 >> 0x15 == 0) {\n      flag2 = (operand1 & 0x80000000) != 0;\n      temp6 = operand2 * 2 + (uint)flag2;\n      if (CARRY4(operand2,operand2) || CARRY4(operand2 * 2,(uint)flag2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,operand1 << 1);\n    }\n    if (temp4 < 0xffc00000) {\n      return CONCAT44(operand2 + 0x100000,operand1);\n    }\n    operand2 = operand2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(operand2 | 0x7ff00000) << 0x20;\n  }\n  temp4 = temp4 >> 0x15;\n  temp6 = temp6 >> 0x15;\n  temp7 = temp6 - temp4;\n  flag2 = temp7 != 0;\n  if (temp6 < temp4) {\n    temp7 = -temp7;\n  }\n  temp5 = operand1;\n  temp3 = operand2;\n  if (flag2 && temp4 <= temp6) {\n    temp4 = temp4 + temp7;\n    temp5 = operand3;\n    temp3 = operand4;\n    operand3 = operand1;\n    operand4 = operand2;\n  }\n  if (0x36 < temp7) {\n    return CONCAT44(temp3,temp5);\n  }\n  temp6 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    flag2 = temp5 != 0;\n    temp5 = -temp5;\n    temp6 = -temp6 - (uint)flag2;\n  }\n  temp3 = operand4 & 0xfffff | 0x100000;\n  if ((operand4 & 0x80000000) != 0) {\n    flag2 = operand3 != 0;\n    operand3 = -operand3;\n    temp3 = -temp3 - (uint)flag2;\n  }\n  if (temp4 == temp7) {\n    temp3 = temp3 ^ 0x100000;\n    if (temp4 == 0) {\n      temp6 = temp6 ^ 0x100000;\n      temp4 = 1;\n    }\n    else {\n      temp7 = temp7 - 1;\n    }\n  }\n  temp9 = -temp7 + 0x20;\n  if ((int)temp7 < 0x21) {\n    temp8 = operand3 << (temp9 & 0xff);\n    operand3 = operand3 >> (temp7 & 0xff);\n    temp1 = temp5 + operand3;\n    temp2 = temp3 << (temp9 & 0xff);\n    temp9 = temp1 + temp2;\n    temp6 = temp6 + CARRY4(temp5,operand3) + ((int)temp3 >> (temp7 & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp8 = temp3 << (-temp7 + 0x40 & 0xff);\n    if (operand3 != 0) {\n      temp8 = temp8 | 2;\n    }\n    temp3 = (int)temp3 >> (temp7 - 0x20 & 0xff);\n    temp9 = temp5 + temp3;\n    temp6 = temp6 + ((int)temp3 >> 0x1f) + (uint)CARRY4(temp5,temp3);\n  }\n  operand2 = temp6 & 0x80000000;\n  temp7 = temp6;\n  if ((int)temp6 < 0) {\n    flag2 = temp8 == 0;\n    temp8 = -temp8;\n    temp7 = -temp9;\n    temp9 = -(uint)!flag2 - temp9;\n    temp7 = -(uint)(flag2 <= temp7) - temp6;\n  }\n  if (0xfffff < temp7) {\n    temp5 = temp4 - 1;\n    if (0x1fffff < temp7) {\n      temp6 = temp7 & 1;\n      temp7 = temp7 >> 1;\n      carry = (byte)temp9;\n      temp9 = (uint)(temp6 != 0) << 0x1f | temp9 >> 1;\n      temp8 = (uint)(carry & 1) << 0x1f | temp8 >> 1;\n      temp5 = temp4;\n      if (0xffbfffff < temp4 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag2 = 0x7fffffff < temp8;\n    if (temp8 == 0x80000000) {\n      flag2 = (temp9 & 1) != 0;\n    }\n    return CONCAT44(temp7 + temp5 * 0x100000 + (uint)CARRY4(temp9,(uint)flag2) | operand2,\n                    temp9 + flag2);\n  }\n  flag1 = (temp8 & 0x80000000) != 0;\n  temp8 = temp8 << 1;\n  temp5 = temp9 * 2;\n  flag2 = CARRY4(temp9,temp9);\n  temp9 = temp9 * 2 + (uint)flag1;\n  temp7 = temp7 * 2 + (uint)(flag2 || CARRY4(temp5,(uint)flag1));\n  temp5 = temp4 - 2;\n  if ((temp7 & 0x100000) != 0) goto LAB_080002a0;\n  temp3 = temp9;\n  temp4 = temp7;\n  if (temp7 == 0) {\n    temp3 = 0;\n    temp4 = temp9;\n  }\n  shift2 = LZCOUNT(temp4);\n  if (temp7 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp9 = shift2 - 0xb;\n  flag3 = SBORROW4(temp9,0x20);\n  temp7 = shift2 - 0x2b;\n  flag2 = (int)temp7 < 0;\n  flag1 = temp7 == 0;\n  if ((int)temp9 < 0x20) {\n    flag3 = SCARRY4(temp7,0xc);\n    shift2 = shift2 + -0x1f;\n    flag2 = shift2 < 0;\n    flag1 = shift2 == 0;\n    temp7 = temp9;\n    if (!flag1 && flag2 == flag3) {\n      temp3 = temp4 << (temp9 & 0xff);\n      temp4 = temp4 >> (0xcU - shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp8 = 0x20 - temp7;\n  }\n  temp4 = temp4 << (temp7 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    temp4 = temp4 | temp3 >> (temp8 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp3 = temp3 << (temp7 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp9 <= (int)temp5) {\n    return CONCAT44(temp4 + (temp5 - temp9) * 0x100000 | operand2,temp3);\n  }\n  temp7 = ~(temp5 - temp9);\n  if ((int)temp7 < 0x1f) {\n    shift2 = temp7 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(temp7 - 0x1f,0xc)) {\n      return CONCAT44(temp6,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | temp4 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp7 = temp7 + 1;\n    return CONCAT44(operand2 | temp4 >> (temp7 & 0xff),\n                    temp3 >> (temp7 & 0xff) | temp4 << (0x20 - temp7 & 0xff));\n  }\n  return CONCAT44(temp6,temp4 >> (temp7 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "reverse_binary_operation_08000194",
                "param_1": "operand1",
                "param_2": "operand2",
                "param_3": "operand3",
                "param_4": "operand4",
                "iVar1": "shift1",
                "bVar2": "carry",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "shift2",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "uVar11": "temp8",
                "uVar12": "temp9",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "shift_and_combine_0800040c",
            "code": "\nulonglong shiftAndCombine_0800040c(uint input)\n\n{\n  uint result;\n  uint shiftCount;\n  int lzCount;\n  uint shiftAmount;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool carryFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  lzCount = LZCOUNT(input);\n  shiftAmount = lzCount + 0x15;\n  carryFlag = SBORROW4(shiftAmount,0x20);\n  shiftCount = lzCount - 0xb;\n  isNegative = (int)shiftCount < 0;\n  isZero = shiftCount == 0;\n  if (shiftAmount < 0x20) {\n    carryFlag = SCARRY4(shiftCount,0xc);\n    isNegative = false;\n    isZero = lzCount + 1 == 0;\n    shiftCount = shiftAmount;\n    if (!isZero && carryFlag == false) {\n      result = input << shiftAmount;\n      input = input >> (0xcU - (lzCount + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != carryFlag) {\n    remainingBits = 0x20 - shiftCount;\n  }\n  input = input << (shiftCount & 0xff);\n  if (isZero || isNegative != carryFlag) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != carryFlag) {\n    result = 0 << (shiftCount & 0xff);\n  }\nLAB_08000318:\n  if (shiftAmount < 0x433) {\n    return CONCAT44(input + (0x432 - shiftAmount) * 0x100000,result);\n  }\n  shiftCount = ~(0x432 - shiftAmount);\n  if (0x1e < (int)shiftCount) {\n    return (ulonglong)(input >> (shiftCount - 0x1f & 0xff));\n  }\n  lzCount = shiftCount - 0x13;\n  if (lzCount == 0 || lzCount < 0 != SCARRY4(shiftCount - 0x1f,0xc)) {\n    shiftCount = shiftCount + 1;\n    return CONCAT44(input >> (shiftCount & 0xff),\n                    result >> (shiftCount & 0xff) | input << (0x20 - shiftCount & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - lzCount) & 0xff) | input << (0xcU - lzCount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "shift_and_combine_0800040c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shiftCount",
                "iVar3": "lzCount",
                "uVar4": "shiftAmount",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "carryFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "calculate_shift_and_mask_0800042c",
            "code": "\nulonglong calculateShiftAndMask_0800042c(uint input)\n\n{\n  uint shiftAmount;\n  uint absInput;\n  uint shiftCount;\n  int leadingZeros;\n  uint newShiftAmount;\n  uint signBit;\n  uint remainingBits;\n  bool isShiftNegative;\n  bool isShiftZero;\n  bool isShiftBorrow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  shiftAmount = 0;\n  leadingZeros = LZCOUNT(absInput);\n  newShiftAmount = leadingZeros + 0x15;\n  isShiftBorrow = SBORROW4(newShiftAmount,0x20);\n  shiftCount = leadingZeros - 0xb;\n  isShiftNegative = (int)shiftCount < 0;\n  isShiftZero = shiftCount == 0;\n  if (newShiftAmount < 0x20) {\n    isShiftBorrow = SCARRY4(shiftCount,0xc);\n    isShiftNegative = false;\n    isShiftZero = leadingZeros + 1 == 0;\n    shiftCount = newShiftAmount;\n    if (!isShiftZero && isShiftBorrow == false) {\n      shiftAmount = absInput << newShiftAmount;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isShiftZero || isShiftNegative != isShiftBorrow) {\n    remainingBits = 0x20 - shiftCount;\n  }\n  absInput = absInput << (shiftCount & 0xff);\n  if (isShiftZero || isShiftNegative != isShiftBorrow) {\n    absInput = absInput | 0U >> (remainingBits & 0xff);\n  }\n  if (isShiftZero || isShiftNegative != isShiftBorrow) {\n    shiftAmount = 0 << (shiftCount & 0xff);\n  }\nLAB_08000318:\n  if (newShiftAmount < 0x433) {\n    return CONCAT44(absInput + (0x432 - newShiftAmount) * 0x100000 | signBit,shiftAmount);\n  }\n  shiftCount = ~(0x432 - newShiftAmount);\n  if (0x1e < (int)shiftCount) {\n    return CONCAT44(input,absInput >> (shiftCount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftCount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftCount - 0x1f,0xc)) {\n    shiftCount = shiftCount + 1;\n    return CONCAT44(signBit | absInput >> (shiftCount & 0xff),\n                    shiftAmount >> (shiftCount & 0xff) | absInput << (0x20 - shiftCount & 0xff));\n  }\n  return CONCAT44(input,shiftAmount >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "calculate_shift_and_mask_0800042c",
                "param_1": "input",
                "uVar1": "shiftAmount",
                "uVar2": "absInput",
                "uVar3": "shiftCount",
                "iVar4": "leadingZeros",
                "uVar5": "newShiftAmount",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "isShiftNegative",
                "bVar8": "isShiftZero",
                "bVar9": "isShiftBorrow"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 num1,uint num2,uint num3,uint num4)\n\n{\n  ulonglong productLow;\n  longlong productHigh;\n  uint num3Masked;\n  uint num4Masked;\n  int sum;\n  uint difference;\n  uint unaff_r5;\n  uint temp;\n  uint carry;\n  bool isZero;\n  bool isCarry;\n  bool isNegative;\n  ulonglong concatenated;\n  \n  concatenated = CONCAT44(num2,num1);\n  temp = 0x7ff;\n  num4Masked = num2 >> 0x14 & 0x7ff;\n  isZero = num4Masked == 0;\n  if (!isZero) {\n    unaff_r5 = num4 >> 0x14 & 0x7ff;\n    isZero = unaff_r5 == 0;\n  }\n  if (!isZero) {\n    isZero = num4Masked == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = unaff_r5 == 0x7ff;\n  }\n  if (isZero) {\n    concatenated = FUN_080006d4();\n  }\n  num3Masked = (uint)(concatenated >> 0x20);\n  sum = num4Masked + unaff_r5;\n  num4Masked = num3Masked ^ num4;\n  num3Masked = num3Masked & ~(temp << 0x15);\n  num4 = num4 & ~(temp << 0x15);\n  isZero = ((uint)concatenated | num3Masked << 0xc) == 0;\n  if (!isZero) {\n    isZero = (num3 | num4 << 0xc) == 0;\n  }\n  num3Masked = num3Masked | 0x100000;\n  num4 = num4 | 0x100000;\n  if (isZero) {\n    num3 = (uint)concatenated | num3;\n    num4 = (num4Masked & 0x80000000 | num3Masked) ^ num4;\n    num4Masked = temp >> 1;\n    isNegative = SBORROW4(sum,num4Masked);\n    difference = sum - num4Masked;\n    isZero = difference == 0;\n    num3Masked = difference;\n    if (!isZero && (int)num4Masked <= sum) {\n      isNegative = SBORROW4(temp,difference);\n      num3Masked = temp - difference;\n      isZero = temp == difference;\n    }\n    if (!isZero && (int)num3Masked < 0 == isNegative) {\n      num4 = num4 | difference * 0x100000;\n    }\n    if (!isZero && (int)num3Masked < 0 == isNegative) {\n      return CONCAT44(num4,num3);\n    }\n    num4 = num4 | 0x100000;\n    temp = 0;\n    isNegative = SBORROW4(difference,1);\n    difference = difference - 1;\n    isZero = difference == 0;\n    num4Masked = difference;\n  }\n  else {\n    productLow = (concatenated & 0xffffffff) * (ulonglong)num3;\n    concatenated = (concatenated & 0xffffffff) * (ulonglong)num4 +\n             (ulonglong)num3Masked * (ulonglong)num3 + (productLow >> 0x20);\n    carry = (uint)concatenated;\n    productHigh = (ulonglong)num3Masked * (ulonglong)num4 + (concatenated >> 0x20);\n    temp = (uint)productHigh;\n    num3Masked = (uint)((ulonglong)productHigh >> 0x20);\n    if ((int)productLow != 0) {\n      carry = carry | 1;\n    }\n    difference = (sum + -0x3ff) - (uint)(num3Masked < 0x200);\n    if (num3Masked < 0x200) {\n      isZero = (carry & 0x80000000) != 0;\n      carry = carry << 1;\n      productHigh = CONCAT44(num3Masked * 2 + (uint)(CARRY4(temp,temp) || CARRY4(temp * 2,(uint)isZero)),\n                       temp * 2 + (uint)isZero);\n    }\n    num4 = num4Masked & 0x80000000 | (int)((ulonglong)productHigh >> 0x20) << 0xb | (uint)productHigh >> 0x15;\n    num3 = (uint)productHigh << 0xb | carry >> 0x15;\n    temp = carry * 0x800;\n    isCarry = 0xfc < difference;\n    isNegative = SBORROW4(difference,0xfd);\n    num3Masked = difference - 0xfd;\n    isZero = num3Masked == 0;\n    num4Masked = num3Masked;\n    if (isCarry && !isZero) {\n      isCarry = 0x6ff < num3Masked;\n      isNegative = SBORROW4(num3Masked,0x700);\n      num4Masked = difference - 0x7fd;\n      isZero = num3Masked == 0x700;\n    }\n    if (!isCarry || isZero) {\n      isZero = 0x7fffffff < temp;\n      if (temp == 0x80000000) {\n        isZero = (carry >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(num4 + difference * 0x100000 + (uint)CARRY4(num3,(uint)isZero),num3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)num4Masked < 0 == isNegative) {\n    return (ulonglong)(num4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isCarry = SCARRY4(difference,0x36);\n  isZero = (int)(difference + 0x36) < 0;\n  isNegative = difference == 0xffffffca;\n  if (isNegative || isZero != isCarry) {\n    num3 = 0;\n  }\n  if (isNegative || isZero != isCarry) {\n    num4 = num4 & 0x80000000;\n  }\n  if (isNegative || isZero != isCarry) {\n    return CONCAT44(num4,num3);\n  }\n  num4Masked = -difference;\n  num3Masked = num4Masked - 0x20;\n  if (0x1f < (int)num4Masked) {\n    difference = num3 >> (num3Masked & 0xff) | num4 << (0x20 - num3Masked & 0xff);\n    num4Masked = (num4 >> (num3Masked & 0xff) & ~((num4 & 0x80000000) >> (num3Masked & 0xff))) -\n            ((int)difference >> 0x1f);\n    if ((temp | num3 << (0x20 - num3Masked & 0xff) | difference << 1) == 0) {\n      num4Masked = num4Masked & ~(difference >> 0x1f);\n    }\n    return CONCAT44(num4,num4Masked) & 0x80000000ffffffff;\n  }\n  sum = num4Masked - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(num3Masked,0xc)) {\n    carry = num3 << (difference + 0x20 & 0xff);\n    num3Masked = num3 >> (num4Masked & 0xff) | num4 << (difference + 0x20 & 0xff);\n    difference = num3Masked + -((int)carry >> 0x1f);\n    if ((temp | carry << 1) == 0) {\n      difference = difference & ~(carry >> 0x1f);\n    }\n    return CONCAT44((num4 & 0x80000000) +\n                    ((num4 & 0x7fffffff) >> (num4Masked & 0xff)) +\n                    (uint)CARRY4(num3Masked,-((int)carry >> 0x1f)),difference);\n  }\n  num4Masked = 0xc - sum;\n  difference = num3 << (num4Masked & 0xff);\n  num4Masked = num3 >> (0x20 - num4Masked & 0xff) | num4 << (num4Masked & 0xff);\n  num3Masked = num4Masked + -((int)difference >> 0x1f);\n  if ((temp | difference << 1) == 0) {\n    num3Masked = num3Masked & ~(difference >> 0x1f);\n  }\n  return CONCAT44((num4 & 0x80000000) + (uint)CARRY4(num4Masked,-((int)difference >> 0x1f)),num3Masked);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "productLow",
                "lVar2": "productHigh",
                "uVar3": "num3Masked",
                "uVar4": "num4Masked",
                "iVar5": "sum",
                "uVar6": "difference",
                "uVar7": "temp",
                "uVar8": "carry",
                "bVar9": "isZero",
                "bVar10": "isCarry",
                "bVar11": "isNegative",
                "uVar12": "concatenated"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "calculate_bitwise_checksum_080006d4",
            "code": "\nulonglong calculate_bitwise_checksum_080006d4(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint input_1_bit;\n  uint temp_1;\n  uint input_2_bit;\n  uint temp_3;\n  uint constant;\n  bool is_zero;\n  \n  input_2_bit = constant & input_4 >> 0x14;\n  if (temp_1 != constant && input_2_bit != constant) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (temp_1 == 0) {\n      temp_3 = input_2 & 0x80000000;\n      do {\n        input_1_bit = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(input_1_bit != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_3;\n      if (input_2_bit != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      input_2_bit = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(input_2_bit != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_3 = input_2;\n  if (((!is_zero) && ((temp_1 != constant || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((input_2_bit != constant || (input_1 = input_3, temp_3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_3,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "calculate_bitwise_checksum_080006d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "input_1_bit",
                "unaff_r4": "temp_1",
                "uVar2": "input_2_bit",
                "uVar3": "temp_3",
                "in_r12": "constant",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 num1,uint num2,uint num3,uint num4)\n\n{\n  uint result1;\n  uint result2;\n  uint result3;\n  uint result4;\n  uint result5;\n  uint result6;\n  uint result7;\n  int difference;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  bool isZero1;\n  bool isZero2;\n  bool isCarry;\n  undefined8 combinedResult;\n  \n  combinedResult = CONCAT44(num2,num1);\n  temp6 = 0x7ff;\n  result7 = num2 >> 0x14 & 0x7ff;\n  isZero1 = result7 == 0;\n  if (!isZero1) {\n    temp2 = num4 >> 0x14 & 0x7ff;\n    isZero1 = temp2 == 0;\n  }\n  if (!isZero1) {\n    isZero1 = result7 == 0x7ff;\n  }\n  if (!isZero1) {\n    isZero1 = temp2 == 0x7ff;\n  }\n  if (isZero1) {\n    combinedResult = FUN_080008ba();\n  }\n  temp1 = (uint)((ulonglong)combinedResult >> 0x20);\n  temp4 = (uint)combinedResult;\n  difference = result7 - temp2;\n  if ((num3 | num4 << 0xc) == 0) {\n    result7 = (temp1 ^ num4) & 0x80000000 | temp1 & 0xfffff;\n    isCarry = SCARRY4(difference,temp6 >> 1);\n    temp1 = difference + (temp6 >> 1);\n    isZero1 = (int)temp1 < 0;\n    isZero2 = temp1 == 0;\n    if (!isZero2 && isZero1 == isCarry) {\n      isCarry = SBORROW4(temp6,temp1);\n      isZero1 = (int)(temp6 - temp1) < 0;\n      isZero2 = temp6 == temp1;\n    }\n    if (!isZero2 && isZero1 == isCarry) {\n      result7 = result7 | temp1 * 0x100000;\n    }\n    if (!isZero2 && isZero1 == isCarry) {\n      return CONCAT44(result7,temp4);\n    }\n    result7 = result7 | 0x100000;\n    temp6 = 0;\n    isZero2 = SBORROW4(temp1,1);\n    temp1 = temp1 - 1;\n    isZero1 = temp1 == 0;\n    result3 = temp1;\n  }\n  else {\n    result3 = (num4 << 0xc) >> 4 | 0x10000000 | num3 >> 0x18;\n    temp6 = num3 << 8;\n    temp3 = (temp1 << 0xc) >> 4 | 0x10000000 | temp4 >> 0x18;\n    temp4 = temp4 * 0x100;\n    result7 = (temp1 ^ num4) & 0x80000000;\n    isZero1 = result3 <= temp3;\n    if (temp3 == result3) {\n      isZero1 = temp6 <= temp4;\n    }\n    difference = difference + (uint)isZero1;\n    temp1 = difference + 0x3fd;\n    if (isZero1 == false) {\n      result3 = result3 >> 1;\n      temp6 = (uint)((num3 >> 0x18 & 1) != 0) << 0x1f | temp6 >> 1;\n    }\n    temp5 = temp4 - temp6;\n    temp3 = (temp3 - result3) - (uint)(temp4 < temp6);\n    result4 = result3 >> 1;\n    result1 = (uint)((result3 & 1) != 0) << 0x1f | temp6 >> 1;\n    temp4 = 0x100000;\n    result3 = 0x80000;\n    while( true ) {\n      isZero1 = result1 <= temp5;\n      if (result4 < temp3 || temp3 - result4 < (uint)isZero1) {\n        temp5 = temp5 - result1;\n        temp4 = temp4 | result3;\n        temp3 = (temp3 - result4) - (uint)!isZero1;\n      }\n      result5 = result4 >> 1;\n      result1 = (uint)((result4 & 1) != 0) << 0x1f | result1 >> 1;\n      isZero2 = result1 <= temp5;\n      isZero1 = temp3 - result5 < (uint)isZero2;\n      temp6 = temp3;\n      if (result5 < temp3 || isZero1) {\n        temp5 = temp5 - result1;\n        temp6 = (temp3 - result5) - (uint)!isZero2;\n      }\n      if (result5 < temp3 || isZero1) {\n        temp4 = temp4 | result3 >> 1;\n      }\n      temp3 = result4 >> 2;\n      result2 = (uint)((result5 & 1) != 0) << 0x1f | result1 >> 1;\n      isZero2 = result2 <= temp5;\n      isZero1 = temp6 - temp3 < (uint)isZero2;\n      result5 = temp6;\n      if (temp3 < temp6 || isZero1) {\n        temp5 = temp5 - result2;\n        result5 = (temp6 - temp3) - (uint)!isZero2;\n      }\n      if (temp3 < temp6 || isZero1) {\n        temp4 = temp4 | result3 >> 2;\n      }\n      result6 = result4 >> 3;\n      result1 = (uint)((temp3 & 1) != 0) << 0x1f | result2 >> 1;\n      isZero2 = result1 <= temp5;\n      isZero1 = result5 - result6 < (uint)isZero2;\n      temp3 = result5;\n      if (result6 < result5 || isZero1) {\n        temp5 = temp5 - result1;\n        temp3 = (result5 - result6) - (uint)!isZero2;\n      }\n      if (result6 < result5 || isZero1) {\n        temp4 = temp4 | result3 >> 3;\n      }\n      temp6 = temp3 | temp5;\n      if (temp6 == 0) break;\n      temp3 = temp3 << 4 | temp5 >> 0x1c;\n      temp5 = temp5 << 4;\n      result4 = result4 & 0xfffffff8 | result1 >> 0x1d;\n      result1 = (result2 >> 1) << 3;\n      result3 = result3 >> 4;\n      if (result3 == 0) {\n        result6 = result4;\n        if ((result7 & 0x100000) != 0) goto LAB_0800086a;\n        result7 = result7 | temp4;\n        temp4 = 0;\n        result3 = 0x80000000;\n      }\n    }\n    if ((result7 & 0x100000) == 0) {\n      result7 = result7 | temp4;\n      temp4 = 0;\n    }\nLAB_0800086a:\n    isCarry = 0xfc < temp1;\n    isZero2 = SBORROW4(temp1,0xfd);\n    result4 = difference + 0x300;\n    isZero1 = result4 == 0;\n    result3 = result4;\n    if (isCarry && !isZero1) {\n      isCarry = 0x6ff < result4;\n      isZero2 = SBORROW4(result4,0x700);\n      result3 = difference - 0x400;\n      isZero1 = result4 == 0x700;\n    }\n    if (!isCarry || isZero1) {\n      isZero1 = result6 <= temp3;\n      if (temp3 == result6) {\n        isZero1 = result1 <= temp5;\n      }\n      if (temp3 == result6 && temp5 == result1) {\n        isZero1 = (temp4 & 1) != 0;\n      }\n      return CONCAT44(result7 + temp1 * 0x100000 + (uint)CARRY4(temp4,(uint)isZero1),temp4 + isZero1);\n    }\n  }\n  if (!isZero1 && (int)result3 < 0 == isZero2) {\n    return (ulonglong)(result7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isCarry = SCARRY4(temp1,0x36);\n  isZero1 = (int)(temp1 + 0x36) < 0;\n  isZero2 = temp1 == 0xffffffca;\n  if (isZero2 || isZero1 != isCarry) {\n    temp4 = 0;\n  }\n  if (isZero2 || isZero1 != isCarry) {\n    result7 = result7 & 0x80000000;\n  }\n  if (isZero2 || isZero1 != isCarry) {\n    return CONCAT44(result7,temp4);\n  }\n  result3 = -temp1;\n  temp3 = result3 - 0x20;\n  if (0x1f < (int)result3) {\n    result3 = temp4 >> (temp3 & 0xff) | result7 << (0x20 - temp3 & 0xff);\n    temp1 = (result7 >> (temp3 & 0xff) & ~((result7 & 0x80000000) >> (temp3 & 0xff))) -\n            ((int)result3 >> 0x1f);\n    if ((temp6 | temp4 << (0x20 - temp3 & 0xff) | result3 << 1) == 0) {\n      temp1 = temp1 & ~(result3 >> 0x1f);\n    }\n    return CONCAT44(result7,temp1) & 0x80000000ffffffff;\n  }\n  difference = result3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp3,0xc)) {\n    temp1 = 0xc - difference;\n    result3 = temp4 << (temp1 & 0xff);\n    temp4 = temp4 >> (0x20 - temp1 & 0xff) | result7 << (temp1 & 0xff);\n    temp1 = temp4 + -((int)result3 >> 0x1f);\n    if ((temp6 | result3 << 1) == 0) {\n      temp1 = temp1 & ~(result3 >> 0x1f);\n    }\n    return CONCAT44((result7 & 0x80000000) + (uint)CARRY4(temp4,-((int)result3 >> 0x1f)),temp1);\n  }\n  temp3 = temp4 << (temp1 + 0x20 & 0xff);\n  temp4 = temp4 >> (result3 & 0xff) | result7 << (temp1 + 0x20 & 0xff);\n  temp1 = temp4 + -((int)temp3 >> 0x1f);\n  if ((temp6 | temp3 << 1) == 0) {\n    temp1 = temp1 & ~(temp3 >> 0x1f);\n  }\n  return CONCAT44((result7 & 0x80000000) +\n                  ((result7 & 0x7fffffff) >> (result3 & 0xff)) +\n                  (uint)CARRY4(temp4,-((int)temp3 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "iVar8": "difference",
                "uVar9": "temp1",
                "unaff_r5": "temp2",
                "uVar10": "temp3",
                "uVar11": "temp4",
                "uVar12": "temp5",
                "uVar13": "temp6",
                "bVar14": "isZero1",
                "bVar15": "isZero2",
                "bVar16": "isCarry",
                "uVar17": "combinedResult"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "calculate_double_080008ba",
            "code": "\nulonglong calculate_double_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  bool isZero;\n  \n  temp2 = temp4 & input4 >> 0x14;\n  temp3 = input2;\n  if (temp1 != temp4 || temp2 != temp4) {\n    if (temp1 == temp4) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp3 = input4, temp2 != temp4)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp2 == temp4) {\n      input1 = input3;\n      temp3 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (temp1 == 0) {\n          temp3 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp3;\n          if (temp2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(temp3,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "calculate_double_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "in_r12": "temp4",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_parameters_0800092c",
            "code": "\nuint check_parameters_0800092c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  bool isZero;\n  bool isNegative;\n  \n  if (((int)(input2 << 1) >> 0x15 == -1 || (int)(input4 << 1) >> 0x15 == -1) &&\n     ((((int)(input2 << 1) >> 0x15 == -1 && ((input1 | input2 << 0xc) != 0)) ||\n      (((int)(input4 << 1) >> 0x15 == -1 && ((input3 | input4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = input2 == input4;\n  }\n  if (isZero) {\n    isZero = input1 == input3;\n  }\n  if (!isZero) {\n    temp1 = input2 ^ input4;\n    isZero = temp1 == 0;\n    if (-1 < (int)temp1) {\n      isZero = input2 == input4;\n    }\n    isNegative = -1 < (int)temp1 && input4 <= input2;\n    if (isZero) {\n      isNegative = input3 <= input1;\n    }\n    input4 = (int)input4 >> 0x1f;\n    if (!isNegative) {\n      input4 = ~input4;\n    }\n    return input4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_parameters_0800092c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "bVar2": "isZero",
                "bVar3": "isNegative"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid executeFunction_080009a8(undefined4 input1,undefined4 input2,undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_080009b8(arg1,arg2,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "execute_and_return_080009b8",
            "code": "\nundefined4 execute_and_return_080009b8(undefined4 input_param)\n\n{\n  FUN_0800092c();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "execute_and_return_080009b8",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_input_validity_080009c8",
            "code": "\nbool checkInputValidity_080009c8(void)\n\n{\n  char inputIsValid;\n  \n  FUN_080009b8();\n  return inputIsValid != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_input_validity_080009c8",
                "in_ZR": "inputIsValid"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_input_empty_080009dc",
            "code": "\nbool is_input_empty_080009dc(void)\n\n{\n  char input_char;\n  \n  FUN_080009b8();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_input_empty_080009dc",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_cy_zr_flags_080009f0",
            "code": "\nbool check_CY_ZR_flags_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_cy_zr_flags_080009f0",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_cy_and_zr_08000a04",
            "code": "\nbool check_CY_and_ZR_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_cy_and_zr_08000a04",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_in_cy_is_empty_08000a18",
            "code": "\nbool check_if_in_CY_is_empty_08000a18(void)\n\n{\n  char input_character;\n  \n  FUN_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_in_cy_is_empty_08000a18",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_inputs_08000a2c",
            "code": "\nundefined4 check_inputs_08000a2c(uint value_1,int value_2,uint value_3,int value_4)\n\n{\n  if ((((value_2 << 1) >> 0x15 != -1) || ((value_1 | value_2 << 0xc) == 0)) &&\n     (((value_4 << 1) >> 0x15 != -1 || ((value_3 | value_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_inputs_08000a2c",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "value_4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_value_08000a58",
            "code": "\nuint calculate_value_08000a58(uint input_value,uint multiplier)\n\n{\n  uint shifted_value;\n  int temp_value;\n  uint offset;\n  \n  temp_value = multiplier * 2 + 0x200000;\n  if (multiplier * 2 < 0xffe00000) {\n    if (-1 < temp_value) {\n      return 0;\n    }\n    shifted_value = temp_value >> 0x15;\n    offset = -shifted_value - 0x3e1;\n    if (shifted_value < 0xfffffc20 && offset != 0) {\n      shifted_value = (multiplier << 0xb | 0x80000000 | input_value >> 0x15) >> (offset & 0xff);\n      if ((multiplier & 0x80000000) != 0) {\n        shifted_value = -shifted_value;\n      }\n      return shifted_value;\n    }\n  }\n  else if ((input_value | multiplier << 0xc) != 0) {\n    return 0;\n  }\n  multiplier = multiplier & 0x80000000;\n  if (multiplier == 0) {\n    multiplier = 0x7fffffff;\n  }\n  return multiplier;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_value_08000a58",
                "param_1": "input_value",
                "param_2": "multiplier",
                "uVar1": "shifted_value",
                "iVar2": "temp_value",
                "uVar3": "offset"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shifted_value_08000aa8",
            "code": "\nuint calculateShiftedValue_08000aa8(uint input1,uint input2)\n\n{\n  int shiftedValue;\n  uint result;\n  \n  if ((input2 & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    result = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)result) {\n      return (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (result & 0xff);\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shifted_value_08000aa8",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "shiftedValue",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "send_software_interrupt_08000ae8",
            "code": "\nvoid sendSoftwareInterrupt_08000ae8(void)\n\n{\n  triggerInterrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "send_software_interrupt_08000ae8",
                "software_interrupt": "triggerInterrupt"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_function_08000aec",
            "code": "\nundefined4 executeFunction_08000aec(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input_1,0,0,input_4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "execute_tasks_08000b08",
            "code": "\nvoid executeTasks_08000b08(int flag1,int flag2)\n\n{\n  if ((flag1 == 1) && (flag2 == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "execute_tasks_08000b08",
                "param_1": "flag1",
                "param_2": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_08000bcc",
            "code": "\nvoid initializeOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "perform_operation_08000cd0",
            "code": "\nvoid performOperation_08000cd0(void)\n\n{\n  uint result1;\n  undefined4 result2;\n  int variable1;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined8 result7;\n  \n  result1 = FUN_080058e0();\n  if (DAT_200001b4 < result1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    result7 = FUN_080015f8(&DAT_2000024c,0);\n    result3 = (undefined4)((ulonglong)result7 >> 0x20);\n    result2 = (undefined4)result7;\n    DAT_20000188 = result2;\n    DAT_2000018c = result3;\n    variable1 = FUN_080009c8(result2,result3,0,0x40c38800);\n    if (((variable1 != 0) || (variable1 = FUN_080009c8(result2,result3,0,0x40c38880), variable1 != 0)) ||\n       (variable1 = FUN_080009c8(result2,result3,0,0x40c38900), variable1 != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  result1 = FUN_080058e0();\n  result2 = DAT_20000060;\n  if (DAT_200001b0 < result1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      variable1 = FUN_08005890(DAT_20000060);\n      FUN_08005848(result2,variable1 == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,result4,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,result5,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,result6,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  result3 = DAT_2000018c;\n  result2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    variable1 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (variable1 == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        result7 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)result7 >> 0x20),0,0,result7);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    variable1 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (variable1 != 0) {\n      result7 = FUN_080058e0();\n      DAT_20000254 = (int)result7 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)result7 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    result1 = FUN_080058e0();\n    if (DAT_20000254 < result1) {\n      variable1 = FUN_080058e0();\n      DAT_20000254 = variable1 + 9000;\n      result7 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)result7 >> 0x20);\n      DAT_20000240 = (undefined4)result7;\n      result7 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)result7 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)result7 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    result7 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)result7 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)result7 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    variable1 = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (variable1 != 0) {\n      variable1 = FUN_080058e0();\n      DAT_20000180 = variable1 + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    result1 = FUN_080058e0();\n    if (DAT_20000180 < result1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    variable1 = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (variable1 != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    variable1 = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((variable1 == 0) && (variable1 = FUN_080009c8(result2,result3,0,0x40c38880), variable1 == 0)) &&\n       (variable1 = FUN_080009c8(result2,result3,0,0x40c38900), variable1 == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    variable1 = FUN_08005754(DAT_20000068);\n    if (variable1 == 0) {\n      variable1 = FUN_080058e0();\n      if (0x32 < (uint)(variable1 - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    variable1 = FUN_08005754(DAT_20000068);\n    if (variable1 == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (variable1 = FUN_08005754(DAT_20000068), variable1 != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    variable1 = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(variable1 - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    result7 = FUN_0800040c(variable1 - DAT_2000025c);\n    variable1 = FUN_080009dc((int)result7,(int)((ulonglong)result7 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (variable1 == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "perform_operation_08000cd0",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "variable1",
                "uVar4": "result3",
                "extraout_r1": "result4",
                "extraout_r1_00": "result5",
                "extraout_r1_01": "result6",
                "uVar5": "result7"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_memory_block_08001294",
            "code": "\nvoid setMemoryBlock_08001294(int baseAddress,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(baseAddress + 0x18) = value1;\n  *(undefined *)(baseAddress + 0x19) = value2;\n  *(undefined *)(baseAddress + 0x1a) = value3;\n  *(undefined *)(baseAddress + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_memory_block_08001294",
                "param_1": "baseAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "initialize_device_080012a2",
            "code": "\nvoid initializeDevice_080012a2(int deviceIndex)\n\n{\n  FUN_08005848(*(undefined *)(deviceIndex + 10),0);\n  FUN_08005848(*(undefined *)(deviceIndex + 10),1);\n  FUN_08005848(*(undefined *)(deviceIndex + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "initialize_device_080012a2",
                "param_1": "deviceIndex"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid processData_080012c0(int data,int bitMask)\n\n{\n  uint counter;\n  \n  for (counter = 0; (int)counter < 4; counter = counter + 1) {\n    FUN_08005848(*(undefined *)(data + counter + 0xb),bitMask >> (counter & 0xff) & 1);\n  }\n  FUN_080012a2(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "data",
                "param_2": "bitMask",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "extract_and_process_bits_080012e8",
            "code": "\nvoid extractAndProcessBits_080012e8(int dataAddress,int bitMask)\n\n{\n  uint bitIndex;\n  \n  for (bitIndex = 0; (int)bitIndex < 8; bitIndex = bitIndex + 1) {\n    FUN_08005848(*(undefined *)(dataAddress + bitIndex + 0xb),bitMask >> (bitIndex & 0xff) & 1);\n  }\n  FUN_080012a2(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "extract_and_process_bits_080012e8",
                "param_1": "dataAddress",
                "param_2": "bitMask",
                "uVar1": "bitIndex"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "process_data_08001310",
            "code": "\nvoid processData_08001310(int data,uint flags,undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08005848(*(undefined *)(data + 8),arg1,arg1,arg2,arg2);\n  if (*(char *)(data + 9) != -1) {\n    FUN_08005848(*(char *)(data + 9),0);\n  }\n  if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data,flags >> 4);\n    FUN_080012c0(data,flags);\n    return;\n  }\n  FUN_080012e8(data,flags);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "process_data_08001310",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "execute_and_return_one_0800134e",
            "code": "\nundefined4 execute_and_return_one_0800134e(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_08001310(input_1,input_2,1,input_4,input_4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "execute_and_return_one_0800134e",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_function_0800135a",
            "code": "\nvoid initializeFunction_0800135a(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08001310(input1,1,0,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_data_08001366",
            "code": "\nvoid processData_08001366(int inputData,char flags,uint limit,undefined4 param)\n\n{\n  char character;\n  \n  if (3 < limit) {\n    limit = 3;\n  }\n  if ((int)(uint)*(byte *)(inputData + 0x17) <= (int)limit) {\n    limit = *(byte *)(inputData + 0x17) - 1 & 0xff;\n  }\n  character = *(char *)(limit + inputData + 0x18);\n  FUN_08001310(inputData,flags + character | 0x80,0,character,param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_data_08001366",
                "param_1": "inputData",
                "param_2": "flags",
                "param_3": "limit",
                "param_4": "param",
                "cVar1": "character"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "set_flag_and_call_function_0800138e",
            "code": "\nvoid setFlagAndCallFunction_0800138e(int address,undefined4 unusedParam,undefined4 unusedParam,undefined4 unusedParam)\n\n{\n  byte currentFlagValue;\n  \n  currentFlagValue = *(byte *)(address + 0x14);\n  *(byte *)(address + 0x14) = currentFlagValue | 4;\n  FUN_08001310(address,currentFlagValue | 0xc,0,unusedParam,unusedParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "set_flag_and_call_function_0800138e",
                "param_1": "address",
                "param_2": "unusedParam",
                "param_3": "unusedParam",
                "param_4": "unusedParam",
                "bVar1": "currentFlagValue"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "process_data_080013a4",
            "code": "\nvoid process_data_080013a4(int data_ptr,int value1,int value2,int value3)\n\n{\n  int loop_count;\n  int index;\n  \n  if (1 < value2) {\n    *(byte *)(data_ptr + 0x13) = *(byte *)(data_ptr + 0x13) | 8;\n  }\n  *(char *)(data_ptr + 0x17) = (char)value2;\n  FUN_08001294(data_ptr,0,0x40,value1,value1 + 0x40);\n  if ((value3 != 0) && (value2 == 1)) {\n    *(byte *)(data_ptr + 0x13) = *(byte *)(data_ptr + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(data_ptr + 8),1);\n  if (*(char *)(data_ptr + 9) != -1) {\n    FUN_080057b4(*(char *)(data_ptr + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(data_ptr + 10),1);\n  index = 0;\n  while( true ) {\n    if ((*(byte *)(data_ptr + 0x13) & 0x10) == 0) {\n      loop_count = 4;\n    }\n    else {\n      loop_count = 8;\n    }\n    if (loop_count <= index) break;\n    FUN_080057b4(*(undefined *)(data_ptr + index + 0xb),1);\n    index = index + 1;\n  }\n  FUN_08005848(*(undefined *)(data_ptr + 8),0);\n  FUN_08005848(*(undefined *)(data_ptr + 10),0);\n  if (*(char *)(data_ptr + 9) != -1) {\n    FUN_08005848(*(char *)(data_ptr + 9),0);\n  }\n  if ((*(byte *)(data_ptr + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data_ptr,3);\n    FUN_080012c0(data_ptr,3);\n    FUN_080012c0(data_ptr,3);\n    FUN_080012c0(data_ptr,2);\n  }\n  else {\n    FUN_08001310(data_ptr,*(byte *)(data_ptr + 0x13) | 0x20,0);\n    FUN_08001310(data_ptr,*(byte *)(data_ptr + 0x13) | 0x20,0);\n    FUN_08001310(data_ptr,*(byte *)(data_ptr + 0x13) | 0x20,0);\n  }\n  FUN_08001310(data_ptr,*(byte *)(data_ptr + 0x13) | 0x20,0);\n  *(undefined *)(data_ptr + 0x14) = 4;\n  FUN_0800138e(data_ptr);\n  FUN_0800135a(data_ptr);\n  *(undefined *)(data_ptr + 0x15) = 2;\n  FUN_08001310(data_ptr,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "process_data_080013a4",
                "param_1": "data_ptr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "loop_count",
                "iVar2": "index"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "set_parameters_080014ba",
            "code": "\nvoid setParameters_080014ba(int baseAddress,int flag,undefined param3,undefined4 param4,undefined param5,\n                 undefined param6,undefined param7,undefined param8,undefined param9,\n                 undefined param10,undefined param11,undefined param12,undefined param13)\n\n{\n  *(undefined *)(baseAddress + 8) = param3;\n  *(char *)(baseAddress + 9) = (char)param4;\n  *(undefined *)(baseAddress + 10) = param5;\n  *(undefined *)(baseAddress + 0xb) = param6;\n  *(undefined *)(baseAddress + 0xc) = param7;\n  *(undefined *)(baseAddress + 0xd) = param8;\n  *(undefined *)(baseAddress + 0xe) = param9;\n  *(undefined *)(baseAddress + 0xf) = param10;\n  *(undefined *)(baseAddress + 0x10) = param11;\n  *(undefined *)(baseAddress + 0x11) = param12;\n  *(undefined *)(baseAddress + 0x12) = param13;\n  if (flag == 0) {\n    *(undefined *)(baseAddress + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(baseAddress + 0x13) = 0;\n  }\n  FUN_080013a4(baseAddress,0x10,1,0,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "set_parameters_080014ba",
                "param_1": "baseAddress",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *outputArray,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3,\n            undefined inputValue4,undefined inputValue5,undefined inputValue6)\n\n{\n  outputArray[1] = 0;\n  *outputArray = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(outputArray,1,inputValue1,0xff,inputValue2,inputValue3,inputValue4,inputValue5,inputValue6,0,0,0,0);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "outputArray",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "param_5": "inputValue4",
                "param_6": "inputValue5",
                "param_7": "inputValue6"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid processData_08001550(undefined4 *dataPointer,uint dataLength,int offset)\n\n{\n  int index;\n  \n  FUN_08001310(dataPointer,(dataLength & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*dataPointer)(dataPointer,*(undefined *)(offset + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "dataPointer",
                "param_2": "dataLength",
                "param_3": "offset",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "initialize_data_0800157c",
            "code": "\nundefined * initializeData_0800157c(undefined *data,undefined4 value,undefined byte1,undefined byte2)\n\n{\n  *data = (char)value;\n  data[1] = byte1;\n  data[2] = byte2;\n  FUN_080057b4(value,0);\n  FUN_080057b4(data[1],1);\n  FUN_080057b4(data[2],1);\n  FUN_08005848(data[1],1);\n  FUN_08005848(data[2],0);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "initialize_data_0800157c",
                "param_1": "data",
                "param_2": "value",
                "param_3": "byte1",
                "param_4": "byte2"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "extract_bits_from_array_080015b2",
            "code": "\nuint extract_bits_from_array_080015b2(undefined *array)\n\n{\n  int result;\n  uint bit_index;\n  uint bit_mask;\n  \n  FUN_08005848(array[1],0);\n  bit_mask = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    FUN_08005848(array[2],1);\n    result = FUN_08005890(*array);\n    if (result != 0) {\n      bit_mask = bit_mask | 1 << (bit_index & 0xff);\n    }\n    FUN_08005848(array[2],0);\n  }\n  FUN_08005848(array[1],1);\n  return bit_mask;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "extract_bits_from_array_080015b2",
                "param_1": "array",
                "iVar1": "result",
                "uVar2": "bit_index",
                "uVar3": "bit_mask"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "process_data_080015f8",
            "code": "\nundefined8 processData_080015f8(undefined4 input_param,int mode,undefined4 param_3,undefined4 param_4)\n\n{\n  uint status;\n  undefined8 result;\n  \n  status = FUN_080015b2();\n  if ((status & 0x10000) == 0) {\n    status = status >> 0x12;\n    result = FUN_0800040c(status & 0x1fff);\n    if ((status & 0x2000) != 0) {\n      result = FUN_0800040c(~status & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,param_4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (mode == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    status = status & 7;\n    if (status == 2) {\n      return 0x40c3888000000000;\n    }\n    if (status == 4) {\n      return 0x40c3890000000000;\n    }\n    if (status != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "process_data_080015f8",
                "param_1": "input_param",
                "param_2": "mode",
                "uVar1": "status",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_input_080016b4",
            "code": "\nchar processInput_080016b4(int input)\n\n{\n  char flag;\n  int result;\n  int check;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char status;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined8 var4;\n  undefined8 var5;\n  undefined8 var6;\n  undefined8 var7;\n  undefined4 local1;\n  undefined4 local2;\n  \n  status = *(char *)(input + 0x70);\n  if (status != '\\0') {\n    result = FUN_080058e0();\n    if ((uint)(result - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      status = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(input + 0x38);\n      temp5 = (*(undefined4 **)(input + 0x38))[1];\n      var4 = FUN_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      var3 = (undefined4)((ulonglong)var4 >> 0x20);\n      var5 = FUN_08000190(temp2,temp5,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      temp1 = (undefined4)((ulonglong)var5 >> 0x20);\n      var6 = FUN_080004f8((int)var4,var3,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      var6 = FUN_08000194((int)var6,(int)((ulonglong)var6 >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = var6;\n      flag = *(char *)(input + 0x71);\n      if (flag == '\\0') {\n        var7 = FUN_080004f8((int)var5,temp1,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        var6 = FUN_08000190((int)var6,(int)((ulonglong)var6 >> 0x20),(int)var7,\n                              (int)((ulonglong)var7 >> 0x20));\n        *(undefined8 *)(input + 0x48) = var6;\n      }\n      temp3 = *(undefined4 *)(input + 0x48);\n      temp6 = *(undefined4 *)(input + 0x4c);\n      var1 = *(undefined4 *)(undefined8 *)(input + 0x68);\n      var2 = *(undefined4 *)(input + 0x6c);\n      var6 = *(undefined8 *)(input + 0x68);\n      check = FUN_08000a18(temp3,temp6,var1,var2);\n      if (check == 0) {\n        temp4 = *(undefined4 *)(input + 0x60);\n        temp7 = *(undefined4 *)(input + 100);\n        check = FUN_080009dc(temp3,temp6);\n        if (check != 0) {\n          *(undefined4 *)(input + 0x48) = temp4;\n          *(undefined4 *)(input + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = var1;\n        *(undefined4 *)(input + 0x4c) = var2;\n      }\n      if (flag == '\\0') {\n        var4 = 0;\n      }\n      else {\n        var4 = FUN_080004f8((int)var4,var3,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      local2 = (undefined4)((ulonglong)var4 >> 0x20);\n      local1 = (undefined4)var4;\n      var3 = *(undefined4 *)(input + 0x48);\n      temp3 = *(undefined4 *)(input + 0x4c);\n      var4 = FUN_080004f8((int)var5,temp1,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      var4 = FUN_08000190(var3,temp3,(int)var4,(int)((ulonglong)var4 >> 0x20));\n      var4 = FUN_08000194(local1,local2,(int)var4,(int)((ulonglong)var4 >> 0x20));\n      var3 = (undefined4)((ulonglong)var4 >> 0x20);\n      check = FUN_080009dc(var1,var2,(int)var4,var3);\n      if (check == 0) {\n        var6 = *(undefined8 *)(input + 0x60);\n        check = FUN_080009dc((int)var4,var3,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (check == 0) {\n          var6 = var4;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = var6;\n      *(undefined4 *)(input + 0x50) = temp2;\n      *(undefined4 *)(input + 0x54) = temp5;\n      *(int *)(input + 0x44) = result;\n    }\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_input_080016b4",
                "param_1": "input",
                "cVar1": "flag",
                "iVar2": "result",
                "iVar3": "check",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "status",
                "uVar12": "var1",
                "uVar13": "var2",
                "uVar14": "var3",
                "uVar15": "var4",
                "uVar16": "var5",
                "uVar17": "var6",
                "uVar18": "var7",
                "local_38": "local1",
                "uStack_34": "local2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_parameters_08001814",
            "code": "\nvoid initializeParameters_08001814(undefined4 *outputArray,undefined4 param2,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4,undefined4 input5,undefined4 input6,\n                 int flag)\n\n{\n  int result;\n  undefined4 tempVar;\n  undefined flagAsByte;\n  bool isFlagSet;\n  undefined8 tempVar1;\n  undefined8 tempVar2;\n  undefined8 tempVar3;\n  \n  result = FUN_080009dc(input1,input2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(input3,input4,0,0), result == 0)) &&\n     (result = FUN_080009dc(input5,input6,0,0), result == 0)) {\n    outputArray[0xd] = flag;\n    isFlagSet = flag != 1;\n    if (isFlagSet) {\n      flag = 0;\n    }\n    flagAsByte = (undefined)flag;\n    if (!isFlagSet) {\n      flagAsByte = 1;\n    }\n    *(undefined *)((int)outputArray + 0x71) = flagAsByte;\n    *outputArray = input1;\n    outputArray[1] = input2;\n    outputArray[2] = input3;\n    outputArray[3] = input4;\n    outputArray[4] = input5;\n    outputArray[5] = input6;\n    tempVar1 = FUN_0800040c(outputArray[0x16]);\n    tempVar1 = FUN_0800074c((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0,0x408f4000);\n    tempVar = (undefined4)((ulonglong)tempVar1 >> 0x20);\n    outputArray[6] = input1;\n    outputArray[7] = input2;\n    tempVar2 = FUN_080004f8(input3,input4,(int)tempVar1,tempVar);\n    *(undefined8 *)(outputArray + 8) = tempVar2;\n    tempVar1 = FUN_0800074c(input5,input6,(int)tempVar1,tempVar);\n    *(undefined8 *)(outputArray + 10) = tempVar1;\n    if (outputArray[0xc] == 1) {\n      tempVar3 = FUN_08000190(0,0,input1,input2);\n      *(undefined8 *)(outputArray + 6) = tempVar3;\n      tempVar2 = FUN_08000190(0,0,(int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20));\n      *(undefined8 *)(outputArray + 8) = tempVar2;\n      tempVar1 = FUN_08000190(0,0,(int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20));\n      *(undefined8 *)(outputArray + 10) = tempVar1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_parameters_08001814",
                "param_1": "outputArray",
                "param_2": "param2",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "param_7": "input5",
                "param_8": "input6",
                "param_9": "flag",
                "iVar1": "result",
                "uVar2": "tempVar",
                "uVar3": "flagAsByte",
                "bVar4": "isFlagSet",
                "uVar5": "tempVar1",
                "uVar6": "tempVar2",
                "uVar7": "tempVar3"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_application_080018f8",
            "code": "\nvoid initializeApplication_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_application_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "update_params_08001918",
            "code": "\nvoid updateParams_08001918(int address,int count,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  undefined8 result3;\n  \n  if (0 < count) {\n    result2 = FUN_0800042c(count);\n    result3 = FUN_0800040c(*(undefined4 *)(address + 0x58));\n    result2 = FUN_0800074c((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                         (int)((ulonglong)result3 >> 0x20),param2);\n    result1 = (undefined4)((ulonglong)result2 >> 0x20);\n    result3 = FUN_080004f8((int)result2,result1,*(undefined4 *)(address + 0x20),\n                         *(undefined4 *)(address + 0x24));\n    *(undefined8 *)(address + 0x20) = result3;\n    result2 = FUN_0800074c(*(undefined4 *)(address + 0x28),*(undefined4 *)(address + 0x2c),(int)result2,\n                         result1);\n    *(undefined8 *)(address + 0x28) = result2;\n    *(int *)(address + 0x58) = count;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "update_params_08001918",
                "param_1": "address",
                "param_2": "count",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_config_08001960",
            "code": "\nvoid updateConfig_08001960(int configPtr,undefined4 param2,undefined4 prevParam1,undefined4 prevParam2,\n                 undefined4 newParam1,undefined4 newParam2)\n\n{\n  int result;\n  undefined4 *configData;\n  undefined4 prevConfigData1;\n  undefined4 prevConfigData2;\n  undefined4 newConfigData1;\n  undefined4 newConfigData2;\n  \n  result = FUN_08000a04(prevParam1,prevParam2,newParam1,newParam2,prevParam2);\n  if (result == 0) {\n    *(undefined4 *)(configPtr + 0x60) = prevParam1;\n    *(undefined4 *)(configPtr + 100) = prevParam2;\n    *(undefined4 *)(configPtr + 0x68) = newParam1;\n    *(undefined4 *)(configPtr + 0x6c) = newParam2;\n    if (*(char *)(configPtr + 0x70) != '\\0') {\n      configData = *(undefined4 **)(configPtr + 0x3c);\n      prevConfigData1 = *configData;\n      newConfigData1 = configData[1];\n      result = FUN_080009dc(newParam1,newParam2,prevConfigData1,newConfigData1);\n      if (result == 0) {\n        result = FUN_08000a18(prevParam1,prevParam2,prevConfigData1,newConfigData1);\n        if (result != 0) {\n          *configData = prevParam1;\n          configData[1] = prevParam2;\n        }\n      }\n      else {\n        *configData = newParam1;\n        configData[1] = newParam2;\n      }\n      prevConfigData1 = *(undefined4 *)(configPtr + 0x48);\n      newConfigData1 = *(undefined4 *)(configPtr + 0x4c);\n      prevConfigData2 = *(undefined4 *)(configPtr + 0x68);\n      newConfigData2 = *(undefined4 *)(configPtr + 0x6c);\n      result = FUN_08000a18(prevConfigData1,newConfigData1,prevConfigData2,newConfigData2);\n      if (result != 0) {\n        *(undefined4 *)(configPtr + 0x48) = prevConfigData2;\n        *(undefined4 *)(configPtr + 0x4c) = newConfigData2;\n        return;\n      }\n      prevConfigData2 = *(undefined4 *)(configPtr + 0x60);\n      newConfigData2 = *(undefined4 *)(configPtr + 100);\n      result = FUN_080009dc(prevConfigData1,newConfigData1,prevConfigData2,newConfigData2);\n      if (result != 0) {\n        *(undefined4 *)(configPtr + 0x48) = prevConfigData2;\n        *(undefined4 *)(configPtr + 0x4c) = newConfigData2;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_config_08001960",
                "param_1": "configPtr",
                "param_2": "param2",
                "param_3": "prevParam1",
                "param_4": "prevParam2",
                "param_5": "newParam1",
                "param_6": "newParam2",
                "iVar1": "result",
                "puVar2": "configData",
                "uVar3": "prevConfigData1",
                "uVar4": "prevConfigData2",
                "uVar5": "newConfigData1",
                "uVar6": "newConfigData2"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_data_080019f6",
            "code": "\nvoid updateData_080019f6(int ptrData)\n\n{\n  int result;\n  undefined4 firstValue;\n  undefined4 secondValue;\n  undefined4 thirdValue;\n  undefined4 fourthValue;\n  \n  secondValue = **(undefined4 **)(ptrData + 0x3c);\n  thirdValue = (*(undefined4 **)(ptrData + 0x3c))[1];\n  *(undefined4 *)(ptrData + 0x48) = secondValue;\n  *(undefined4 *)(ptrData + 0x4c) = thirdValue;\n  firstValue = (*(undefined4 **)(ptrData + 0x38))[1];\n  *(undefined4 *)(ptrData + 0x50) = **(undefined4 **)(ptrData + 0x38);\n  *(undefined4 *)(ptrData + 0x54) = firstValue;\n  firstValue = *(undefined4 *)(ptrData + 0x68);\n  fourthValue = *(undefined4 *)(ptrData + 0x6c);\n  result = FUN_08000a18(secondValue,thirdValue,firstValue,fourthValue);\n  if (result == 0) {\n    firstValue = *(undefined4 *)(ptrData + 0x60);\n    fourthValue = *(undefined4 *)(ptrData + 100);\n    result = FUN_080009dc(secondValue,thirdValue,firstValue,fourthValue);\n    if (result != 0) {\n      *(undefined4 *)(ptrData + 0x48) = firstValue;\n      *(undefined4 *)(ptrData + 0x4c) = fourthValue;\n    }\n    return;\n  }\n  *(undefined4 *)(ptrData + 0x48) = firstValue;\n  *(undefined4 *)(ptrData + 0x4c) = fourthValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_data_080019f6",
                "param_1": "ptrData",
                "iVar1": "result",
                "uVar2": "firstValue",
                "uVar3": "secondValue",
                "uVar4": "thirdValue",
                "uVar5": "fourthValue"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "update_flag_08001a44",
            "code": "\nvoid updateFlag_08001a44(int address,int flag)\n\n{\n  undefined newValue;\n  \n  if (flag == 1) {\n    newValue = 1;\n    if (*(char *)(address + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newValue = 0;\n  }\n  *(undefined *)(address + 0x70) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "update_flag_08001a44",
                "param_1": "address",
                "param_2": "flag",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_params_08001a66",
            "code": "\nvoid updateParams_08001a66(int ptr_struct,int new_param,undefined4 ptr_data1,undefined4 ptr_data2)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(ptr_struct + 0x70) != '\\0') && (*(int *)(ptr_struct + 0x30) != new_param)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_struct + 0x18),*(undefined4 *)(ptr_struct + 0x1c),ptr_data2\n                        );\n    *(undefined8 *)(ptr_struct + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_struct + 0x20),*(undefined4 *)(ptr_struct + 0x24));\n    *(undefined8 *)(ptr_struct + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_struct + 0x28),*(undefined4 *)(ptr_struct + 0x2c));\n    *(undefined8 *)(ptr_struct + 0x28) = result;\n  }\n  *(int *)(ptr_struct + 0x30) = new_param;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_params_08001a66",
                "param_1": "ptr_struct",
                "param_2": "new_param",
                "param_3": "ptr_data1",
                "param_4": "ptr_data2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_function_08001ab0",
            "code": "\nint initializeFunction_08001ab0(int functionPointer,undefined4 paramA,undefined4 paramB,undefined4 paramC,\n                undefined4 paramD,undefined4 paramE,undefined4 paramF,undefined4 paramG,\n                undefined4 paramH,undefined4 paramI,undefined4 paramJ,undefined4 paramK)\n\n{\n  int returnValue;\n  undefined4 extraOutput;\n  \n  *(undefined4 *)(functionPointer + 0x3c) = paramB;\n  *(undefined4 *)(functionPointer + 0x38) = paramA;\n  *(undefined4 *)(functionPointer + 0x40) = paramC;\n  *(undefined *)(functionPointer + 0x70) = 0;\n  FUN_08001960(functionPointer,paramA,0,0,0,0x406fe000);\n  *(undefined4 *)(functionPointer + 0x58) = 100;\n  FUN_08001a66(functionPointer,paramK);\n  FUN_08001814(functionPointer,extraOutput,paramD,paramE,paramF,paramG,paramH,paramI,paramJ);\n  returnValue = FUN_080058e0();\n  *(int *)(functionPointer + 0x44) = returnValue - *(int *)(functionPointer + 0x58);\n  return functionPointer;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_function_08001ab0",
                "param_1": "functionPointer",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "param_5": "paramD",
                "param_6": "paramE",
                "param_7": "paramF",
                "param_8": "paramG",
                "param_9": "paramH",
                "param_10": "paramI",
                "param_11": "paramJ",
                "param_12": "paramK",
                "iVar1": "returnValue",
                "extraout_r1": "extraOutput"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "execute_and_return_08001b18",
            "code": "\nundefined4 execute_and_return_08001b18(undefined4 input_param)\n\n{\n  FUN_08001ab0();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "execute_and_return_08001b18",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_hardware_08001b48",
            "code": "\nvoid initializeHardware_08001b48(void)\n\n{\n  int returnValue;\n  uint time;\n  undefined4 array1 [2];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 array2 [4];\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 value11;\n  \n  array2[0] = 2;\n  value7 = 1;\n  value8 = 0x10;\n  value9 = 2;\n  value10 = 0;\n  value11 = 0x380000;\n  returnValue = FUN_08003688(array2);\n  if (returnValue != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  value2 = 0xf;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x400;\n  value6 = 0;\n  returnValue = FUN_08003ad4(&value2);\n  if (returnValue != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  array1[0] = 2;\n  value1 = 0x8000;\n  returnValue = FUN_08003c90(array1);\n  if (returnValue != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  time = FUN_08003c44();\n  FUN_08002514(time / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_hardware_08001b48",
                "iVar1": "returnValue",
                "uVar2": "time",
                "local_54": "array1",
                "local_4c": "value1",
                "local_44": "value2",
                "local_40": "value3",
                "local_3c": "value4",
                "local_38": "value5",
                "local_34": "value6",
                "local_30": "array2",
                "local_20": "value7",
                "local_1c": "value8",
                "local_14": "value9",
                "local_10": "value10",
                "local_c": "value11"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_application_08001c32",
            "code": "\nvoid initializeApplication_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_application_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "calculate_value_08001c3c",
            "code": "\nundefined4 calculateValue_08001c3c(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,inputParam,0);\n  DAT_2000007c = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "calculate_value_08001c3c",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_system_08001c88",
            "code": "\n\n\nundefined4 initializeSystem_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_system_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "calculate_sum_08001cac",
            "code": "\nvoid calculateSum_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "calculate_sum_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_data_08001cc4",
            "code": "\nundefined4 get_data_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_data_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nundefined4 processData_08001cd0(uint **inputData,uint size)\n\n{\n  int initialTime;\n  uint factor;\n  int interval;\n  undefined4 result;\n  uint *dataPtr;\n  uint calculation;\n  uint counter;\n  \n  counter = 0;\n  initialTime = FUN_08001cc4();\n  calculation = DAT_20000084;\n  dataPtr = *inputData;\n  if ((dataPtr[2] & 0x100) == 0) {\n    if (((dataPtr[1] & 0x100) == 0) && ((dataPtr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputData & 2) != 0) goto LAB_08001de2;\n      } while ((size == 0xffffffff) ||\n              ((size != 0 && (interval = FUN_08001cc4(), (uint)(interval - initialTime) <= size))));\n      inputData[10] = (uint *)((uint)inputData[10] | 4);\n      *(undefined *)(inputData + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      dataPtr = *inputData;\n      if (((dataPtr[4] & 0x24924924) == 0) && ((dataPtr[3] & 0x924924) == 0)) {\n        if ((dataPtr[4] & 0x12492492) == 0) {\n          if ((dataPtr[3] & 0x492492) == 0) {\n            interval = 0x14;\n          }\n          else {\n            interval = 0x29;\n          }\n        }\n        else {\n          interval = 0x29;\n        }\n      }\n      else if (((dataPtr[4] & 0x12492492) == 0) && ((dataPtr[3] & 0x492492) == 0)) {\n        interval = 0x54;\n      }\n      else if ((dataPtr[4] & 0x249249) == 0) {\n        if ((dataPtr[3] & 0x249249) == 0) {\n          interval = 0x54;\n        }\n        else {\n          interval = 0xfc;\n        }\n      }\n      else {\n        interval = 0xfc;\n      }\n      calculation = (calculation / factor) * interval;\n      for (; counter <= calculation && calculation - counter != 0; counter = counter + 1) {\n        if ((size != 0xffffffff) &&\n           ((size == 0 || (interval = FUN_08001cc4(), size < (uint)(interval - initialTime))))) {\n          inputData[10] = (uint *)((uint)inputData[10] | 4);\n          *(undefined *)(inputData + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **inputData = 0xffffffed;\n      inputData[10] = (uint *)((uint)inputData[10] | 0x200);\n      if (((*inputData)[2] & 0xe0000) == 0xe0000) {\n        if (inputData[3] == (uint *)0x0) {\n          inputData[10] = (uint *)((uint)inputData[10] & 0xfffffeff);\n          if (((uint)inputData[10] & 0x1000) == 0) {\n            inputData[10] = (uint *)((uint)inputData[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputData[10] = (uint *)((uint)inputData[10] | 0x20);\n    *(undefined *)(inputData + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "inputData",
                "param_2": "size",
                "iVar1": "initialTime",
                "uVar2": "factor",
                "iVar3": "interval",
                "uVar4": "result",
                "puVar5": "dataPtr",
                "uVar6": "calculation",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 getOffsetValue_08001e40(int *offsetPointer)\n\n{\n  return *(undefined4 *)(*offsetPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "offsetPointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_params_08001e48",
            "code": "\nundefined4 updateParams_08001e48(int *params,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(params + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(params + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*params + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*params + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*params + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*params + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*params + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*params + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*params + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*params + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*params + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*params + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*params == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        params[10] = params[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(params + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_params_08001e48",
                "param_1": "params",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_pointer_value_08001f80",
            "code": "\nundefined4 getPointerValue_08001f80(int inputPtr)\n\n{\n  return *(undefined4 *)(inputPtr + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_pointer_value_08001f80",
                "param_1": "inputPtr"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "perform_action_08001f84",
            "code": "\nundefined4 performAction_08001f84(int *data,undefined4 status)\n\n{\n  int result;\n  undefined4 returnValue;\n  int ptrData;\n  uint delay;\n  \n  ptrData = *data;\n  if ((*(uint *)(ptrData + 8) & 1) == 0) {\n    *(uint *)(ptrData + 8) = *(uint *)(ptrData + 8) | 1;\n    for (delay = DAT_20000084 / 1000000; delay != 0; delay = delay - 1) {\n    }\n    ptrData = FUN_08001cc4(data,status,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08001cc4();\n    } while ((uint)(result - ptrData) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "perform_action_08001f84",
                "param_1": "data",
                "param_2": "status",
                "iVar1": "result",
                "uVar2": "returnValue",
                "iVar3": "ptrData",
                "local_14": "delay"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_device_08002004",
            "code": "\n\n\nint initializeDevice_08002004(int *deviceSettings)\n\n{\n  int result;\n  undefined4 *ptrDevice;\n  int deviceValue;\n  \n  if (*(char *)(deviceSettings + 9) != '\\x01') {\n    *(undefined *)(deviceSettings + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      deviceSettings[10] = deviceSettings[10] & 0xfffffcfeU | 0x100;\n      ptrDevice = (undefined4 *)*deviceSettings;\n      if ((ptrDevice == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        deviceSettings[10] = deviceSettings[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          deviceSettings[10] = deviceSettings[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        deviceSettings[10] = deviceSettings[10] & 0xffefffff;\n        if ((ptrDevice[1] & 0x400) != 0) {\n          deviceSettings[10] = deviceSettings[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((deviceSettings[10] & 0x1000U) == 0) {\n        deviceSettings[0xb] = 0;\n      }\n      else {\n        deviceSettings[0xb] = deviceSettings[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(deviceSettings + 9) = 0;\n      *ptrDevice = 0xfffffffd;\n      deviceValue = *deviceSettings;\n      if (((*(uint *)(deviceValue + 8) & 0xe0000) == 0xe0000) &&\n         ((deviceValue != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(deviceValue + 8) = *(uint *)(deviceValue + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(deviceValue + 8) = *(uint *)(deviceValue + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(deviceSettings + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_device_08002004",
                "param_1": "deviceSettings",
                "iVar1": "result",
                "puVar2": "ptrDevice",
                "iVar3": "deviceValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "check_and_update_flag_080020f0",
            "code": "\nundefined4 checkAndUpdateFlag_080020f0(int *array)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *array;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*array + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08001cc4();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  array[10] = array[10] | 0x10;\n  array[0xb] = array[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "check_and_update_flag_080020f0",
                "param_1": "array",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "validate_and_configure_0800213c",
            "code": "\nundefined4 validate_and_configure_0800213c(int *config_params)\n\n{\n  int result;\n  uint flag1;\n  uint flag2;\n  \n  if (config_params == (int *)0x0) {\n    return 1;\n  }\n  if (config_params[10] == 0) {\n    config_params[0xb] = 0;\n    *(undefined *)(config_params + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(config_params);\n  if (((config_params[10] & 0x10U) == 0) && (result == 0)) {\n    config_params[10] = config_params[10] & 0xffffeefdU | 2;\n    flag1 = config_params[1] | config_params[7] | config_params[3] << 1;\n    if (config_params[2] == 0x100) {\n      flag2 = 0x100;\n    }\n    else {\n      flag2 = 0;\n      if (config_params[2] == 1) {\n        flag2 = 0x100;\n      }\n    }\n    if (config_params[5] == 1) {\n      if (config_params[3] == 0) {\n        flag2 = flag2 | (config_params[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        config_params[10] = config_params[10] | 0x20;\n        config_params[0xb] = config_params[0xb] | 1;\n      }\n    }\n    *(uint *)(*config_params + 4) = flag2 | *(uint *)(*config_params + 4) & 0xffff16ff;\n    *(uint *)(*config_params + 8) = *(uint *)(*config_params + 8) & 0xffe1f7fd | flag1;\n    if ((config_params[2] == 0x100) || (config_params[2] == 1)) {\n      flag2 = (config_params[4] + -1) * 0x100000;\n    }\n    else {\n      flag2 = 0;\n    }\n    *(uint *)(*config_params + 0x2c) = flag2 | *(uint *)(*config_params + 0x2c) & 0xff0fffff;\n    if (flag1 != (*(uint *)(*config_params + 8) & 0xff1f0efe)) {\n      config_params[10] = config_params[10] & 0xffffffedU | 0x10;\n      config_params[0xb] = config_params[0xb] | 1;\n      return 1;\n    }\n    config_params[0xb] = 0;\n    config_params[10] = config_params[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  config_params[10] = config_params[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "validate_and_configure_0800213c",
                "param_1": "config_params",
                "iVar1": "result",
                "uVar2": "flag1",
                "uVar3": "flag2"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "set_memory_protection_0800224c",
            "code": "\nint setMemoryProtection_0800224c(int *memoryPtr)\n\n{\n  int returnValue;\n  \n  if (memoryPtr == (int *)0x0) {\n    returnValue = 1;\n  }\n  else {\n    memoryPtr[10] = memoryPtr[10] | 2;\n    returnValue = FUN_080020f0();\n    if (returnValue == 0) {\n      *(undefined4 *)*memoryPtr = 0xffffffe0;\n      *(uint *)(*memoryPtr + 4) = *(uint *)(*memoryPtr + 4) & 0xff3f0000;\n      *(uint *)(*memoryPtr + 8) = *(uint *)(*memoryPtr + 8) & 0xff0106f0;\n      *(uint *)(*memoryPtr + 0xc) = *(uint *)(*memoryPtr + 0xc) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x10) = *(uint *)(*memoryPtr + 0x10) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x14) = *(uint *)(*memoryPtr + 0x14) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x18) = *(uint *)(*memoryPtr + 0x18) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x1c) = *(uint *)(*memoryPtr + 0x1c) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x20) = *(uint *)(*memoryPtr + 0x20) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x24) = *(uint *)(*memoryPtr + 0x24) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x28) = *(uint *)(*memoryPtr + 0x28) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x2c) = *(uint *)(*memoryPtr + 0x2c) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x2c) = *(uint *)(*memoryPtr + 0x2c) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x30) = *(uint *)(*memoryPtr + 0x30) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x34) = *(uint *)(*memoryPtr + 0x34) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x38) = *(uint *)(*memoryPtr + 0x38) & 0xffc00000;\n      *(uint *)(*memoryPtr + 0x38) = *(uint *)(*memoryPtr + 0x38) & 0xffc00000;\n      FUN_080049f0(memoryPtr);\n      memoryPtr[0xb] = 0;\n      memoryPtr[10] = 0;\n    }\n    *(undefined *)(memoryPtr + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "set_memory_protection_0800224c",
                "param_1": "memoryPtr",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_status_08002348",
            "code": "\nint checkAndUpdateStatus_08002348(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_status_08002348",
                "param_1": "status",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_and_modify_param_08002384",
            "code": "\nint check_and_modify_param_08002384(int *parameter)\n\n{\n  uint divisor;\n  int result;\n  uint dividend;\n  int first_result;\n  int second_result;\n  int loop_counter;\n  \n  if (*(char *)(parameter + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(parameter + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    parameter[10] = parameter[10] & 0xffffeefdU | 2;\n    divisor = DAT_20000084;\n    dividend = FUN_08003da4(2);\n    for (loop_counter = divisor / dividend << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08001f84(parameter);\n    *(uint *)(*parameter + 8) = *(uint *)(*parameter + 8) | 8;\n    first_result = FUN_08001cc4();\n    while (second_result = *parameter, (*(uint *)(second_result + 8) & 8) != 0) {\n      second_result = FUN_08001cc4();\n      if (10 < (uint)(second_result - first_result)) {\n        parameter[10] = parameter[10] & 0xffffffedU | 0x10;\n        *(undefined *)(parameter + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(second_result + 8) = *(uint *)(second_result + 8) | 4;\n    first_result = FUN_08001cc4();\n    while ((*(uint *)(*parameter + 8) & 4) != 0) {\n      second_result = FUN_08001cc4();\n      if (10 < (uint)(second_result - first_result)) {\n        parameter[10] = parameter[10] & 0xffffffedU | 0x10;\n        *(undefined *)(parameter + 9) = 0;\n        return 1;\n      }\n    }\n    parameter[10] = parameter[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(parameter + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_and_modify_param_08002384",
                "param_1": "parameter",
                "uVar1": "divisor",
                "iVar2": "result",
                "uVar3": "dividend",
                "iVar4": "first_result",
                "iVar5": "second_result",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_special_value_08002470",
            "code": "\n\n\nvoid updateSpecialValue_08002470(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_special_value_08002470",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_register_bits_08002494",
            "code": "\n\n\nvoid updateRegisterBits_08002494(uint registerAddress,uint bitMask,uint value)\n\n{\n  uint shiftAmount;\n  uint adjustedShift;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  adjustedShift = 7 - shiftAmount;\n  if (3 < adjustedShift) {\n    adjustedShift = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitMask & (1 << (adjustedShift & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & value;\n  if ((int)registerAddress < 0) {\n    *(char *)((registerAddress & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(registerAddress + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_register_bits_08002494",
                "param_1": "registerAddress",
                "param_2": "bitMask",
                "param_3": "value",
                "uVar1": "shiftAmount",
                "uVar2": "adjustedShift"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_at_index_080024f8",
            "code": "\nvoid setBitAtIndex_080024f8(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_at_index_080024f8",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_data_08002514",
            "code": "\n\n\nundefined4 initializeData_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_data_08002514",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_array_08002540",
            "code": "\nvoid setBitInArray_08002540(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_array_08002540",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_flag_08002560",
            "code": "\n\n\nvoid updateFlag_08002560(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_flag_08002560",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "initialize_system_08002582",
            "code": "\nvoid initializeSystem_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "initialize_system_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_values_0800258c",
            "code": "\n\n\nundefined4 initializeValues_0800258c(uint **inputParams)\n\n{\n  uint *tempVar;\n  \n  if (*(char *)((int)inputParams + 0x21) != '\\x02') {\n    errorCode = (uint *)0x4;\n    return 1;\n  }\n  **inputParams = **inputParams & 0xfffffff1;\n  **inputParams = **inputParams & 0xfffffffe;\n  tempVar = *inputParams;\n  if (tempVar == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (tempVar == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (tempVar == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (tempVar == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (tempVar == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (tempVar == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)inputParams + 0x21) = 1;\n  *(undefined *)(inputParams + 8) = 0;\n  if (callbackFunc != (uint *)0x0) {\n    (*(code *)callbackFunc)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_values_0800258c",
                "param_1": "inputParams",
                "puVar1": "tempVar",
                "param_1[0xe]": "errorCode",
                "param_1[0xd]": "callbackFunc"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_memory_08002624",
            "code": "\n\n\nvoid updateMemory_08002624(uint *outputData,uint *inputData)\n\n{\n  uint *outputPointer;\n  uint bitMask;\n  uint inputBit;\n  uint bitIndex;\n  uint opcode;\n  uint dataToWrite;\n  int index;\n  int ioPortIndex;\n  \n  dataToWrite = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    inputBit = *inputData & bitMask;\n    if (bitMask == inputBit) {\n      opcode = inputData[1];\n      if (opcode == 0x12) {\n        dataToWrite = inputData[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          dataToWrite = inputData[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            dataToWrite = inputData[3];\n          }\n        }\n        else if (opcode == 3) {\n          dataToWrite = 0;\n        }\n        else if (opcode == 0x11) {\n          dataToWrite = inputData[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (inputData[2] == 0) {\n          dataToWrite = 4;\n        }\n        else if (inputData[2] == 1) {\n          outputData[4] = bitMask;\n          dataToWrite = 8;\n        }\n        else {\n          outputData[5] = bitMask;\n          dataToWrite = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitIndex;\n      outputPointer = outputData;\n      if (0xff < inputBit) {\n        bitMask = bitIndex - 8;\n        outputPointer = outputData + 1;\n      }\n      *outputPointer = *outputPointer & ~(0xf << (bitMask << 2 & 0xff)) | dataToWrite << (bitMask << 2 & 0xff);\n      if ((inputData[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        index = (bitIndex & 3) << 2;\n        if (outputData == (uint *)0x40010800) {\n          ioPortIndex = 0;\n        }\n        else if (outputData == (uint *)0x40010c00) {\n          ioPortIndex = 1;\n        }\n        else if (outputData == (uint *)0x40011000) {\n          ioPortIndex = 2;\n        }\n        else if (outputData == (uint *)0x40011400) {\n          ioPortIndex = 3;\n        }\n        else {\n          ioPortIndex = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << index) | ioPortIndex << index;\n        if ((inputData[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~inputBit;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | inputBit;\n        }\n        if ((inputData[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~inputBit;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | inputBit;\n        }\n        if ((inputData[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~inputBit;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | inputBit;\n        }\n        if ((inputData[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~inputBit;\n        }\n        else {\n          _DAT_4001040c = inputBit | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_memory_08002624",
                "param_1": "outputData",
                "param_2": "inputData",
                "puVar1": "outputPointer",
                "uVar2": "bitMask",
                "uVar3": "inputBit",
                "uVar4": "bitIndex",
                "uVar5": "opcode",
                "uVar6": "dataToWrite",
                "iVar7": "index",
                "iVar8": "ioPortIndex"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "is_bit_set_08002810",
            "code": "\nundefined4 is_bit_set_08002810(int data_start,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(data_start + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "is_bit_set_08002810",
                "param_1": "data_start",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_value_0800281e",
            "code": "\nvoid set_value_0800281e(int target_address,int value,int should_shift)\n\n{\n  if (should_shift == 0) {\n    *(int *)(target_address + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(target_address + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_value_0800281e",
                "param_1": "target_address",
                "param_2": "value",
                "param_3": "should_shift"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_and_execute_if_needed_0800282c",
            "code": "\n\n\nvoid updateAndExecuteIfNeeded_0800282c(uint newData)\n\n{\n  if ((_DAT_40010414 & newData) != 0) {\n    _DAT_40010414 = newData;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_and_execute_if_needed_0800282c",
                "param_1": "newData"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_flag_value_08002848",
            "code": "\nundefined4 updateFlagValue_08002848(int *data)\n\n{\n  if (*(char *)((int)data + 0x3e) == '@') {\n    if (data[0x14] == 0) {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xffU | 1;\n    }\n  }\n  else if (data[4] == 0x4000) {\n    if (*(char *)((int)data + 0x3d) == '!') {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xffU | 1;\n    }\n  }\n  else if (data[0x14] == 0) {\n    *(uint *)(*data + 0x10) = (uint)(data[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (data[0x14] == 1) {\n    *(uint *)(*data + 0x10) = (uint)(data[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_flag_value_08002848",
                "param_1": "data"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "copy_value_to_pointer_080028d2",
            "code": "\nundefined4 copyValueToPointer_080028d2(int *source)\n\n{\n  *(uint *)(*source + 0x10) = source[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "copy_value_to_pointer_080028d2",
                "param_1": "source"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "update_flags_080028de",
            "code": "\nundefined4 updateFlags_080028de(uint **parameters)\n\n{\n  uint *pointer;\n  \n  pointer = pointer5;\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((pointer2 != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((pointer2 == (uint *)0x0) && (pointer3 == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      pointer2 = (uint *)((int)pointer2 + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (pointer == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          pointer = *parameters;\n          if ((second_element & 0x800) == 0) {\n            *pointer = *pointer | 0x200;\n          }\n          else {\n            *pointer = *pointer & 0xfffffbff;\n          }\n        }\n        else if (((pointer == (uint *)0x4) || (pointer == (uint *)0x8)) ||\n                (pointer4 == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (pointer5 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (pointer5 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        pointer = *parameters;\n        if ((second_element & 0x800) != 0) {\n          second_element = second_element | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        pointer = *parameters;\n        if ((second_element & 0x800) != 0) {\n          second_element = second_element | 0x1000;\n        }\n      }\n      pointer2 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "update_flags_080028de",
                "param_1": "parameters",
                "puVar1": "pointer",
                "param_1[0x14]": "pointer2",
                "param_1[4]": "pointer3",
                "puVar1[1]": "second_element",
                "param_1[0xc]": "pointer4",
                "param_1[0xb]": "pointer5"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_and_decrement_08002ab8",
            "code": "\nundefined4 updateAndDecrement_08002ab8(int *array)\n\n{\n  byte *byteArray;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    byteArray = (byte *)array[9];\n    array[9] = (int)(byteArray + 1);\n    *(uint *)(*array + 0x10) = (uint)*byteArray;\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_and_decrement_08002ab8",
                "param_1": "array",
                "pbVar1": "byteArray"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_and_decrement_08002ad8",
            "code": "\nundefined4 updateAndDecrement_08002ad8(int *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_and_decrement_08002ad8",
                "param_1": "array",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "validate_input_08002af8",
            "code": "\nundefined4 validate_input_08002af8(uint **input_struct,uint *param_2,int param_3,uint *param_4)\n\n{\n  undefined4 result;\n  uint *ptr_to_input;\n  \n  if (*(char *)((int)input_struct + 0x3d) == '(') {\n    if (param_2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_struct + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_struct + 0xf) = 1;\n      ptr_to_input = *input_struct;\n      if ((*ptr_to_input & 1) == 0) {\n        *ptr_to_input = *ptr_to_input | 1;\n      }\n      **input_struct = **input_struct & 0xfffff7ff;\n      *(undefined *)((int)input_struct + 0x3d) = 0x29;\n      *(undefined *)((int)input_struct + 0x3e) = 0x20;\n      result = 0;\n      input_struct[0x10] = (uint *)0x0;\n      input_struct[9] = param_2;\n      *(short *)((int)input_struct + 0x2a) = (short)param_3;\n      input_struct[0xb] = param_4;\n      *(undefined2 *)(input_struct + 10) = *(undefined2 *)((int)input_struct + 0x2a);\n      *(undefined *)(input_struct + 0xf) = 0;\n      (*input_struct)[1] = (*input_struct)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "validate_input_08002af8",
                "param_1": "input_struct",
                "uVar1": "result",
                "puVar2": "ptr_to_input"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "process_function_08002b84",
            "code": "\nundefined4 processFunction_08002b84(uint **parameterArray,uint *inputPointer,int count,uint *outputPointer)\n\n{\n  undefined4 returnValue;\n  uint *firstValuePointer;\n  \n  if (*(char *)((int)parameterArray + 0x3d) == '(') {\n    if (inputPointer == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (count == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(parameterArray + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(parameterArray + 0xf) = 1;\n      firstValuePointer = *parameterArray;\n      if ((*firstValuePointer & 1) == 0) {\n        *firstValuePointer = *firstValuePointer | 1;\n      }\n      **parameterArray = **parameterArray & 0xfffff7ff;\n      *(undefined *)((int)parameterArray + 0x3d) = 0x2a;\n      *(undefined *)((int)parameterArray + 0x3e) = 0x20;\n      returnValue = 0;\n      parameterArray[0x10] = (uint *)0x0;\n      parameterArray[9] = inputPointer;\n      *(short *)((int)parameterArray + 0x2a) = (short)count;\n      parameterArray[0xb] = outputPointer;\n      *(undefined2 *)(parameterArray + 10) = *(undefined2 *)((int)parameterArray + 0x2a);\n      *(undefined *)(parameterArray + 0xf) = 0;\n      (*parameterArray)[1] = (*parameterArray)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "process_function_08002b84",
                "param_1": "parameterArray",
                "param_2": "inputPointer",
                "param_3": "count",
                "param_4": "outputPointer",
                "uVar1": "returnValue",
                "puVar2": "firstValuePointer"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_parameters_08002c10",
            "code": "\nundefined4 initializeParameters_08002c10(uint **parameters)\n\n{\n  uint *valuePtr;\n  \n  if (*(char *)((int)parameters + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x28;\n  valuePtr = *parameters;\n  if ((*valuePtr & 1) == 0) {\n    *valuePtr = *valuePtr | 1;\n  }\n  **parameters = **parameters | 0x400;\n  (*parameters)[1] = (*parameters)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_parameters_08002c10",
                "param_1": "parameters",
                "puVar1": "valuePtr"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_input_08002c54",
            "code": "\nundefined4 processInput_08002c54(int *inputArray)\n\n{\n  char currentChar;\n  byte *byteArray;\n  \n  currentChar = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    byteArray = (byte *)ptrToByteArray;\n    ptrToByteArray = (int)(byteArray + 1);\n    *(uint *)(*inputArray + 0x10) = (uint)*byteArray;\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (currentChar == ')')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      someValue = 0x21;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_input_08002c54",
                "param_1": "inputArray",
                "cVar1": "currentChar",
                "pbVar2": "byteArray",
                "param_1[9]": "ptrToByteArray",
                "param_1[0xc]": "someValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_parameter_08002ca6",
            "code": "\nundefined4 updateParameter_08002ca6(int *parameter)\n\n{\n  char character2;\n  undefined *pointer2;\n  \n  character2 = *(char *)((int)parameter + 0x3d);\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    pointer2 = (undefined *)parameter[9];\n    parameter[9] = (int)(pointer2 + 1);\n    *pointer2 = (char)*(undefined4 *)(*parameter + 0x10);\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    if ((*(short *)((int)parameter + 0x2a) == 0) && (character2 == '*')) {\n      *(uint *)(*parameter + 4) = *(uint *)(*parameter + 4) & 0xfffffbff;\n      parameter[0xc] = 0x22;\n      *(undefined *)((int)parameter + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_parameter_08002ca6",
                "param_1": "parameter",
                "cVar1": "character2",
                "puVar2": "pointer2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_data_08002cf2",
            "code": "\nundefined4 processData_08002cf2(int *data,undefined4 val1,undefined4 val2,undefined4 val3)\n\n{\n  undefined2 selectedValue;\n  uint flagValue;\n  \n  flagValue = *(uint *)(*data + 0x18);\n  if ((flagValue & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(data + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(data + 6);\n  }\n  FUN_08004e74(data,(*(uint *)(*data + 0x18) & 4) == 0,selectedValue,flagValue,val3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "data",
                "param_2": "val1",
                "param_3": "val2",
                "param_4": "val3",
                "uVar1": "selectedValue",
                "uVar2": "flagValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "update_and_check_flags_08002d1c",
            "code": "\nundefined4 updateAndCheckFlags_08002d1c(uint **params)\n\n{\n  if (((params[0xb] == (uint *)0x4) || (params[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)params + 0x3d) == '(')) {\n    params[0xb] = (uint *)0xffff0000;\n    (*params)[1] = (*params)[1] & 0xfffff8ff;\n    (*params)[5] = 0xfffffbff;\n    **params = **params & 0xfffffbff;\n    params[0xc] = (uint *)0x0;\n    *(undefined *)((int)params + 0x3d) = 0x20;\n    *(undefined *)((int)params + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)params + 0x3d) == '!') {\n    params[0xb] = (uint *)0xffff0000;\n    params[0xc] = (uint *)0x21;\n    *(undefined *)((int)params + 0x3d) = 0x20;\n    *(undefined *)((int)params + 0x3e) = 0;\n    (*params)[1] = (*params)[1] & 0xfffff8ff;\n    (*params)[5] = 0xfffffbff;\n    **params = **params & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*params)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "update_and_check_flags_08002d1c",
                "param_1": "params"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "update_flag_08002db2",
            "code": "\nundefined4 updateFlag_08002db2(uint **params)\n\n{\n  char character;\n  uint *pointer;\n  \n  character = *(char *)((int)params + 0x3d);\n  pointer = params[0xb];\n  if ((*(short *)(params + 10) == 0) && (character == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*params)[1] = (*params)[1] & 0xfffff8ff;\n      **params = **params | 0x200;\n      params[0xc] = (uint *)0x0;\n      *(undefined *)((int)params + 0x3d) = 0x20;\n      if (*(char *)((int)params + 0x3e) == '@') {\n        *(undefined *)((int)params + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)params + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*params)[1] = (*params)[1] & 0xfffff8ff;\n      params[0xc] = (uint *)0x11;\n      *(undefined *)((int)params + 0x3e) = 0;\n      *(undefined *)((int)params + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((character == '!') || ((*(char *)((int)params + 0x3e) == '@' && (character == '\\\"')))) {\n    if (*(short *)((int)params + 0x2a) == 0) {\n      (*params)[1] = (*params)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)params + 0x3e) == '@') {\n      if (params[0x14] == (uint *)0x0) {\n        if (params[0x13] == (uint *)0x1) {\n          (*params)[4] = (uint)params[0x12] & 0xff;\n          params[0x14] = (uint *)((int)params[0x14] + 2);\n        }\n        else {\n          (*params)[4] = (uint)((int)params[0x12] << 0x10) >> 0x18;\n          params[0x14] = (uint *)((int)params[0x14] + 1);\n        }\n      }\n      else if (params[0x14] == (uint *)0x1) {\n        (*params)[4] = (uint)params[0x12] & 0xff;\n        params[0x14] = (uint *)((int)params[0x14] + 1);\n      }\n      else if (params[0x14] == (uint *)0x2) {\n        if (*(char *)((int)params + 0x3d) == '\\\"') {\n          **params = **params | 0x100;\n        }\n        else if (*(char *)((int)params + 0x3d) == '!') {\n          pointer = params[9];\n          params[9] = (uint *)((int)pointer + 1);\n          (*params)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = params[9];\n      params[9] = (uint *)((int)pointer + 1);\n      (*params)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "update_flag_08002db2",
                "param_1": "params",
                "cVar1": "character",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_data_08002efc",
            "code": "\nundefined4 processData_08002efc(uint **param)\n\n{\n  uint *ptrVar1;\n  \n  ptrVar1 = param[0xb];\n  if (*(char *)((int)param + 0x3d) == '!') {\n    if (*(short *)((int)param + 0x2a) == 0) {\n      if (((ptrVar1 == (uint *)0x4) || (ptrVar1 == (uint *)0x8)) || (ptrVar1 == (uint *)0xffff0000)) {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        **param = **param | 0x200;\n        param[0xc] = (uint *)0x0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        param[0xc] = (uint *)0x11;\n        *(undefined *)((int)param + 0x3e) = 0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      ptrVar1 = param[9];\n      param[9] = (uint *)((int)ptrVar1 + 1);\n      (*param)[4] = (uint)*(byte *)ptrVar1;\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_data_08002efc",
                "param_1": "param",
                "puVar1": "ptrVar1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "set_flag_and_decrement_counter_08002f9c",
            "code": "\nundefined4 setFlagAndDecrementCounter_08002f9c(uint **ptr)\n\n{\n  uint *ptr1;\n  \n  if (*(char *)((int)ptr + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)ptr + 0x2a) < 4) {\n      if (*(ushort *)((int)ptr + 0x2a) - 2 < 2) {\n        if (ptr[0xb] == (uint *)0x2) {\n          **ptr = **ptr | 0x400;\n        }\n        else {\n          **ptr = **ptr & 0xfffffbff;\n          **ptr = **ptr | 0x800;\n        }\n        (*ptr)[1] = (*ptr)[1] & 0xfffffbff;\n      }\n      else {\n        if (ptr[0xb] == (uint *)0x2) {\n          **ptr = **ptr | 0x400;\n        }\n        else {\n          **ptr = **ptr & 0xfffffbff;\n        }\n        (*ptr)[1] = (*ptr)[1] & 0xfffff8ff;\n        ptr1 = ptr[9];\n        ptr[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)(*ptr)[4];\n        *(short *)((int)ptr + 0x2a) = *(short *)((int)ptr + 0x2a) + -1;\n        *(undefined *)((int)ptr + 0x3d) = 0x20;\n        ptr[0xc] = (uint *)0x0;\n        if (*(char *)((int)ptr + 0x3e) == '@') {\n          *(undefined *)((int)ptr + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)ptr + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      ptr1 = ptr[9];\n      ptr[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*ptr)[4];\n      *(short *)((int)ptr + 0x2a) = *(short *)((int)ptr + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "set_flag_and_decrement_counter_08002f9c",
                "param_1": "ptr",
                "puVar1": "ptr1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_data_0800306c",
            "code": "\nundefined4 processData_0800306c(uint **inputData)\n\n{\n  uint *value;\n  \n  value = inputData[0xb];\n  if (*(short *)((int)inputData + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **inputData = **inputData & 0xfffffbff;\n    }\n    value = inputData[9];\n    inputData[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputData + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffffcff;\n      **inputData = **inputData | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **inputData = **inputData | 0x400;\n      }\n      else {\n        **inputData = **inputData & 0xfffffbff;\n      }\n      (*inputData)[1] = (*inputData)[1] & 0xfffffcff;\n    }\n    value = inputData[9];\n    inputData[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    value = inputData[9];\n    inputData[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    *(undefined *)((int)inputData + 0x3d) = 0x20;\n    inputData[0xc] = (uint *)0x0;\n    if (*(char *)((int)inputData + 0x3e) == '@') {\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    value = inputData[9];\n    inputData[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "inputData",
                "puVar1": "value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_input_0800316c",
            "code": "\nvoid processInput_0800316c(uint **inputParams)\n\n{\n  int returnValue;\n  uint *tempVar1;\n  uint *tempVar2;\n  \n  if (*(byte *)((int)inputParams + 0x3d) - 0x29 < 2) {\n    inputParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)inputParams + 0x3d) != '`') && (((*inputParams)[1] & 0x800) == 0)) {\n      *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    }\n    inputParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3e) = 0;\n  }\n  **inputParams = **inputParams & 0xfffff7ff;\n  tempVar2 = *inputParams;\n  if ((tempVar2[1] & 0x800) == 0) {\n    if (*(char *)((int)inputParams + 0x3d) == '`') {\n      *(undefined *)((int)inputParams + 0x3d) = 0x20;\n      inputParams[0x10] = (uint *)0x0;\n      if ((tempVar2[5] & 0x40) != 0) {\n        tempVar1 = inputParams[9];\n        inputParams[9] = (uint *)((int)tempVar1 + 1);\n        *(char *)tempVar1 = (char)tempVar2[4];\n      }\n      **inputParams = **inputParams & 0xfffffffe;\n      FUNC_0800316a(inputParams);\n    }\n    else {\n      if ((tempVar2[5] & 0x40) != 0) {\n        tempVar1 = inputParams[9];\n        inputParams[9] = (uint *)((int)tempVar1 + 1);\n        *(char *)tempVar1 = (char)tempVar2[4];\n      }\n      FUN_08004ef4(inputParams);\n    }\n  }\n  else {\n    tempVar2[1] = tempVar2[1] & 0xfffff7ff;\n    if (*(char *)((int)inputParams[0xd] + 0x21) == '\\x01') {\n      inputParams[0xe][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = FUN_0800258c(inputParams[0xe]);\n      if (returnValue != 0) {\n        if (((*inputParams)[5] & 0x40) != 0) {\n          tempVar2 = inputParams[9];\n          inputParams[9] = (uint *)((int)tempVar2 + 1);\n          *(char *)tempVar2 = (char)(*inputParams)[4];\n        }\n        **inputParams = **inputParams & 0xfffffffe;\n        *(undefined *)((int)inputParams + 0x3d) = 0x20;\n        (*(code *)inputParams[0xe][0xd])();\n      }\n    }\n    else {\n      inputParams[0xd][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = FUN_0800258c(inputParams[0xd]);\n      if (returnValue != 0) {\n        **inputParams = **inputParams & 0xfffffffe;\n        *(undefined *)((int)inputParams + 0x3d) = 0x20;\n        (*(code *)inputParams[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)inputParams + 0x3d) == '(') && (((uint)inputParams[0x10] & 4) != 0)) {\n    inputParams[0xb] = (uint *)0xffff0000;\n    inputParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    *(undefined *)((int)inputParams + 0x3e) = 0;\n    FUN_08004ec4(inputParams);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_input_0800316c",
                "param_1": "inputParams",
                "iVar1": "returnValue",
                "puVar2": "tempVar1",
                "puVar3": "tempVar2"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_data_080032b4",
            "code": "\nundefined4 process_data_080032b4(uint **data)\n\n{\n  char character;\n  uint *ptr_1;\n  uint *ptr_2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr_1 = *data;\n  if ((ptr_1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr_1[5] & 4) != 0) {\n      ptr_2 = data[9];\n      data[9] = (uint *)((int)ptr_2 + 1);\n      *(char *)ptr_2 = (char)ptr_1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr_1 = data[9];\n      data[9] = (uint *)((int)ptr_1 + 1);\n      *(char *)ptr_1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_data_080032b4",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptr_1",
                "puVar3": "ptr_2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "handle_action_080033b8",
            "code": "\nvoid handleAction_080033b8(int *actionData)\n\n{\n  int ptrData;\n  uint flags;\n  uint status;\n  uint additionalFlags;\n  \n  ptrData = *actionData;\n  additionalFlags = *(uint *)(ptrData + 0x18);\n  flags = *(uint *)(ptrData + 0x14);\n  status = *(uint *)(ptrData + 4);\n  if ((*(char *)((int)actionData + 0x3e) == '\\x10') || (*(char *)((int)actionData + 0x3e) == '@')) {\n    if (((flags & 0x10001) == 0) || ((status & 0x200) == 0)) {\n      if (((flags & 0x10008) == 0) || ((status & 0x200) == 0)) {\n        if (((flags & 0x10002) != 0) && ((status & 0x200) != 0)) {\n          FUN_080028de(actionData);\n        }\n      }\n      else {\n        FUN_080028d2(actionData);\n      }\n    }\n    else {\n      FUN_08002848(actionData);\n    }\n    if ((additionalFlags & 0x100004) == 0) {\n      if ((((flags & 0x10040) != 0) && ((status & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        FUN_08002f9c(actionData);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((status & 0x200) != 0)) {\n        FUN_0800306c(actionData);\n        return;\n      }\n    }\n    else {\n      if ((((flags & 0x10080) != 0) && ((status & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        FUN_08002db2(actionData);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((status & 0x200) != 0)) {\n        FUN_08002efc(actionData);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flags & 0x10002) != 0) && ((status & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((flags & 0x10010) != 0) && ((status & 0x200) != 0)) {\n      FUN_080032b4(actionData);\n      return;\n    }\n    if ((additionalFlags & 0x100004) == 0) {\n      if ((((flags & 0x10040) != 0) && ((status & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        FUN_08002ca6(actionData);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((status & 0x200) != 0)) {\n        FUN_08002ad8(actionData);\n      }\n    }\n    else {\n      if ((((flags & 0x10080) != 0) && ((status & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        FUN_08002c54(actionData);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((status & 0x200) != 0)) {\n        FUN_08002ab8(actionData);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "handle_action_080033b8",
                "param_1": "actionData",
                "iVar1": "ptrData",
                "uVar2": "flags",
                "uVar3": "status",
                "uVar4": "additionalFlags"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "update_flags_08003520",
            "code": "\nvoid updateFlags_08003520(uint **param)\n\n{\n  char char1;\n  uint *ptr;\n  uint flags1;\n  uint flags2;\n  \n  ptr = *param;\n  flags1 = ptr[5];\n  flags2 = ptr[1];\n  if (((flags1 & 0x10100) != 0) && ((flags2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **param = **param | 0x8000;\n  }\n  if (((flags1 & 0x10200) != 0) && ((flags2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 2);\n    (*param)[5] = 0xfffffdff;\n  }\n  if (((flags1 & 0x10400) != 0) && ((flags2 & 0x100) != 0)) {\n    char1 = *(char *)((int)param + 0x3d);\n    if (((*(char *)((int)param + 0x3e) == ' ') && (*(short *)((int)param + 0x2a) == 0)) &&\n       (((char1 == '!' || (char1 == ')')) || ((char1 == '(' && (param[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(param);\n    }\n    else {\n      param[0x10] = (uint *)((uint)param[0x10] | 4);\n      if (*(char *)((int)param + 0x3e) == '\\x10') {\n        **param = **param | 0x200;\n      }\n      (*param)[5] = 0xfffffbff;\n    }\n  }\n  if (((flags1 & 0x10800) != 0) && ((flags2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 8);\n    (*param)[5] = 0xfffff7ff;\n  }\n  if (param[0x10] != (uint *)0x0) {\n    FUN_0800316c(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "update_flags_08003520",
                "param_1": "param",
                "cVar1": "char1",
                "puVar2": "ptr",
                "uVar3": "flags1",
                "uVar4": "flags2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "delay_function_0800365c",
            "code": "\nvoid delayFunction_0800365c(int input)\n\n{\n  bool isDelayNotFinished;\n  int delayCount;\n  \n  delayCount = input * (DAT_20000084 / 8000);\n  do {\n    isDelayNotFinished = delayCount != 0;\n    delayCount = delayCount + -1;\n  } while (isDelayNotFinished);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "delay_function_0800365c",
                "param_1": "input",
                "local_4": "delayCount",
                "bVar1": "isDelayNotFinished"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "process_flags_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 processFlags_08003688(uint *flags)\n\n{\n  int initialTime;\n  int currentTime;\n  undefined4 result;\n  uint flagValue;\n  bool isFlagSet;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      flagValue = flags[1];\n      if (flagValue == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (flagValue == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (flagValue == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        initialTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initialTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    flagValue = flags[3];\n    if (flagValue == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (flagValue == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (flagValue == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    initialTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        initialTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08001cc4();\n        } while ((uint)(currentTime - initialTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    initialTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "process_flags_08003688",
                "param_1": "flags",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "flagValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_delay_08003a68",
            "code": "\n\n\nuint calculate_delay_08003a68(void)\n\n{\n  uint delay;\n  undefined2 config;\n  undefined4 data_1;\n  undefined4 data_2;\n  undefined4 data_3;\n  undefined4 data_4;\n  \n  data_4 = 0x10100f0e;\n  data_3 = 0xd0c0b0a;\n  data_2 = 0x9080706;\n  data_1 = 0x5040302;\n  config = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delay = (uint)*(byte *)((int)&data_1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delay = delay * 4000000;\n    }\n    else {\n      delay = (delay * 8000000) /\n              (uint)*(byte *)((int)&config - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delay = 8000000;\n  }\n  return delay;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_delay_08003a68",
                "uVar1": "delay",
                "local_1c": "config",
                "uStack_18": "data_1",
                "uStack_14": "data_2",
                "uStack_10": "data_3",
                "uStack_c": "data_4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "update_data_08003ad4",
            "code": "\n\n\nundefined4 updateData_08003ad4(uint *dataPointer,uint dataSize)\n\n{\n  int iVar1;\n  int iVar2;\n  uint tempValue;\n  \n  if ((_DAT_40022000 & 7) < dataSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | dataSize;\n    if (dataSize != (dataSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*dataPointer & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | dataPointer[2];\n  }\n  if ((*dataPointer & 1) != 0) {\n    tempValue = dataPointer[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08001cc4();\n    if (dataPointer[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (dataPointer[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (dataSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | dataSize;\n    if (dataSize != (dataSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*dataPointer & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | dataPointer[3];\n  }\n  if ((*dataPointer & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | dataPointer[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "update_data_08003ad4",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "initialize_system_08003afa",
            "code": "\n\n\nundefined4 initializeSystem_08003afa(uint *configFlags,uint numOptions)\n\n{\n  int startTime;\n  int currentTime;\n  uint optionValue;\n  \n  if ((*configFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | configFlags[2];\n  }\n  if ((*configFlags & 1) != 0) {\n    optionValue = configFlags[1];\n    if (optionValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((optionValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = optionValue | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08001cc4();\n    if (configFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (configFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numOptions < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numOptions;\n    if (numOptions != (numOptions & 7)) {\n      return 1;\n    }\n  }\n  if ((*configFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | configFlags[3];\n  }\n  if ((*configFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | configFlags[4] << 3;\n  }\n  optionValue = FUN_08003a68();\n  DAT_20000084 = optionValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "initialize_system_08003afa",
                "param_1": "configFlags",
                "param_2": "numOptions",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "optionValue"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_variable_08003c44",
            "code": "\nundefined4 get_global_variable_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_variable_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "get_shifted_value_08003c50",
            "code": "\n\n\nuint getShiftedValue_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "get_shifted_value_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "shift_right_by_index_08003c70",
            "code": "\n\n\nuint shiftRightByIndex_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "shift_right_by_index_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_configuration_08003c90",
            "code": "\n\n\nundefined4 updateConfiguration_08003c90(uint *config)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int initialValue;\n  int currentValue;\n  bool isFlagSet;\n  \n  if ((*config & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = FUN_08001cc4();\n        if (100 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        initialValue = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentValue = FUN_08001cc4();\n          if (5000 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_configuration_08003c90",
                "param_1": "config",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "initialValue",
                "iVar4": "currentValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_time_delay_08003da4",
            "code": "\n\n\nuint calculateTimeDelay_08003da4(int deviceState)\n\n{\n  uint timeDelay;\n  undefined2 deviceSpeed;\n  undefined4 currentTime;\n  undefined4 speedFactor;\n  undefined4 baseSpeed;\n  undefined4 defaultSpeed;\n  \n  defaultSpeed = 0x10100f0e;\n  baseSpeed = 0xd0c0b0a;\n  speedFactor = 0x9080706;\n  currentTime = 0x5040302;\n  deviceSpeed = 0x201;\n  if (deviceState == 2) {\n    timeDelay = FUN_08003c70();\n    timeDelay = timeDelay / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (deviceState == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      timeDelay = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        timeDelay = 4000000;\n      }\n      else {\n        timeDelay = 8000000 / *(byte *)((int)&deviceSpeed - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      timeDelay = timeDelay * *(byte *)((int)&currentTime + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        timeDelay = (timeDelay * 2) / 3;\n      }\n    }\n  }\n  else if (deviceState == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      timeDelay = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      timeDelay = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        timeDelay = 0;\n      }\n      else {\n        timeDelay = 0xf424;\n      }\n    }\n    else {\n      timeDelay = 0;\n    }\n  }\n  else {\n    timeDelay = 0;\n  }\n  return timeDelay;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_time_delay_08003da4",
                "param_1": "deviceState",
                "uVar1": "timeDelay",
                "local_24": "deviceSpeed",
                "uStack_20": "currentTime",
                "uStack_1c": "speedFactor",
                "uStack_18": "baseSpeed",
                "uStack_14": "defaultSpeed"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_memory_08003ea0",
            "code": "\n\n\nvoid initializeMemory_08003ea0(uint **memoryPointer)\n\n{\n  if (((**memoryPointer & 2) != 0) && (((*memoryPointer)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*memoryPointer)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)memoryPointer + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_memory_08003ea0",
                "param_1": "memoryPointer"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "set_flag_and_call_function_08003ed8",
            "code": "\nvoid setFlagAndCallFunction_08003ed8(uint **inputArray)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)inputArray + 0x3d) = 2;\n  ptr = *inputArray;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(inputArray);\n  *(undefined *)((int)inputArray + 0x3d) = 0;\n  *(undefined *)(inputArray + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "set_flag_and_call_function_08003ed8",
                "param_1": "inputArray",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_flags_08003f18",
            "code": "\nvoid processFlags_08003f18(int *flags)\n\n{\n  int currentValue;\n  \n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 2) != 0) && ((*(uint *)(currentValue + 0xc) & 2) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 7) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 4) != 0) && ((*(uint *)(currentValue + 0xc) & 4) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 7) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      FUN_08004df8(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 8) != 0) && ((*(uint *)(currentValue + 0xc) & 8) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 7) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      FUN_08004df8(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 0x10) != 0) && ((*(uint *)(currentValue + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 7) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 1) != 0) && ((*(uint *)(currentValue + 0xc) & 1) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffe;\n    FUN_08004e12(flags);\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 0x80) != 0) && ((*(uint *)(currentValue + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffff7f;\n    FUNC_0800417a(flags);\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 0x40) != 0) && ((*(uint *)(currentValue + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffbf;\n    FUNC_08003f16(flags);\n  }\n  currentValue = *flags;\n  if (((*(uint *)(currentValue + 0x10) & 0x20) != 0) && ((*(uint *)(currentValue + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffdf;\n    FUNC_08004178(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_flags_08003f18",
                "param_1": "flags",
                "iVar1": "currentValue"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bit_value_08004092",
            "code": "\nvoid updateBitValue_08004092(int baseAddress,uint bitIndex,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bit_value_08004092",
                "param_1": "baseAddress",
                "param_2": "bitIndex",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "validate_and_update_flags_080040b0",
            "code": "\nundefined4 validate_and_update_flags_080040b0(uint **pointer,undefined4 value)\n\n{\n  uint *current_pointer;\n  \n  FUN_08004092(*pointer,value,0);\n  if (((*pointer == (uint *)0x40012c00) && ((constant_value_2 & 0x1111) == 0)) &&\n     ((constant_value_2 & 0x444) == 0)) {\n    updated_value = updated_value & 0xffff7fff;\n  }\n  current_pointer = *pointer;\n  if (((current_pointer[8] & 0x1111) == 0) && ((current_pointer[8] & 0x444) == 0)) {\n    *current_pointer = *current_pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)pointer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "validate_and_update_flags_080040b0",
                "param_1": "pointer",
                "param_2": "value",
                "puVar1": "current_pointer",
                "uRam40012c20": "constant_value_2",
                "uRam40012c44": "updated_value"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_value_in_memory_08004110",
            "code": "\nvoid updateValueInMemory_08004110(int memoryAddress,uint bitPosition,int value)\n\n{\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) | value << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_value_in_memory_08004110",
                "param_1": "memoryAddress",
                "param_2": "bitPosition",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_flags_and_values_0800412c",
            "code": "\nundefined4 updateFlagsAndValues_0800412c(uint **inputParams,undefined4 paramValue)\n\n{\n  uint *tempPtr;\n  \n  FUN_08004110(*inputParams,paramValue,0);\n  tempPtr = *inputParams;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    tempPtr[0x11] = tempPtr[0x11] & 0xffff7fff;\n  }\n  tempPtr = *inputParams;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_flags_and_values_0800412c",
                "param_1": "inputParams",
                "param_2": "paramValue",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "clear_bits_0800417c",
            "code": "\nvoid clearBits_0800417c(int *arrayPtr)\n\n{\n  *(uint *)(*arrayPtr + 0xc) = *(uint *)(*arrayPtr + 0xc) & 0xfffffedf;\n  *(uint *)(*arrayPtr + 0x14) = *(uint *)(*arrayPtr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)arrayPtr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "clear_bits_0800417c",
                "param_1": "arrayPtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "parse_binary_header_08004198",
            "code": "\nundefined4 parse_binary_header_08004198(int *header)\n\n{\n  short num_elements;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)header + 0x39) != '!') {\n    return 2;\n  }\n  if (header_value == 0x1000) {\n    *(uint *)(*header + 4) = *(ushort *)value_ptr & 0x1ff;\n    if (condition == 0) {\n      value_ptr = value_ptr + 2;\n    }\n    else {\n      value_ptr = value_ptr + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)value_ptr;\n    value_ptr = (int)(byte_ptr + 1);\n    *(uint *)(*header + 4) = (uint)*byte_ptr;\n  }\n  num_elements = *(short *)((int)header + 0x26) + -1;\n  *(short *)((int)header + 0x26) = num_elements;\n  if (num_elements == 0) {\n    *(uint *)(*header + 0xc) = *(uint *)(*header + 0xc) & 0xffffff7f;\n    *(uint *)(*header + 0xc) = *(uint *)(*header + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "parse_binary_header_08004198",
                "param_1": "header",
                "sVar1": "num_elements",
                "pbVar2": "byte_ptr",
                "param_1[2]": "header_value",
                "param_1[4]": "condition",
                "param_1[8]": "value_ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_values_and_update_08004204",
            "code": "\nvoid calculateValuesAndUpdate_08004204(int *inputArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int tempVar1;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       inputArray[2] | inputArray[4] | inputArray[5] | *(uint *)(*inputArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  tempVar1 = *inputArray;\n  if (tempVar1 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = inputArray[1];\n    result2 = FUN_08003c50();\n    result7 = inputArray[1];\n    result3 = FUN_08003c50();\n    result8 = inputArray[1];\n    result4 = FUN_08003c50();\n    result9 = inputArray[1];\n    result5 = FUN_08003c50();\n    *(uint *)(tempVar1 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  tempVar1 = FUN_08003c70();\n  result5 = inputArray[1];\n  result1 = FUN_08003c70();\n  result6 = inputArray[1];\n  result2 = FUN_08003c70();\n  result7 = inputArray[1];\n  result3 = FUN_08003c70();\n  result8 = inputArray[1];\n  result4 = FUN_08003c70();\n  tempVar2 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_values_and_update_08004204",
                "param_1": "inputArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "tempVar1",
                "iRam40013808": "tempVar2"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_validity_080043b4",
            "code": "\nundefined4 checkValidity_080043b4(uint **inputArray,uint mask,uint expectedValidity,int param4Value,uint param5Value)\n\n{\n  int param1Result;\n  \n  do {\n    if (((mask & ~**inputArray) == 0) != expectedValidity) {\n      return 0;\n    }\n  } while ((param5Value == 0xffffffff) ||\n          ((param5Value != 0 && (param1Result = FUN_08001cc4(), (uint)(param1Result - param4Value) <= param5Value))));\n  (*inputArray)[3] = (*inputArray)[3] & 0xfffffe5f;\n  (*inputArray)[5] = (*inputArray)[5] & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x39) = 0x20;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  *(undefined *)(inputArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_validity_080043b4",
                "param_1": "inputArray",
                "param_2": "mask",
                "param_3": "expectedValidity",
                "param_4": "param4Value",
                "param_5": "param5Value",
                "iVar1": "param1Result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_and_reset_0800441a",
            "code": "\nundefined4 initialize_and_reset_0800441a(int *pointer)\n\n{\n  if (pointer != (int *)0x0) {\n    if (*(char *)((int)pointer + 0x39) == '\\0') {\n      *(undefined *)(pointer + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)pointer + 0x39) = 0x24;\n    *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xffffdfff;\n    FUN_08004204(pointer);\n    *(uint *)(*pointer + 0x10) = *(uint *)(*pointer + 0x10) & 0xffffb7ff;\n    *(uint *)(*pointer + 0x14) = *(uint *)(*pointer + 0x14) & 0xffffffd5;\n    *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) | 0x2000;\n    flag2 = 0;\n    *(undefined *)((int)pointer + 0x39) = 0x20;\n    *(undefined *)((int)pointer + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_and_reset_0800441a",
                "param_1": "pointer",
                "param_1[0xf]": "flag2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *dataPtr,ushort *ushortPtr,int length,undefined4 result)\n\n{\n  int tempVar1;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataPtr + 0x39) == ' ') {\n    if (ushortPtr == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (length == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataPtr + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataPtr + 0xe) = 1;\n      dataPtr[0xf] = 0;\n      *(undefined *)((int)dataPtr + 0x39) = 0x21;\n      returnValue = FUN_08001cc4();\n      *(short *)(dataPtr + 9) = (short)length;\n      *(short *)((int)dataPtr + 0x26) = (short)length;\n      while (*(short *)((int)dataPtr + 0x26) != 0) {\n        *(short *)((int)dataPtr + 0x26) = *(short *)((int)dataPtr + 0x26) + -1;\n        if (dataPtr[2] == 0x1000) {\n          tempVar1 = FUN_080043b4(dataPtr,0x80,0,returnValue,result);\n          if (tempVar1 != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = *ushortPtr & 0x1ff;\n          if (dataPtr[4] == 0) {\n            ushortPtr = ushortPtr + 1;\n          }\n          else {\n            ushortPtr = (ushort *)((int)ushortPtr + 1);\n          }\n        }\n        else {\n          tempVar1 = FUN_080043b4(dataPtr,0x80,0,returnValue,result);\n          if (tempVar1 != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = (uint)*(byte *)ushortPtr;\n          ushortPtr = (ushort *)((int)ushortPtr + 1);\n        }\n      }\n      tempVar1 = FUN_080043b4(dataPtr,0x40,0,returnValue,result);\n      if (tempVar1 == 0) {\n        *(undefined *)((int)dataPtr + 0x39) = 0x20;\n        *(undefined *)(dataPtr + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "dataPtr",
                "param_2": "ushortPtr",
                "param_3": "length",
                "param_4": "result",
                "iVar1": "tempVar1",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "validate_input_0800455a",
            "code": "\nundefined4 validate_input_0800455a(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value_1;\n    *(short *)(input_array + 9) = (short)value_2;\n    *(short *)((int)input_array + 0x26) = (short)value_2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "validate_input_0800455a",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "validate_and_set_parameters_080045a2",
            "code": "\nundefined4 validate_and_set_parameters_080045a2(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    array_element_10 = value_1;\n    *(short *)(input_array + 0xb) = (short)value_2;\n    *(short *)((int)input_array + 0x2e) = (short)value_2;\n    array_element_0xf = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "validate_and_set_parameters_080045a2",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[10]": "array_element_10",
                "param_1[0xf]": "array_element_0xf"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "clear_flags_and_set_character_080045fe",
            "code": "\nundefined4 clearFlagsAndSetCharacter_080045fe(int *flagPtr)\n\n{\n  *(uint *)(*flagPtr + 0xc) = *(uint *)(*flagPtr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)flagPtr + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "clear_flags_and_set_character_080045fe",
                "param_1": "flagPtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_input_08004618",
            "code": "\nundefined4 processInput_08004618(int *inputArray)\n\n{\n  byte *bytePointer;\n  short decrementedValue;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)inputArray + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (inputArray[2] == 0x1000) {\n    if (inputArray[4] == 0) {\n      *(ushort *)inputArray[10] = (ushort)((uint)(*(int *)(*inputArray + 4) << 0x17) >> 0x17);\n      inputArray[10] = inputArray[10] + 2;\n    }\n    else {\n      *(ushort *)inputArray[10] = (ushort)*(undefined4 *)(*inputArray + 4) & 0xff;\n      inputArray[10] = inputArray[10] + 1;\n    }\n  }\n  else if (inputArray[4] == 0) {\n    undefinedPointer = (undefined *)inputArray[10];\n    inputArray[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*inputArray + 4);\n  }\n  else {\n    bytePointer = (byte *)inputArray[10];\n    inputArray[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*inputArray + 4) & 0x7f;\n  }\n  decrementedValue = *(short *)((int)inputArray + 0x2e) + -1;\n  *(short *)((int)inputArray + 0x2e) = decrementedValue;\n  if (decrementedValue != 0) {\n    return 0;\n  }\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xffffffdf;\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xfffffeff;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_input_08004618",
                "param_1": "inputArray",
                "pbVar1": "bytePointer",
                "sVar2": "decrementedValue",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_data_080046b8",
            "code": "\nvoid processData_080046b8(uint **data)\n\n{\n  int result;\n  uint value2;\n  uint *ptr;\n  uint flag;\n  uint value1;\n  \n  ptr = *data;\n  value1 = *ptr;\n  value2 = ptr[3];\n  if ((((value1 & 0xf) == 0) && ((value1 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    FUN_08004618(data);\n    return;\n  }\n  if (((value1 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value2 & 0x120) == 0)))) {\n    if (((value1 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      FUN_08004198(data);\n      return;\n    }\n    if (((value1 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      FUN_080045fe(data);\n    }\n  }\n  else {\n    if (((value1 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((value1 & 4) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((value1 & 2) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((value1 & 8) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((value1 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        FUN_08004618(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        FUNC_08005650(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08005650(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        FUNC_08005650(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&LAB_080047d8_1;\n      result = FUN_0800258c(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_data_080046b8",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "value2",
                "puVar3": "ptr",
                "uVar4": "flag",
                "uVar5": "value1"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int data)\n\n{\n  return *(byte *)(data + 0x3a) | *(byte *)(data + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "data"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "get_bit_value_080047f4",
            "code": "\nuint get_bit_value_080047f4(uint input_value,int data_address)\n\n{\n  return *(uint *)(data_address + ((input_value << 0x18) >> 0x1c) * 4) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "get_bit_value_080047f4",
                "param_1": "input_value",
                "param_2": "data_address"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_in_array_0800480a",
            "code": "\nvoid setBitInArray_0800480a(uint bitIndex,int arrayPointer)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayPointer + shiftedIndex * 4) = *(uint *)(arrayPointer + shiftedIndex * 4) | 1 << (bitIndex & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "bitIndex",
                "param_2": "arrayPointer",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "clear_bit_in_array_08004828",
            "code": "\nvoid clearBitInArray_08004828(uint index,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (index << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) & ~(1 << (index & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "clear_bit_in_array_08004828",
                "param_1": "index",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_memory_address_08004848",
            "code": "\nundefined4 getMemoryAddress_08004848(undefined4 inputValue)\n\n{\n  switch(inputValue) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_flag_and_return_address_08004884",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_08004884(undefined4 flag)\n\n{\n  undefined4 returnValue;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_flag_and_return_address_08004884",
                "param_1": "flag",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "validate_input_0800492c",
            "code": "\nuint validate_input_0800492c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08004cce(input_1,&DAT_08007400,input_3,input_4,input_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_result - 1) {\n    shifted_result = 0;\n  }\n  return shifted_result;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "validate_input_0800492c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "check_flag_value_08004948",
            "code": "\nundefined4 check_flag_value_08004948(undefined4 input_value,undefined4 param2,undefined4 flag1,undefined4 flag2)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08004cce(input_value,&DAT_080074b4,flag1,flag2,flag2);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "check_flag_value_08004948",
                "param_1": "input_value",
                "param_2": "param2",
                "param_3": "flag1",
                "param_4": "flag2",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "initialize_hardware_08004974",
            "code": "\n\n\nvoid initializeHardware_08004974(int *hardwareConfig,undefined4 configValue)\n\n{\n  undefined4 result;\n  uint registerValue;\n  int currentValue;\n  uint bitMask;\n  undefined4 value1;\n  undefined4 value2;\n  \n  currentValue = *hardwareConfig;\n  if (currentValue == 0x40012400) {\n    registerValue = _DAT_40021018 | 0x200;\n    currentValue = 0x200;\n    _DAT_40021018 = registerValue;\n  }\n  else {\n    registerValue = 0x40012800;\n    if (currentValue == 0x40012800) {\n      registerValue = _DAT_40021018 | 0x400;\n      currentValue = 0x400;\n      _DAT_40021018 = registerValue;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,configValue,registerValue,currentValue);\n  bitMask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  value1 = 3;\n  value2 = 0;\n  FUN_08002624(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "initialize_hardware_08004974",
                "param_1": "hardwareConfig",
                "param_2": "configValue",
                "uVar1": "result",
                "uVar2": "registerValue",
                "iVar3": "currentValue",
                "local_18": "bitMask",
                "local_14": "value1",
                "local_10": "value2"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_flags_080049f0",
            "code": "\n\n\nvoid updateFlags_080049f0(int *address)\n\n{\n  if (*address != 0x40012400) {\n    if (*address == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_flags_080049f0",
                "param_1": "address"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "extract_data_08004a4c",
            "code": "\nundefined2 extract_data_08004a4c(undefined4 input_data)\n\n{\n  int status;\n  uint bitmask;\n  undefined2 result;\n  uint length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int data_array;\n  undefined4 initial_val1;\n  undefined4 initial_val2;\n  undefined4 initial_val3;\n  undefined4 initial_val4;\n  undefined4 initial_val5;\n  undefined4 initial_val6;\n  undefined4 initial_val7;\n  undefined4 initial_val8;\n  \n  FUN_080061e0(&data_array,0,0x30);\n  length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  data_array = FUN_08004c78(input_data,&DAT_08007400);\n  if (data_array == 0) {\n    result = 0;\n  }\n  else {\n    initial_val1 = 0;\n    initial_val2 = 0;\n    initial_val3 = 0;\n    initial_val5 = 0;\n    initial_val7 = 0xe0000;\n    initial_val8 = 0;\n    initial_val4 = 1;\n    initial_val6 = 0;\n    DAT_20000080 = (undefined)input_data;\n    status = FUN_0800213c(&data_array);\n    if (status == 0) {\n      length = FUN_0800492c(input_data);\n      if (length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        status = FUN_08001e48(&data_array,&length);\n        if (status == 0) {\n          status = FUN_08002384(&data_array);\n          if (status == 0) {\n            status = FUN_08002004(&data_array);\n            if (status == 0) {\n              status = FUN_08001cd0(&data_array,10);\n              if (status == 0) {\n                bitmask = FUN_08001f80(&data_array);\n                if ((bitmask & 0x200) != 0) {\n                  result = FUN_08001e40(&data_array);\n                }\n                status = FUN_08002348(&data_array);\n                if (status == 0) {\n                  status = FUN_0800224c(&data_array);\n                  if (status != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "extract_data_08004a4c",
                "param_1": "input_data",
                "iVar1": "status",
                "uVar2": "bitmask",
                "local_46": "result",
                "local_44": "length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "data_array",
                "local_34": "initial_val1",
                "local_30": "initial_val2",
                "local_2c": "initial_val3",
                "local_28": "initial_val4",
                "local_24": "initial_val5",
                "local_20": "initial_val6",
                "local_1c": "initial_val7",
                "local_10": "initial_val8"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_application_08004b34",
            "code": "\nvoid initializeApplication_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_application_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_data_08004b3c",
            "code": "\nvoid processData_08004b3c(undefined4 inputData)\n\n{\n  int result;\n  uint flags;\n  int array [17];\n  \n  array[0] = FUN_08004c78(inputData,&DAT_080074b4);\n  if ((array[0] != 0) &&\n     ((((result = FUN_08004948(inputData), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(inputData,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(array,result);\n    }\n    else {\n      FUN_0800412c(array,result);\n    }\n    FUN_08003ed8(array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_application_08004b94",
            "code": "\nvoid initialize_application_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_application_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_and_execute_function_08004b9e",
            "code": "\nvoid initialize_and_execute_function_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_and_execute_function_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "initialize_hardware_08004bb0",
            "code": "\n\n\nvoid initializeHardware_08004bb0(uint inputValue,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 result;\n  uint bitMask;\n  undefined4 localParam2;\n  undefined4 localParam3;\n  undefined4 constantValue;\n  \n  result = FUN_08004884((inputValue << 0x18) >> 0x1c);\n  bitMask = 1 << (inputValue & 0xf) & 0xffff;\n  constantValue = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((inputValue - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((inputValue == 0xf) || (inputValue == 0x13)) || (inputValue == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localParam2 = parameter2;\n  localParam3 = parameter3;\n  FUN_08002624(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "initialize_hardware_08004bb0",
                "param_1": "inputValue",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "uVar1": "result",
                "local_20": "bitMask",
                "local_1c": "localParam2",
                "local_18": "localParam3",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "toggle_function_08004c30",
            "code": "\nvoid toggleFunction_08004c30(undefined4 input1,undefined2 input2,int flag,undefined4 data)\n\n{\n  if (flag == 0) {\n    FUN_0800281e(input1,input2,0,data,data);\n    return;\n  }\n  FUN_0800281e(input1,input2,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "toggle_function_08004c30",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "flag",
                "param_4": "data"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "execute_function_08004c48",
            "code": "\nvoid executeFunction_08004c48(undefined4 inputParam1,undefined2 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08002810(inputParam1,inputParam2,inputParam3,inputParam4,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "execute_function_08004c48",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_application_08004c52",
            "code": "\nvoid initialize_application_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_application_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_in_array_08004c5e",
            "code": "\nundefined4 find_value_in_array_08004c5e(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_in_array_08004c5e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_validity_08004c78",
            "code": "\nundefined4 checkValidity_08004c78(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue != -1) {\n    returnValue = FUN_08004c5e();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_validity_08004c78",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_matching_value_08004c8a",
            "code": "\nint find_matching_value_08004c8a(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == value_to_find) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_matching_value_08004c8a",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_validity_08004ca2",
            "code": "\nundefined4 checkValidity_08004ca2(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue != 0) {\n    returnValue = FUN_08004c8a();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_validity_08004ca2",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_index_08004cb2",
            "code": "\nundefined4 find_value_index_08004cb2(int value,char *data)\n\n{\n  while( true ) {\n    if (*data == -1) {\n      return 0xffffffff;\n    }\n    if (*data == value) break;\n    data = data + 0xc;\n  }\n  return *(undefined4 *)(data + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_index_08004cb2",
                "param_1": "value",
                "param_2": "data"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "get_return_value_08004cce",
            "code": "\nundefined4 getReturnValue_08004cce(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_08004cb2();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "get_return_value_08004cce",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_param_in_array_08004ce2",
            "code": "\nundefined4 find_param_in_array_08004ce2(int target_value,char *array)\n\n{\n  if (target_value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (target_value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_param_in_array_08004ce2",
                "param_1": "target_value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "get_nonzero_param_08004d06",
            "code": "\nint get_nonzero_param_08004d06(int first_param,int second_param)\n\n{\n  if (first_param != second_param) {\n    if (first_param == 0) {\n      return second_param;\n    }\n    if (second_param == 0) {\n      return first_param;\n    }\n    first_param = 0;\n  }\n  return first_param;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "get_nonzero_param_08004d06",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_function_08004d18",
            "code": "\nvoid executeCallbackFunction_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_memory_registers_08004d44",
            "code": "\n\n\nvoid initializeMemoryRegisters_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_memory_registers_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "clear_flags_based_on_value_08004d90",
            "code": "\n\n\nvoid clearFlagsBasedOnValue_08004d90(int *valuePointer)\n\n{\n  if (*valuePointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*valuePointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*valuePointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*valuePointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "clear_flags_based_on_value_08004d90",
                "param_1": "valuePointer"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtractFour_08004df4(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_function_08004df8",
            "code": "\nvoid executeCallbackFunction_08004df8(int callbackParameter)\n\n{\n  int functionPtr;\n  \n  functionPtr = FUN_08004df4();\n  if ((*(code **)(functionPtr + 0x4c) != (code *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(code **)(functionPtr + 0x4c))(functionPtr,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_function_08004df8",
                "param_1": "callbackParameter",
                "iVar1": "functionPtr"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_function_08004e12",
            "code": "\nvoid executeFunction_08004e12(void)\n\n{\n  int result;\n  \n  result = FUN_08004df4();\n  if (*(functionPointer **)(result + 0x48) != (functionPointer *)0x0) {\n    (**(functionPointer **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_function_08004e12",
                "iVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_invoke_function_08004e20",
            "code": "\nvoid checkAndInvokeFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_invoke_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtract_four_08004e70(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "update_data_08004e74",
            "code": "\nvoid updateData_08004e74(int data,int flag,int comparison,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (comparison == *(int *)(data + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08002af8(data,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08002b84(data,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "update_data_08004e74",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "comparison",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_conditional_function_08004ec4",
            "code": "\nvoid executeConditionalFunction_08004ec4(undefined4 argument)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004e70();\n  if (((*(code **)(functionPointer + 0x60) != (code *)0x0) && (*(char *)(functionPointer + 0x5c) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(code **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08002c10(argument);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_conditional_function_08004ec4",
                "param_1": "argument",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_execute_function_08004ef4",
            "code": "\nvoid checkAndExecuteFunction_08004ef4(undefined4 inputParam)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004e70();\n  if (*(char *)(returnValue + 0x5d) == '\\0') {\n    FUN_08002c10(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_execute_function_08004ef4",
                "param_1": "inputParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "initialize_uart_08004f4c",
            "code": "\n\n\nvoid initializeUART_08004f4c(int *uartConfiguration)\n\n{\n  int pin1Peripheral;\n  int pin2Peripheral;\n  undefined4 uartConfigValue;\n  uint uartPinValue;\n  uint uartPinMask;\n  uint uartControlValue;\n  uint uartBaudRate;\n  undefined4 uartBufferSize;\n  \n  if (uartConfiguration != (int *)0x0) {\n    pin1Peripheral = FUN_08004c78((int)*(char *)(uartConfiguration + 0x16),&DAT_0800764c);\n    pin2Peripheral = FUN_08004c78((int)*(char *)((int)uartConfiguration + 0x59),&DAT_08007604);\n    if ((pin2Peripheral == 0) || (pin1Peripheral == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",pin2Peripheral);\n    }\n    else {\n      pin1Peripheral = FUN_08004d06(pin1Peripheral);\n      *uartConfiguration = pin1Peripheral;\n      if (pin1Peripheral == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (pin1Peripheral == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfiguration + 0x11) = 0;\n          *(undefined *)((int)uartConfiguration + 0x5a) = 0x25;\n        }\n        else if (pin1Peripheral == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfiguration + 0x11) = 1;\n          *(undefined *)((int)uartConfiguration + 0x5a) = 0x26;\n        }\n        else if (pin1Peripheral == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfiguration + 0x11) = 2;\n          *(undefined *)((int)uartConfiguration + 0x5a) = 0x27;\n        }\n        uartConfigValue = FUN_08004884((uint)((int)*(char *)((int)uartConfiguration + 0x59) << 0x18) >> 0x1c);\n        uartPinValue = FUN_08004cce((int)*(char *)((int)uartConfiguration + 0x59),&DAT_08007604);\n        uartPinMask = 1 << (*(byte *)((int)uartConfiguration + 0x59) & 0xf) & 0xffff;\n        uartControlValue = (uartPinValue >> 3 & 1) << 4 | uartPinValue & 7;\n        uartBaudRate = (uartPinValue << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPinValue << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartBufferSize = 3;\n        FUN_08002624(uartConfigValue,&uartPinMask);\n        uartConfigValue = FUN_08004884((uint)((int)*(char *)(uartConfiguration + 0x16) << 0x18) >> 0x1c);\n        uartPinValue = FUN_08004cce((int)*(char *)(uartConfiguration + 0x16),&DAT_0800764c);\n        uartPinMask = 1 << (*(byte *)(uartConfiguration + 0x16) & 0xf) & 0xffff;\n        uartControlValue = (uartPinValue >> 3 & 1) << 4 | uartPinValue & 7;\n        uartBaudRate = (uartPinValue << 0x1a) >> 0x1e;\n        FUN_08002624(uartConfigValue,&uartPinMask);\n        (&DAT_2000032c)[*(byte *)(uartConfiguration + 0x11)] = uartConfiguration + 1;\n        uartConfiguration[1] = *uartConfiguration;\n        uartConfiguration[2] = uartConfiguration[0x12];\n        uartConfiguration[3] = uartConfiguration[0x13];\n        uartConfiguration[4] = uartConfiguration[0x14];\n        uartConfiguration[5] = uartConfiguration[0x15];\n        uartConfiguration[6] = 0xc;\n        uartConfiguration[7] = 0;\n        uartConfiguration[8] = 0;\n        FUN_0800441a(uartConfiguration + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "initialize_uart_08004f4c",
                "param_1": "uartConfiguration",
                "iVar1": "pin1Peripheral",
                "iVar2": "pin2Peripheral",
                "uVar3": "uartConfigValue",
                "uVar4": "uartPinValue",
                "local_20": "uartPinMask",
                "local_1c": "uartControlValue",
                "local_18": "uartBaudRate",
                "local_14": "uartBufferSize"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result1;\n  undefined4 result2;\n  \n  result1 = FUN_08004c78(2,&DAT_0800764c);\n  if (result1 != 0) {\n    result2 = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(result2,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "check_and_execute_080053d4",
            "code": "\nuint check_and_execute_080053d4(undefined4 input_1,uint input_2)\n\n{\n  int returnValue1;\n  int returnValue2;\n  uint index;\n  \n  returnValue1 = FUN_08001cc4();\n  returnValue2 = FUN_08004c78(2,&DAT_0800764c);\n  if (returnValue2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (returnValue2 = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != returnValue2))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    returnValue2 = FUN_08004478((&DAT_2000032c)[index],input_1,input_2 & 0xffff,1000);\n    if (returnValue2 == 0) {\n      return input_2;\n    }\n    returnValue2 = FUN_08001cc4();\n  } while ((uint)(returnValue2 - returnValue1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "check_and_execute_080053d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "returnValue1",
                "iVar2": "returnValue2",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "check_condition_0800548c",
            "code": "\nbool check_condition_0800548c(int input_value)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(input_value + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "check_condition_0800548c",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_condition_met_080054b0",
            "code": "\nbool isConditionMet_080054b0(int input)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(input + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_condition_met_080054b0",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_data_080054d4",
            "code": "\nundefined4 extract_data_080054d4(int data_address,undefined *extracted_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (data_address == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *extracted_data = *(undefined *)(data_address + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(data_address + 0x44)],data_address + 0x45,1,&DAT_2000032c,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_data_080054d4",
                "param_1": "data_address",
                "param_2": "extracted_data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_function_08005510",
            "code": "\nvoid updateFunction_08005510(int inputParam,undefined4 valueParam,undefined4 addrParam,undefined4 flagParam)\n\n{\n  int result;\n  uint index;\n  \n  if (inputParam != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(inputParam + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = valueParam;\n      *(int *)(&DAT_200002f0 + index * 4) = inputParam;\n      FUN_08002494((int)*(char *)(inputParam + 0x5a),0,1,index,flagParam);\n      FUN_080024f8((int)*(char *)(inputParam + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(inputParam + 0x44)],inputParam + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_function_08005510",
                "param_1": "inputParam",
                "param_2": "valueParam",
                "param_3": "addrParam",
                "param_4": "flagParam",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int dataPtr,undefined4 newValue)\n\n{\n  byte index;\n  \n  if (dataPtr != 0) {\n    index = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)index * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)index * 4) = dataPtr;\n    FUN_08002494((int)*(char *)(dataPtr + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(dataPtr + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "index"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_value_index_080055bc",
            "code": "\nuint find_value_index_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_value_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_function_based_on_value_080055e0",
            "code": "\nvoid execute_function_based_on_value_080055e0(void)\n\n{\n  uint function_value;\n  \n  function_value = FUN_080055bc();\n  if (function_value < 5) {\n    (**(code **)(&DAT_200002dc + function_value * 4))(*(undefined4 *)(&DAT_200002f0 + function_value * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_function_based_on_value_080055e0",
                "uVar1": "function_value"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_function_08005604",
            "code": "\nvoid executeFunction_08005604(void)\n\n{\n  uint result;\n  int returnValue;\n  int address;\n  \n  result = FUN_080055bc();\n  address = *(int *)(&DAT_20000318 + result * 4);\n  if ((result < 5) && (returnValue = (**(code **)(&DAT_20000304 + result * 4))(address), returnValue != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(address + 0x44)],\n                 *(int *)(address + 100) + (uint)*(ushort *)(address + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "result",
                "iVar2": "returnValue",
                "iVar3": "address"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= &stack0x00000000) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_error_status_08005714",
            "code": "\nuint32_t get_error_status_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_error_status_08005714",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "initialize_memory_0800571a",
            "code": "\nundefined4 initializeMemory_0800571a(undefined4 param1,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "initialize_memory_0800571a",
                "param_1": "param1",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_application_08005724",
            "code": "\nundefined4 initializeApplication_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_application_08005724"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_application_08005728",
            "code": "\nundefined4 initialize_application_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_application_08005728"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "initialize_application_0800572c",
            "code": "\nundefined4 initializeApplication_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "initialize_application_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_function_08005730",
            "code": "\nvoid initializeFunction_08005730(undefined4 unusedParam,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080053d4(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_function_08005730",
                "param_1": "unusedParam",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_value_08005740",
            "code": "\nundefined4 initializeValue_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_value_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_08005750",
            "code": "\nundefined4 initialize_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "get_modified_value_08005754",
            "code": "\nuint getModifiedValue_08005754(uint originalValue)\n\n{\n  bool isInRange;\n  char modifiedChar;\n  uint modifiedValue;\n  \n  if (originalValue < 0xe) {\n    if (originalValue + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = originalValue < 0x3c;\n  }\n  if (isInRange) {\n    if (originalValue < 0xe) {\n      originalValue = originalValue + 0x2e;\n    }\n    modifiedChar = (&DAT_080076f0)[originalValue];\n  }\n  else {\n    modifiedChar = -1;\n  }\n  if (modifiedChar == -1) {\n    modifiedValue = 0;\n  }\n  else {\n    modifiedValue = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return modifiedValue >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return modifiedValue << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return modifiedValue;\n}\n\n",
            "renaming": {
                "FUN_08005754": "get_modified_value_08005754",
                "param_1": "originalValue",
                "bVar1": "isInRange",
                "cVar2": "modifiedChar",
                "uVar3": "modifiedValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "process_data_080057b4",
            "code": "\nvoid processData_080057b4(uint index,undefined4 mode,undefined4 paramData,undefined *defaultData)\n\n{\n  int success;\n  undefined *dataPtr;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_080076f0)[index];\n    dataPtr = &DAT_080076f0;\n  }\n  else {\n    value = -1;\n    dataPtr = defaultData;\n  }\n  if (value != -1) {\n    success = FUN_080047f4(value,&DAT_20000344,paramData,dataPtr,defaultData);\n    if (success != 0) {\n      success = FUN_08004ce2(value,&DAT_080074b4);\n      if (success != 0) {\n        FUN_08004b3c(value);\n      }\n      FUN_08004828(value,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(value,0);\n      break;\n    case 1:\n      FUN_08004bb0(value,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(value,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(value,0,2);\n    }\n    FUN_0800480a(value,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "process_data_080057b4",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "paramData",
                "param_4": "defaultData",
                "iVar1": "success",
                "puVar2": "dataPtr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "decode_and_process_data_08005848",
            "code": "\nvoid decode_and_process_data_08005848(uint input_length,undefined4 param2,undefined4 param3,undefined *data_pointer)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *data_buffer;\n  uint character;\n  \n  if (input_length < 0x3c) {\n    character = (uint)(char)(&DAT_080076f0)[input_length];\n    data_buffer = &DAT_080076f0;\n  }\n  else {\n    character = 0xffffffff;\n    data_buffer = data_pointer;\n  }\n  if ((character != 0xffffffff) &&\n     (result = FUN_080047f4(character,&DAT_20000358,param3,data_buffer,data_pointer), result != 0)) {\n    shifted_value = FUN_08004848((character << 0x18) >> 0x1c);\n    FUN_08004c30(shifted_value,1 << (character & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "decode_and_process_data_08005848",
                "param_1": "input_length",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data_pointer",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "data_buffer",
                "uVar4": "character"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_character_validity_08005890",
            "code": "\nchar checkCharacterValidity_08005890(uint character)\n\n{\n  char isValid;\n  int returnValue;\n  undefined4 shiftedValue;\n  uint characterIndex;\n  \n  if (character < 0x3c) {\n    characterIndex = (uint)(char)(&DAT_080076f0)[character];\n  }\n  else {\n    characterIndex = 0xffffffff;\n  }\n  if (characterIndex == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    returnValue = FUN_080047f4(characterIndex,&DAT_20000358);\n    if (returnValue == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08004848((characterIndex << 0x18) >> 0x1c);\n      isValid = FUN_08004c48(shiftedValue,1 << (characterIndex & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_character_validity_08005890",
                "param_1": "character",
                "cVar1": "isValid",
                "iVar2": "returnValue",
                "uVar3": "shiftedValue",
                "uVar4": "characterIndex"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_system_080058e0",
            "code": "\nvoid initializeSystem_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_system_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_checksum_0800591e",
            "code": "\nushort calculateChecksum_0800591e(int memoryAddress)\n\n{\n  return (*(short *)(memoryAddress + 0x134) + 0x40) - *(short *)(memoryAddress + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_and_move_pointer_0800598a",
            "code": "\nvoid updateAndMovePointer_0800598a(int param)\n\n{\n  int result;\n  ushort newIndex;\n  undefined value;\n  \n  result = FUN_080054d4(param,&value);\n  if ((result == 0) &&\n     (newIndex = *(short *)(param + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(param + 0x62))) {\n    *(undefined *)(*(int *)(param + 0x5c) + (uint)*(ushort *)(param + 0x60)) = value;\n    *(ushort *)(param + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_and_move_pointer_0800598a",
                "param_1": "param",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "value"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_memory_08005a44",
            "code": "\nvoid initializeMemory_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_memory_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_serial_communication_08005a68",
            "code": "\nvoid initializeSerialCommunication_08005a68(int serialPortAddress,undefined4 baudRate,byte configByte)\n\n{\n  uint returnValue;\n  char *errorMessage;\n  byte configByteExtracted;\n  int configIndex;\n  byte *bytePtr;\n  char charValue;\n  int intValue;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x140) = configByte;\n  configByteExtracted = configByte & 7;\n  if (configByteExtracted == 4) {\n    configIndex = 7;\n  }\n  else if (configByteExtracted == 6) {\n    configIndex = 8;\n  }\n  else if (configByteExtracted == 2) {\n    configIndex = 6;\n  }\n  else {\n    configIndex = 0;\n  }\n  if ((configByte & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    configIndex = configIndex + 1;\n  }\n  else if ((configByte & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    configIndex = configIndex + 1;\n  }\n  if ((configByte & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (configIndex == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (configIndex == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    configIndex = 0;\n  }\n  if (configIndex != 0) {\n    FUN_08004f4c(serialPortAddress + 0xd4);\n    FUN_08005510(serialPortAddress + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTable = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePtr = *(byte **)(returnValue + intValue);\n  errorMessage[0x1e] = charValue;\n  *(undefined *)(*bytePtr + 0x1e) = 0;\n  if (returnValue < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[returnValue];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_serial_communication_08005a68",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "configByte",
                "extraout_r1": "returnValue",
                "pcVar1": "errorMessage",
                "bVar2": "configByteExtracted",
                "iVar3": "configIndex",
                "pbVar4": "bytePtr",
                "unaff_r4": "charValue",
                "unaff_r6": "intValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_special_value_08005b24",
            "code": "\nvoid setSpecialValue_08005b24(int address,uint index)\n\n{\n  undefined value;\n  code *jumpTable;\n  \n  if (index < 0x3c) {\n    value = (&DAT_080076f0)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = value;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_special_value_08005b24",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "value",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "extract_byte_from_data_08005b3c",
            "code": "\nvoid extractByteFromData_08005b3c(int baseAddress,uint offset)\n\n{\n  undefined extractedByte;\n  \n  if (offset < 0x3c) {\n    extractedByte = (&DAT_080076f0)[offset];\n  }\n  else {\n    extractedByte = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = extractedByte;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "extract_byte_from_data_08005b3c",
                "param_1": "baseAddress",
                "param_2": "offset",
                "uVar1": "extractedByte"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_08005b54",
            "code": "\nundefined4 *\ninitializeData_08005b54(undefined4 *data,undefined4 input,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_080059c8_1_08007804;\n  if (data == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,param3,&DAT_2000036c,param4);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    result = FUN_08004ca2(input,&DAT_08007604);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_08004ca2(input,&DAT_0800764c);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08005a44(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "data",
                "param_2": "input",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_and_execute_08005bb0",
            "code": "\nvoid check_and_execute_08005bb0(int value_1,int value_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (value_1 != 1) {\n    return;\n  }\n  if (value_2 == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,param_3,0xffff,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_and_execute_08005bb0",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *dataPointer,undefined byte1,undefined byte2,undefined byte3,\n                 undefined byte4)\n\n{\n  *dataPointer = &DAT_08007858;\n  *(undefined *)(dataPointer + 1) = byte1;\n  *(undefined *)((int)dataPointer + 5) = byte2;\n  *(undefined *)((int)dataPointer + 6) = byte3;\n  *(undefined *)((int)dataPointer + 7) = byte4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "dataPointer",
                "param_2": "byte1",
                "param_3": "byte2",
                "param_4": "byte3",
                "param_5": "byte4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_params_08005c38",
            "code": "\nvoid checkParams_08005c38(int statusFlag,int valueFlag)\n\n{\n  if ((statusFlag == 1) && (valueFlag == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_params_08005c38",
                "param_1": "statusFlag",
                "param_2": "valueFlag"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPointer,int inputSize,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result;\n  \n  if (inputSize != 0) {\n    result = FUN_08000178(inputSize);\n    result = (**(code **)(*functionPointer + 4))(functionPointer,inputSize,result,*(code **)(*functionPointer + 4),param4);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPointer",
                "param_2": "inputSize",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid execute_function_08005cb6(undefined4 *function_pointer)\n\n{\n  (**(code **)*function_pointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "function_pointer"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_code_08005cc0",
            "code": "\nvoid executeCode_08005cc0(int *functionPointer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(code **)(*functionPointer + 4))(functionPointer,&DAT_0800786c,2,*(code **)(*functionPointer + 4),arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_code_08005cc0",
                "param_1": "functionPointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_sum_08005cd4",
            "code": "\nint calculateSum_08005cd4(undefined4 inputValue)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(inputValue);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_sum_08005cd4",
                "param_1": "inputValue",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_decimal_to_base_08005ce8",
            "code": "\nundefined4 convertDecimalToBase_08005ce8(int *arr,uint decimal,uint base)\n\n{\n  char convertedChar;\n  undefined4 returnValue;\n  uint remainder;\n  uint quotient;\n  char *resultPtr;\n  char result [9];\n  \n  result[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  resultPtr = result + 1;\n  do {\n    quotient = decimal / base;\n    remainder = (decimal & 0xff) - (quotient * base & 0xff) & 0xff;\n    resultPtr = resultPtr + -1;\n    convertedChar = (char)remainder;\n    if (remainder < 10) {\n      convertedChar = convertedChar + '0';\n    }\n    else {\n      convertedChar = convertedChar + '7';\n    }\n    *resultPtr = convertedChar;\n    decimal = quotient;\n  } while (quotient != 0);\n  if (resultPtr == (char *)0x0) {\n    returnValue = 0;\n  }\n  else {\n    returnValue = FUN_08000178(resultPtr);\n    returnValue = (**(code **)(*arr + 4))(arr,resultPtr,returnValue);\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_decimal_to_base_08005ce8",
                "param_1": "arr",
                "param_2": "decimal",
                "param_3": "base",
                "cVar1": "convertedChar",
                "uVar2": "returnValue",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "resultPtr",
                "local_15": "result"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_number_08005d42",
            "code": "\nint processNumber_08005d42(undefined4 *data,uint num,uint base)\n\n{\n  int result;\n  int negative;\n  \n  if (base == 0) {\n    result = (**(code **)*data)(data,num & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = FUN_08005ce8(data,num,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)num) {\n    result = FUN_08005ce8(data,num,10);\n    return result;\n  }\n  result = FUN_08005cb6(data,0x2d);\n  negative = FUN_08005ce8(data,-num,10);\n  return negative + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_number_08005d42",
                "param_1": "data",
                "param_2": "num",
                "param_3": "base",
                "iVar1": "result",
                "iVar2": "negative"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "initialize_program_08005d82",
            "code": "\nvoid initialize_program_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "initialize_program_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "execute_code_08005d8a",
            "code": "\nvoid executeCode_08005d8a(undefined4 *functionPointer,uint inputValue1,uint inputValue2,undefined4 additionalParam)\n\n{\n  if (inputValue2 != 0) {\n    FUN_08005ce8(functionPointer,inputValue1,inputValue2 & 0xff);\n    return;\n  }\n  (**(code **)*functionPointer)(functionPointer,inputValue1 & 0xff,0,*(code **)*functionPointer,additionalParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "execute_code_08005d8a",
                "param_1": "functionPointer",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "additionalParam"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "calculate_checksum_08005da8",
            "code": "\nint calculateChecksum_08005da8(undefined4 context,undefined4 param1,undefined4 param2,uint param3,byte dataLength)\n\n{\n  int result;\n  undefined4 tempVar;\n  int tempVar2;\n  byte counter;\n  undefined8 tempValue;\n  undefined8 tempValue2;\n  \n  result = FUN_08000a2c(param2,param3,param2,param3);\n  if (result == 0) {\n    result = FUN_08000a2c(param2,param3 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(param2,param3 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(context,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(param2,param3,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(param2,param3,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(param2,param3,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(context,0x2d);\n            param3 = param3 + 0x80000000;\n          }\n          tempValue = 0x3fe0000000000000;\n          for (counter = 0; tempVar = (undefined4)((ulonglong)tempValue >> 0x20), counter < dataLength;\n              counter = counter + 1) {\n            tempValue = FUN_0800074c((int)tempValue,tempVar,0,0x40240000);\n          }\n          tempValue = FUN_08000194(param2,param3,(int)tempValue,tempVar);\n          tempVar = FUN_08000aa8();\n          tempValue2 = FUN_0800040c();\n          tempValue = FUN_08000190((int)tempValue,(int)((ulonglong)tempValue >> 0x20),(int)tempValue2,\n                               (int)((ulonglong)tempValue2 >> 0x20));\n          tempVar2 = FUN_08005d8a(context,tempVar,10);\n          result = result + tempVar2;\n          if (dataLength != 0) {\n            tempVar2 = FUN_08005c96(context,&DAT_08007868);\n            result = result + tempVar2;\n          }\n          while (dataLength != 0) {\n            tempValue = FUN_080004f8((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0x40240000);\n            tempVar = FUN_08000a58();\n            tempVar2 = FUN_08005d82(context,tempVar,10);\n            result = result + tempVar2;\n            tempValue2 = FUN_0800042c(tempVar);\n            tempValue = FUN_08000190((int)tempValue,(int)((ulonglong)tempValue >> 0x20),(int)tempValue2,\n                                 (int)((ulonglong)tempValue2 >> 0x20));\n            dataLength = dataLength - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(context,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(context,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(context,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "calculate_checksum_08005da8",
                "param_1": "context",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "dataLength",
                "iVar1": "result",
                "uVar2": "tempVar",
                "iVar3": "tempVar2",
                "bVar4": "counter",
                "uVar5": "tempValue",
                "uVar6": "tempValue2"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "execute_initialization_08005f2c",
            "code": "\nvoid execute_initialization_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "execute_initialization_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculate_sum_08005f40(undefined4 input_value)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input_value);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input_value",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_components_08005f5e",
            "code": "\nvoid initializeComponents_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_components_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "run_function_08005f6c",
            "code": "\nvoid run_function_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "run_function_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_bits_08005f8c",
            "code": "\nchar count_bits_08005f8c(uint num)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; num != 1; num = num >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_bits_08005f8c",
                "param_1": "num",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_data_08005fc8",
            "code": "\nvoid initializeData_08005fc8(int inputParam,int valueParam,undefined4 param3,undefined4 param4)\n\n{\n  if (inputParam != 1) {\n    return;\n  }\n  if (valueParam == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label1,&DAT_20000000,&DAT_200004b8,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "param_1": "inputParam",
                "param_2": "valueParam",
                "param_3": "param3",
                "param_4": "param4",
                "LAB_08005fa0_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "check_and_execute_080060d4",
            "code": "\nvoid checkAndExecute_080060d4(int input)\n\n{\n  int index;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    checkAndExecute_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "check_and_execute_080060d4",
                "param_1": "input",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_execute_function_080060e4",
            "code": "\nvoid checkAndExecuteFunction_080060e4(void)\n\n{\n  int result;\n  \n  result = FUN_08005f8c();\n  if ((&DAT_200004c4)[result * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_execute_function_080060e4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "copy_params_and_return_08006112",
            "code": "\nvoid copy_params_and_return_08006112(undefined4 destination,undefined4 source)\n\n{\n  FUN_08006158(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "copy_params_and_return_08006112",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 file,undefined4 line,char *message,undefined4 function)\n\n{\n  undefined4 filePtr;\n  char *suffix;\n  undefined8 result;\n  undefined4 functionPtr;\n  \n  filePtr = *(undefined4 *)(DAT_200000f8 + 0xc);\n  functionPtr = function;\n  if (message == (char *)0x0) goto LAB_08006140;\n  suffix = \", function: \";\n  do {\n    FUN_08006174(filePtr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,suffix,message,functionPtr);\n    result = FUN_08006ac0();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePtr = (undefined4)result;\nLAB_08006140:\n    message = \"\";\n    suffix = message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "file",
                "param_2": "line",
                "param_3": "message",
                "param_4": "function",
                "uVar1": "filePtr",
                "uVar4": "functionPtr",
                "pcVar2": "suffix",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_param_to_high_bits_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftParamToHighBits_08006158(undefined4 inputFlag,uint valueToShift)\n\n{\n  return (unsignedLongLong)valueToShift << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_param_to_high_bits_08006158",
                "param_1": "inputFlag",
                "param_2": "valueToShift",
                "ulonglong": "unsignedLongLong"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "execute_function_08006174",
            "code": "\nvoid execute_function_08006174(undefined4 input_1,undefined4 input_2,undefined4 temporary_1,undefined4 temporary_2)\n\n{\n  undefined4 temporary_1;\n  undefined4 temporary_2;\n  \n  temporary_1 = temporary_1;\n  temporary_2 = temporary_2;\n  FUN_08006394(DAT_200000f8,input_1,input_2,&temporary_1,input_1,&temporary_1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "execute_function_08006174",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "temporary_1",
                "param_4": "temporary_2",
                "uStack_8": "temporary_1",
                "uStack_4": "temporary_2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_with_byte_080061e0",
            "code": "\nvoid fillMemoryWithByte_080061e0(undefined *destination,undefined byteToFill,int size)\n\n{\n  undefined *endAddress;\n  \n  endAddress = destination + size;\n  for (; destination != endAddress; destination = destination + 1) {\n    *destination = byteToFill;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_with_byte_080061e0",
                "param_1": "destination",
                "param_2": "byteToFill",
                "param_3": "size",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "update_data_list_080061f0",
            "code": "\nvoid updateDataList_080061f0(undefined4 *outputArray,int inputLength,undefined4 param_3,undefined4 param_4)\n\n{\n  int **nextNode;\n  int **currentNode;\n  int **tempNode;\n  int *offset;\n  int **prevNode;\n  int **newNode;\n  \n  if (inputLength == 0) {\n    return;\n  }\n  newNode = (int **)(inputLength + -4);\n  if (*(int *)(inputLength + -4) < 0) {\n    newNode = (int **)((int)newNode + *(int *)(inputLength + -4));\n  }\n  FUNC_08006eac();\n  tempNode = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    newNode[1] = (int *)0x0;\n    currentNode = nextNode;\n    DAT_200005f8 = newNode;\n  }\n  else {\n    tempNode = DAT_200005f8;\n    if (newNode < DAT_200005f8) {\n      currentNode = (int **)*newNode;\n      tempNode = (int **)((int)newNode + (int)currentNode);\n      if (DAT_200005f8 == tempNode) {\n        offset = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        tempNode = (int **)((int)offset + (int)currentNode);\n        *newNode = (int *)tempNode;\n      }\n      newNode[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = newNode;\n    }\n    else {\n      do {\n        prevNode = tempNode;\n        tempNode = (int **)prevNode[1];\n        if (tempNode == (int **)0x0) break;\n      } while (tempNode <= newNode);\n      currentNode = (int **)*prevNode;\n      if ((int **)((int)prevNode + (int)currentNode) == newNode) {\n        currentNode = (int **)((int)currentNode + (int)*newNode);\n        *prevNode = (int *)currentNode;\n        if (tempNode == (int **)((int)prevNode + (int)currentNode)) {\n          offset = *tempNode;\n          tempNode = (int **)tempNode[1];\n          currentNode = (int **)((int)currentNode + (int)offset);\n          *prevNode = (int *)currentNode;\n          prevNode[1] = (int *)tempNode;\n        }\n      }\n      else if (newNode < (int **)((int)prevNode + (int)currentNode)) {\n        *outputArray = 0xc;\n      }\n      else {\n        currentNode = (int **)((int)newNode + (int)*newNode);\n        if (tempNode == currentNode) {\n          offset = *tempNode;\n          tempNode = (int **)tempNode[1];\n          currentNode = (int **)((int)offset + (int)*newNode);\n          *newNode = (int *)currentNode;\n        }\n        newNode[1] = (int *)tempNode;\n        prevNode[1] = (int *)newNode;\n      }\n    }\n  }\n  FUNC_08006eae(outputArray,currentNode,tempNode,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "update_data_list_080061f0",
                "param_1": "outputArray",
                "param_2": "inputLength",
                "extraout_r1": "nextNode",
                "ppiVar1": "currentNode",
                "ppiVar2": "tempNode",
                "piVar3": "offset",
                "ppiVar4": "prevNode",
                "ppiVar5": "newNode"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_08006288",
            "code": "\nuint allocate_memory_08006288(undefined4 *output_ptr,uint size)\n\n{\n  uint *current_block;\n  int remaining_size;\n  uint *next_block;\n  uint block_size_difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    previous_block = DAT_200005f8;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_size_difference = *next_block - allocated_size;\n      if (-1 < (int)block_size_difference) {\n        if (block_size_difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_size_difference;\n          *(uint *)((int)next_block + block_size_difference) = allocated_size;\n          previous_block = (uint *)((int)next_block + block_size_difference);\n        }\n        goto LAB_080062ec;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(output_ptr);\n    }\n    current_block = (uint *)FUN_08006920(output_ptr,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (remaining_size = FUN_08006920(output_ptr,(int)previous_block - (int)current_block), remaining_size != -1)))) {\n      *previous_block = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(output_ptr);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      remaining_size = allocated_size - (int)(previous_block + 1);\n      if (remaining_size != 0) {\n        *(int *)((int)previous_block + remaining_size) = -remaining_size;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_08006eae(output_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "output_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "remaining_size",
                "puVar3": "next_block",
                "uVar4": "block_size_difference",
                "puVar5": "previous_block",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int data_ptr,byte input_byte,byte **input_buffer)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = input_buffer[2] + -1;\n  input_buffer[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_buffer[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_buffer;\n    *input_buffer = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((data_ptr != 0) && (*(int *)(data_ptr + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (input_buffer == (byte **)&DAT_08007904) {\n    input_buffer = *(byte ***)(data_ptr + 4);\n  }\n  else if (input_buffer == (byte **)&DAT_08007924) {\n    input_buffer = *(byte ***)(data_ptr + 8);\n  }\n  else if (input_buffer == (byte **)&DAT_080078e4) {\n    input_buffer = *(byte ***)(data_ptr + 0xc);\n  }\n  input_buffer[2] = input_buffer[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_buffer + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = input_buffer[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080069e4(data_ptr,input_buffer,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)input_byte;\n    temp_var1 = (int)*input_buffer - (int)input_buffer[4];\n    if ((temp_var1 < (int)input_buffer[5]) || (temp_var1 = FUN_08006be0(data_ptr,input_buffer), temp_var1 == 0)) {\n      input_buffer[2] = input_buffer[2] + -1;\n      temp_var2 = *input_buffer;\n      *input_buffer = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != input_buffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_buffer + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08006be0(data_ptr,input_buffer);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "data_ptr",
                "param_2": "input_byte",
                "param_3": "input_buffer",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_array_08006370",
            "code": "\nint processArray_08006370(undefined4 inputSize,undefined4 paramValue,undefined *array,int arraySize)\n\n{\n  int returnValue;\n  undefined *endOfArray;\n  int currentIndex;\n  \n  endOfArray = array + arraySize;\n  currentIndex = arraySize;\n  do {\n    if (array == endOfArray) {\n      return 0;\n    }\n    returnValue = FUN_08006344(inputSize,*array,paramValue,arraySize,currentIndex);\n    arraySize = returnValue + 1;\n    array = array + 1;\n  } while (arraySize != 0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_array_08006370",
                "param_1": "inputSize",
                "param_2": "paramValue",
                "param_3": "array",
                "param_4": "arraySize",
                "iVar1": "returnValue",
                "puVar2": "endOfArray",
                "iVar3": "currentIndex"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "parse_text_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parseText_08006394(int input,undefined4 *format,byte *text,int *output)\n\n{\n  int result;\n  int *pointer;\n  bool foundDigit;\n  byte *currentChar;\n  byte *startChar;\n  int unaff_r9;\n  int value;\n  int *outputPointer;\n  uint flags;\n  int precision;\n  undefined4 local_80;\n  int width;\n  int totalSize;\n  byte prefix;\n  undefined flagSpace;\n  undefined flagPlus;\n  undefined flagZero;\n  undefined4 padChar;\n  \n  outputPointer = output;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (format == &DAT_08007904) {\n    format = *(undefined4 **)(input + 4);\n  }\n  else if (format == (undefined4 *)&DAT_08007924) {\n    format = *(undefined4 **)(input + 8);\n  }\n  else if (format == (undefined4 *)&DAT_080078e4) {\n    format = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(format + 3) << 0x1c)) || (format[4] == 0)) &&\n     (value = FUN_080069e4(input,format), value != 0)) {\n    return -1;\n  }\n  totalSize = 0;\n  flagSpace = 0x20;\n  flagPlus = 0x30;\n  currentChar = text;\nLAB_080063d6:\n  startChar = currentChar;\n  if (*startChar != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  currentChar = startChar + 1;\n  if (*startChar != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  value = (int)startChar - (int)text;\n  if (value != 0) {\n    result = FUN_08006370(input,format,text,value);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(format + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalSize;\n    }\n    totalSize = totalSize + value;\n  }\n  if (*startChar == 0) goto LAB_08006580;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  local_80 = 0;\n  flagZero = 0;\n  padChar = 0;\n  currentChar = startChar + 1;\n  while( true ) {\n    value = FUN_08006e90(\"#-0+ \",*currentChar);\n    text = currentChar + 1;\n    if (value == 0) break;\n    flags = 1 << (value + 0xf7ff8750U & 0xff) | flags;\n    currentChar = text;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    flagZero = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    flagZero = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    pointer = outputPointer + 1;\n    value = *outputPointer;\n    outputPointer = pointer;\n    if (value < 0) {\n      width = -value;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    foundDigit = false;\n    value = width;\n    text = currentChar;\n    while( true ) {\n      if (9 < *text - 0x30) break;\n      value = value * 10 + (*text - 0x30);\n      foundDigit = true;\n      text = text + 1;\n    }\n    if (!foundDigit) goto LAB_080064be;\n  }\n  width = value;\nLAB_080064be:\n  if (*text == 0x2e) {\n    if (text[1] == 0x2a) {\n      text = text + 2;\n      pointer = outputPointer + 1;\n      precision = *outputPointer;\n      outputPointer = pointer;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      foundDigit = false;\n      value = 0;\n      precision = 0;\n      while( true ) {\n        text = text + 1;\n        if (9 < *text - 0x30) break;\n        value = value * 10 + (*text - 0x30);\n        foundDigit = true;\n      }\n      if (foundDigit) {\n        precision = value;\n      }\n    }\n  }\n  value = FUN_08006e90(&DAT_080078b6,*text,3);\n  if (value != 0) {\n    text = text + 1;\n    flags = flags | 0x40 << (value + 0xf7ff874aU & 0xff);\n  }\n  prefix = *text;\n  text = text + 1;\n  value = FUN_08006e90(\"efgEFG\",prefix,6);\n  if (value == 0) {\n    unaff_r9 = FUN_080066b0(input,&flags,format,0x8006371,&outputPointer);\n    if (unaff_r9 == -1) goto LAB_08006580;\n  }\n  else {\n    outputPointer = (int *)(((int)outputPointer + 7U & 0xfffffff8) + 8);\n  }\n  totalSize = totalSize + unaff_r9;\n  currentChar = text;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "parse_text_08006394",
                "param_1": "input",
                "param_2": "format",
                "param_3": "text",
                "param_4": "output",
                "iVar1": "result",
                "piVar2": "pointer",
                "bVar3": "foundDigit",
                "pbVar4": "currentChar",
                "pbVar5": "startChar",
                "iVar6": "value",
                "local_8c": "outputPointer",
                "local_88": "flags",
                "local_84": "precision",
                "local_7c": "width",
                "local_74": "totalSize",
                "local_70": "prefix",
                "local_6f": "flagSpace",
                "local_6e": "flagPlus",
                "local_45": "flagZero",
                "local_30": "padChar"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocessData_080065c0(undefined4 inputValue,uint *dataArray,uint *outputSize,undefined4 param4Value,code *callbackFunction)\n\n{\n  int index1;\n  int index2;\n  uint size1;\n  uint size2;\n  bool flag;\n  \n  size1 = dataArray[4];\n  if (maxSize < minSize) {\n    size1 = dataArray[2];\n  }\n  *outputSize = size1;\n  if (*(char *)((int)dataArray + 0x43) != '\\0') {\n    *outputSize = size1 + 1;\n  }\n  if ((int)(*dataArray << 0x1a) < 0) {\n    *outputSize = *outputSize + 2;\n  }\n  if ((*dataArray & 6) == 0) {\n    for (index1 = 0; index1 < (int)(dataArray[3] - *outputSize); index1 = index1 + 1) {\n      index2 = (*callbackFunction)(inputValue,param4Value,(int)dataArray + 0x19,1);\n      if (index2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  size1 = (uint)*(byte *)((int)dataArray + 0x43);\n  if (size1 != 0) {\n    size1 = 1;\n  }\n  size2 = size1;\n  if ((int)(*dataArray << 0x1a) < 0) {\n    *(undefined *)((int)dataArray + size1 + 0x43) = 0x30;\n    size2 = size1 + 2;\n    *(undefined *)((int)dataArray + size1 + 0x44) = *(undefined *)((int)dataArray + 0x45);\n  }\n  index1 = (*callbackFunction)(inputValue,param4Value,(int)dataArray + 0x43,size2);\n  if (index1 != -1) {\n    size1 = dataArray[3];\n    flag = (*dataArray & 6) != 4;\n    if (flag) {\n      size1 = 0;\n    }\n    size2 = 0;\n    if (!flag) {\n      size1 = size1 - *outputSize;\n    }\n    if (!flag) {\n      size1 = size1 & ~((int)size1 >> 0x1f);\n    }\n    if (maxSize < minSize) {\n      size1 = size1 + (dataArray[2] - dataArray[4]);\n    }\n    while( true ) {\n      if (size1 == size2) {\n        return 0;\n      }\n      index1 = (*callbackFunction)(inputValue,param4Value,(int)dataArray + 0x1a,1);\n      if (index1 == -1) break;\n      size2 = size2 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "inputValue",
                "param_2": "dataArray",
                "param_3": "outputSize",
                "param_4": "param4Value",
                "param_5": "callbackFunction",
                "iVar1": "index1",
                "iVar2": "index2",
                "uVar3": "size1",
                "uVar4": "size2",
                "bVar5": "flag",
                "(int)param_2[4]": "maxSize",
                "(int)param_2[2]": "minSize"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "decode_data_080066b0",
            "code": "\nuint decode_data_080066b0(undefined4 param_1,uint *data,undefined4 param_3,code *callback,uint **output)\n\n{\n  byte byte_val;\n  int index;\n  uint *ptr;\n  int iVar4;\n  char *hex_digits;\n  uint var_1;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint var_2;\n  uint var_3;\n  char *ptr2;\n  char *ptr1;\n  uint local_array [2];\n  \n  byte_val = *(byte *)(data + 6);\n  ptr1 = (char *)((int)data + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_0800686a;\n          if (byte_val != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          var_1 = *data;\n          ptr = *output;\n          *output = ptr + 1;\n          if (((var_1 & 0x80) == 0) && ((int)(var_1 << 0x19) < 0)) {\n            var_2 = (uint)*(ushort *)ptr;\n          }\n          else {\n            var_2 = *ptr;\n          }\n          if ((int)(var_1 << 0x1f) < 0) {\n            *data = var_1 | 0x20;\n          }\n          if (var_2 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          var_1 = 0x10;\nLAB_08006790:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_080066e0;\n          var_2 = *data;\n          ptr = *output;\n          if ((var_2 & 0x80) == 0) {\n            *output = ptr + 1;\n            if ((var_2 & 0x40) == 0) goto LAB_08006700;\n            var_2 = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output = ptr + 1;\nLAB_08006700:\n            var_2 = *ptr;\n          }\n          if ((int)var_2 < 0) {\n            var_2 = -var_2;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          var_1 = 10;\n        }\n        var_3 = data[1];\n        data[2] = var_3;\n        ptr2 = ptr1;\n        if ((int)var_3 < 0) {\n          if (var_2 != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)data + 0x42) = *hex_digits;\n          ptr2 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (var_2 == 0) {\n            if (var_3 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              var_3 = var_2 / var_1;\n              ptr2 = ptr2 + -1;\n              *ptr2 = hex_digits[var_2 - var_1 * var_3];\n              var_2 = var_3;\n            } while (var_3 != 0);\n          }\n        }\n        if (((var_1 == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          ptr2[-1] = '0';\n          ptr2 = ptr2 + -1;\n        }\n        data[4] = (int)ptr1 - (int)ptr2;\n        ptr1 = ptr2;\n        goto LAB_080067d6;\n      }\n      ptr = *output;\n      *output = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08006740:\n      ptr1 = (char *)((int)data + 0x42);\n      var_2 = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_08006766:\n            var_2 = *data;\n            ptr = *output;\n            if ((var_2 & 0x80) == 0) {\n              *output = ptr + 1;\n              if ((var_2 & 0x40) == 0) goto LAB_08006774;\n              var_2 = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output = ptr + 1;\nLAB_08006774:\n              var_2 = *ptr;\n            }\n            if (byte_val == 0x6f) {\n              var_1 = 8;\n            }\n            else {\n              var_1 = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_val == 0x70) {\n            *data = *data | 0x20;\nLAB_08006726:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_08006766;\n          if (byte_val == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)data + 0x42) = byte_val;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*output;\n      *output = (uint *)(ppcVar8 + 1);\n      ptr1 = *ppcVar8;\n      index = FUN_08006e90(ptr1,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)ptr1;\n      }\n      var_2 = data[1];\n    }\n    data[4] = var_2;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  var_2 = *data;\n  ppuVar7 = (uint **)*output;\n  var_1 = data[5];\n  if ((var_2 & 0x80) == 0) {\n    *output = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((var_2 & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)var_1;\n  }\n  else {\n    *output = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08006856:\n    *ptr = var_1;\n  }\nLAB_0800686a:\n  data[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(param_1,data,local_array,param_3,callback);\n  if ((index == -1) || (index = (*callback)(param_1,param_3,ptr1,data[4]), index == -1)) {\nLAB_080067ea:\n    var_2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_array[0]); index = index + 1) {\n        iVar4 = (*callback)(param_1,param_3,(int)data + 0x19,1);\n        if (iVar4 == -1) goto LAB_080067ea;\n      }\n    }\n    var_2 = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      var_2 = local_array[0];\n    }\n  }\n  return var_2;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "decode_data_080066b0",
                "param_2": "data",
                "param_4": "callback",
                "param_5": "output",
                "bVar1": "byte_val",
                "iVar2": "index",
                "puVar3": "ptr",
                "pcVar5": "hex_digits",
                "uVar6": "var_1",
                "uVar9": "var_2",
                "uVar10": "var_3",
                "pcVar11": "ptr2",
                "pcVar12": "ptr1",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 argument1,undefined4 argument2,undefined4 argument3,undefined4 argument4)\n\n{\n  int data;\n  undefined4 arg1Copy;\n  undefined4 arg2Copy;\n  undefined4 arg3Copy;\n  undefined4 arg4Copy;\n  \n  data = DAT_200000f8;\n  arg1Copy = argument1;\n  arg2Copy = argument2;\n  arg3Copy = argument3;\n  arg4Copy = argument4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(data,*(undefined4 *)(data + 8),argument1,&arg2Copy,arg1Copy,&arg2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "argument1",
                "param_2": "argument2",
                "param_3": "argument3",
                "param_4": "argument4",
                "iVar1": "data",
                "uVar2": "arg1Copy",
                "uStack_c": "arg2Copy",
                "uStack_8": "arg3Copy",
                "uStack_4": "arg4Copy"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "process_error_08006920",
            "code": "\nvoid processError_08006920(int *result,undefined4 input)\n\n{\n  int errorCode;\n  \n  DAT_200006a4 = 0;\n  errorCode = FUN_080056d8(input);\n  if ((errorCode == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "process_error_08006920",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "errorCode"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "update_data_080069e4",
            "code": "\nuint updateData_080069e4(undefined4 *input1,undefined4 *input2)\n\n{\n  int dataPointer;\n  uint returnValue;\n  ushort ushortValue;\n  \n  dataPointer = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (input2 == &DAT_08007904) {\n    input2 = *(undefined4 **)(dataPointer + 4);\n  }\n  else if (input2 == (undefined4 *)&DAT_08007924) {\n    input2 = *(undefined4 **)(dataPointer + 8);\n  }\n  else if (input2 == (undefined4 *)&DAT_080078e4) {\n    input2 = *(undefined4 **)(dataPointer + 0xc);\n  }\n  ushortValue = *(ushort *)(input2 + 3);\n  returnValue = (uint)ushortValue;\n  if (-1 < (int)(returnValue << 0x1c)) {\n    if (-1 < (int)(returnValue << 0x1b)) {\n      *input1 = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(returnValue << 0x1d) < 0) {\n      if ((undefined4 *)input2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input2[0xd] != input2 + 0x11) {\n          FUN_080061f0(input1);\n        }\n        input2[0xd] = 0;\n      }\n      *(ushort *)(input2 + 3) = *(ushort *)(input2 + 3) & 0xffdb;\n      input2[1] = 0;\n      *input2 = input2[4];\n    }\n    *(ushort *)(input2 + 3) = *(ushort *)(input2 + 3) | 8;\n  }\n  if ((input2[4] == 0) && ((*(ushort *)(input2 + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(input1,input2);\n  }\n  ushortValue = *(ushort *)(input2 + 3);\n  returnValue = ushortValue & 1;\n  if ((ushortValue & 1) == 0) {\n    if (-1 < (int)((uint)ushortValue << 0x1e)) {\n      returnValue = input2[5];\n    }\n    input2[2] = returnValue;\n  }\n  else {\n    input2[2] = 0;\n    input2[6] = -input2[5];\n  }\n  if (input2[4] == 0) {\n    ushortValue = *(ushort *)(input2 + 3);\n    returnValue = (int)(short)ushortValue & 0x80;\n    if (returnValue != 0) {\nLAB_08006a14:\n      *(ushort *)(input2 + 3) = ushortValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "update_data_080069e4",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "dataPointer",
                "uVar2": "returnValue",
                "uVar3": "ushortValue"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_data_08006ac0",
            "code": "\nvoid processData_08006ac0(void)\n\n{\n  uint *dataPointer;\n  int offset;\n  int *arrayPointer;\n  int *tempArrayPointer;\n  uint value;\n  ushort flags;\n  int tempOffset;\n  code *functionPointer;\n  int length;\n  uint tempValue;\n  code *jumpTable;\n  bool isZero;\n  undefined8 result;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  result = FUN_0800573c(1);\n  arrayPointer = (int *)((ulonglong)result >> 0x20);\n  dataPointer = (uint *)result;\n  flags = *(ushort *)(arrayPointer + 3);\n  value = (uint)flags;\n  if ((int)(value << 0x1c) < 0) {\n    offset = arrayPointer[4];\n    if (offset != 0) {\n      tempOffset = value << 0x1e;\n      isZero = tempOffset != 0;\n      if (isZero) {\n        tempOffset = 0;\n      }\n      length = *arrayPointer;\n      if (!isZero) {\n        tempOffset = arrayPointer[5];\n      }\n      *arrayPointer = offset;\n      arrayPointer[2] = tempOffset;\n      for (length = length - offset; 0 < length; length = length - tempOffset) {\n        tempOffset = (*(code *)arrayPointer[10])(dataPointer,arrayPointer[8],offset,length);\n        if (tempOffset < 1) {\n          flags = *(ushort *)(arrayPointer + 3);\n          goto jumpLabel1;\n        }\n        offset = offset + tempOffset;\n      }\n    }\n  }\n  else if (((0 < arrayPointer[1]) || (0 < arrayPointer[0x10])) &&\n          (functionPointer = (code *)arrayPointer[0xb], functionPointer != (code *)0x0)) {\n    tempValue = *dataPointer;\n    *dataPointer = 0;\n    if ((flags & 0x1000) == 0) {\n      offset = (*functionPointer)(dataPointer,arrayPointer[8],value & 0x1000,1);\n      if ((offset == -1) && (value = *dataPointer, value != 0)) {\n        if ((value != 0x1d) && (value != 0x16)) {\n          *(ushort *)(arrayPointer + 3) = *(ushort *)(arrayPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *dataPointer = tempValue;\n        goto jumpLabel2;\n      }\n    }\n    else {\n      offset = arrayPointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(arrayPointer + 3) << 0x1d) < 0) &&\n       (offset = offset - arrayPointer[1], arrayPointer[0xd] != 0)) {\n      offset = offset - arrayPointer[0x10];\n    }\n    offset = (*(code *)arrayPointer[0xb])(dataPointer,arrayPointer[8],offset,0);\n    flags = *(ushort *)(arrayPointer + 3);\n    if ((offset == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\njumpLabel1:\n      *(ushort *)(arrayPointer + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    arrayPointer[1] = 0;\n    *arrayPointer = arrayPointer[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((offset != -1 || (*dataPointer == 0)))) {\n      arrayPointer[0x15] = offset;\n    }\n    tempArrayPointer = (int *)arrayPointer[0xd];\n    *dataPointer = tempValue;\n    if (tempArrayPointer != (int *)0x0) {\n      if (tempArrayPointer != arrayPointer + 0x11) {\n        FUN_080061f0(dataPointer);\n      }\n      arrayPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\njumpLabel2:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "puVar1": "dataPointer",
                "iVar2": "offset",
                "piVar3": "arrayPointer",
                "piVar4": "tempArrayPointer",
                "uVar5": "value",
                "uVar6": "flags",
                "iVar7": "tempOffset",
                "pcVar8": "functionPointer",
                "iVar9": "length",
                "uVar10": "tempValue",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "isZero",
                "uVar12": "result",
                "LAB_08006bc6": "jumpLabel1",
                "LAB_08006aea": "jumpLabel2"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *inputArray,int *configArray)\n\n{\n  undefined4 returnValue;\n  int offset;\n  int *ptrVar;\n  uint tempVar1;\n  ushort tempVar2;\n  int tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  code *function;\n  int loopIndex;\n  uint tempVar6;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool flag;\n  \n  if (configArray[4] != 0) {\n    if ((inputArray != (uint *)0x0) && (inputArray[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (configArray == &DAT_08007904) {\n      configArray = (int *)inputArray[1];\n    }\n    else if (configArray == (int *)&DAT_08007924) {\n      configArray = (int *)inputArray[2];\n    }\n    else if (configArray == (int *)&DAT_080078e4) {\n      configArray = (int *)inputArray[3];\n    }\n    if (*(short *)(configArray + 3) != 0) {\n      tempVar2 = *(ushort *)(configArray + 3);\n      tempVar1 = (uint)tempVar2;\n      if ((int)(tempVar1 << 0x1c) < 0) {\n        offset = configArray[4];\n        if (offset != 0) {\n          tempVar3 = tempVar1 << 0x1e;\n          flag = tempVar3 != 0;\n          if (flag) {\n            tempVar3 = 0;\n          }\n          loopIndex = *configArray;\n          if (!flag) {\n            tempVar3 = configArray[5];\n          }\n          *configArray = offset;\n          configArray[2] = tempVar3;\n          for (loopIndex = loopIndex - offset; 0 < loopIndex; loopIndex = loopIndex - tempVar3) {\n            tempVar3 = (*(code *)configArray[10])(inputArray,configArray[8],offset,loopIndex,tempVar4,tempVar5);\n            if (tempVar3 < 1) {\n              tempVar2 = *(ushort *)(configArray + 3);\n              goto LAB_08006bc6;\n            }\n            offset = offset + tempVar3;\n          }\n        }\n      }\n      else if (((0 < configArray[1]) || (0 < configArray[0x10])) &&\n              (function = (code *)configArray[0xb], function != (code *)0x0)) {\n        tempVar6 = *inputArray;\n        *inputArray = 0;\n        if ((tempVar2 & 0x1000) == 0) {\n          offset = (*function)(inputArray,configArray[8],tempVar1 & 0x1000,1);\n          if ((offset == -1) && (tempVar1 = *inputArray, tempVar1 != 0)) {\n            if ((tempVar1 != 0x1d) && (tempVar1 != 0x16)) {\n              *(ushort *)(configArray + 3) = *(ushort *)(configArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*UNRECOVERED_JUMPTABLE_00)();\n              return returnValue;\n            }\n            *inputArray = tempVar6;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          offset = configArray[0x15];\n        }\n        if (((int)((uint)*(ushort *)(configArray + 3) << 0x1d) < 0) &&\n           (offset = offset - configArray[1], configArray[0xd] != 0)) {\n          offset = offset - configArray[0x10];\n        }\n        offset = (*(code *)configArray[0xb])(inputArray,configArray[8],offset,0);\n        tempVar2 = *(ushort *)(configArray + 3);\n        if ((offset == -1) &&\n           ((0x1d < *inputArray || (-1 < (int)((0x20400001U >> (*inputArray & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(configArray + 3) = tempVar2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return returnValue;\n        }\n        configArray[1] = 0;\n        *configArray = configArray[4];\n        if (((int)((uint)tempVar2 << 0x13) < 0) && ((offset != -1 || (*inputArray == 0)))) {\n          configArray[0x15] = offset;\n        }\n        ptrVar = (int *)configArray[0xd];\n        *inputArray = tempVar6;\n        if (ptrVar != (int *)0x0) {\n          if (ptrVar != configArray + 0x11) {\n            FUN_080061f0(inputArray);\n          }\n          configArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*UNRECOVERED_JUMPTABLE_00)();\n          return returnValue;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "inputArray",
                "param_2": "configArray",
                "uVar1": "returnValue",
                "iVar2": "offset",
                "piVar3": "ptrVar",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "iVar6": "tempVar3",
                "unaff_r4": "tempVar4",
                "unaff_r5": "tempVar5",
                "pcVar7": "function",
                "iVar8": "loopIndex",
                "uVar9": "tempVar6",
                "bVar10": "flag"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_structure_08006c40",
            "code": "\nvoid initialize_data_structure_08006c40(undefined4 *data_structure,undefined2 value_1,undefined2 value_2)\n\n{\n  *data_structure = 0;\n  data_structure[1] = 0;\n  data_structure[2] = 0;\n  *(undefined2 *)(data_structure + 3) = value_1;\n  data_structure[0x19] = 0;\n  *(undefined2 *)((int)data_structure + 0xe) = value_2;\n  data_structure[4] = 0;\n  data_structure[5] = 0;\n  data_structure[6] = 0;\n  FUN_080061e0(data_structure + 0x17,0,8);\n  data_structure[8] = data_structure;\n  data_structure[9] = 0x8006f39;\n  data_structure[10] = 0x8006f5b;\n  data_structure[0xb] = 0x8006f93;\n  data_structure[0xc] = &LAB_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "param_1": "data_structure",
                "param_2": "value_1",
                "param_3": "value_2"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 inputData,int count)\n\n{\n  undefined4 *result;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  result = (undefined4 *)FUN_08006288(inputData,offset + 0x74);\n  if (result != (undefined4 *)0x0) {\n    *result = 0;\n    result[1] = count;\n    result[2] = result + 3;\n    FUN_080061e0(result + 3,0,offset + 0x68);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "inputData",
                "param_2": "count",
                "puVar1": "result",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *dataPointer)\n\n{\n  undefined4 returnValue;\n  undefined4 *pointerVar;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    pointerVar = &DAT_200000fc;\n    dataPointer[10] = &label_1;\n    if (dataPointer == &DAT_200000fc) {\n      pointerVar = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_200000fc) {\n      dataPointer[6] = pointerVar;\n    }\n    returnValue = FUN_08006d14();\n    dataPointer[1] = returnValue;\n    returnValue = FUN_08006d14(dataPointer);\n    dataPointer[2] = returnValue;\n    returnValue = FUN_08006d14(dataPointer);\n    dataPointer[3] = returnValue;\n    FUN_08006c40(dataPointer[1],4,0);\n    FUN_08006c40(dataPointer[2],9,1);\n    FUN_08006c40(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "dataPointer",
                "uVar1": "returnValue",
                "puVar2": "pointerVar",
                "LAB_08006c34_1": "label_1"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "process_data_08006d14",
            "code": "\nint * processData_08006d14(undefined4 *status,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int *ptr1;\n  int *ptr2;\n  int **ptrPtr3;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  ptrPtr3 = (int **)&DAT_20000144;\n  do {\n    ptr2 = ptrPtr3[2];\n    ptr1 = ptrPtr3[1];\n    while (ptr1 = (int *)((int)ptr1 + -1), -1 < (int)ptr1) {\n      if (*(short *)(ptr2 + 3) == 0) {\n        *(undefined2 *)((int)ptr2 + 0xe) = 0xffff;\n        ptr2[0x19] = 0;\n        *(undefined2 *)(ptr2 + 3) = 1;\n        *ptr2 = 0;\n        ptr2[2] = 0;\n        ptr2[1] = 0;\n        ptr2[4] = 0;\n        ptr2[5] = 0;\n        ptr2[6] = 0;\n        FUN_080061e0(ptr2 + 0x17,0,8,1,arg3);\n        ptr2[0xd] = 0;\n        ptr2[0xe] = 0;\n        ptr2[0x12] = 0;\n        ptr2[0x13] = 0;\n        return ptr2;\n      }\n      ptr2 = ptr2 + 0x1a;\n    }\n    if (*ptrPtr3 == (int *)0x0) {\n      ptr1 = (int *)FUN_08006c88(status,4);\n      *ptrPtr3 = ptr1;\n      if (ptr1 == (int *)0x0) {\n        *status = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ptrPtr3 = (int **)*ptrPtr3;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "process_data_08006d14",
                "param_1": "status",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "piVar1": "ptr1",
                "piVar2": "ptr2",
                "ppiVar3": "ptrPtr3"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_memory_permissions_08006dc8",
            "code": "\nundefined4 checkMemoryPermissions_08006dc8(undefined4 param1,int param2,undefined4 *param3,uint *param4)\n\n{\n  int result;\n  undefined4 permission;\n  undefined stackVar [4];\n  uint localVar;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_08007004(param1,(int)*(short *)(param2 + 0xe),stackVar), result < 0)) {\n    *param4 = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *param4 = (uint)((localVar & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08006e08:\n  *param3 = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_memory_permissions_08006dc8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "permission",
                "auStack_4c": "stackVar",
                "local_48": "localVar"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int inputData,int *outputData)\n\n{\n  ushort result;\n  int check;\n  int temp1;\n  int *temp2;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputData + 3) << 0x1e)) {\n    temp1 = inputData;\n    temp2 = outputData;\n    result = FUN_08006dc8(inputData,outputData,&temp1,&temp2);\n    check = FUN_08006288(inputData,temp1);\n    if (check != 0) {\n      *(undefined **)(inputData + 0x28) = &LAB_08006c34_1;\n      *outputData = check;\n      *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) | 0x80;\n      outputData[4] = check;\n      outputData[5] = temp1;\n      if ((temp2 != (int *)0x0) &&\n         (check = FUN_08007028(inputData,(int)*(short *)((int)outputData + 0xe)), check != 0)) {\n        *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputData + 3) = result | *(ushort *)(outputData + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputData + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) & 0xfffc | 2;\n  }\n  *outputData = (int)outputData + 0x47;\n  outputData[4] = (int)outputData + 0x47;\n  outputData[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "inputData",
                "param_2": "outputData",
                "uVar1": "result",
                "iVar2": "check",
                "local_18": "temp1",
                "local_14": "temp2"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_08006e90",
            "code": "\nchar * find_character_08006e90(char *string,char character,int string_length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + string_length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "execute_function_08006f00",
            "code": "\nint execute_function_08006f00(uint input)\n\n{\n  int *pointer_1;\n  undefined4 result;\n  int pointer_2;\n  code *function_ptr;\n  undefined4 register_4;\n  undefined4 register_5;\n  undefined4 register_lr;\n  undefined4 *pointer_3;\n  \n  pointer_1 = DAT_200000f8;\n  pointer_3 = &DAT_200000f8;\n  if (0x1f < input) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  pointer_2 = DAT_200000f8[0x11];\n  if ((pointer_2 != 0) && (function_ptr = *(code **)(pointer_2 + input * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(pointer_2 + input * 4) = 0;\n      (*function_ptr)(input);\n    }\n    return 0;\n  }\n  result = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  pointer_2 = FUN_08005740(result,input,input,0,pointer_3,register_4,register_5,register_lr);\n  if ((pointer_2 == -1) && (DAT_200006a4 != 0)) {\n    *pointer_1 = DAT_200006a4;\n  }\n  return pointer_2;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "execute_function_08006f00",
                "param_1": "input",
                "piVar1": "pointer_1",
                "uVar2": "result",
                "iVar3": "pointer_2",
                "pcVar4": "function_ptr",
                "unaff_r4": "register_4",
                "unaff_r5": "register_5",
                "in_lr": "register_lr",
                "puVar5": "pointer_3"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "initialize_return_value_thunk_08005750",
            "code": "\nundefined4 initializeReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "initialize_return_value_thunk_08005750"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 param1,int param2)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(param1,(int)*(short *)(param2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(param2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(param2 + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(param2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "process_data_08006f5a",
            "code": "\nvoid processData_08006f5a(int *output,int input,undefined4 param1,undefined4 param2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    FUN_08007048(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(input + 0xe),param1,param2,param2,param2,temp1,\n                       temp2,temp3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "output",
                "param_2": "input",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2",
                "in_lr": "temp3"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_status_08006f92",
            "code": "\nvoid updateStatus_08006f92(undefined4 status,int data)\n\n{\n  int result;\n  ushort newFlags;\n  bool isError;\n  \n  result = FUN_08007048(status,(int)*(short *)(data + 0xe));\n  isError = result == -1;\n  if (isError) {\n    newFlags = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    newFlags = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(data + 0xc) = newFlags;\n  }\n  if (!isError) {\n    *(ushort *)(data + 0xc) = newFlags;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_status_08006f92",
                "param_1": "status",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "newFlags",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "find_and_assign_value_08007004",
            "code": "\nvoid findAndAssignValue_08007004(int *output,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800571a(input_1,input_2,input_2,0,input_3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "find_and_assign_value_08007004",
                "param_1": "output",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "verify_and_update_value_08007028",
            "code": "\nvoid verify_and_update_value_08007028(int *output_value,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005724(input_value);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output_value = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "verify_and_update_value_08007028",
                "param_1": "output_value",
                "param_2": "input_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "validate_and_assign_value_08007048",
            "code": "\nvoid validate_and_assign_value_08007048(int *output_value,undefined4 input_parameter1,undefined4 input_parameter2,undefined4 input_parameter3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005728(input_parameter1,input_parameter2,input_parameter3,input_parameter3,input_parameter3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output_value = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "validate_and_assign_value_08007048",
                "param_1": "output_value",
                "param_2": "input_parameter1",
                "param_3": "input_parameter2",
                "param_4": "input_parameter3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "check_and_assign_value_0800706c",
            "code": "\nvoid checkAndAssignValue_0800706c(int *resultPointer,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800572c(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *resultPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "check_and_assign_value_0800706c",
                "param_1": "resultPointer",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_flags_08007090",
            "code": "\nvoid initializeFlags_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeFlags_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_flags_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 180267,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}