{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputParam)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "calculate_string_length_08000178",
            "code": "\nchar * calculateStringLength_08000178(char *string)\n\n{\n  char currentByte;\n  char *nextChar;\n  char *currentChar;\n  \n  currentChar = string;\n  do {\n    nextChar = currentChar + 1;\n    currentByte = *currentChar;\n    currentChar = nextChar;\n  } while (currentByte != '\\0');\n  return nextChar + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "calculate_string_length_08000178",
                "param_1": "string",
                "pcVar3": "currentChar",
                "pcVar2": "nextChar",
                "cVar1": "currentByte"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "invoke_software_interrupt_08000188",
            "code": "\nvoid invokeSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "invoke_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "check_and_process_data_0800018c",
            "code": "\nundefined4 checkAndProcessData_0800018c(undefined4 inputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,inputData,0,0,param4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "check_and_process_data_0800018c",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint inputIndex,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool isValid;\n  int result;\n  \n  if (0x3b < (int)inputIndex) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,inputIndex,param3,param4,param4);\n  if (result == 3) {\n    if (inputIndex < 0x3c) {\n      if ((&DAT_0800a908)[inputIndex] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputIndex]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[inputIndex],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(inputIndex,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputIndex,param2);\n  }\n  else if (result == 4) {\n    if (inputIndex < 0x3c) {\n      if ((&DAT_0800a908)[inputIndex] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputIndex]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputIndex] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputIndex,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint inputIndex,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool isValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,inputIndex,param3,param4,param4);\n  if (result == 3) {\n    if (inputIndex < 0x3c) {\n      if ((&DAT_0800a908)[inputIndex] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputIndex]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[inputIndex],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(inputIndex,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputIndex,param2);\n  }\n  else if (result == 4) {\n    if (inputIndex < 0x3c) {\n      if ((&DAT_0800a908)[inputIndex] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputIndex]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputIndex] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputIndex,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_data_08000488",
            "code": "\nvoid updateData_08000488(uint index,int flag)\n\n{\n  undefined4 result;\n  \n  if ((int)index < 0xe) {\n    if (flag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (index & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (index & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,index,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_data_08000488",
                "param_1": "index",
                "param_2": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "execute_if_param1_is_1_080004d4",
            "code": "\nvoid execute_if_param1_is_1_080004d4(int is_equal_to_1,int param2_value)\n\n{\n  int loop_counter;\n  undefined *ptr_array;\n  \n  if (is_equal_to_1 != 1) {\n    return;\n  }\n  if (param2_value == 0xffff) {\n    ptr_array = &DAT_2000022c;\n    for (loop_counter = 0xb; -1 < loop_counter; loop_counter = loop_counter + -1) {\n      FUN_08002580(ptr_array);\n      ptr_array = ptr_array + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "execute_if_param1_is_1_080004d4",
                "param_1": "is_equal_to_1",
                "param_2": "param2_value",
                "iVar1": "loop_counter",
                "puVar2": "ptr_array"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int isPositive,int arg,undefined4 unused)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",arg,unused,unused);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < isPositive) && (0 < arg)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,isPositive,arg);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "isPositive",
                "param_3": "arg",
                "param_4": "unused"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_index_08000588",
            "code": "\nvoid updateIndex_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_index_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "pin_mode_080005f8",
            "code": "\nvoid pinMode_080005f8(uint pinNumber,int mode)\n\n{\n  int pinMode_080005f8Result;\n  char conditionFlag;\n  bool isFlagSet;\n  uint shiftedValue;\n  \n  pinMode_080005f8Result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (pinMode_080005f8Result != 0x7f) {\n    pinMode_080005f8Result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (pinMode_080005f8Result == 6) {\n      if (DAT_20000170 == '\\0') {\n        conditionFlag = '\\0';\n      }\n      else {\n        conditionFlag = DAT_20000170;\n        if (mode == 6) {\n          conditionFlag = '\\0';\n        }\n      }\n    }\n    else {\n      conditionFlag = '\\0';\n    }\n    if (conditionFlag != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isFlagSet = false;\n      }\n      else {\n        pinMode_080005f8Result = FUN_080036ac();\n        if (pinMode_080005f8Result == 0) {\n          isFlagSet = false;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (pinMode_080005f8Result == 1) {\n            isFlagSet = false;\n          }\n          else if (mode == 4) {\n            isFlagSet = false;\n          }\n          else {\n            isFlagSet = true;\n          }\n        }\n      }\n    }\n    else {\n      isFlagSet = false;\n    }\n    if (isFlagSet) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        pinMode_080005f8Result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        pinMode_080005f8Result = 0;\n      }\n      if (pinMode_080005f8Result != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    shiftedValue = pinNumber - 0x2e & 0xff;\n    if (shiftedValue < 0xe) {\n      if (pinNumber < 0x3c) {\n        pinMode_080005f8Result = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        pinMode_080005f8Result = -1;\n      }\n      pinMode_080005f8Result = FUN_080036ac(pinMode_080005f8Result);\n      if (pinMode_080005f8Result == 0) {\n        isFlagSet = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          pinMode_080005f8Result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          pinMode_080005f8Result = -1;\n        }\n        pinMode_080005f8Result = FUN_080036ac(pinMode_080005f8Result);\n        if (pinMode_080005f8Result == 1) {\n          isFlagSet = false;\n        }\n        else {\n          isFlagSet = true;\n        }\n      }\n    }\n    else {\n      isFlagSet = false;\n    }\n    if (isFlagSet) {\n      FUN_08000488(shiftedValue,mode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isFlagSet = false;\n      }\n      else {\n        pinMode_080005f8Result = FUN_080036ac();\n        if (pinMode_080005f8Result == 0) {\n          isFlagSet = false;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (pinMode_080005f8Result == 1) {\n            isFlagSet = false;\n          }\n          else {\n            isFlagSet = true;\n          }\n        }\n      }\n    }\n    else {\n      isFlagSet = false;\n    }\n    if (isFlagSet) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(mode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isFlagSet = false;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac();\n          if (pinMode_080005f8Result == 0) {\n            isFlagSet = false;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode_080005f8Result == 1) {\n              isFlagSet = false;\n            }\n            else {\n              isFlagSet = true;\n            }\n          }\n        }\n      }\n      else {\n        isFlagSet = false;\n      }\n      if (isFlagSet) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isFlagSet = false;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac();\n          if (pinMode_080005f8Result == 0) {\n            isFlagSet = false;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode_080005f8Result == 1) {\n              isFlagSet = false;\n            }\n            else {\n              isFlagSet = true;\n            }\n          }\n        }\n      }\n      else {\n        isFlagSet = false;\n      }\n      if (isFlagSet) {\n        pinMode_080005f8Result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (pinMode_080005f8Result == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (shiftedValue < 0xe) {\n        if (pinNumber < 0x3c) {\n          pinMode_080005f8Result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          pinMode_080005f8Result = -1;\n        }\n        pinMode_080005f8Result = FUN_080036ac(pinMode_080005f8Result);\n        if (pinMode_080005f8Result == 0) {\n          isFlagSet = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            pinMode_080005f8Result = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            pinMode_080005f8Result = -1;\n          }\n          pinMode_080005f8Result = FUN_080036ac(pinMode_080005f8Result);\n          if (pinMode_080005f8Result == 1) {\n            isFlagSet = false;\n          }\n          else {\n            isFlagSet = true;\n          }\n        }\n      }\n      else {\n        isFlagSet = false;\n      }\n      if (isFlagSet) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isFlagSet = false;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac();\n            if (pinMode_080005f8Result == 0) {\n              isFlagSet = false;\n            }\n            else {\n              pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (pinMode_080005f8Result == 1) {\n                isFlagSet = false;\n              }\n            }\n          }\n        }\n        else {\n          isFlagSet = false;\n        }\n        if (isFlagSet) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          pinMode_080005f8Result = 0;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac();\n          if (pinMode_080005f8Result == 0) {\n            pinMode_080005f8Result = 0;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode_080005f8Result == 1) {\n              pinMode_080005f8Result = 0;\n            }\n            else {\n              pinMode_080005f8Result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        pinMode_080005f8Result = 0;\n      }\n      if (pinMode_080005f8Result != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isFlagSet = false;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac();\n          if (pinMode_080005f8Result == 0) {\n            isFlagSet = false;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode_080005f8Result == 1) {\n              isFlagSet = false;\n            }\n            else {\n              isFlagSet = true;\n            }\n          }\n        }\n      }\n      else {\n        isFlagSet = false;\n      }\n      if (isFlagSet) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (pinMode_080005f8Result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           pinMode_080005f8Result != 0)) {\n          isFlagSet = false;\n        }\n        if (isFlagSet) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          pinMode_080005f8Result = 0;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac();\n          if (pinMode_080005f8Result == 0) {\n            pinMode_080005f8Result = 0;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode_080005f8Result == 1) {\n              pinMode_080005f8Result = 0;\n            }\n            else {\n              pinMode_080005f8Result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (pinMode_080005f8Result == 0) {\n                pinMode_080005f8Result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        pinMode_080005f8Result = 0;\n      }\n      if (pinMode_080005f8Result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isFlagSet = false;\n        }\n        else {\n          pinMode_080005f8Result = FUN_080036ac();\n          if (pinMode_080005f8Result == 0) {\n            isFlagSet = false;\n          }\n          else {\n            pinMode_080005f8Result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode_080005f8Result == 1) {\n              isFlagSet = false;\n            }\n            else {\n              isFlagSet = true;\n            }\n          }\n        }\n      }\n      else {\n        isFlagSet = false;\n      }\n      if (isFlagSet) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "pin_mode_080005f8",
                "param_1": "pinNumber",
                "param_2": "mode",
                "iVar1": "pinModeResult",
                "cVar2": "conditionFlag",
                "bVar3": "isFlagSet",
                "uVar4": "shiftedValue"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int returnValue;\n  uint counter;\n  \n  for (counter = 0; counter < 0x3c; counter = counter + 1 & 0xff) {\n    if (counter < 0x3c) {\n      if ((&DAT_0800a908)[counter] == -1) {\n        returnValue = 0;\n      }\n      else {\n        returnValue = FUN_080036ac();\n        if (returnValue == 0) {\n          returnValue = 0;\n        }\n        else {\n          returnValue = FUN_080036ac((int)(char)(&DAT_0800a908)[counter]);\n          if (returnValue == 1) {\n            returnValue = 0;\n          }\n          else {\n            returnValue = FUN_0800738a((int)(char)(&DAT_0800a908)[counter],&DAT_0800a69c);\n            if (returnValue == 0) {\n              returnValue = FUN_0800738a((int)(char)(&DAT_0800a908)[counter],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    if (returnValue != 0) {\n      FUN_080005f8(counter,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "returnValue",
                "uVar2": "counter"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool checkVar;\n  int resultVar;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        resultVar = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        resultVar = -1;\n      }\n      resultVar = FUN_080036ac(resultVar);\n      if (resultVar == 0) {\n        checkVar = false;\n      }\n      else {\n        if (index < 0x3c) {\n          resultVar = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          resultVar = -1;\n        }\n        resultVar = FUN_080036ac(resultVar);\n        if (resultVar == 1) {\n          checkVar = false;\n        }\n        else {\n          checkVar = true;\n        }\n      }\n    }\n    else {\n      checkVar = false;\n    }\n    if (checkVar) {\n      FUN_080005f8(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (resultVar = FUN_080036ac(), resultVar != 0)) &&\n         (resultVar = FUN_080036ac((int)(char)(&DAT_0800a908)[index]), resultVar != 1)) {\n        checkVar = true;\n      }\n      if (checkVar) {\n        FUN_080005f8(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec",
                "uVar3": "index",
                "iVar2": "resultVar",
                "bVar1": "checkVar"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "check_and_process_data_08000be8",
            "code": "\nvoid checkAndProcessData_08000be8(int index,uint mask,int flag,undefined4 param)\n\n{\n  undefined1 *dataPtr1;\n  undefined1 *dataPtr2;\n  \n  dataPtr1 = &DAT_20000174;\n  dataPtr2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((flag != 0) ||\n     (dataPtr1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], dataPtr2 != dataPtr1)) {\n    FUN_08002efe(&DAT_200003d4,index,dataPtr2,dataPtr1,param);\n    (&DAT_20000180)[index] = (char)dataPtr2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "check_and_process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "flag",
                "param_4": "param",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_permissions_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configurePermissions_08000ef8(void)\n\n{\n  byte permissionFlag;\n  int result;\n  bool isAllowed;\n  byte newPermissions;\n  \n  permissionFlag = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newPermissions = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        newPermissions = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        newPermissions = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          newPermissions = 0;\n        }\n        else {\n          newPermissions = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x80;\n    }\n    FUN_08000be8(0,newPermissions);\n  }\n  permissionFlag = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newPermissions = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        newPermissions = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        newPermissions = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          newPermissions = 0;\n        }\n        else {\n          newPermissions = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x80;\n    }\n    FUN_08000be8(1,newPermissions,0);\n  }\n  permissionFlag = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newPermissions = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        newPermissions = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        newPermissions = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          newPermissions = 0;\n        }\n        else {\n          newPermissions = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x80;\n    }\n    FUN_08000be8(2,newPermissions,0);\n  }\n  permissionFlag = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newPermissions = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        newPermissions = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        newPermissions = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          newPermissions = 0;\n        }\n        else {\n          newPermissions = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x80;\n    }\n    FUN_08000be8(3,newPermissions,0);\n  }\n  permissionFlag = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newPermissions = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        newPermissions = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        newPermissions = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          newPermissions = 0;\n        }\n        else {\n          newPermissions = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAllowed = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        isAllowed = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    if (isAllowed) {\n      newPermissions = newPermissions | 0x80;\n    }\n    FUN_08000be8(4,newPermissions,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_permissions_08000ef8",
                "bVar1": "permissionFlag",
                "iVar2": "result",
                "bVar3": "isAllowed",
                "bVar4": "newPermissions"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_gateway_08001b48",
            "code": "\nvoid initializeGateway_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,param6);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,param10);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,param14);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_gateway_08001b48",
                "&LAB_080002ec_1": "param6",
                "&LAB_08000c18_1": "param10",
                "&LAB_080001a8_1": "param14"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 dataPointer,undefined4 unusedParameter,undefined4 input1,undefined4 input2)\n\n{\n  FUN_0800288c(&DAT_20000314,dataPointer,input1,input2,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "dataPointer",
                "param_2": "unusedParameter",
                "param_3": "input1",
                "param_4": "input2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "process_i2_c_data_08001c18",
            "code": "\nvoid processI2CData_08001c18(undefined4 deviceAddress,uint receivedByteCount,int expectedByteCount,undefined4 configuration)\n\n{\n  undefined receivedByte;\n  int i;\n  int receivedByteStatus;\n  bool isReceivedByteValid;\n  \n  if (receivedByteCount == 0xffffffff) {\n    receivedByteCount = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(receivedByteCount & 0xff);\n    FUN_08002a58(&DAT_20000314,configuration);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedByteCount);\n  i = FUN_0800270c(&DAT_20000314);\n  if (expectedByteCount < i) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    i = FUN_0800270c(&DAT_20000314);\n    if (i < expectedByteCount) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)receivedByteCount;\n  i = 0;\n  while( true ) {\n    if (i < expectedByteCount) {\n      receivedByteStatus = FUN_0800270c(&DAT_20000314);\n      if (receivedByteStatus == 0) {\n        isReceivedByteValid = false;\n      }\n      else {\n        isReceivedByteValid = true;\n      }\n    }\n    else {\n      isReceivedByteValid = false;\n    }\n    if (!isReceivedByteValid) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[i] = receivedByte;\n    i = i + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedByteCount + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "receivedByteCount",
                "param_3": "expectedByteCount",
                "param_4": "configuration",
                "uVar1": "receivedByte",
                "iVar2": "i",
                "iVar3": "receivedByteStatus",
                "bVar4": "isReceivedByteValid"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_function_08001cd0",
            "code": "\nvoid processFunction_08001cd0(undefined4 command,int length,byte *data,undefined4 param4)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 var4;\n  byte byte5;\n  char char6;\n  int intVar1;\n  int intVar2;\n  uint uintVar1;\n  uint uintVar2;\n  int intVar3;\n  bool boolVar1;\n  \n  switch(command) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      uintVar2 = uintVar1 - 0x2e & 0xff;\n      if (uintVar2 < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar1 = -1;\n        }\n        intVar1 = FUN_080036ac(intVar1);\n        if (intVar1 == 0) {\n          uintVar2 = 0x7f;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar1 = -1;\n          }\n          intVar1 = FUN_080036ac(intVar1);\n          if (intVar1 == 1) {\n            uintVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uintVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uintVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar1 = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar1 = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar1 = false;\n            }\n            else {\n              boolVar1 = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar1 = false;\n      }\n      if (boolVar1) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uintVar1 - 0x2e & 0xff) < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar1 = -1;\n        }\n        intVar1 = FUN_080036ac(intVar1);\n        if (intVar1 == 0) {\n          boolVar1 = false;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar1 = -1;\n          }\n          intVar1 = FUN_080036ac(intVar1);\n          if (intVar1 == 1) {\n            boolVar1 = false;\n          }\n          else {\n            boolVar1 = true;\n          }\n        }\n      }\n      else {\n        boolVar1 = false;\n      }\n      if (boolVar1) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar1 = 0;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            intVar1 = 0;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              intVar1 = 0;\n            }\n            else {\n              intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        intVar1 = 0;\n      }\n      if (intVar1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar1 = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar1 = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar1 = false;\n            }\n            else {\n              boolVar1 = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar1 = false;\n      }\n      if (boolVar1) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar1 = 0;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            intVar1 = 0;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              intVar1 = 0;\n            }\n            else {\n              intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a69c);\n              if (intVar1 == 0) {\n                intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        intVar1 = 0;\n      }\n      if (intVar1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        var4 = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,var4);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,uintVar1 & 0x7f);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uintVar1 & 0xff80) != 0) {\n          intVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar1 << 0x12) >> 0x19);\n        }\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uintVar1 & 0xc000) != 0) {\n          intVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar1 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uintVar1 = (uint)data[1];\n      if (2 < length) {\n        uintVar1 = uintVar1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uintVar1 = uintVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uintVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uintVar1 = (uint)*data;\n      byte1 = data[1];\n      byte5 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar1 = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar1 = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar1 = false;\n            }\n            else {\n              boolVar1 = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar1 = false;\n      }\n      if (boolVar1) {\n        if ((byte)(&DAT_200001f0)[uintVar1] < 0xc) {\n          intVar1 = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uintVar1] * 3);\n        }\n        else {\n          intVar1 = 0;\n        }\n        if (intVar1 != 0) {\n          FUN_08000588(uintVar1);\n        }\n        FUN_08000500(uintVar1,(uint)byte1 + (uint)byte5 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(uintVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte5 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte5,byte1,param4);\n      return;\n    }\n    byte2 = *data;\n    boolVar1 = (byte1 & 0x40) == 0;\n    if (byte5 < 0x19) {\n      switch(byte5) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (uintVar1 = 2; (int)uintVar1 < length; uintVar1 = uintVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[uintVar1 + 1] * -0x80 + data[uintVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          intVar1 = (uint)data[2] + (uint)data[3] * 0x80;\n          char6 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char6 = data[2] + data[3] * -0x80;\n          intVar1 = -1;\n        }\n        FUN_08001c18(byte2,intVar1,char6);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            intVar1 = (uint)data[2] + (uint)data[3] * 0x80;\n            char6 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char6 = data[2] + data[3] * -0x80;\n            intVar1 = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          intVar2 = (int)DAT_20000004;\n          intVar3 = intVar2 * 0xc;\n          (&DAT_20000188)[intVar3] = byte2;\n          (&DAT_2000018c)[intVar2 * 3] = intVar1;\n          (&DAT_20000190)[intVar3] = char6;\n          (&DAT_20000191)[intVar3] = boolVar1;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,boolVar1,param4);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uintVar1 = 0; intVar1 = DAT_20000004 + 1, (int)uintVar1 < intVar1; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[uintVar1 * 0xc]) goto LAB_08001e66;\n      }\n      uintVar1 = 0;\nLAB_08001e66:\n      for (; (int)uintVar1 < intVar1; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (uintVar1 < 8) {\n          intVar2 = (uintVar1 + 1) * 0xc;\n          intVar3 = uintVar1 * 0xc;\n          (&DAT_20000188)[intVar3] = (&DAT_20000188)[intVar2];\n          (&DAT_2000018c)[uintVar1 * 3] = (&DAT_2000018c)[(uintVar1 + 1) * 3];\n          (&DAT_20000190)[intVar3] = (&DAT_20000190)[intVar2];\n          (&DAT_20000191)[intVar3] = (&DAT_20000191)[intVar2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    intVar1 = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (intVar1 != 0)) {\n      DAT_2000012c = intVar1;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_function_08001cd0",
                "param_1": "command",
                "param_2": "length",
                "param_3": "data",
                "param_4": "param4",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "var4",
                "bVar5": "byte5",
                "cVar6": "char6",
                "iVar7": "intVar1",
                "iVar8": "intVar2",
                "uVar9": "uintVar1",
                "uVar10": "uintVar2",
                "iVar11": "intVar3",
                "bVar12": "boolVar1"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool isValid;\n  int result;\n  undefined4 value;\n  uint index;\n  uint shift;\n  \n  FUN_08000ef8();\n  while (result = FUN_08002ec4(&DAT_200003d4), result != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n      shift = index - 0x2e & 0xff;\n      if (shift < 0xe) {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          if (index < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[index];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            result = FUN_08002fa0(&DAT_200003d4,index);\n            if (result == 2) {\n              isValid = true;\n            }\n            else {\n              isValid = false;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if ((isValid) && ((DAT_20000114 >> shift & 1U) != 0)) {\n        value = FUN_08008880(shift);\n        FUN_08002ef2(&DAT_200003d4,shift,value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (index = 0; (int)index < DAT_20000004 + 1; index = index + 1 & 0xff) {\n        result = index * 0xc;\n        FUN_08001c18((&DAT_20000188)[result],(&DAT_2000018c)[index * 3],(&DAT_20000190)[result],\n                     (&DAT_20000191)[result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "iVar2": "result",
                "uVar3": "value",
                "uVar4": "index",
                "uVar5": "shift",
                "bVar1": "isValid"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_flag_bit_08002400",
            "code": "\nundefined4 check_flag_bit_08002400(int flag_index)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(flag_index * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_flag_bit_08002400",
                "param_1": "flag_index",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 socket,undefined4 timeout,undefined4 length,undefined4 callback)\n\n{\n  FUN_08007648(socket,60000,0x5dc,&errorHandler,callback);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "socket",
                "param_2": "timeout",
                "param_3": "length",
                "param_4": "callback",
                "LAB_08002444_1": "errorHandler"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_application_08002578",
            "code": "\nvoid initialize_application_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_application_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_buffer_08002580",
            "code": "\nvoid initializeBuffer_08002580(byte *buffer)\n\n{\n  char nextByte;\n  uint bufferIndex;\n  \n  bufferIndex = (uint)DAT_20000250;\n  if (0xb < bufferIndex) {\n    *buffer = 0xff;\n    return;\n  }\n  nextByte = DAT_20000250 + 1;\n  *buffer = DAT_20000250;\n  DAT_20000250 = nextByte;\n  *(undefined4 *)(&DAT_2000025c + bufferIndex * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_buffer_08002580",
                "param_1": "buffer",
                "cVar1": "nextByte",
                "uVar2": "bufferIndex"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "update_data_080025ac",
            "code": "\nbyte updateData_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint divisionResult;\n  int tempVar;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    updatedValue2 = (uint)*data;\n    updatedValue1 = (byte)(&DAT_20000258)[updatedValue2 * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[updatedValue2 * 8] = (char)updatedValue1;\n    tempVar = -offset1 + 0x220;\n    if (tempVar < 0) {\n      tempVar = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(tempVar << 0x16) >> 0x18);\n    tempVar = -offset2 + 0x960;\n    if (tempVar < 0) {\n      tempVar = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(tempVar << 0x16) >> 0x18);\n    divisionResult = *data / 0xc;\n    tempVar = FUN_08002400(divisionResult,updatedValue1,updatedValue2,(uint)*data * -0x55555555);\n    if (tempVar == 0) {\n      DAT_200002fc = (undefined)divisionResult;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "update_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "divisionResult",
                "iVar4": "tempVar"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_data_08002634",
            "code": "\nvoid initializeData_08002634(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_080025ac(inputParam1,inputParam2,0x220,0x960,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_data_08002634",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "process_byte_data_08002644",
            "code": "\nvoid processByteData_08002644(byte *byteData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte byteValue;\n  uint byteIndex;\n  int returnValue;\n  \n  byteIndex = (uint)*byteData;\n  byteValue = (&DAT_20000258)[byteIndex * 8];\n  (&DAT_20000258)[byteIndex * 8] = byteValue & 0xbf;\n  returnValue = FUN_08002400(byteIndex / 0xc,param2,byteValue & 0xbf,byteIndex * -0x55555555,param4);\n  if (returnValue == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "process_byte_data_08002644",
                "param_1": "byteData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "byteValue",
                "uVar2": "byteIndex",
                "iVar3": "returnValue"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_value_in_array_0800267c",
            "code": "\nvoid updateValueInArray_0800267c(byte *array,int value)\n\n{\n  int index;\n  \n  if (*array < 0xc) {\n    index = (0x88 - (char)array[1]) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - (char)array[2]) * 4,\n       value == index || value + (600 - (char)array[2]) * -4 < 0 != SBORROW4(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = index;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_value_in_array_0800267c",
                "param_1": "array",
                "param_2": "value",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "limit_and_transform_values_080026b0",
            "code": "\nvoid limit_and_transform_values_080026b0(int input_data,int value)\n\n{\n  if (value < 0x220) {\n    if (value < 0) {\n      value = 0;\n    }\n    else if (0xb4 < value) {\n      value = 0xb4;\n    }\n    value = FUN_08008ef4(value,0,0xb4,(0x88 - *(char *)(input_data + 1)) * 4,\n                           (600 - *(char *)(input_data + 2)) * 4);\n  }\n  FUN_0800267c(input_data,value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "limit_and_transform_values_080026b0",
                "param_1": "input_data",
                "param_2": "value"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "bitwise_shift_080026f8",
            "code": "\nuint bitwiseShift_080026f8(byte *input_byte_array)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*input_byte_array * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "bitwise_shift_080026f8",
                "param_1": "input_byte_array"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "get_next_byte_08002720",
            "code": "\nuint get_next_byte_08002720(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = (uint)DAT_200003b5;\n  if (uVar1 < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + uVar1);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "get_next_byte_08002720"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint process_data_080027f0(int input_offset,undefined4 param_value,uint data)\n\n{\n  int result;\n  uint new_data_offset;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(input_offset + 0x14,param_value,data & 0xffff);\n    if (result == 0) {\n      return data;\n    }\n    return 0;\n  }\n  new_data_offset = DAT_200003b8 + data;\n  if (DAT_200003c5 < new_data_offset) {\n    if (new_data_offset < 0x20) {\n      new_data_offset = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,new_data_offset);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_data_offset;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(input_offset + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,param_value,data);\n  DAT_200003b6 = DAT_200003b6 + (char)data;\n  DAT_200003b8 = DAT_200003b6;\n  return data;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "input_offset",
                "param_2": "param_value",
                "param_3": "data",
                "iVar1": "result",
                "uVar2": "new_data_offset"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "process_data_0800288c",
            "code": "\nundefined4 processData_0800288c(int inputParam1,undefined inputParam2)\n\n{\n  undefined4 returnValue;\n  int result;\n  uint increment;\n  undefined localVariable;\n  \n  localVariable = inputParam2;\n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(inputParam1 + 0x14,&localVariable,1);\n    if (result == 0) {\n      returnValue = 1;\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  else {\n    increment = DAT_200003b8 + 1;\n    if (DAT_200003c5 < increment) {\n      if (increment < 0x20) {\n        increment = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,increment);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)increment;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(inputParam1 + 4) = 1;\n      returnValue = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = localVariable;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      returnValue = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "uVar1": "returnValue",
                "iVar2": "result",
                "uVar3": "increment",
                "local_11": "localVariable"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_settings_0800291c",
            "code": "\nvoid initializeSettings_0800291c(undefined4 *settings)\n\n{\n  settings[1] = 0;\n  settings[2] = 1000;\n  *settings = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(settings + 0x1b) = 0x19;\n  *(undefined *)((int)settings + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_settings_0800291c",
                "param_1": "settings"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_parameters_08002948",
            "code": "\nvoid checkParameters_08002948(int inputValue,int thresholdValue)\n\n{\n  if (inputValue != 1) {\n    return;\n  }\n  if (thresholdValue == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_parameters_08002948",
                "param_1": "inputValue",
                "param_2": "thresholdValue"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_device_08002968",
            "code": "\nvoid initializeDevice_08002968(int deviceAddress,uint deviceType)\n\n{\n  int shiftedType;\n  int memoryAddress2;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedType = (deviceType & 0x7f) << 1;\n  *(char *)(deviceAddress + 0x10) = convertedType;\n  if (deviceType == 0x33) {\n    *(undefined *)(deviceAddress + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(deviceAddress + 0x11) = 0;\n  }\n  memoryAddress2 = deviceAddress + 0x14;\n  FUN_080077b0(memoryAddress2,100000,0x4000,shiftedType,*(undefined *)(deviceAddress + 0x11));\n  if (*(char *)(deviceAddress + 0x11) == '\\0') {\n    FUN_08007f8e(memoryAddress2,function1Address);\n    FUN_08007f7c(memoryAddress2,function2Address);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_device_08002968",
                "param_1": "deviceAddress",
                "param_2": "deviceType",
                "iVar1": "shiftedType",
                "iVar2": "memoryAddress2",
                "(char)iVar1": "convertedType",
                "&LAB_08002774_1": "function1Address",
                "&LAB_08002b00_1": "function2Address"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid executeFunction_08002a1c(undefined4 param1,undefined param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002968(param1,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "call_with_four_params_08002a26",
            "code": "\nvoid callWithFourParams_08002a26(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08002a1c(inputParam1,0x33,inputParam3,inputParam4,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "call_with_four_params_08002a26",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param,int input)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(input << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param",
                "param_2": "input"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_status_08002a58",
            "code": "\nundefined4 checkStatus_08002a58(int dataPtr)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)(dataPtr + 0x11) == '\\0') {\n    status = 4;\n  }\n  else {\n    result = FUN_08007e74(dataPtr + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      status = 0;\n    }\n    else if (result == 1) {\n      status = 1;\n    }\n    else {\n      status = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "param_1": "dataPtr",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "initialize_function_08002ac0",
            "code": "\nvoid initializeFunction_08002ac0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08002a58(input1,1,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "initialize_function_08002ac0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_data_08002acc",
            "code": "\nvoid updateData_08002acc(uint inputValue,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < inputValue) {\n    if (inputValue < 0x20) {\n      inputValue = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,inputValue,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)inputValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_data_08002acc",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "process_data_08002b68",
            "code": "\nundefined4\nprocessData_08002b68(undefined4 *outputArray,uint inputSize,undefined4 param3,uint param4,byte param5)\n\n{\n  int returnValue;\n  uint byteValue;\n  uint param4Copy;\n  \n  byteValue = (uint)param5;\n  if (*(char *)((int)outputArray + 0x11) == '\\0') {\n    return 0;\n  }\n  param4Copy = param4;\n  FUN_08002acc(param3);\n  if (DAT_200003c8 != 0) {\n    if (byteValue != 0) {\n      FUN_08002a30(outputArray,inputSize);\n      if (3 < byteValue) {\n        byteValue = 3;\n      }\n      while( true ) {\n        if (byteValue == 0) break;\n        (**(code **)*outputArray)(outputArray,param4 >> ((byteValue - 1 & 0x1f) << 3) & 0xff);\n        byteValue = byteValue - 1 & 0xff;\n      }\n      FUN_08002a58(outputArray,0);\n    }\n    returnValue = FUN_08007f0e(outputArray + 5,(inputSize & 0x7f) << 1,DAT_200003c8,param3,param4Copy);\n    if (returnValue != 0) {\n      param3 = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)param3;\n    return param3;\n  }\n  outputArray[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "process_data_08002b68",
                "param_1": "outputArray",
                "param_2": "inputSize",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "returnValue",
                "uVar2": "byteValue",
                "uVar3": "param4Copy"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_08002c00",
            "code": "\nvoid initialize_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_system_08002c14",
            "code": "\nvoid initialize_system_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_system_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "execute_process_08002c1e",
            "code": "\nvoid execute_process_08002c1e(undefined4 process_id,undefined4 timeout,undefined4 address_1,undefined4 address_2)\n\n{\n  FUN_08002948(1,0xffff,address_1,address_2,address_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "execute_process_08002c1e",
                "param_1": "process_id",
                "param_2": "timeout",
                "param_3": "address_1",
                "param_4": "address_2"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 callbackFunction,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(arg1,arg2,arg2,DAT_200005d4,arg3);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "callbackFunction",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_memory_08002ce0",
            "code": "\nint initializeMemory_08002ce0(int baseAddress)\n\n{\n  int offset;\n  \n  FUN_0800314e(baseAddress + 0x40);\n  offset = baseAddress + 0x44;\n  FUN_080032bc(offset,baseAddress,0x40);\n  *(undefined *)(baseAddress + 0xc4) = 0;\n  *(undefined4 *)(baseAddress + 200) = 0;\n  *(undefined *)(baseAddress + 0x1f8) = 0;\n  FUN_08003306(offset,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(offset,0x90,&label1,0);\n  FUN_08003306(offset,0xc0,&label2,0);\n  FUN_08003306(offset,0xd0,&label3,0);\n  FUN_08003306(offset,0xf4,&label4,0);\n  FUN_08003306(offset,0xf5,&label5,0);\n  FUN_08003366(offset,0x71,&label6,0);\n  FUN_08003370(offset,0xf0,&label7,0);\n  FUN_08003346(offset,0x79,&label8,baseAddress);\n  FUN_08003350(offset,0xf9,&label9,baseAddress);\n  FUN_08003350(offset,0xff,&label10,0);\n  return baseAddress;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_memory_08002ce0",
                "param_1": "baseAddress",
                "iVar1": "offset",
                "LAB_08002c40_1": "label1",
                "LAB_08002c7c_1": "label2",
                "LAB_08002c90_1": "label3",
                "LAB_08002c54_1": "label4",
                "LAB_08002c68_1": "label5",
                "LAB_08002ca4_1": "label6",
                "LAB_08002cb8_1": "label7",
                "LAB_08002e1a_1": "label8",
                "LAB_08002dea_1": "label9",
                "LAB_08002cd0_1": "label10"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_param_and_process_08002dbc",
            "code": "\nvoid checkParamAndProcess_08002dbc(int status,int value)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_param_and_process_08002dbc",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "initialize_data_08002ddc",
            "code": "\nvoid initializeData_08002ddc(int dataStart,undefined4 counter,undefined4 limit,undefined4 dataEnd)\n\n{\n  FUN_0800322c(dataStart + 0x40,2,5,dataEnd,dataEnd);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "initialize_data_08002ddc",
                "param_1": "dataStart",
                "param_2": "counter",
                "param_3": "limit",
                "param_4": "dataEnd"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int data)\n\n{\n  undefined *dataPointer;\n  \n  if (*(byte *)(data + 0xc4) == 0) {\n    return;\n  }\n  dataPointer = *(undefined **)(data + 200);\n  FUN_080031ce(data + 0x40,*dataPointer,dataPointer[1],*(byte *)(data + 0xc4) - 2,dataPointer + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "data",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_parameter_08002e26",
            "code": "\nvoid updateParameter_08002e26(int parameter,undefined4 new_value)\n\n{\n  *(undefined4 *)(parameter + 0xc0) = new_value;\n  FUN_08003154(parameter + 0x40);\n  FUN_08002ddc(parameter);\n  FUN_08002df6(parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_parameter_08002e26",
                "param_1": "parameter",
                "param_2": "new_value"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "process_file_name_08002e44",
            "code": "\nvoid processFileName_08002e44(int outputBuffer,int inputBuffer,undefined param3,undefined param4)\n\n{\n  byte byteVal;\n  char charVal;\n  int result1;\n  int result2;\n  undefined *bufferPtr;\n  \n  result1 = FUN_080099a4(inputBuffer,\".cpp\");\n  result2 = FUN_0800997e(inputBuffer,0x2f);\n  if (result2 == 0) {\n    result2 = FUN_0800997e(inputBuffer,0x5c);\n  }\n  if (result2 != 0) {\n    inputBuffer = result2 + 1;\n  }\n  if (result1 == 0) {\n    charVal = FUN_08000178(inputBuffer);\n    *(char *)(outputBuffer + 0xc4) = charVal + '\\x02';\n  }\n  else {\n    *(char *)(outputBuffer + 0xc4) = ((char)result1 - (char)inputBuffer) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(outputBuffer + 200));\n  byteVal = *(byte *)(outputBuffer + 0xc4);\n  bufferPtr = (undefined *)FUN_08009190(byteVal + 1);\n  *(undefined **)(outputBuffer + 200) = bufferPtr;\n  bufferPtr[byteVal] = 0;\n  *bufferPtr = param3;\n  bufferPtr[1] = param4;\n  FUN_08009954(bufferPtr + 2,inputBuffer,*(byte *)(outputBuffer + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "process_file_name_08002e44",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "byteVal",
                "cVar2": "charVal",
                "iVar3": "result1",
                "iVar4": "result2",
                "puVar5": "bufferPtr"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_function_08002ec4",
            "code": "\nvoid executeFunction_08002ec4(int functionPointer)\n\n{\n  (**(code **)(**(int **)(functionPointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_function_08002ec4",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "process_result_08002ed2",
            "code": "\nvoid processResult_08002ed2(int input)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(input + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    FUN_08003474(input + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "process_result_08002ed2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "initialize_graphics_08002ef2",
            "code": "\nvoid initializeGraphics_08002ef2(int bufferAddress,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  FUN_08003158(bufferAddress + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "initialize_graphics_08002ef2",
                "param_1": "bufferAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "calculate_sum_08002efe",
            "code": "\nvoid calculate_sum_08002efe(int base_address,undefined4 offset,undefined2 value1,undefined4 value2)\n\n{\n  FUN_0800319e(base_address + 0x40,offset,value1,value2,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "calculate_sum_08002efe",
                "param_1": "base_address",
                "param_2": "offset",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_function_08002f0a",
            "code": "\nvoid initializeFunction_08002f0a(int inputValue)\n\n{\n  FUN_0800325a(inputValue + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_function_08002f0a",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_pointer_08002f14",
            "code": "\nvoid initializePointer_08002f14(int baseAddress)\n\n{\n  FUN_080032a2(baseAddress + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_pointer_08002f14",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_external_function_08002f1e",
            "code": "\nvoid executeExternalFunction_08002f1e(int externalFunctionPointer)\n\n{\n  (**(code **)**(undefined4 **)(externalFunctionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_external_function_08002f1e",
                "param_1": "externalFunctionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_in_memory_08002f2c",
            "code": "\nvoid updateDataInMemory_08002f2c(undefined4 status,uint dataCode,undefined4 dataValue)\n\n{\n  undefined4 tempValue;\n  \n  if (dataCode == 0xd0) {\n    DAT_200005f0 = dataValue;\n    return;\n  }\n  if (0xd0 < dataCode) {\n    if (dataCode == 0xf4) {\n      DAT_200005e0 = dataValue;\n      return;\n    }\n    tempValue = dataValue;\n    if ((dataCode != 0xf5) && (tempValue = DAT_200005e4, dataCode == 0xe0)) {\n      DAT_200005d4 = dataValue;\n      return;\n    }\n    DAT_200005e4 = tempValue;\n    return;\n  }\n  if (dataCode == 0x90) {\n    DAT_200005dc = dataValue;\n    return;\n  }\n  if (dataCode != 0xc0) {\n    return;\n  }\n  DAT_200005ec = dataValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_in_memory_08002f2c",
                "param_1": "status",
                "param_2": "dataCode",
                "param_3": "dataValue",
                "uVar1": "tempValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_dat_value_08002f84",
            "code": "\nvoid updateDatValue_08002f84(undefined4 unusedParam,int inputValue,undefined4 newValue)\n\n{\n  if (inputValue == 0xff) {\n    DAT_200005e8 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_dat_value_08002f84",
                "param_1": "unusedParam",
                "param_2": "inputValue",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "set_data_pointer_08002f94",
            "code": "\nvoid set_data_pointer_08002f94(undefined4 data_pointer,undefined4 unused_param,undefined4 new_data_value)\n\n{\n  DAT_200005d0 = new_data_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "set_data_pointer_08002f94",
                "param_1": "data_pointer",
                "param_2": "unused_param",
                "param_3": "new_data_value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_value_from_offset_08002fa0",
            "code": "\nundefined getValueFromOffset_08002fa0(int offset,int baseAddress)\n\n{\n  return *(undefined *)(baseAddress + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_value_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_value_if_not_seven_f_08002fa8",
            "code": "\nvoid updateValueIfNotSevenF_08002fa8(int baseAddress,int offset,undefined newValue)\n\n{\n  if (*(char *)(baseAddress + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(baseAddress + offset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_value_if_not_seven_f_08002fa8",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_offset_value_08002fba",
            "code": "\nundefined4 get_offset_value_08002fba(int base_address,int index)\n\n{\n  return *(undefined4 *)(base_address + (index + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_offset_value_08002fba",
                "param_1": "base_address",
                "param_2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_index_08002fc2",
            "code": "\nvoid storeValueAtIndex_08002fc2(int baseAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(baseAddress + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_index_08002fc2",
                "param_1": "baseAddress",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "execute_loop_08002fca",
            "code": "\nvoid executeLoop_08002fca(undefined4 unusedParam,undefined4 resultParam,int loopCount,undefined4 paramA,\n                 undefined4 paramB)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < loopCount; index = index + 1 & 0xff) {\n    FUNC_08008ac4(paramB);\n    FUN_08008a24(resultParam,1);\n    FUNC_08008ac4(paramA);\n    FUN_08008a24(resultParam,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "execute_loop_08002fca",
                "param_1": "unusedParam",
                "param_2": "resultParam",
                "param_3": "loopCount",
                "param_4": "paramA",
                "param_5": "paramB",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_execute_operations_08003002",
            "code": "\nvoid checkAndExecuteOperations_08003002(int pointerToData)\n\n{\n  if (*(char *)(pointerToData + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(pointerToData,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(pointerToData,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_execute_operations_08003002",
                "param_1": "pointerToData"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  FUN_08008c44(&DAT_20000700,value1,6,value3,value3);\n  FUN_08003002(dataPointer);\n  FUN_08002e26(dataPointer,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decompress_data_0800307a",
            "code": "\nvoid decompressData_0800307a(undefined4 *ptrFunction,uint length,byte *data,uint maxSize)\n\n{\n  uint currentByte;\n  uint bitPosition;\n  uint compressedPosition;\n  uint dataPosition;\n  \n  currentByte = (uint)*data;\n  if (maxSize == 0) {\n    maxSize = 0xffffffff;\n  }\n  dataPosition = 0;\n  bitPosition = 0;\n  compressedPosition = 0;\n  while ((dataPosition < length && (compressedPosition < maxSize))) {\n    (***(code ***)(undefined4 *)*ptrFunction)\n              ((undefined4 *)*ptrFunction,((uint)data[dataPosition] << (bitPosition & 0xff) | currentByte) & 0x7f);\n    currentByte = (int)(uint)data[dataPosition] >> (7 - bitPosition & 0xff) & 0xff;\n    bitPosition = bitPosition + 1;\n    while ((compressedPosition = compressedPosition + 1, 6 < bitPosition && (compressedPosition < maxSize))) {\n      (***(code ***)(undefined4 *)*ptrFunction)((undefined4 *)*ptrFunction,currentByte & 0x7f);\n      currentByte = currentByte >> 7;\n      bitPosition = bitPosition - 7;\n    }\n    dataPosition = dataPosition + 1;\n  }\n  if ((bitPosition != 0) && (compressedPosition < maxSize)) {\n    (***(code ***)(undefined4 *)*ptrFunction)((undefined4 *)*ptrFunction,(1 << (bitPosition & 0xff)) - 1U & currentByte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decompress_data_0800307a",
                "param_1": "ptrFunction",
                "param_2": "length",
                "param_3": "data",
                "param_4": "maxSize",
                "uVar1": "currentByte",
                "uVar2": "bitPosition",
                "uVar3": "compressedPosition",
                "uVar4": "dataPosition"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid executeFunction_08003106(undefined4 *functionPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined4 *pointerToFunction;\n  \n  pointerToFunction = (undefined4 *)*functionPointer;\n  if (pointerToFunction != (undefined4 *)0x0) {\n    (**(code **)*pointerToFunction)(pointerToFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x6f);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,value1);\n    FUN_0800307a(functionPointer,value2,value3,value2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "functionPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar1": "pointerToFunction"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_variable_0800314e",
            "code": "\nvoid initializeVariable_0800314e(undefined4 *variablePointer)\n\n{\n  *variablePointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_variable_0800314e",
                "param_1": "variablePointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_value_08003154",
            "code": "\nvoid copyValue_08003154(undefined4 *destination,undefined4 value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_value_08003154",
                "param_1": "destination",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_function_08003158",
            "code": "\nvoid executeFunction_08003158(undefined4 *functionList,uint functionIndex,ushort parameterValue)\n\n{\n  undefined4 *functionPointer;\n  ushort modifiedParameterValue;\n  \n  functionPointer = (undefined4 *)*functionList;\n  if (functionPointer != (undefined4 *)0x0) {\n    modifiedParameterValue = parameterValue;\n    if (((int)functionIndex < 0x10) && (parameterValue < 0x4000)) {\n      (**(code **)*functionPointer)(functionPointer,functionIndex | 0xe0);\n      FUN_0800307a(functionList,2,&modifiedParameterValue);\n    }\n    else {\n      FUN_08003106(functionList,functionIndex,2,&modifiedParameterValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "param_1": "functionList",
                "param_2": "functionIndex",
                "param_3": "parameterValue",
                "puVar1": "functionPointer",
                "local_a": "modifiedParameterValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_0800319e",
            "code": "\nvoid executeFunction_0800319e(undefined4 *functionPointer,uint flags,undefined2 data)\n\n{\n  undefined4 *ptrToFunction;\n  undefined2 processedData;\n  \n  ptrToFunction = (undefined4 *)*functionPointer;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    processedData = data;\n    (**(code **)*ptrToFunction)(ptrToFunction,flags & 0xf | 0x90);\n    FUN_0800307a(functionPointer,2,&processedData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_0800319e",
                "param_1": "functionPointer",
                "param_2": "flags",
                "param_3": "data",
                "puVar1": "ptrToFunction",
                "local_a": "processedData"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid execute_function_080031ce(undefined4 *function_ptr,undefined4 param_2,undefined4 param_3,uint count,int base_index\n                 )\n\n{\n  undefined4 *ptr_to_function_ptr;\n  uint index;\n  \n  ptr_to_function_ptr = (undefined4 *)*function_ptr;\n  if (ptr_to_function_ptr != (undefined4 *)0x0) {\n    (**(code **)*ptr_to_function_ptr)(ptr_to_function_ptr,0xf0,param_3,*(code **)*ptr_to_function_ptr,count);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0x79);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param_2);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param_3);\n    for (index = 0; index < count; index = index + 1) {\n      FUN_0800307a(function_ptr,1,base_index + index,0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "function_ptr",
                "param_4": "count",
                "param_5": "base_index",
                "puVar1": "ptr_to_function_ptr",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_and_parameters_0800322c",
            "code": "\nvoid executeFunctionAndParameters_0800322c(undefined4 *functionPointer,undefined4 parameter1,undefined4 parameter2)\n\n{\n  undefined4 *pointerToFunction;\n  \n  pointerToFunction = (undefined4 *)*functionPointer;\n  if (pointerToFunction != (undefined4 *)0x0) {\n    (**(code **)*pointerToFunction)(pointerToFunction,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,parameter1);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,parameter2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_and_parameters_0800322c",
                "param_1": "functionPointer",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "puVar1": "pointerToFunction"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_process_0800325a",
            "code": "\nvoid executeProcess_0800325a(undefined4 *process,undefined4 param,uint count,int offset)\n\n{\n  undefined4 *processPointer;\n  uint i;\n  \n  processPointer = (undefined4 *)*process;\n  if (processPointer != (undefined4 *)0x0) {\n    (**(code **)*processPointer)(processPointer,0xf0);\n    (***(code ***)(undefined4 *)*process)((undefined4 *)*process,param);\n    for (i = 0; i < count; i = i + 1) {\n      FUN_0800307a(process,1,offset + i,0);\n    }\n    (***(code ***)(undefined4 *)*process)((undefined4 *)*process,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_process_0800325a",
                "param_1": "process",
                "param_2": "param",
                "param_3": "count",
                "param_4": "offset",
                "puVar1": "processPointer",
                "uVar2": "i"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "send_notification_080032a2",
            "code": "\nvoid sendNotification_080032a2(undefined4 notificationType,undefined4 dataPointer,undefined4 unused,undefined4 callbackFunction)\n\n{\n  undefined4 dataValue;\n  \n  dataValue = FUN_08000178(dataPointer);\n  FUN_0800325a(notificationType,0x71,dataValue,dataPointer,callbackFunction);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "send_notification_080032a2",
                "param_1": "notificationType",
                "param_2": "dataPointer",
                "param_3": "unused",
                "param_4": "callbackFunction",
                "uVar1": "dataValue"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_data_structure_080032bc",
            "code": "\nvoid initializeDataStructure_080032bc(int dataStructure,int paramValue,undefined4 paramValue2)\n\n{\n  *(int *)(dataStructure + 4) = paramValue;\n  *(undefined4 *)(dataStructure + 8) = paramValue2;\n  *(undefined *)(dataStructure + 0xc) = 0;\n  *(undefined *)(dataStructure + 0xd) = 0;\n  *(undefined4 *)(dataStructure + 0x10) = 0;\n  *(undefined *)(dataStructure + 0x14) = 0;\n  *(undefined4 *)(dataStructure + 0x18) = 0;\n  *(undefined4 *)(dataStructure + 0x1c) = 0;\n  *(undefined4 *)(dataStructure + 0x20) = 0;\n  *(undefined4 *)(dataStructure + 0x24) = 0;\n  *(undefined4 *)(dataStructure + 0x28) = 0;\n  *(undefined4 *)(dataStructure + 0x2c) = 0;\n  *(undefined4 *)(dataStructure + 0x30) = 0;\n  *(undefined4 *)(dataStructure + 0x34) = 0;\n  *(undefined4 *)(dataStructure + 0x38) = 0;\n  *(undefined4 *)(dataStructure + 0x3c) = 0;\n  *(undefined4 *)(dataStructure + 0x40) = 0;\n  *(undefined4 *)(dataStructure + 0x44) = 0;\n  *(undefined4 *)(dataStructure + 0x48) = 0;\n  *(undefined4 *)(dataStructure + 0x4c) = 0;\n  *(undefined4 *)(dataStructure + 0x50) = 0;\n  *(undefined4 *)(dataStructure + 0x54) = 0;\n  *(undefined4 *)(dataStructure + 0x58) = 0;\n  *(undefined4 *)(dataStructure + 0x5c) = 0;\n  *(undefined4 *)(dataStructure + 0x60) = 0;\n  *(undefined4 *)(dataStructure + 100) = 0;\n  *(undefined4 *)(dataStructure + 0x68) = 0;\n  *(undefined4 *)(dataStructure + 0x6c) = 0;\n  *(undefined4 *)(dataStructure + 0x70) = 0;\n  *(undefined4 *)(dataStructure + 0x74) = 0;\n  *(undefined4 *)(dataStructure + 0x78) = 0;\n  *(bool *)dataStructure = paramValue == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_data_structure_080032bc",
                "param_1": "dataStructure",
                "param_2": "paramValue",
                "param_3": "paramValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_data_08003306",
            "code": "\nvoid updateData_08003306(int dataPointer,uint value,undefined4 newData1,undefined4 newData2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(dataPointer + 0x58) = newData1;\n    *(undefined4 *)(dataPointer + 0x28) = newData2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(dataPointer + 0x5c) = newData1;\n      *(undefined4 *)(dataPointer + 0x2c) = newData2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(dataPointer + 0x60) = newData1;\n      *(undefined4 *)(dataPointer + 0x30) = newData2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(dataPointer + 0x4c) = newData1;\n      *(undefined4 *)(dataPointer + 0x1c) = newData2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(dataPointer + 0x50) = newData1;\n    *(undefined4 *)(dataPointer + 0x20) = newData2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(dataPointer + 0x54) = newData1;\n    *(undefined4 *)(dataPointer + 0x24) = newData2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_data_08003306",
                "param_1": "dataPointer",
                "param_2": "value",
                "param_3": "newData1",
                "param_4": "newData2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "set_parameters_if_equals_08003346",
            "code": "\nvoid setParametersIfEquals_08003346(int baseAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(baseAddress + 0x70) = newValue1;\n    *(undefined4 *)(baseAddress + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "set_parameters_if_equals_08003346",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_config_08003350",
            "code": "\nvoid updateConfig_08003350(int configPtr,int value,undefined4 newParam1,undefined4 newParam2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(configPtr + 0x74) = newParam1;\n    *(undefined4 *)(configPtr + 0x38) = newParam2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(configPtr + 0x78) = newParam1;\n  *(undefined4 *)(configPtr + 0x48) = newParam2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_config_08003350",
                "param_1": "configPtr",
                "param_2": "value",
                "param_3": "newParam1",
                "param_4": "newParam2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_params_08003366",
            "code": "\nvoid updateParams_08003366(int objectAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(objectAddress + 0x68) = newValue1;\n    *(undefined4 *)(objectAddress + 0x40) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_params_08003366",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "update_parameters_08003370",
            "code": "\nvoid updateParameters_08003370(int baseAddress,undefined4 unused,undefined4 newParam1,undefined4 newParam2)\n\n{\n  *(undefined4 *)(baseAddress + 0x6c) = newParam1;\n  *(undefined4 *)(baseAddress + 0x44) = newParam2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "update_parameters_08003370",
                "param_1": "baseAddress",
                "param_2": "unused",
                "param_3": "newParam1",
                "param_4": "newParam2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_data_08003376",
            "code": "\nvoid updateData_08003376(undefined *dataStruct,undefined newValue,uint index)\n\n{\n  bool isDataUpdated;\n  \n  if (index < *(uint *)(dataStruct + 8)) {\n    isDataUpdated = false;\n  }\n  else {\n    isDataUpdated = true;\n    if (*(code **)(dataStruct + 100) != (code *)0x0) {\n      *dataStruct = 1;\n      (**(code **)(dataStruct + 100))(*(undefined4 *)(dataStruct + 0x3c));\n      if (index < *(uint *)(dataStruct + 8)) {\n        isDataUpdated = false;\n      }\n      else {\n        isDataUpdated = true;\n      }\n    }\n  }\n  if (!isDataUpdated) {\n    *(undefined *)(*(int *)(dataStruct + 4) + index) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_data_08003376",
                "param_1": "dataStruct",
                "param_2": "newValue",
                "param_3": "index",
                "bVar1": "isDataUpdated"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bits_080033a8",
            "code": "\nvoid copyAndShiftBits_080033a8(undefined4 data,uint length,int array)\n\n{\n  byte byteValue;\n  int copyIndex;\n  uint byteIndex;\n  \n  copyIndex = 0;\n  for (byteIndex = 0; byteIndex < length; byteIndex = byteIndex + 2) {\n    byteValue = *(byte *)(array + byteIndex);\n    *(byte *)(array + copyIndex) = byteValue;\n    *(byte *)(array + copyIndex) = *(char *)(array + byteIndex + 1) << 7 | byteValue;\n    copyIndex = copyIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "data",
                "param_2": "length",
                "param_3": "array",
                "bVar1": "byteValue",
                "iVar2": "copyIndex",
                "uVar3": "byteIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_data_080033cc",
            "code": "\nvoid processData_080033cc(int dataStruct,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  char firstChar;\n  int index;\n  char *stringPtr;\n  \n  stringPtr = *(char **)(dataStruct + 4);\n  firstChar = *stringPtr;\n  if (firstChar == 'q') {\n    if (*(int *)(dataStruct + 0x68) != 0) {\n      index = FUN_080033a8(dataStruct,*(int *)(dataStruct + 0x18) + -1,stringPtr + 1,stringPtr,arg3);\n      FUN_08003376(dataStruct,0,index + 1);\n      (**(code **)(dataStruct + 0x68))(*(undefined4 *)(dataStruct + 0x40),*(int *)(dataStruct + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(dataStruct + 0x70) != (code *)0x0) {\n      if (*(uint *)(dataStruct + 0x18) < 3) {\n        (**(code **)(dataStruct + 0x70))(*(undefined4 *)(dataStruct + 0x34),0,0);\n        return;\n      }\n      index = FUN_080033a8(dataStruct,*(uint *)(dataStruct + 0x18) - 3,stringPtr + 3,stringPtr,arg3);\n      FUN_08003376(dataStruct,0,index + 3);\n      index = *(int *)(dataStruct + 4);\n      (**(code **)(dataStruct + 0x70))\n                (*(undefined4 *)(dataStruct + 0x34),*(undefined *)(index + 1),*(undefined *)(index + 2)\n                 ,index + 3);\n      return;\n    }\n  }\n  else if (*(code **)(dataStruct + 0x6c) != (code *)0x0) {\n    (**(code **)(dataStruct + 0x6c))\n              (*(undefined4 *)(dataStruct + 0x44),firstChar,*(int *)(dataStruct + 0x18) + -1,stringPtr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_data_080033cc",
                "param_1": "dataStruct",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "cVar1": "firstChar",
                "iVar2": "index",
                "pcVar3": "stringPtr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_data_structure_0800344a",
            "code": "\nvoid initializeDataStructure_0800344a(int structurePtr)\n\n{\n  uint index;\n  \n  *(undefined4 *)(structurePtr + 0x10) = 0;\n  *(undefined *)(structurePtr + 0xc) = 0;\n  *(undefined *)(structurePtr + 0xd) = 0;\n  for (index = 0; index < *(uint *)(structurePtr + 8); index = index + 1) {\n    *(undefined *)(*(int *)(structurePtr + 4) + index) = 0;\n  }\n  *(undefined *)(structurePtr + 0x14) = 0;\n  *(undefined4 *)(structurePtr + 0x18) = 0;\n  if (*(code **)(structurePtr + 0x78) != (code *)0x0) {\n    (**(code **)(structurePtr + 0x78))(*(undefined4 *)(structurePtr + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_data_structure_0800344a",
                "param_1": "structurePtr",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_data_08003474",
            "code": "\nvoid processData_08003474(int dataPtr,uint value)\n\n{\n  byte byteValue;\n  \n  if (*(char *)(dataPtr + 0x14) != '\\0') {\n    if (value != 0xf7) {\n      FUN_08003376(dataPtr,value,*(undefined4 *)(dataPtr + 0x18));\n      *(int *)(dataPtr + 0x18) = *(int *)(dataPtr + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(dataPtr + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(dataPtr + 0x10) == 0) || (0x7f < (int)value)) {\n    if ((int)value < 0xf0) {\n      *(byte *)(dataPtr + 0xd) = (byte)value & 0xf;\n      value = value & 0xf0;\n    }\n    if (value == 0xf0) {\n      *(undefined *)(dataPtr + 0x14) = 1;\n      *(undefined4 *)(dataPtr + 0x18) = 0;\n      return;\n    }\n    if (value < 0xf1) {\n      if (value != 0xc0) {\n        if (value < 0xc1) {\n          if (value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (value == 0xd0) goto LAB_0800359c;\n          if (value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(dataPtr + 0x10) = 2;\n        *(char *)(dataPtr + 0xc) = (char)value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(dataPtr + 0x10) = 1;\n      *(char *)(dataPtr + 0xc) = (char)value;\n      return;\n    }\n    if (value != 0xf9) {\n      if (0xf9 < value) {\n        if (value == 0xff) {\n          FUN_0800344a(dataPtr);\n          return;\n        }\n        return;\n      }\n      if (1 < value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(dataPtr + 0x74) != (code *)0x0) {\n      (**(code **)(dataPtr + 0x74))(*(undefined4 *)(dataPtr + 0x38));\n    }\n  }\n  else {\n    *(int *)(dataPtr + 0x10) = *(int *)(dataPtr + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(dataPtr + 0x10) == 0) && (byteValue = *(byte *)(dataPtr + 0xc), byteValue != 0)) {\n      if (byteValue == 0xd0) {\n        if (*(code **)(dataPtr + 0x58) != (code *)0x0) {\n          (**(code **)(dataPtr + 0x58))\n                    (*(undefined4 *)(dataPtr + 0x28),*(undefined *)(dataPtr + 0xd),\n                     **(undefined **)(dataPtr + 4));\n        }\n      }\n      else if (byteValue < 0xd1) {\n        if (byteValue == 0x90) {\n          if (*(code **)(dataPtr + 0x50) != (code *)0x0) {\n            (**(code **)(dataPtr + 0x50))\n                      (*(undefined4 *)(dataPtr + 0x20),*(undefined *)(dataPtr + 0xd),\n                       (uint)(*(byte **)(dataPtr + 4))[1] + (uint)**(byte **)(dataPtr + 4) * 0x80);\n          }\n        }\n        else if ((byteValue == 0xc0) && (*(code **)(dataPtr + 0x54) != (code *)0x0)) {\n          (**(code **)(dataPtr + 0x54))\n                    (*(undefined4 *)(dataPtr + 0x24),*(undefined *)(dataPtr + 0xd),\n                     **(undefined **)(dataPtr + 4));\n        }\n      }\n      else if (byteValue == 0xf4) {\n        if (*(code **)(dataPtr + 0x5c) != (code *)0x0) {\n          (**(code **)(dataPtr + 0x5c))\n                    (*(undefined4 *)(dataPtr + 0x2c),(*(undefined **)(dataPtr + 4))[1],\n                     **(undefined **)(dataPtr + 4));\n        }\n      }\n      else if (byteValue == 0xf5) {\n        if (*(code **)(dataPtr + 0x60) != (code *)0x0) {\n          (**(code **)(dataPtr + 0x60))\n                    (*(undefined4 *)(dataPtr + 0x30),(*(undefined **)(dataPtr + 4))[1],\n                     **(undefined **)(dataPtr + 4));\n        }\n      }\n      else if ((byteValue == 0xe0) && (*(code **)(dataPtr + 0x4c) != (code *)0x0)) {\n        (**(code **)(dataPtr + 0x4c))\n                  (*(undefined4 *)(dataPtr + 0x1c),*(undefined *)(dataPtr + 0xd),\n                   (uint)(*(byte **)(dataPtr + 4))[1] + (uint)**(byte **)(dataPtr + 4) * 0x80);\n      }\n      *(undefined *)(dataPtr + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "param_1": "dataPtr",
                "param_2": "value",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_hardware_080035b8",
            "code": "\nvoid initializeHardware_080035b8(void)\n\n{\n  int result;\n  uint timeElapsed;\n  undefined4 inputVariables [2];\n  undefined4 outputVariable;\n  undefined4 flag;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 array [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  array[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUNC_08005460(array);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  flag = 0xf;\n  constant1 = 2;\n  constant2 = 0;\n  constant3 = 0x400;\n  constant4 = 0;\n  result = FUN_080058ac(&flag);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  inputVariables[0] = 2;\n  outputVariable = 0x8000;\n  result = FUN_08005aa4(inputVariables);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeElapsed = FUN_08005a1c();\n  FUN_08003fd8(timeElapsed / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_hardware_080035b8",
                "local_54": "inputVariables",
                "local_4c": "outputVariable",
                "local_44": "flag",
                "local_40": "constant1",
                "local_3c": "constant2",
                "local_38": "constant3",
                "local_34": "constant4",
                "local_30": "array",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5",
                "iVar1": "result",
                "uVar2": "timeElapsed"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_system_080036a2",
            "code": "\nvoid initializeSystem_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_system_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_character_index_080036ac",
            "code": "\nuint find_character_index_080036ac(int input_char)\n\n{\n  uint result_index;\n  \n  if ((uint)(input_char << 0x18) >> 0x1c < 5) {\n    for (result_index = 0; (result_index < 0x3c && (input_char != (char)(&DAT_0800a908)[result_index])); result_index = result_index + 1)\n    {\n    }\n  }\n  else {\n    result_index = 0xffffffff;\n  }\n  return result_index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "input_char",
                "uVar1": "result_index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "check_and_set_param_080036d8",
            "code": "\nundefined4 checkAndSetParam_080036d8(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputParam,0);\n  DAT_20000010 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "check_and_set_param_080036d8",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "set_flag_and_call_functions_08003724",
            "code": "\n\n\nundefined4 setFlagAndCallFunctions_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "set_flag_and_call_functions_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "add_binary_to_sum_08003748",
            "code": "\nvoid addBinaryToSum_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "add_binary_to_sum_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_global_value_08003760",
            "code": "\nundefined4 getGlobalValue_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_global_value_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "check_data_validity_0800376c",
            "code": "\nundefined4 checkDataValidity_0800376c(uint **dataPointer,uint condition)\n\n{\n  int initialValue;\n  uint randomValue;\n  int tempValue;\n  undefined4 result;\n  uint *data;\n  uint multiplier;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08003760();\n  multiplier = DAT_20000018;\n  data = *dataPointer;\n  if ((data[2] & 0x100) == 0) {\n    if (((data[1] & 0x100) == 0) && ((data[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**dataPointer & 2) != 0) goto LAB_0800387e;\n      } while ((condition == 0xffffffff) ||\n              ((condition != 0 && (tempValue = FUN_08003760(), (uint)(tempValue - initialValue) <= condition))));\n      dataPointer[10] = (uint *)((uint)dataPointer[10] | 4);\n      *(undefined *)(dataPointer + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomValue = FUN_08005bb8(2);\n      data = *dataPointer;\n      if (((data[4] & 0x24924924) == 0) && ((data[3] & 0x924924) == 0)) {\n        if ((data[4] & 0x12492492) == 0) {\n          if ((data[3] & 0x492492) == 0) {\n            tempValue = 0x14;\n          }\n          else {\n            tempValue = 0x29;\n          }\n        }\n        else {\n          tempValue = 0x29;\n        }\n      }\n      else if (((data[4] & 0x12492492) == 0) && ((data[3] & 0x492492) == 0)) {\n        tempValue = 0x54;\n      }\n      else if ((data[4] & 0x249249) == 0) {\n        if ((data[3] & 0x249249) == 0) {\n          tempValue = 0x54;\n        }\n        else {\n          tempValue = 0xfc;\n        }\n      }\n      else {\n        tempValue = 0xfc;\n      }\n      multiplier = (multiplier / randomValue) * tempValue;\n      for (; counter <= multiplier && multiplier - counter != 0; counter = counter + 1) {\n        if ((condition != 0xffffffff) &&\n           ((condition == 0 || (tempValue = FUN_08003760(), condition < (uint)(tempValue - initialValue))))) {\n          dataPointer[10] = (uint *)((uint)dataPointer[10] | 4);\n          *(undefined *)(dataPointer + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **dataPointer = 0xffffffed;\n      dataPointer[10] = (uint *)((uint)dataPointer[10] | 0x200);\n      if (((*dataPointer)[2] & 0xe0000) == 0xe0000) {\n        if (dataPointer[3] == (uint *)0x0) {\n          dataPointer[10] = (uint *)((uint)dataPointer[10] & 0xfffffeff);\n          if (((uint)dataPointer[10] & 0x1000) == 0) {\n            dataPointer[10] = (uint *)((uint)dataPointer[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    dataPointer[10] = (uint *)((uint)dataPointer[10] | 0x20);\n    *(undefined *)(dataPointer + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "check_data_validity_0800376c",
                "param_1": "dataPointer",
                "param_2": "condition",
                "iVar1": "initialValue",
                "uVar2": "randomValue",
                "iVar3": "tempValue",
                "uVar4": "result",
                "puVar5": "data",
                "uVar6": "multiplier",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 getOffsetValue_080038dc(int *offsetPointer)\n\n{\n  return *(undefined4 *)(*offsetPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "offsetPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_configuration_080038e4",
            "code": "\nundefined4 updateConfiguration_080038e4(int *config,uint *values)\n\n{\n  undefined4 returnValue;\n  uint tempValue;\n  int counter;\n  \n  if (*(char *)(config + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(config + 9) = 1;\n    tempValue = values[1];\n    if (tempValue < 7) {\n      tempValue = tempValue * 5 - 5;\n      *(uint *)(*config + 0x34) =\n           *values << (tempValue & 0xff) | *(uint *)(*config + 0x34) & ~(0x1f << (tempValue & 0xff));\n    }\n    else if (tempValue < 0xd) {\n      tempValue = tempValue * 5 - 0x23;\n      *(uint *)(*config + 0x30) =\n           *values << (tempValue & 0xff) | *(uint *)(*config + 0x30) & ~(0x1f << (tempValue & 0xff));\n    }\n    else {\n      tempValue = tempValue * 5 - 0x41;\n      *(uint *)(*config + 0x2c) =\n           *values << (tempValue & 0xff) | *(uint *)(*config + 0x2c) & ~(0x1f << (tempValue & 0xff));\n    }\n    tempValue = *values;\n    if (tempValue < 10) {\n      *(uint *)(*config + 0x10) =\n           values[2] << (tempValue * 3 & 0xff) |\n           *(uint *)(*config + 0x10) & ~(7 << (tempValue * 3 & 0xff));\n    }\n    else {\n      tempValue = tempValue * 3 - 0x1e;\n      *(uint *)(*config + 0xc) =\n           values[2] << (tempValue & 0xff) | *(uint *)(*config + 0xc) & ~(7 << (tempValue & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(config + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_configuration_080038e4",
                "param_1": "config",
                "param_2": "values",
                "uVar1": "returnValue",
                "uVar2": "tempValue",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_memory_location_08003a1c",
            "code": "\nmemoryValue getMemoryLocation_08003a1c(int memoryAddress)\n\n{\n  return *(memoryValue *)(memoryAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_memory_location_08003a1c",
                "param_1": "memoryAddress",
                "undefined4": "memoryValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "check_and_set_flags_08003a20",
            "code": "\nundefined4 checkAndSetFlags_08003a20(int *ptrData,undefined4 dataLength)\n\n{\n  int result;\n  undefined4 uVar2;\n  int data;\n  uint delay;\n  \n  data = *ptrData;\n  if ((*(uint *)(data + 8) & 1) == 0) {\n    *(uint *)(data + 8) = *(uint *)(data + 8) | 1;\n    for (delay = DAT_20000018 / 1000000; delay != 0; delay = delay - 1) {\n    }\n    data = FUN_08003760(ptrData,dataLength,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*ptrData + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08003760();\n    } while ((uint)(result - data) < 3);\n    ptrData[10] = ptrData[10] | 0x10;\n    ptrData[0xb] = ptrData[0xb] | 1;\n    *(undefined *)(ptrData + 9) = 0;\n    uVar2 = 1;\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "check_and_set_flags_08003a20",
                "param_1": "ptrData",
                "param_2": "dataLength",
                "iVar1": "result",
                "iVar3": "data",
                "local_14": "delay"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "initialize_settings_08003aa0",
            "code": "\n\n\nint initializeSettings_08003aa0(int *settings)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(settings + 9) != '\\x01') {\n    *(undefined *)(settings + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      settings[10] = settings[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*settings;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        settings[10] = settings[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          settings[10] = settings[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        settings[10] = settings[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          settings[10] = settings[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((settings[10] & 0x1000U) == 0) {\n        settings[0xb] = 0;\n      }\n      else {\n        settings[0xb] = settings[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(settings + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *settings;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(settings + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "initialize_settings_08003aa0",
                "param_1": "settings",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "update_flags_08003b8c",
            "code": "\nundefined4 updateFlags_08003b8c(int *pointer)\n\n{\n  int counter1;\n  int pointerValue;\n  \n  pointerValue = *pointer;\n  if ((*(uint *)(pointerValue + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(pointerValue + 8) = *(uint *)(pointerValue + 8) & 0xfffffffe;\n  pointerValue = FUN_08003760();\n  do {\n    if ((*(uint *)(*pointer + 8) & 1) == 0) {\n      return 0;\n    }\n    counter1 = FUN_08003760();\n  } while ((uint)(counter1 - pointerValue) < 3);\n  pointer[10] = pointer[10] | 0x10;\n  pointer[0xb] = pointer[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "update_flags_08003b8c",
                "param_1": "pointer",
                "iVar1": "counter1",
                "iVar2": "pointerValue"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "initialize_device_08003bd8",
            "code": "\nundefined4 initialize_device_08003bd8(int *device_settings)\n\n{\n  int status;\n  uint combined_flags;\n  uint extra_flags;\n  \n  if (device_settings == (int *)0x0) {\n    return 1;\n  }\n  if (device_settings[10] == 0) {\n    device_settings[0xb] = 0;\n    *(undefined *)(device_settings + 9) = 0;\n    FUN_08006ca8();\n  }\n  status = FUN_08003b8c(device_settings);\n  if (((device_settings[10] & 0x10U) == 0) && (status == 0)) {\n    device_settings[10] = device_settings[10] & 0xffffeefdU | 2;\n    combined_flags = device_settings[1] | device_settings[7] | device_settings[3] << 1;\n    if (device_settings[2] == 0x100) {\n      extra_flags = 0x100;\n    }\n    else {\n      extra_flags = 0;\n      if (device_settings[2] == 1) {\n        extra_flags = 0x100;\n      }\n    }\n    if (device_settings[5] == 1) {\n      if (device_settings[3] == 0) {\n        extra_flags = extra_flags | (device_settings[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        device_settings[10] = device_settings[10] | 0x20;\n        device_settings[0xb] = device_settings[0xb] | 1;\n      }\n    }\n    *(uint *)(*device_settings + 4) = extra_flags | *(uint *)(*device_settings + 4) & 0xffff16ff;\n    *(uint *)(*device_settings + 8) = *(uint *)(*device_settings + 8) & 0xffe1f7fd | combined_flags;\n    if ((device_settings[2] == 0x100) || (device_settings[2] == 1)) {\n      extra_flags = (device_settings[4] + -1) * 0x100000;\n    }\n    else {\n      extra_flags = 0;\n    }\n    *(uint *)(*device_settings + 0x2c) = extra_flags | *(uint *)(*device_settings + 0x2c) & 0xff0fffff;\n    if (combined_flags != (*(uint *)(*device_settings + 8) & 0xff1f0efe)) {\n      device_settings[10] = device_settings[10] & 0xffffffedU | 0x10;\n      device_settings[0xb] = device_settings[0xb] | 1;\n      return 1;\n    }\n    device_settings[0xb] = 0;\n    device_settings[10] = device_settings[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  device_settings[10] = device_settings[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "initialize_device_08003bd8",
                "param_1": "device_settings",
                "iVar1": "status",
                "uVar2": "combined_flags",
                "uVar3": "extra_flags"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "update_memory_protection_08003ce8",
            "code": "\nint updateMemoryProtection_08003ce8(int *memoryAddress)\n\n{\n  int result;\n  \n  if (memoryAddress == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    memoryAddress[10] = memoryAddress[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*memoryAddress = 0xffffffe0;\n      *(uint *)(*memoryAddress + 4) = *(uint *)(*memoryAddress + 4) & 0xff3f0000;\n      *(uint *)(*memoryAddress + 8) = *(uint *)(*memoryAddress + 8) & 0xff0106f0;\n      *(uint *)(*memoryAddress + 0xc) = *(uint *)(*memoryAddress + 0xc) & 0xff000000;\n      *(uint *)(*memoryAddress + 0x10) = *(uint *)(*memoryAddress + 0x10) & 0xc0000000;\n      *(uint *)(*memoryAddress + 0x14) = *(uint *)(*memoryAddress + 0x14) & 0xfffff000;\n      *(uint *)(*memoryAddress + 0x18) = *(uint *)(*memoryAddress + 0x18) & 0xfffff000;\n      *(uint *)(*memoryAddress + 0x1c) = *(uint *)(*memoryAddress + 0x1c) & 0xfffff000;\n      *(uint *)(*memoryAddress + 0x20) = *(uint *)(*memoryAddress + 0x20) & 0xfffff000;\n      *(uint *)(*memoryAddress + 0x24) = *(uint *)(*memoryAddress + 0x24) & 0xfffff000;\n      *(uint *)(*memoryAddress + 0x28) = *(uint *)(*memoryAddress + 0x28) & 0xfffff000;\n      *(uint *)(*memoryAddress + 0x2c) = *(uint *)(*memoryAddress + 0x2c) & 0xff000000;\n      *(uint *)(*memoryAddress + 0x2c) = *(uint *)(*memoryAddress + 0x2c) & 0xff000000;\n      *(uint *)(*memoryAddress + 0x30) = *(uint *)(*memoryAddress + 0x30) & 0xc0000000;\n      *(uint *)(*memoryAddress + 0x34) = *(uint *)(*memoryAddress + 0x34) & 0xc0000000;\n      *(uint *)(*memoryAddress + 0x38) = *(uint *)(*memoryAddress + 0x38) & 0xffc00000;\n      *(uint *)(*memoryAddress + 0x38) = *(uint *)(*memoryAddress + 0x38) & 0xffc00000;\n      FUN_08006d24(memoryAddress);\n      memoryAddress[0xb] = 0;\n      memoryAddress[10] = 0;\n    }\n    *(undefined *)(memoryAddress + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "update_memory_protection_08003ce8",
                "param_1": "memoryAddress",
                "iVar1": "result",
                "param_1[10]": "memoryAddress[10]",
                "param_1[0xb]": "memoryAddress[0xb]"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_update_flag_08003de4",
            "code": "\nint checkAndUpdateFlag_08003de4(int memoryAddress)\n\n{\n  int result;\n  \n  if (*(char *)(memoryAddress + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(memoryAddress + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(memoryAddress + 0x28) = *(uint *)(memoryAddress + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(memoryAddress + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_update_flag_08003de4",
                "param_1": "memoryAddress",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "check_and_process_data_08003e20",
            "code": "\nint check_and_process_data_08003e20(int *data)\n\n{\n  uint dividend;\n  int result;\n  uint divisor;\n  int initialValue;\n  int currentValue;\n  int loopCounter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    dividend = DAT_20000018;\n    divisor = FUN_08005bb8(2);\n    for (loopCounter = dividend / divisor << 1; loopCounter != 0; loopCounter = loopCounter + -1) {\n    }\n    FUN_08003a20(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    initialValue = FUN_08003760();\n    while (currentValue = *data, (*(uint *)(currentValue + 8) & 8) != 0) {\n      currentValue = FUN_08003760();\n      if (10 < (uint)(currentValue - initialValue)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(currentValue + 8) = *(uint *)(currentValue + 8) | 4;\n    initialValue = FUN_08003760();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      currentValue = FUN_08003760();\n      if (10 < (uint)(currentValue - initialValue)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "check_and_process_data_08003e20",
                "param_1": "data",
                "uVar1": "dividend",
                "iVar2": "result",
                "uVar3": "divisor",
                "iVar4": "initialValue",
                "iVar5": "currentValue",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_register_value_08003f0c",
            "code": "\n\n\nvoid updateRegisterValue_08003f0c(uint value)\n\n{\n  _DAT_e000ed0c = (value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_register_value_08003f0c",
                "param_1": "value"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "update_character_08003f30",
            "code": "\n\n\nvoid updateCharacter_08003f30(uint characterIndex,uint bitMask,uint newValue)\n\n{\n  uint shiftCount;\n  uint bitIndex;\n  \n  shiftCount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  bitIndex = 7 - shiftCount;\n  if (3 < bitIndex) {\n    bitIndex = 4;\n  }\n  if (shiftCount + 4 < 7) {\n    shiftCount = 0;\n  }\n  else {\n    shiftCount = shiftCount - 3;\n  }\n  shiftCount = (bitMask & (1 << (bitIndex & 0xff)) - 1U) << (shiftCount & 0xff) |\n          (1 << (shiftCount & 0xff)) - 1U & newValue;\n  if ((int)characterIndex < 0) {\n    *(char *)((characterIndex & 0xf) + 0xe000ed14) = (char)(shiftCount << 4);\n  }\n  else {\n    *(char *)(characterIndex + 0xe000e400) = (char)(shiftCount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "update_character_08003f30",
                "param_1": "characterIndex",
                "param_2": "bitMask",
                "param_3": "newValue",
                "uVar1": "shiftCount",
                "uVar2": "bitIndex"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_in_memory_08003f94",
            "code": "\nvoid setBitInMemory_08003f94(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_in_memory_08003f94",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_08003fb0",
            "code": "\nvoid setBit_08003fb0(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n    DataSynchronizationBarrier(0xf);\n    InstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_08003fb0",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "set_data_values_08003fd8",
            "code": "\n\n\nundefined4 set_data_values_08003fd8(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "set_data_values_08003fd8",
                "param_1": "value"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_in_array_08004004",
            "code": "\nvoid setBitInArray_08004004(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_in_array_08004004",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "set_flag_08004024",
            "code": "\n\n\nvoid setFlag_08004024(int flag)\n\n{\n  if (flag != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "set_flag_08004024",
                "param_1": "flag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_08004046",
            "code": "\nvoid initialize_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "set_configuration_08004050",
            "code": "\n\n\nundefined4 setConfiguration_08004050(uint **config)\n\n{\n  uint *currentConfig;\n  \n  if (*(char *)((int)config + 0x21) != '\\x02') {\n    config[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **config = **config & 0xfffffff1;\n  **config = **config & 0xfffffffe;\n  currentConfig = *config;\n  if (currentConfig == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentConfig == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentConfig == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentConfig == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentConfig == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentConfig == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)config + 0x21) = 1;\n  *(undefined *)(config + 8) = 0;\n  if (config[0xd] != (uint *)0x0) {\n    (*(code *)config[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "set_configuration_08004050",
                "param_1": "config",
                "puVar1": "currentConfig"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_flags_080040e8",
            "code": "\n\n\nvoid update_flags_080040e8(uint *flags,uint *updates)\n\n{\n  uint *ptr_flags;\n  uint mask;\n  uint flag;\n  uint index;\n  uint type;\n  uint value;\n  int bit_index;\n  int register_index;\n  \n  value = 0;\n  index = 0;\n  do {\n    if (0xf < index) {\n      return;\n    }\n    mask = 1 << (index & 0xff);\n    flag = *updates & mask;\n    if (mask == flag) {\n      type = updates[1];\n      if (type == 0x12) {\n        value = updates[3] + 0xc;\n      }\n      else if (type < 0x13) {\n        if (type == 2) {\n          value = updates[3] + 8;\n        }\n        else if (type < 3) {\n          if (type == 0) goto LAB_0800423a;\n          if (type == 1) {\n            value = updates[3];\n          }\n        }\n        else if (type == 3) {\n          value = 0;\n        }\n        else if (type == 0x11) {\n          value = updates[3] + 4;\n        }\n      }\n      else if (type == 0x10210000) {\nLAB_0800423a:\n        if (updates[2] == 0) {\n          value = 4;\n        }\n        else if (updates[2] == 1) {\n          flags[4] = mask;\n          value = 8;\n        }\n        else {\n          flags[5] = mask;\n          value = 8;\n        }\n      }\n      else if (type < 0x10210001) {\n        if ((type == 0x10110000) || (type == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((type == 0x10310000) || ((type == 0x10320000 || (type == 0x10220000))))\n      goto LAB_0800423a;\n      mask = index;\n      ptr_flags = flags;\n      if (0xff < flag) {\n        mask = index - 8;\n        ptr_flags = flags + 1;\n      }\n      *ptr_flags = *ptr_flags & ~(0xf << (mask << 2 & 0xff)) | value << (mask << 2 & 0xff);\n      if ((updates[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bit_index = (index & 3) << 2;\n        if (flags == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (flags == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (flags == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (flags == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bit_index) | register_index << bit_index;\n        if ((updates[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~flag;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | flag;\n        }\n        if ((updates[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~flag;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | flag;\n        }\n        if ((updates[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~flag;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | flag;\n        }\n        if ((updates[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~flag;\n        }\n        else {\n          _DAT_4001040c = flag | _DAT_4001040c;\n        }\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_flags_080040e8",
                "param_1": "flags",
                "param_2": "updates",
                "puVar1": "ptr_flags",
                "uVar2": "mask",
                "uVar3": "flag",
                "uVar4": "index",
                "uVar5": "type",
                "uVar6": "value",
                "iVar7": "bit_index",
                "iVar8": "register_index"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_080042d4",
            "code": "\nundefined4 check_bit_080042d4(int data_address,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(data_address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "data_address",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int dataStructPtr,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(dataStructPtr + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(dataStructPtr + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "dataStructPtr",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_data_and_invoke_function_080042f0",
            "code": "\n\n\nvoid update_data_and_invoke_function_080042f0(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_data_and_invoke_function_080042f0",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "set_permissions_0800430c",
            "code": "\nundefined4 set_permissions_0800430c(int *permissions)\n\n{\n  if (*(char *)((int)permissions + 0x3e) == '@') {\n    if (permissions[20] == 0) {\n      *(uint *)(*permissions + 0x10) = permissions[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*permissions + 0x10) = permissions[17] & 0xffU | 1;\n    }\n  }\n  else if (permissions[4] == 0x4000) {\n    if (*(char *)((int)permissions + 0x3d) == '!') {\n      *(uint *)(*permissions + 0x10) = permissions[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*permissions + 0x10) = permissions[17] & 0xffU | 1;\n    }\n  }\n  else if (permissions[20] == 0) {\n    *(uint *)(*permissions + 0x10) = (uint)(permissions[17] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (permissions[20] == 1) {\n    *(uint *)(*permissions + 0x10) = (uint)(permissions[17] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "set_permissions_0800430c",
                "param_1": "permissions",
                "param_1[0x14]": "permissions[20]",
                "param_1[0x11]": "permissions[17]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "set_value_from_array_08004396",
            "code": "\nundefined4 set_value_from_array_08004396(int *array)\n\n{\n  *(uint *)(*array + 0x10) = array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "set_value_from_array_08004396",
                "param_1": "array"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "process_condition_080043a2",
            "code": "\nundefined4 processCondition_080043a2(uint **parameters)\n\n{\n  uint *tempVar1;\n  \n  tempVar1 = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (tempVar1 == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          tempVar1 = *parameters;\n          if ((tempVar1[1] & 0x800) == 0) {\n            *tempVar1 = *tempVar1 | 0x200;\n          }\n          else {\n            *tempVar1 = *tempVar1 & 0xfffffbff;\n          }\n        }\n        else if (((tempVar1 == (uint *)0x4) || (tempVar1 == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        tempVar1 = *parameters;\n        if ((tempVar1[1] & 0x800) != 0) {\n          tempVar1[1] = tempVar1[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        tempVar1 = *parameters;\n        if ((tempVar1[1] & 0x800) != 0) {\n          tempVar1[1] = tempVar1[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "process_condition_080043a2",
                "param_1": "parameters",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_byte_value_0800457c",
            "code": "\nundefined4 updateByteValue_0800457c(int *byteArray)\n\n{\n  byte *currentByte;\n  \n  if (*(short *)((int)byteArray + 0x2a) != 0) {\n    currentByte = (byte *)byteArray[9];\n    byteArray[9] = (int)(currentByte + 1);\n    *(uint *)(*byteArray + 0x10) = (uint)*currentByte;\n    *(short *)((int)byteArray + 0x2a) = *(short *)((int)byteArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_byte_value_0800457c",
                "param_1": "byteArray",
                "pbVar1": "currentByte"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_parameter_value_0800459c",
            "code": "\nundefined4 updateParameterValue_0800459c(int *parameters)\n\n{\n  undefined *pointer;\n  \n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    pointer = (undefined *)parameters[9];\n    parameters[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*parameters + 0x10);\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_parameter_value_0800459c",
                "param_1": "parameters",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "calculate_values_080045c0",
            "code": "\nundefined4 calculateValues_080045c0(uint **parameters)\n\n{\n  bool isLessThanLimit;\n  uint value;\n  uint *pointer;\n  uint result;\n  \n  if (parameters == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)parameters + 0x3d) == '\\0') {\n    *(undefined *)(parameters + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x24;\n  **parameters = **parameters & 0xfffffffe;\n  value = FUN_08005a28();\n  if (parameters[1] < (uint *)0x186a1) {\n    if (value < 2000000) {\n      isLessThanLimit = true;\n    }\n    else {\n      isLessThanLimit = false;\n    }\n  }\n  else {\n    isLessThanLimit = value < 4000000;\n  }\n  if (isLessThanLimit) {\n    return 1;\n  }\n  result = value / 1000000;\n  (*parameters)[1] = result;\n  if ((uint *)0x186a0 < parameters[1]) {\n    result = (result * 300) / 1000;\n  }\n  (*parameters)[8] = result + 1;\n  pointer = parameters[1];\n  if (pointer < (uint *)0x186a1) {\n    value = (value - 1) / (uint)((int)pointer << 1) + 1 & 0xfff;\n    if (value < 4) {\n      value = 4;\n    }\n  }\n  else {\n    if (parameters[2] == (uint *)0x0) {\n      result = (value - 1) / (uint)((int)pointer * 3);\n    }\n    else {\n      result = (value - 1) / (uint)((int)pointer * 0x19);\n    }\n    if ((result + 1 & 0xfff) == 0) {\n      value = 1;\n    }\n    else if (parameters[2] == (uint *)0x0) {\n      value = (value - 1) / (uint)((int)pointer * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      value = (value - 1) / (uint)((int)pointer * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*parameters)[7] = value;\n  **parameters = (uint)parameters[7] | (uint)parameters[8];\n  (*parameters)[2] = (uint)parameters[4] | (uint)parameters[3];\n  (*parameters)[3] = (uint)parameters[5] | (uint)parameters[6];\n  **parameters = **parameters | 1;\n  parameters[0x10] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3d) = 0x20;\n  parameters[0xc] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "calculate_values_080045c0",
                "param_1": "parameters",
                "bVar1": "isLessThanLimit",
                "uVar2": "value",
                "puVar3": "pointer",
                "uVar4": "result"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "process_data_08004728",
            "code": "\nundefined4 process_data_08004728(uint **data_array,uint *param_a,uint *param_b,undefined2 param_c)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int iteration_count;\n  \n  if (*(char *)((int)data_array + 0x3d) == ' ') {\n    iteration_count = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (iteration_count == 0) {\n        data_array[0xc] = (uint *)0x0;\n        *(undefined *)((int)data_array + 0x3d) = 0x20;\n        *(undefined *)(data_array + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data_array;\n      iteration_count = iteration_count + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data_array + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data_array = **data_array & 0xfffff7ff;\n      *(undefined *)((int)data_array + 0x3d) = 0x21;\n      *(undefined *)((int)data_array + 0x3e) = 0x10;\n      result = 0;\n      data_array[0x10] = (uint *)0x0;\n      data_array[9] = param_b;\n      *(undefined2 *)((int)data_array + 0x2a) = param_c;\n      data_array[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data_array + 10) = *(undefined2 *)((int)data_array + 0x2a);\n      data_array[0x11] = param_a;\n      **data_array = **data_array | 0x100;\n      *(undefined *)(data_array + 0xf) = 0;\n      (*data_array)[1] = (*data_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "param_1": "data_array",
                "param_2": "param_a",
                "param_3": "param_b",
                "param_4": "param_c",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "iteration_count"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "initialize_connection_080047f4",
            "code": "\nundefined4 initializeConnection_080047f4(uint **connection,uint *data1,uint *data2,undefined2 flag)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)connection + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        connection[0xc] = (uint *)0x0;\n        *(undefined *)((int)connection + 0x3d) = 0x20;\n        *(undefined *)(connection + 0xf) = 0;\n        return 3;\n      }\n      ptr = *connection;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(connection + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(connection + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **connection = **connection & 0xfffff7ff;\n      *(undefined *)((int)connection + 0x3d) = 0x22;\n      *(undefined *)((int)connection + 0x3e) = 0x10;\n      result = 0;\n      connection[0x10] = (uint *)0x0;\n      connection[9] = data2;\n      *(undefined2 *)((int)connection + 0x2a) = flag;\n      connection[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(connection + 10) = *(undefined2 *)((int)connection + 0x2a);\n      connection[0x11] = data1;\n      **connection = **connection | 0x400;\n      **connection = **connection | 0x100;\n      *(undefined *)(connection + 0xf) = 0;\n      (*connection)[1] = (*connection)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "initialize_connection_080047f4",
                "param_1": "connection",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "flag",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_and_initialize_080048c8",
            "code": "\nundefined4 validate_and_initialize_080048c8(uint **param_list,uint *input_ptr,int input_length,uint *output_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (input_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (input_length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = input_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)input_length;\n      param_list[0xb] = output_ptr;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_and_initialize_080048c8",
                "param_1": "param_list",
                "param_2": "input_ptr",
                "param_3": "input_length",
                "param_4": "output_ptr",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "process_data_08004954",
            "code": "\nundefined4 processData_08004954(uint **pointerList,uint *dataPointer,int count,uint *metadataPointer)\n\n{\n  undefined4 returnValue;\n  uint *firstPointer;\n  \n  if (*(char *)((int)pointerList + 0x3d) == '(') {\n    if (dataPointer == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (count == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(pointerList + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(pointerList + 0xf) = 1;\n      firstPointer = *pointerList;\n      if ((*firstPointer & 1) == 0) {\n        *firstPointer = *firstPointer | 1;\n      }\n      **pointerList = **pointerList & 0xfffff7ff;\n      *(undefined *)((int)pointerList + 0x3d) = 0x2a;\n      *(undefined *)((int)pointerList + 0x3e) = 0x20;\n      returnValue = 0;\n      pointerList[0x10] = (uint *)0x0;\n      pointerList[9] = dataPointer;\n      *(short *)((int)pointerList + 0x2a) = (short)count;\n      pointerList[0xb] = metadataPointer;\n      *(undefined2 *)(pointerList + 10) = *(undefined2 *)((int)pointerList + 0x2a);\n      *(undefined *)(pointerList + 0xf) = 0;\n      (*pointerList)[1] = (*pointerList)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004954": "process_data_08004954",
                "param_1": "pointerList",
                "param_2": "dataPointer",
                "param_3": "count",
                "param_4": "metadataPointer",
                "uVar1": "returnValue",
                "puVar2": "firstPointer"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_data_080049e0",
            "code": "\nundefined4 initializeData_080049e0(uint **dataPointer)\n\n{\n  uint *pointer1;\n  \n  if (*(char *)((int)dataPointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)dataPointer + 0x3d) = 0x28;\n  pointer1 = *dataPointer;\n  if ((*pointer1 & 1) == 0) {\n    *pointer1 = *pointer1 | 1;\n  }\n  **dataPointer = **dataPointer | 0x400;\n  (*dataPointer)[1] = (*dataPointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_data_080049e0",
                "param_1": "dataPointer",
                "puVar1": "pointer1"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "update_data_08004a24",
            "code": "\nundefined4 updateData_08004a24(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "update_data_08004a24",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "update_array_08004a76",
            "code": "\nundefined4 updateArray_08004a76(int *array)\n\n{\n  char character;\n  undefined *ptr;\n  \n  character = *(char *)((int)array + 0x3d);\n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n    if ((*(short *)((int)array + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*array + 4) = *(uint *)(*array + 4) & 0xfffffbff;\n      valueAtC = 0x22;\n      *(undefined *)((int)array + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "update_array_08004a76",
                "param_1": "array",
                "cVar1": "character",
                "puVar2": "ptr",
                "param_1[0xc]": "valueAtC"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 processData_08004ac2(int *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result;\n  uint flag;\n  \n  flag = *(uint *)(*data + 0x18);\n  if ((flag & 0x80) == 0) {\n    result = *(undefined2 *)(data + 3);\n  }\n  else {\n    result = *(undefined2 *)(data + 6);\n  }\n  FUN_08007fa0(data,(*(uint *)(*data + 0x18) & 4) == 0,result,flag,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "set_access_permissions_08004aec",
            "code": "\nundefined4 setAccessPermissions_08004aec(uint **accessParams)\n\n{\n  if (((accessParams[11] == (uint *)0x4) || (accessParams[11] == (uint *)0x8)) &&\n     (*(char *)((int)accessParams + 0x3d) == '(')) {\n    accessParams[11] = (uint *)0xffff0000;\n    (*accessParams)[1] = (*accessParams)[1] & 0xfffff8ff;\n    (*accessParams)[5] = 0xfffffbff;\n    **accessParams = **accessParams & 0xfffffbff;\n    accessParams[12] = (uint *)0x0;\n    *(undefined *)((int)accessParams + 0x3d) = 0x20;\n    *(undefined *)((int)accessParams + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)accessParams + 0x3d) == '!') {\n    accessParams[11] = (uint *)0xffff0000;\n    accessParams[12] = (uint *)0x21;\n    *(undefined *)((int)accessParams + 0x3d) = 0x20;\n    *(undefined *)((int)accessParams + 0x3e) = 0;\n    (*accessParams)[1] = (*accessParams)[1] & 0xfffff8ff;\n    (*accessParams)[5] = 0xfffffbff;\n    **accessParams = **accessParams & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*accessParams)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "set_access_permissions_08004aec",
                "param_1": "accessParams",
                "param_1[0xb]": "accessParams[11]",
                "param_1[0xc]": "accessParams[12]"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "process_param_08004b82",
            "code": "\nundefined4 processParam_08004b82(uint **paramArray)\n\n{\n  char currentChar;\n  uint *ptr;\n  \n  currentChar = *(char *)((int)paramArray + 0x3d);\n  ptr = ptrArray[0xb];\n  if ((*(short *)(paramArray + 10) == 0) && (currentChar == '!')) {\n    if ((ptr == (uint *)0x4) || ((ptr == (uint *)0x8 || (ptr == (uint *)0xffff0000)))) {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n      **paramArray = **paramArray | 0x200;\n      ptrArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      if (*(char *)((int)paramArray + 0x3e) == '@') {\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n      ptrArray[0xc] = (uint *)0x11;\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((currentChar == '!') || ((*(char *)((int)paramArray + 0x3e) == '@' && (currentChar == '\\\"')))) {\n    if (*(short *)((int)paramArray + 0x2a) == 0) {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)paramArray + 0x3e) == '@') {\n      if (paramArray[0x14] == (uint *)0x0) {\n        if (paramArray[0x13] == (uint *)0x1) {\n          (*paramArray)[4] = (uint)paramArray[0x12] & 0xff;\n          paramArray[0x14] = (uint *)((int)paramArray[0x14] + 2);\n        }\n        else {\n          (*paramArray)[4] = (uint)((int)paramArray[0x12] << 0x10) >> 0x18;\n          paramArray[0x14] = (uint *)((int)paramArray[0x14] + 1);\n        }\n      }\n      else if (paramArray[0x14] == (uint *)0x1) {\n        (*paramArray)[4] = (uint)paramArray[0x12] & 0xff;\n        paramArray[0x14] = (uint *)((int)paramArray[0x14] + 1);\n      }\n      else if (paramArray[0x14] == (uint *)0x2) {\n        if (*(char *)((int)paramArray + 0x3d) == '\\\"') {\n          **paramArray = **paramArray | 0x100;\n        }\n        else if (*(char *)((int)paramArray + 0x3d) == '!') {\n          ptr = paramArray[9];\n          paramArray[9] = (uint *)((int)ptr + 1);\n          (*paramArray)[4] = (uint)*(byte *)ptr;\n          *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptr = paramArray[9];\n      paramArray[9] = (uint *)((int)ptr + 1);\n      (*paramArray)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "process_param_08004b82",
                "param_1": "paramArray",
                "cVar1": "currentChar",
                "puVar2": "ptr",
                "param_1[0xb]": "ptrArray[0xb]",
                "param_1[0xc]": "ptrArray[0xc]",
                "param_1[9]": "paramArray[9]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "extract_data_08004ccc",
            "code": "\nundefined4 extract_data_08004ccc(uint **data_array)\n\n{\n  uint *ptr_value;\n  \n  ptr_value = data_array[0xb];\n  if (*(char *)((int)data_array + 0x3d) == '!') {\n    if (*(short *)((int)data_array + 0x2a) == 0) {\n      if (((ptr_value == (uint *)0x4) || (ptr_value == (uint *)0x8)) || (ptr_value == (uint *)0xffff0000)) {\n        (*data_array)[1] = (*data_array)[1] & 0xfffff8ff;\n        **data_array = **data_array | 0x200;\n        data_array[0xc] = (uint *)0x0;\n        *(undefined *)((int)data_array + 0x3d) = 0x20;\n        if (*(char *)((int)data_array + 0x3e) == '@') {\n          *(undefined *)((int)data_array + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)data_array + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*data_array)[1] = (*data_array)[1] & 0xfffff8ff;\n        data_array[0xc] = (uint *)0x11;\n        *(undefined *)((int)data_array + 0x3e) = 0;\n        *(undefined *)((int)data_array + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      ptr_value = data_array[9];\n      data_array[9] = (uint *)((int)ptr_value + 1);\n      (*data_array)[4] = (uint)*(byte *)ptr_value;\n      *(short *)((int)data_array + 0x2a) = *(short *)((int)data_array + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "extract_data_08004ccc",
                "param_1": "data_array",
                "puVar1": "ptr_value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "process_parameter_08004d6c",
            "code": "\nundefined4 process_parameter_08004d6c(uint **parameter)\n\n{\n  uint *temporary;\n  \n  if (*(char *)((int)parameter + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameter + 0x2a) < 4) {\n      if (*(ushort *)((int)parameter + 0x2a) - 2 < 2) {\n        if (param_1_array_11 == (uint *)0x2) {\n          **parameter = **parameter | 0x400;\n        }\n        else {\n          **parameter = **parameter & 0xfffffbff;\n          **parameter = **parameter | 0x800;\n        }\n        (*parameter)[1] = (*parameter)[1] & 0xfffffbff;\n      }\n      else {\n        if (param_1_array_11 == (uint *)0x2) {\n          **parameter = **parameter | 0x400;\n        }\n        else {\n          **parameter = **parameter & 0xfffffbff;\n        }\n        (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n        temporary = param_1_array_9;\n        param_1_array_9 = (uint *)((int)temporary + 1);\n        *(char *)temporary = (char)(*parameter)[4];\n        *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        param_1_array_12 = (uint *)0x0;\n        if (*(char *)((int)parameter + 0x3e) == '@') {\n          *(undefined *)((int)parameter + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)parameter + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      temporary = param_1_array_9;\n      param_1_array_9 = (uint *)((int)temporary + 1);\n      *(char *)temporary = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "process_parameter_08004d6c",
                "param_1": "parameter",
                "puVar1": "temporary",
                "param_1[0xb]": "param_1_array_11",
                "param_1[9]": "param_1_array_9",
                "param_1[0xc]": "param_1_array_12"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_param_08004e3c",
            "code": "\nundefined4 processParam_08004e3c(uint **params)\n\n{\n  uint *param_ptr;\n  \n  param_ptr = params[0xb];\n  if (*(short *)((int)params + 0x2a) == 3) {\n    if (((param_ptr == (uint *)0x4) || (param_ptr == (uint *)0x8)) || (param_ptr == (uint *)0xffff0000)) {\n      **params = **params & 0xfffffbff;\n    }\n    param_ptr = param_ptr_9;\n    param_ptr_9 = (uint *)((int)param_ptr + 1);\n    *(char *)param_ptr = (char)(*params)[4];\n    *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n  }\n  else if (*(short *)((int)params + 0x2a) == 2) {\n    if (((param_ptr == (uint *)0x4) || (param_ptr == (uint *)0x8)) || (param_ptr == (uint *)0xffff0000)) {\n      (*params)[1] = (*params)[1] & 0xfffffcff;\n      **params = **params | 0x200;\n    }\n    else {\n      if (param_ptr == (uint *)0x2) {\n        **params = **params | 0x400;\n      }\n      else {\n        **params = **params & 0xfffffbff;\n      }\n      (*params)[1] = (*params)[1] & 0xfffffcff;\n    }\n    param_ptr = param_ptr_9;\n    param_ptr_9 = (uint *)((int)param_ptr + 1);\n    *(char *)param_ptr = (char)(*params)[4];\n    *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    param_ptr = param_ptr_9;\n    param_ptr_9 = (uint *)((int)param_ptr + 1);\n    *(char *)param_ptr = (char)(*params)[4];\n    *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    *(undefined *)((int)params + 0x3d) = 0x20;\n    param_ptr_0xc = (uint *)0x0;\n    if (*(char *)((int)params + 0x3e) == '@') {\n      *(undefined *)((int)params + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)params + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    param_ptr = param_ptr_9;\n    param_ptr_9 = (uint *)((int)param_ptr + 1);\n    *(char *)param_ptr = (char)(*params)[4];\n    *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_param_08004e3c",
                "param_1": "params",
                "puVar1": "param_ptr",
                "param_1[9]": "param_ptr_9",
                "param_1[0xc]": "param_ptr_0xc"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_data_08004f3c",
            "code": "\nvoid processData_08004f3c(uint **data)\n\n{\n  int index;\n  uint *ptr;\n  uint *ptr2;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  ptr2 = *data;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr = data[9];\n        data[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)ptr2[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_08004f3a(data);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr = data[9];\n        data[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)ptr2[4];\n      }\n      FUN_08008020(data);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x21) == '\\x01') {\n      data[0xe][0xd] = (uint)&LAB_080053cc_1;\n      index = FUN_08004050(data[0xe]);\n      if (index != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          ptr2 = data[9];\n          data[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0xd])();\n      }\n    }\n    else {\n      data[0xd][0xd] = (uint)&LAB_080053cc_1;\n      index = FUN_08004050(data[0xd]);\n      if (index != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    FUN_08007ff0(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_data_08004f3c",
                "param_1": "data",
                "iVar1": "index",
                "puVar2": "ptr",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_parameters_08005084",
            "code": "\nundefined4 process_parameters_08005084(uint **parameters)\n\n{\n  char character;\n  uint *ptr_1;\n  uint *ptr_2;\n  \n  character = *(char *)((int)parameters + 0x3d);\n  (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n  **parameters = **parameters | 1;\n  **parameters = **parameters & 0xfffffbff;\n  ptr_1 = *parameters;\n  if ((ptr_1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameters + 0x3d) == '\\\"') || (*(char *)((int)parameters + 0x3d) == '*')) {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    if ((ptr_1[5] & 4) != 0) {\n      ptr_2 = parameters[9];\n      parameters[9] = (uint *)((int)ptr_2 + 1);\n      *(char *)ptr_2 = (char)ptr_1[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    if (((*parameters)[5] & 0x40) != 0) {\n      ptr_1 = parameters[9];\n      parameters[9] = (uint *)((int)ptr_1 + 1);\n      *(char *)ptr_1 = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n  }\n  if (parameters[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      parameters[0xb] = (uint *)0xffff0000;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((parameters[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_parameters_08005084",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "ptr_1",
                "puVar3": "ptr_2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid process_data_08005188(int *data_ptr)\n\n{\n  int data;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  data = *data_ptr;\n  flag3 = *(uint *)(data + 0x18);\n  flag1 = *(uint *)(data + 0x14);\n  flag2 = *(uint *)(data + 4);\n  if ((*(char *)((int)data_ptr + 0x3e) == '\\x10') || (*(char *)((int)data_ptr + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(data_ptr);\n        }\n      }\n      else {\n        FUN_08004396(data_ptr);\n      }\n    }\n    else {\n      FUN_0800430c(data_ptr);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(data_ptr);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(data_ptr);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(data_ptr);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(data_ptr);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(data_ptr);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data_ptr",
                "iVar1": "data",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "process_flags_080052f0",
            "code": "\nvoid processFlags_080052f0(uint **parameters)\n\n{\n  char character;\n  uint *pointerVar;\n  uint flag1;\n  uint flag2;\n  \n  pointerVar = *parameters;\n  flag1 = pointerVar[5];\n  flag2 = pointerVar[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    pointerVar[5] = 0xfffffeff;\n    **parameters = **parameters | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    FUN_08004f3c(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "process_flags_080052f0",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "pointerVar",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "extract_byte_from_offset_0800542a",
            "code": "\nundefined extract_byte_from_offset_0800542a(int base_address)\n\n{\n  return *(undefined *)(base_address + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "extract_byte_from_offset_0800542a",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_pointer_from_offset_08005430",
            "code": "\nundefined4 getPointerFromOffset_08005430(int offset)\n\n{\n  return *(undefined4 *)(offset + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_pointer_from_offset_08005430",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "decrement_counter_08005434",
            "code": "\nvoid decrementCounter_08005434(int inputValue)\n\n{\n  bool isCounterNonZero;\n  int counter;\n  \n  counter = inputValue * (DAT_20000018 / 8000);\n  do {\n    isCounterNonZero = counter != 0;\n    counter = counter + -1;\n  } while (isCounterNonZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "decrement_counter_08005434",
                "param_1": "inputValue",
                "local_4": "counter",
                "bVar1": "isCounterNonZero"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "FUNC_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 FUNC_08005460(uint *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      uVar4 = param_1[1];\n      if (uVar4 == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (uVar4 == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (uVar4 == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (param_1[1] == 0) {\n        iVar1 = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          iVar2 = FUN_08003760();\n          if (100 < (uint)(iVar2 - iVar1)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          iVar2 = FUN_08003760();\n          if (100 < (uint)(iVar2 - iVar1)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | param_1[5] << 3;\n    }\n    else if (param_1[4] == 0) {\n      _DAT_42420000 = 0;\n      iVar1 = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        iVar2 = FUN_08003760();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      iVar1 = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        iVar2 = FUN_08003760();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | param_1[5] << 3;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[6] == 0) {\n      _DAT_42420480 = 0;\n      iVar1 = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        iVar2 = FUN_08003760();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      iVar1 = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        iVar2 = FUN_08003760();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    bVar5 = (_DAT_4002101c & 0x10000000) == 0;\n    if (bVar5) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      iVar1 = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        iVar2 = FUN_08003760();\n        if (100 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    uVar4 = param_1[3];\n    if (uVar4 == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (uVar4 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (uVar4 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (param_1[3] == 0) {\n      iVar1 = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    if (bVar5) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (param_1[7] == 0) {\n    uVar3 = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    uVar3 = 1;\n  }\n  else if (param_1[7] == 2) {\n    _DAT_42420060 = 0;\n    iVar1 = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (param_1[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | param_1[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | param_1[8] | param_1[9];\n        _DAT_42420060 = 1;\n        iVar1 = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          iVar2 = FUN_08003760();\n        } while ((uint)(iVar2 - iVar1) < 3);\n        return 3;\n      }\n      iVar2 = FUN_08003760();\n    } while ((uint)(iVar2 - iVar1) < 3);\n    uVar3 = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    iVar1 = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      iVar2 = FUN_08003760();\n    } while ((uint)(iVar2 - iVar1) < 3);\n    uVar3 = 3;\n  }\n  return uVar3;\n}\n\n",
            "renaming": {
                "FUN_08005460": "FUNC_08005460"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_time_08005840",
            "code": "\n\n\nuint calculateTime_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 timeUnit;\n  undefined4 cycleCount;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  value3 = 0x10100f0e;\n  value2 = 0xd0c0b0a;\n  value1 = 0x9080706;\n  cycleCount = 0x5040302;\n  timeUnit = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&cycleCount + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&timeUnit - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_time_08005840",
                "local_1c": "timeUnit",
                "uStack_18": "cycleCount",
                "uStack_14": "value1",
                "uStack_10": "value2",
                "uStack_c": "value3"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "update_settings_080058ac",
            "code": "\n\n\nundefined4 updateSettings_080058ac(uint *settings,uint numSettings)\n\n{\n  int iVar1;\n  int iVar2;\n  uint tempVar;\n  \n  if ((_DAT_40022000 & 7) < numSettings) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numSettings;\n    if (numSettings != (numSettings & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    tempVar = settings[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08003760();\n    if (settings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (settings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numSettings < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numSettings;\n    if (numSettings != (numSettings & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settings[4] << 3;\n  }\n  tempVar = FUN_08005840();\n  DAT_20000018 = tempVar >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "update_settings_080058ac",
                "param_1": "settings",
                "param_2": "numSettings",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "perform_memory_operation_080058d2",
            "code": "\n\n\nundefined4 performMemoryOperation_080058d2(uint *memoryFlags,uint length)\n\n{\n  int initialTime;\n  int currentTime;\n  uint tempValue;\n  \n  if ((*memoryFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | memoryFlags[2];\n  }\n  if ((*memoryFlags & 1) != 0) {\n    tempValue = memoryFlags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08003760();\n    if (memoryFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (memoryFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (length < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | length;\n    if (length != (length & 7)) {\n      return 1;\n    }\n  }\n  if ((*memoryFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | memoryFlags[3];\n  }\n  if ((*memoryFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | memoryFlags[4] << 3;\n  }\n  tempValue = FUN_08005840();\n  DAT_20000018 = tempValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "perform_memory_operation_080058d2",
                "param_1": "memoryFlags",
                "param_2": "length",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_data_address_08005a1c",
            "code": "\nundefined4 get_data_address_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_data_address_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_after_operation_08005a28",
            "code": "\n\n\nuint shiftedValueAfterOperation_08005a28(void)\n\n{\n  uint resultOfFunctionCall;\n  \n  resultOfFunctionCall = FUN_08005a1c();\n  return resultOfFunctionCall >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_after_operation_08005a28",
                "uVar1": "resultOfFunctionCall"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "shifted_result_08005a48",
            "code": "\n\n\nuint shiftedResult_08005a48(void)\n\n{\n  uint rawValue;\n  \n  rawValue = FUN_08005a1c();\n  return rawValue >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "shifted_result_08005a48",
                "uVar1": "rawValue"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_data_08005a68",
            "code": "\n\n\nvoid initializeData_08005a68(undefined4 *outputArray,uint *inputArray)\n\n{\n  *outputArray = 0xf;\n  outputArray[1] = _DAT_40021004 & 3;\n  outputArray[2] = _DAT_40021004 & 0xf0;\n  outputArray[3] = _DAT_40021004 & 0x700;\n  outputArray[4] = _DAT_40021004 >> 3 & 0x700;\n  *inputArray = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_data_08005a68",
                "param_1": "outputArray",
                "param_2": "inputArray"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "update_configuration_08005aa4",
            "code": "\n\n\nundefined4 updateConfiguration_08005aa4(uint *configFlags)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int initialValue;\n  int currentValue;\n  bool isFlagSet;\n  \n  if ((*configFlags & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = FUN_08003760();\n        if (100 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (configFlags[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        initialValue = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentValue = FUN_08003760();\n          if (5000 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | configFlags[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*configFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | configFlags[2];\n  }\n  if ((*configFlags & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | configFlags[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "update_configuration_08005aa4",
                "param_1": "configFlags",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "initialValue",
                "iVar4": "currentValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_return_value_08005bb8",
            "code": "\n\n\nuint calculateReturnValue_08005bb8(int inputValue)\n\n{\n  uint returnValue;\n  undefined2 constantVar1;\n  undefined4 constantVar2;\n  undefined4 constantVar3;\n  undefined4 constantVar4;\n  undefined4 constantVar5;\n  \n  constantVar5 = 0x10100f0e;\n  constantVar4 = 0xd0c0b0a;\n  constantVar3 = 0x9080706;\n  constantVar2 = 0x5040302;\n  constantVar1 = 0x201;\n  if (inputValue == 2) {\n    returnValue = FUN_08005a48();\n    returnValue = returnValue / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      returnValue = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        returnValue = 4000000;\n      }\n      else {\n        returnValue = 8000000 / *(byte *)((int)&constantVar1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      returnValue = returnValue * *(byte *)((int)&constantVar2 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        returnValue = (returnValue * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      returnValue = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      returnValue = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        returnValue = 0;\n      }\n      else {\n        returnValue = 0xf424;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_return_value_08005bb8",
                "param_1": "inputValue",
                "uVar1": "returnValue",
                "local_24": "constantVar1",
                "uStack_20": "constantVar2",
                "uStack_1c": "constantVar3",
                "uStack_18": "constantVar4",
                "uStack_14": "constantVar5"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "check_and_update_flags_08005cb4",
            "code": "\n\n\nvoid checkAndUpdateFlags_08005cb4(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)(paramAddress + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "check_and_update_flags_08005cb4",
                "param_1": "flags",
                "(int)param_1": "paramAddress"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_data_08005cec",
            "code": "\nvoid updateData_08005cec(int dataPtr,uint *paramArrayPtr)\n\n{\n  uint updatedData1;\n  uint updatedData2;\n  uint updatedData3;\n  \n  *(uint *)(dataPtr + 0x20) = *(uint *)(dataPtr + 0x20) & 0xfffffffe;\n  updatedData2 = *(uint *)(dataPtr + 4);\n  updatedData3 = *paramArrayPtr;\n  updatedData1 = *(uint *)(dataPtr + 0x20) & 0xfffffffd | paramArrayPtr[2];\n  if (dataPtr == 0x40012c00) {\n    updatedData1 = (updatedData1 & 0xfffffff7 | paramArrayPtr[3]) & 0xfffffffb;\n    updatedData2 = updatedData2 & 0xfffffcff | paramArrayPtr[5] | paramArrayPtr[6];\n  }\n  *(uint *)(dataPtr + 4) = updatedData2;\n  *(uint *)(dataPtr + 0x18) = *(uint *)(dataPtr + 0x18) & 0xffffff8c | updatedData3;\n  *(uint *)(dataPtr + 0x34) = paramArrayPtr[1];\n  *(uint *)(dataPtr + 0x20) = updatedData1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_data_08005cec",
                "param_1": "dataPtr",
                "param_2": "paramArrayPtr",
                "uVar1": "updatedData1",
                "uVar2": "updatedData2",
                "uVar3": "updatedData3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_parameters_08005d48",
            "code": "\nvoid updateParameters_08005d48(int functionAddress,uint *parameters)\n\n{\n  uint modifiedValue1;\n  uint modifiedValue2;\n  uint originalParamValue;\n  \n  *(uint *)(functionAddress + 0x20) = *(uint *)(functionAddress + 0x20) & 0xfffffeff;\n  modifiedValue2 = *(uint *)(functionAddress + 4);\n  originalParamValue = *parameters;\n  modifiedValue1 = *(uint *)(functionAddress + 0x20) & 0xfffffdff | paramValue2 << 8;\n  if (functionAddress == 0x40012c00) {\n    modifiedValue1 = (modifiedValue1 & 0xfffff7ff | paramValue3 << 8) & 0xfffffbff;\n    modifiedValue2 = modifiedValue2 & 0xffffcfff | paramValue4 << 4 | paramValue5 << 4;\n  }\n  *(uint *)(functionAddress + 4) = modifiedValue2;\n  *(uint *)(functionAddress + 0x1c) = *(uint *)(functionAddress + 0x1c) & 0xffffff8c | originalParamValue;\n  *(uint *)(functionAddress + 0x3c) = paramValue1;\n  *(uint *)(functionAddress + 0x20) = modifiedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_parameters_08005d48",
                "param_1": "functionAddress",
                "param_2": "parameters",
                "uVar1": "modifiedValue1",
                "uVar2": "modifiedValue2",
                "uVar3": "originalParamValue",
                "param_2[1]": "paramValue1",
                "param_2[2]": "paramValue2",
                "param_2[3]": "paramValue3",
                "param_2[5]": "paramValue4",
                "param_2[6]": "paramValue5"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_param_values_08005dac",
            "code": "\nvoid updateParamValues_08005dac(int baseAddress,int *paramArray)\n\n{\n  uint flag;\n  int value1;\n  int value2;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffefff;\n  flag = *(uint *)(baseAddress + 4);\n  value1 = *paramArray;\n  value2 = paramArray[2];\n  if (baseAddress == 0x40012c00) {\n    flag = flag & 0xffffbfff | paramArray[5] << 6;\n  }\n  *(uint *)(baseAddress + 4) = flag;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(baseAddress + 0x40) = paramArray[1];\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffdfff | value2 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_param_values_08005dac",
                "param_1": "baseAddress",
                "param_2": "paramArray",
                "uVar1": "flag",
                "iVar2": "value1",
                "iVar3": "value2"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "update_flags_and_invoke_function_08005df4",
            "code": "\nvoid updateFlagsAndInvokeFunction_08005df4(uint **inputPointer)\n\n{\n  uint *dataPointer;\n  \n  *(undefined *)((int)inputPointer + 0x3d) = 2;\n  dataPointer = *inputPointer;\n  if ((dataPointer[8] & 0x1111) == 0) {\n    if ((dataPointer[8] & 0x444) == 0) {\n      *dataPointer = *dataPointer & 0xfffffffe;\n    }\n  }\n  FUN_08007710(inputPointer);\n  *(undefined *)((int)inputPointer + 0x3d) = 0;\n  *(undefined *)(inputPointer + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "update_flags_and_invoke_function_08005df4",
                "param_1": "inputPointer",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_flags_and_reset_08005e2e",
            "code": "\nvoid updateFlagsAndReset_08005e2e(uint **pointerToParams)\n\n{\n  uint *paramValue;\n  \n  *(undefined *)((int)pointerToParams + 0x3d) = 2;\n  paramValue = *pointerToParams;\n  if ((paramValue[8] & 0x1111) == 0) {\n    if ((paramValue[8] & 0x444) == 0) {\n      *paramValue = *paramValue & 0xfffffffe;\n    }\n  }\n  FUN_08007110(pointerToParams);\n  *(undefined *)((int)pointerToParams + 0x3d) = 0;\n  *(undefined *)(pointerToParams + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_flags_and_reset_08005e2e",
                "param_1": "pointerToParams",
                "puVar1": "paramValue"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "update_flags_and_execute_08005e6e",
            "code": "\nvoid updateFlagsAndExecute_08005e6e(int *inputArray)\n\n{\n  int value;\n  \n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(inputArray + 7) = 1;\n    if ((*(uint *)(*inputArray + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(inputArray + 7) = 2;\n    if ((*(uint *)(*inputArray + 0x18) & 0x300) == 0) {\n      FUN_0800771c(inputArray);\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(inputArray + 7) = 4;\n    if ((*(uint *)(*inputArray + 0x1c) & 3) == 0) {\n      FUN_0800771c(inputArray);\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(inputArray + 7) = 8;\n    if ((*(uint *)(*inputArray + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(inputArray);\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08007736(inputArray);\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(inputArray);\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(inputArray);\n  }\n  value = *inputArray;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(inputArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "update_flags_and_execute_08005e6e",
                "param_1": "inputArray",
                "iVar1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_08005fe8",
            "code": "\nvoid updateMemory_08005fe8(uint *memoryBlock,uint *newValueBlock)\n\n{\n  uint originalValue;\n  \n  originalValue = *memoryBlock;\n  if ((((memoryBlock == (uint *)0x40012c00) || (memoryBlock == (uint *)0x40000000)) ||\n      (memoryBlock == (uint *)0x40000400)) || (memoryBlock == (uint *)0x40000800)) {\n    originalValue = originalValue & 0xffffff8f | newValueBlock[1];\n  }\n  if (((memoryBlock == (uint *)0x40012c00) || (memoryBlock == (uint *)0x40000000)) ||\n     ((memoryBlock == (uint *)0x40000400 || (memoryBlock == (uint *)0x40000800)))) {\n    originalValue = originalValue & 0xfffffcff | newValueBlock[3];\n  }\n  *memoryBlock = originalValue & 0xffffff7f | newValueBlock[5];\n  memoryBlock[11] = newValueBlock[2];\n  memoryBlock[10] = *newValueBlock;\n  if (memoryBlock == (uint *)0x40012c00) {\n    specialValue = newValueBlock[4];\n  }\n  memoryBlock[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_08005fe8",
                "param_1": "memoryBlock",
                "param_2": "newValueBlock",
                "uVar1": "originalValue",
                "uRam40012c30": "specialValue",
                "param_1[0xb]": "memoryBlock[11]",
                "param_1[10]": "memoryBlock[10]",
                "param_2[1]": "newValueBlock[1]",
                "param_2[2]": "newValueBlock[2]",
                "param_2[3]": "newValueBlock[3]",
                "param_2[4]": "newValueBlock[4]",
                "param_2[5]": "newValueBlock[5]"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "check_and_execute_action_08006060",
            "code": "\nundefined4 checkAndExecuteAction_08006060(undefined4 *inputArray)\n\n{\n  if (inputArray != (undefined4 *)0x0) {\n    if (*(char *)((int)inputArray + 0x3d) == '\\0') {\n      *(undefined *)(inputArray + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)inputArray + 0x3d) = 2;\n    FUN_08005fe8(*inputArray,inputArray + 1);\n    *(undefined *)((int)inputArray + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "check_and_execute_action_08006060",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "update_data_08006092",
            "code": "\nundefined4 update_data_08006092(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "update_data_08006092",
                "param_1": "data"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_parameters_080060c4",
            "code": "\nvoid updateParameters_080060c4(int baseAddress,int *parameters)\n\n{\n  uint modifiedFlags;\n  uint modifiedValue;\n  int newValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffffef;\n  modifiedValue = *(uint *)(baseAddress + 4);\n  newValue = *parameters;\n  modifiedFlags = *(uint *)(baseAddress + 0x20) & 0xffffffdf | parameters[2] << 4;\n  if (baseAddress == 0x40012c00) {\n    modifiedFlags = (modifiedFlags & 0xffffff7f | parameters[3] << 4) & 0xffffffbf;\n    modifiedValue = modifiedValue & 0xfffff3ff | parameters[5] << 2 | parameters[6] << 2;\n  }\n  *(uint *)(baseAddress + 4) = modifiedValue;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffff8cff | newValue << 8;\n  *(int *)(baseAddress + 0x38) = parameters[1];\n  *(uint *)(baseAddress + 0x20) = modifiedFlags;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_parameters_080060c4",
                "param_1": "baseAddress",
                "param_2": "parameters",
                "uVar1": "modifiedFlags",
                "uVar2": "modifiedValue",
                "iVar3": "newValue"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "handle_switch_case_08006128",
            "code": "\nundefined4 handleSwitchCase_08006128(undefined4 *arg_array,undefined4 arg_2,undefined4 arg_3)\n\n{\n  if (*(char *)(arg_array + 0xf) != '\\x01') {\n    *(undefined *)(arg_array + 0xf) = 1;\n    *(undefined *)((int)arg_array + 0x3d) = 2;\n    switch(arg_3) {\n    case 0:\n      FUN_08005cec(*arg_array);\n      break;\n    case 4:\n      FUN_080060c4(*arg_array);\n      break;\n    case 8:\n      FUN_08005d48(*arg_array);\n      break;\n    case 0xc:\n      FUN_08005dac(*arg_array);\n    }\n    *(undefined *)((int)arg_array + 0x3d) = 1;\n    *(undefined *)(arg_array + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "handle_switch_case_08006128",
                "param_1": "arg_array",
                "param_2": "arg_2",
                "param_3": "arg_3"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "process_data_08006186",
            "code": "\nundefined4 processData_08006186(int *data_ptr,int param_ptr,undefined4 case_val)\n\n{\n  if (*(char *)(data_ptr + 0xf) != '\\x01') {\n    *(undefined *)(data_ptr + 0xf) = 1;\n    *(undefined *)((int)data_ptr + 0x3d) = 2;\n    switch(case_val) {\n    case 0:\n      FUN_08005cec(*data_ptr);\n      *(uint *)(*data_ptr + 0x18) = *(uint *)(*data_ptr + 0x18) | 8;\n      *(uint *)(*data_ptr + 0x18) = *(uint *)(*data_ptr + 0x18) & 0xfffffffb;\n      *(uint *)(*data_ptr + 0x18) = *(uint *)(*data_ptr + 0x18) | *(uint *)(param_ptr + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*data_ptr);\n      *(uint *)(*data_ptr + 0x18) = *(uint *)(*data_ptr + 0x18) | 0x800;\n      *(uint *)(*data_ptr + 0x18) = *(uint *)(*data_ptr + 0x18) & 0xfffffbff;\n      *(uint *)(*data_ptr + 0x18) = *(uint *)(*data_ptr + 0x18) | *(int *)(param_ptr + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*data_ptr);\n      *(uint *)(*data_ptr + 0x1c) = *(uint *)(*data_ptr + 0x1c) | 8;\n      *(uint *)(*data_ptr + 0x1c) = *(uint *)(*data_ptr + 0x1c) & 0xfffffffb;\n      *(uint *)(*data_ptr + 0x1c) = *(uint *)(*data_ptr + 0x1c) | *(uint *)(param_ptr + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*data_ptr);\n      *(uint *)(*data_ptr + 0x1c) = *(uint *)(*data_ptr + 0x1c) | 0x800;\n      *(uint *)(*data_ptr + 0x1c) = *(uint *)(*data_ptr + 0x1c) & 0xfffffbff;\n      *(uint *)(*data_ptr + 0x1c) = *(uint *)(*data_ptr + 0x1c) | *(int *)(param_ptr + 0x10) << 8;\n    }\n    *(undefined *)((int)data_ptr + 0x3d) = 1;\n    *(undefined *)(data_ptr + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "process_data_08006186",
                "param_1": "data_ptr",
                "param_2": "param_ptr",
                "param_3": "case_val"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "set_bit_in_register_08006262",
            "code": "\nvoid setBitInRegister_08006262(int register_address,uint bit_position,int bit_value)\n\n{\n  *(uint *)(register_address + 0x20) = *(uint *)(register_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(register_address + 0x20) = *(uint *)(register_address + 0x20) | bit_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "set_bit_in_register_08006262",
                "param_1": "register_address",
                "param_2": "bit_position",
                "param_3": "bit_value"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_permissions_08006280",
            "code": "\nundefined4 updatePermissions_08006280(uint **pointerList,undefined4 flag)\n\n{\n  switch(flag) {\n  case 0:\n    (*pointerList)[3] = (*pointerList)[3] | 2;\n    break;\n  case 4:\n    (*pointerList)[3] = (*pointerList)[3] | 4;\n    break;\n  case 8:\n    (*pointerList)[3] = (*pointerList)[3] | 8;\n    break;\n  case 0xc:\n    (*pointerList)[3] = (*pointerList)[3] | 0x10;\n  }\n  FUN_08006262(*pointerList,flag,1);\n  if (*pointerList == (uint *)0x40012c00) {\n    memoryValue = memoryValue | 0x8000;\n  }\n  **pointerList = **pointerList | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_permissions_08006280",
                "param_1": "pointerList",
                "param_2": "flag",
                "uRam40012c44": "memoryValue"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "modify_permissions_080062f4",
            "code": "\nundefined4 modifyPermissions_080062f4(uint **ptrToPointer,undefined4 permissionLevel)\n\n{\n  uint *tempPtr;\n  \n  switch(permissionLevel) {\n  case 0:\n    (*ptrToPointer)[3] = (*ptrToPointer)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*ptrToPointer)[3] = (*ptrToPointer)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*ptrToPointer)[3] = (*ptrToPointer)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*ptrToPointer)[3] = (*ptrToPointer)[3] & 0xffffffef;\n  }\n  FUN_08006262(*ptrToPointer,permissionLevel,0);\n  if (((*ptrToPointer == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPtr = *ptrToPointer;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "modify_permissions_080062f4",
                "param_1": "ptrToPointer",
                "param_2": "permissionLevel",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flag_and_increment_08006390",
            "code": "\nundefined4 setFlagAndIncrement_08006390(uint **inputPointer,undefined4 valueToSet)\n\n{\n  FUN_08006262(*inputPointer,valueToSet,1);\n  if (*inputPointer == (uint *)0x40012c00) {\n    flag = flag | 0x8000;\n  }\n  **inputPointer = **inputPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flag_and_increment_08006390",
                "param_1": "inputPointer",
                "param_2": "valueToSet",
                "uRam40012c44": "flag"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_and_set_flags_080063c0",
            "code": "\nundefined4 updateAndSetFlags_080063c0(uint **pointerArray,undefined4 flag)\n\n{\n  uint *currentPointer;\n  \n  FUN_08006262(*pointerArray,flag,0);\n  if (((*pointerArray == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  currentPointer = *pointerArray;\n  if (((currentPointer[8] & 0x1111) == 0) && ((currentPointer[8] & 0x444) == 0)) {\n    *currentPointer = *currentPointer & 0xfffffffe;\n  }\n  *(undefined *)((int)pointerArray + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_and_set_flags_080063c0",
                "param_1": "pointerArray",
                "param_2": "flag",
                "puVar1": "currentPointer",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_bitwise_value_08006420",
            "code": "\nvoid updateBitwiseValue_08006420(int address,uint bitPosition,int newValue)\n\n{\n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_bitwise_value_08006420",
                "param_1": "address",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_and_values_0800643c",
            "code": "\nundefined4 setFlagsAndValues_0800643c(uint **ptrValues,undefined4 value)\n\n{\n  FUN_08006420(*ptrValues,value,4);\n  (*ptrValues)[0x11] = (*ptrValues)[0x11] | 0x8000;\n  **ptrValues = **ptrValues | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_and_values_0800643c",
                "param_1": "ptrValues",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "clear_flags_and_update_values_08006460",
            "code": "\nundefined4 clearFlagsAndUpdateValues_08006460(uint **pointerToValueArray,undefined4 value)\n\n{\n  uint *pointerToValue;\n  \n  FUN_08006420(*pointerToValueArray,value,0);\n  pointerToValue = *pointerToValueArray;\n  if (((valueFlags & 0x1111) == 0) && ((valueFlags & 0x444) == 0)) {\n    flagValue1 = flagValue1 & 0xffff7fff;\n  }\n  pointerToValue = *pointerToValueArray;\n  if (((valueFlags & 0x1111) == 0) && ((valueFlags & 0x444) == 0)) {\n    *pointerToValue = *pointerToValue & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "clear_flags_and_update_values_08006460",
                "param_1": "pointerToValueArray",
                "param_2": "value",
                "puVar1": "pointerToValue",
                "puVar1[8]": "valueFlags",
                "puVar1[0x11]": "flagValue1"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "set_flags_and_values_080064b0",
            "code": "\nvoid setFlagsAndValues_080064b0(int *inputArray)\n\n{\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xfffffedf;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "set_flags_and_values_080064b0",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_binary_data_080064cc",
            "code": "\nundefined4 processBinaryData_080064cc(int *data)\n\n{\n  short count;\n  byte *byteData;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byteData = (byte *)data[8];\n    data[8] = (int)(byteData + 1);\n    *(uint *)(*data + 4) = (uint)*byteData;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_binary_data_080064cc",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "byteData"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_and_update_values_08006538",
            "code": "\nvoid calculateAndUpdateValues_08006538(int *parameters)\n\n{\n  int calculation1_result;\n  int calculation2_result;\n  int calculation3_result;\n  int calculation4_result;\n  int calculation5_result;\n  int calculation6_result;\n  int calculation7_result;\n  int calculation8_result;\n  int calculation9_result;\n  int value;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  value = *parameters;\n  if (value != 0x40013800) {\n    calculation1_result = FUN_08005a28();\n    calculation6_result = parameters[1];\n    calculation2_result = FUN_08005a28();\n    calculation7_result = parameters[1];\n    calculation3_result = FUN_08005a28();\n    calculation8_result = parameters[1];\n    calculation4_result = FUN_08005a28();\n    calculation9_result = parameters[1];\n    calculation5_result = FUN_08005a28();\n    *(uint *)(value + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(calculation4_result * 0x19) / (uint)(calculation9_result << 2) +\n                        (int)(((ulonglong)(uint)(calculation5_result * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(calculation2_result * 0x19) / (uint)(calculation7_result << 2) +\n           (int)(((ulonglong)(uint)(calculation3_result * 0x19) / (ulonglong)(uint)(calculation8_result << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(calculation1_result * 0x19) / (ulonglong)(uint)(calculation6_result << 2)) / 100) * 0x10;\n    return;\n  }\n  value = FUN_08005a48();\n  calculation5_result = parameters[1];\n  calculation1_result = FUN_08005a48();\n  calculation6_result = parameters[1];\n  calculation2_result = FUN_08005a48();\n  calculation7_result = parameters[1];\n  calculation3_result = FUN_08005a48();\n  calculation8_result = parameters[1];\n  calculation4_result = FUN_08005a48();\n  updatedValue = ((uint)((int)((ulonglong)\n                               (((uint)(calculation3_result * 0x19) / (uint)(calculation8_result << 2) +\n                                (int)(((ulonglong)(uint)(calculation4_result * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(calculation1_result * 0x19) / (uint)(calculation6_result << 2) +\n                   (int)(((ulonglong)(uint)(calculation2_result * 0x19) / (ulonglong)(uint)(calculation7_result << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(value * 0x19) / (ulonglong)(uint)(calculation5_result << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_and_update_values_08006538",
                "param_1": "parameters",
                "iVar1": "calculation1_result",
                "iVar2": "calculation2_result",
                "iVar3": "calculation3_result",
                "iVar4": "calculation4_result",
                "iVar5": "calculation5_result",
                "iVar6": "calculation6_result",
                "iVar7": "calculation7_result",
                "iVar8": "calculation8_result",
                "iVar9": "calculation9_result",
                "iVar10": "value",
                "iRam40013808": "updatedValue"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_validity_080066e8",
            "code": "\nundefined4 checkValidity_080066e8(uint **array,uint mask,uint expectedValue,int comparisonValue,uint maxDifference)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**array) == 0) != expectedValue) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (result = FUN_08003760(), (uint)(result - comparisonValue) <= maxDifference))));\n  (*array)[3] = (*array)[3] & 0xfffffe5f;\n  (*array)[5] = (*array)[5] & 0xfffffffe;\n  *(undefined *)((int)array + 0x39) = 0x20;\n  *(undefined *)((int)array + 0x3a) = 0x20;\n  *(undefined *)(array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_validity_080066e8",
                "param_1": "array",
                "param_2": "mask",
                "param_3": "expectedValue",
                "param_4": "comparisonValue",
                "param_5": "maxDifference",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_structure_0800674e",
            "code": "\nundefined4 initialize_data_structure_0800674e(int *data_structure)\n\n{\n  if (data_structure != (int *)0x0) {\n    if (*(char *)((int)data_structure + 0x39) == '\\0') {\n      *(undefined *)(data_structure + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)data_structure + 0x39) = 0x24;\n    *(uint *)(*data_structure + 0xc) = *(uint *)(*data_structure + 0xc) & 0xffffdfff;\n    FUN_08006538(data_structure);\n    *(uint *)(*data_structure + 0x10) = *(uint *)(*data_structure + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_structure + 0x14) = *(uint *)(*data_structure + 0x14) & 0xffffffd5;\n    *(uint *)(*data_structure + 0xc) = *(uint *)(*data_structure + 0xc) | 0x2000;\n    some_value = 0;\n    *(undefined *)((int)data_structure + 0x39) = 0x20;\n    *(undefined *)((int)data_structure + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_structure_0800674e",
                "param_1": "data_structure",
                "param_1[0xf]": "some_value"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *dataPtr,ushort *data,int dataSize,undefined4 param)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)dataPtr + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (dataSize == 0) {\n      status = 1;\n    }\n    else if (*(char *)(dataPtr + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(dataPtr + 0xe) = 1;\n      dataPtr[0xf] = 0;\n      *(undefined *)((int)dataPtr + 0x39) = 0x21;\n      status = FUN_08003760();\n      *(short *)(dataPtr + 9) = (short)dataSize;\n      *(short *)((int)dataPtr + 0x26) = (short)dataSize;\n      while (*(short *)((int)dataPtr + 0x26) != 0) {\n        *(short *)((int)dataPtr + 0x26) = *(short *)((int)dataPtr + 0x26) + -1;\n        if (dataPtr[2] == 0x1000) {\n          result = FUN_080066e8(dataPtr,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = *data & 0x1ff;\n          if (dataPtr[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(dataPtr,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = FUN_080066e8(dataPtr,0x40,0,status,param);\n      if (result == 0) {\n        *(undefined *)((int)dataPtr + 0x39) = 0x20;\n        *(undefined *)(dataPtr + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "dataPtr",
                "param_2": "data",
                "param_3": "dataSize",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "validate_input_0800688e",
            "code": "\nundefined4 validateInput_0800688e(int *inputArray,int value1,int value2)\n\n{\n  if (*(char *)((int)inputArray + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(inputArray + 0xe) != '\\x01') {\n    inputArray[8] = value1;\n    *(short *)(inputArray + 9) = (short)value2;\n    *(short *)((int)inputArray + 0x26) = (short)value2;\n    inputArray[0xf] = 0;\n    *(undefined *)((int)inputArray + 0x39) = 0x21;\n    *(undefined *)(inputArray + 0xe) = 0;\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "validate_input_0800688e",
                "param_1": "inputArray",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_input_080068d6",
            "code": "\nundefined4 validate_input_080068d6(int *input_array,int param_2_value,int param_3_value)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (param_2_value == 0) {\n    return 1;\n  }\n  if (param_3_value == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    array_element_10 = param_2_value;\n    *(short *)(input_array + 0xb) = (short)param_3_value;\n    *(short *)((int)input_array + 0x2e) = (short)param_3_value;\n    array_element_0xf = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "param_2_value",
                "param_3": "param_3_value",
                "param_1[10]": "array_element_10",
                "param_1[0xf]": "array_element_0xf"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "set_flag_and_value_08006932",
            "code": "\nundefined4 setFlagAndValue_08006932(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)ptr + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "set_flag_and_value_08006932",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_data_0800694c",
            "code": "\nundefined4 processData_0800694c(int *data)\n\n{\n  byte *bytePtr;\n  short counter;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefinedPtr = (undefined *)data[10];\n    data[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    bytePtr = (byte *)data[10];\n    data[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_data_0800694c",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "sVar2": "counter",
                "puVar3": "undefinedPtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_flags_080069ec",
            "code": "\nvoid processFlags_080069ec(uint **flags)\n\n{\n  int result;\n  uint flag3;\n  uint *ptr;\n  uint flag5;\n  uint flag1;\n  \n  ptr = *flags;\n  flag1 = *ptr;\n  flag3 = ptr[3];\n  if ((((flag1 & 0xf) == 0) && ((flag1 & 0x20) != 0)) && ((flag3 & 0x20) != 0)) {\n    FUN_0800694c(flags);\n    return;\n  }\n  if (((flag1 & 0xf) == 0) || ((flag5 = ptr[5] & 1, flag5 == 0 && ((flag3 & 0x120) == 0)))) {\n    if (((flag1 & 0x80) != 0) && ((flag3 & 0x80) != 0)) {\n      FUN_080064cc(flags);\n      return;\n    }\n    if (((flag1 & 0x40) != 0) && ((flag3 & 0x40) != 0)) {\n      FUN_08006932(flags);\n    }\n  }\n  else {\n    if (((flag1 & 1) != 0) && ((flag3 & 0x100) != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 1);\n    }\n    if (((flag1 & 4) != 0) && (flag5 != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 2);\n    }\n    if (((flag1 & 2) != 0) && (flag5 != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 4);\n    }\n    if (((flag1 & 8) != 0) && (flag5 != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 8);\n    }\n    if (flags[0xf] != (uint *)0x0) {\n      if (((flag1 & 0x20) != 0) && ((flag3 & 0x20) != 0)) {\n        FUN_0800694c(flags);\n      }\n      if ((((uint)flags[0xf] & 8) == 0) && (((*flags)[5] & 0x40) == 0)) {\n        FUNC_0800877c(flags);\n        flags[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(flags);\n      ptr = *flags;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_0800877c(flags);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (flags[0xd] == (uint *)0x0) {\n        FUNC_0800877c(flags);\n        return;\n      }\n      flags[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      result = FUN_08004050(flags[0xd]);\n      if (result != 0) {\n        (*(code *)flags[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_flags_080069ec",
                "param_1": "flags",
                "iVar1": "result",
                "uVar2": "flag3",
                "puVar3": "ptr",
                "uVar4": "flag5",
                "uVar5": "flag1"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "FUNC_08006b1c",
            "code": "\nbyte FUNC_08006b1c(int param_1)\n\n{\n  return *(byte *)(param_1 + 0x3a) | *(byte *)(param_1 + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "FUNC_08006b1c"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "get_bit_value_08006b28",
            "code": "\nuint get_bit_value_08006b28(uint value,int address)\n\n{\n  return *(uint *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "get_bit_value_08006b28",
                "param_1": "value",
                "param_2": "address"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "update_memory_08006b3e",
            "code": "\nvoid updateMemory_08006b3e(uint inputValue,int memoryAddress)\n\n{\n  uint index;\n  \n  index = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(memoryAddress + index * 4) = *(uint *)(memoryAddress + index * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "update_memory_08006b3e",
                "param_1": "inputValue",
                "param_2": "memoryAddress",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_in_array_08006b5c",
            "code": "\nvoid updateBitInArray_08006b5c(uint bitPosition,int arrayAddress)\n\n{\n  uint index;\n  \n  index = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + index * 4) = *(uint *)(arrayAddress + index * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_in_array_08006b5c",
                "param_1": "bitPosition",
                "param_2": "arrayAddress",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "map_param_to_value_08006b7c",
            "code": "\nundefined4 mapParamToValue_08006b7c(undefined4 param)\n\n{\n  switch(param) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "map_param_to_value_08006b7c",
                "param_1": "param"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_flag_and_return_address_08006bb8",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_08006bb8(undefined4 flag)\n\n{\n  undefined4 returnAddress;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnAddress = 0x40011800;\n    break;\n  default:\n    returnAddress = 0;\n  }\n  return returnAddress;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_address_08006bb8",
                "param_1": "flag",
                "uVar1": "returnAddress"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "get_shifted_bits_08006c60",
            "code": "\nuint getShiftedBits_08006c60(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08007376(arg1,&DAT_0800a5b8,arg3,arg4,arg4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "get_shifted_bits_08006c60",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "decode_value_08006c7c",
            "code": "\nundefined4 decode_value_08006c7c(undefined4 input_val,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(input_val,&DAT_0800a6cc,param_3,param_4,param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "decode_value_08006c7c",
                "param_1": "input_val",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "update_data_flags_08006ca8",
            "code": "\n\n\nvoid updateDataFlags_08006ca8(int *dataPtr,undefined4 param)\n\n{\n  undefined4 result;\n  uint flags;\n  int value;\n  uint bitmask;\n  undefined4 value1;\n  undefined4 value2;\n  \n  value = *dataPtr;\n  if (value == 0x40012400) {\n    flags = _DAT_40021018 | 0x200;\n    value = 0x200;\n    _DAT_40021018 = flags;\n  }\n  else {\n    flags = 0x40012800;\n    if (value == 0x40012800) {\n      flags = _DAT_40021018 | 0x400;\n      value = 0x400;\n      _DAT_40021018 = flags;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,param,flags,value);\n  bitmask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  value1 = 3;\n  value2 = 0;\n  FUN_080040e8(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "update_data_flags_08006ca8",
                "param_1": "dataPtr",
                "param_2": "param",
                "uVar1": "result",
                "uVar2": "flags",
                "iVar3": "value",
                "local_18": "bitmask",
                "local_14": "value1",
                "local_10": "value2"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_status_flags_08006d24",
            "code": "\n\n\nvoid updateStatusFlags_08006d24(int *flagPtr)\n\n{\n  if (*flagPtr != 0x40012400) {\n    if (*flagPtr == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_status_flags_08006d24",
                "param_1": "flagPtr"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "validate_and_process_data_08006d80",
            "code": "\nundefined2 validate_and_process_data_08006d80(undefined4 input_data)\n\n{\n  int result;\n  uint flag;\n  undefined2 output_value;\n  uint data_length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  data_length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  output_value = 0;\n  buffer = FUN_08007320(input_data,&DAT_0800a5b8);\n  if (buffer == 0) {\n    output_value = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000014 = (undefined)input_data;\n    result = FUN_08003bd8(&buffer);\n    if (result == 0) {\n      data_length = FUN_08006c60(input_data);\n      if (data_length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_080038e4(&buffer,&data_length);\n        if (result == 0) {\n          result = FUN_08003e20(&buffer);\n          if (result == 0) {\n            result = FUN_08003aa0(&buffer);\n            if (result == 0) {\n              result = FUN_0800376c(&buffer,10);\n              if (result == 0) {\n                flag = FUN_08003a1c(&buffer);\n                if ((flag & 0x200) != 0) {\n                  output_value = FUN_080038dc(&buffer);\n                }\n                result = FUN_08003de4(&buffer);\n                if (result == 0) {\n                  result = FUN_08003ce8(&buffer);\n                  if (result != 0) {\n                    output_value = 0;\n                  }\n                }\n                else {\n                  output_value = 0;\n                }\n              }\n              else {\n                output_value = 0;\n              }\n            }\n            else {\n              output_value = 0;\n            }\n          }\n          else {\n            output_value = 0;\n          }\n        }\n        else {\n          output_value = 0;\n        }\n      }\n      else {\n        output_value = 0;\n      }\n    }\n    else {\n      output_value = 0;\n    }\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "validate_and_process_data_08006d80",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flag",
                "local_46": "output_value",
                "local_44": "data_length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_hardware_08006e68",
            "code": "\n\n\nvoid initializeHardware_08006e68(undefined4 option)\n\n{\n  int deviceIndex;\n  undefined4 configValue;\n  uint bitMask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  deviceIndex = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(option);\n  configValue = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value1 = 2;\n  value2 = 0;\n  value3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(deviceIndex << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(configValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_hardware_08006e68",
                "param_1": "option",
                "iVar1": "deviceIndex",
                "uVar2": "configValue",
                "local_20": "bitMask",
                "local_1c": "value1",
                "local_18": "value2",
                "local_14": "value3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_application_08007110",
            "code": "\nvoid initialize_application_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_application_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "extract_and_process_data_08007118",
            "code": "\nvoid extract_and_process_data_08007118(undefined4 input_value,uint divisor,int increment,undefined4 output_value,char flag)\n\n{\n  uint quotient;\n  int result_1;\n  int result_2;\n  undefined4 var_1;\n  undefined4 var_2;\n  undefined4 var_3;\n  undefined4 var_4;\n  undefined4 var_5;\n  undefined4 var_6;\n  undefined4 var_7;\n  int buffer;\n  int temp_1;\n  undefined4 temp_2;\n  int temp_3;\n  undefined4 temp_4;\n  undefined4 temp_5;\n  undefined temp_6;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  var_1 = 0;\n  var_2 = 0;\n  var_3 = 0;\n  var_4 = 0;\n  var_5 = 0;\n  var_6 = 0;\n  var_7 = 0;\n  buffer = FUN_08007320(input_value,&DAT_0800a6cc);\n  if (buffer != 0) {\n    quotient = FUN_080075dc();\n    temp_1 = quotient / divisor - 1;\n    temp_3 = increment + -1;\n    temp_4 = 0;\n    temp_2 = 0;\n    temp_5 = 0;\n    temp_6 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_value;\n      result_1 = FUN_08006092(&buffer);\n      if (result_1 != 0) {\n        return;\n      }\n    }\n    result_1 = FUN_08006c7c(input_value);\n    if ((((result_1 == 0) || (result_1 == 4)) || (result_1 == 8)) || ((result_1 == 0xc || (result_1 == 0x18)))) {\n      var_1 = 0x60;\n      var_3 = 0;\n      var_5 = 0;\n      var_4 = 0;\n      var_7 = 0;\n      var_6 = 0;\n      var_2 = output_value;\n      result_2 = FUN_08006186(&buffer,&var_1,result_1);\n      if (result_2 == 0) {\n        quotient = FUN_08007376(input_value,&DAT_0800a6cc);\n        if ((quotient & 0x100000) == 0) {\n          FUN_08006390(&buffer,result_1);\n        }\n        else {\n          FUN_0800643c(&buffer,result_1);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "extract_and_process_data_08007118",
                "param_1": "input_value",
                "param_2": "divisor",
                "param_3": "increment",
                "param_4": "output_value",
                "param_5": "flag",
                "uVar1": "quotient",
                "iVar2": "result_1",
                "iVar3": "result_2",
                "local_74": "var_1",
                "local_70": "var_2",
                "local_6c": "var_3",
                "local_68": "var_4",
                "local_64": "var_5",
                "local_60": "var_6",
                "local_5c": "var_7",
                "local_58": "buffer",
                "local_54": "temp_1",
                "local_50": "temp_2",
                "local_4c": "temp_3",
                "local_48": "temp_4",
                "local_44": "temp_5",
                "local_1b": "temp_6"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320",
                "FUN_08006186"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "initialize_process_080071e4",
            "code": "\nvoid initializeProcess_080071e4(undefined4 inputParameter)\n\n{\n  int returnValue;\n  uint flag;\n  int dataArray [17];\n  \n  dataArray[0] = FUN_08007320(inputParameter,&DAT_0800a6cc);\n  if ((dataArray[0] != 0) &&\n     ((((returnValue = FUN_08006c7c(inputParameter), returnValue == 0 || (returnValue == 4)) || (returnValue == 8)) ||\n      ((returnValue == 0xc || (returnValue == 0x18)))))) {\n    flag = FUN_08007376(inputParameter,&DAT_0800a6cc);\n    if ((flag & 0x100000) == 0) {\n      FUN_080063c0(dataArray,returnValue);\n    }\n    else {\n      FUN_08006460(dataArray,returnValue);\n    }\n    FUN_08005e2e(dataArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "initialize_process_080071e4",
                "param_1": "inputParameter",
                "iVar1": "returnValue",
                "uVar2": "flag",
                "local_50": "dataArray"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_system_0800723c",
            "code": "\nvoid initializeSystem_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_system_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "initialize_system_08007246",
            "code": "\nvoid initializeSystem_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "initialize_system_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "configure_device_08007258",
            "code": "\n\n\nvoid configureDevice_08007258(uint deviceId,undefined4 configParam1,undefined4 configParam2)\n\n{\n  undefined4 modifiedDeviceId;\n  uint bitmask;\n  undefined4 localConfigParam1;\n  undefined4 localConfigParam2;\n  undefined4 constantValue;\n  \n  modifiedDeviceId = FUN_08006bb8((deviceId << 0x18) >> 0x1c);\n  bitmask = 1 << (deviceId & 0xf) & 0xffff;\n  constantValue = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceId - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceId == 0xf) || (deviceId == 0x13)) || (deviceId == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localConfigParam1 = configParam1;\n  localConfigParam2 = configParam2;\n  FUN_080040e8(modifiedDeviceId,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "configure_device_08007258",
                "param_1": "deviceId",
                "param_2": "configParam1",
                "param_3": "configParam2",
                "uVar1": "modifiedDeviceId",
                "local_20": "bitmask",
                "local_1c": "localConfigParam1",
                "local_18": "localConfigParam2",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "handle_parameter_080072d8",
            "code": "\nvoid handleParameter_080072d8(undefined4 dataPointer,undefined2 infoPointer,int flag,undefined4 configPointer)\n\n{\n  if (flag == 0) {\n    FUN_080042e2(dataPointer,infoPointer,0,configPointer,configPointer);\n    return;\n  }\n  FUN_080042e2(dataPointer,infoPointer,1,configPointer,configPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "handle_parameter_080072d8",
                "param_1": "dataPointer",
                "param_2": "infoPointer",
                "param_3": "flag",
                "param_4": "configPointer"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "execute_function_080072f0",
            "code": "\nvoid executeFunction_080072f0(undefined4 input_1,undefined2 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_080042d4(input_1,input_2,input_3,input_4,input_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_080072fa",
            "code": "\nvoid initialize_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_in_list_08007306",
            "code": "\nundefined4 find_value_in_list_08007306(int search_value,char *list_ptr)\n\n{\n  while( true ) {\n    if (*list_ptr == -1) {\n      return 0;\n    }\n    if (*list_ptr == search_value) break;\n    list_ptr = list_ptr + 0xc;\n  }\n  return *(undefined4 *)(list_ptr + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_in_list_08007306",
                "param_1": "search_value",
                "param_2": "list_ptr"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_param_08007320",
            "code": "\nundefined4 checkParam_08007320(int inputParam)\n\n{\n  undefined4 result;\n  \n  if (inputParam != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_param_08007320",
                "param_1": "inputParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_char_index_08007332",
            "code": "\nint find_char_index_08007332(int target_value,char *array_ptr)\n\n{\n  while( true ) {\n    if (*(int *)(array_ptr + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array_ptr + 4) == target_value) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return (int)*array_ptr;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_char_index_08007332",
                "param_1": "target_value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "validate_param_0800734a",
            "code": "\nundefined4 validate_param_0800734a(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "validate_param_0800734a",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_in_array_0800735a",
            "code": "\nundefined4 find_value_in_array_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_return_value_08007376",
            "code": "\nundefined4 checkReturnValue_08007376(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800735a();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_return_value_08007376",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "compare_integerand_string_0800738a",
            "code": "\nundefined4 compareIntegerandString_0800738a(int inputNumber,char *inputString)\n\n{\n  if (inputNumber == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*inputString == -1) {\n      return 0;\n    }\n    if (inputNumber == *inputString) break;\n    inputString = inputString + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "compare_integerand_string_0800738a",
                "param_1": "inputNumber",
                "param_2": "inputString"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_non_zero_080073ae",
            "code": "\nint compareAndReturnNonZero_080073ae(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_non_zero_080073ae",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_080073c0",
            "code": "\nvoid executeCallback_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_system_080073ec",
            "code": "\n\n\nvoid initializeSystem_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_system_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_memory_settings_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateMemorySettings_08007438(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = memoryAddress;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = memoryAddress;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = memoryAddress;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = memoryAddress;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_memory_settings_08007438",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_memory_values_080074e0",
            "code": "\n\n\nvoid update_memory_values_080074e0(int *memory_address)\n\n{\n  if (*memory_address == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memory_address == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memory_address == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memory_address == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_memory_values_080074e0",
                "param_1": "memory_address"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_ir_qn_08007544",
            "code": "\nundefined4 getTimerIRQn_08007544(uint timerValue)\n\n{\n  if (timerValue == 0xffffffff) {\n    return 0;\n  }\n  if (timerValue == 0x40000400) {\n    return 0x1d;\n  }\n  if (timerValue < 0x40000401) {\n    if (timerValue == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timerValue == 0x40000800) {\n      return 0x1e;\n    }\n    if (timerValue == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "param_1": "timerValue"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "get_timer_instance_index_08007594",
            "code": "\nundefined4 getTimerInstanceIndex_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "get_timer_instance_index_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "calculate_clock_factor_080075dc",
            "code": "\nint calculateClockFactor_080075dc(undefined4 inputValue)\n\n{\n  uint temp1;\n  int returnValue;\n  uint temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint temp7;\n  uint temp8;\n  \n  temp4 = 0;\n  temp5 = 0;\n  temp6 = 0;\n  temp7 = 0;\n  temp8 = 0;\n  temp3 = 0;\n  FUN_08005a68(&temp4,&temp3);\n  returnValue = FUN_08007594(inputValue);\n  temp1 = temp8;\n  temp2 = temp7;\n  if (returnValue == 1) {\n    returnValue = FUN_08005a28();\n  }\n  else if (returnValue == 2) {\n    returnValue = FUN_08005a48();\n    temp2 = temp1;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    returnValue = 0;\n    temp2 = 0;\n  }\n  if (temp2 != 0x500) {\n    if (temp2 < 0x501) {\n      if (temp2 != 0x400) {\n        return returnValue;\n      }\n    }\n    else if ((temp2 != 0x600) && (temp2 != 0x700)) {\n      return returnValue;\n    }\n  }\n  return returnValue << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "calculate_clock_factor_080075dc",
                "param_1": "inputValue",
                "uVar1": "temp1",
                "iVar2": "returnValue",
                "uVar3": "temp2",
                "local_20": "temp3",
                "local_1c": "temp4",
                "local_18": "temp5",
                "local_14": "temp6",
                "local_10": "temp7",
                "local_c": "temp8"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_device_08007648",
            "code": "\nvoid initializeDevice_08007648(undefined4 *deviceSettings,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char charValue;\n  uint divResult;\n  int result;\n  undefined4 *paramPtr;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  paramPtr = deviceSettings + 1;\n  *deviceSettings = 0x40000000;\n  deviceSettings[1] = 0x40000000;\n  deviceSettings[4] = param2;\n  divResult = FUN_080075dc();\n  deviceSettings[2] = divResult / 1000000 - 1;\n  deviceSettings[5] = 0;\n  deviceSettings[3] = 0;\n  deviceSettings[6] = 0;\n  deviceSettings[0x13] = param4;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = param3;\n  charValue = FUN_08007544(*deviceSettings);\n  FUN_08003f30((int)charValue,0xe,0);\n  charValue = FUN_08007544(*deviceSettings);\n  FUN_08003f94((int)charValue);\n  result = FUN_08006060(paramPtr);\n  if ((result == 0) && (result = FUN_08006128(paramPtr,&localVar1,0), result == 0)) {\n    FUN_08006280(paramPtr,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_device_08007648",
                "param_1": "deviceSettings",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "charValue",
                "uVar2": "divResult",
                "iVar3": "result",
                "puVar4": "paramPtr",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08006128",
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initialize_data_080076e0(undefined4 *data_array)\n\n{\n  char result;\n  int error_code;\n  \n  data_array[0x13] = 0;\n  result = FUN_08007544(*data_array);\n  FUN_08003fb0((int)result);\n  error_code = FUN_08005df4(data_array + 1);\n  if (error_code == 0) {\n    FUN_080062f4(data_array + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "data_array",
                "cVar1": "result",
                "iVar2": "error_code"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_application_08007708",
            "code": "\nvoid initializeApplication_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_application_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_and_execute_08007710",
            "code": "\nvoid initialize_and_execute_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_and_execute_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_08007718",
            "code": "\nint subtract_four_08007718(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_callback_if_condition_met_0800771c",
            "code": "\nvoid executeCallbackIfConditionMet_0800771c(int callbackParameter)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08007718();\n  if ((*(code **)(functionPointer + 0x4c) != (code *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(code **)(functionPointer + 0x4c))(functionPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_callback_if_condition_met_0800771c",
                "param_1": "callbackParameter",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_function_if_not_null_08007736",
            "code": "\nvoid executeFunctionIfNotNull_08007736(void)\n\n{\n  int result;\n  \n  result = FUN_08007718();\n  if (*(code **)(result + 0x48) != (code *)0x0) {\n    (**(code **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_function_if_not_null_08007736",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_memory_address_08007744",
            "code": "\nundefined4 getMemoryAddress_08007744(int address)\n\n{\n  return *(undefined4 *)(*(int *)(address + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_memory_address_08007744",
                "param_1": "address"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "set_param_in_struct_0800774a",
            "code": "\nvoid setParamInStruct_0800774a(int inputStruct,undefined4 newParamValue)\n\n{\n  *(undefined4 *)(*(int *)(inputStruct + 4) + 0x24) = newParamValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "set_param_in_struct_0800774a",
                "param_1": "inputStruct",
                "param_2": "newParamValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "write_value_to_memory_08007750",
            "code": "\nvoid writeValueToMemory_08007750(int memoryAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(memoryAddress + 4) + 0x34 + index * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "write_value_to_memory_08007750",
                "param_1": "memoryAddress",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_pins_080077b0",
            "code": "\n\n\nvoid initializeI2CPins_080077b0(int *pinConfig,int param2,int param3,int param4,undefined param5)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 pinValue;\n  uint pinConfig1;\n  uint pinConfig2;\n  int *nextPointer;\n  uint pinMask1;\n  uint pinMask2;\n  uint pinMask3;\n  undefined4 localVar1;\n  \n  if (pinConfig != (int *)0x0) {\n    nextPointer = pinConfig + 1;\n    peripheral1 = FUN_08007320((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n    peripheral2 = FUN_08007320((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n    if ((peripheral1 == 0) || (peripheral2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheral1 = FUN_080073ae(peripheral1,peripheral2);\n      *pinConfig = peripheral1;\n      if (peripheral1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x1f;\n          *(undefined *)((int)pinConfig + 0x5b) = 0x20;\n          DAT_20000668 = nextPointer;\n        }\n        if (*pinConfig == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x21;\n          *(undefined *)((int)pinConfig + 0x5b) = 0x22;\n          DAT_2000066c = nextPointer;\n        }\n        pinValue = FUN_08006bb8((uint)((int)*(char *)((int)pinConfig + 0x59) << 0x18) >> 0x1c);\n        pinMask1 = 1 << ((int)*(char *)((int)pinConfig + 0x59) & 0xfU) & 0xffff;\n        pinConfig1 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        pinConfig2 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        pinMask2 = (pinConfig1 >> 3 & 1) << 4 | pinConfig2 & 7;\n        localVar1 = 3;\n        peripheral1 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        pinMask3 = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        pinConfig2 = 1;\n        pinConfig1 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 2:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 3:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 4:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 5:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 6:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 7:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 8:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 9:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 10:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xb:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xc:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xd:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xe:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xf:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x10:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x11:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x12:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x13:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x14:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x15:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x16:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x17:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x1b:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x1c:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x21:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x22:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x23:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x24:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = pinConfig2;\n        }\n        FUN_080040e8(pinValue,&pinMask1,pinConfig1,pinConfig2);\n        pinValue = FUN_08006bb8((uint)((int)*(char *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        pinMask1 = 1 << ((int)*(char *)(pinConfig + 0x16) & 0xfU) & 0xffff;\n        pinConfig1 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        pinConfig2 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        pinMask2 = (pinConfig1 >> 3 & 1) << 4 | pinConfig2 & 7;\n        localVar1 = 3;\n        peripheral1 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        pinMask3 = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        pinConfig2 = 1;\n        pinConfig1 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 2:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 3:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 4:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 5:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 6:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 7:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 8:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 9:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 10:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xb:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xc:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xd:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xe:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0xf:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x10:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x11:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x12:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x13:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x14:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x15:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x16:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x17:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x1b:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x1c:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x21:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x22:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x23:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = pinConfig2;\n          break;\n        case 0x24:\n          pinConfig1 = 0x40010000;\n          pinConfig2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = pinConfig2;\n        }\n        FUN_080040e8(pinValue,&pinMask1,pinConfig1,pinConfig2);\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = param2;\n        pinConfig[3] = 0;\n        pinConfig[4] = param4;\n        pinConfig[7] = 0xff;\n        pinConfig[5] = param3;\n        pinConfig[6] = 0;\n        pinConfig[8] = 0;\n        pinConfig[9] = 0;\n        *(undefined *)((int)pinConfig + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)pinConfig + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)pinConfig + 0x5a));\n        FUN_08003f30((int)*(char *)((int)pinConfig + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)pinConfig + 0x5b));\n        FUN_080045c0(nextPointer);\n        *(undefined *)((int)pinConfig + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_pins_080077b0",
                "param_1": "pinConfig",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "uVar3": "pinValue",
                "uVar4": "pinConfig1",
                "uVar5": "pinConfig2",
                "piVar6": "nextPointer",
                "local_38": "pinMask1",
                "local_34": "pinMask2",
                "local_30": "pinMask3",
                "local_2c": "localVar1"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "find_value_in_range_08007e74",
            "code": "\nint findValueInRange_08007e74(int array,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 param4;\n  \n  param4 = param3;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = array + 4;\n    result = FUN_08004728(tempVar,param1,param2,param3,param4);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "find_value_in_range_08007e74",
                "param_1": "array",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "param4"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_bytes_08007ede",
            "code": "\nundefined4 copyBytes_08007ede(int dest,int src,uint length)\n\n{\n  uint index;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (index = 0; index < length; index = index + 1 & 0xff) {\n    *(undefined *)(dest + index + 0x68) = *(undefined *)(src + index);\n    *(char *)(dest + 0x88) = *(char *)(dest + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_bytes_08007ede",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "length",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "analyze_data_08007f0e",
            "code": "\nint analyzeData_08007f0e(int data_ptr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initial_value;\n  int result;\n  uint difference;\n  int status;\n  int iterator;\n  undefined4 additional_param;\n  \n  additional_param = param4;\n  initial_value = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    iterator = data_ptr + 4;\n    result = FUN_080047f4(iterator,param2,param3,param4,additional_param);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(iterator), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initial_value;\n        if (difference < 0x65) {\n          result = FUN_08005430(iterator);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(iterator);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "analyze_data_08007f0e",
                "param_1": "data_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "iterator",
                "uVar6": "additional_param"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtractFour_08007f78(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_data_08007f7c",
            "code": "\nvoid update_data_08007f7c(int data_address,int new_value)\n\n{\n  if (data_address != 0) {\n    if (new_value != 0) {\n      *(int *)(data_address + 0x60) = new_value;\n      FUN_080049e0(data_address + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_data_08007f7c",
                "param_1": "data_address",
                "param_2": "new_value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_and_call_function_08007f8e",
            "code": "\nvoid updateParamAndCallFunction_08007f8e(int param1,int param2)\n\n{\n  if (param1 != 0) {\n    if (param2 != 0) {\n      *(int *)(param1 + 100) = param2;\n      FUN_080049e0(param1 + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_params_08007fa0",
            "code": "\nvoid processParams_08007fa0(int input,int flag,int checkValue,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (checkValue == *(int *)(input + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(input,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(input,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_params_08007fa0",
                "param_1": "input",
                "param_2": "flag",
                "param_3": "checkValue",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_conditional_function_08007ff0",
            "code": "\nvoid executeConditionalFunction_08007ff0(undefined4 inputParameter)\n\n{\n  int functionReturnValue;\n  \n  functionReturnValue = FUN_08007f78();\n  if (((*(code **)(functionReturnValue + 0x60) != (code *)0x0) && (*(char *)(functionReturnValue + 0x5c) == '\\x01')) &&\n     (*(char *)(functionReturnValue + 0x2c) != ' ')) {\n    (**(code **)(functionReturnValue + 0x60))(functionReturnValue + 0x68);\n  }\n  FUN_080049e0(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_conditional_function_08007ff0",
                "param_1": "inputParameter",
                "iVar1": "functionReturnValue"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_call_function_08008020",
            "code": "\nvoid checkAndCallFunction_08008020(undefined4 inputParameter)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (*(char *)(returnValue + 0x5d) == '\\0') {\n    FUN_080049e0(inputParameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "inputParameter",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_pins_08008078",
            "code": "\n\n\nvoid initializeUartPins_08008078(int *uartPinsStruct)\n\n{\n  int uartPin1Peripheral;\n  int uartPin2Peripheral;\n  undefined4 uartPin1Settings;\n  uint uartPin2Settings;\n  uint uartPin2BitMask;\n  uint uartPin2BitConfig;\n  uint uartPin2BitShift;\n  undefined4 uartPin1Data;\n  \n  if (uartPinsStruct != (int *)0x0) {\n    uartPin1Peripheral = FUN_08007320((int)*(char *)(uartPinsStruct + 0x16),&DAT_0800a864);\n    uartPin2Peripheral = FUN_08007320((int)*(char *)((int)uartPinsStruct + 0x59),&DAT_0800a81c);\n    if ((uartPin2Peripheral == 0) || (uartPin1Peripheral == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2Peripheral);\n    }\n    else {\n      uartPin1Peripheral = FUN_080073ae(uartPin1Peripheral);\n      *uartPinsStruct = uartPin1Peripheral;\n      if (uartPin1Peripheral == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1Peripheral == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartPinsStruct + 0x11) = 0;\n          *(undefined *)((int)uartPinsStruct + 0x5a) = 0x25;\n        }\n        else if (uartPin1Peripheral == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartPinsStruct + 0x11) = 1;\n          *(undefined *)((int)uartPinsStruct + 0x5a) = 0x26;\n        }\n        else if (uartPin1Peripheral == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartPinsStruct + 0x11) = 2;\n          *(undefined *)((int)uartPinsStruct + 0x5a) = 0x27;\n        }\n        uartPin1Settings = FUN_08006bb8((uint)((int)*(char *)((int)uartPinsStruct + 0x59) << 0x18) >> 0x1c);\n        uartPin2Settings = FUN_08007376((int)*(char *)((int)uartPinsStruct + 0x59),&DAT_0800a81c);\n        uartPin2BitMask = 1 << (*(uartPinNumber *)((int)uartPinsStruct + 0x59) & 0xf) & 0xffff;\n        uartPin2BitConfig = (uartPin2Settings >> 3 & 1) << 4 | uartPin2Settings & 7;\n        uartPin2BitShift = (uartPin2Settings << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPin2Settings << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartPin1Data = 3;\n        FUN_080040e8(uartPin1Settings,&uartPin2BitMask);\n        uartPin1Settings = FUN_08006bb8((uint)((int)*(char *)(uartPinsStruct + 0x16) << 0x18) >> 0x1c);\n        uartPin2Settings = FUN_08007376((int)*(char *)(uartPinsStruct + 0x16),&DAT_0800a864);\n        uartPin2BitMask = 1 << (*(uartPinNumber *)(uartPinsStruct + 0x16) & 0xf) & 0xffff;\n        uartPin2BitConfig = (uartPin2Settings >> 3 & 1) << 4 | uartPin2Settings & 7;\n        uartPin2BitShift = (uartPin2Settings << 0x1a) >> 0x1e;\n        FUN_080040e8(uartPin1Settings,&uartPin2BitMask);\n        (&DAT_200006c0)[*(uartPinNumber *)(uartPinsStruct + 0x11)] = uartPinsStruct + 1;\n        uartPinsStruct[1] = *uartPinsStruct;\n        uartPinsStruct[2] = uartPinsStruct[0x12];\n        uartPinsStruct[3] = uartPinsStruct[0x13];\n        uartPinsStruct[4] = uartPinsStruct[0x14];\n        uartPinsStruct[5] = uartPinsStruct[0x15];\n        uartPinsStruct[6] = 0xc;\n        uartPinsStruct[7] = 0;\n        uartPinsStruct[8] = 0;\n        FUN_0800674e(uartPinsStruct + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_pins_08008078",
                "param_1": "uartPinsStruct",
                "iVar1": "uartPin1Peripheral",
                "iVar2": "uartPin2Peripheral",
                "uVar3": "uartPin1Settings",
                "uVar4": "uartPin2Settings",
                "local_20": "uartPin2BitMask",
                "local_1c": "uartPin2BitConfig",
                "local_18": "uartPin2BitShift",
                "local_14": "uartPin1Data",
                "byte": "uartPinNumber"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 temp;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    temp = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(temp,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "temp"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "check_connection_08008500",
            "code": "\nuint check_connection_08008500(undefined4 status_code,uint data)\n\n{\n  int initial_status;\n  int result;\n  uint index;\n  \n  initial_status = FUN_08003760();\n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (result = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != result))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    result = FUN_080067ac((&DAT_200006c0)[index],status_code,data & 0xffff,1000);\n    if (result == 0) {\n      return data;\n    }\n    result = FUN_08003760();\n  } while ((uint)(result - initial_status) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "check_connection_08008500",
                "param_1": "status_code",
                "param_2": "data",
                "iVar1": "initial_status",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "check_flag_080085b8",
            "code": "\nbool checkFlag_080085b8(int input)\n\n{\n  uint result;\n  \n  result = FUNC_08006b1c((&DAT_200006c0)[*(byte *)(input + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "check_flag_080085b8",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_desirable_value_080085dc",
            "code": "\nbool isDesirableValue_080085dc(int inputValue)\n\n{\n  uint result;\n  \n  result = FUNC_08006b1c((&DAT_200006c0)[*(byte *)(inputValue + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_desirable_value_080085dc",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_and_process_data_08008600",
            "code": "\nundefined4 extract_and_process_data_08008600(int input_data,undefined *output_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (input_data == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output_data = *(undefined *)(input_data + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(input_data + 0x44)],input_data + 0x45,1,&DAT_200006c0,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_and_process_data_08008600",
                "param_1": "input_data",
                "param_2": "output_data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int dataAddress,undefined4 newValue,undefined4 unused,undefined4 unused)\n\n{\n  int result;\n  uint index;\n  \n  if (dataAddress != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataAddress + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = newValue;\n      *(int *)(&DAT_20000684 + index * 4) = dataAddress;\n      FUN_08003f30((int)*(char *)(dataAddress + 0x5a),0,1,index,unused);\n      FUN_08003f94((int)*(char *)(dataAddress + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(dataAddress + 0x44)],dataAddress + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "dataAddress",
                "param_2": "newValue",
                "param_3": "unused",
                "param_4": "unused",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_data_08008694",
            "code": "\nvoid updateData_08008694(int dataPtr,undefined4 newValue)\n\n{\n  byte index;\n  \n  if (dataPtr != 0) {\n    index = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)index * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)index * 4) = dataPtr;\n    FUN_08003f30((int)*(char *)(dataPtr + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(dataPtr + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "index"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_index_080086e8",
            "code": "\nuint find_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_selected_function_0800870c",
            "code": "\nvoid executeSelectedFunction_0800870c(void)\n\n{\n  uint index;\n  \n  index = FUN_080086e8();\n  if (index < 5) {\n    (**(functionPointer **)(&DAT_20000670 + index * 4))(*(undefined4 *)(&DAT_20000684 + index * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_selected_function_0800870c",
                "uVar1": "index",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_function_08008730",
            "code": "\nvoid executeFunction_08008730(void)\n\n{\n  uint randomValue;\n  int result;\n  int address;\n  \n  randomValue = FUN_080086e8();\n  address = *(int *)(&DAT_200006ac + randomValue * 4);\n  if ((randomValue < 5) && (result = (**(code **)(&DAT_20000698 + randomValue * 4))(address), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(address + 0x44)],\n                 *(int *)(address + 100) + (uint)*(ushort *)(address + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "uVar1": "randomValue",
                "iVar2": "result",
                "iVar3": "address"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= stackBase) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackBase"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_error_code_08008840",
            "code": "\nerror_code get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_error_code_08008840",
                "undefined4": "error_code"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "set_block_size_08008846",
            "code": "\nundefined4 setBlockSize_08008846(undefined4 inputValue,int outputAddress)\n\n{\n  *(undefined4 *)(outputAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "set_block_size_08008846",
                "param_1": "inputValue",
                "param_2": "outputAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_flag_08008850",
            "code": "\nundefined4 initializeFlag_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_flag_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_08008854",
            "code": "\nundefined4 initialize_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_08008854"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_program_08008858",
            "code": "\nvoid initializeProgram_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_program_08008858",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "execute_function_0800885c",
            "code": "\nvoid execute_function_0800885c(undefined4 param,undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3)\n\n{\n  FUN_08008500(input_param_1,input_param_2,input_param_2,input_param_3,input_param_3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "execute_function_0800885c",
                "param_1": "param",
                "param_2": "input_param_1",
                "param_3": "input_param_2",
                "param_4": "input_param_3"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "check_return_value_0800887c",
            "code": "\nundefined4 check_return_value_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "check_return_value_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "process_data_08008880",
            "code": "\nuint processData_08008880(uint inputValue)\n\n{\n  bool isWithinRange;\n  char result;\n  uint outputValue;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isWithinRange = true;\n    }\n    else {\n      isWithinRange = false;\n    }\n  }\n  else {\n    isWithinRange = inputValue < 0x3c;\n  }\n  if (isWithinRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    result = (&DAT_0800a908)[inputValue];\n  }\n  else {\n    result = -1;\n  }\n  if (result == -1) {\n    outputValue = 0;\n  }\n  else {\n    outputValue = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return outputValue >> (0xc - DAT_20000088 & 0xff);\n      }\n      return outputValue << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return outputValue;\n}\n\n",
            "renaming": {
                "FUN_08008880": "process_data_08008880",
                "param_1": "inputValue",
                "bVar1": "isWithinRange",
                "cVar2": "result",
                "uVar3": "outputValue"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint inputIndex,uint inputData)\n\n{\n  int result1;\n  int lookupValue;\n  \n  if (inputIndex < 0x3c) {\n    lookupValue = (int)(char)(&DAT_0800a908)[inputIndex];\n  }\n  else {\n    lookupValue = -1;\n  }\n  if (lookupValue != -1) {\n    result1 = FUN_0800738a(lookupValue,&DAT_0800a6cc);\n    if (result1 == 0) {\n      FUN_08008990(inputIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputData = inputData << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputData = inputData >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (inputData < 0x80) {\n        FUN_08008a24(inputIndex,0);\n      }\n      else {\n        FUN_08008a24(inputIndex,1);\n      }\n    }\n    else {\n      result1 = FUN_08006b28(lookupValue,&DAT_200006d8);\n      if (result1 == 0) {\n        FUN_08006b3e(lookupValue,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputData = inputData << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputData = inputData >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(lookupValue,0x3e418,0xff,inputData,result1 == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "inputIndex",
                "param_2": "inputData",
                "iVar1": "result1",
                "iVar2": "lookupValue"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "handle_function_08008990",
            "code": "\nvoid handleFunction_08008990(uint inputIndex,undefined4 mode,undefined4 param3,undefined1 *param4)\n\n{\n  int result;\n  undefined1 *dataPtr;\n  int value;\n  \n  if (inputIndex < 0x3c) {\n    value = (int)(char)(&DAT_0800a908)[inputIndex];\n    dataPtr = &DAT_0800a908;\n  }\n  else {\n    value = -1;\n    dataPtr = param4;\n  }\n  if (value != -1) {\n    result = FUN_08006b28(value,&DAT_200006d8,param3,dataPtr,param4);\n    if (result != 0) {\n      result = FUN_0800738a(value,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(value);\n      }\n      FUN_08006b5c(value,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08007258(value,0);\n      break;\n    case 1:\n      FUN_08007258(value,1,0);\n      break;\n    case 2:\n      FUN_08007258(value,0,1);\n      break;\n    case 3:\n      FUN_08007258(value,0,2);\n    }\n    FUN_08006b3e(value,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "handle_function_08008990",
                "param_1": "inputIndex",
                "param_2": "mode",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "puVar2": "dataPtr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_data_08008a24",
            "code": "\nvoid processData_08008a24(uint inputIndex,undefined4 param2,undefined4 param3,undefined1 *dataPtr)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined1 *dataPtr2;\n  uint lookupValue;\n  \n  if (inputIndex < 0x3c) {\n    lookupValue = (uint)(char)(&DAT_0800a908)[inputIndex];\n    dataPtr2 = &DAT_0800a908;\n  }\n  else {\n    lookupValue = 0xffffffff;\n    dataPtr2 = dataPtr;\n  }\n  if ((lookupValue != 0xffffffff) &&\n     (result = FUN_08006b28(lookupValue,&DAT_200006ec,param3,dataPtr2,dataPtr), result != 0)) {\n    shiftedValue = FUN_08006b7c((lookupValue << 0x18) >> 0x1c);\n    FUN_080072d8(shiftedValue,1 << (lookupValue & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "dataPtr",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "dataPtr2",
                "uVar4": "lookupValue"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_value_and_process_08008a6c",
            "code": "\nchar checkValueAndProcess_08008a6c(uint value)\n\n{\n  char returnValue;\n  int result;\n  undefined4 shiftedValue;\n  uint index;\n  \n  if (value < 0x3c) {\n    index = (uint)(char)(&DAT_0800a908)[value];\n  }\n  else {\n    index = 0xffffffff;\n  }\n  if (index == 0xffffffff) {\n    returnValue = '\\0';\n  }\n  else {\n    result = FUN_08006b28(index,&DAT_200006ec);\n    if (result == 0) {\n      returnValue = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((index << 0x18) >> 0x1c);\n      returnValue = FUN_080072f0(shiftedValue,1 << (index & 0xf) & 0xffff);\n    }\n  }\n  if (returnValue != '\\0') {\n    returnValue = '\\x01';\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_value_and_process_08008a6c",
                "param_1": "value",
                "cVar1": "returnValue",
                "iVar2": "result",
                "uVar3": "shiftedValue",
                "uVar4": "index"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_program_08008abc",
            "code": "\nvoid initialize_program_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_program_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_remainder_08008afa",
            "code": "\nushort calculate_remainder_08008afa(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_remainder_08008afa",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_if_needed_08008b66",
            "code": "\nvoid updateDataIfNeeded_08008b66(int dataPointer)\n\n{\n  int errorCode;\n  ushort updatedIndex;\n  undefined newValue;\n  \n  errorCode = FUN_08008600(dataPointer,&newValue);\n  if ((errorCode == 0) &&\n     (updatedIndex = *(short *)(dataPointer + 0x60) + 1U & 0x3f, updatedIndex != *(ushort *)(dataPointer + 0x62))) {\n    *(undefined *)(*(int *)(dataPointer + 0x5c) + (uint)*(ushort *)(dataPointer + 0x60)) = newValue;\n    *(ushort *)(dataPointer + 0x60) = updatedIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_if_needed_08008b66",
                "param_1": "dataPointer",
                "iVar1": "errorCode",
                "uVar2": "updatedIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_memory_08008c20",
            "code": "\nvoid initializeMemory_08008c20(int memoryAddress)\n\n{\n  *(int *)(memoryAddress + 0x130) = memoryAddress + 0x11;\n  *(undefined2 *)(memoryAddress + 0x134) = 0;\n  *(undefined2 *)(memoryAddress + 0x136) = 0;\n  *(int *)(memoryAddress + 0x138) = memoryAddress + 0x51;\n  *(undefined2 *)(memoryAddress + 0x13c) = 0;\n  *(undefined2 *)(memoryAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_memory_08008c20",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "configure_hardware_serial_08008c44",
            "code": "\nvoid configureHardwareSerial_08008c44(int serialPort,undefined4 baudRate,byte options)\n\n{\n  uint var1;\n  byte optionFlags;\n  int dataBits;\n  code *jmpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = options;\n  optionFlags = options & 7;\n  if (optionFlags == 4) {\n    dataBits = 7;\n  }\n  else if (optionFlags == 6) {\n    dataBits = 8;\n  }\n  else if (optionFlags == 2) {\n    dataBits = 6;\n  }\n  else {\n    dataBits = 0;\n  }\n  if ((options & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    dataBits = dataBits + 1;\n  }\n  else if ((options & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    dataBits = dataBits + 1;\n  }\n  if ((options & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (dataBits == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (dataBits == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    dataBits = 0;\n  }\n  if (dataBits != 0) {\n    FUN_08008078(serialPort + 0xd4);\n    FUN_0800863c(serialPort + 0xd4,0x8008b67);\n    return;\n  }\n  jmpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (var1 < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[var1];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jmpTable)(0,var1,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "configure_hardware_serial_08008c44",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "options",
                "extraout_r1": "var1",
                "bVar1": "optionFlags",
                "iVar2": "dataBits",
                "UNRECOVERED_JUMPTABLE": "jmpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "update_data_08008d00",
            "code": "\nvoid updateData_08008d00(int inputPointer,uint value)\n\n{\n  undefined newValue;\n  code *jumpTable;\n  \n  if (value < 0x3c) {\n    newValue = (&DAT_0800a908)[value];\n  }\n  else {\n    newValue = 0xff;\n  }\n  *(undefined *)(inputPointer + 0x12d) = newValue;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "update_data_08008d00",
                "param_1": "inputPointer",
                "param_2": "value",
                "uVar1": "newValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_param_byte_by_index_08008d18",
            "code": "\nvoid setParamByteByIndex_08008d18(int index,uint length)\n\n{\n  undefined value;\n  \n  if (length < 0x3c) {\n    value = (&DAT_0800a908)[length];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(index + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_param_byte_by_index_08008d18",
                "param_1": "index",
                "param_2": "length",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_data_08008d30",
            "code": "\nundefined4 *\ninitializeData_08008d30(undefined4 *dataArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  dataArray[1] = 0;\n  dataArray[2] = 1000;\n  *dataArray = &PTR_LAB_08008ba4_1_0800aab8;\n  if (dataArray == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,param3,&DAT_20000700,param4);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(param2,&DAT_0800a81c);\n    *(undefined *)((int)dataArray + 0x12d) = result;\n    result = FUN_0800734a(param2,&DAT_0800a864);\n    *(undefined *)(dataArray + 0x4b) = result;\n  }\n  FUN_08008c20(dataArray);\n  return dataArray;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "dataArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_and_process_param_08008d8c",
            "code": "\nvoid check_and_process_param_08008d8c(int param_value_1,int param_value_2,undefined4 param_value_3,undefined4 param_value_4)\n\n{\n  if (param_value_1 != 1) {\n    return;\n  }\n  if (param_value_2 == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,param_value_3,0xffff,param_value_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_and_process_param_08008d8c",
                "param_1": "param_value_1",
                "param_2": "param_value_2",
                "param_3": "param_value_3",
                "param_4": "param_value_4"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "check_input_and_execute_08008e14",
            "code": "\nvoid check_input_and_execute_08008e14(int input_one,int input_two)\n\n{\n  if ((input_one == 1) && (input_two == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "check_input_and_execute_08008e14",
                "param_1": "input_one",
                "param_2": "input_two"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_interpolation_08008ef4",
            "code": "\nint calculate_interpolation_08008ef4(int value1,int value2,int value3,int value4,int value5)\n\n{\n  return (uint)((value5 - value4) * (value1 - value2)) / (uint)(value3 - value2) + value4;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_interpolation_08008ef4",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "param_5": "value5"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_system_08008f0e",
            "code": "\nvoid initializeSystem_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_system_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "execute_continuous_tasks_08008f1c",
            "code": "\nvoid executeContinuousTasks_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "execute_continuous_tasks_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint number)\n\n{\n  char setBitCount;\n  \n  setBitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    setBitCount = setBitCount + '\\x01';\n  }\n  return setBitCount;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "number",
                "cVar1": "setBitCount"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_parameters_08008f78",
            "code": "\nvoid initializeParameters_08008f78(int value1,int value2,undefined4 param3,undefined4 param4)\n\n{\n  if (value1 != 1) {\n    return;\n  }\n  if (value2 == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_parameters_08008f78",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "check_and_execute_callback_08009084",
            "code": "\nvoid checkAndExecuteCallback_08009084(int callbackData)\n\n{\n  int index;\n  \n  if (*(int *)(callbackData + 8) != 0) {\n    (**(code **)(callbackData + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    checkAndExecuteCallback_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "check_and_execute_callback_08009084",
                "param_1": "callbackData",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_function_08009094",
            "code": "\nvoid checkAndExecuteFunction_08009094(void)\n\n{\n  int index;\n  \n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_function_08009094",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "execute_function_080090c2",
            "code": "\nvoid executeFunction_080090c2(undefined4 inputParam,undefined4 outputParam)\n\n{\n  FUN_08009108(outputParam,inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "execute_function_080090c2",
                "param_1": "inputParam",
                "param_2": "outputParam"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "assertion_failed_msg_080090cc",
            "code": "\nvoid assertionFailedMsg_080090cc(undefined4 file,undefined4 line,char *expression,undefined4 function)\n\n{\n  undefined4 filePtr;\n  char *additionalMsg;\n  undefined8 result;\n  undefined4 functionPtr;\n  \n  filePtr = *(undefined4 *)(DAT_20000090 + 0xc);\n  functionPtr = function;\n  if (expression == (char *)0x0) goto LAB_080090f0;\n  additionalMsg = \", function: \";\n  do {\n    FUN_08009124(filePtr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,additionalMsg,expression,functionPtr);\n    result = FUN_08009b5c();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePtr = (undefined4)result;\nLAB_080090f0:\n    expression = \"\";\n    additionalMsg = expression;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "assertion_failed_msg_080090cc",
                "param_1": "file",
                "param_2": "line",
                "param_3": "expression",
                "param_4": "function",
                "uVar1": "filePtr",
                "pcVar2": "additionalMsg",
                "uVar3": "result",
                "uVar4": "functionPtr"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "left_shift_uint64_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong left_shift_uint64_08009108(undefined4 pointer_param,uint unsigned_int_param)\n\n{\n  return (ulonglong)unsigned_int_param << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "left_shift_uint64_08009108",
                "param_1": "pointer_param",
                "param_2": "unsigned_int_param"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "execute_function_08009124",
            "code": "\nvoid executeFunction_08009124(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 stackArg1;\n  undefined4 stackArg2;\n  \n  stackArg1 = arg3;\n  stackArg2 = arg4;\n  FUN_0800937c(DAT_20000090,arg1,arg2,&stackArg1,arg1,&stackArg1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "execute_function_08009124",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uStack_8": "stackArg1",
                "uStack_4": "stackArg2"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_functions_08009148",
            "code": "\nvoid executeFunctions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 inputData)\n\n{\n  FUN_08009270(DAT_20000090,inputData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_data_080091b0",
            "code": "\nvoid copyData_080091b0(int dest,undefined *src,int size)\n\n{\n  undefined *src_end;\n  undefined *dest_end;\n  \n  dest_end = (undefined *)(dest + -1);\n  src_end = src + size;\n  for (; src != src_end; src = src + 1) {\n    dest_end = dest_end + 1;\n    *dest_end = *src;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "size",
                "puVar1": "src_end",
                "puVar2": "dest_end"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "memset_with_value_080091c6",
            "code": "\nvoid memset_with_value_080091c6(undefined *destination,undefined value,int length)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + length;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "memset_with_value_080091c6",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "end_address"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "update_linked_list_080091d8",
            "code": "\nvoid updateLinkedList_080091d8(undefined4 *list,int size,undefined4 val1,undefined4 val2)\n\n{\n  int **temp;\n  int **ptr1;\n  int **ptr2;\n  int *ptr3;\n  int **ptr4;\n  int **ptr5;\n  \n  if (size == 0) {\n    return;\n  }\n  ptr5 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    ptr5 = (int **)((int)ptr5 + *(int *)(size + -4));\n  }\n  FUNC_08009f48();\n  ptr2 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    ptr5[1] = (int *)0x0;\n    ptr1 = temp;\n    DAT_2000098c = ptr5;\n  }\n  else {\n    ptr2 = DAT_2000098c;\n    if (ptr5 < DAT_2000098c) {\n      ptr1 = (int **)*ptr5;\n      ptr2 = (int **)((int)ptr5 + (int)ptr1);\n      if (DAT_2000098c == ptr2) {\n        ptr3 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        ptr2 = (int **)((int)ptr3 + (int)ptr1);\n        *ptr5 = (int *)ptr2;\n      }\n      ptr5[1] = (int *)DAT_2000098c;\n      DAT_2000098c = ptr5;\n    }\n    else {\n      do {\n        ptr4 = ptr2;\n        ptr2 = (int **)ptr4[1];\n        if (ptr2 == (int **)0x0) break;\n      } while (ptr2 <= ptr5);\n      ptr1 = (int **)*ptr4;\n      if ((int **)((int)ptr4 + (int)ptr1) == ptr5) {\n        ptr1 = (int **)((int)ptr1 + (int)*ptr5);\n        *ptr4 = (int *)ptr1;\n        if (ptr2 == (int **)((int)ptr4 + (int)ptr1)) {\n          ptr3 = *ptr2;\n          ptr2 = (int **)ptr2[1];\n          ptr1 = (int **)((int)ptr1 + (int)ptr3);\n          *ptr4 = (int *)ptr1;\n          ptr4[1] = (int *)ptr2;\n        }\n      }\n      else if (ptr5 < (int **)((int)ptr4 + (int)ptr1)) {\n        *list = 0xc;\n      }\n      else {\n        ptr1 = (int **)((int)ptr5 + (int)*ptr5);\n        if (ptr2 == ptr1) {\n          ptr3 = *ptr2;\n          ptr2 = (int **)ptr2[1];\n          ptr1 = (int **)((int)ptr3 + (int)*ptr5);\n          *ptr5 = (int *)ptr1;\n        }\n        ptr5[1] = (int *)ptr2;\n        ptr4[1] = (int *)ptr5;\n      }\n    }\n  }\n  FUNC_08009f4a(list,ptr1,ptr2,val2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "update_linked_list_080091d8",
                "param_1": "list",
                "param_2": "size",
                "param_3": "val1",
                "param_4": "val2",
                "extraout_r1": "temp",
                "ppiVar1": "ptr1",
                "ppiVar2": "ptr2",
                "piVar3": "ptr3",
                "ppiVar4": "ptr4",
                "ppiVar5": "ptr5"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *mem_pointer,uint mem_size)\n\n{\n  uint *curr_block;\n  int offset;\n  uint *next_block;\n  uint block_diff;\n  uint *prev_block;\n  uint new_mem_size;\n  \n  new_mem_size = (mem_size + 3 & 0xfffffffc) + 8;\n  if (new_mem_size < 0xc) {\n    new_mem_size = 0xc;\n  }\n  if (((int)new_mem_size < 0) || (new_mem_size < mem_size)) {\n    *mem_pointer = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    curr_block = DAT_2000098c;\n    prev_block = DAT_2000098c;\n    while (next_block = curr_block, next_block != (uint *)0x0) {\n      block_diff = *next_block - new_mem_size;\n      if (-1 < (int)block_diff) {\n        if (block_diff < 0xc) {\n          if (prev_block == next_block) {\n            curr_block = (uint *)prev_block[1];\n            DAT_2000098c = curr_block;\n          }\n          else {\n            curr_block = (uint *)next_block[1];\n          }\n          if (prev_block != next_block) {\n            prev_block[1] = (uint)curr_block;\n            prev_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_diff;\n          *(uint *)((int)next_block + block_diff) = new_mem_size;\n          prev_block = (uint *)((int)next_block + block_diff);\n        }\n        goto LAB_080092d4;\n      }\n      prev_block = next_block;\n      curr_block = (uint *)next_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(mem_pointer);\n    }\n    curr_block = (uint *)FUN_08009918(mem_pointer,new_mem_size);\n    if ((curr_block != (uint *)0xffffffff) &&\n       ((prev_block = (uint *)((int)curr_block + 3U & 0xfffffffc), curr_block == prev_block ||\n        (offset = FUN_08009918(mem_pointer,(int)prev_block - (int)curr_block), offset != -1)))) {\n      *prev_block = new_mem_size;\nLAB_080092d4:\n      FUNC_08009f4a(mem_pointer);\n      new_mem_size = (int)prev_block + 0xbU & 0xfffffff8;\n      offset = new_mem_size - (int)(prev_block + 1);\n      if (offset != 0) {\n        *(int *)((int)prev_block + offset) = -offset;\n        return new_mem_size;\n      }\n      return new_mem_size;\n    }\n    *mem_pointer = 0xc;\n    FUNC_08009f4a(mem_pointer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "mem_pointer",
                "param_2": "mem_size",
                "puVar1": "curr_block",
                "iVar2": "offset",
                "puVar3": "next_block",
                "uVar4": "block_diff",
                "puVar5": "prev_block",
                "uVar6": "new_mem_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint processInput_0800932c(int input_ptr,byte data_byte,byte **data_ptr)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint return_value;\n  \n  temp_var2 = data_ptr[2] + -1;\n  data_ptr[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)data_ptr[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)data_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *data_ptr;\n    *data_ptr = temp_var2 + 1;\n    *temp_var2 = data_byte;\n    return (uint)data_byte;\n  }\n  if ((input_ptr != 0) && (*(int *)(input_ptr + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (data_ptr == (byte **)&DAT_0800aba4) {\n    data_ptr = *(byte ***)(input_ptr + 4);\n  }\n  else if (data_ptr == (byte **)&DAT_0800abc4) {\n    data_ptr = *(byte ***)(input_ptr + 8);\n  }\n  else if (data_ptr == (byte **)&DAT_0800ab84) {\n    data_ptr = *(byte ***)(input_ptr + 0xc);\n  }\n  data_ptr[2] = data_ptr[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(data_ptr + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = data_ptr[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_08009a80(input_ptr,data_ptr,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    return_value = (uint)data_byte;\n    temp_var1 = (int)*data_ptr - (int)data_ptr[4];\n    if ((temp_var1 < (int)data_ptr[5]) || (temp_var1 = FUN_08009c7c(input_ptr,data_ptr), temp_var1 == 0)) {\n      data_ptr[2] = data_ptr[2] + -1;\n      temp_var2 = *data_ptr;\n      *data_ptr = temp_var2 + 1;\n      *temp_var2 = data_byte;\n      if ((byte *)(temp_var1 + 1) != data_ptr[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x1f)) {\n          return return_value;\n        }\n        if (return_value != 10) {\n          return return_value;\n        }\n      }\n      temp_var1 = FUN_08009c7c(input_ptr,data_ptr);\n      if (temp_var1 == 0) {\n        return return_value;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "input_ptr",
                "param_2": "data_byte",
                "param_3": "data_ptr",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "return_value"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "iterate_and_process_08009358",
            "code": "\nint iterateAndProcess_08009358(undefined4 input1,undefined4 input2,undefined *dataArray,int arraySize)\n\n{\n  int result;\n  undefined *endPointer;\n  int currentSize;\n  \n  endPointer = dataArray + arraySize;\n  currentSize = arraySize;\n  do {\n    if (dataArray == endPointer) {\n      return 0;\n    }\n    result = FUN_0800932c(input1,*dataArray,input2,arraySize,currentSize);\n    arraySize = result + 1;\n    dataArray = dataArray + 1;\n  } while (arraySize != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "iterate_and_process_08009358",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "dataArray",
                "param_4": "arraySize",
                "iVar1": "result",
                "puVar2": "endPointer",
                "iVar3": "currentSize"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "parse_format_string_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint parseFormatString_0800937c(int formatString,undefined4 *arguments,byte *outputBuffer,int *totalCharsWritten)\n\n{\n  int result;\n  int *ptr;\n  bool foundNumber;\n  byte *currentChar;\n  byte *prevChar;\n  int bytesWritten;\n  int tempVar;\n  int *argsPtr;\n  uint flags;\n  int precision;\n  undefined4 width;\n  int fieldWidth;\n  int totalBytesWritten;\n  byte conversionSpecifier;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined alignmentChar;\n  undefined4 tempVariable;\n  \n  argsPtr = totalCharsWritten;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (arguments == &DAT_0800aba4) {\n    arguments = *(undefined4 **)(formatString + 4);\n  }\n  else if (arguments == (undefined4 *)&DAT_0800abc4) {\n    arguments = *(undefined4 **)(formatString + 8);\n  }\n  else if (arguments == (undefined4 *)&DAT_0800ab84) {\n    arguments = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(arguments + 3) << 0x1c)) || (arguments[4] == 0)) &&\n     (tempVar = FUN_08009a80(formatString,arguments), tempVar != 0)) {\n    return -1;\n  }\n  totalBytesWritten = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  currentChar = outputBuffer;\nLAB_080093be:\n  prevChar = currentChar;\n  if (*prevChar != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  currentChar = prevChar + 1;\n  if (*prevChar != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  tempVar = (int)prevChar - (int)outputBuffer;\n  if (tempVar != 0) {\n    result = FUN_08009358(formatString,arguments,outputBuffer,tempVar);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(arguments + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytesWritten;\n    }\n    totalBytesWritten = totalBytesWritten + tempVar;\n  }\n  if (*prevChar == 0) goto LAB_08009568;\n  flags = 0;\n  fieldWidth = 0;\n  precision = -1;\n  width = 0;\n  alignmentChar = 0;\n  tempVariable = 0;\n  currentChar = prevChar + 1;\n  while( true ) {\n    tempVar = FUN_08009f2c(\"#-0+ \",*currentChar);\n    outputBuffer = currentChar + 1;\n    if (tempVar == 0) break;\n    flags = 1 << (tempVar + 0xf7ff54b0U & 0xff) | flags;\n    currentChar = outputBuffer;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    alignmentChar = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    alignmentChar = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    ptr = argsPtr + 1;\n    tempVar = *argsPtr;\n    argsPtr = ptr;\n    if (tempVar < 0) {\n      fieldWidth = -tempVar;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    foundNumber = false;\n    tempVar = fieldWidth;\n    outputBuffer = currentChar;\n    while( true ) {\n      if (9 < *outputBuffer - 0x30) break;\n      tempVar = tempVar * 10 + (*outputBuffer - 0x30);\n      foundNumber = true;\n      outputBuffer = outputBuffer + 1;\n    }\n    if (!foundNumber) goto LAB_080094a6;\n  }\n  fieldWidth = tempVar;\nLAB_080094a6:\n  if (*outputBuffer == 0x2e) {\n    if (outputBuffer[1] == 0x2a) {\n      outputBuffer = outputBuffer + 2;\n      ptr = argsPtr + 1;\n      precision = *argsPtr;\n      argsPtr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      foundNumber = false;\n      tempVar = 0;\n      precision = 0;\n      while( true ) {\n        outputBuffer = outputBuffer + 1;\n        if (9 < *outputBuffer - 0x30) break;\n        tempVar = tempVar * 10 + (*outputBuffer - 0x30);\n        foundNumber = true;\n      }\n      if (foundNumber) {\n        precision = tempVar;\n      }\n    }\n  }\n  tempVar = FUN_08009f2c(&DAT_0800ab56,*outputBuffer,3);\n  if (tempVar != 0) {\n    outputBuffer = outputBuffer + 1;\n    flags = flags | 0x40 << (tempVar + 0xf7ff54aaU & 0xff);\n  }\n  conversionSpecifier = *outputBuffer;\n  outputBuffer = outputBuffer + 1;\n  tempVar = FUN_08009f2c(\"efgEFG\",conversionSpecifier,6);\n  if (tempVar == 0) {\n    bytesWritten = FUN_08009698(formatString,&flags,arguments,0x8009359,&argsPtr);\n    if (bytesWritten == -1) goto LAB_08009568;\n  }\n  else {\n    argsPtr = (int *)(((int)argsPtr + 7U & 0xfffffff8) + 8);\n  }\n  totalBytesWritten = totalBytesWritten + bytesWritten;\n  currentChar = outputBuffer;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "parse_format_string_0800937c",
                "param_1": "formatString",
                "param_2": "arguments",
                "param_3": "outputBuffer",
                "param_4": "totalCharsWritten",
                "iVar1": "result",
                "piVar2": "ptr",
                "bVar3": "foundNumber",
                "pbVar4": "currentChar",
                "pbVar5": "prevChar",
                "unaff_r9": "bytesWritten",
                "iVar6": "tempVar",
                "local_8c": "argsPtr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "width",
                "local_7c": "fieldWidth",
                "local_74": "totalBytesWritten",
                "local_70": "conversionSpecifier",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "alignmentChar",
                "local_30": "tempVariable"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "process_data_080095a8",
            "code": "\nundefined4\nprocess_data_080095a8(undefined4 input,uint *data_array,uint *output_length,undefined4 param_4,code *callback_function)\n\n{\n  int loop_counter;\n  int callback_result;\n  uint max_length;\n  uint offset;\n  bool is_condition_met;\n  \n  max_length = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_length = data_array[2];\n  }\n  *output_length = max_length;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_length = max_length + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_length = *output_length + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (loop_counter = 0; loop_counter < (int)(data_array[3] - *output_length); loop_counter = loop_counter + 1) {\n      callback_result = (*callback_function)(input,param_4,(int)data_array + 0x19,1);\n      if (callback_result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_length = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_length != 0) {\n    max_length = 1;\n  }\n  offset = max_length;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_length + 0x43) = 0x30;\n    offset = max_length + 2;\n    *(undefined *)((int)data_array + max_length + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  loop_counter = (*callback_function)(input,param_4,(int)data_array + 0x43,offset);\n  if (loop_counter != -1) {\n    max_length = data_array[3];\n    is_condition_met = (*data_array & 6) != 4;\n    if (is_condition_met) {\n      max_length = 0;\n    }\n    offset = 0;\n    if (!is_condition_met) {\n      max_length = max_length - *output_length;\n    }\n    if (!is_condition_met) {\n      max_length = max_length & ~((int)max_length >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_length = max_length + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (max_length == offset) {\n        return 0;\n      }\n      loop_counter = (*callback_function)(input,param_4,(int)data_array + 0x1a,1);\n      if (loop_counter == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "process_data_080095a8",
                "param_1": "input",
                "param_2": "data_array",
                "param_3": "output_length",
                "param_5": "callback_function",
                "iVar1": "loop_counter",
                "iVar2": "callback_result",
                "uVar3": "max_length",
                "uVar4": "offset",
                "bVar5": "is_condition_met"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "format_number_08009698",
            "code": "\nuint formatNumber_08009698(undefined4 context,uint *number,undefined4 format,code *output,uint **outputIndex)\n\n{\n  byte firstChar;\n  int result;\n  uint *ptr;\n  int status;\n  char *hexadecimalDigits;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value;\n  uint formatLength;\n  char *formattedNumber;\n  char *numberStr;\n  uint parsedFormat [2];\n  \n  firstChar = *(byte *)(number + 6);\n  numberStr = (char *)((int)number + 0x43);\n  if (firstChar != 0x6e) {\n    if (firstChar < 0x6f) {\n      if (firstChar != 99) {\n        if (firstChar < 100) {\n          if (firstChar == 0) goto LAB_08009852;\n          if (firstChar != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)number + 0x45) = 0x58;\n          hexadecimalDigits = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *number;\n          ptr = *outputIndex;\n          *outputIndex = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *number = base | 0x20;\n          }\n          if (value == 0) {\n            *number = *number & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((int)number + 0x43) = 0;\n        }\n        else {\n          if ((firstChar != 100) && (firstChar != 0x69)) goto LAB_080096c8;\n          value = *number;\n          ptr = *outputIndex;\n          if ((value & 0x80) == 0) {\n            *outputIndex = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_080096e8;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *outputIndex = ptr + 1;\nLAB_080096e8:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)number + 0x43) = 0x2d;\n          }\n          hexadecimalDigits = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        formatLength = number[1];\n        number[2] = formatLength;\n        formattedNumber = numberStr;\n        if ((int)formatLength < 0) {\n          if (value != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)number + 0x42) = *hexadecimalDigits;\n          formattedNumber = (char *)((int)number + 0x42);\n        }\n        else {\n          *number = *number & 0xfffffffb;\n          if (value == 0) {\n            if (formatLength != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              formatLength = value / base;\n              formattedNumber = formattedNumber + -1;\n              *formattedNumber = hexadecimalDigits[value - base * formatLength];\n              value = formatLength;\n            } while (formatLength != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*number << 0x1f) < 0)) && ((int)number[1] <= (int)number[4]))\n        {\n          formattedNumber[-1] = '0';\n          formattedNumber = formattedNumber + -1;\n        }\n        number[4] = (int)numberStr - (int)formattedNumber;\n        numberStr = formattedNumber;\n        goto LAB_080097be;\n      }\n      ptr = *outputIndex;\n      *outputIndex = ptr + 1;\n      *(char *)((int)number + 0x42) = (char)*ptr;\nLAB_08009728:\n      numberStr = (char *)((int)number + 0x42);\n      value = 1;\n    }\n    else {\n      if (firstChar != 0x73) {\n        if (firstChar < 0x74) {\n          if (firstChar == 0x6f) {\nLAB_0800974e:\n            value = *number;\n            ptr = *outputIndex;\n            if ((value & 0x80) == 0) {\n              *outputIndex = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_0800975c;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *outputIndex = ptr + 1;\nLAB_0800975c:\n              value = *ptr;\n            }\n            if (firstChar == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hexadecimalDigits = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (firstChar == 0x70) {\n            *number = *number | 0x20;\nLAB_0800970e:\n            hexadecimalDigits = \"0123456789abcdef\";\n            *(undefined *)((int)number + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (firstChar == 0x75) goto LAB_0800974e;\n          if (firstChar == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)number + 0x42) = firstChar;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*outputIndex;\n      *outputIndex = (uint *)(ppcVar8 + 1);\n      numberStr = *ppcVar8;\n      result = FUN_08009f2c(numberStr,0,number[1]);\n      if (result != 0) {\n        number[1] = result - (int)numberStr;\n      }\n      value = number[1];\n    }\n    number[4] = value;\n    *(undefined *)((int)number + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  value = *number;\n  ppuVar7 = (uint **)*outputIndex;\n  base = number[5];\n  if ((value & 0x80) == 0) {\n    *outputIndex = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((value & 0x40) == 0) goto LAB_0800983e;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *outputIndex = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_0800983e:\n    *ptr = base;\n  }\nLAB_08009852:\n  number[4] = 0;\nLAB_080097be:\n  result = FUN_080095a8(context,number,parsedFormat,format,output);\n  if ((result == -1) || (result = (*output)(context,format,numberStr,number[4]), result == -1)) {\nLAB_080097d2:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*number << 0x1e) < 0) {\n      for (result = 0; result < (int)(number[3] - parsedFormat[0]); result = result + 1) {\n        status = (*output)(context,format,(int)number + 0x19,1);\n        if (status == -1) goto LAB_080097d2;\n      }\n    }\n    value = number[3];\n    if ((int)number[3] < (int)parsedFormat[0]) {\n      value = parsedFormat[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08009698": "format_number_08009698",
                "param_1": "context",
                "param_2": "number",
                "param_3": "format",
                "param_4": "output",
                "param_5": "outputIndex",
                "bVar1": "firstChar",
                "iVar2": "result",
                "puVar3": "ptr",
                "iVar4": "status",
                "pcVar5": "hexadecimalDigits",
                "uVar6": "base",
                "uVar9": "value",
                "uVar10": "formatLength",
                "pcVar11": "formattedNumber",
                "pcVar12": "numberStr",
                "local_24": "parsedFormat"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_and_call_function_080098d8",
            "code": "\nvoid initializeAndCallFunction_080098d8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int dataAddress;\n  undefined4 localVar;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  \n  dataAddress = DAT_20000090;\n  localVar = arg1;\n  localVar1 = arg2;\n  localVar2 = arg3;\n  localVar3 = arg4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataAddress,*(undefined4 *)(dataAddress + 8),arg1,&localVar1,localVar,&localVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_and_call_function_080098d8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "dataAddress",
                "uVar2": "localVar",
                "uStack_c": "localVar1",
                "uStack_8": "localVar2",
                "uStack_4": "localVar3"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "process_data_08009908",
            "code": "\nint processData_08009908(int inputValue,uint count)\n\n{\n  undefined4 dataOffset;\n  int result;\n  uint comparisonResult;\n  \n  dataOffset = DAT_20000090;\n  if (inputValue != 0) {\n    if (count == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      comparisonResult = FUN_0800a154();\n      result = inputValue;\n      if ((comparisonResult < count) && (result = FUN_08009270(dataOffset,count), result != 0)) {\n        FUN_080091b0(result,inputValue,count);\n        FUN_080091d8(dataOffset,inputValue);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,count,count,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "process_data_08009908",
                "param_1": "inputValue",
                "param_2": "count",
                "uVar1": "dataOffset",
                "iVar2": "result",
                "uVar3": "comparisonResult"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "initialize_data_08009918",
            "code": "\nvoid initializeData_08009918(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008804(input);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "initialize_data_08009918",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_char_in_string_08009938",
            "code": "\nchar * find_char_in_string_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_char_in_string_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_with_limit_08009954",
            "code": "\nvoid copyStringWithLimit_08009954(char *destination,char *source,int limit)\n\n{\n  char currentCharacter;\n  int remainingCharacters;\n  char *destPtr;\n  \n  do {\n    destPtr = destination;\n    remainingCharacters = limit;\n    if (remainingCharacters == 0) {\n      return;\n    }\n    currentCharacter = *source;\n    destination = destPtr + 1;\n    *destPtr = currentCharacter;\n    source = source + 1;\n    limit = remainingCharacters + -1;\n  } while (currentCharacter != '\\0');\n  for (; destination != destPtr + remainingCharacters; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_with_limit_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "limit",
                "cVar1": "currentCharacter",
                "iVar2": "remainingCharacters",
                "pcVar3": "destPtr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_index_0800997e",
            "code": "\nint findLastIndex_0800997e(int array,int size,undefined4 param_3,undefined4 param_4)\n\n{\n  int index;\n  int lastIndex;\n  \n  if (size != 0) {\n    lastIndex = 0;\n    while (index = FUN_08009938(array,size,param_3,array,param_4), index != 0) {\n      array = index + 1;\n      lastIndex = index;\n    }\n    return lastIndex;\n  }\n  lastIndex = FUN_08009938();\n  return lastIndex;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_index_0800997e",
                "param_1": "array",
                "param_2": "size",
                "iVar1": "index",
                "iVar2": "lastIndex"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *source_string,char *target_string)\n\n{\n  char *current_source_char;\n  char *current_target_char;\n  char *temp_target_char;\n  \n  if (*source_string == '\\0') {\n    if (*target_string != '\\0') {\n      source_string = (char *)0x0;\n    }\n    return source_string;\n  }\n  do {\n    current_source_char = source_string;\n    if (*current_source_char == '\\0') {\n      return (char *)0x0;\n    }\n    temp_target_char = target_string + -1;\n    current_target_char = current_source_char + -1;\n    do {\n      temp_target_char = temp_target_char + 1;\n      if (*temp_target_char == '\\0') {\n        return current_source_char;\n      }\n      current_target_char = current_target_char + 1;\n      source_string = current_source_char + 1;\n    } while (*current_target_char == *temp_target_char);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "source_string",
                "param_2": "target_string",
                "pcVar1": "current_source_char",
                "pcVar2": "current_target_char",
                "pcVar3": "temp_target_char"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "update_param_08009a80",
            "code": "\nuint updateParam_08009a80(undefined4 *outputParam,undefined4 *inputParam)\n\n{\n  int dataPtr;\n  uint result;\n  ushort ushortValue;\n  \n  dataPtr = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (inputParam == &DAT_0800aba4) {\n    inputParam = *(undefined4 **)(dataPtr + 4);\n  }\n  else if (inputParam == (undefined4 *)&DAT_0800abc4) {\n    inputParam = *(undefined4 **)(dataPtr + 8);\n  }\n  else if (inputParam == (undefined4 *)&DAT_0800ab84) {\n    inputParam = *(undefined4 **)(dataPtr + 0xc);\n  }\n  ushortValue = *(ushort *)(inputParam + 3);\n  result = (uint)ushortValue;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *outputParam = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)inputParam[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputParam[0xd] != inputParam + 0x11) {\n          FUN_080091d8(outputParam);\n        }\n        inputParam[0xd] = 0;\n      }\n      *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) & 0xffdb;\n      inputParam[1] = 0;\n      *inputParam = inputParam[4];\n    }\n    *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) | 8;\n  }\n  if ((inputParam[4] == 0) && ((*(ushort *)(inputParam + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(outputParam,inputParam);\n  }\n  ushortValue = *(ushort *)(inputParam + 3);\n  result = ushortValue & 1;\n  if ((ushortValue & 1) == 0) {\n    if (-1 < (int)((uint)ushortValue << 0x1e)) {\n      result = inputParam[5];\n    }\n    inputParam[2] = result;\n  }\n  else {\n    inputParam[2] = 0;\n    inputParam[6] = -inputParam[5];\n  }\n  if (inputParam[4] == 0) {\n    ushortValue = *(ushort *)(inputParam + 3);\n    result = (int)(short)ushortValue & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(inputParam + 3) = ushortValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "update_param_08009a80",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "dataPtr",
                "uVar2": "result",
                "uVar3": "ushortValue"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "handle_binary_processing_08009b5c",
            "code": "\nvoid handleBinaryProcessing_08009b5c(void)\n\n{\n  uint *pointer1;\n  int variable2;\n  int *pointer3;\n  int *pointer4;\n  uint variable5;\n  ushort variable6;\n  int variable7;\n  code *pointer8;\n  int variable9;\n  uint variable10;\n  code *jumptable0;\n  bool boolean11;\n  undefined8 variable12;\n  \n  FUN_08009fe8(6);\n  jumptable0 = (code *)0x8009b6b;\n  variable12 = FUN_08008868(1);\n  pointer3 = (int *)((ulonglong)variable12 >> 0x20);\n  pointer1 = (uint *)variable12;\n  variable6 = *(ushort *)(pointer3 + 3);\n  variable5 = (uint)variable6;\n  if ((int)(variable5 << 0x1c) < 0) {\n    variable2 = pointer3[4];\n    if (variable2 != 0) {\n      variable7 = variable5 << 0x1e;\n      boolean11 = variable7 != 0;\n      if (boolean11) {\n        variable7 = 0;\n      }\n      variable9 = *pointer3;\n      if (!boolean11) {\n        variable7 = pointer3[5];\n      }\n      *pointer3 = variable2;\n      pointer3[2] = variable7;\n      for (variable9 = variable9 - variable2; 0 < variable9; variable9 = variable9 - variable7) {\n        variable7 = (*(code *)pointer3[10])(pointer1,pointer3[8],variable2,variable9);\n        if (variable7 < 1) {\n          variable6 = *(ushort *)(pointer3 + 3);\n          goto LAB_08009c62;\n        }\n        variable2 = variable2 + variable7;\n      }\n    }\n  }\n  else if (((0 < pointer3[1]) || (0 < pointer3[0x10])) &&\n          (pointer8 = (code *)pointer3[0xb], pointer8 != (code *)0x0)) {\n    variable10 = *pointer1;\n    *pointer1 = 0;\n    if ((variable6 & 0x1000) == 0) {\n      variable2 = (*pointer8)(pointer1,pointer3[8],variable5 & 0x1000,1);\n      if ((variable2 == -1) && (variable5 = *pointer1, variable5 != 0)) {\n        if ((variable5 != 0x1d) && (variable5 != 0x16)) {\n          *(ushort *)(pointer3 + 3) = *(ushort *)(pointer3 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumptable0)();\n          return;\n        }\n        *pointer1 = variable10;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      variable2 = pointer3[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer3 + 3) << 0x1d) < 0) &&\n       (variable2 = variable2 - pointer3[1], pointer3[0xd] != 0)) {\n      variable2 = variable2 - pointer3[0x10];\n    }\n    variable2 = (*(code *)pointer3[0xb])(pointer1,pointer3[8],variable2,0);\n    variable6 = *(ushort *)(pointer3 + 3);\n    if ((variable2 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(pointer3 + 3) = variable6 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumptable0)(0xffffffff);\n      return;\n    }\n    pointer3[1] = 0;\n    *pointer3 = pointer3[4];\n    if (((int)((uint)variable6 << 0x13) < 0) && ((variable2 != -1 || (*pointer1 == 0)))) {\n      pointer3[0x15] = variable2;\n    }\n    pointer4 = (int *)pointer3[0xd];\n    *pointer1 = variable10;\n    if (pointer4 != (int *)0x0) {\n      if (pointer4 != pointer3 + 0x11) {\n        FUN_080091d8(pointer1);\n      }\n      pointer3[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumptable0)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable0)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "handle_binary_processing_08009b5c",
                "puVar1": "pointer1",
                "iVar2": "variable2",
                "piVar3": "pointer3",
                "piVar4": "pointer4",
                "uVar5": "variable5",
                "uVar6": "variable6",
                "iVar7": "variable7",
                "pcVar8": "pointer8",
                "iVar9": "variable9",
                "uVar10": "variable10",
                "UNRECOVERED_JUMPTABLE_00": "jumptable0",
                "bVar11": "boolean11",
                "uVar12": "variable12"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "process_data_08009c7c",
            "code": "\nundefined4 processData_08009c7c(uint *dataPtr,int *configPtr)\n\n{\n  undefined4 returnValue;\n  int tempVar;\n  int *tempPtr;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaffected_r4;\n  undefined4 unaffected_r5;\n  code *callbackFunc;\n  int iVar8;\n  uint uVar9;\n  code *jumpTable;\n  bool boolVar;\n  \n  if (configPtr[4] != 0) {\n    if ((dataPtr != (uint *)0x0) && (dataPtr[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (configPtr == &DAT_0800aba4) {\n      configPtr = (int *)dataPtr[1];\n    }\n    else if (configPtr == (int *)&DAT_0800abc4) {\n      configPtr = (int *)dataPtr[2];\n    }\n    else if (configPtr == (int *)&DAT_0800ab84) {\n      configPtr = (int *)dataPtr[3];\n    }\n    if (*(short *)(configPtr + 3) != 0) {\n      uVar5 = *(ushort *)(configPtr + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        tempVar = configPtr[4];\n        if (tempVar != 0) {\n          iVar6 = uVar4 << 0x1e;\n          boolVar = iVar6 != 0;\n          if (boolVar) {\n            iVar6 = 0;\n          }\n          iVar8 = *configPtr;\n          if (!boolVar) {\n            iVar6 = configPtr[5];\n          }\n          *configPtr = tempVar;\n          configPtr[2] = iVar6;\n          for (iVar8 = iVar8 - tempVar; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)configPtr[10])(dataPtr,configPtr[8],tempVar,iVar8,unaffected_r4,unaffected_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(configPtr + 3);\n              goto LAB_08009c62;\n            }\n            tempVar = tempVar + iVar6;\n          }\n        }\n      }\n      else if (((0 < configPtr[1]) || (0 < configPtr[0x10])) &&\n              (callbackFunc = (code *)configPtr[0xb], callbackFunc != (code *)0x0)) {\n        uVar9 = *dataPtr;\n        *dataPtr = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          tempVar = (*callbackFunc)(dataPtr,configPtr[8],uVar4 & 0x1000,1);\n          if ((tempVar == -1) && (uVar4 = *dataPtr, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(configPtr + 3) = *(ushort *)(configPtr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *dataPtr = uVar9;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          tempVar = configPtr[0x15];\n        }\n        if (((int)((uint)*(ushort *)(configPtr + 3) << 0x1d) < 0) &&\n           (tempVar = tempVar - configPtr[1], configPtr[0xd] != 0)) {\n          tempVar = tempVar - configPtr[0x10];\n        }\n        tempVar = (*(code *)configPtr[0xb])(dataPtr,configPtr[8],tempVar,0);\n        uVar5 = *(ushort *)(configPtr + 3);\n        if ((tempVar == -1) &&\n           ((0x1d < *dataPtr || (-1 < (int)((0x20400001U >> (*dataPtr & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(configPtr + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        configPtr[1] = 0;\n        *configPtr = configPtr[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((tempVar != -1 || (*dataPtr == 0)))) {\n          configPtr[0x15] = tempVar;\n        }\n        tempPtr = (int *)configPtr[0xd];\n        *dataPtr = uVar9;\n        if (tempPtr != (int *)0x0) {\n          if (tempPtr != configPtr + 0x11) {\n            FUN_080091d8(dataPtr);\n          }\n          configPtr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "param_1": "dataPtr",
                "param_2": "configPtr",
                "uVar1": "returnValue",
                "iVar2": "tempVar",
                "piVar3": "tempPtr",
                "unaff_r4": "unaffected_r4",
                "unaff_r5": "unaffected_r5",
                "pcVar7": "callbackFunc",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "boolVar"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_data_08009cdc",
            "code": "\nvoid initializeData_08009cdc(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[25] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080091c6(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x800a021;\n  data[10] = 0x800a043;\n  data[11] = 0x800a07b;\n  data[12] = LAB_0800a09e_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_data_08009cdc",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[1]": "data[1]",
                "param_1[2]": "data[2]",
                "param_1[0x19]": "data[25]",
                "param_1[4]": "data[4]",
                "param_1[5]": "data[5]",
                "param_1[6]": "data[6]",
                "param_1[8]": "data[8]",
                "param_1[9]": "data[9]",
                "param_1[10]": "data[10]",
                "param_1[0xb]": "data[11]",
                "param_1[0xc]": "data[12]",
                "&LAB_0800a09e_1": "LAB_0800a09e_1"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_08009d24",
            "code": "\nundefined4 * initializeData_08009d24(undefined4 dataPointer,int numElements)\n\n{\n  undefined4 *newDataPointer;\n  int offset;\n  \n  offset = (numElements + -1) * 0x68;\n  newDataPointer = (undefined4 *)FUN_08009270(dataPointer,offset + 0x74);\n  if (newDataPointer != (undefined4 *)0x0) {\n    *newDataPointer = 0;\n    newDataPointer[1] = numElements;\n    newDataPointer[2] = newDataPointer + 3;\n    FUN_080091c6(newDataPointer + 3,0,offset + 0x68);\n  }\n  return newDataPointer;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_08009d24",
                "param_1": "dataPointer",
                "param_2": "numElements",
                "puVar1": "newDataPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *dataPointer)\n\n{\n  undefined4 returnValue;\n  undefined4 *flagPointer;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    flagPointer = &DAT_20000094;\n    dataPointer[10] = &LAB_08009cd0_1;\n    if (dataPointer == &DAT_20000094) {\n      flagPointer = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_20000094) {\n      dataPointer[6] = flagPointer;\n    }\n    returnValue = FUN_08009db0();\n    dataPointer[1] = returnValue;\n    returnValue = FUN_08009db0(dataPointer);\n    dataPointer[2] = returnValue;\n    returnValue = FUN_08009db0(dataPointer);\n    dataPointer[3] = returnValue;\n    FUN_08009cdc(dataPointer[1],4,0);\n    FUN_08009cdc(dataPointer[2],9,1);\n    FUN_08009cdc(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "dataPointer",
                "uVar1": "returnValue",
                "puVar2": "flagPointer"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "initialize_data_08009db0",
            "code": "\nint * initializeData_08009db0(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentPtr1;\n  int *currentPtr2;\n  int **dataPtr;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  dataPtr = (int **)&DAT_200000dc;\n  do {\n    currentPtr2 = dataPtr[2];\n    currentPtr1 = dataPtr[1];\n    while (currentPtr1 = (int *)((int)currentPtr1 + -1), -1 < (int)currentPtr1) {\n      if (*(short *)(currentPtr2 + 3) == 0) {\n        *(undefined2 *)((int)currentPtr2 + 0xe) = 0xffff;\n        currentPtr2[0x19] = 0;\n        *(undefined2 *)(currentPtr2 + 3) = 1;\n        *currentPtr2 = 0;\n        currentPtr2[2] = 0;\n        currentPtr2[1] = 0;\n        currentPtr2[4] = 0;\n        currentPtr2[5] = 0;\n        currentPtr2[6] = 0;\n        FUN_080091c6(currentPtr2 + 0x17,0,8,1,param4);\n        currentPtr2[0xd] = 0;\n        currentPtr2[0xe] = 0;\n        currentPtr2[0x12] = 0;\n        currentPtr2[0x13] = 0;\n        return currentPtr2;\n      }\n      currentPtr2 = currentPtr2 + 0x1a;\n    }\n    if (*dataPtr == (int *)0x0) {\n      currentPtr1 = (int *)FUN_08009d24(result,4);\n      *dataPtr = currentPtr1;\n      if (currentPtr1 == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataPtr = (int **)*dataPtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "initialize_data_08009db0",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentPtr1",
                "piVar2": "currentPtr2",
                "ppiVar3": "dataPtr"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_file_permissions_08009e64",
            "code": "\nundefined4 checkFilePermissions_08009e64(undefined4 param1,int fileMetadata,undefined4 *outputFlag,uint *isExecutable)\n\n{\n  int returnValue;\n  undefined4 flagValue;\n  undefined tempBuffer [4];\n  uint fileAttributes;\n  \n  if ((*(short *)(fileMetadata + 0xe) < 0) ||\n     (returnValue = FUN_0800a0ec(param1,(int)*(short *)(fileMetadata + 0xe),tempBuffer), returnValue < 0)) {\n    *isExecutable = 0;\n    if ((int)((uint)*(ushort *)(fileMetadata + 0xc) << 0x18) < 0) {\n      flagValue = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *isExecutable = (uint)((fileAttributes & 0xf000) == 0x2000);\n  }\n  flagValue = 0x400;\nLAB_08009ea4:\n  *outputFlag = flagValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_file_permissions_08009e64",
                "param_1": "param1",
                "param_2": "fileMetadata",
                "param_3": "outputFlag",
                "param_4": "isExecutable",
                "auStack_4c": "tempBuffer",
                "local_48": "fileAttributes",
                "iVar1": "returnValue",
                "uVar2": "flagValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "reverse_and_improve_08009eac",
            "code": "\nvoid reverse_and_improve_08009eac(int input_value,int *output_array)\n\n{\n  ushort result;\n  int check_result;\n  int temp_value_1;\n  int *temp_value_2;\n  \n  if (-1 < (int)((uint)*(ushort *)(output_array + 3) << 0x1e)) {\n    temp_value_1 = input_value;\n    temp_value_2 = output_array;\n    result = FUN_08009e64(input_value,output_array,&temp_value_1,&temp_value_2);\n    check_result = FUN_08009270(input_value,temp_value_1);\n    if (check_result != 0) {\n      *(undefined **)(input_value + 0x28) = &LAB_08009cd0_1;\n      *output_array = check_result;\n      *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) | 0x80;\n      output_array[4] = check_result;\n      output_array[5] = temp_value_1;\n      if ((temp_value_2 != (int *)0x0) &&\n         (check_result = FUN_0800a110(input_value,(int)*(short *)((int)output_array + 0xe)), check_result != 0)) {\n        *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(output_array + 3) = result | *(ushort *)(output_array + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(output_array + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) & 0xfffc | 2;\n  }\n  *output_array = (int)output_array + 0x47;\n  output_array[4] = (int)output_array + 0x47;\n  output_array[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "reverse_and_improve_08009eac",
                "param_1": "input_value",
                "param_2": "output_array",
                "uVar1": "result",
                "iVar2": "check_result",
                "local_18": "temp_value_1",
                "local_14": "temp_value_2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *input_string,char target_char,int string_length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char;\n    if (next_char == input_string + string_length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != target_char);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "input_string",
                "param_2": "target_char",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_function_08009fe8",
            "code": "\nint executeFunction_08009fe8(uint index)\n\n{\n  int *functionList;\n  undefined4 result;\n  int existingFunction;\n  code *currentFunction;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 returnAddress;\n  undefined4 *functionListPointer;\n  \n  functionList = DAT_20000090;\n  functionListPointer = &DAT_20000090;\n  if (0x1f < index) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  existingFunction = DAT_20000090[0x11];\n  if ((existingFunction != 0) && (currentFunction = *(code **)(existingFunction + index * 4), currentFunction != (code *)0x0)) {\n    if (currentFunction != (code *)0x1) {\n      if (currentFunction == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(existingFunction + index * 4) = 0;\n      (*currentFunction)(index);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  existingFunction = FUN_0800886c(result,index,index,0,functionListPointer,constant1,constant2,returnAddress);\n  if ((existingFunction == -1) && (DAT_20000a38 != 0)) {\n    *functionList = DAT_20000a38;\n  }\n  return existingFunction;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "param_1": "index",
                "piVar1": "functionList",
                "uVar2": "result",
                "iVar3": "existingFunction",
                "pcVar4": "currentFunction",
                "unaff_r4": "constant1",
                "unaff_r5": "constant2",
                "in_lr": "returnAddress",
                "puVar5": "functionListPointer"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_return_value_thunk_0800887c",
            "code": "\nuint32_t getReturnValue_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c",
                "undefined4": "uint32_t"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_memory_0800a020",
            "code": "\nvoid updateMemory_0800a020(undefined4 data,int ptr)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(data,(int)*(short *)(ptr + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(ptr + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(ptr + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(ptr + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(ptr + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_memory_0800a020",
                "param_1": "data",
                "param_2": "ptr",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "extract_value_and_update_0800a042",
            "code": "\nvoid extractValueAndUpdate_0800a042(int *arrayPointer,int structPointer,undefined4 value1,undefined4 value2)\n\n{\n  int returnValue;\n  undefined4 unused_register_4;\n  undefined4 unused_register_5;\n  undefined4 unused_register_lr;\n  \n  if ((int)((uint)*(ushort *)(structPointer + 0xc) << 0x17) < 0) {\n    FUN_0800a130(arrayPointer,(int)*(short *)(structPointer + 0xe),0,2);\n  }\n  *(ushort *)(structPointer + 0xc) = *(ushort *)(structPointer + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  returnValue = FUN_0800885c((int)*(short *)(structPointer + 0xe),value1,value2,value2,value2,unused_register_4,\n                       unused_register_5,unused_register_lr);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *arrayPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "extract_value_and_update_0800a042",
                "param_1": "arrayPointer",
                "param_2": "structPointer",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "returnValue",
                "unaff_r4": "unused_register_4",
                "unaff_r5": "unused_register_5",
                "in_lr": "unused_register_lr"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_flag_0800a07a",
            "code": "\nvoid updateFlag_0800a07a(undefined4 param1,int param2)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isResultMinusOne;\n  \n  result = FUN_0800a130(param1,(int)*(short *)(param2 + 0xe));\n  isResultMinusOne = result == -1;\n  if (isResultMinusOne) {\n    updatedValue = *(ushort *)(param2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(param2 + 0x54) = result;\n    updatedValue = *(ushort *)(param2 + 0xc) | 0x1000;\n  }\n  if (isResultMinusOne) {\n    *(ushort *)(param2 + 0xc) = updatedValue;\n  }\n  if (!isResultMinusOne) {\n    *(ushort *)(param2 + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_flag_0800a07a",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isResultMinusOne"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "update_param1_if_error_occurs_0800a0ec",
            "code": "\nvoid updateParam1IfErrorOccurs_0800a0ec(int *outputPointer,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008846(inputParam2,inputParam3,inputParam3,0,inputParam4);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "update_param1_if_error_occurs_0800a0ec",
                "param_1": "outputPointer",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "check_and_assign_value_0800a110",
            "code": "\nvoid checkAndAssignValue_0800a110(int *output_ptr,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008850(input_value);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output_ptr = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "check_and_assign_value_0800a110",
                "param_1": "output_ptr",
                "param_2": "input_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "extract_error_code_0800a130",
            "code": "\nvoid extractErrorCode_0800a130(int *error,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008854(param2,param3,param4,param4,param4);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *error = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "extract_error_code_0800a130",
                "param_1": "error",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_sum_0800a154",
            "code": "\nint calculateSum_0800a154(undefined4 initialValue,int arrayOffset)\n\n{\n  int sum;\n  \n  sum = *(int *)(arrayOffset + -4) + -4;\n  if (*(int *)(arrayOffset + -4) < 0) {\n    sum = sum + *(int *)(arrayOffset + sum);\n  }\n  return sum;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_sum_0800a154",
                "param_1": "initialValue",
                "param_2": "arrayOffset",
                "iVar1": "sum"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "process_data_0800a168",
            "code": "\nvoid processData_0800a168(int *result,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008858(input_1,input_2,input_3,input_3,input_3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "process_data_0800a168",
                "param_1": "result",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "initialize_variables_0800a18c",
            "code": "\nvoid initializeVariables_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeVariables_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "initialize_variables_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 204480,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}