{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "initialize_flag_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initializeFlag_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "initialize_flag_080001ac",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_sequence_08000230",
            "code": "\nbyte * find_byte_sequence_08000230(uint *data,uint target_byte,uint length)\n\n{\n  byte current_byte;\n  char char_check_1;\n  char char_check_2;\n  char char_check_3;\n  char char_check_4;\n  byte *matching_byte;\n  uint *current_ptr;\n  byte *next_byte;\n  uint byte_alignment;\n  uint len_aligned;\n  uint data_xor;\n  uint next_xor;\n  bool bool_1;\n  bool bool_2;\n  bool bool_3;\n  bool bool_4;\n  \n  target_byte = target_byte & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = current_ptr;\n    } while (current_byte != target_byte);\n  }\n  else {\n    byte_alignment = (uint)data & 7;\n    while( true ) {\n      if (byte_alignment == 0) {\n        byte_alignment = target_byte | target_byte << 8;\n        byte_alignment = byte_alignment | byte_alignment << 0x10;\n        len_aligned = length & 0xfffffff8;\n        do {\n          current_ptr = data + 2;\n          len_aligned = len_aligned - 8;\n          data_xor = *data ^ byte_alignment;\n          next_xor = data[1] ^ byte_alignment;\n          char_check_1 = -((char)data_xor == '\\0');\n          char_check_2 = -((char)(data_xor >> 8) == '\\0');\n          char_check_3 = -((char)(data_xor >> 0x10) == '\\0');\n          char_check_4 = -((char)(data_xor >> 0x18) == '\\0');\n          data_xor = CONCAT13(char_check_4,CONCAT12(char_check_3,CONCAT11(char_check_2,char_check_1)));\n          bool_1 = (char)next_xor != '\\0';\n          bool_2 = (char)(next_xor >> 8) != '\\0';\n          bool_3 = (char)(next_xor >> 0x10) != '\\0';\n          bool_4 = (char)(next_xor >> 0x18) != '\\0';\n          next_xor = CONCAT13(bool_4 * char_check_4 - !bool_4,\n                            CONCAT12(bool_3 * char_check_3 - !bool_3,\n                                     CONCAT11(bool_2 * char_check_2 - !bool_2,bool_1 * char_check_1 - !bool_1)));\n          if (next_xor != 0) {\n            if (data_xor == 0) {\n              next_byte = (byte *)((int)data + 5);\n              data_xor = next_xor;\n            }\n            else {\n              next_byte = (byte *)((int)data + 1);\n            }\n            if ((data_xor & 1) == 0) {\n              bool_1 = (data_xor & 0x100) == 0;\n              matching_byte = next_byte + 1;\n              if (bool_1) {\n                bool_1 = (data_xor & 0x18000) == 0;\n                matching_byte = next_byte + 2;\n              }\n              next_byte = matching_byte;\n              if (bool_1) {\n                next_byte = next_byte + 1;\n              }\n            }\n            return next_byte + -1;\n          }\n          data = current_ptr;\n        } while (len_aligned != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == target_byte) break;\n      byte_alignment = (uint)current_ptr & 7;\n      data = current_ptr;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_ptr + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_sequence_08000230",
                "param_1": "data",
                "param_2": "target_byte",
                "param_3": "length",
                "bVar1": "current_byte",
                "cVar2": "char_check_1",
                "cVar3": "char_check_2",
                "cVar4": "char_check_3",
                "cVar5": "char_check_4",
                "pbVar6": "matching_byte",
                "puVar7": "current_ptr",
                "pbVar8": "next_byte",
                "uVar9": "byte_alignment",
                "uVar10": "len_aligned",
                "uVar11": "data_xor",
                "uVar12": "next_xor",
                "bVar13": "bool_1",
                "bVar14": "bool_2",
                "bVar15": "bool_3",
                "bVar16": "bool_4"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "check_params_and_return_value_080002d0",
            "code": "\nundefined8 checkParamsAndReturnValue_080002d0(int firstParam,int secondParam,int thirdParam,int fourthParam)\n\n{\n  undefined8 returnValue;\n  \n  if ((fourthParam == 0) && (thirdParam == 0)) {\n    if (secondParam != 0 || firstParam != 0) {\n      secondParam = -1;\n      firstParam = -1;\n    }\n    return CONCAT44(secondParam,firstParam);\n  }\n  returnValue = FUN_08000300();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "check_params_and_return_value_080002d0",
                "param_1": "firstParam",
                "param_2": "secondParam",
                "param_3": "thirdParam",
                "param_4": "fourthParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "divide_with_remainder_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divideWithRemainder_08000300(uint dividend,uint dividend_upper_bits,uint divisor,uint divisor_upper_bits,uint *remainder_ptr)\n\n{\n  ulonglong quotient_lower_bits;\n  uint quotient_upper_bits;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp_var;\n  bool carry_flag;\n  \n  if (divisor_upper_bits == 0) {\n    if (dividend_upper_bits < divisor) {\n      temp_var = LZCOUNT(divisor);\n      if (temp_var != 0) {\n        divisor = divisor << temp_var;\n        dividend_upper_bits = dividend >> (0x20U - temp_var & 0xff) | dividend_upper_bits << temp_var;\n        dividend = dividend << temp_var;\n      }\n      temp6 = divisor >> 0x10;\n      temp4 = dividend_upper_bits / temp6;\n      temp3 = dividend >> 0x10 | (dividend_upper_bits - temp6 * temp4) * 0x10000;\n      temp2 = temp4 * (divisor & 0xffff);\n      temp1 = temp4;\n      if (temp3 <= temp2 && temp2 - temp3 != 0) {\n        carry_flag = CARRY4(temp3,divisor);\n        temp3 = temp3 + divisor;\n        temp1 = temp4 - 1;\n        if ((carry_flag == false) && (temp3 <= temp2 && temp2 - temp3 != 0)) {\n          temp1 = temp4 - 2;\n          temp3 = temp3 + divisor;\n        }\n      }\n      temp4 = (temp3 - temp2) / temp6;\n      temp3 = dividend & 0xffff | ((temp3 - temp2) - temp6 * temp4) * 0x10000;\n      temp6 = temp4 * (divisor & 0xffff);\n      temp2 = temp4;\n      if (temp3 <= temp6 && temp6 - temp3 != 0) {\n        carry_flag = CARRY4(temp3,divisor);\n        temp3 = temp3 + divisor;\n        temp2 = temp4 - 1;\n        if ((carry_flag == false) && (temp3 <= temp6 && temp6 - temp3 != 0)) {\n          temp2 = temp4 - 2;\n          temp3 = temp3 + divisor;\n        }\n      }\n      temp3 = temp3 - temp6;\n      temp2 = temp2 | temp1 << 0x10;\n      temp1 = 0;\n    }\n    else {\n      if (divisor == 0) {\n        divisor = 1 / 0;\n      }\n      temp_var = LZCOUNT(divisor);\n      if (temp_var == 0) {\n        dividend_upper_bits = dividend_upper_bits - divisor;\n        temp3 = divisor >> 0x10;\n        temp7 = divisor & 0xffff;\n        temp1 = 1;\n      }\n      else {\n        divisor = divisor << temp_var;\n        temp3 = divisor >> 0x10;\n        temp2 = dividend_upper_bits >> (0x20U - temp_var & 0xff);\n        temp5 = dividend >> (0x20U - temp_var & 0xff) | dividend_upper_bits << temp_var;\n        temp1 = temp2 / temp3;\n        temp7 = divisor & 0xffff;\n        temp6 = temp5 >> 0x10 | (temp2 - temp3 * temp1) * 0x10000;\n        temp4 = temp1 * temp7;\n        dividend = dividend << temp_var;\n        temp2 = temp1;\n        if (temp6 <= temp4 && temp4 - temp6 != 0) {\n          carry_flag = CARRY4(temp6,divisor);\n          temp6 = temp6 + divisor;\n          temp2 = temp1 - 1;\n          if ((carry_flag == false) && (temp6 <= temp4 && temp4 - temp6 != 0)) {\n            temp2 = temp1 - 2;\n            temp6 = temp6 + divisor;\n          }\n        }\n        quotient_upper_bits = (temp6 - temp4) / temp3;\n        dividend_upper_bits = temp5 & 0xffff | ((temp6 - temp4) - temp3 * quotient_upper_bits) * 0x10000;\n        temp4 = quotient_upper_bits * temp7;\n        temp1 = quotient_upper_bits;\n        if (dividend_upper_bits <= temp4 && temp4 - dividend_upper_bits != 0) {\n          carry_flag = CARRY4(dividend_upper_bits,divisor);\n          dividend_upper_bits = dividend_upper_bits + divisor;\n          temp1 = quotient_upper_bits - 1;\n          if ((carry_flag == false) && (dividend_upper_bits <= temp4 && temp4 - dividend_upper_bits != 0)) {\n            temp1 = quotient_upper_bits - 2;\n            dividend_upper_bits = dividend_upper_bits + divisor;\n          }\n        }\n        dividend_upper_bits = dividend_upper_bits - temp4;\n        temp1 = temp1 | temp2 << 0x10;\n      }\n      temp5 = dividend_upper_bits / temp3;\n      temp6 = dividend >> 0x10 | (dividend_upper_bits - temp3 * temp5) * 0x10000;\n      temp2 = temp7 * temp5;\n      temp4 = temp5;\n      if (temp6 <= temp2 && temp2 - temp6 != 0) {\n        carry_flag = CARRY4(temp6,divisor);\n        temp6 = temp6 + divisor;\n        temp4 = temp5 - 1;\n        if ((carry_flag == false) && (temp6 <= temp2 && temp2 - temp6 != 0)) {\n          temp4 = temp5 - 2;\n          temp6 = temp6 + divisor;\n        }\n      }\n      temp5 = (temp6 - temp2) / temp3;\n      temp3 = dividend & 0xffff | ((temp6 - temp2) - temp3 * temp5) * 0x10000;\n      temp7 = temp7 * temp5;\n      temp2 = temp5;\n      if (temp3 <= temp7 && temp7 - temp3 != 0) {\n        carry_flag = CARRY4(temp3,divisor);\n        temp3 = temp3 + divisor;\n        temp2 = temp5 - 1;\n        if ((carry_flag == false) && (temp3 <= temp7 && temp7 - temp3 != 0)) {\n          temp2 = temp5 - 2;\n          temp3 = temp3 + divisor;\n        }\n      }\n      temp3 = temp3 - temp7;\n      temp2 = temp2 | temp4 << 0x10;\n    }\n    if (remainder_ptr != (uint *)0x0) {\n      *remainder_ptr = temp3 >> temp_var;\n      remainder_ptr[1] = 0;\n      return CONCAT44(temp1,temp2);\n    }\n  }\n  else if (dividend_upper_bits < divisor_upper_bits) {\n    if (remainder_ptr != (uint *)0x0) {\n      *remainder_ptr = dividend;\n      remainder_ptr[1] = dividend_upper_bits;\n      return 0;\n    }\n    temp2 = 0;\n    temp1 = 0;\n  }\n  else {\n    temp_var = LZCOUNT(divisor_upper_bits);\n    if (temp_var != 0) {\n      temp6 = 0x20 - temp_var;\n      temp1 = divisor >> (temp6 & 0xff) | divisor_upper_bits << temp_var;\n      temp7 = temp1 >> 0x10;\n      temp2 = dividend_upper_bits >> (temp6 & 0xff);\n      quotient_upper_bits = dividend >> (temp6 & 0xff) | dividend_upper_bits << temp_var;\n      temp5 = temp2 / temp7;\n      temp4 = quotient_upper_bits >> 0x10 | (temp2 - temp7 * temp5) * 0x10000;\n      temp3 = temp5 * (temp1 & 0xffff);\n      dividend = dividend << temp_var;\n      temp2 = temp5;\n      if (temp4 <= temp3 && temp3 - temp4 != 0) {\n        carry_flag = CARRY4(temp4,temp1);\n        temp4 = temp4 + temp1;\n        temp2 = temp5 - 1;\n        if ((carry_flag == false) && (temp4 <= temp3 && temp3 - temp4 != 0)) {\n          temp2 = temp5 - 2;\n          temp4 = temp4 + temp1;\n        }\n      }\n      temp5 = (temp4 - temp3) / temp7;\n      temp4 = quotient_upper_bits & 0xffff | ((temp4 - temp3) - temp7 * temp5) * 0x10000;\n      temp7 = temp5 * (temp1 & 0xffff);\n      temp3 = temp5;\n      if (temp4 <= temp7 && temp7 - temp4 != 0) {\n        carry_flag = CARRY4(temp4,temp1);\n        temp4 = temp4 + temp1;\n        temp3 = temp5 - 1;\n        if ((carry_flag == false) && (temp4 <= temp7 && temp7 - temp4 != 0)) {\n          temp3 = temp5 - 2;\n          temp4 = temp4 + temp1;\n        }\n      }\n      temp3 = temp3 | temp2 << 0x10;\n      quotient_lower_bits = (ulonglong)temp3 * (ulonglong)(divisor << temp_var);\n      if (CONCAT44(temp4 - temp7,dividend) < quotient_lower_bits) {\n        quotient_lower_bits = quotient_lower_bits - CONCAT44(temp1,divisor << temp_var);\n        temp3 = temp3 - 1;\n      }\n      if (remainder_ptr != (uint *)0x0) {\n        temp2 = ((temp4 - temp7) - (int)(quotient_lower_bits >> 0x20)) - (uint)(dividend < (uint)quotient_lower_bits);\n        *remainder_ptr = temp2 << (temp6 & 0xff) | dividend - (uint)quotient_lower_bits >> temp_var;\n        remainder_ptr[1] = temp2 >> temp_var;\n      }\n      return (ulonglong)temp3;\n    }\n    if ((divisor_upper_bits < dividend_upper_bits) || (divisor <= dividend)) {\n      carry_flag = dividend < divisor;\n      dividend = dividend - divisor;\n      dividend_upper_bits = (dividend_upper_bits - divisor_upper_bits) - (uint)carry_flag;\n      temp2 = 1;\n    }\n    else {\n      temp2 = 0;\n    }\n    temp1 = 0;\n    if (remainder_ptr != (uint *)0x0) {\n      *remainder_ptr = dividend;\n      remainder_ptr[1] = dividend_upper_bits;\n      return (ulonglong)temp2;\n    }\n  }\n  return CONCAT44(temp1,temp2);\n}\n\n",
            "renaming": {
                "FUN_08000300": "divide_with_remainder_08000300",
                "param_1": "dividend",
                "param_2": "dividend_upper_bits",
                "param_3": "divisor",
                "param_4": "divisor_upper_bits",
                "param_5": "remainder_ptr",
                "uVar1": "quotient_lower_bits",
                "uVar2": "quotient_upper_bits",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "iVar10": "temp_var",
                "bVar11": "carry_flag"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "perform_system_call_080005e0",
            "code": "\nvoid performSystemCall_080005e0(void)\n\n{\n  executeSystemCall(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "perform_system_call_080005e0",
                "software_interrupt": "executeSystemCall"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "execute_task_080005e4",
            "code": "\nundefined4 executeTask_080005e4(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = FUN_080005e0(1,input_1,0,0,input_4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "execute_task_080005e4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "update_data_and_perform_action_08000600",
            "code": "\nvoid updateDataAndPerformAction_08000600(int **dataPtr,undefined4 param)\n\n{\n  char flag;\n  int result;\n  \n  flag = *(char *)((int)dataPtr + 5);\n  if (flag == '\\x02') {\n    *dataPtr = &DAT_20000338;\n  }\n  else if (flag == '\\x03') {\n    *dataPtr = &DAT_20000338;\n  }\n  else if (flag == '\\x01') {\n    *dataPtr = &DAT_20000338;\n  }\n  else {\n    *dataPtr = &DAT_20000338;\n  }\n  FUN_08004388(*dataPtr,param,6);\n  if (1 < *(byte *)((int)dataPtr + 6)) {\n    FUN_08004110(*(byte *)((int)dataPtr + 6),1);\n    FUN_080041bc(*(undefined *)((int)dataPtr + 6),0);\n  }\n  do {\n    result = (**(code **)(**dataPtr + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)dataPtr + 0x49) = 0;\n  *(undefined *)((int)dataPtr + 0x4a) = 0;\n  *(undefined2 *)(dataPtr + 0x15) = 0;\n  *(undefined2 *)((int)dataPtr + 0x52) = 0;\n  *(undefined2 *)(dataPtr + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "update_data_and_perform_action_08000600",
                "param_1": "dataPtr",
                "param_2": "param",
                "cVar1": "flag",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_08004388",
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "update_data_0800066c",
            "code": "\nvoid updateData_0800066c(int dataPtr,undefined newValue,int limit,undefined extraValue)\n\n{\n  *(undefined *)(dataPtr + 4) = newValue;\n  if (3 < limit) {\n    limit = 0;\n  }\n  *(char *)(dataPtr + 5) = (char)limit;\n  *(undefined *)(dataPtr + 6) = extraValue;\n  *(undefined2 *)(dataPtr + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "update_data_0800066c",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "param_3": "limit",
                "param_4": "extraValue"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_function_08000682",
            "code": "\nundefined4 initializeFunction_08000682(undefined4 input)\n\n{\n  FUN_0800066c();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_function_08000682",
                "param_1": "input"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "check_and_handle_param_08000690",
            "code": "\nvoid check_and_handle_param_08000690(int param,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (param != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "check_and_handle_param_08000690",
                "param_1": "param",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint processData_080006b4(int **data)\n\n{\n  bool isOverflow;\n  undefined byteValue;\n  int returnValue;\n  byte index;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    isOverflow = false;\n    while (returnValue = (**(code **)(**data + 8))(), returnValue != 0) {\n      index = *(byte *)((int)data + 0x49);\n      byteValue = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + index + 9) = byteValue;\n      index = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = index;\n      if (0x3f < index) {\n        isOverflow = true;\n      }\n    }\n  }\n  else {\n    isOverflow = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (isOverflow) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "isOverflow",
                "uVar2": "byteValue",
                "iVar3": "returnValue",
                "bVar4": "index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_crc_08000728",
            "code": "\nuint calculate_crc_08000728(int data_start_address,int data_length)\n\n{\n  byte bit_position;\n  uint crc;\n  uint is_odd;\n  uint byte_position;\n  \n  crc = 0xffff;\n  for (byte_position = 0; (int)byte_position < data_length; byte_position = byte_position + 1 & 0xff) {\n    crc = crc ^ *(byte *)(data_start_address + byte_position + 9);\n    for (bit_position = 1; bit_position < 9; bit_position = bit_position + 1) {\n      is_odd = crc & 1;\n      crc = crc >> 1;\n      if (is_odd != 0) {\n        crc = crc ^ 0xa001;\n      }\n    }\n  }\n  return (crc & 0xff) << 8 | crc >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_crc_08000728",
                "param_1": "data_start_address",
                "param_2": "data_length",
                "bVar1": "bit_position",
                "uVar2": "crc",
                "uVar3": "is_odd",
                "uVar4": "byte_position"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_data_0800076c",
            "code": "\nvoid updateData_0800076c(int **dataPtr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result1;\n  int iteration;\n  uint index;\n  \n  index = (uint)*(byte *)((int)dataPtr + 0x49);\n  result1 = FUN_08000728(dataPtr,index,param3,param4,param4);\n  *(char *)((int)dataPtr + index + 9) = (char)((ushort)result1 >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)dataPtr + index + 9) = (char)result1;\n  *(char *)((int)dataPtr + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)dataPtr + 6)) {\n    FUN_080041bc(*(byte *)((int)dataPtr + 6),1);\n  }\n  if (*(byte *)((int)dataPtr + 5) < 4) {\n    (**(code **)(**dataPtr + 4))(*dataPtr,(int)dataPtr + 9,*(undefined *)((int)dataPtr + 0x49));\n  }\n  if (1 < *(byte *)((int)dataPtr + 6)) {\n    FUN_080041bc(*(byte *)((int)dataPtr + 6),0);\n  }\n  if (*(byte *)((int)dataPtr + 5) < 4) {\n    do {\n      iteration = (**(code **)(**dataPtr + 0xc))();\n    } while (-1 < iteration);\n  }\n  *(undefined *)((int)dataPtr + 0x49) = 0;\n  iteration = FUN_08004204();\n  dataPtr[0x17] = (int *)(iteration + (uint)*(ushort *)((int)dataPtr + 0x56));\n  *(short *)((int)dataPtr + 0x52) = *(short *)((int)dataPtr + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_data_0800076c",
                "param_1": "dataPtr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "iVar2": "iteration",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004204",
                "FUN_08000728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_and_process_condition_080007f0",
            "code": "\nundefined4 checkAndProcessCondition_080007f0(int condition,undefined4 param2,uint value,undefined4 param4)\n\n{\n  bool isMatch;\n  byte calcResult;\n  char result1;\n  char result2;\n  int calculation1;\n  uint index;\n  int calculation2;\n  \n  index = 0;\n  do {\n    if (7 < index) {\n      isMatch = false;\nLAB_0800080a:\n      if (!isMatch) {\n        *(short *)(condition + 0x54) = *(short *)(condition + 0x54) + 1;\n        return 1;\n      }\n      calculation2 = *(byte *)(condition + 10) - 1;\n      switch(*(byte *)(condition + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        result1 = FUN_08004640(*(undefined *)(condition + 0xb),*(undefined *)(condition + 0xc),value,\n                             calculation2,param4);\n        result2 = FUN_08004640(*(undefined *)(condition + 0xd),*(undefined *)(condition + 0xe));\n        if (*(byte *)(condition + 0x60) < (byte)(result2 + result1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        calculation2 = FUN_08004640(*(undefined *)(condition + 0xb),*(undefined *)(condition + 0xc),value,\n                             calculation2,param4);\n        if ((uint)*(byte *)(condition + 0x60) < (uint)(calculation2 << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        calcResult = FUN_08004640(*(undefined *)(condition + 0xb),*(undefined *)(condition + 0xc),value,\n                             calculation2,param4);\n        if (*(byte *)(condition + 0x60) < calcResult) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    value = (uint)*(byte *)(condition + 10);\n    if ((byte)(&DAT_08005a10)[index] == value) {\n      isMatch = true;\n      goto LAB_0800080a;\n    }\n    index = index + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  calculation2 = FUN_08004640(*(undefined *)(condition + 0xb),*(undefined *)(condition + 0xc),value,calculation2,\n                       param4);\n  calculation1 = FUN_08004640(*(undefined *)(condition + 0xd),*(undefined *)(condition + 0xe));\n  if ((uint)*(byte *)(condition + 0x60) <\n      (((uint)(calculation2 << 0xc) >> 0x10) + ((uint)(calculation1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_and_process_condition_080007f0",
                "param_1": "condition",
                "param_2": "param2",
                "param_3": "value",
                "param_4": "param4",
                "bVar1": "isMatch",
                "bVar2": "calcResult",
                "cVar3": "result1",
                "cVar4": "result2",
                "iVar5": "calculation1",
                "uVar6": "index",
                "iVar7": "calculation2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int dataPointer,undefined newValue)\n\n{\n  *(undefined *)(dataPointer + 9) = *(undefined *)(dataPointer + 4);\n  *(byte *)(dataPointer + 10) = *(byte *)(dataPointer + 10) ^ 0x80;\n  *(undefined *)(dataPointer + 0xb) = newValue;\n  *(undefined *)(dataPointer + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "dataPointer",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "update_flags_and_return_offset_080008e2",
            "code": "\nint updateFlagsAndReturnOffset_080008e2(int buffer,int data,undefined4 flag1,undefined4 flag2)\n\n{\n  int offset;\n  uint size;\n  uint i;\n  uint bitIndex;\n  char bitValue;\n  int address;\n  \n  offset = FUN_08004640(*(undefined *)(buffer + 0xb),*(undefined *)(buffer + 0xc),flag1,flag2,\n                       flag2);\n  size = FUN_08004640(*(undefined *)(buffer + 0xd),*(undefined *)(buffer + 0xe));\n  bitValue = (char)((size << 0x15) >> 0x18);\n  if ((size & 7) != 0) {\n    bitValue = bitValue + '\\x01';\n  }\n  *(char *)(buffer + 0xb) = bitValue;\n  *(undefined *)(buffer + 0x49) = 3;\n  bitIndex = 0;\n  for (i = 0; (int)i < (int)size; i = i + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(data + ((i + offset) * 0x100000 >> 0x18) * 2) >>\n         (i + offset & 0xf) & 1U) == 0) {\n      address = (uint)*(byte *)(buffer + 0x49) + buffer;\n      *(byte *)(address + 9) = *(byte *)(address + 9) & ~(byte)(1 << bitIndex);\n    }\n    else {\n      address = (uint)*(byte *)(buffer + 0x49) + buffer;\n      *(byte *)(address + 9) = *(byte *)(address + 9) | (byte)(1 << bitIndex);\n    }\n    bitIndex = bitIndex + 1 & 0xff;\n    if (7 < bitIndex) {\n      *(char *)(buffer + 0x49) = *(char *)(buffer + 0x49) + '\\x01';\n      bitIndex = 0;\n    }\n  }\n  if ((size & 7) != 0) {\n    *(char *)(buffer + 0x49) = *(char *)(buffer + 0x49) + '\\x01';\n  }\n  bitValue = *(char *)(buffer + 0x49);\n  FUN_0800076c(buffer);\n  return (int)(char)(bitValue + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "update_flags_and_return_offset_080008e2",
                "param_1": "buffer",
                "param_2": "data",
                "param_3": "flag1",
                "param_4": "flag2",
                "iVar1": "offset",
                "uVar2": "size",
                "uVar3": "i",
                "uVar4": "bitIndex",
                "cVar5": "bitValue",
                "iVar6": "address"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "decode_and_process_data_08000998",
            "code": "\nint decode_and_process_data_08000998(int buffer_addr,int data_addr,undefined4 param_3,undefined4 param_4)\n\n{\n  byte index;\n  char temp_char;\n  byte decoded_byte;\n  byte shifted_byte;\n  uint start_index;\n  uint updated_index;\n  \n  decoded_byte = FUN_08004640(*(undefined *)(buffer_addr + 0xb),*(undefined *)(buffer_addr + 0xc),param_3,param_4,\n                       param_4);\n  shifted_byte = FUN_08004640(*(undefined *)(buffer_addr + 0xd),*(undefined *)(buffer_addr + 0xe));\n  *(byte *)(buffer_addr + 0xb) = shifted_byte << 1;\n  *(undefined *)(buffer_addr + 0x49) = 3;\n  for (start_index = (uint)decoded_byte; start_index < (uint)decoded_byte + (uint)shifted_byte; start_index = start_index + 1 & 0xff) {\n    index = *(byte *)(buffer_addr + 0x49);\n    *(char *)(buffer_addr + (uint)index + 9) = (char)((ushort)*(undefined2 *)(data_addr + start_index * 2) >> 8)\n    ;\n    updated_index = index + 1 & 0xff;\n    temp_char = (char)updated_index;\n    *(char *)(buffer_addr + 0x49) = temp_char;\n    *(undefined *)(buffer_addr + updated_index + 9) = *(undefined *)(data_addr + start_index * 2);\n    *(char *)(buffer_addr + 0x49) = temp_char + '\\x01';\n  }\n  temp_char = *(char *)(buffer_addr + 0x49);\n  FUN_0800076c(buffer_addr);\n  return (int)(char)(temp_char + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "decode_and_process_data_08000998",
                "param_1": "buffer_addr",
                "param_2": "data_addr",
                "bVar1": "index",
                "cVar2": "temp_char",
                "bVar3": "decoded_byte",
                "bVar4": "shifted_byte",
                "uVar5": "start_index",
                "uVar6": "updated_index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_memory_08000a00",
            "code": "\nundefined4 update_memory_08000a00(int address,int memory,undefined4 value1,undefined4 value2)\n\n{\n  uint result1;\n  uint index;\n  \n  result1 = FUN_08004640(*(undefined *)(address + 0xb),*(undefined *)(address + 0xc),value1,value2,\n                       value2);\n  index = (result1 << 0x14) >> 0x18;\n  if (*(char *)(address + 0xd) == -1) {\n    *(ushort *)(memory + index * 2) =\n         (ushort)(1 << (result1 & 0xf)) | *(ushort *)(memory + index * 2);\n  }\n  else {\n    *(ushort *)(memory + index * 2) =\n         *(ushort *)(memory + index * 2) & ~(ushort)(1 << (result1 & 0xf));\n  }\n  *(undefined *)(address + 0x49) = 6;\n  FUN_0800076c(address);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_memory_08000a00",
                "param_1": "address",
                "param_2": "memory",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "result1",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "update_data_08000a4e",
            "code": "\nundefined4 updateData_08000a4e(int dataPointer,int resultPointer)\n\n{\n  byte byteResult;\n  undefined2 ushortResult;\n  \n  byteResult = FUN_08004640(*(undefined *)(dataPointer + 0xb),*(undefined *)(dataPointer + 0xc));\n  ushortResult = FUN_08004640(*(undefined *)(dataPointer + 0xd),*(undefined *)(dataPointer + 0xe));\n  *(undefined2 *)(resultPointer + (uint)byteResult * 2) = ushortResult;\n  *(undefined *)(dataPointer + 0x49) = 6;\n  FUN_0800076c(dataPointer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "update_data_08000a4e",
                "param_1": "dataPointer",
                "param_2": "resultPointer",
                "bVar1": "byteResult",
                "uVar2": "ushortResult"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "initialize_bits_08000a7a",
            "code": "\nundefined4 initializeBits_08000a7a(int dataBuffer,int resultBuffer,undefined4 param3,undefined4 param4)\n\n{\n  int offset1;\n  int offset2;\n  uint loopCounter;\n  uint bitCounter;\n  uint shiftedBits;\n  uint byteIndex;\n  uint byteOffset;\n  \n  offset1 = FUN_08004640(*(undefined *)(dataBuffer + 0xb),*(undefined *)(dataBuffer + 0xc),param3,param4,\n                       param4);\n  offset2 = FUN_08004640(*(undefined *)(dataBuffer + 0xd),*(undefined *)(dataBuffer + 0xe));\n  bitCounter = 0;\n  byteOffset = 7;\n  for (loopCounter = 0; (int)loopCounter < offset2; loopCounter = loopCounter + 1 & 0xffff) {\n    byteIndex = (loopCounter + offset1) * 0x100000 >> 0x18;\n    shiftedBits = loopCounter + offset1 & 0xf;\n    if (((int)(uint)*(byte *)(dataBuffer + byteOffset + 9) >> bitCounter & 1U) == 0) {\n      *(ushort *)(resultBuffer + byteIndex * 2) = *(ushort *)(resultBuffer + byteIndex * 2) & ~(ushort)(1 << shiftedBits);\n    }\n    else {\n      *(ushort *)(resultBuffer + byteIndex * 2) = (ushort)(1 << shiftedBits) | *(ushort *)(resultBuffer + byteIndex * 2);\n    }\n    bitCounter = bitCounter + 1 & 0xff;\n    if (7 < bitCounter) {\n      byteOffset = byteOffset + 1 & 0xff;\n      bitCounter = 0;\n    }\n  }\n  *(undefined *)(dataBuffer + 0x49) = 6;\n  FUN_0800076c(dataBuffer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "initialize_bits_08000a7a",
                "param_1": "dataBuffer",
                "param_2": "resultBuffer",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "offset1",
                "iVar2": "offset2",
                "uVar3": "loopCounter",
                "uVar4": "bitCounter",
                "uVar5": "shiftedBits",
                "uVar6": "byteIndex",
                "uVar7": "byteOffset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "decode_and_copy_data_08000b04",
            "code": "\nint decode_and_copy_data_08000b04(int data_address,int output_address)\n\n{\n  byte first_byte;\n  byte second_byte;\n  char character;\n  undefined2 result;\n  uint index;\n  \n  first_byte = *(byte *)(data_address + 0xc);\n  second_byte = *(byte *)(data_address + 0xe);\n  *(undefined *)(data_address + 0xd) = 0;\n  *(byte *)(data_address + 0xe) = second_byte;\n  *(undefined *)(data_address + 0x49) = 6;\n  for (index = 0; index < second_byte; index = index + 1 & 0xff) {\n    result = FUN_08004640(*(undefined *)(index * 2 + data_address + 0x10),\n                         *(undefined *)(data_address + (index + 4) * 2 + 9));\n    *(undefined2 *)(output_address + (first_byte + index) * 2) = result;\n  }\n  character = *(char *)(data_address + 0x49);\n  FUN_0800076c(data_address);\n  return (int)(char)(character + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "decode_and_copy_data_08000b04",
                "param_1": "data_address",
                "param_2": "output_address",
                "bVar1": "first_byte",
                "bVar2": "second_byte",
                "cVar3": "character",
                "uVar4": "result",
                "uVar5": "index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "process_data_08000b54",
            "code": "\nint processData_08000b54(int **data,int *ptrArray,undefined4 value)\n\n{\n  byte result;\n  int num;\n  uint unaff_value;\n  int returnValue;\n  \n  data[0x13] = ptrArray;\n  *(char *)(data + 0x18) = (char)value;\n  if (*(byte *)((int)data + 5) < 4) {\n    result = (**(code **)(**data + 8))();\n    unaff_value = (uint)result;\n  }\n  if (unaff_value == 0) {\n    returnValue = 0;\n  }\n  else if ((int)unaff_value < 8) {\n    returnValue = 0;\n  }\n  else {\n    returnValue = FUN_080006b4(data);\n    *(char *)(data + 2) = (char)returnValue;\n    if (*(char *)((int)data + 9) == *(char *)(data + 1)) {\n      num = FUN_080007f0(data);\n      if (num < 1) {\n        num = FUN_08004204();\n        data[0x17] = (int *)((uint)*(ushort *)((int)data + 0x56) + num);\n        *(undefined *)(data + 2) = 0;\n        switch(*(undefined *)((int)data + 10)) {\n        case 1:\n        case 2:\n          returnValue = FUN_080008e2(data,ptrArray,value);\n          break;\n        case 3:\n        case 4:\n          returnValue = FUN_08000998(data,ptrArray,value);\n          break;\n        case 5:\n          returnValue = FUN_08000a00(data,ptrArray,value);\n          break;\n        case 6:\n          returnValue = FUN_08000a4e(data,ptrArray,value);\n          break;\n        case 0xf:\n          returnValue = FUN_08000a7a(data,ptrArray,value);\n          break;\n        case 0x10:\n          returnValue = FUN_08000b04(data,ptrArray,value);\n        }\n      }\n      else {\n        if (num != 0xff) {\n          FUN_080008cc(data,num);\n          FUN_0800076c(data);\n        }\n        *(char *)(data + 2) = (char)num;\n        returnValue = (int)(char)num;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "process_data_08000b54",
                "param_1": "data",
                "param_2": "ptrArray",
                "param_3": "value",
                "bVar1": "result",
                "iVar2": "num",
                "unaff_r5": "unaff_value",
                "iVar3": "returnValue"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a4e",
                "FUN_0800076c",
                "FUN_080008e2",
                "FUN_080008cc",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08004204",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_components_08000c4c",
            "code": "\nvoid initializeComponents_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_components_08000c4c"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000600",
                "FUN_080005e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "initialize_data_08000c64",
            "code": "\nvoid initializeData_08000c64(void)\n\n{\n  undefined4 input_parameter;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,input_parameter,input_parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "initialize_data_08000c64",
                "in_r3": "input_parameter"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_hardware_08000c8c",
            "code": "\n\n\nvoid initializeHardware_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 flags;\n  undefined4 register1;\n  undefined4 register2;\n  undefined4 memory1;\n  undefined4 register3;\n  undefined4 memory2;\n  undefined4 register4;\n  undefined4 register5;\n  undefined4 memory3;\n  undefined4 register6;\n  undefined4 register7;\n  undefined4 memory4;\n  undefined4 memory5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flags = 1;\n  register1 = 0x50000;\n  register2 = 2;\n  memory1 = 0x400000;\n  register3 = 8;\n  memory2 = 0x150;\n  register4 = 2;\n  register5 = 7;\n  FUN_0800201c(&flags);\n  FUN_08001f9c();\n  memory3 = 0xf;\n  register6 = 2;\n  register7 = 0;\n  memory4 = 0x1400;\n  memory5 = 0x1000;\n  FUN_08002488(&memory3,5);\n  uVar1 = FUN_080025e0();\n  FUN_08000ee0(uVar1 / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_hardware_08000c8c",
                "local_54": "flags",
                "local_50": "register1",
                "local_3c": "register2",
                "local_38": "memory1",
                "local_34": "register3",
                "local_30": "memory2",
                "local_2c": "register4",
                "local_28": "register5",
                "local_24": "memory3",
                "local_20": "register6",
                "local_1c": "register7",
                "local_18": "memory4",
                "local_14": "memory5"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_080025e0",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080035bc",
                "FUN_08004658",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "initialize_application_08000d8e",
            "code": "\nvoid initialize_application_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "initialize_application_08000d8e"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "validate_and_update_param_08000d98",
            "code": "\nundefined4 validateAndUpdateParam_08000d98(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,inputParam,0);\n  DAT_20000028 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "validate_and_update_param_08000d98",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "set_memory_configuration_08000de4",
            "code": "\n\n\nundefined4 setMemoryConfiguration_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "set_memory_configuration_08000de4"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "addition_08000e18",
            "code": "\nvoid addition_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "addition_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_data_08000e30",
            "code": "\nundefined4 get_data_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_data_08000e30"
            },
            "calling": [
                "FUN_0800346c",
                "FUN_08003d18",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002d0c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_register_value_08000e3c",
            "code": "\n\n\nvoid updateRegisterValue_08000e3c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_register_value_08000e3c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "update_memory_08000e60",
            "code": "\n\n\nvoid updateMemory_08000e60(uint address,uint data,uint mask)\n\n{\n  uint shiftedBits;\n  uint remainingBits;\n  \n  shiftedBits = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftedBits;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftedBits + 4 < 7) {\n    shiftedBits = 0;\n  }\n  else {\n    shiftedBits = shiftedBits - 3;\n  }\n  shiftedBits = (data & (1 << (remainingBits & 0xff)) - 1U) << (shiftedBits & 0xff) |\n          (1 << (shiftedBits & 0xff)) - 1U & mask;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftedBits << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftedBits << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "update_memory_08000e60",
                "param_1": "address",
                "param_2": "data",
                "param_3": "mask",
                "uVar1": "shiftedBits",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_in_data_array_08000ec4",
            "code": "\nvoid setBitInDataArray_08000ec4(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_in_data_array_08000ec4",
                "param_1": "index"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "initialize_value_08000ee0",
            "code": "\n\n\nundefined4 initializeValue_08000ee0(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "initialize_value_08000ee0",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_in_array_08000f0c",
            "code": "\nvoid setBitInArray_08000f0c(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_in_array_08000f0c",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "set_flag_08000f2c",
            "code": "\n\n\nvoid setFlag_08000f2c(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "set_flag_08000f2c",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "execute_function_08000f4e",
            "code": "\nvoid execute_function_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "execute_function_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "update_param_08000f56",
            "code": "\nundefined4 updateParam_08000f56(int input)\n\n{\n  if (input != 0) {\n    *(undefined *)(input + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(input + 0x10) = 0;\n    *(undefined *)(input + 4) = 0;\n    *(undefined *)(input + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "update_param_08000f56",
                "param_1": "input"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "update_bit_and_set_flag_08000f72",
            "code": "\nundefined4 updateBitAndSetFlag_08000f72(uint **pParam,uint bitIndex)\n\n{\n  **pParam = **pParam & ~(1 << (bitIndex & 0xff));\n  *(undefined *)(pParam + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "update_bit_and_set_flag_08000f72",
                "param_1": "pParam",
                "param_2": "bitIndex"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "update_parameter_08000f8c",
            "code": "\nundefined4 updateParameter_08000f8c(uint **parameter)\n\n{\n  if (*(char *)((int)parameter + 0x35) != '\\x02') {\n    result = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)parameter + 0x35) = 5;\n  **parameter = **parameter & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "update_parameter_08000f8c",
                "param_1": "parameter",
                "param_1[0x15]": "result"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_registers_08000fb4",
            "code": "\n\n\nvoid updateRegisters_08000fb4(uint *register1,uint *register2)\n\n{\n  uint temp1;\n  uint temp2;\n  uint loopIndex;\n  uint bitMask;\n  uint temp3;\n  int index1;\n  uint temp4;\n  int index2;\n  \n  for (loopIndex = 0; loopIndex < 0x10; loopIndex = loopIndex + 1) {\n    temp2 = 1 << (loopIndex & 0xff);\n    bitMask = temp2 & *register2;\n    temp1 = _DAT_40013c0c;\n    if (temp2 == bitMask) {\n      if ((register2[1] == 2) || (register2[1] == 0x12)) {\n        index1 = (loopIndex >> 3) + 8;\n        index2 = (loopIndex & 7) << 2;\n        register1[index1] = register1[index1] & ~(0xf << index2) | register2[4] << index2;\n      }\n      temp4 = loopIndex << 1;\n      temp1 = ~(3 << (temp4 & 0xff));\n      *register1 = *register1 & temp1 | (register2[1] & 3) << (temp4 & 0xff);\n      temp3 = register2[1];\n      if (((temp3 - 1 < 2) || (temp3 == 0x11)) || (temp3 == 0x12)) {\n        register1[2] = register1[2] & temp1 | register2[3] << (temp4 & 0xff);\n        register1[1] = register1[1] & ~temp2 | ((register2[1] << 0x1b) >> 0x1f) << (loopIndex & 0xff);\n      }\n      register1[3] = temp1 & register1[3] | register2[2] << (temp4 & 0xff);\n      temp1 = _DAT_40013c0c;\n      if ((register2[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        index2 = (loopIndex & 3) << 2;\n        if (register1 == (uint *)0x40020000) {\n          index1 = 0;\n        }\n        else if (register1 == (uint *)0x40020400) {\n          index1 = 1;\n        }\n        else if (register1 == (uint *)0x40020800) {\n          index1 = 2;\n        }\n        else if (register1 == (uint *)0x40020c00) {\n          index1 = 3;\n        }\n        else if (register1 == (uint *)0x40021000) {\n          index1 = 4;\n        }\n        else if (register1 == (uint *)0x40021400) {\n          index1 = 5;\n        }\n        else if (register1 == (uint *)0x40021800) {\n          index1 = 6;\n        }\n        else if (register1 == (uint *)0x40021c00) {\n          index1 = 7;\n        }\n        else if (register1 == (uint *)0x40022000) {\n          index1 = 8;\n        }\n        else if (register1 == (uint *)0x40022400) {\n          index1 = 9;\n        }\n        else {\n          index1 = 10;\n        }\n        *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800) & ~(0xf << index2) | index1 << index2;\n        temp1 = ~bitMask;\n        temp2 = _DAT_40013c00 & temp1;\n        if ((register2[1] & 0x10000) != 0) {\n          temp2 = bitMask | _DAT_40013c00;\n        }\n        temp3 = temp1 & _DAT_40013c04;\n        if ((register2[1] & 0x20000) != 0) {\n          temp3 = bitMask | _DAT_40013c04;\n        }\n        temp4 = temp1 & _DAT_40013c08;\n        if ((register2[1] & 0x100000) != 0) {\n          temp4 = bitMask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp2;\n        _DAT_40013c04 = temp3;\n        _DAT_40013c08 = temp4;\n        temp1 = temp1 & _DAT_40013c0c;\n        if ((register2[1] & 0x200000) != 0) {\n          temp1 = bitMask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_registers_08000fb4",
                "param_1": "register1",
                "param_2": "register2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "loopIndex",
                "uVar4": "bitMask",
                "uVar5": "temp3",
                "iVar6": "index1",
                "uVar7": "temp4",
                "iVar8": "index2"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "update_data_value_08001198",
            "code": "\nvoid updateDataValue_08001198(int pDataStruct,int newValue,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(pDataStruct + 0x18) = newValue << 0x10;\n    return;\n  }\n  *(int *)(pDataStruct + 0x18) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "update_data_value_08001198",
                "param_1": "pDataStruct",
                "param_2": "newValue",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "check_and_update_flag_080011a4",
            "code": "\n\n\nvoid checkAndUpdateFlag_080011a4(uint flag)\n\n{\n  if ((_DAT_40013c14 & flag) != 0) {\n    _DAT_40013c14 = flag;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "check_and_update_flag_080011a4",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "update_param_value_080011c0",
            "code": "\nundefined4 updateParamValue_080011c0(int *paramArray)\n\n{\n  if (*(char *)((int)paramArray + 0x3e) == '@') {\n    if (arrayElement20 == 0) {\n      *(uint *)(*paramArray + 0x10) = arrayElement17 & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArray + 0x10) = arrayElement17 & 0xffU | 1;\n    }\n  }\n  else if (paramArray[4] == 0x4000) {\n    if (*(char *)((int)paramArray + 0x3d) == '!') {\n      *(uint *)(*paramArray + 0x10) = arrayElement17 & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArray + 0x10) = arrayElement17 & 0xffU | 1;\n    }\n  }\n  else if (arrayElement20 == 0) {\n    *(uint *)(*paramArray + 0x10) = (uint)(arrayElement17 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (arrayElement20 == 1) {\n    *(uint *)(*paramArray + 0x10) = (uint)(arrayElement17 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "update_param_value_080011c0",
                "param_1": "paramArray",
                "param_1[0x14]": "arrayElement20",
                "param_1[0x11]": "arrayElement17"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "update_param_value_0800124a",
            "code": "\nundefined4 updateParamValue_0800124a(int *paramArray)\n\n{\n  *(uint *)(*paramArray + 0x10) = paramArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "update_param_value_0800124a",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "modify_permissions_08001256",
            "code": "\nundefined4 modifyPermissions_08001256(uint **parameters)\n\n{\n  uint *tempPtr;\n  \n  tempPtr = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((ptr1 != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((ptr1 == (uint *)0x0) && (ptr2 == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      ptr1 = (uint *)((int)ptr1 + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (tempPtr == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          tempPtr = *parameters;\n          if ((tempPtr1 & 0x800) == 0) {\n            *tempPtr = *tempPtr | 0x200;\n          }\n          else {\n            *tempPtr = *tempPtr & 0xfffffbff;\n          }\n        }\n        else if (((tempPtr == (uint *)0x4) || (tempPtr == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        tempPtr = *parameters;\n        if ((tempPtr1 & 0x800) != 0) {\n          tempPtr1 = tempPtr1 | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        tempPtr = *parameters;\n        if ((tempPtr1 & 0x800) != 0) {\n          tempPtr1 = tempPtr1 | 0x1000;\n        }\n      }\n      ptr1 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "modify_permissions_08001256",
                "param_1": "parameters",
                "puVar1": "tempPtr",
                "param_1[0x14]": "ptr1",
                "param_1[4]": "ptr2",
                "puVar1[1]": "tempPtr1"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_parameter_value_08001420",
            "code": "\nundefined4 updateParameterValue_08001420(int *parameter)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    bytePointer = (byte *)arrayItem;\n    arrayItem = (int)(bytePointer + 1);\n    *(uint *)(*parameter + 0x10) = (uint)*bytePointer;\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_parameter_value_08001420",
                "param_1": "parameter",
                "pbVar1": "bytePointer",
                "param_1[9]": "arrayItem"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_array_element_08001440",
            "code": "\nundefined4 updateArrayElement_08001440(int *array)\n\n{\n  undefined *arrayElementPtr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    arrayElementPtr = (undefined *)array[9];\n    array[9] = (int)(arrayElementPtr + 1);\n    *arrayElementPtr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_array_element_08001440",
                "param_1": "array",
                "puVar1": "arrayElementPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "validate_and_update_params_08001460",
            "code": "\nundefined4 validate_and_update_params_08001460(uint **param1,uint *param2,int param3,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param1 + 0x3d) == '(') {\n    if (param2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param1 + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param1 + 0xf) = 1;\n      ptr = *param1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param1 = **param1 & 0xfffff7ff;\n      *(undefined *)((int)param1 + 0x3d) = 0x29;\n      *(undefined *)((int)param1 + 0x3e) = 0x20;\n      result = 0;\n      param1[0x10] = (uint *)0x0;\n      param1[9] = param2;\n      *(short *)((int)param1 + 0x2a) = (short)param3;\n      param1[0xb] = param4;\n      *(undefined2 *)(param1 + 10) = *(undefined2 *)((int)param1 + 0x2a);\n      *(undefined *)(param1 + 0xf) = 0;\n      (*param1)[1] = (*param1)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001460": "validate_and_update_params_08001460",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "check_and_set_flags_080014ec",
            "code": "\nundefined4 check_and_set_flags_080014ec(uint **ptr_to_param1,uint *ptr_to_param2,int param3,uint *ptr_to_param4)\n\n{\n  undefined4 result;\n  uint *ptr_to_var2;\n  \n  if (*(char *)((int)ptr_to_param1 + 0x3d) == '(') {\n    if (ptr_to_param2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptr_to_param1 + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptr_to_param1 + 0xf) = 1;\n      ptr_to_var2 = *ptr_to_param1;\n      if ((*ptr_to_var2 & 1) == 0) {\n        *ptr_to_var2 = *ptr_to_var2 | 1;\n      }\n      **ptr_to_param1 = **ptr_to_param1 & 0xfffff7ff;\n      *(undefined *)((int)ptr_to_param1 + 0x3d) = 0x2a;\n      *(undefined *)((int)ptr_to_param1 + 0x3e) = 0x20;\n      result = 0;\n      ptr_to_param1[0x10] = (uint *)0x0;\n      ptr_to_param1[9] = ptr_to_param2;\n      *(short *)((int)ptr_to_param1 + 0x2a) = (short)param3;\n      ptr_to_param1[0xb] = ptr_to_param4;\n      *(undefined2 *)(ptr_to_param1 + 10) = *(undefined2 *)((int)ptr_to_param1 + 0x2a);\n      *(undefined *)(ptr_to_param1 + 0xf) = 0;\n      (*ptr_to_param1)[1] = (*ptr_to_param1)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "check_and_set_flags_080014ec",
                "param_1": "ptr_to_param1",
                "param_2": "ptr_to_param2",
                "param_3": "param3",
                "param_4": "ptr_to_param4",
                "uVar1": "result",
                "puVar2": "ptr_to_var2"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "initialize_flags_08001578",
            "code": "\nundefined4 initializeFlags_08001578(uint **flagsArray)\n\n{\n  uint *firstFlag;\n  \n  if (*(char *)((int)flagsArray + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)flagsArray + 0x3d) = 0x28;\n  firstFlag = *flagsArray;\n  if ((*firstFlag & 1) == 0) {\n    *firstFlag = *firstFlag | 1;\n  }\n  **flagsArray = **flagsArray | 0x400;\n  (*flagsArray)[1] = (*flagsArray)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "initialize_flags_08001578",
                "param_1": "flagsArray",
                "puVar1": "firstFlag"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "process_data_080015bc",
            "code": "\nundefined4 processData_080015bc(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "process_data_080015bc",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "update_character_0800160e",
            "code": "\nundefined4 updateCharacter_0800160e(int *character)\n\n{\n  char lastChar;\n  undefined *ptr;\n  \n  lastChar = *(char *)((int)character + 0x3d);\n  if (*(short *)((int)character + 0x2a) != 0) {\n    ptr = (undefined *)ptrArray;\n    ptrArray = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*character + 0x10);\n    *(short *)((int)character + 0x2a) = *(short *)((int)character + 0x2a) + -1;\n    if ((*(short *)((int)character + 0x2a) == 0) && (lastChar == '*')) {\n      *(uint *)(*character + 4) = *(uint *)(*character + 4) & 0xfffffbff;\n      intValue = 0x22;\n      *(undefined *)((int)character + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "update_character_0800160e",
                "param_1": "character",
                "cVar1": "lastChar",
                "puVar2": "ptr",
                "param_1[9]": "ptrArray",
                "param_1[0xc]": "intValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "process_data_0800165a",
            "code": "\nundefined4 processData_0800165a(int *dataPointer,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined2 result;\n  uint flags;\n  \n  flags = *(uint *)(*dataPointer + 0x18);\n  if ((flags & 0x80) == 0) {\n    result = *(undefined2 *)(dataPointer + 3);\n  }\n  else {\n    result = *(undefined2 *)(dataPointer + 6);\n  }\n  FUN_08003880(dataPointer,(*(uint *)(*dataPointer + 0x18) & 4) == 0,result,flags,arg4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "process_data_0800165a",
                "param_1": "dataPointer",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "result",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "initialize_flags_08001684",
            "code": "\nundefined4 initializeFlags_08001684(uint **parameters)\n\n{\n  if (((flags == (uint *)0x4) || (flags == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    flags = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    extraFlag = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    flags = (uint *)0xffff0000;\n    extraFlag = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "initialize_flags_08001684",
                "param_1": "parameters",
                "param_1[0xb]": "flags",
                "param_1[0xc]": "extraFlag"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "process_data_0800171a",
            "code": "\nundefined4 processData_0800171a(uint **data)\n\n{\n  char firstChar;\n  uint *tempPtr;\n  \n  firstChar = *(char *)((int)data + 0x3d);\n  tempPtr = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (firstChar == '!')) {\n    if ((tempPtr == (uint *)0x4) || ((tempPtr == (uint *)0x8 || (tempPtr == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((firstChar == '!') || ((*(char *)((int)data + 0x3e) == '@' && (firstChar == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          tempPtr = data[9];\n          data[9] = (uint *)((int)tempPtr + 1);\n          (*data)[4] = (uint)*(byte *)tempPtr;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      tempPtr = data[9];\n      data[9] = (uint *)((int)tempPtr + 1);\n      (*data)[4] = (uint)*(byte *)tempPtr;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "process_data_0800171a",
                "param_1": "data",
                "cVar1": "firstChar",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "process_param_08001864",
            "code": "\nundefined4 processParam_08001864(uint **params)\n\n{\n  uint *ptrValue;\n  \n  ptrValue = ptrCheck;\n  if (*(char *)((int)params + 0x3d) == '!') {\n    if (*(short *)((int)params + 0x2a) == 0) {\n      if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) || (ptrValue == (uint *)0xffff0000)) {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        **params = **params | 0x200;\n        ptrValueC = (uint *)0x0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        if (*(char *)((int)params + 0x3e) == 'charValue3') {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        ptrValueC = (uint *)0x11;\n        *(undefined *)((int)params + 0x3e) = 0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      ptrValue = params[9];\n      params[9] = (uint *)((int)ptrValue + 1);\n      (*params)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "process_param_08001864",
                "param_1": "params",
                "puVar1": "ptrValue",
                "param_1[0xb]": "ptrCheck",
                "param_1[0xc]": "ptrValueC",
                "@": "charValue3"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "process_string_08001904",
            "code": "\nundefined4 processString_08001904(uint **pointerToParams)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)pointerToParams + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)pointerToParams + 0x2a) < 4) {\n      if (*(ushort *)((int)pointerToParams + 0x2a) < 2) {\n        **pointerToParams = **pointerToParams & 0xfffffbff;\n        (*pointerToParams)[1] = (*pointerToParams)[1] & 0xfffff8ff;\n        tempPointer = pointerToData;\n        pointerToData = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)(*pointerToParams)[4];\n        *(short *)((int)pointerToParams + 0x2a) = *(short *)((int)pointerToParams + 0x2a) + -1;\n        *(undefined *)((int)pointerToParams + 0x3d) = 0x20;\n        pointerToParams[0xc] = (uint *)0x0;\n        if (*(char *)((int)pointerToParams + 0x3e) == '@') {\n          *(undefined *)((int)pointerToParams + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)pointerToParams + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      tempPointer = pointerToData;\n      pointerToData = (uint *)((int)tempPointer + 1);\n      *(char *)tempPointer = (char)(*pointerToParams)[4];\n      *(short *)((int)pointerToParams + 0x2a) = *(short *)((int)pointerToParams + 0x2a) + -1;\n      if (*(short *)((int)pointerToParams + 0x2a) == 3) {\n        (*pointerToParams)[1] = (*pointerToParams)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "process_string_08001904",
                "param_1": "pointerToParams",
                "puVar1": "tempPointer",
                "param_1[9]": "pointerToData"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "process_input_080019a0",
            "code": "\nundefined4 processInput_080019a0(uint **inputArray)\n\n{\n  uint *tempPointer;\n  \n  if (*(short *)((int)inputArray + 0x2a) == 4) {\n    (*inputArray)[1] = (*inputArray)[1] & 0xfffffbff;\n    tempPointer = inputArray[9];\n    inputArray[9] = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputArray)[4];\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputArray + 0x2a) == 3) {\n    (*inputArray)[1] = (*inputArray)[1] & 0xfffffbff;\n    **inputArray = **inputArray & 0xfffffbff;\n    tempPointer = inputArray[9];\n    inputArray[9] = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputArray)[4];\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputArray + 0x2a) == 2) {\n    if ((int)inputArray[0xb] - 1U < 2) {\n      **inputArray = **inputArray & 0xfffffbff;\n      **inputArray = **inputArray | 0x100;\n    }\n    else {\n      **inputArray = **inputArray | 0x200;\n    }\n    tempPointer = inputArray[9];\n    inputArray[9] = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputArray)[4];\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    tempPointer = inputArray[9];\n    inputArray[9] = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputArray)[4];\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    (*inputArray)[1] = (*inputArray)[1] & 0xfffffcff;\n    *(undefined *)((int)inputArray + 0x3d) = 0x20;\n    inputArray[0xc] = (uint *)0x0;\n    if (*(char *)((int)inputArray + 0x3e) == '@') {\n      *(undefined *)((int)inputArray + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)inputArray + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    tempPointer = inputArray[9];\n    inputArray[9] = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputArray)[4];\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "process_input_080019a0",
                "param_1": "inputArray",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_param_08001ab0",
            "code": "\nvoid processParam_08001ab0(uint **parameters)\n\n{\n  int index;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  ptr2 = *parameters;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_08001aac(parameters);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      FUN_08003900(parameters);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x35) == '\\x01') {\n      parameters[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      index = FUN_08000f8c(parameters[0xe]);\n      if (index != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          ptr2 = parameters[9];\n          parameters[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0x14])();\n      }\n    }\n    else {\n      parameters[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      index = FUN_08000f8c(parameters[0xd]);\n      if (index != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_080038d0(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_param_08001ab0",
                "param_1": "parameters",
                "iVar1": "index",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_binary_08001bfc",
            "code": "\nundefined4 processBinary_08001bfc(uint **binaryData)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)binaryData + 0x3d);\n  (*binaryData)[1] = (*binaryData)[1] & 0xfffff8ff;\n  **binaryData = **binaryData | 1;\n  **binaryData = **binaryData & 0xfffffbff;\n  ptr1 = *binaryData;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)binaryData + 0x3d) == '\\\"') || (*(char *)((int)binaryData + 0x3d) == '*')) {\n      *(short *)((int)binaryData + 0x2a) = (short)*(undefined4 *)(*binaryData[0xe] + 4);\n    }\n    else {\n      *(short *)((int)binaryData + 0x2a) = (short)*(undefined4 *)(*binaryData[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)binaryData + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = binaryData[9];\n      binaryData[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)binaryData + 0x2a) = *(short *)((int)binaryData + 0x2a) + -1;\n    }\n    if (((*binaryData)[5] & 0x40) != 0) {\n      ptr1 = binaryData[9];\n      binaryData[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*binaryData)[4];\n      *(short *)((int)binaryData + 0x2a) = *(short *)((int)binaryData + 0x2a) + -1;\n    }\n    binaryData[0x10] = (uint *)((uint)binaryData[0x10] | 4);\n  }\n  if (binaryData[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      binaryData[0xb] = (uint *)0xffff0000;\n      binaryData[0xc] = (uint *)0x0;\n      *(undefined *)((int)binaryData + 0x3d) = 0x20;\n      *(undefined *)((int)binaryData + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((binaryData[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      binaryData[0xc] = (uint *)0x0;\n      *(undefined *)((int)binaryData + 0x3d) = 0x20;\n      *(undefined *)((int)binaryData + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_binary_08001bfc",
                "param_1": "binaryData",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "process_data_08001d00",
            "code": "\nvoid processData_08001d00(int *data)\n\n{\n  int value;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  value = *data;\n  flag3 = *(uint *)(value + 0x18);\n  flag1 = *(uint *)(value + 0x14);\n  flag2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_08001256(data);\n        }\n      }\n      else {\n        FUN_0800124a(data);\n      }\n    }\n    else {\n      FUN_080011c0(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08001904(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_080019a0(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_0800171a(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08001864(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08001bfc(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_0800160e(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08001440(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_080015bc(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08001420(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "process_data_08001d00",
                "param_1": "data",
                "iVar1": "value",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_0800160e",
                "FUN_08001256",
                "FUN_080015bc",
                "FUN_08001440",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_0800124a",
                "FUN_08001864",
                "FUN_08001bfc",
                "FUN_0800171a",
                "FUN_080019a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "check_and_set_flags_08001e68",
            "code": "\nvoid checkAndSetFlags_08001e68(uint **pointerArray)\n\n{\n  char characterVar;\n  uint *pointerVar;\n  uint flagVar1;\n  uint flagVar2;\n  \n  pointerVar = *pointerArray;\n  flagVar1 = pointerVar[5];\n  flagVar2 = pointerVar[1];\n  if (((flagVar1 & 0x10100) != 0) && ((flagVar2 & 0x100) != 0)) {\n    pointerArray[0x10] = (uint *)((uint)pointerArray[0x10] | 1);\n    pointerVar[5] = 0xfffffeff;\n  }\n  if (((flagVar1 & 0x10200) != 0) && ((flagVar2 & 0x100) != 0)) {\n    pointerArray[0x10] = (uint *)((uint)pointerArray[0x10] | 2);\n    (*pointerArray)[5] = 0xfffffdff;\n  }\n  if (((flagVar1 & 0x10400) != 0) && ((flagVar2 & 0x100) != 0)) {\n    characterVar = *(char *)((int)pointerArray + 0x3d);\n    if (((*(char *)((int)pointerArray + 0x3e) == ' ') && (*(short *)((int)pointerArray + 0x2a) == 0)) &&\n       (((characterVar == '!' || (characterVar == ')')) || ((characterVar == '(' && (pointerArray[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(pointerArray);\n    }\n    else {\n      pointerArray[0x10] = (uint *)((uint)pointerArray[0x10] | 4);\n      if (*(char *)((int)pointerArray + 0x3e) == '\\x10') {\n        **pointerArray = **pointerArray | 0x200;\n      }\n      (*pointerArray)[5] = 0xfffffbff;\n    }\n  }\n  if (((flagVar1 & 0x10800) != 0) && ((flagVar2 & 0x100) != 0)) {\n    pointerArray[0x10] = (uint *)((uint)pointerArray[0x10] | 8);\n    (*pointerArray)[5] = 0xfffff7ff;\n  }\n  if (pointerArray[0x10] != (uint *)0x0) {\n    FUN_08001ab0(pointerArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "check_and_set_flags_08001e68",
                "param_1": "pointerArray",
                "cVar1": "characterVar",
                "puVar2": "pointerVar",
                "uVar3": "flagVar1",
                "uVar4": "flagVar2"
            },
            "calling": [],
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "initialize_system_08001f9c",
            "code": "\n\n\nundefined4 initializeSystem_08001f9c(void)\n\n{\n  int initialValue;\n  int currentValue;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initialValue = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initialValue = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        currentValue = FUN_08000e30();\n      } while ((uint)(currentValue - initialValue) < 0x3e9);\n      return 3;\n    }\n    currentValue = FUN_08000e30();\n  } while ((uint)(currentValue - initialValue) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "initialize_system_08001f9c",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "check_flags_0800201c",
            "code": "\n\n\nundefined4 check_flags_0800201c(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  bool flag_set;\n  \n  if (flags == (uint *)0x0) {\n    return 1;\n  }\n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (flags[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (flags[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          current_time = FUN_08000e30();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          current_time = FUN_08000e30();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | flags[4] << 3;\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | flags[4] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flag_set = (_DAT_40023840 & 0x10000000) == 0;\n    if (flag_set) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flags[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (flags[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (flags[2] == 0) {\n      start_time = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag_set) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (flags[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[6] == 2) {\n    _DAT_42470060 = 0;\n    start_time = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             flags[7] | flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 |\n             flags[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        start_time = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08000e30();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08000e30();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    start_time = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08000e30();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "check_flags_0800201c",
                "param_1": "flags",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "result",
                "bVar4": "flag_set"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_delay_080023b4",
            "code": "\n\n\nuint calculate_delay_080023b4(void)\n\n{\n  undefined4 input_parameter;\n  uint uVar1;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    uVar1 = (_DAT_40023804 << 0x11) >> 0x17;\n    uVar1 = FUN_080002d0(uVar1 * 16000000,\n                         (((uint)(uVar1 * 0x20 < uVar1) * -0x3f -\n                          (uint)(uVar1 * 0x7c0 < uVar1 * 0x1f)) * 8 +\n                         (uint)CARRY4(uVar1 * 0x3d08,uVar1)) * 0x400 | uVar1 * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_parameter);\n  }\n  else {\n    uVar1 = (_DAT_40023804 << 0x11) >> 0x17;\n    uVar1 = FUN_080002d0(uVar1 * 8000000,\n                         (((uint)(uVar1 * 0x20 < uVar1) * -0x3f -\n                          (uint)(uVar1 * 0x7c0 < uVar1 * 0x1f)) * 8 +\n                         (uint)CARRY4(uVar1 * 0x3d08,uVar1)) * 0x200,_DAT_40023804 & 0x3f,0,input_parameter);\n  }\n  return uVar1 / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "in_r3": "input_parameter",
                "FUN_080023b4": "calculate_delay_080023b4"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "initialize_settings_08002488",
            "code": "\n\n\nundefined4 initializeSettings_08002488(uint *settings,uint size)\n\n{\n  int iVar1;\n  int iVar2;\n  uint tempValue;\n  \n  if (settings == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    if ((*settings & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*settings & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    tempValue = settings[1];\n    if (tempValue == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (tempValue - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = tempValue | _DAT_40023808 & 0xfffffffc;\n    iVar1 = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == settings[1] * 4) break;\n      iVar2 = FUN_08000e30();\n      if (5000 < (uint)(iVar2 - iVar1)) {\n        return 3;\n      }\n    }\n  }\n  if (size < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | settings[4] << 3;\n  }\n  tempValue = FUN_080023b4();\n  DAT_2000002c = tempValue >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "initialize_settings_08002488",
                "param_1": "settings",
                "param_2": "size",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_data_080025e0",
            "code": "\nundefined4 get_data_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_data_080025e0"
            },
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "get_shifted_value_080025ec",
            "code": "\n\n\nuint getShiftedValue_080025ec(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "get_shifted_value_080025ec",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "calculate_shifted_value_0800260c",
            "code": "\n\n\nuint calculateShiftedValue_0800260c(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "calculate_shifted_value_0800260c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "update_configuration_0800262c",
            "code": "\n\n\nvoid updateConfiguration_0800262c(int *config)\n\n{\n  if (((*(uint *)(*config + 0xc) & 0x100) != 0) && ((*(uint *)(*config + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(uint *)(*config + 0xc) = *(uint *)(*config + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*config + 0xc) & 0x200) != 0) && ((*(uint *)(*config + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(config);\n    *(uint *)(*config + 0xc) = *(uint *)(*config + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)config + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "update_configuration_0800262c",
                "param_1": "config"
            },
            "calling": [],
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "update_parameters_0800268e",
            "code": "\nvoid updateParameters_0800268e(uint **pointer)\n\n{\n  uint *valuePointer;\n  \n  *(undefined *)((int)pointer + 0x39) = 2;\n  valuePointer = *pointer;\n  if ((valuePointer[8] & 0x1111) == 0) {\n    if ((valuePointer[8] & 0x444) == 0) {\n      *valuePointer = *valuePointer & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(pointer);\n  *(undefined *)((int)pointer + 0x39) = 0;\n  *(undefined *)(pointer + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "update_parameters_0800268e",
                "param_1": "pointer",
                "puVar1": "valuePointer"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "perform_actions_on_parameter_080026ce",
            "code": "\nvoid performActionsOnParameter_080026ce(int *parameter)\n\n{\n  int tempVar;\n  \n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 2) != 0) && ((*(uint *)(tempVar + 0xc) & 2) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffffd;\n    *(undefined *)(parameter + 6) = 1;\n    if ((*(uint *)(*parameter + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(parameter);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(parameter + 6) = 0;\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 4) != 0) && ((*(uint *)(tempVar + 0xc) & 4) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffffb;\n    *(undefined *)(parameter + 6) = 2;\n    if ((*(uint *)(*parameter + 0x18) & 0x300) == 0) {\n      FUN_08003754(parameter);\n      FUNC_080026ca(parameter);\n    }\n    else {\n      FUNC_080026c8(parameter);\n    }\n    *(undefined *)(parameter + 6) = 0;\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 8) != 0) && ((*(uint *)(tempVar + 0xc) & 8) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffff7;\n    *(undefined *)(parameter + 6) = 4;\n    if ((*(uint *)(*parameter + 0x1c) & 3) == 0) {\n      FUN_08003754(parameter);\n      FUNC_080026ca(parameter);\n    }\n    else {\n      FUNC_080026c8(parameter);\n    }\n    *(undefined *)(parameter + 6) = 0;\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 0x10) != 0) && ((*(uint *)(tempVar + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffffef;\n    *(undefined *)(parameter + 6) = 8;\n    if ((*(uint *)(*parameter + 0x1c) & 0x300) == 0) {\n      FUN_08003754(parameter);\n      FUNC_080026ca(parameter);\n    }\n    else {\n      FUNC_080026c8(parameter);\n    }\n    *(undefined *)(parameter + 6) = 0;\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 1) != 0) && ((*(uint *)(tempVar + 0xc) & 1) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffffe;\n    FUN_0800376e(parameter);\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 0x80) != 0) && ((*(uint *)(tempVar + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffff7f;\n    FUNC_0800293e(parameter);\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 0x40) != 0) && ((*(uint *)(tempVar + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffffbf;\n    FUNC_080026cc(parameter);\n  }\n  tempVar = *parameter;\n  if (((*(uint *)(tempVar + 0x10) & 0x20) != 0) && ((*(uint *)(tempVar + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffffdf;\n    FUNC_0800293c(parameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "perform_actions_on_parameter_080026ce",
                "param_1": "parameter",
                "iVar1": "tempVar"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800293c",
                "FUN_080026c8",
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_0800293e",
                "FUN_0800376e",
                "FUN_080026cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_bit_value_08002848",
            "code": "\nvoid updateBitValue_08002848(int address,uint bitPosition,int newValue)\n\n{\n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_bit_value_08002848",
                "param_1": "address",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "update_bit_fields_08002864",
            "code": "\nundefined4 updateBitFields_08002864(uint **ptrToPointerArray,undefined4 param)\n\n{\n  bool isSpecialAddr;\n  uint *ptrToData;\n  \n  FUN_08002848(*ptrToPointerArray,param,0);\n  ptrToData = *ptrToPointerArray;\n  if (ptrToData == (uint *)0x40010000) {\n    isSpecialAddr = true;\n  }\n  else if (ptrToData == (uint *)0x40010400) {\n    isSpecialAddr = true;\n  }\n  else {\n    isSpecialAddr = false;\n  }\n  if (((isSpecialAddr) && ((ptrToData[8] & 0x1111) == 0)) && ((ptrToData[8] & 0x444) == 0)) {\n    ptrToData[0x11] = ptrToData[0x11] & 0xffff7fff;\n  }\n  ptrToData = *ptrToPointerArray;\n  if (((ptrToData[8] & 0x1111) == 0) && ((ptrToData[8] & 0x444) == 0)) {\n    *ptrToData = *ptrToData & 0xfffffffe;\n  }\n  *(undefined *)((int)ptrToPointerArray + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "update_bit_fields_08002864",
                "param_1": "ptrToPointerArray",
                "param_2": "param",
                "bVar1": "isSpecialAddr",
                "puVar2": "ptrToData"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "update_bit_value_080028d4",
            "code": "\nvoid updateBitValue_080028d4(int dataPointer,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "update_bit_value_080028d4",
                "param_1": "dataPointer",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_flags_and_values_080028f0",
            "code": "\nundefined4 updateFlagsAndValues_080028f0(uint **data,undefined4 value)\n\n{\n  uint *dataPtr;\n  \n  FUN_080028d4(*data,value,0);\n  dataPtr = *data;\n  if (((dataPtr[8] & 0x1111) == 0) && ((dataPtr[8] & 0x444) == 0)) {\n    dataPtr[0x11] = dataPtr[0x11] & 0xffff7fff;\n  }\n  dataPtr = *data;\n  if (((dataPtr[8] & 0x1111) == 0) && ((dataPtr[8] & 0x444) == 0)) {\n    *dataPtr = *dataPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_flags_and_values_080028f0",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "dataPtr"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "clear_flags_08002940",
            "code": "\nvoid clearFlags_08002940(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xfffffedf;\n  *(uint *)(*pointer + 0x14) = *(uint *)(*pointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "clear_flags_08002940",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_data_0800295c",
            "code": "\nundefined4 processData_0800295c(int *dataPtr)\n\n{\n  short count;\n  byte *bytePtr;\n  \n  if (*(char *)((int)dataPtr + 0x39) != '!') {\n    return 2;\n  }\n  if (dataPtr[2] == 0x1000) {\n    *(uint *)(*dataPtr + 4) = *(ushort *)dataPtr[8] & 0x1ff;\n    if (dataPtr[4] == 0) {\n      dataPtr[8] = dataPtr[8] + 2;\n    }\n    else {\n      dataPtr[8] = dataPtr[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)dataPtr[8];\n    dataPtr[8] = (int)(bytePtr + 1);\n    *(uint *)(*dataPtr + 4) = (uint)*bytePtr;\n  }\n  count = *(short *)((int)dataPtr + 0x26) + -1;\n  *(short *)((int)dataPtr + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffff7f;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "dataPtr",
                "sVar1": "count",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_values_080029c8",
            "code": "\nvoid calculateValues_080029c8(int *parameters)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       *(uint *)(*parameters + 0xc) & 0xffff69f3 | parameters[2] | parameters[4] | parameters[5] | parameters[7];\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  if (parameters[7] == 0x8000) {\n    value10 = *parameters;\n    if ((value10 != 0x40011000) && (value10 != 0x40011400)) {\n      value1 = FUN_080025ec();\n      value6 = parameters[1];\n      value2 = FUN_080025ec();\n      value7 = parameters[1];\n      value3 = FUN_080025ec();\n      value8 = parameters[1];\n      value4 = FUN_080025ec();\n      value9 = parameters[1];\n      value5 = FUN_080025ec();\n      *(uint *)(value10 + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(value4 * 0x19) / (uint)(value9 << 1) +\n                          (int)(((ulonglong)(uint)(value5 * 0x19) /\n                                (ulonglong)(uint)(parameters[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(value2 * 0x19) / (uint)(value7 << 1) +\n             (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 1)) / 100) * 0x10;\n      return;\n    }\n    value1 = FUN_0800260c();\n    value6 = parameters[1];\n    value2 = FUN_0800260c();\n    value7 = parameters[1];\n    value3 = FUN_0800260c();\n    value8 = parameters[1];\n    value4 = FUN_0800260c();\n    value9 = parameters[1];\n    value5 = FUN_0800260c();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 1) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 1) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 1)) / 100) * 0x10;\n    return;\n  }\n  value10 = *parameters;\n  if ((value10 != 0x40011000) && (value10 != 0x40011400)) {\n    value1 = FUN_080025ec();\n    value6 = parameters[1];\n    value2 = FUN_080025ec();\n    value7 = parameters[1];\n    value3 = FUN_080025ec();\n    value8 = parameters[1];\n    value4 = FUN_080025ec();\n    value9 = parameters[1];\n    value5 = FUN_080025ec();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value1 = FUN_0800260c();\n  value6 = parameters[1];\n  value2 = FUN_0800260c();\n  value7 = parameters[1];\n  value3 = FUN_0800260c();\n  value8 = parameters[1];\n  value4 = FUN_0800260c();\n  value9 = parameters[1];\n  value5 = FUN_0800260c();\n  *(uint *)(value10 + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                      (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n         (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_values_080029c8",
                "param_1": "parameters",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "iVar10": "value10"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "check_param_constraints_08002d0c",
            "code": "\nundefined4 check_param_constraints_08002d0c(uint **param_pointer,uint param_mask,uint expected_boolean,int comparison_value,uint max_difference)\n\n{\n  int result;\n  \n  do {\n    if (((param_mask & ~**param_pointer) == 0) != expected_boolean) {\n      return 0;\n    }\n  } while ((max_difference == 0xffffffff) ||\n          ((max_difference != 0 && (result = FUN_08000e30(), (uint)(result - comparison_value) <= max_difference))));\n  (*param_pointer)[3] = (*param_pointer)[3] & 0xfffffe5f;\n  (*param_pointer)[5] = (*param_pointer)[5] & 0xfffffffe;\n  *(undefined *)((int)param_pointer + 0x39) = 0x20;\n  *(undefined *)((int)param_pointer + 0x3a) = 0x20;\n  *(undefined *)(param_pointer + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "check_param_constraints_08002d0c",
                "param_1": "param_pointer",
                "param_2": "param_mask",
                "param_3": "expected_boolean",
                "param_4": "comparison_value",
                "param_5": "max_difference",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "initialize_data_structure_08002d72",
            "code": "\nundefined4 initialize_data_structure_08002d72(int *data_structure_ptr)\n\n{\n  if (data_structure_ptr != (int *)0x0) {\n    if (*(char *)((int)data_structure_ptr + 0x39) == '\\0') {\n      *(undefined *)(data_structure_ptr + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)data_structure_ptr + 0x39) = 0x24;\n    *(uint *)(*data_structure_ptr + 0xc) = *(uint *)(*data_structure_ptr + 0xc) & 0xffffdfff;\n    FUN_080029c8(data_structure_ptr);\n    *(uint *)(*data_structure_ptr + 0x10) = *(uint *)(*data_structure_ptr + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_structure_ptr + 0x14) = *(uint *)(*data_structure_ptr + 0x14) & 0xffffffd5;\n    *(uint *)(*data_structure_ptr + 0xc) = *(uint *)(*data_structure_ptr + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)data_structure_ptr + 0x39) = 0x20;\n    *(undefined *)((int)data_structure_ptr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "initialize_data_structure_08002d72",
                "param_1": "data_structure_ptr",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "process_input_08002dd0",
            "code": "\nundefined4 processInput_08002dd0(int *inputArray,ushort *inputData,int inputLength,undefined4 param_4)\n\n{\n  int returnValue;\n  undefined4 result;\n  \n  if (*(char *)((int)inputArray + 0x39) == ' ') {\n    if (inputData == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (inputLength == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputArray + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputArray + 0xe) = 1;\n      inputFlag = 0;\n      *(undefined *)((int)inputArray + 0x39) = 0x21;\n      result = FUN_08000e30();\n      *(short *)(inputArray + 9) = (short)inputLength;\n      *(short *)((int)inputArray + 0x26) = (short)inputLength;\n      while (*(short *)((int)inputArray + 0x26) != 0) {\n        *(short *)((int)inputArray + 0x26) = *(short *)((int)inputArray + 0x26) + -1;\n        if (arrayValue == 0x1000) {\n          returnValue = FUN_08002d0c(inputArray,0x80,0,result,param_4);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = *inputData & 0x1ff;\n          if (inputArray[4] == 0) {\n            inputData = inputData + 1;\n          }\n          else {\n            inputData = (ushort *)((int)inputData + 1);\n          }\n        }\n        else {\n          returnValue = FUN_08002d0c(inputArray,0x80,0,result,param_4);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = (uint)*(byte *)inputData;\n          inputData = (ushort *)((int)inputData + 1);\n        }\n      }\n      returnValue = FUN_08002d0c(inputArray,0x40,0,result,param_4);\n      if (returnValue == 0) {\n        *(undefined *)((int)inputArray + 0x39) = 0x20;\n        *(undefined *)(inputArray + 0xe) = 0;\n        result = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "process_input_08002dd0",
                "param_1": "inputArray",
                "param_2": "inputData",
                "param_3": "inputLength",
                "iVar1": "returnValue",
                "uVar2": "result",
                "param_1[0xf]": "inputFlag",
                "param_1[2]": "arrayValue"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "update_data_08002eb2",
            "code": "\nundefined4 updateData_08002eb2(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    param1Value = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    param3 = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "update_data_08002eb2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "param1Value",
                "param_1[0xf]": "param3"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "validate_and_update_data_08002efa",
            "code": "\nundefined4 validate_and_update_data_08002efa(int *data_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)data_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data_array + 0xe) != '\\x01') {\n    updated_value_1 = value_1;\n    *(short *)(data_array + 0xb) = (short)value_2;\n    *(short *)((int)data_array + 0x2e) = (short)value_2;\n    counter = 0;\n    *(undefined *)((int)data_array + 0x3a) = 0x22;\n    *(undefined *)(data_array + 0xe) = 0;\n    *(uint *)(*data_array + 0x14) = *(uint *)(*data_array + 0x14) | 1;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "validate_and_update_data_08002efa",
                "param_1": "data_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[10]": "updated_value_1",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "set_permission_and_call_function_08002f4c",
            "code": "\nundefined4 setPermissionAndCallFunction_08002f4c(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)pointer + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "set_permission_and_call_function_08002f4c",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "process_data_08002f66",
            "code": "\nundefined4 processData_08002f66(int *inputData)\n\n{\n  byte *bytePtr;\n  short count;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)inputData + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (value1 == 0x1000) {\n    if (value2 == 0) {\n      *(ushort *)outputIndex = (ushort)((uint)(*(int *)(*inputData + 4) << 0x17) >> 0x17);\n      outputIndex = outputIndex + 2;\n    }\n    else {\n      *(ushort *)outputIndex = (ushort)*(undefined4 *)(*inputData + 4) & 0xff;\n      outputIndex = outputIndex + 1;\n    }\n  }\n  else if (value2 == 0) {\n    undefinedPtr = (undefined *)outputIndex;\n    outputIndex = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*inputData + 4);\n  }\n  else {\n    bytePtr = (byte *)outputIndex;\n    outputIndex = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*inputData + 4) & 0x7f;\n  }\n  count = *(short *)((int)inputData + 0x2e) + -1;\n  *(short *)((int)inputData + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xfffffedf;\n  *(uint *)(*inputData + 0x14) = *(uint *)(*inputData + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputData + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "process_data_08002f66",
                "param_1": "inputData",
                "pbVar1": "bytePtr",
                "sVar2": "count",
                "puVar3": "undefinedPtr",
                "param_1[2]": "value1",
                "param_1[4]": "value2",
                "param_1[10]": "outputIndex"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "check_flags_and_execute_08002ffc",
            "code": "\nvoid check_flags_and_execute_08002ffc(uint **ptr_array)\n\n{\n  int return_value;\n  uint value_2;\n  uint *ptr_var;\n  uint value_4;\n  uint value_5;\n  \n  ptr_var = *ptr_array;\n  value_5 = *ptr_var;\n  value_2 = ptr_var[3];\n  if ((((value_5 & 0xf) == 0) && ((value_5 & 0x20) != 0)) && ((value_2 & 0x20) != 0)) {\n    FUN_08002f66(ptr_array);\n    return;\n  }\n  if (((value_5 & 0xf) == 0) || ((value_4 = ptr_var[5] & 1, value_4 == 0 && ((value_2 & 0x120) == 0)))) {\n    if (((value_5 & 0x80) != 0) && ((value_2 & 0x80) != 0)) {\n      FUN_0800295c(ptr_array);\n      return;\n    }\n    if (((value_5 & 0x40) != 0) && ((value_2 & 0x40) != 0)) {\n      FUN_08002f4c(ptr_array);\n    }\n  }\n  else {\n    if (((value_5 & 1) != 0) && ((value_2 & 0x100) != 0)) {\n      ptr_array[0xf] = (uint *)((uint)ptr_array[0xf] | 1);\n    }\n    if (((value_5 & 4) != 0) && (value_4 != 0)) {\n      ptr_array[0xf] = (uint *)((uint)ptr_array[0xf] | 2);\n    }\n    if (((value_5 & 2) != 0) && (value_4 != 0)) {\n      ptr_array[0xf] = (uint *)((uint)ptr_array[0xf] | 4);\n    }\n    if (((value_5 & 8) != 0) && (value_4 != 0)) {\n      ptr_array[0xf] = (uint *)((uint)ptr_array[0xf] | 8);\n    }\n    if (ptr_array[0xf] != (uint *)0x0) {\n      if (((value_5 & 0x20) != 0) && ((value_2 & 0x20) != 0)) {\n        FUN_08002f66(ptr_array);\n      }\n      if ((((uint)ptr_array[0xf] & 8) == 0) && (((*ptr_array)[5] & 0x40) == 0)) {\n        FUNC_08003f94(ptr_array);\n        ptr_array[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(ptr_array);\n      ptr_var = *ptr_array;\n      if ((ptr_var[5] & 0x40) == 0) {\n        FUNC_08003f94(ptr_array);\n        return;\n      }\n      ptr_var[5] = ptr_var[5] & 0xffffffbf;\n      if (ptr_array[0xd] == (uint *)0x0) {\n        FUNC_08003f94(ptr_array);\n        return;\n      }\n      ptr_array[0xd][0x14] = (uint)&LAB_0800311c_1;\n      return_value = FUN_08000f8c(ptr_array[0xd]);\n      if (return_value != 0) {\n        (*(code *)ptr_array[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "check_flags_and_execute_08002ffc",
                "param_1": "ptr_array",
                "iVar1": "return_value",
                "uVar2": "value_2",
                "puVar3": "ptr_var",
                "uVar4": "value_4",
                "uVar5": "value_5"
            },
            "calling": [],
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002940",
                "FUN_08002f4c",
                "FUN_08000f8c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_byte_values_0800312c",
            "code": "\nbyte combineByteValues_0800312c(int address)\n\n{\n  return *(byte *)(address + 0x3a) | *(byte *)(address + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_byte_values_0800312c",
                "param_1": "address"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "extract_bit_08003138",
            "code": "\nuint extractBit_08003138(uint value,int ptr)\n\n{\n  return *(uint *)(ptr + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "extract_bit_08003138",
                "param_1": "value",
                "param_2": "ptr"
            },
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_bit_in_array_0800314e",
            "code": "\nvoid setBitInArray_0800314e(uint inputValue,int arrayAddress)\n\n{\n  uint shiftedValue;\n  \n  shiftedValue = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedValue * 4) = *(uint *)(arrayAddress + shiftedValue * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_bit_in_array_0800314e",
                "param_1": "inputValue",
                "param_2": "arrayAddress",
                "uVar1": "shiftedValue"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "update_bit_0800316c",
            "code": "\nvoid updateBit_0800316c(uint bitPosition,int arrayAddress)\n\n{\n  uint shiftedPosition;\n  \n  shiftedPosition = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedPosition * 4) = *(uint *)(arrayAddress + shiftedPosition * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "update_bit_0800316c",
                "param_1": "bitPosition",
                "param_2": "arrayAddress",
                "uVar1": "shiftedPosition"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "get_constant_value_0800318c",
            "code": "\nundefined4 getConstantValue_0800318c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "get_constant_value_0800318c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_flag_and_return_address_080031fc",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_080031fc(undefined4 flag)\n\n{\n  undefined4 result;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    result = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    result = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    result = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    result = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    result = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    result = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    result = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    result = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    result = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    result = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    result = 0x40022800;\n    break;\n  default:\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_flag_and_return_address_080031fc",
                "param_1": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_validity_08003380",
            "code": "\nundefined4 check_validity_08003380(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input1,&DAT_08005a18,input3,input4,input4);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_validity_08003380",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "decode_value_0800339c",
            "code": "\nundefined4 decode_value_0800339c(undefined4 input_param,undefined4 unused_param,undefined4 data_param,undefined4 size_param)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_0800354a(input_param,&DAT_08005a3c,data_param,size_param,size_param);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "decode_value_0800339c",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "data_param",
                "param_4": "size_param",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_control_bits_080033c8",
            "code": "\n\n\nvoid clearControlBits_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_control_bits_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "process_data_080033d8",
            "code": "\nvoid processData_080033d8(undefined4 inputData)\n\n{\n  int result;\n  int dataBuffer [5];\n  \n  dataBuffer[0] = FUN_080034f4(inputData,&DAT_08005a18);\n  if ((dataBuffer[0] != 0) && ((result = FUN_08003380(inputData), result == 0 || (result == 0x10)))) {\n    FUN_08000f72(dataBuffer,result);\n    FUN_08000f56(dataBuffer);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "process_data_080033d8",
                "param_1": "inputData",
                "iVar1": "result",
                "local_1c": "dataBuffer"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08003380",
                "FUN_08000f72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "initialize_application_0800340c",
            "code": "\nvoid initializeApplication_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "initialize_application_0800340c"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "process_function_08003414",
            "code": "\nvoid processFunction_08003414(undefined4 input)\n\n{\n  int result;\n  uint flag;\n  int array [16];\n  \n  array[0] = FUN_080034f4(input,&DAT_08005a3c);\n  if ((array[0] != 0) &&\n     ((((result = FUN_0800339c(input), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_0800354a(input,&DAT_08005a3c);\n    if ((flag & 0x100000) == 0) {\n      FUN_08002864(array,result);\n    }\n    else {\n      FUN_080028f0(array,result);\n    }\n    FUN_0800268e(array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "process_function_08003414",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "flag",
                "local_4c": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_080034f4",
                "FUN_08002864",
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_application_0800346c",
            "code": "\nvoid initialize_application_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_application_0800346c"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "execute_initialization_08003476",
            "code": "\nvoid execute_initialization_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "execute_initialization_08003476"
            },
            "calling": [],
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "initialize_bit_08003486",
            "code": "\nvoid initializeBit_08003486(uint input,undefined4 paramA,undefined4 paramB)\n\n{\n  undefined4 shiftedValue;\n  uint bitMask;\n  undefined4 tempA;\n  undefined4 tempB;\n  undefined4 constant;\n  \n  shiftedValue = FUN_080031fc((input << 0x18) >> 0x1c);\n  bitMask = 1 << (input & 0xf) & 0xffff;\n  constant = 2;\n  tempA = paramA;\n  tempB = paramB;\n  FUN_08000fb4(shiftedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "initialize_bit_08003486",
                "param_1": "input",
                "param_2": "paramA",
                "param_3": "paramB",
                "uVar1": "shiftedValue",
                "local_24": "bitMask",
                "local_20": "tempA",
                "local_1c": "tempB",
                "local_18": "constant"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "update_parameter_and_call_function_080034b6",
            "code": "\nvoid updateParameterAndCallFunction_080034b6(undefined4 input1,undefined2 input2,int flag,undefined4 data)\n\n{\n  if (flag == 0) {\n    FUN_08001198(input1,input2,0,data,data);\n    return;\n  }\n  FUN_08001198(input1,input2,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "update_parameter_and_call_function_080034b6",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "flag",
                "param_4": "data"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_system_080034ce",
            "code": "\nvoid initialize_system_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_system_080034ce"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_value_index_080034da",
            "code": "\nundefined4 find_value_index_080034da(int target_value,short *value_array)\n\n{\n  while( true ) {\n    if (*value_array == -1) {\n      return 0;\n    }\n    if (*value_array == target_value) break;\n    value_array = value_array + 6;\n  }\n  return *(undefined4 *)(value_array + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_value_index_080034da",
                "param_1": "target_value",
                "param_2": "value_array"
            },
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_and_call_function_080034f4",
            "code": "\nundefined4 check_and_call_function_080034f4(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param != -1) {\n    result = FUN_080034da();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_and_call_function_080034f4",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_value_in_sequence_08003506",
            "code": "\nint find_value_in_sequence_08003506(int value,short *sequence)\n\n{\n  while( true ) {\n    if (*(int *)(sequence + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(sequence + 2) == value) value_found\n    sequence = sequence + 6;\n  }\n  return (int)*sequence;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_value_in_sequence_08003506",
                "param_1": "value",
                "param_2": "sequence",
                "break;": "value_found"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "check_parameter_0800351e",
            "code": "\nundefined4 checkParameter_0800351e(int inputValue)\n\n{\n  undefined4 result;\n  \n  if (inputValue != 0) {\n    result = FUN_08003506();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "check_parameter_0800351e",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_index_0800352e",
            "code": "\nundefined4 find_value_index_0800352e(int value,short *array_of_values)\n\n{\n  while( true ) {\n    if (*array_of_values == -1) {\n      return 0xffffffff;\n    }\n    if (*array_of_values == value) break;\n    array_of_values = array_of_values + 6;\n  }\n  return *(undefined4 *)(array_of_values + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_index_0800352e",
                "param_1": "value",
                "param_2": "array_of_values"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "check_return_value_0800354a",
            "code": "\nundefined4 checkReturnValue_0800354a(int value)\n\n{\n  undefined4 returnValue;\n  \n  if (value == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800352e();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "check_return_value_0800354a",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003380",
                "FUN_08003978"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "check_if_value_exists_0800355e",
            "code": "\nundefined4 check_if_value_exists_0800355e(int search_value,short *array_ptr)\n\n{\n  if (search_value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0;\n    }\n    if (search_value == *array_ptr) break;\n    array_ptr = array_ptr + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "check_if_value_exists_0800355e",
                "param_1": "search_value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "compare_and_return_smaller_08003582",
            "code": "\nint compareAndReturnSmaller_08003582(int inputValue1,int inputValue2)\n\n{\n  if (inputValue1 != inputValue2) {\n    if (inputValue1 == 0) {\n      return inputValue2;\n    }\n    if (inputValue2 == 0) {\n      return inputValue1;\n    }\n    inputValue1 = 0;\n  }\n  return inputValue1;\n}\n\n",
            "renaming": {
                "FUN_08003582": "compare_and_return_smaller_08003582",
                "param_1": "inputValue1",
                "param_2": "inputValue2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "execute_callback_08003594",
            "code": "\nvoid execute_callback_08003594(void)\n\n{\n  if (DAT_20000188 != (code *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "execute_callback_08003594"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_registers_080035bc",
            "code": "\n\n\nvoid initializeRegisters_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_registers_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "update_data_based_on_param_value_080035fc",
            "code": "\n\n\nvoid updateDataBasedOnParamValue_080035fc(int *paramValue)\n\n{\n  if (*paramValue == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*paramValue == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*paramValue == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*paramValue == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*paramValue == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*paramValue == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*paramValue == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*paramValue == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*paramValue == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*paramValue == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*paramValue == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*paramValue == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*paramValue == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*paramValue == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "update_data_based_on_param_value_080035fc",
                "param_1": "paramValue"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "subtract_four_08003750",
            "code": "\nint subtractFour_08003750(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "subtract_four_08003750",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "execute_function_08003754",
            "code": "\nvoid executeFunction_08003754(int inputValue)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08003750();\n  if ((*(function **)(functionPointer + 0x48) != (function *)0x0) && (*(character *)(inputValue + 0x18) == '\\x01')) {\n    (**(function **)(functionPointer + 0x48))(functionPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "execute_function_08003754",
                "param_1": "inputValue",
                "iVar1": "functionPointer",
                "code": "function",
                "char": "character"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "execute_callback_function_0800376e",
            "code": "\nvoid executeCallbackFunction_0800376e(void)\n\n{\n  int resultPointer;\n  \n  resultPointer = FUN_08003750();\n  if (*(code **)(resultPointer + 0x44) != (code *)0x0) {\n    (**(code **)(resultPointer + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "execute_callback_function_0800376e",
                "iVar1": "resultPointer"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_call_functions_0800377c",
            "code": "\nvoid checkAndCallFunctions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_call_functions_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtract_four_0800387c(int num)\n\n{\n  return num + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "num"
            },
            "calling": [
                "FUN_08003880",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "process_params_08003880",
            "code": "\nvoid processParams_08003880(int input1,int input2,int input3,undefined4 input4)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (input3 == *(int *)(input1 + 0xc)) {\n    if (input2 == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5e) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08001460(input1,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5e) = 1;\n    FUN_080014ec(input1,result + 0x68,0x20,8,input4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "process_params_08003880",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_080014ec",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "execute_function_080038d0",
            "code": "\nvoid executeFunction_080038d0(undefined4 input)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_0800387c();\n  if (((*(functionPointer **)(functionPointer + 0x60) != (functionPointer *)0x0) && (*(char *)(functionPointer + 0x5e) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(functionPointer **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08001578(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "execute_function_080038d0",
                "param_1": "input",
                "iVar1": "functionPointer",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08001684",
                "FUN_08001ab0",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "check_and_execute_function_08003900",
            "code": "\nvoid checkAndExecuteFunction_08003900(undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    FUN_08001578(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "check_and_execute_function_08003900",
                "param_1": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "initialize_uart_08003978",
            "code": "\n\n\nvoid initializeUART_08003978(int *uartConfig)\n\n{\n  int uartPin1;\n  int uartPin2;\n  undefined4 peripheral1;\n  uint peripheral2;\n  uint uartPinMask;\n  uint uartPinMode;\n  uint uartPinSpeed;\n  undefined4 uartDataBits;\n  uint uartStopBits;\n  \n  if (uartConfig != (int *)0x0) {\n    uartPin1 = FUN_080034f4((int)*(short *)(uartConfig + 0x16),&DAT_08005ca0);\n    uartPin2 = FUN_080034f4((int)*(short *)((int)uartConfig + 0x5a),&DAT_08005c10);\n    if ((uartPin2 == 0) || (uartPin1 == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin1 = FUN_08003582(uartPin1);\n      *uartConfig = uartPin1;\n      if (uartPin1 == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1 == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(uartConfig + 0x11) = 0;\n          *(undefined *)(uartConfig + 0x17) = 0x25;\n        }\n        else if (uartPin1 == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(uartConfig + 0x11) = 1;\n          *(undefined *)(uartConfig + 0x17) = 0x26;\n        }\n        else if (uartPin1 == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(uartConfig + 0x11) = 2;\n          *(undefined *)(uartConfig + 0x17) = 0x27;\n        }\n        else if (uartPin1 == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(uartConfig + 0x11) = 3;\n          *(undefined *)(uartConfig + 0x17) = 0x34;\n        }\n        else if (uartPin1 == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(uartConfig + 0x11) = 4;\n          *(undefined *)(uartConfig + 0x17) = 0x35;\n        }\n        else if (uartPin1 == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(uartConfig + 0x11) = 5;\n          *(undefined *)(uartConfig + 0x17) = 0x47;\n        }\n        else if (uartPin1 == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(uartConfig + 0x11) = 6;\n          *(undefined *)(uartConfig + 0x17) = 0x52;\n        }\n        else if (uartPin1 == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(uartConfig + 0x11) = 7;\n          *(undefined *)(uartConfig + 0x17) = 0x53;\n        }\n        peripheral1 = FUN_080031fc((uint)((int)*(short *)((int)uartConfig + 0x5a) << 0x18) >> 0x1c);\n        peripheral2 = FUN_0800354a((int)*(short *)((int)uartConfig + 0x5a),&DAT_08005c10);\n        uartPinMask = 1 << (*(ushort *)((int)uartConfig + 0x5a) & 0xf) & 0xffff;\n        uartPinMode = (peripheral2 >> 3 & 1) << 4 | peripheral2 & 7;\n        uartPinSpeed = (peripheral2 << 0x1a) >> 0x1e;\n        uartStopBits = (peripheral2 << 0x11) >> 0x19;\n        uartDataBits = 3;\n        FUN_08000fb4(peripheral1,&uartPinMask);\n        peripheral1 = FUN_080031fc((uint)((int)*(short *)(uartConfig + 0x16) << 0x18) >> 0x1c);\n        peripheral2 = FUN_0800354a((int)*(short *)(uartConfig + 0x16),&DAT_08005ca0);\n        uartPinMask = 1 << (*(ushort *)(uartConfig + 0x16) & 0xf) & 0xffff;\n        uartPinMode = (peripheral2 >> 3 & 1) << 4 | peripheral2 & 7;\n        uartPinSpeed = (peripheral2 << 0x1a) >> 0x1e;\n        FUN_08000fb4(peripheral1,&uartPinMask);\n        (&DAT_200002b4)[*(byte *)(uartConfig + 0x11)] = uartConfig + 1;\n        uartConfig[1] = *uartConfig;\n        uartConfig[2] = uartConfig[0x12];\n        uartConfig[3] = uartConfig[0x13];\n        uartConfig[4] = uartConfig[0x14];\n        uartConfig[5] = uartConfig[0x15];\n        uartConfig[6] = 0xc;\n        uartConfig[7] = 0;\n        uartConfig[8] = 0;\n        FUN_08002d72(uartConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "initialize_uart_08003978",
                "param_1": "uartConfig",
                "iVar1": "uartPin1",
                "iVar2": "uartPin2",
                "uVar3": "peripheral1",
                "uVar4": "peripheral2",
                "local_2c": "uartPinMask",
                "local_28": "uartPinMode",
                "local_24": "uartPinSpeed",
                "local_20": "uartDataBits",
                "local_1c": "uartStopBits"
            },
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08003582",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08004fdc",
                "FUN_0800354a",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_data_08003cc8",
            "code": "\nvoid initializeData_08003cc8(void)\n\n{\n  int result;\n  undefined4 temp;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    temp = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(temp,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "temp"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "check_and_execute_function_08003d18",
            "code": "\nuint check_and_execute_function_08003d18(undefined4 input_param,uint flag)\n\n{\n  int initial_value;\n  int result_of_function;\n  uint counter;\n  \n  initial_value = FUN_08000e30();\n  result_of_function = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result_of_function == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 10 &&\n      (((&DAT_200002b4)[counter] == 0 ||\n       (result_of_function = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[counter] != result_of_function))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (9 < counter) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000074;\n  }\n  do {\n    result_of_function = FUN_08002dd0((&DAT_200002b4)[counter],input_param,flag & 0xffff,1000);\n    if (result_of_function == 0) {\n      return flag;\n    }\n    result_of_function = FUN_08000e30();\n  } while ((uint)(result_of_function - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "check_and_execute_function_08003d18",
                "param_1": "input_param",
                "param_2": "flag",
                "iVar1": "initial_value",
                "iVar2": "result_of_function",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08003cc8",
                "FUN_08002dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "is_flag_set_08003dd0",
            "code": "\nbool isFlagSet_08003dd0(int flagValue)\n\n{\n  uint functionResult;\n  \n  functionResult = FUN_0800312c((&DAT_200002b4)[*(byte *)(flagValue + 0x44)]);\n  return (functionResult & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "is_flag_set_08003dd0",
                "param_1": "flagValue",
                "uVar1": "functionResult"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_condition_met_08003df4",
            "code": "\nbool isConditionMet_08003df4(int input)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte *)(input + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_condition_met_08003df4",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "FUNC_08003e18",
            "code": "\nundefined4 FUNC_08003e18(int param_1,undefined *param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    return 0xffffffff;\n  }\n  iVar1 = FUN_08003dd0();\n  if (iVar1 == 0) {\n    *param_2 = *(undefined *)(param_1 + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte *)(param_1 + 0x44)],param_1 + 0x45,1,&DAT_200002b4,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "FUNC_08003e18"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "process_data_08003e54",
            "code": "\nvoid processData_08003e54(int dataPtr,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPtr != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPtr + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = value1;\n      *(int *)(&DAT_2000023c + index * 4) = dataPtr;\n      FUN_08000e60((int)*(char *)(dataPtr + 0x5c),0,1,index,value3);\n      FUN_08000ec4((int)*(char *)(dataPtr + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(dataPtr + 0x44)],dataPtr + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "process_data_08003e54",
                "param_1": "dataPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08000e60",
                "FUN_08003dd0",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_data_08003eac",
            "code": "\nvoid updateData_08003eac(int dataPtr,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPtr != 0) {\n    byteValue = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_2000028c + (uint)byteValue * 4) = dataPtr;\n    FUN_08000e60((int)*(char *)(dataPtr + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(dataPtr + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 0x68) + (uint)*(ushort *)(dataPtr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_data_08003eac",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08000e60",
                "FUN_08000ec4",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_number_position_08003f00",
            "code": "\nuint find_number_position_08003f00(int number)\n\n{\n  uint position;\n  \n  if (number == 0) {\n    position = 10;\n  }\n  else {\n    position = 0;\n    while( true ) {\n      if (9 < position) {\n        return position;\n      }\n      if (number == (&DAT_200002b4)[position]) break;\n      position = position + 1 & 0xff;\n    }\n  }\n  return position;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_number_position_08003f00",
                "param_1": "number",
                "uVar1": "position"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_function_based_on_value_08003f24",
            "code": "\nvoid execute_function_based_on_value_08003f24(void)\n\n{\n  uint result;\n  \n  result = FUN_08003f00();\n  if (result < 10) {\n    (**(code **)(&DAT_20000214 + result * 4))(*(undefined4 *)(&DAT_2000023c + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_function_based_on_value_08003f24",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "execute_function_08003f48",
            "code": "\nvoid executeFunction_08003f48(void)\n\n{\n  uint randomIndex;\n  int returnValue;\n  int address;\n  \n  randomIndex = FUN_08003f00();\n  address = *(int *)(&DAT_2000028c + randomIndex * 4);\n  if ((randomIndex < 10) && (returnValue = (**(code **)(&DAT_20000264 + randomIndex * 4))(address), returnValue != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(address + 0x44)],\n                 *(int *)(address + 0x68) + (uint)*(ushort *)(address + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "execute_function_08003f48",
                "uVar1": "randomIndex",
                "iVar2": "returnValue",
                "iVar3": "address"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "allocate_memory_08004094",
            "code": "\nundefined * allocate_memory_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= max_memory) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "&stack0x00000000": "max_memory"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "get_error_code_080040d0",
            "code": "\nuint32_t get_error_code_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "get_error_code_080040d0",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "initialize_memory_segment_080040d6",
            "code": "\nundefined4 initializeMemorySegment_080040d6(undefined4 param,int memorySegmentAddress)\n\n{\n  *(undefined4 *)(memorySegmentAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "initialize_memory_segment_080040d6",
                "param_1": "param",
                "param_2": "memorySegmentAddress"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "initialize_080040e0",
            "code": "\nundefined4 initialize_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "initialize_080040e0"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_080040e4",
            "code": "\nvoid initialize_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_080040e4",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_program_080040e8",
            "code": "\nundefined4 initialize_program_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_program_080040e8"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "initialize_function_080040ec",
            "code": "\nvoid initialize_function_080040ec(undefined4 param_one,undefined4 param_two,undefined4 param_three,undefined4 param_four)\n\n{\n  FUN_08003d18(param_two,param_three,param_three,param_four,param_four);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "initialize_function_080040ec",
                "param_1": "param_one",
                "param_2": "param_two",
                "param_3": "param_three",
                "param_4": "param_four"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "infinite_loop_080040f8",
            "code": "\nvoid infiniteLoop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "infinite_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "set_initial_value_080040fc",
            "code": "\nundefined4 setInitialValue_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "set_initial_value_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "check_if_true_0800410c",
            "code": "\nundefined4 check_if_true_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "check_if_true_0800410c"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "execute_function_08004110",
            "code": "\nvoid executeFunction_08004110(uint inputValue,undefined4 mode,undefined4 flag,undefined *buffer)\n\n{\n  int result;\n  undefined *ptr;\n  int index;\n  \n  if (inputValue < 0x60) {\n    index = (int)*(short *)(&DAT_08005d3c + inputValue * 2);\n    ptr = &DAT_08005d3c;\n  }\n  else {\n    index = -1;\n    ptr = buffer;\n  }\n  if (index != -1) {\n    result = FUN_08003138(index,&DAT_200002e0,flag,ptr,buffer);\n    if (result != 0) {\n      result = FUN_0800355e(index,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(index,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(index);\n        }\n      }\n      else {\n        FUN_080033d8(index);\n      }\n      FUN_0800316c(index,&DAT_200002e0);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08003486(index,0);\n      break;\n    case 1:\n      FUN_08003486(index,1,0);\n      break;\n    case 2:\n      FUN_08003486(index,0,1);\n      break;\n    case 3:\n      FUN_08003486(index,0,2);\n    }\n    FUN_0800314e(index,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "execute_function_08004110",
                "param_1": "inputValue",
                "param_2": "mode",
                "param_3": "flag",
                "param_4": "buffer",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "index"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_0800314e",
                "FUN_080033d8",
                "FUN_08003138",
                "FUN_08003414",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_0800316c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "process_data_080041bc",
            "code": "\nvoid processData_080041bc(uint inputValue,undefined4 outputValue,undefined4 additionalParam,undefined *dataPointer)\n\n{\n  int result;\n  undefined4 processedValue;\n  undefined *dataPointer2;\n  uint tempValue;\n  \n  if (inputValue < 0x60) {\n    tempValue = (uint)*(short *)(&DAT_08005d3c + inputValue * 2);\n    dataPointer2 = &DAT_08005d3c;\n  }\n  else {\n    tempValue = 0xffffffff;\n    dataPointer2 = dataPointer;\n  }\n  if ((tempValue != 0xffffffff) &&\n     (result = FUN_08003138(tempValue,&DAT_2000030c,additionalParam,dataPointer2,dataPointer), result != 0)) {\n    processedValue = FUN_0800318c((tempValue << 0x18) >> 0x1c);\n    FUN_080034b6(processedValue,1 << (tempValue & 0xf) & 0xffff,outputValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "process_data_080041bc",
                "param_1": "inputValue",
                "param_2": "outputValue",
                "param_3": "additionalParam",
                "param_4": "dataPointer",
                "iVar1": "result",
                "uVar2": "processedValue",
                "puVar3": "dataPointer2",
                "uVar4": "tempValue"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_0800318c",
                "FUN_08003138",
                "FUN_080034b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "initialize_application_08004204",
            "code": "\nvoid initialize_application_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "initialize_application_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_offset_08004240",
            "code": "\nushort calculate_offset_08004240(int base_address)\n\n{\n  return (*(short *)(base_address + 0x138) + 0x40) - *(short *)(base_address + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_value_and_index_080042ac",
            "code": "\nvoid updateValueAndIndex_080042ac(int input)\n\n{\n  int result;\n  ushort updatedIndex;\n  undefined newValue;\n  \n  result = FUN_08003e18(input,&newValue);\n  if ((result == 0) &&\n     (updatedIndex = *(short *)(input + 100) + 1U & 0x3f, updatedIndex != *(ushort *)(input + 0x66))) {\n    *(undefined *)(*(int *)(input + 0x60) + (uint)*(ushort *)(input + 100)) = newValue;\n    *(ushort *)(input + 100) = updatedIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_value_and_index_080042ac",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "updatedIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "initialize_data_080042e8",
            "code": "\nundefined4 initializeData_080042e8(int dataAddress,undefined dataValue)\n\n{\n  byte byteValue;\n  byte adjustedByteValue;\n  int ushortValue;\n  \n  *(undefined *)(dataAddress + 0x10) = 1;\n  ushortValue = *(ushort *)(dataAddress + 0x140) + 1;\n  byteValue = (byte)ushortValue;\n  adjustedByteValue = byteValue & 0x7f;\n  if (ushortValue == 0) {\n    adjustedByteValue = -(-byteValue & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(dataAddress + 0x142) == (ushort)adjustedByteValue);\n  *(undefined *)(*(int *)(dataAddress + 0x13c) + (uint)*(ushort *)(dataAddress + 0x140)) = dataValue;\n  *(ushort *)(dataAddress + 0x140) = (ushort)adjustedByteValue;\n  ushortValue = FUN_08003df4(dataAddress + 0xd4);\n  if (ushortValue == 0) {\n    FUN_08003eac(dataAddress + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "initialize_data_080042e8",
                "param_1": "dataAddress",
                "param_2": "dataValue",
                "bVar1": "byteValue",
                "bVar2": "adjustedByteValue",
                "iVar3": "ushortValue"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_data_structure_08004364",
            "code": "\nvoid initializeDataStructure_08004364(int dataStructureAddress)\n\n{\n  *(int *)(dataStructureAddress + 0x134) = dataStructureAddress + 0x11;\n  *(undefined2 *)(dataStructureAddress + 0x138) = 0;\n  *(undefined2 *)(dataStructureAddress + 0x13a) = 0;\n  *(int *)(dataStructureAddress + 0x13c) = dataStructureAddress + 0x51;\n  *(undefined2 *)(dataStructureAddress + 0x140) = 0;\n  *(undefined2 *)(dataStructureAddress + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_data_structure_08004364",
                "param_1": "dataStructureAddress"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "initialize_hardware_serial_08004388",
            "code": "\nvoid initializeHardwareSerial_08004388(int serialObjectPtr,undefined4 param1,byte param2)\n\n{\n  uint result1;\n  byte bitMask;\n  int initialValue;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialObjectPtr + 0x11c) = param1;\n  *(byte *)(serialObjectPtr + 0x144) = param2;\n  bitMask = param2 & 7;\n  if (bitMask == 4) {\n    initialValue = 7;\n  }\n  else if (bitMask == 6) {\n    initialValue = 8;\n  }\n  else if (bitMask == 2) {\n    initialValue = 6;\n  }\n  else {\n    initialValue = 0;\n  }\n  if ((param2 & 0x30) == 0x30) {\n    *(undefined4 *)(serialObjectPtr + 0x128) = 0x600;\n    initialValue = initialValue + 1;\n  }\n  else if ((param2 & 0x20) == 0) {\n    *(undefined4 *)(serialObjectPtr + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialObjectPtr + 0x128) = 0x400;\n    initialValue = initialValue + 1;\n  }\n  if ((param2 & 8) == 0) {\n    *(undefined4 *)(serialObjectPtr + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialObjectPtr + 0x124) = 0x2000;\n  }\n  if (initialValue == 8) {\n    *(undefined4 *)(serialObjectPtr + 0x120) = 0;\n  }\n  else if (initialValue == 9) {\n    *(undefined4 *)(serialObjectPtr + 0x120) = 0x1000;\n  }\n  else {\n    initialValue = 0;\n  }\n  if (initialValue != 0) {\n    FUN_08003978(serialObjectPtr + 0xd4);\n    FUN_08003e54(serialObjectPtr + 0xd4,0x80042ad);\n    return;\n  }\n  jumpTable = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (result1 < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + result1 * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "initialize_hardware_serial_08004388",
                "param_1": "serialObjectPtr",
                "param_2": "param1",
                "param_3": "param2",
                "extraout_r1": "result1",
                "bVar1": "bitMask",
                "iVar2": "initialValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003e54",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "update_parameter_value_08004444",
            "code": "\nvoid updateParameterValue_08004444(int targetAddress,uint offset)\n\n{\n  undefined2 newValue;\n  code *jumpTableFunction;\n  \n  if (offset < 0x60) {\n    newValue = *(undefined2 *)(&DAT_08005d3c + offset * 2);\n  }\n  else {\n    newValue = 0xffff;\n  }\n  *(undefined2 *)(targetAddress + 0x12e) = newValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "update_parameter_value_08004444",
                "param_1": "targetAddress",
                "param_2": "offset",
                "uVar1": "newValue",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunction"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "update_value_in_array_08004460",
            "code": "\nvoid updateValueInArray_08004460(int array,uint index)\n\n{\n  undefined2 newValue;\n  \n  if (index < 0x60) {\n    newValue = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    newValue = 0xffff;\n  }\n  *(undefined2 *)(array + 300) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "update_value_in_array_08004460",
                "param_1": "array",
                "param_2": "index",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_parameters_0800447c",
            "code": "\nundefined4 *\ninitializeParameters_0800447c(undefined4 *parameterArray,undefined4 inputValue,undefined4 value1,undefined4 value2)\n\n{\n  undefined2 result;\n  \n  parameterArray[1] = 0;\n  parameterArray[2] = 1000;\n  *parameterArray = &PTR_FUN_080042e8_1_08005ed4;\n  if (parameterArray == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,value1,&DAT_20000338,value2);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    result = FUN_0800351e(inputValue,&DAT_08005c10);\n    *(undefined2 *)((int)parameterArray + 0x12e) = result;\n    result = FUN_0800351e(inputValue,&DAT_08005ca0);\n    *(undefined2 *)(parameterArray + 0x4b) = result;\n  }\n  FUN_08004364(parameterArray);\n  return parameterArray;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_parameters_0800447c",
                "param_1": "parameterArray",
                "param_2": "inputValue",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_and_execute_080044d8",
            "code": "\nvoid check_and_execute_080044d8(int value_1,int value_2,undefined4 address_1,undefined4 address_2)\n\n{\n  if (value_1 != 1) {\n    return;\n  }\n  if (value_2 == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,address_1,0xffff,address_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_and_execute_080044d8",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "address_1",
                "param_4": "address_2"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "initialize_data_08004544",
            "code": "\nvoid initializeData_08004544(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08005f28;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "initialize_data_08004544",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "check_params_08004560",
            "code": "\nvoid checkParams_08004560(int firstParam,int secondParam)\n\n{\n  if ((firstParam == 1) && (secondParam == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "check_params_08004560",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "combine_shifted_and_or_08004640",
            "code": "\nuint combineShiftedAndOr_08004640(int input,uint bitMask)\n\n{\n  return bitMask | input << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "combine_shifted_and_or_08004640",
                "param_1": "input",
                "param_2": "bitMask"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_080007f0",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_system_08004648",
            "code": "\nvoid initializeSystem_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_system_08004648"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "run_infinite_loop_08004658",
            "code": "\nvoid run_infinite_loop_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "run_infinite_loop_08004658"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "count_set_bits_08004678",
            "code": "\nchar countSetBits_08004678(uint input)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; input != 1; input = input >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08004678": "count_set_bits_08004678",
                "param_1": "input",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_parameters_080046b4",
            "code": "\nvoid initializeParameters_080046b4(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,&label,&DAT_20000000,&DAT_20000488,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_parameters_080046b4",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "LAB_0800468c_1": "label"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "execute_logic_080047c0",
            "code": "\nvoid executeLogic_080047c0(int inputParam)\n\n{\n  int result;\n  \n  if (*(int *)(inputParam + 8) != 0) {\n    (**(code **)(inputParam + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  result = FUN_08004678();\n  if ((&DAT_20000494)[result * 5] != 0) {\n    executeLogic_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "execute_logic_080047c0",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "check_and_invoke_function_080047d0",
            "code": "\nvoid checkAndInvokeFunction_080047d0(void)\n\n{\n  int result;\n  \n  result = FUN_08004678();\n  if ((&DAT_20000494)[result * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "check_and_invoke_function_080047d0",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_08004678",
                "FUN_080047c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "execute_and_update_080047fe",
            "code": "\nvoid executeAndUpdate_080047fe(undefined4 source,undefined4 destination)\n\n{\n  FUN_08004844(destination,source);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "execute_and_update_080047fe",
                "param_1": "source",
                "param_2": "destination"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "assertion_failed_error_08004808",
            "code": "\nvoid assertion_failed_error_08004808(undefined4 file_name,undefined4 line_number,char *assertion_message,undefined4 function_name)\n\n{\n  undefined4 file_pointer;\n  char *function_prefix;\n  undefined8 result;\n  undefined4 param_4;\n  \n  file_pointer = *(undefined4 *)(DAT_200000a0 + 0xc);\n  param_4 = function_name;\n  if (assertion_message == (char *)0x0) goto LAB_0800482c;\n  function_prefix = \", function: \";\n  do {\n    FUN_08004860(file_pointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function_name,file_name,line_number\n                 ,function_prefix,assertion_message,param_4);\n    result = FUN_080051ac();\n    line_number = (undefined4)((ulonglong)result >> 0x20);\n    file_pointer = (undefined4)result;\nLAB_0800482c:\n    assertion_message = \"\";\n    function_prefix = assertion_message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "assertion_failed_error_08004808",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "assertion_message",
                "param_4": "function_name",
                "uVar1": "file_pointer",
                "pcVar2": "function_prefix",
                "uVar3": "result",
                "uVar4": "param_4"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "shift_left64_bits_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong shiftLeft64Bits_08004844(undefined4 originalValue,uint shiftAmount)\n\n{\n  return (ulonglong)shiftAmount << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "shift_left64_bits_08004844",
                "param_1": "originalValue",
                "param_2": "shiftAmount"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "execute_function_08004860",
            "code": "\nvoid executeFunction_08004860(undefined4 input1,undefined4 input2,undefined4 pointer1,undefined4 pointer2)\n\n{\n  undefined4 pointer3;\n  undefined4 pointer4;\n  \n  pointer3 = pointer1;\n  pointer4 = pointer2;\n  FUN_08004a84(DAT_200000a0,input1,input2,&pointer3,input1,&pointer3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "execute_function_08004860",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "pointer1",
                "param_4": "pointer2",
                "uStack_8": "pointer3",
                "uStack_4": "pointer4"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_functions_08004884",
            "code": "\nvoid executeFunctions_08004884(void)\n\n{\n  int counter;\n  \n  for (counter = 0; counter != 0; counter = counter + 1) {\n    (*(code *)(&DAT_08006008)[counter])();\n  }\n  FUNC_080059f8();\n  for (counter = 0; counter != 10; counter = counter + 1) {\n    (*(code *)(&DAT_08006008)[counter])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_functions_08004884",
                "iVar1": "counter"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "fill_array_with_value_080048cc",
            "code": "\nvoid fillArrayWithValue_080048cc(undefined *array,undefined value,int length)\n\n{\n  undefined *endPointer;\n  \n  endPointer = array + length;\n  for (; array != endPointer; array = array + 1) {\n    *array = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "fill_array_with_value_080048cc",
                "param_1": "array",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "process_data_080048dc",
            "code": "\nvoid processData_080048dc(undefined4 *output,int size,undefined4 param3,undefined4 param4)\n\n{\n  int *ptr1;\n  int **extraOut;\n  int **ptr2;\n  int **ptr3;\n  int **ptr4;\n  int **ptr5;\n  bool isMatch;\n  \n  if (size == 0) {\n    return;\n  }\n  ptr5 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    ptr5 = (int **)((int)ptr5 + *(int *)(size + -4));\n  }\n  FUNC_0800557c();\n  ptr3 = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    ptr5[1] = (int *)0x0;\n    ptr2 = extraOut;\n    DAT_200005c8 = ptr5;\n  }\n  else {\n    ptr3 = DAT_200005c8;\n    if (ptr5 < DAT_200005c8) {\n      ptr2 = (int **)*ptr5;\n      ptr3 = (int **)((int)ptr5 + (int)ptr2);\n      isMatch = DAT_200005c8 == ptr3;\n      if (isMatch) {\n        ptr3 = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      ptr5[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = ptr5;\n      if (isMatch) {\n        ptr3 = (int **)((int)ptr3 + (int)ptr2);\n        *ptr5 = (int *)ptr3;\n      }\n    }\n    else {\n      do {\n        ptr4 = ptr3;\n        ptr3 = (int **)ptr4[1];\n        if (ptr3 == (int **)0x0) break;\n      } while (ptr3 <= ptr5);\n      ptr2 = (int **)*ptr4;\n      if ((int **)((int)ptr4 + (int)ptr2) == ptr5) {\n        ptr2 = (int **)((int)ptr2 + (int)*ptr5);\n        *ptr4 = (int *)ptr2;\n        if (ptr3 == (int **)((int)ptr4 + (int)ptr2)) {\n          ptr1 = *ptr3;\n          ptr3 = (int **)ptr3[1];\n          ptr4[1] = (int *)ptr3;\n          ptr2 = (int **)((int)ptr2 + (int)ptr1);\n          *ptr4 = (int *)ptr2;\n        }\n      }\n      else if (ptr5 < (int **)((int)ptr4 + (int)ptr2)) {\n        *output = 0xc;\n      }\n      else {\n        ptr2 = (int **)((int)ptr5 + (int)*ptr5);\n        isMatch = ptr3 == ptr2;\n        if (isMatch) {\n          ptr2 = (int **)*ptr3;\n          ptr3 = (int **)ptr3[1];\n        }\n        ptr5[1] = (int *)ptr3;\n        if (isMatch) {\n          ptr2 = (int **)((int)ptr2 + (int)*ptr5);\n          *ptr5 = (int *)ptr2;\n        }\n        ptr4[1] = (int *)ptr5;\n      }\n    }\n  }\n  FUNC_0800557e(output,ptr2,ptr3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "process_data_080048dc",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "ptr1",
                "extraout_r1": "extraOut",
                "ppiVar2": "ptr2",
                "ppiVar3": "ptr3",
                "ppiVar4": "ptr4",
                "ppiVar5": "ptr5",
                "bVar6": "isMatch"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_memory_08004978",
            "code": "\nuint allocate_memory_08004978(undefined4 *result_ptr,uint size)\n\n{\n  uint *current_block;\n  int block_size;\n  uint *previous_block;\n  uint block_difference;\n  uint *next_block;\n  uint actual_size;\n  \n  actual_size = (size + 3 & 0xfffffffc) + 8;\n  if (actual_size < 0xc) {\n    actual_size = 0xc;\n  }\n  if (((int)actual_size < 0) || (actual_size < size)) {\n    *result_ptr = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_block = DAT_200005c8;\n    next_block = DAT_200005c8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_difference = *previous_block - actual_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (next_block == previous_block) {\n            current_block = (uint *)next_block[1];\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (next_block != previous_block) {\n            next_block[1] = (uint)current_block;\n            next_block = previous_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *previous_block = block_difference;\n          *(uint *)((int)previous_block + block_difference) = actual_size;\n          next_block = (uint *)((int)previous_block + block_difference);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      next_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(result_ptr);\n    }\n    current_block = (uint *)FUN_0800500c(result_ptr,actual_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((next_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == next_block ||\n        (block_size = FUN_0800500c(result_ptr,(int)next_block - (int)current_block), block_size != -1)))) {\n      *next_block = actual_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      FUNC_0800557e(result_ptr);\n      actual_size = (int)next_block + 0xbU & 0xfffffff8;\n      block_size = actual_size - (int)(next_block + 1);\n      if (block_size != 0) {\n        *(int *)((int)next_block + block_size) = -block_size;\n        return actual_size;\n      }\n      return actual_size;\n    }\n    *result_ptr = 0xc;\n    FUNC_0800557e(result_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_memory_08004978",
                "param_1": "result_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "block_size",
                "puVar3": "previous_block",
                "puVar5": "next_block",
                "uVar4": "block_difference",
                "uVar6": "actual_size"
            },
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e",
                "FUN_0800500c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_input_08004a34",
            "code": "\nuint processInput_08004a34(int data,byte byteValue,byte **inputBuffer)\n\n{\n  int result;\n  byte *ptr;\n  byte *ptr2;\n  uint returnValue;\n  \n  ptr = inputBuffer[2] + -1;\n  inputBuffer[2] = ptr;\n  if ((-1 < (int)ptr) ||\n     (((int)inputBuffer[6] <= (int)ptr && (ptr = (byte *)(uint)byteValue, ptr != (byte *)0xa))))\n  {\n    ptr = *inputBuffer;\n    *inputBuffer = ptr + 1;\n    *ptr = byteValue;\n    return (uint)byteValue;\n  }\n  if ((data != 0) && (*(int *)(data + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (inputBuffer == (byte **)&DAT_08005fc0) {\n    inputBuffer = *(byte ***)(data + 4);\n  }\n  else if (inputBuffer == (byte **)&DAT_08005fe0) {\n    inputBuffer = *(byte ***)(data + 8);\n  }\n  else if (inputBuffer == (byte **)&DAT_08005fa0) {\n    inputBuffer = *(byte ***)(data + 0xc);\n  }\n  inputBuffer[2] = inputBuffer[6];\n  ptr2 = (byte *)(uint)*(ushort *)(inputBuffer + 3);\n  result = (int)ptr2 << 0x1c;\n  if (((result < 0) && (ptr2 = inputBuffer[4], ptr2 != (byte *)0x0)) ||\n     (result = FUN_080050d0(data,inputBuffer,result,ptr2,ptr), result == 0)) {\n    result = (int)*inputBuffer - (int)inputBuffer[4];\n    returnValue = (uint)byteValue;\n    if ((result < (int)inputBuffer[5]) || (result = FUN_080052cc(data,inputBuffer), result == 0)) {\n      inputBuffer[2] = inputBuffer[2] + -1;\n      ptr = *inputBuffer;\n      *inputBuffer = ptr + 1;\n      *ptr = byteValue;\n      if ((byte *)(result + 1) != inputBuffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(inputBuffer + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      result = FUN_080052cc(data,inputBuffer);\n      if (result == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_input_08004a34",
                "param_1": "data",
                "param_2": "byteValue",
                "param_3": "inputBuffer",
                "iVar1": "result",
                "pbVar2": "ptr",
                "pbVar3": "ptr2",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "iterate_and_process_08004a60",
            "code": "\nint iterateAndProcess_08004a60(undefined4 input1,undefined4 input2,undefined *data,int size)\n\n{\n  int result;\n  undefined *endPtr;\n  int currentSize;\n  \n  endPtr = data + size;\n  currentSize = size;\n  do {\n    if (data == endPtr) {\n      return 0;\n    }\n    result = FUN_08004a34(input1,*data,input2,size,currentSize);\n    size = result + 1;\n    data = data + 1;\n  } while (size != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "iterate_and_process_08004a60",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data",
                "param_4": "size",
                "iVar1": "result",
                "puVar2": "endPtr",
                "iVar3": "currentSize"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "reverse_and_improve_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint reverse_and_improve_08004a84(int first_parameter,undefined4 *second_parameter,byte *byte_array,int *fourth_parameter)\n\n{\n  int result;\n  int *ptr_variable;\n  bool condition;\n  byte *byte_pointer;\n  byte *another_byte_pointer;\n  int unaffected_register;\n  int variable_1;\n  int *local_array;\n  uint local_variable_1;\n  int local_variable_2;\n  undefined4 local_variable_3;\n  int local_variable_4;\n  int local_variable_5;\n  byte local_byte_variable;\n  undefined local_undefined_variable_1;\n  undefined local_undefined_variable_2;\n  undefined local_undefined_variable_3;\n  undefined4 local_undefined4_variable;\n  \n  local_array = fourth_parameter;\n  if ((first_parameter != 0) && (*(int *)(first_parameter + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (second_parameter == &DAT_08005fc0) {\n    second_parameter = *(undefined4 **)(first_parameter + 4);\n  }\n  else if (second_parameter == (undefined4 *)&DAT_08005fe0) {\n    second_parameter = *(undefined4 **)(first_parameter + 8);\n  }\n  else if (second_parameter == (undefined4 *)&DAT_08005fa0) {\n    second_parameter = *(undefined4 **)(first_parameter + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(second_parameter + 3) << 0x1c)) || (second_parameter[4] == 0)) &&\n     (variable_1 = FUN_080050d0(first_parameter,second_parameter), variable_1 != 0)) {\n    return -1;\n  }\n  local_variable_5 = 0;\n  local_undefined_variable_1 = 0x20;\n  local_undefined_variable_2 = 0x30;\n  byte_pointer = byte_array;\nLAB_08004ac6:\n  another_byte_pointer = byte_pointer;\n  if (*another_byte_pointer != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  byte_pointer = another_byte_pointer + 1;\n  if (*another_byte_pointer != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  variable_1 = (int)another_byte_pointer - (int)byte_array;\n  if (variable_1 != 0) {\n    result = FUN_08004a60(first_parameter,second_parameter,byte_array,variable_1);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(second_parameter + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return local_variable_5;\n    }\n    local_variable_5 = local_variable_5 + variable_1;\n  }\n  if (*another_byte_pointer == 0) goto LAB_08004c70;\n  local_variable_1 = 0;\n  local_variable_4 = 0;\n  local_variable_2 = -1;\n  local_variable_3 = 0;\n  local_undefined_variable_3 = 0;\n  local_undefined4_variable = 0;\n  byte_pointer = another_byte_pointer + 1;\n  while( true ) {\n    variable_1 = FUN_08000230(\"#-0+ \",*byte_pointer);\n    byte_array = byte_pointer + 1;\n    if (variable_1 == 0) break;\n    local_variable_1 = 1 << (variable_1 + 0xf7ffa094U & 0xff) | local_variable_1;\n    byte_pointer = byte_array;\n  }\n  if ((int)(local_variable_1 << 0x1b) < 0) {\n    local_undefined_variable_3 = 0x20;\n  }\n  if ((int)(local_variable_1 << 0x1c) < 0) {\n    local_undefined_variable_3 = 0x2b;\n  }\n  if (*byte_pointer == 0x2a) {\n    ptr_variable = local_array + 1;\n    variable_1 = *local_array;\n    local_array = ptr_variable;\n    if (variable_1 < 0) {\n      local_variable_4 = -variable_1;\n      local_variable_1 = local_variable_1 | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    condition = false;\n    variable_1 = local_variable_4;\n    byte_array = byte_pointer;\n    while( true ) {\n      if (9 < *byte_array - 0x30) break;\n      variable_1 = variable_1 * 10 + (*byte_array - 0x30);\n      condition = true;\n      byte_array = byte_array + 1;\n    }\n    if (!condition) goto LAB_08004bae;\n  }\n  local_variable_4 = variable_1;\nLAB_08004bae:\n  if (*byte_array == 0x2e) {\n    if (byte_array[1] == 0x2a) {\n      local_variable_2 = *local_array;\n      if (local_variable_2 < 0) {\n        local_variable_2 = -1;\n      }\n      byte_array = byte_array + 2;\n      local_array = local_array + 1;\n    }\n    else {\n      condition = false;\n      local_variable_2 = 0;\n      variable_1 = 0;\n      while( true ) {\n        byte_array = byte_array + 1;\n        if (9 < *byte_array - 0x30) break;\n        variable_1 = variable_1 * 10 + (*byte_array - 0x30);\n        condition = true;\n      }\n      if (condition) {\n        local_variable_2 = variable_1;\n      }\n    }\n  }\n  variable_1 = FUN_08000230(&DAT_08005f72,*byte_array,3);\n  if (variable_1 != 0) {\n    local_variable_1 = local_variable_1 | 0x40 << (variable_1 + 0xf7ffa08eU & 0xff);\n    byte_array = byte_array + 1;\n  }\n  local_byte_variable = *byte_array;\n  byte_array = byte_array + 1;\n  variable_1 = FUN_08000230(\"efgEFG\",local_byte_variable,6);\n  if (variable_1 == 0) {\n    unaffected_register = FUN_08004d9c(first_parameter,&local_variable_1,second_parameter,0x8004a61,&local_array);\n    if (unaffected_register == -1) goto LAB_08004c70;\n  }\n  else {\n    local_array = (int *)(((int)local_array + 7U & 0xfffffff8) + 8);\n  }\n  local_variable_5 = local_variable_5 + unaffected_register;\n  byte_pointer = byte_array;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "reverse_and_improve_08004a84",
                "param_1": "first_parameter",
                "param_2": "second_parameter",
                "param_3": "byte_array",
                "param_4": "fourth_parameter",
                "iVar1": "result",
                "piVar2": "ptr_variable",
                "bVar3": "condition",
                "pbVar4": "byte_pointer",
                "pbVar5": "another_byte_pointer",
                "unaff_r9": "unaffected_register",
                "iVar6": "variable_1",
                "local_8c": "local_array",
                "local_88": "local_variable_1",
                "local_84": "local_variable_2",
                "local_80": "local_variable_3",
                "local_7c": "local_variable_4",
                "local_74": "local_variable_5",
                "local_70": "local_byte_variable",
                "local_6f": "local_undefined_variable_1",
                "local_6e": "local_undefined_variable_2",
                "local_45": "local_undefined_variable_3",
                "local_30": "local_undefined4_variable"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_08004a60",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "process_data_08004cb0",
            "code": "\nundefined4\nprocessData_08004cb0(undefined4 input,uint *data,uint *output,undefined4 arg,code *callback)\n\n{\n  int i;\n  int j;\n  uint maxValue;\n  uint counter;\n  bool flag;\n  \n  maxValue = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxValue = data[2];\n  }\n  *output = maxValue;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = maxValue + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (i = 0; i < (int)(data[3] - *output); i = i + 1) {\n      j = (*callback)(input,arg,(int)data + 0x19,1);\n      if (j == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)data + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxValue + 0x43) = 0x30;\n    *(undefined *)((int)data + maxValue + 0x44) = *(undefined *)((int)data + 0x45);\n    maxValue = maxValue + 2;\n  }\n  i = (*callback)(input,arg,(int)data + 0x43,maxValue);\n  if (i != -1) {\n    maxValue = data[3];\n    flag = (*data & 6) == 4;\n    if (flag) {\n      maxValue = maxValue - *output;\n    }\n    if (flag) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    else {\n      maxValue = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxValue = maxValue + (data[2] - data[4]);\n    }\n    counter = 0;\n    while( true ) {\n      if (maxValue == counter) {\n        return 0;\n      }\n      i = (*callback)(input,arg,(int)data + 0x1a,1);\n      if (i == -1) break;\n      counter = counter + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "process_data_08004cb0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "arg",
                "param_5": "callback",
                "iVar1": "i",
                "iVar2": "j",
                "uVar3": "maxValue",
                "uVar4": "counter",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "decode_and_process_08004d9c",
            "code": "\nuint decode_and_process_08004d9c(undefined4 config,uint *data,undefined4 flag,code *callback,uint **counter_ptr)\n\n{\n  byte byte_val;\n  int decode_result;\n  uint *data_ptr;\n  int loop_var;\n  char *hex_digits;\n  uint num;\n  uint **data_ptr_ptr;\n  char **char_ptr_ptr;\n  uint num2;\n  uint temp;\n  char *temp_ptr;\n  char *temp_ptr2;\n  uint local_array [2];\n  \n  byte_val = *(byte *)(data + 6);\n  temp_ptr2 = (char *)((int)data + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto label11;\n          if (byte_val != 0x58) goto label1;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nlabel7:\n          num = *data;\n          data_ptr = *counter_ptr;\n          *counter_ptr = data_ptr + 1;\n          if (((num & 0x80) == 0) && ((int)(num << 0x19) < 0)) {\n            num2 = (uint)*(ushort *)data_ptr;\n          }\n          else {\n            num2 = *data_ptr;\n          }\n          if ((int)(num << 0x1f) < 0) {\n            *data = num | 0x20;\n          }\n          if (num2 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          num = 0x10;\nlabel5:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto label1;\n          num2 = *data;\n          data_ptr = *counter_ptr;\n          if ((num2 & 0x80) == 0) {\n            *counter_ptr = data_ptr + 1;\n            if ((num2 & 0x40) == 0) goto label8;\n            num2 = (uint)(short)*(ushort *)data_ptr;\n          }\n          else {\n            *counter_ptr = data_ptr + 1;\nlabel8:\n            num2 = *data_ptr;\n          }\n          if ((int)num2 < 0) {\n            num2 = -num2;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          num = 10;\n        }\n        temp = data[1];\n        data[2] = temp;\n        temp_ptr = temp_ptr2;\n        if ((int)temp < 0) {\n          if (num2 != 0) goto label9;\nLAB_08004fc8:\n          *(char *)((int)data + 0x42) = *hex_digits;\n          temp_ptr = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (num2 == 0) {\n            if (temp != 0) goto LAB_08004fc8;\n          }\n          else {\nlabel9:\n            do {\n              temp = num2 / num;\n              temp_ptr = temp_ptr + -1;\n              *temp_ptr = hex_digits[num2 - num * temp];\n              num2 = temp;\n            } while (temp != 0);\n          }\n        }\n        if (((num == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          temp_ptr[-1] = '0';\n          temp_ptr = temp_ptr + -1;\n        }\n        data[4] = (int)temp_ptr2 - (int)temp_ptr;\n        temp_ptr2 = temp_ptr;\n        goto LAB_08004ec2;\n      }\n      data_ptr = *counter_ptr;\n      *counter_ptr = data_ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*data_ptr;\nlabel2:\n      temp_ptr2 = (char *)((int)data + 0x42);\n      num2 = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nlabel3:\n            num2 = *data;\n            data_ptr = *counter_ptr;\n            if ((num2 & 0x80) == 0) {\n              *counter_ptr = data_ptr + 1;\n              if ((num2 & 0x40) == 0) goto label4;\n              num2 = (uint)*(ushort *)data_ptr;\n            }\n            else {\n              *counter_ptr = data_ptr + 1;\nlabel4:\n              num2 = *data_ptr;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            if (byte_val == 0x6f) {\n              num = 8;\n            }\n            else {\n              num = 10;\n            }\n            goto label5;\n          }\n          if (byte_val == 0x70) {\n            *data = *data | 0x20;\nlabel6:\n            *(undefined *)((int)data + 0x45) = 0x78;\n            hex_digits = \"0123456789abcdef\";\n            goto label7;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto label3;\n          if (byte_val == 0x78) goto label6;\n        }\nlabel1:\n        *(byte *)((int)data + 0x42) = byte_val;\n        goto label2;\n      }\n      char_ptr_ptr = (char **)*counter_ptr;\n      *counter_ptr = (uint *)(char_ptr_ptr + 1);\n      temp_ptr2 = *char_ptr_ptr;\n      decode_result = FUN_08000230(temp_ptr2,0,data[1]);\n      if (decode_result != 0) {\n        data[1] = decode_result - (int)temp_ptr2;\n      }\n      num2 = data[1];\n    }\n    data[4] = num2;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  num2 = *data;\n  data_ptr_ptr = (uint **)*counter_ptr;\n  num = data[5];\n  if ((num2 & 0x80) == 0) {\n    *counter_ptr = (uint *)(data_ptr_ptr + 1);\n    data_ptr = *data_ptr_ptr;\n    if ((num2 & 0x40) == 0) goto label10;\n    *(short *)data_ptr = (short)num;\n  }\n  else {\n    *counter_ptr = (uint *)(data_ptr_ptr + 1);\n    data_ptr = *data_ptr_ptr;\nlabel10:\n    *data_ptr = num;\n  }\nlabel11:\n  data[4] = 0;\nLAB_08004ec2:\n  decode_result = FUN_08004cb0(config,data,local_array,flag,callback);\n  if ((decode_result == -1) || (decode_result = (*callback)(config,flag,temp_ptr2,data[4]), decode_result == -1)) {\nlabel12:\n    num2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (decode_result = 0; decode_result < (int)(data[3] - local_array[0]); decode_result = decode_result + 1) {\n        loop_var = (*callback)(config,flag,(int)data + 0x19,1);\n        if (loop_var == -1) goto label12;\n      }\n    }\n    num2 = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      num2 = local_array[0];\n    }\n  }\n  return num2;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "decode_and_process_08004d9c",
                "param_1": "config",
                "param_2": "data",
                "param_3": "flag",
                "param_4": "callback",
                "param_5": "counter_ptr",
                "bVar1": "byte_val",
                "iVar2": "decode_result",
                "puVar3": "data_ptr",
                "iVar4": "loop_var",
                "pcVar5": "hex_digits",
                "uVar6": "num",
                "ppuVar7": "data_ptr_ptr",
                "ppcVar8": "char_ptr_ptr",
                "uVar9": "num2",
                "uVar10": "temp",
                "pcVar11": "temp_ptr",
                "pcVar12": "temp_ptr2",
                "local_24": "local_array",
                "LAB_08004dcc": "label1",
                "LAB_08004e2c": "label2",
                "LAB_08004e52": "label3",
                "LAB_08004e60": "label4",
                "LAB_08004e7c": "label5",
                "LAB_08004e12": "label6",
                "LAB_08004ee6": "label7",
                "LAB_08004dec": "label8",
                "LAB_08004f1a": "label9",
                "LAB_08004f42": "label10",
                "LAB_08004f56": "label11",
                "LAB_08004ed6": "label12"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004cb0",
                "FUN_08000230"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "initialize_and_execute_08004fdc",
            "code": "\nvoid initializeAndExecute_08004fdc(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  int dataPointer;\n  undefined4 param1Copy;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  \n  dataPointer = DAT_200000a0;\n  param1Copy = inputParam1;\n  localVar1 = inputParam2;\n  localVar2 = inputParam3;\n  localVar3 = inputParam4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(dataPointer,*(undefined4 *)(dataPointer + 8),inputParam1,&localVar1,param1Copy,&localVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "initialize_and_execute_08004fdc",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "dataPointer",
                "uVar2": "param1Copy",
                "uStack_c": "localVar1",
                "uStack_8": "localVar2",
                "uStack_4": "localVar3"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "check_and_update_param1_0800500c",
            "code": "\nvoid checkAndUpdateParam1_0800500c(int *result,undefined4 input)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_08004094(input);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "check_and_update_param1_0800500c",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "update_param_values_080050d0",
            "code": "\nuint updateParamValues_080050d0(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int dataPointer;\n  uint returnValue;\n  ushort shortValue;\n  \n  dataPointer = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (param_2 == &DAT_08005fc0) {\n    param_2 = *(undefined4 **)(dataPointer + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08005fe0) {\n    param_2 = *(undefined4 **)(dataPointer + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08005fa0) {\n    param_2 = *(undefined4 **)(dataPointer + 0xc);\n  }\n  shortValue = *(ushort *)(param_2 + 3);\n  returnValue = (uint)shortValue;\n  if (-1 < (int)(returnValue << 0x1c)) {\n    if (-1 < (int)(returnValue << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(returnValue << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          FUN_080048dc(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(param_1,param_2);\n  }\n  shortValue = *(ushort *)(param_2 + 3);\n  returnValue = shortValue & 1;\n  if ((shortValue & 1) == 0) {\n    if (-1 < (int)((uint)shortValue << 0x1e)) {\n      returnValue = param_2[5];\n    }\n    param_2[2] = returnValue;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    shortValue = *(ushort *)(param_2 + 3);\n    returnValue = (int)(short)shortValue & 0x80;\n    if (returnValue != 0) {\nLAB_08005100:\n      *(ushort *)(param_2 + 3) = shortValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "update_param_values_080050d0",
                "iVar1": "dataPointer",
                "uVar2": "returnValue",
                "uVar3": "shortValue"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080054fc",
                "FUN_080048dc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "process_binary_function_080051ac",
            "code": "\nvoid processBinaryFunction_080051ac(void)\n\n{\n  uint *dataPointer;\n  int length;\n  int *ptrArray;\n  int *ptrArray2;\n  uint var1;\n  ushort var2;\n  int var3;\n  code *functionPointer;\n  int var4;\n  uint var5;\n  code *jumpTable;\n  bool flag;\n  undefined8 result;\n  \n  FUN_080055d0(6);\n  jumpTable = (code *)0x80051bb;\n  result = FUN_080040f8(1);\n  ptrArray = (int *)((ulonglong)result >> 0x20);\n  dataPointer = (uint *)result;\n  var2 = *(ushort *)(ptrArray + 3);\n  var1 = (uint)var2;\n  if ((int)(var1 << 0x1c) < 0) {\n    length = ptrArray[4];\n    if (length != 0) {\n      var3 = var1 << 0x1e;\n      flag = var3 == 0;\n      var4 = *ptrArray;\n      if (flag) {\n        var3 = ptrArray[5];\n      }\n      *ptrArray = length;\n      if (!flag) {\n        var3 = 0;\n      }\n      ptrArray[2] = var3;\n      for (var4 = var4 - length; 0 < var4; var4 = var4 - var3) {\n        var3 = (*(code *)ptrArray[10])(dataPointer,ptrArray[8],length,var4);\n        if (var3 < 1) {\n          var2 = *(ushort *)(ptrArray + 3);\n          goto LAB_080052b2;\n        }\n        length = length + var3;\n      }\n    }\n  }\n  else if (((0 < ptrArray[1]) || (0 < ptrArray[0x10])) &&\n          (functionPointer = (code *)ptrArray[0xb], functionPointer != (code *)0x0)) {\n    var5 = *dataPointer;\n    *dataPointer = 0;\n    if ((var2 & 0x1000) == 0) {\n      length = (*functionPointer)(dataPointer,ptrArray[8],var1 & 0x1000,1);\n      if ((length == -1) && (var1 = *dataPointer, var1 != 0)) {\n        if ((var1 != 0x1d) && (var1 != 0x16)) {\n          *(ushort *)(ptrArray + 3) = *(ushort *)(ptrArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *dataPointer = var5;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      length = ptrArray[0x15];\n    }\n    if (((int)((uint)*(ushort *)(ptrArray + 3) << 0x1d) < 0) &&\n       (length = length - ptrArray[1], ptrArray[0xd] != 0)) {\n      length = length - ptrArray[0x10];\n    }\n    length = (*(code *)ptrArray[0xb])(dataPointer,ptrArray[8],length,0);\n    var2 = *(ushort *)(ptrArray + 3);\n    if ((length == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(ptrArray + 3) = var2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    ptrArray[1] = 0;\n    *ptrArray = ptrArray[4];\n    if (((int)((uint)var2 << 0x13) < 0) && ((length != -1 || (*dataPointer == 0)))) {\n      ptrArray[0x15] = length;\n    }\n    ptrArray2 = (int *)ptrArray[0xd];\n    *dataPointer = var5;\n    if (ptrArray2 != (int *)0x0) {\n      if (ptrArray2 != ptrArray + 0x11) {\n        FUN_080048dc(dataPointer);\n      }\n      ptrArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "process_binary_function_080051ac",
                "puVar1": "dataPointer",
                "iVar2": "length",
                "piVar3": "ptrArray",
                "piVar4": "ptrArray2",
                "uVar5": "var1",
                "uVar6": "var2",
                "iVar7": "var3",
                "pcVar8": "functionPointer",
                "iVar9": "var4",
                "uVar10": "var5",
                "bVar11": "flag",
                "uVar12": "result",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "process_data_080052cc",
            "code": "\nundefined4 processData_080052cc(uint *dataPointer,int *infoPointer)\n\n{\n  undefined4 returnValue;\n  int tempVar1;\n  int *tempVar2;\n  uint tempVar3;\n  ushort tempVar4;\n  int tempVar5;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  code *functionPointer;\n  int tempVar6;\n  uint tempVar7;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (infoPointer[4] != 0) {\n    if ((dataPointer != (uint *)0x0) && (dataPointer[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (infoPointer == &DAT_08005fc0) {\n      infoPointer = (int *)dataPointer[1];\n    }\n    else if (infoPointer == (int *)&DAT_08005fe0) {\n      infoPointer = (int *)dataPointer[2];\n    }\n    else if (infoPointer == (int *)&DAT_08005fa0) {\n      infoPointer = (int *)dataPointer[3];\n    }\n    if (*(short *)(infoPointer + 3) != 0) {\n      tempVar4 = *(ushort *)(infoPointer + 3);\n      tempVar3 = (uint)tempVar4;\n      if ((int)(tempVar3 << 0x1c) < 0) {\n        tempVar1 = infoPointer[4];\n        if (tempVar1 != 0) {\n          tempVar5 = tempVar3 << 0x1e;\n          bVar10 = tempVar5 == 0;\n          tempVar6 = *infoPointer;\n          if (bVar10) {\n            tempVar5 = infoPointer[5];\n          }\n          *infoPointer = tempVar1;\n          if (!bVar10) {\n            tempVar5 = 0;\n          }\n          infoPointer[2] = tempVar5;\n          for (tempVar6 = tempVar6 - tempVar1; 0 < tempVar6; tempVar6 = tempVar6 - tempVar5) {\n            tempVar5 = (*(code *)infoPointer[10])(dataPointer,infoPointer[8],tempVar1,tempVar6,unusedVar1,unusedVar2);\n            if (tempVar5 < 1) {\n              tempVar4 = *(ushort *)(infoPointer + 3);\n              goto LAB_080052b2;\n            }\n            tempVar1 = tempVar1 + tempVar5;\n          }\n        }\n      }\n      else if (((0 < infoPointer[1]) || (0 < infoPointer[0x10])) &&\n              (functionPointer = (code *)infoPointer[0xb], functionPointer != (code *)0x0)) {\n        tempVar7 = *dataPointer;\n        *dataPointer = 0;\n        if ((tempVar4 & 0x1000) == 0) {\n          tempVar1 = (*functionPointer)(dataPointer,infoPointer[8],tempVar3 & 0x1000,1);\n          if ((tempVar1 == -1) && (tempVar3 = *dataPointer, tempVar3 != 0)) {\n            if ((tempVar3 != 0x1d) && (tempVar3 != 0x16)) {\n              *(ushort *)(infoPointer + 3) = *(ushort *)(infoPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*UNRECOVERED_JUMPTABLE_00)();\n              return returnValue;\n            }\n            *dataPointer = tempVar7;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          tempVar1 = infoPointer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(infoPointer + 3) << 0x1d) < 0) &&\n           (tempVar1 = tempVar1 - infoPointer[1], infoPointer[0xd] != 0)) {\n          tempVar1 = tempVar1 - infoPointer[0x10];\n        }\n        tempVar1 = (*(code *)infoPointer[0xb])(dataPointer,infoPointer[8],tempVar1,0);\n        tempVar4 = *(ushort *)(infoPointer + 3);\n        if ((tempVar1 == -1) &&\n           ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(infoPointer + 3) = tempVar4 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return returnValue;\n        }\n        infoPointer[1] = 0;\n        *infoPointer = infoPointer[4];\n        if (((int)((uint)tempVar4 << 0x13) < 0) && ((tempVar1 != -1 || (*dataPointer == 0)))) {\n          infoPointer[0x15] = tempVar1;\n        }\n        tempVar2 = (int *)infoPointer[0xd];\n        *dataPointer = tempVar7;\n        if (tempVar2 != (int *)0x0) {\n          if (tempVar2 != infoPointer + 0x11) {\n            FUN_080048dc(dataPointer);\n          }\n          infoPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*UNRECOVERED_JUMPTABLE_00)();\n          return returnValue;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "process_data_080052cc",
                "param_1": "dataPointer",
                "param_2": "infoPointer",
                "uVar1": "returnValue",
                "iVar2": "tempVar1",
                "piVar3": "tempVar2",
                "uVar4": "tempVar3",
                "uVar5": "tempVar4",
                "iVar6": "tempVar5",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "pcVar7": "functionPointer",
                "iVar8": "tempVar6",
                "uVar9": "tempVar7"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_data_structures_0800532c",
            "code": "\nvoid initializeDataStructures_0800532c(undefined4 *dataStructurePtr,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructurePtr = 0;\n  dataStructurePtr[1] = 0;\n  dataStructurePtr[2] = 0;\n  *(undefined2 *)(dataStructurePtr + 3) = value1;\n  dataStructurePtr[25] = 0;\n  *(undefined2 *)((int)dataStructurePtr + 0xe) = value2;\n  dataStructurePtr[4] = 0;\n  dataStructurePtr[5] = 0;\n  dataStructurePtr[6] = 0;\n  FUN_080048cc(dataStructurePtr + 0x17,0,8);\n  dataStructurePtr[9] = 0x8005609;\n  dataStructurePtr[10] = 0x800562b;\n  dataStructurePtr[11] = 0x8005663;\n  dataStructurePtr[8] = dataStructurePtr;\n  dataStructurePtr[12] = labelPointer;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_data_structures_0800532c",
                "param_1": "dataStructurePtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[1]": "dataStructurePtr[1]",
                "param_1[2]": "dataStructurePtr[2]",
                "param_1[0x19]": "dataStructurePtr[25]",
                "param_1[4]": "dataStructurePtr[4]",
                "param_1[5]": "dataStructurePtr[5]",
                "param_1[6]": "dataStructurePtr[6]",
                "param_1[9]": "dataStructurePtr[9]",
                "param_1[10]": "dataStructurePtr[10]",
                "param_1[0xb]": "dataStructurePtr[11]",
                "param_1[8]": "dataStructurePtr[8]",
                "param_1[0xc]": "dataStructurePtr[12]",
                "&LAB_08005686_1": "labelPointer"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "initialize_array_08005374",
            "code": "\nundefined4 * initializeArray_08005374(undefined4 inputArray,int length)\n\n{\n  undefined4 *resultArray;\n  int offset;\n  \n  offset = (length + -1) * 0x68;\n  resultArray = (undefined4 *)FUN_08004978(inputArray,offset + 0x74);\n  if (resultArray != (undefined4 *)0x0) {\n    *resultArray = 0;\n    resultArray[1] = length;\n    resultArray[2] = resultArray + 3;\n    FUN_080048cc(resultArray + 3,0,offset + 0x68);\n  }\n  return resultArray;\n}\n\n",
            "renaming": {
                "FUN_08005374": "initialize_array_08005374",
                "param_1": "inputArray",
                "param_2": "length",
                "puVar1": "resultArray",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_data_080053a0",
            "code": "\nvoid initializeData_080053a0(undefined4 *dataArray)\n\n{\n  undefined4 result;\n  undefined4 *tempPtr;\n  \n  if (dataArray[6] == 0) {\n    dataArray[0x12] = 0;\n    dataArray[0x13] = 0;\n    dataArray[0x14] = 0;\n    tempPtr = &DAT_200000a4;\n    dataArray[10] = &LAB_08005320_1;\n    if (dataArray == &DAT_200000a4) {\n      tempPtr = (undefined4 *)0x1;\n    }\n    if (dataArray == &DAT_200000a4) {\n      dataArray[6] = tempPtr;\n    }\n    result = FUN_08005400();\n    dataArray[1] = result;\n    result = FUN_08005400(dataArray);\n    dataArray[2] = result;\n    result = FUN_08005400(dataArray);\n    dataArray[3] = result;\n    FUN_0800532c(dataArray[1],4,0);\n    FUN_0800532c(dataArray[2],9,1);\n    FUN_0800532c(dataArray[3],0x12,2);\n    dataArray[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "param_1": "dataArray",
                "uVar1": "result",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_data_08005400",
            "code": "\nint * initializeData_08005400(undefined4 *paramPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentIndex;\n  int *currentElement;\n  int **dataPtrPtr;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  dataPtrPtr = (int **)&DAT_200000ec;\n  do {\n    currentElement = dataPtrPtr[2];\n    currentIndex = dataPtrPtr[1];\n    while (currentIndex = (int *)((int)currentIndex + -1), -1 < (int)currentIndex) {\n      if (*(short *)(currentElement + 3) == 0) {\n        *(undefined2 *)((int)currentElement + 0xe) = 0xffff;\n        *(undefined2 *)(currentElement + 3) = 1;\n        currentElement[0x19] = 0;\n        *currentElement = 0;\n        currentElement[2] = 0;\n        currentElement[1] = 0;\n        currentElement[4] = 0;\n        currentElement[5] = 0;\n        currentElement[6] = 0;\n        FUN_080048cc(currentElement + 0x17,0,8,1,param4);\n        currentElement[0xd] = 0;\n        currentElement[0xe] = 0;\n        currentElement[0x12] = 0;\n        currentElement[0x13] = 0;\n        return currentElement;\n      }\n      currentElement = currentElement + 0x1a;\n    }\n    if (*dataPtrPtr == (int *)0x0) {\n      currentIndex = (int *)FUN_08005374(paramPointer,4);\n      *dataPtrPtr = currentIndex;\n      if (currentIndex == (int *)0x0) {\n        *paramPointer = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataPtrPtr = (int **)*dataPtrPtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_data_08005400",
                "param_1": "paramPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentIndex",
                "piVar2": "currentElement",
                "ppiVar3": "dataPtrPtr"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08005374",
                "FUN_080048cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "check_permissions_080054b4",
            "code": "\nundefined4 checkPermissions_080054b4(undefined4 address,int data,undefined4 *result,uint *flags)\n\n{\n  int returnValue;\n  undefined4 permission;\n  undefined tempStack [4];\n  uint localVar;\n  \n  if ((*(short *)(data + 0xe) < 0) ||\n     (returnValue = FUN_080056d4(address,(int)*(short *)(data + 0xe),tempStack), returnValue < 0)) {\n    *flags = 0;\n    if ((int)((uint)*(ushort *)(data + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *flags = (uint)((localVar & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_080054f4:\n  *result = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "check_permissions_080054b4",
                "param_1": "address",
                "param_2": "data",
                "param_3": "result",
                "param_4": "flags",
                "iVar1": "returnValue",
                "uVar2": "permission",
                "auStack_4c": "tempStack",
                "local_48": "localVar"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "process_data_080054fc",
            "code": "\nvoid processData_080054fc(int inputData,int *outputData)\n\n{\n  ushort result1;\n  int result2;\n  int temp1;\n  int *temp2;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputData + 3) << 0x1e)) {\n    temp1 = inputData;\n    temp2 = outputData;\n    result1 = FUN_080054b4(inputData,outputData,&temp1,&temp2);\n    result2 = FUN_08004978(inputData,temp1);\n    if (result2 != 0) {\n      *(undefined **)(inputData + 0x28) = &LAB_08005320_1;\n      *outputData = result2;\n      *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) | 0x80;\n      outputData[5] = temp1;\n      outputData[4] = result2;\n      if ((temp2 != (int *)0x0) &&\n         (result2 = FUN_080056f8(inputData,(int)*(short *)((int)outputData + 0xe)), result2 != 0)) {\n        *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputData + 3) = result1 | *(ushort *)(outputData + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputData + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) & 0xfffc | 2;\n  }\n  *outputData = (int)outputData + 0x47;\n  outputData[4] = (int)outputData + 0x47;\n  outputData[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "process_data_080054fc",
                "param_1": "inputData",
                "param_2": "outputData",
                "uVar1": "result1",
                "iVar2": "result2",
                "local_18": "temp1",
                "local_14": "temp2"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080054b4",
                "FUN_080056f8",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "execute_function_080055d0",
            "code": "\nint execute_function_080055d0(uint input_param)\n\n{\n  int *ptr_to_dat_a0;\n  undefined4 result;\n  int temp_var;\n  code *function_ptr;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *ptr_to_dat_a0;\n  \n  ptr_to_dat_a0 = DAT_200000a0;\n  ptr_to_dat_a0 = &DAT_200000a0;\n  if (0x1f < input_param) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  temp_var = DAT_200000a0[0x11];\n  if ((temp_var != 0) && (function_ptr = *(code **)(temp_var + input_param * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(temp_var + input_param * 4) = 0;\n      (*function_ptr)(input_param);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  temp_var = FUN_080040fc(result,input_param,input_param,0,ptr_to_dat_a0,unaff_r4,unaff_r5,in_lr);\n  if ((temp_var == -1) && (DAT_20000674 != 0)) {\n    *ptr_to_dat_a0 = DAT_20000674;\n  }\n  return temp_var;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "execute_function_080055d0",
                "param_1": "input_param",
                "piVar1": "ptr_to_dat_a0",
                "uVar2": "result",
                "iVar3": "temp_var",
                "pcVar4": "function_ptr",
                "puVar5": "ptr_to_dat_a0"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "check_and_return_one_thunk_0800410c",
            "code": "\nundefined4 check_and_return_one_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "check_and_return_one_thunk_0800410c"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_value_08005608",
            "code": "\nvoid updateValue_08005608(undefined4 param1,int param2)\n\n{\n  int value1;\n  uint value2;\n  bool isPositive;\n  \n  value1 = FUN_0800573c(param1,(int)*(short *)(param2 + 0xe));\n  isPositive = -1 < value1;\n  if (isPositive) {\n    value2 = *(int *)(param2 + 0x54) + value1;\n  }\n  else {\n    value2 = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(param2 + 0x54) = value2;\n  }\n  if (!isPositive) {\n    *(short *)(param2 + 0xc) = (short)value2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_value_08005608",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "value1",
                "uVar2": "value2",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "check_and_update_values_0800562a",
            "code": "\nvoid checkAndUpdateValues_0800562a(int *result,int inputData,undefined4 param1,undefined4 param2)\n\n{\n  int returnValue;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  undefined4 unusedVar3;\n  \n  if ((int)((uint)*(ushort *)(inputData + 0xc) << 0x17) < 0) {\n    FUN_08005718(result,(int)*(short *)(inputData + 0xe),0,2);\n  }\n  *(ushort *)(inputData + 0xc) = *(ushort *)(inputData + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  returnValue = FUN_080040ec((int)*(short *)(inputData + 0xe),param1,param2,param2,param2,unusedVar1,\n                       unusedVar2,unusedVar3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "check_and_update_values_0800562a",
                "param_1": "result",
                "param_2": "inputData",
                "param_3": "param1",
                "param_4": "param2",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "in_lr": "unusedVar3",
                "iVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "update_value_08005662",
            "code": "\nvoid updateValue_08005662(undefined4 arg1,int arg2)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isResultNegative;\n  \n  result = FUN_08005718(arg1,(int)*(short *)(arg2 + 0xe));\n  isResultNegative = result == -1;\n  if (isResultNegative) {\n    updatedValue = *(ushort *)(arg2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(arg2 + 0x54) = result;\n    updatedValue = *(ushort *)(arg2 + 0xc) | 0x1000;\n  }\n  if (isResultNegative) {\n    *(ushort *)(arg2 + 0xc) = updatedValue;\n  }\n  if (!isResultNegative) {\n    *(ushort *)(arg2 + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "update_value_08005662",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isResultNegative"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "extract_error_code_080056d4",
            "code": "\nvoid extract_error_code_080056d4(int *result_pointer,undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3)\n\n{\n  int error_code;\n  \n  DAT_20000674 = 0;\n  error_code = FUN_080040d6(input_param_1,input_param_2,input_param_2,0,input_param_3);\n  if ((error_code == -1) && (DAT_20000674 != 0)) {\n    *result_pointer = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "extract_error_code_080056d4",
                "param_1": "result_pointer",
                "param_2": "input_param_1",
                "param_3": "input_param_2",
                "param_4": "input_param_3",
                "iVar1": "error_code"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "process_data_080056f8",
            "code": "\nvoid processData_080056f8(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e0(inputValue);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputValue = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "process_data_080056f8",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "check_and_update_value_08005718",
            "code": "\nvoid checkAndUpdateValue_08005718(int *result,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e4(value1,value2,value3,value3,value3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "check_and_update_value_08005718",
                "param_1": "result",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "update_param_and_get_status_0800573c",
            "code": "\nvoid updateParamAndGetStatus_0800573c(int *resultPtr,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int status;\n  \n  DAT_20000674 = 0;\n  status = FUN_080040e8(input1,input2,input3,input3,input3);\n  if ((status == -1) && (DAT_20000674 != 0)) {\n    *resultPtr = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "update_param_and_get_status_0800573c",
                "param_1": "resultPtr",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_variables_08005760",
            "code": "\nvoid initializeVariables_08005760(void)\n\n{\n  code *jumptable;\n  \n  jumptable = initializeVariables_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_variables_08005760",
                "UNRECOVERED_JUMPTABLE": "jumptable"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 118601,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": []
}