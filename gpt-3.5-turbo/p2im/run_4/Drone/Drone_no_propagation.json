{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "parse_format_string_080050fc",
                "param_1": "output",
                "param_2": "input",
                "param_3": "format_string",
                "param_4": "length",
                "puVar1": "next_char",
                "iVar2": "total_length",
                "iVar3": "current_length",
                "puVar4": "current_output",
                "piVar5": "current_length_ptr",
                "bVar6": "is_negative",
                "pbVar7": "current_format_char",
                "pbVar8": "next_char",
                "unaff_r9": "current_output",
                "local_8c": "current_length_ptr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "zero_padding",
                "local_7c": "width",
                "local_74": "formatted_length",
                "local_70": "conversion_char",
                "local_6f": "padding_char",
                "local_6e": "padding_length",
                "local_45": "sign_char",
                "local_30": "hex_prefix"
            },
            "code": "int parse_format_string_080050fc(undefined4 *output, int *input, byte *format_string, int *length)\n{\n  undefined *next_char;\n  int total_length;\n  int current_length;\n  undefined4 *current_output;\n  int *current_length_ptr;\n  bool is_negative;\n  byte *current_format_char;\n  byte current_conversion_char;\n  undefined padding_char;\n  undefined4 padding_length;\n\n  current_length_ptr = length;\n  if (((int)((uint)*(ushort *)(input + 3) << 0x18) < 0) && (input[4] == 0)) {\n    total_length = allocate_memory(output,0x40);\n    *input = total_length;\n    input[4] = total_length;\n    if (total_length == 0) {\n      *output = 0xc;\n      return -1;\n    }\n    input[5] = 0x40;\n  }\n  current_length = 0;\n  padding_char = 0x20;\n  padding_length = 0x30;\n  next_char = format_string;\nLAB_08005146:\n  current_format_char = next_char;\n  if (*current_format_char != 0) goto LAB_080051CA;\n  goto LAB_08005150;\nLAB_080051CA:\n  next_char = current_format_char + 1;\n  if (*current_format_char != 0x25) goto LAB_08005146;\nLAB_08005150:\n  total_length = (int)current_format_char - (int)format_string;\n  if (total_length != 0) {\n    current_length = parse_format_specifier(output, input, format_string, total_length);\n    if (current_length == -1) {\nLAB_080052AC:\n      if ((int)((uint)*(ushort *)(input + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return current_length_ptr;\n    }\n    current_length_ptr = current_length_ptr + current_length;\n  }\n  if (*current_format_char == 0) goto LAB_080052AC;\n  is_negative = false;\n  current_length = 0;\n  current_conversion_char = *next_char;\n  next_char = next_char + 1;\n  while( true ) {\n    if (current_conversion_char < 0x30 || 0x39 < current_conversion_char) break;\n    current_length = current_length * 10 + (current_conversion_char - 0x30);\n    is_negative = true;\n    current_conversion_char = *next_char;\n    next_char = next_char + 1;\n  }\n  if (is_negative) {\n    current_length = -current_length;\n  }\n  if (current_conversion_char == 0x2a) {\n    current_length_ptr = current_length_ptr + 1;\n    total_length = *current_length_ptr;\n    if (-1 < total_length) goto LAB_080051EE;\n    current_length = -total_length;\n    current_length_ptr[1] = current_length_ptr[1] | 2;\n  }\n  else {\n    is_negative = false;\n    total_length = current_length;\n    current_conversion_char = *next_char;\n    while( true ) {\n      if (9 < current_conversion_char - 0x30) break;\n      total_length = total_length * 10 + (current_conversion_char - 0x30);\n      is_negative = true;\n      next_char = next_char + 1;\n      current_conversion_char = *next_char;\n    }\n    if (is_negative) {\nLAB_080051EE:\n      current_length = total_length;\n    }\n  }\n  if (current_conversion_char == 0x2e) {\n    if (next_char[1] == 0x2a) {\n      next_char = next_char + 2;\n      total_length = *current_length_ptr;\n      current_length = total_length;\n      if (current_length < 0) {\n        current_length = -1;\n      }\n    }\n    else {\n      is_negative = false;\n      total_length = 0;\n      current_length = 0;\n      while( true ) {\n        next_char = next_char + 1;\n        if (9 < *next_char - 0x30) break;\n        total_length = total_length * 10 + (*next_char - 0x30);\n        is_negative = true;\n      }\n      if (is_negative) {\n        current_length = total_length;\n      }\n    }\n  }\n  total_length = get_flags_and_width(next_char, &current_conversion_char);\n  current_output = output;\n  if (current_conversion_char == 0) {\n    current_output = (undefined4 *)format_string_output(output, &total_length, input, DAT_080052E0, &current_length_ptr);\n  }\n  else {\n    current_output = output;\n    if (DAT_080052DC == 0) {\n      current_length_ptr = (int *)(((int)current_length_ptr + 7U & 0xfffffff8) + 8);\n      current_output = output;\n      goto LAB_08005260;\n    }\n  }\n  if (current_output == (undefined4 *)0xffffffff) goto LAB_080052AC;\nLAB_08005260:\n  current_length_ptr = current_length_ptr + (int)current_output;\n  next_char = next_char + 1;\n  goto LAB_08005146;\n}\n",
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005614",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "parse_format_string_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "save_parameter_to_pointer_08003320",
                "param_1": "parameter",
                "PTR_DAT_08003328": "pointer_to_data_08003328"
            },
            "code": "void save_parameter_to_pointer_08003320(void* parameter) {\n  *(void**)PTR_DAT_08003328 = parameter;\n  return;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "save_parameter_to_pointer_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "process_data_08004410",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "extra_data",
                "local_10": "data_ptr",
                "local_c": "masked_flags",
                "uStack_8": "extra_data_ptr"
            },
            "code": "void process_data_08004410(undefined4 data, uint16_t flags, undefined4 extra_data) {\n  \n  undefined4 data_ptr = *(undefined4 *)PTR_DAT_08004430;\n  uint16_t masked_flags = flags & 0xffff0000 | (uint)*(ushort *)(PTR_DAT_08004430 + 4);\n  undefined4 extra_data_ptr = extra_data;\n  FUN_08004300(0x6c, &data_ptr, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "process_bits_08001264",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "output_ptr",
                "uVar2": "input_bit",
                "uVar3": "input_value",
                "uVar4": "output_value",
                "uVar5": "i",
                "uVar6": "mask",
                "uVar8": "flag",
                "uVar9": "dat_08001404",
                "uVar10": "dat_08001410",
                "unaff_r10": "dat_08001414",
                "iVar11": "dat_08001418",
                "iVar7": "dat_0800141c",
                "dat_08001420": "dat_08001420",
                "dat_08001408": "dat_08001408",
                "dat_0800140c": "dat_0800140c"
            },
            "code": "void process_bits_08001264(uint *output, uint *input)\n{\n  uint *output_ptr;\n  uint input_bit;\n  uint input_value;\n  uint output_value;\n  uint i;\n  uint mask;\n  uint flag;\n  uint *dat_08001404 = DAT_08001404;\n  uint dat_08001410 = DAT_08001410;\n  uint dat_08001414 = DAT_08001414;\n  uint dat_08001418 = DAT_08001418;\n  uint dat_0800141c = DAT_0800141c;\n  uint dat_08001420 = DAT_08001420;\n  uint dat_08001408 = DAT_08001408;\n  uint *dat_0800140c = DAT_0800140c;\n  output_value = 0;\n  mask = 0;\n  for (i = 0; i < 16; i++) {\n    input_bit = 1 << (i & 0xff);\n    if (input_bit & *input) {\n      input_value = input[1];\n      if (input_value == 0x12) {\n        output_value = input[3] + 0xc;\n      }\n      else if (input_value < 0x13) {\n        if (input_value == 2) {\n          output_value = input[3] + 8;\n        }\n        else if (input_value < 3) {\n          if (input_value == 0) {\n            goto LAB_080013be;\n          }\n          if (input_value == 1) {\n            output_value = input[3];\n          }\n        }\n        else if (input_value == 3) {\n          output_value = 0;\n        }\n        else if (input_value == 0x11) {\n          output_value = input[3] + 4;\n        }\n      }\n      else {\n        if (input_value != dat_08001410) {\n          if (dat_08001410 < input_value) {\n            if ((input_value != dat_08001414) && (flag = dat_08001420, input_value != dat_08001418)) {\n              goto LAB_080013b8;\n            }\n          }\n          else if (input_value != dat_0800141c) {\n            flag = dat_0800141c + 0x10000;\n            if (input_value != flag) {\n              goto LAB_080012a8;\n            }\n          }\n        }\nLAB_080013be:\n        output_value = input[2];\n        if (output_value == 0) {\n          output_value = 4;\n        }\n        else {\n          if (output_value == 1) {\n            output[4] = input_bit;\n          }\n          if (output_value != 1) {\n            output[5] = input_bit;\n          }\n          output_value = 8;\n        }\n      }\nLAB_080012a8:\n      if (input_bit < 0x100) {\n        output_ptr = output;\n        mask = i << 2;\n      }\n      else {\n        output_ptr = output + 1;\n        mask = (i + 0x3ffffff8) * 4;\n      }\n      if (0xff < input_bit) {\n        output_ptr = output + 1;\n      }\n      *output_ptr = (*output_ptr & ~(0xf << (mask & 0xff))) | (output_value << (mask & 0xff));\n      flag = input[1] & 0x10000000;\n      if (flag) {\n        *(uint *)(dat_08001408 + 0x18) |= 1;\n        mask = (i & 3) << 2;\n        if (output == dat_0800140c) {\n          flag = 0;\n        }\n        else if (output == dat_0800140c + 0x100) {\n          flag = 1;\n        }\n        else if (output == dat_0800140c + 0x200) {\n          flag = 2;\n        }\n        else if (output == dat_0800140c + 0x300) {\n          flag = 3;\n        }\n        else {\n          flag = 4;\n        }\n        *(uint *)(&DAT_40010008 + (i & 0xfffffffc)) = (flag << mask) | (*(uint *)(&DAT_40010008 + (i & 0xfffffffc)) & ~(0xf << mask));\n        if (input[1] & 0x10000) {\n          mask = *dat_08001404 | input_bit;\n        }\n        else {\n          mask = *dat_08001404 & ~input_bit;\n        }\n        *dat_08001404 = mask;\n        if (input[1] & 0x20000) {\n          mask = dat_08001404[1] | input_bit;\n        }\n        else {\n          mask = dat_08001404[1] & ~input_bit;\n        }\n        dat_08001404[1] = mask;\n        if (input[1] & 0x100000) {\n          mask = dat_08001404[2] | input_bit;\n        }\n        else {\n          mask = dat_08001404[2] & ~input_bit;\n        }\n        dat_08001404[2] = mask;\n        if (input[1] & 0x200000) {\n          mask = dat_08001404[3] | input_bit;\n        }\n        else {\n          mask = input_bit | dat_08001404[3];\n        }\n        dat_08001404[3] = mask;\n      }\n    }\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_0800458c",
                "FUN_08004e14"
            ],
            "imported": false,
            "current_name": "process_bits_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "initialize_game_board_08002ea0",
                "param_1": "row",
                "param_2": "col",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_08002ad0": "initialize_game_pieces",
                "FUN_08002cb0": "initialize_game_rules",
                "FUN_08003314": "set_game_board",
                "DAT_08002ebc": "DAT_game_board"
            },
            "code": "void initialize_game_board_08002ea0(undefined4 row, undefined4 col, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 extraout_r1;\n  initialize_game_pieces();\n  initialize_game_rules();\n  set_game_board(DAT_08002ebc);\n  set_game_board(row, extraout_r1, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08003314",
                "FUN_08003320"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_game_board_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "calculate_080070b0",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "uVar1": "a",
                "uVar2": "b",
                "uVar3": "c",
                "uVar4": "d",
                "uVar5": "e",
                "uVar6": "f",
                "uVar7": "g",
                "uVar8": "h"
            },
            "code": "unsigned long long calculate_080070b0(uint32_t x, uint32_t y, uint32_t z) {\n  uint32_t a, b, c, d, e, f, g;\n  uint32_t h = (y << 1) >> 21;\n  uint32_t i = h - 1023;\n  if ((int)i < 20) {\n    if ((int)i < 0) {\n      if ((y & 0x7fffffff | x) == 0) {\n        return ((unsigned long long)y << 32) | x;\n      }\n      a = y & 0xfffff | x;\n      b = *(uint32_t *)(PTR_DAT_080071b8 + ((int)y >> 31) * -8);\n      c = *(uint32_t *)((int)(PTR_DAT_080071b8 + ((int)y >> 31) * -8) + 4);\n      d = FUNC_0800016c(x, (-a | a) >> 12 & 0x80000 | y & 0xfffe0000, b, c, x, y, z);\n      e = FUNC_08000168((int)d, (int)((unsigned long long)d >> 32), b, c);\n      return (unsigned long long)(e & 0xffffffff) | (unsigned long long)((uint32_t)(e >> 32) & 0x7fffffff | y & 0x80000000) << 32;\n    }\n    h = DAT_080071bc >> (i & 0xff);\n    if ((y & h | x) == 0) {\n      return ((unsigned long long)y << 32) | x;\n    }\n    h = h >> 1;\n    f = y & h | x;\n    if (f != 0) {\n      if (i == 19) {\n        f = 0x80000000;\n      }\n      else {\n        f = 0;\n      }\n      b = 0x40000 >> (i & 0xff) | y & ~h;\n    }\n  }\n  else {\n    if (51 < (int)i) {\n      if (i != 1024) {\n        return ((unsigned long long)y << 32) | x;\n      }\n      g = FUNC_0800016c();\n      return g;\n    }\n    h = h - 1043;\n    i = 0xffffffff >> (h & 0xff);\n    if ((x & i) == 0) {\n      return ((unsigned long long)y << 32) | x;\n    }\n    i = i >> 1;\n    f = x;\n    if ((x & i) != 0) {\n      f = 0x40000000 >> (h & 0xff) | x & ~i;\n    }\n  }\n  b = *(uint32_t *)(PTR_DAT_080071b8 + ((int)y >> 31) * -8);\n  c = *(uint32_t *)((int)(PTR_DAT_080071b8 + ((int)y >> 31) * -8) + 4);\n  d = FUNC_0800016c(f, b, h, c, x, y, z);\n  e = FUNC_08000168((int)d, (int)((unsigned long long)d >> 32), b, c);\n  return (unsigned long long)(e & 0xffffffff) | (unsigned long long)(uint32_t)(e >> 32) << 32;\n}",
            "called": [
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "set_parameter_value_08001424",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "code": "void set_parameter_value_08001424(int base_address, int value, int is_shifted)\n{\n  if (is_shifted == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(base_address + 0x10) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "set_parameter_value_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "is_end_of_string_08001028",
                "in_CY": "current_char",
                "FUN_08001004": "perform_initialization"
            },
            "code": "bool is_end_of_string_08001028(void)\n{\n  char current_char;\n  perform_initialization();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = FUN_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = FUN_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = FUN_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = FUN_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = FUN_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = FUN_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = FUN_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = FUN_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = FUN_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = FUN_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = FUN_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_080070b0",
                "FUN_080009a0",
                "FUN_08007092",
                "FUN_080004d0",
                "FUN_08006228",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "calculate_result_080006ac",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "var1",
                "unaff_r4": "var2",
                "uVar2": "var3",
                "uVar3": "var4",
                "in_r12": "var5",
                "bVar4": "var6"
            },
            "code": "ulonglong calculate_result_080006ac(uint input1, uint input2, uint input3, uint input4)\n{\n  uint var1;\n  uint var2;\n  uint var3;\n  uint var4;\n  uint var5;\n  bool var6;\n  \n  var2 = input4 >> 0x14;\n  if (input2 != input3 && var2 != input3) {\n    var6 = (input1 | input2 << 1) == 0;\n    if (!var6) {\n      var6 = (input3 | input4 << 1) == 0;\n    }\n    if (var6) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (input2 == 0) {\n      var4 = input1 & 0x80000000;\n      do {\n        var1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(var1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | var4;\n      if (var2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      var2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(var2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  var6 = (input1 | input2 << 1) == 0;\n  if (var6) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!var6) {\n    var6 = (input3 | input4 << 1) == 0;\n  }\n  var5 = input2;\n  if (((!var6) && ((input2 != input3 || ((input1 | input2 << 0xc) == 0)))) && ((var2 != input3 || (input1 = input3, var5 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(var5,input1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "calculate_result_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "buffer",
                "param_6": "buffer_size",
                "param_7": "param4",
                "iVar1": "counter1",
                "iVar2": "counter2",
                "puVar3": "data_ptr",
                "uVar4": "data_value"
            },
            "code": "uint32_t process_data_08001828(uint32_t **data, uint32_t param1, uint32_t param2, uint32_t param3, uint8_t *buffer, uint16_t buffer_size, uint32_t param4)\n{\n    int counter1;\n    int counter2;\n    uint32_t *data_ptr;\n    uint32_t data_value;\n    \n    if (*(char *)((int)data + 0x35) == ' ') {\n        if (buffer == NULL) {\n            return 1;\n        }\n        if (buffer_size == 0) {\n            return 1;\n        }\n        counter1 = get_counter();\n        do {\n            data_ptr = *data;\n            if ((~data_ptr[6] & 2) != 0) {\n                if (*(char *)(data + 0xd) == '\\x01') {\n                    return 2;\n                }\n                data_value = *data_ptr;\n                *(undefined *)(data + 0xd) = 1;\n                *data_ptr = data_value & 0xfffff7ff;\n                *(undefined *)((int)data + 0x35) = 0x21;\n                *(undefined *)((int)data + 0x36) = 0x40;\n                data[0xe] = NULL;\n                counter1 = process_data_08001828_internal(data, param1, param2, param3, param4);\n                if (counter1 != 0) {\n                    *(undefined *)(data + 0xd) = 0;\n                    if (data[0xe] == (uint32_t *)0x4) {\n                        return 1;\n                    }\n                    return 3;\n                }\n                goto end_of_function;\n            }\n            counter2 = get_counter();\n        } while ((uint32_t)(counter2 - counter1) < 0x2711);\n        *(undefined *)(data + 0xd) = 0;\n        *(undefined *)((int)data + 0x35) = 0x20;\n    }\n    return 2;\n    while (buffer_size != 0) {\nend_of_function:\n        counter1 = process_data_08001828_internal(data, param4);\n        if (counter1 != 0) goto error_handling;\n        data_ptr = *data;\n        data_ptr[4] = (uint32_t)*buffer;\n        if ((int)(data_ptr[5] << 0x1d) < 0) {\n            if ((short)(buffer_size - 1) == 0) break;\n            buffer_size -= 2;\n            data_ptr[4] = (uint32_t)buffer[1];\n            buffer += 2;\n        }\n        else {\n            buffer++;\n            buffer_size--;\n        }\n    }\n    counter1 = process_data_08001828_internal(data, param4);\n    if (counter1 == 0) {\n        **data |= 0x200;\n        *(undefined *)(data + 0xd) = 0;\n        *(undefined *)((int)data + 0x35) = 0x20;\n        *(undefined *)((int)data + 0x36) = 0;\n        return 0;\n    }\nerror_handling:\n    if (data[0xe] == (uint32_t *)0x4) {\n        **data |= 0x200;\n        return 1;\n    }\n    return 3;\n}",
            "called": [
                "FUN_08001530",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "process_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "clearMemory_08004c64",
                "puVar1": "memoryPointer",
                "iVar2": "counter"
            },
            "code": "void clearMemory_08004c64(void)\n{\n  undefined *memoryPointer;\n  int counter = 0;\n  memoryPointer = PTR_DAT_08004c6c;\n  *(undefined2 *)(PTR_DAT_08004c6c + 0x800) = 0;\n  *(undefined2 *)(memoryPointer + 0x802) = 0;\n  *(undefined2 *)(memoryPointer + 0x804) = 0;\n  do {\n    memoryPointer[counter] = 0;\n    counter++;\n  } while (counter != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "clearMemory_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = FUN_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = FUN_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = FUN_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = FUN_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = FUN_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = FUN_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = FUN_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = FUN_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = FUN_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = FUN_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = FUN_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = FUN_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = FUN_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = FUN_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = FUN_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08001168",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "set_sign_bit_and_divide_by_2_to_31_08007092",
                "param_1": "num",
                "param_2": "sign_bit_mask",
                "result": "result",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "uint set_sign_bit_and_divide_by_2_to_31_08007092(uint32_t num, uint32_t sign_bit_mask){\n    uint32_t signed_num = num | sign_bit_mask;\n    uint32_t shifted_num = signed_num + 0x100000;\n    uint32_t result = shifted_num >> 0x1f;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "set_sign_bit_and_divide_by_2_to_31_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "first_byte",
                "iVar2": "data_pointer",
                "uVar3": "data_value",
                "uVar4": "return_value",
                "sVar5": "short_value",
                "puVar6": "ushort_pointer_1",
                "puVar7": "ushort_pointer_2",
                "bVar8": "is_flag_set"
            },
            "code": "int process_data_0800290c(int *data)\n{\n  byte first_byte;\n  int data_pointer;\n  uint data_value;\n  undefined4 return_value;\n  short short_value;\n  ushort *ushort_pointer_1;\n  ushort *ushort_pointer_2;\n  bool is_flag_set;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  data_pointer = *data;\n  ushort_pointer_1 = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      ushort_pointer_2 = ushort_pointer_1 + 1;\n      *ushort_pointer_1 = (ushort)((uint)(*(int *)(data_pointer + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ushort_pointer_2 = (ushort *)((int)ushort_pointer_1 + 1);\n      *ushort_pointer_1 = (ushort)*(int *)(data_pointer + 4) & 0xff;\n    }\n    data[10] = (int)ushort_pointer_2;\n  }\n  else {\n    if (data[4] == 0) {\n      first_byte = (byte)*(undefined4 *)(data_pointer + 4);\n      data[10] = (int)ushort_pointer_1 + 1;\n    }\n    else {\n      return_value = *(undefined4 *)(data_pointer + 4);\n      data[10] = (int)ushort_pointer_1 + 1;\n      first_byte = (byte)return_value & 0x7f;\n    }\n    *(byte *)ushort_pointer_1 = first_byte;\n  }\n  short_value = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = short_value;\n  if (short_value == 0) {\n    data_pointer = *data;\n    *(uint *)(data_pointer + 0xc) = *(uint *)(data_pointer + 0xc) & 0xffffffdf;\n    data_value = (uint)*(byte *)((int)data + 0x39);\n    is_flag_set = data_value != 0x32;\n    if (is_flag_set) {\n      data_value = *(uint *)(data_pointer + 0xc) & 0xfffffeff;\n    }\n    else {\n      data_pointer = 0x12;\n    }\n    if (is_flag_set) {\n      *(uint *)(data_pointer + 0xc) = data_value;\n      data_value = *(uint *)(data_pointer + 0x14) & 0xfffffffe;\n    }\n    if (is_flag_set) {\n      *(uint *)(data_pointer + 0x14) = data_value;\n      data_pointer = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)data_pointer;\n    perform_final_task();\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "process_data_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "initialize_data_and_run_program_08002f28",
                "PTR_DAT_08003000": "DATA_PTR_2",
                "PTR_DAT_08003004": "DATA_PTR_1",
                "PTR_DAT_08003008": "DATA_PTR_3",
                "PTR_DAT_0800300c": "DATA_PTR_4",
                "PTR_DAT_08003010": "DATA_PTR_7",
                "PTR_DAT_08003014": "DATA_PTR_6",
                "PTR_DAT_08003018": "DATA_PTR_5",
                "PTR_DAT_0800301c": "DATA_PTR_9",
                "PTR_DAT_08003020": "DATA_PTR_10",
                "PTR_DAT_08003024": "DATA_PTR_8",
                "PTR_DAT_08003028": "DATA_PTR_11",
                "PTR_DAT_0800302c": "DATA_PTR_12",
                "PTR_DAT_08003030": "DATA_PTR_13",
                "PTR_DAT_08003034": "DATA_PTR_14",
                "thunk_FUN_0800115c": "thunk_function",
                "iVar6": "variable1",
                "puVar3": "data1_ptr",
                "puVar2": "data2_ptr",
                "iVar8": "variable3",
                "uVar7": "variable2",
                "puVar4": "data3_ptr",
                "uVar5": "data4",
                "sVar1": "temperature1"
            },
            "code": "void initialize_data_and_run_program_08002f28(void)\n{\n  short temperature1;\n  undefined *data1_ptr;\n  undefined *data2_ptr;\n  undefined *data3_ptr;\n  undefined2 data4;\n  int variable1;\n  undefined4 variable2;\n  int variable3;\n  initialize_subsystem1();\n  initialize_subsystem2();\n  initialize_subsystem3();\n  variable1 = thunk_function();\n  data2_ptr = PTR_DAT_08003004;\n  data1_ptr = PTR_DAT_08003000;\n  variable3 = *(int *)PTR_DAT_08003000;\n  *(int *)PTR_DAT_08003004 = variable1;\n  variable2 = calculate_difference(variable1 - variable3);\n  function1(variable2, PTR_DAT_08003008);\n  initialize_subsystem4();\n  data3_ptr = PTR_DAT_0800300c;\n  *(undefined4 *)data1_ptr = *(undefined4 *)data2_ptr;\n  function2(*(int *)(data3_ptr + 4) + -0x80000000, *(int *)data3_ptr + -0x80000000, *(undefined4 *)(data3_ptr + 8), *(undefined4 *)(PTR_DAT_08003018 + 4), *(undefined4 *)PTR_DAT_08003018, *(int *)(PTR_DAT_08003018 + 8) + -0x80000000, *(undefined4 *)PTR_DAT_08003014, *(undefined4 *)(PTR_DAT_08003014 + 4), *(undefined4 *)(PTR_DAT_08003014 + 8), PTR_DAT_08003010);\n  data3_ptr = PTR_DAT_08003024;\n  data2_ptr = PTR_DAT_0800301c;\n  data1_ptr = PTR_DAT_08003020;\n  *(short *)PTR_DAT_0800301c = (short)((uint)(int)*(short *)PTR_DAT_08003020 / 100);\n  temperature1 = *(short *)(data1_ptr + 2);\n  *(short *)(data2_ptr + 4) = (short)((uint)(int)*(short *)(data1_ptr + 4) / 100);\n  data1_ptr = PTR_DAT_08003028;\n  *(short *)(data2_ptr + 2) = (short)((uint)(int)temperature1 / 100);\n  *(undefined2 *)(data2_ptr + 6) = *(undefined2 *)data1_ptr;\n  data4 = *(undefined2 *)(data1_ptr + 4);\n  *(undefined2 *)(data2_ptr + 8) = *(undefined2 *)(data1_ptr + 2);\n  *(undefined2 *)(data2_ptr + 10) = data4;\n  data1_ptr = PTR_DAT_0800302c;\n  *(undefined2 *)(data2_ptr + 0xc) = *(undefined2 *)PTR_DAT_0800302c;\n  data4 = *(undefined2 *)(data1_ptr + 4);\n  *(undefined2 *)(data2_ptr + 0xe) = *(undefined2 *)(data1_ptr + 2);\n  *(undefined2 *)(data2_ptr + 0x10) = data4;\n  variable2 = get_data_from_subsystem5();\n  function3(variable2, PTR_DAT_08003030);\n  data4 = get_data_from_subsystem6();\n  *(undefined2 *)PTR_DAT_08003034 = data4;\n  variable2 = get_data_from_subsystem5();\n  function3(variable2, PTR_DAT_08003030);\n  temperature1 = get_data_from_subsystem7();\n  *(undefined2 *)(PTR_DAT_08003034 + 2) = temperature1;\n  return;\n}\n",
            "called": [
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_08002d88",
                "FUN_08000c3c",
                "thunk_FUN_0800115c",
                "FUN_08002ed4",
                "FUN_08002ee8",
                "FUN_08001078",
                "FUN_08000cec",
                "FUN_08002bf0",
                "FUN_08003320",
                "FUN_08000e54",
                "FUN_08002b48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_data_and_run_program_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "initialize_data_08004384",
                "param_1": "input_data_1",
                "param_2": "input_data_2",
                "param_3": "input_data_3",
                "param_4": "input_data_4",
                "puVar1": "data_ptr",
                "local_14": "local_variable_1",
                "uStack_10": "local_variable_2",
                "local_c": "local_variable_3"
            },
            "code": "void initialize_data_08004384(uint8_t param_1, uint8_t param_2, uint8_t param_3, uint32_t param_4)\n{\n  uint8_t* data_ptr = PTR_DAT_080043b8;\n  data_ptr[4] = 7;\n  data_ptr[5] = 0;\n  data_ptr[6] = 0x2a;\n  data_ptr[7] = 0;\n  uint32_t local_14 = *(uint32_t*)data_ptr;\n  uint32_t uStack_10 = *(uint32_t*)(data_ptr + 4);\n  data_ptr[8] = 0;\n  data_ptr[9] = 0;\n  data_ptr[10] = 0;\n  uint32_t local_c = param_4 & 0xff000000 | (uint32_t)*(uint16_t*)(data_ptr + 8);\n  FUN_08004300(0x65, &local_14, 0xb, *(uint16_t*)(data_ptr + 8), param_1);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_data_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "is_character_not_null_080009a0",
                "in_ZR": "character",
                "FUN_08000990": "call_function_08000990"
            },
            "code": "bool is_character_not_null_080009a0(char character) {\n  call_function_08000990();\n  return character != '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "is_character_not_null_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "read_MS5611_data_08003298",
                "puVar1": "src_ptr",
                "puVar2": "dest_ptr",
                "puVar3": "dest_ptr",
                "iVar4": "i",
                "local_1c": "byte1",
                "local_1b": "byte2",
                "PTR_DAT_08003304": "MS5611_data_status",
                "PTR_DAT_0800330c": "MS5611_data",
                "PTR_DAT_08003310": "MS5611_data + 0x10",
                "PTR_s____Src_MS5611_c_08003308": "MS5611_PROM",
                "thunk_do_nothing_08001168": "delay_ms",
                "FUN_0800403c": "i2c_write_byte",
                "FUN_080040e8": "i2c_read_bytes"
            },
            "code": "void read_MS5611_data_08003298(void)\n{\n    uint8_t *src_ptr;\n    uint16_t *dest_ptr;\n    uint32_t i;\n    uint8_t byte1, byte2;\n    uint16_t data;\n    \n    i = 0;\n    i2c_write_byte(0xee, 0x1e, 1);\n    delay_ms(10);\n    dest_ptr = PTR_DAT_0800330c;\n    src_ptr = PTR_s____Src_MS5611_c_08003308;\n    *PTR_DAT_08003304 = 8;\n    do {\n        byte1 = 0;\n        byte2 = 0;\n        i2c_read_bytes(0xee, i + 0xa0U & 0xffff, &byte1, 1, src_ptr, 0x7c);\n        i2c_read_bytes(0xee, i + 0xa1U & 0xffff, &byte2, 1, src_ptr, 0x7c);\n        data = (byte1 << 8) | byte2;\n        *dest_ptr = data;\n        dest_ptr++;\n        i += 2;\n    } while (i != 0x10);\n    \n    dest_ptr = PTR_DAT_08003310;\n    for (i = 0; i < 0x14; i++) {\n        *dest_ptr = 0;\n        dest_ptr++;\n    }\n}",
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "read_MS5611_data_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "param_1": "key",
                "param_2": "data",
                "param_3": "length",
                "uVar1": "checksum",
                "pbVar2": "ptr"
            },
            "code": "void calculate_checksum_08004300(uint key, byte *data, uint length) {\n  uint checksum = 0;\n  add_constant_to_checksum(0x08004344);\n  add_byte_to_checksum(length & 0xff);\n  checksum = length & 0xff ^ key;\n  add_byte_to_checksum(key);\n  for (byte *ptr = data; ptr < data + length; ptr++) {\n    add_byte_to_checksum(*ptr);\n    checksum ^= *ptr;\n  }\n  add_byte_to_checksum(checksum);\n  return;\n}\n",
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004348",
                "FUN_08004410",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004458"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_string_08005630",
                "param_1": "dst_address",
                "param_2": "src_string",
                "param_3": "string_length",
                "puVar1": "dst_ptr",
                "puVar2": "src_ptr"
            },
            "code": "void copy_string_08005630(int dst_address, char *src_string, int string_length) {\n  char *dst_ptr;\n  char *src_ptr;\n  dst_ptr = (char *)(dst_address - 1);\n  src_ptr = src_string + string_length;\n  for (; src_string != src_ptr; src_string++) {\n    dst_ptr++;\n    *dst_ptr = *src_string;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_string_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  FUN_08000428();\n  FUN_08005bc8();\n  uVar2 = FUN_08000a30();\n  iVar4 = FUN_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    FUN_08000428();\n    FUN_08005bc8();\n    uVar3 = FUN_08000a30();\n    iVar4 = FUN_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = FUN_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = FUN_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      FUN_08000428();\n      FUN_08005bc8();\n      iVar27 = FUN_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar8 = FUN_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      FUN_08000428();\n      uVar32 = FUNC_08005854();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = FUN_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005854",
                "FUN_08000a30",
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08005bc8",
                "FUN_08000adc",
                "FUN_08000724",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "perform_task_08000980",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "FUN_08000990": "execute_task"
            },
            "code": "void perform_task_08000980(void* data1, void* data2, void* data3, void* data4)\n{\n  execute_task(data3, data4, data1, data2);\n  return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "perform_task_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "perform_task_08004028",
                "FUNC_0800458c": "perform_initialization",
                "FUN_08003ff4": "perform_preparation",
                "FUN_08003f3c": "perform_action",
                "thunk_do_nothing_08001168": "do_nothing",
                "iVar1": "task_count"
            },
            "code": "void perform_task_08004028(void)\n{\n  int task_count = 3;\n  perform_action(true, false);\n  perform_action(false, true);\n  while (task_count > 0)\n  {\n    perform_action(false, false, true);\n    task_count--;\n  }\n  perform_action(true, true);\n  return;\n}",
            "called": [
                "FUN_08003ff4",
                "FUN_08003f3c",
                "thunk_FUN_08001168",
                "FUN_0800458c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "perform_task_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "update_data_08002368",
                "param_1": "data_ptr",
                "param_2": "new_data",
                "uVar1": "current_data",
                "puVar2": "ptr",
                "DAT_080023cc": "DATA_START"
            },
            "code": "void update_data_08002368(uint *data_ptr, uint *new_data) {\n  uint current_data = *data_ptr;\n  if ((((data_ptr == DAT_080023cc) || (data_ptr == (uint *)0x40000000)) ||\n       (data_ptr == DAT_080023cc - 0x4a00)) || (data_ptr == DAT_080023cc - 0x4900)) {\n    current_data = current_data & 0xffffff8f | new_data[1];\n    if (((data_ptr == DAT_080023cc) || (data_ptr == (uint *)0x40000000)) ||\n        ((data_ptr == DAT_080023cc - 0x4a00 || (data_ptr == DAT_080023cc - 0x4900)))) {\n      current_data = current_data & 0xfffffcff | new_data[3];\n    }\n  }\n  *data_ptr = current_data;\n  data_ptr[11] = new_data[2];\n  data_ptr[10] = *new_data;\n  uint *ptr = DAT_080023cc;\n  if (data_ptr == DAT_080023cc) {\n    ptr = (uint *)new_data[4];\n  }\n  if (data_ptr == DAT_080023cc) {\n    data_ptr[12] = (uint)ptr;\n  }\n  data_ptr[5] = 1;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_data_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "set_bit_08002520",
                "param_1": "bit_array",
                "param_2": "bit_position",
                "param_3": "bit_value",
                "PTR_": "bit_array_",
                "DAT_": "BIT_MASK"
            },
            "code": "void set_bit_08002520(uint32_t *bit_array, uint8_t bit_position, uint8_t bit_value) {\n  const uint8_t DAT_ = 1 << (bit_position & 0xff);\n  *bit_array = (*bit_array & ~DAT_) | (bit_value << (bit_position & 0xff));\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "set_bit_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_value_08002008",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar3": "flag",
                "uVar4": "leading_zeroes",
                "uVar5": "value",
                "puVar6": "data_ptr",
                "puVar7": "value_ptr",
                "local_24": "mask",
                "local_20": "value_table",
                "PTR_DAT_0800208c": "data",
                "DAT_08002090": "data2",
                "DAT_08002094": "multiplier",
                "DAT_08002098": "divisor"
            },
            "code": "uint calculate_value_08002008(void)\n{\n  uint value = 0;\n  uint flag = *(uint *)(PTR_DAT_0800208c + 4);\n  uint shift = 0;\n  uint DAT_08002094 = 1;\n  uint lookup_index = 0;\n  uint lookup_value = 0;\n  uint DAT_08002098 = 0;\n  uint quotient = 0;\n  uint leading_zeroes = 0;\n  uint *PTR_DAT_0800208c_ptr = (uint *)PTR_DAT_0800208c;\n  uint *value_ptr = (uint *)value_table;\n  for (int i = 0; i < 5; i++)\n  {\n    *value_ptr = *PTR_DAT_0800208c_ptr;\n    value_ptr++;\n    PTR_DAT_0800208c_ptr++;\n  }\n  uint flag_mask = 0xc;\n  uint flag_value = 8;\n  if ((flag & flag_mask) == flag_value)\n  {\n    uint mask = 0x3c00;\n    leading_zeroes = count_leading_zeroes(mask);\n    lookup_index = (flag & 0x3c0000) >> leading_zeroes;\n    lookup_value = *(byte *)(value_table + lookup_index);\n    if ((int)(flag << 0xf) < 0)\n    {\n      mask = 0x4000;\n      leading_zeroes = count_leading_zeroes(mask);\n      DAT_08002098 = *(byte *)(value_table + ((flag & 0x20000) >> leading_zeroes));\n      quotient = DAT_08002094 / DAT_08002098;\n      DAT_08002094 = quotient;\n    }\n    value = lookup_value * DAT_08002094;\n  }\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_value_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "update_parameters_08002404",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "value1",
                "uVar2": "value2",
                "iVar3": "value3",
                "DAT_08002458": "DAT_08002458",
                "PTR_0800241c": "PTR_0800241c"
            },
            "code": "void update_parameters_08002404(int base_address, int* parameters)\n{\n    uint32_t mask1 = 0xffffffef;\n    uint32_t mask2 = 0xffffffdf;\n    uint32_t value1 = (parameters[2] << 4);\n    uint32_t value2 = *(uint32_t *)(base_address + 4);\n    int value3 = *(parameters);\n    *(uint32_t *)(base_address + 0x20) = (*(uint32_t *)(base_address + 0x20) & mask1) | value1;\n    if (base_address == DAT_08002458) {\n        value1 = (value1 & mask2) | (parameters[3] << 4);\n        value2 = (value2 & 0xfffff3ff) | ((parameters[5] | parameters[6]) << 2);\n    }\n    *(uint32_t *)(base_address + 4) = value2;\n    *(uint32_t *)(base_address + 0x18) = (*(uint32_t *)(base_address + 0x18) & 0xffff8cff) | (value3 << 8);\n    *(int *)(base_address + 0x38) = parameters[1];\n    *(uint32_t *)(base_address + 0x20) = value1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_parameters_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "process_data_08005bc8",
                "param_1": "first_param",
                "param_2": "second_param",
                "cVar1": "current_char",
                "iVar2": "result_var",
                "piVar3": "result_ptr",
                "puVar4": "undefined_ptr",
                "uVar5": "return_value",
                "local_50": "local_var_1",
                "local_4c": "local_ptr_1",
                "local_48": "local_var_2",
                "uStack_44": "stack_var_1",
                "local_40": "local_var_3",
                "uStack_3c": "stack_var_2",
                "local_38": "local_var_4",
                "local_30": "local_var_5"
            },
            "code": "undefined8 process_data_08005bc8(undefined4 first_param, undefined4 second_param)\n{\n  char current_char;\n  int result_var;\n  int *result_ptr;\n  undefined4 *undefined_ptr;\n  undefined8 return_value;\n  undefined4 local_var_1;\n  undefined *local_ptr_1;\n  undefined4 local_var_2;\n  undefined4 stack_var_1;\n  undefined4 local_var_3;\n  undefined4 stack_var_2;\n  undefined8 local_var_4;\n  int local_var_5;\n\n  return_value = FUN_08006c0c();\n  current_char = *PTR_DAT_08005c68;\n  if (current_char == -1) {\n    return return_value;\n  }\n  local_var_5 = FUN_08000a04(first_param, second_param, first_param, second_param);\n  if (local_var_5 != 0) {\n    return return_value;\n  }\n  result_var = FUN_080009b4(first_param, second_param, 0, 0);\n  if (result_var == 0) {\n    return return_value;\n  }\n  local_var_1 = 1;\n  local_ptr_1 = PTR_DAT_08005c6c;\n  local_var_2 = first_param;\n  stack_var_1 = second_param;\n  local_var_3 = first_param;\n  stack_var_2 = second_param;\n  if (current_char == '\\0') {\n    local_var_4 = 0;\nLAB_08005c26:\n    result_var = FUN_0800709e(&local_var_1);\n    if (result_var != 0) goto LAB_08005c2e;\n  }\n  else {\n    local_var_4 = FUNC_08000724(0, 0, 0, 0);\n    if (current_char != '\\x02') goto LAB_08005c26;\n  }\n  undefined_ptr = (undefined4 *)FUN_080072ac();\n  *undefined_ptr = 0x21;\nLAB_08005c2e:\n  if (local_var_5 != 0) {\n    result_ptr = (int *)FUN_080072ac();\n    *result_ptr = local_var_5;\n  }\n  return local_var_4;\n}",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "process_data_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "check_flag_08001436",
                "param_1": "flag_ptr",
                "iVar1": "flag_val",
                "PTR_": "flag_ptr",
                "DAT_": "flag_val"
            },
            "code": "int check_flag_08001436(int *PTR_) {\n    int DAT_ = *PTR_;\n    if ((*(uint *)(DAT_ + 0x14) & 0x400) != 0) {\n        *(uint *)(DAT_ + 0x14) &= 0xfffffbff;\n        PTR_[14] = 4;\n        *(undefined *)((int)PTR_ + 0x35) = 0x20;\n        *(undefined *)(PTR_ + 13) = 0;\n        return 1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "check_flag_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "updateValues_08004a30",
                "puVar1": "firstPtr",
                "puVar2": "secondPtr",
                "puVar3": "thirdPtr",
                "uVar4": "result"
            },
            "code": "void updateValues_08004a30(void)\\n{\\n  undefined *firstPtr;\\n  undefined *secondPtr;\\n  undefined *thirdPtr;\\n  undefined4 result;\\n  thirdPtr = PTR_DAT_08004a7c;\\n  secondPtr = PTR_DAT_08004a78;\\n  firstPtr = PTR_DAT_08004a74;\\n  if (firstPtr[1] != \"\\0\") {\\n    if (*secondPtr == \"\\0\") {\\n      result = generateValue();\\n      result = modifyValue(result,DAT_08004a80);\\n      *(undefined4 *)(thirdPtr + 0x1c) = result;\\n      *secondPtr = 1;\\n    }\\n    else {\\n      result = generateValue();\\n      result = modifyValue(result,DAT_08004a80);\\n      *(undefined4 *)(thirdPtr + 0x30) = result;\\n    }\\n  }\\n  if (thirdPtr[1] == \"\\0\") {\\n    if (*secondPtr != \"\\0\") {\\n      *secondPtr = 0;\\n    }\\n    *(undefined4 *)(PTR_DAT_08004a7c + 0x48) = *(undefined4 *)(firstPtr + 4);\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "updateValues_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "initialize_08004c70",
                "puVar1": "ptr_data_2",
                "puVar2": "ptr_data_1",
                "uVar3": "flag",
                "uVar4": "var_2",
                "iVar5": "var_1"
            },
            "code": "int initialize_08004c70() {\n    uint32_t flag;\n    uint32_t *ptr_data_1 = PTR_DAT_08004c88;\n    uint8_t *ptr_data_2 = PTR_DAT_08004c84;\n    FUN_08004c64();\n    if (ptr_data_1[0x39] == 0x01 || ptr_data_1[0x39] == 0x12) {\n        if (ptr_data_2 == NULL) {\n            return 1;\n        }\n        if (ptr_data_1[0x38] != 0x01) {\n            ptr_data_1[0x38] = 0x01;\n            ptr_data_1[0x3c] = 0;\n            ptr_data_1[0x2c] = 1;\n            ptr_data_1[0x2e] = 1;\n            ptr_data_1[0x38] = 0;\n            if (ptr_data_1[0x39] == 0x12) {\n                flag = 0x32;\n            }\n            else {\n                flag = 0x22;\n            }\n            int var_1 = *(int *)ptr_data_1;\n            ptr_data_1[0x39] = flag;\n            uint32_t var_2 = *(uint32_t *)(var_1 + 0xc);\n            ptr_data_1[0x28] = ptr_data_2;\n            *(uint32_t *)(var_1 + 0xc) = var_2 | 0x100;\n            *(uint32_t *)(var_1 + 0x14) |= 1;\n            *(uint32_t *)(var_1 + 0xc) |= 0x20;\n            return 0;\n        }\n    }\n    return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "CheckInputs_08000904",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "xorResult",
                "bVar2": "areInputs1And2Zero",
                "bVar3": "isInput4LessThanOrEqualToInput2"
            },
            "code": "uint CheckInputs_08000904(uint input1, uint input2, uint input3, uint input4)\n{\n  bool isInput2Negative = ((int)(input2 << 1) >> 0x15 == -1);\n  bool isInput4Negative = ((int)(input4 << 1) >> 0x15 == -1);\n  if (isInput2Negative || isInput4Negative)\n  {\n    bool isInput1AndInput2NonZero = ((input1 | input2 << 0xc) != 0);\n    bool isInput3AndInput4NonZero = ((input3 | input4 << 0xc) != 0);\n    if ((isInput2Negative && isInput1AndInput2NonZero) || (isInput4Negative && isInput3AndInput4NonZero))\n    {\n      return 1;\n    }\n  }\n  bool areInputs1And2Zero = ((input1 | input2 << 1) == 0);\n  bool areInputs3And4Zero = ((input3 | input4 << 1) == 0);\n  if (!areInputs1And2Zero && !areInputs3And4Zero && input2 == input4 && input1 == input3)\n  {\n    return 0;\n  }\n  uint xorResult = input2 ^ input4;\n  bool isXorResultZero = (xorResult == 0);\n  if (-1 < (int)xorResult)\n  {\n    isXorResultZero = (input2 == input4);\n  }\n  bool isInput4LessThanOrEqualToInput2 = (-1 < (int)xorResult) && (input4 <= input2);\n  if (isXorResultZero)\n  {\n    isInput4LessThanOrEqualToInput2 = (input3 <= input1);\n  }\n  int isInput4NegativeOrNot = (int)input4 >> 0x1f;\n  if (!isInput4LessThanOrEqualToInput2)\n  {\n    isInput4NegativeOrNot = ~isInput4NegativeOrNot;\n  }\n  return isInput4NegativeOrNot | 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "CheckInputs_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "validate_input_0800299a",
                "param_1": "input",
                "uVar1": "fourth_word",
                "sVar2": "count",
                "uVar3": "first_word",
                "puVar4": "ptr3",
                "uVar5": "flag",
                "puVar6": "ptr",
                "uVar7": "fifth_word",
                "bVar8": "flag"
            },
            "code": "void validate_input_0800299a(uint **input)\n{\n  uint first_word = **input;\n  uint fourth_word = (*input)[3];\n  if ((first_word & 0xf) == 0)\n  {\n    if (((int)(first_word << 0x1a) < 0) && ((int)(fourth_word << 0x1a) < 0))\n    {\n      report_error();\n      return;\n    }\n  }\n  else\n  {\n    uint fifth_word = (*input)[5] & 1;\n    if ((fifth_word != 0) || ((fourth_word & 0x120) != 0))\n    {\n      uint *ptr = (uint *)(first_word << 0x1f);\n      if ((int)ptr < 0)\n      {\n        bool flag = (int)(fourth_word << 0x17) < 0;\n        if (flag)\n        {\n          ptr = (uint *)((uint)input[0xf] | 1);\n        }\n        if (flag)\n        {\n          input[0xf] = ptr;\n        }\n      }\n      if (((int)(first_word << 0x1d) < 0) && (fifth_word != 0))\n      {\n        input[0xf] = (uint *)((uint)input[0xf] | 2);\n      }\n      if (((int)(first_word << 0x1e) < 0) && (fifth_word != 0))\n      {\n        input[0xf] = (uint *)((uint)input[0xf] | 4);\n      }\n      if (((int)(first_word << 0x1c) < 0) && (fifth_word != 0))\n      {\n        input[0xf] = (uint *)((uint)input[0xf] | 8);\n      }\n      if (input[0xf] == (uint *)0x0)\n      {\n        return;\n      }\n      if (((int)(first_word << 0x1a) < 0) && ((int)(fourth_word << 0x1a) < 0))\n      {\n        report_error(input);\n      }\n      uint *ptr2 = *input;\n      if ((-1 < (int)input[0xf] << 0x1c) && ((ptr2[5] & 0x40) == 0))\n      {\n        do_nothing(input);\n        input[0xf] = (uint *)0x0;\n        return;\n      }\n      ptr2[3] = ptr2[3] & 0xfffffedf;\n      ptr2[5] = ptr2[5] & 0xfffffffe;\n      *(undefined *)((int)input + 0x39) = 1;\n      do_nothing(input);\n      return;\n    }\n  }\n  if (((int)(first_word << 0x18) < 0) && ((int)(fourth_word << 0x18) < 0))\n  {\n    if ((*(byte *)((int)input + 0x39) & 0xdf) == 0x12)\n    {\n      uint *ptr3 = input[8];\n      if (input[2] == (uint *)0x1000)\n      {\n        ptr2[1] = *(ushort *)ptr3 & 0x1ff;\n        if (input[4] == (uint *)0x0)\n        {\n          ptr3 = (uint *)((int)ptr3 + 2);\n        }\n        else\n        {\n          ptr3 = (uint *)((int)ptr3 + 1);\n        }\n        input[8] = ptr3;\n      }\n      else\n      {\n        input[8] = (uint *)((int)ptr3 + 1);\n        ptr2[1] = (uint)*(byte *)ptr3;\n      }\n      short count = *(short *)((int)input + 0x26) + -1;\n      *(short *)((int)input + 0x26) = count;\n      if (count == 0)\n      {\n        ptr2[3] = ptr2[3] & 0xffffff7f;\n        ptr2[3] = ptr2[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(first_word << 0x19) < 0) && ((int)(fourth_word << 0x19) < 0))\n  {\n    ptr2[3] = ptr2[3] & 0xffffffbf;\n    if (*(char *)((int)input + 0x39) == '2')\n    {\n      undefined flag = 0x22;\n    }\n    else\n    {\n      undefined flag = 1;\n    }\n    *(undefined *)((int)input + 0x39) = flag;\n    do_nothing_else(input);\n  }\n  return;\n}",
            "called": [
                "FUN_0800290c",
                "FUN_08002998",
                "FUN_0800290a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "validate_input_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_pointer_value_0800114c",
                "PTR_DAT_08001158": "ptr",
                "int": "int",
                "*": "value pointed by",
                "=": "assigned to",
                "+": "plus",
                "return": "return"
            },
            "code": "void increment_pointer_value_0800114c(void)\n{\n    int* PTR_DAT_08001158 = (int*)PTR_DAT_08001158;\n    *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_pointer_value_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "calculate_checksum_080052e4",
                "param_1": "data",
                "param_2": "start_pos",
                "param_3": "end_pos",
                "param_4": "offset",
                "param_5": "callback",
                "iVar1": "status",
                "uVar2": "max_pos",
                "uVar3": "char_offset",
                "bVar4": "is_masked",
                "data_masked": "data_masked",
                "char_flag": "char_flag",
                "end": "end",
                "diff": "diff"
            },
            "code": "uint32_t calculate_checksum_080052e4(uint32_t data, uint32_t *start_pos, uint32_t *end_pos, uint32_t offset, code *callback) {\n  int status = 0;\n  uint32_t max_pos = start_pos[4] < start_pos[2] ? start_pos[2] : start_pos[4];\n  *end_pos = max_pos;\n  if (*(char *)((int)start_pos + 0x43) != '\\0') {\n    *end_pos = max_pos + 1;\n  }\n  if ((int)(data << 0x1a) < 0) {\n    *end_pos = *end_pos + 2;\n  }\n  uint32_t data_masked = data & 6;\n  if (data_masked == 0) {\n    for (; (int)data_masked < (int)(start_pos[3] - *end_pos); data_masked = data_masked + 1) {\n      status = (*callback)(data, offset, (int)start_pos + 0x19, 1);\n      if (status == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uint32_t char_flag = (uint32_t)*(byte *)((int)start_pos + 0x43);\n  if (char_flag != 0) {\n    char_flag = 1;\n  }\n  uint32_t char_offset = char_flag;\n  if ((int)(data << 0x1a) < 0) {\n    *(undefined *)((int)start_pos + char_flag + 0x43) = 0x30;\n    char_offset = char_flag + 2;\n    *(undefined *)((int)start_pos + char_flag + 0x44) = *(undefined *)((int)start_pos + 0x45);\n  }\n  status = (*callback)(data, offset, (int)start_pos + 0x43, char_offset);\n  if (status != -1) {\n    uint32_t end = start_pos[3];\n    bool is_masked = (data & 6) != 4;\n    if (is_masked) {\n      end = 0;\n    }\n    uint32_t diff = 0;\n    if (!is_masked) {\n      diff = end - *end_pos;\n    }\n    if (!is_masked) {\n      diff = diff & ~((int)diff >> 0x1f);\n    }\n    if (start_pos[4] < start_pos[2]) {\n      diff = diff + (start_pos[2] - start_pos[4]);\n    }\n    while (diff != 0) {\n      status = (*callback)(data, offset, (int)start_pos + 0x1a, 1);\n      if (status == -1) {\n        return 0xffffffff;\n      }\n      diff = diff - 1;\n    }\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "calculate_checksum_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "check_validity_080014e2",
                "param_1": "ptr_param",
                "param_2": "param_size",
                "iVar1": "start_time",
                "iVar2": "result",
                "FUN_0800115c": "get_current_time"
            },
            "code": "int check_validity_080014e2(int *ptr_param, uint32_t param_size) {\n    int start_time = get_current_time();\n    while(1) {\n        if (*(int *)(ptr_param + 0x14) << 0x18 < 0) {\n            return 0;\n        }\n        int result = check_value(ptr_param);\n        if (result != 0) {\n            break;\n        }\n        if ((param_size != 0xffffffff) && ((param_size == 0 || (int)(get_current_time() - start_time) > param_size))) {\n            ptr_param[0xe] = ptr_param[0xe] | 0x20;\n            *(undefined *)((int)ptr_param + 0x35) = 0x20;\n            *(undefined *)(ptr_param + 0xd) = 0;\n            return 3;\n        }\n    }\n    return 1;\n}",
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8",
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "check_validity_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_with_param_0800142e",
                "param_1": "data",
                "param_2": "key",
                "*(uint *)(param_1 + 0xc)": "*ptr",
                "uint": "uint",
                "return": "return"
            },
            "code": "void xor_with_param_0800142e(uint *data, uint key) {\n  uint *ptr = data + 0xc;\n  *ptr = key ^ *ptr;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_with_param_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "set_flags_08004d8c",
                "*param_1": "flag_ptr",
                "iVar1": "flag_value",
                "DAT_08004e04": "FLAG_A",
                "DAT_08004e08": "FLAG_PTR",
                "DAT_08004e0c": "FLAG_C",
                "DAT_08004e10": "FLAG_D",
                "_DAT_4002101c": "REG_B",
                "|": "_BIT"
            },
            "code": "void set_flags_08004d8c(int *flag_ptr)\n{\n  int flag_value = *flag_ptr;\n  if (flag_value == DAT_08004e04)\n  {\n    *(uint *)(DAT_08004e08 + 0x18) |= DAT_08004e04_BIT;\n  }\n  else if (flag_value == FLAG_B)\n  {\n    *_DAT_4002101c |= FLAG_B_BIT;\n  }\n  else if (flag_value == DAT_08004e0c)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e0c_BIT;\n  }\n  else if (flag_value == DAT_08004e10)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e10_BIT;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "set_flags_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_shifted_value_based_on_bitmask_08002250",
                "uVar1": "leading_zeroes",
                "PTR_DAT_0800227c": "bitmask",
                "DAT_08002274": "data",
                "PTR_DAT_08002278": "shift_array"
            },
            "code": "uint get_shifted_value_based_on_bitmask_08002250(void)\n{\n  uint PTR_DAT_0800227c = *(uint *)PTR_DAT_0800227c;\n  uint shifted_value = *(uint *)(DAT_08002274 + 4);\n  uint leading_zeroes = count_leading_zeroes(0x1c0000);\n  uint shifted_bits = (shifted_value & 0x3800) >> (leading_zeroes & 0xff);\n  return PTR_DAT_0800227c >> PTR_DAT_08002278[shifted_bits];\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "get_shifted_value_based_on_bitmask_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "isEndOfString_080009b4",
                "in_CY": "currentChar",
                "FUN_08000990": "getCurrentChar"
            },
            "code": "bool isEndOfString_080009b4(void)\n{\n  char currentChar;\n  getCurrentChar();\n  return currentChar == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "isEndOfString_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "bit_position",
                "PTR_DAT_08001210": "array_ptr",
                "DAT_08001210": "array_start_address"
            },
            "code": "void set_bit_in_array_080011fc(uint bit_position) {\n    int* PTR_DAT_08001210 = (int*)(DAT_08001210 + (bit_position >> 5) * 4);\n    int bit_index = bit_position & 0x1f;\n    int bit_mask = 1 << bit_index;\n    *PTR_DAT_08001210 = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_value_from_pointer_08003068",
                "*PTR_DAT_08003070": "pointer_to_value"
            },
            "code": "int get_value_from_pointer_08003068() {\n  int* *PTR_DAT_08003070 = (int*) PTR_DAT_08003070;\n  int value = **PTR_DAT_08003070;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_string_08005646",
                "param_1": "string_start",
                "param_2": "string_end",
                "param_3": "string_length",
                "puVar1": "end"
            },
            "code": "void reverse_string_08005646(char *string_start, char *string_end, int string_length) {\n  char *end = string_end + string_length;\n  if ((string_end < string_start) && (string_start < end)) {\n    string_start = string_start + string_length;\n    string_length = string_length - (int)end;\n    while (end + string_length != NULL) {\n      end--;\n      string_start--;\n      *string_start = *end;\n    }\n    return;\n  }\n  string_start--;\n  for (; string_end != end; string_end++) {\n    string_start++;\n    *string_start = *string_end;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "reverse_string_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "initialize_program_08000990",
                "param_1": "user_input",
                "FUN_08000904": "call_print_welcome_message"
            },
            "code": "undefined4 initialize_program_08000990(undefined4 user_input)\n{\n  call_print_welcome_message();\n  return user_input;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": false,
            "current_name": "initialize_program_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "initialize_function_if_not_already_initialized_08000110",
                "param_1": "input_parameter",
                "*PTR_DAT_08000128": "*PTR_INITIALIZATION_FLAG",
                "DAT_0800012c": "DAT_INITIALIZATION_VALUE",
                "PTR_FUN_08000130": "PTR_INITIALIZATION_FUNCTION"
            },
            "code": "undefined* initialize_function_if_not_already_initialized_08000110(undefined* input_parameter){\\n  if (*PTR_DAT_08000128 == \"\\0\") {\\n    if (DAT_0800012c != 0) {\\n      input_parameter = PTR_FUN_08000130;\\n    }\\n    *PTR_DAT_08000128 = 1;\\n  }\\n  return input_parameter;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "initialize_function_if_not_already_initialized_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "return_zero_0800709e"
            },
            "code": "int return_zero_0800709e(void)\n{\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "return_zero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "puVar1": "result_ptr",
                "uVar2": "intermediate_result",
                "uVar3": "second_value",
                "uVar4": "first_value"
            },
            "code": "void calculate_result_08002ec0(void)\n{\n  float* result_ptr;\n  float second_value;\n  float first_value;\n  \n  result_ptr = PTR_DAT_08002ed0;\n  second_value = *(float*)(PTR_DAT_08002ecc + 4);\n  first_value = *(float*)(PTR_DAT_08002ed0 + 4);\n  float intermediate_result = FUNC_08000ad8(1.0f, first_value);\n  intermediate_result = FUNC_08000cec(intermediate_result, second_value);\n  float intermediate_result_2 = FUNC_08000cec(first_value, *(float*)result_ptr);\n  float final_result = FUNC_08000adc(intermediate_result_2, intermediate_result);\n  *(float*)result_ptr = final_result;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "send_message_to_server_08004434",
                "param_1": "server_address",
                "param_2": "message_length",
                "param_3": "message_data",
                "local_10": "local_variable_1",
                "local_c": "local_variable_2",
                "uStack_8": "local_variable_3"
            },
            "code": "void send_message_to_server_08004434(undefined4 server_address, uint16_t message_length, undefined4 message_data)\n{\n    undefined4 local_variable_1;\n    uint16_t local_variable_2;\n    undefined4 local_variable_3;\n    \n    local_variable_1 = *(undefined4 *)PTR_DAT_08004454;\n    local_variable_2 = message_length & 0xffff0000 | (uint16_t)*(ushort *)(PTR_DAT_08004454 + 4);\n    local_variable_3 = message_data;\n    \n    send_packet_to_server(0x6d, &local_variable_1, 6);\n    return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_message_to_server_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_1": "mantissa",
                "param_2": "exponent",
                "uVar1": "high",
                "uVar2": "mantissa_shifted",
                "uVar4": "count",
                "uVar5": "quotient",
                "uVar6": "quotient_bit",
                "uVar8": "divisor",
                "uVar9": "remainder_divisor",
                "uVar11": "dividend",
                "uVar12": "remainder_shift",
                "iVar3": "exponent_shift",
                "iVar7": "remainder",
                "iVar10": "sum",
                "uVar13": "result",
                "sign_bit": "sign_bit",
                "shifted_mantissa": "shifted_mantissa",
                "shifted_exponent": "shifted_exponent"
            },
            "code": "uint32_t calculate_float_08006c0c(uint32_t mantissa, uint32_t exponent)\n{\n    uint32_t sign_bit = 0;\n    uint32_t shifted_mantissa = mantissa;\n    uint32_t shifted_exponent = exponent;\n    if ((DAT_08006d60 & ~exponent) == 0)\n    {\n        uint64_t result = multiply_unsigned(shifted_mantissa, shifted_exponent);\n        result = divide_unsigned(result >> 32, result & 0xFFFFFFFF, shifted_mantissa, shifted_exponent);\n        return result;\n    }\n    if ((int32_t)exponent < 1)\n    {\n        if ((exponent & 0x7FFFFFFF | mantissa) == 0)\n        {\n            return CONCAT_32_32(exponent, mantissa);\n        }\n        if (exponent != 0)\n        {\n            uint64_t result = multiply_unsigned(shifted_mantissa, shifted_exponent);\n            uint32_t high = result >> 32;\n            result = add_unsigned(high, result & 0xFFFFFFFF, high, result & 0xFFFFFFFF);\n            return result;\n        }\n    }\n    int32_t exponent_shift = (int32_t)exponent >> 0x14;\n    if (exponent_shift == 0)\n    {\n        while (exponent == 0)\n        {\n            exponent_shift = exponent_shift + -0x15;\n            exponent = mantissa >> 0xB;\n            mantissa = mantissa << 0x15;\n        }\n        uint32_t count = 0;\n        for (; -1 < (int32_t)(exponent << 0xB); exponent = exponent << 1)\n        {\n            count = count + 1;\n        }\n        exponent_shift = exponent_shift - (count - 1);\n        exponent = exponent | mantissa >> (0x20 - count & 0xFF);\n        mantissa = mantissa << (count & 0xFF);\n    }\n    uint32_t mantissa_shifted = mantissa & 0xFFFFF | 0x100000;\n    if ((exponent_shift + -0x3FF) * -0x80000000 < 0)\n    {\n        mantissa_shifted = mantissa_shifted * 2 - ((int32_t)shifted_mantissa >> 0x1F);\n        shifted_mantissa = shifted_mantissa << 1;\n    }\n    mantissa_shifted = mantissa_shifted * 2 - ((int32_t)shifted_mantissa >> 0x1F);\n    uint32_t count = 0x16;\n    uint32_t quotient = 0;\n    uint32_t remainder = 0;\n    uint32_t divisor = 0x200000;\n    shifted_mantissa = shifted_mantissa << 1;\n    do\n    {\n        int32_t sum = remainder + divisor;\n        if (sum <= (int32_t)mantissa_shifted)\n        {\n            mantissa_shifted = mantissa_shifted - sum;\n            remainder = sum + divisor;\n            quotient = quotient + divisor;\n        }\n        count = count - 1;\n        mantissa_shifted = mantissa_shifted * 2 - ((int32_t)shifted_mantissa >> 0x1F);\n        divisor = divisor >> 1;\n        shifted_mantissa = shifted_mantissa << 1;\n    } while (count != 0);\n    uint32_t remainder_divisor = 0x80000000;\n    uint32_t remainder_quotient = quotient;\n    uint32_t remainder_shifted = remainder;\n    do\n    {\n        uint32_t dividend = remainder_divisor + remainder_quotient;\n        uint32_t quotient_bit = remainder_shifted;\n        if (((int32_t)remainder_shifted < (int32_t)mantissa_shifted) || ((mantissa_shifted == remainder_shifted) && (dividend <= shifted_mantissa)))\n        {\n            quotient_bit = remainder_shifted + remainder_divisor;\n            if (((int32_t)remainder_shifted < 0) && (-1 < (int32_t)quotient_bit))\n            {\n                quotient_bit = remainder_shifted + 1;\n            }\n            mantissa_shifted = mantissa_shifted - remainder_shifted;\n            if (shifted_mantissa < dividend)\n            {\n                mantissa_shifted = mantissa_shifted - 1;\n            }\n            shifted_mantissa = shifted_mantissa - dividend;\n            remainder_quotient = remainder_quotient + remainder_divisor;\n        }\n        mantissa_shifted = mantissa_shifted * 2 - ((int32_t)shifted_mantissa >> 0x1F);\n        remainder_shifted = remainder_shifted << 1;\n        remainder_divisor = remainder_divisor >> 1;\n    } while (remainder_divisor != 0);\n    if ((shifted_mantissa | mantissa_shifted) != 0)\n    {\n        if (quotient == 0xFFFFFFFF)\n        {\n            exponent_shift = exponent_shift + 1;\n            quotient = count;\n        }\n        else\n        {\n            quotient = quotient + 1 & 0xFFFFFFFE;\n        }\n    }\n    quotient = quotient >> 1;\n    if (exponent_shift << 0x1F < 0)\n    {\n        quotient = quotient | 0x80000000;\n    }\n    return CONCAT_32_32((exponent_shift >> 1) + 0x3FE00000 + (exponent_shift + -0x3FF >> 1) * 0x100000, quotient);\n}\n\nuint64_t multiply_unsigned(uint32_t a_high, uint32_t a_low, uint32_t b_high, uint32_t b_low)\n{\n    uint64_t a = ((uint64_t)a_high) << 32 | a_low;\n    uint64_t b = ((uint64_t)b_high) << 32 | b_low;\n    return a * b;\n}\n\nuint32_t divide_unsigned(uint32_t a_high, uint32_t a_low, uint32_t b_high, uint32_t b_low)\n{\n    uint64_t a = ((uint64_t)a_high) << 32 | a_low;\n    uint64_t b = ((uint64_t)b_high) << 32 | b_low;\n    return a / b;\n}\n\nuint64_t add_unsigned(uint32_t a_high, uint32_t a_low, uint32_t b_high, uint32_t b_low)\n{\n    uint64_t a = ((uint64_t)a_high) << 32 | a_low;\n    uint64_t b = ((uint64_t)b_high) << 32 | b_low;\n    return a + b;\n}",
            "called": [
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_float_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "calculate_stats_and_update_0800426c",
                "param_1": "first_parameter",
                "param_2": "second_parameter",
                "param_3": "third_parameter",
                "param_4": "fourth_parameter",
                "puVar1": "pointer_1",
                "puVar2": "pointer_2",
                "uVar3": "first_calculation",
                "uVar4": "second_calculation",
                "uVar5": "third_calculation",
                "uVar6": "first_value",
                "uVar7": "second_value",
                "uVar8": "third_value",
                "uVar9": "fourth_value",
                "PTR_DAT_08004264": "data_ptr",
                "PTR_DAT_08004268": "ptr"
            },
            "code": "void calculate_stats_and_update_0800426c(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n{\n  uint32_t first_calculation = FUNC_08000ad8();\n  uint32_t second_calculation = FUNC_08000adc(param_1, param_2);\n  uint32_t third_calculation = FUNC_08000ad8(first_calculation, param_3);\n  third_calculation = FUNC_08000adc(third_calculation, param_4);\n  FUNC_08000ad8(third_calculation, PTR_DAT_080042fc);\n  uint32_t first_value = FUN_08001078();\n  uint32_t fourth_calculation = FUNC_08000ad8(second_calculation, param_3);\n  fourth_calculation = FUNC_08000ad8(fourth_calculation, param_4);\n  FUNC_08000ad8(fourth_calculation, PTR_DAT_080042fc);\n  uint32_t second_value = FUN_08001078();\n  first_calculation = FUNC_08000adc(first_calculation, param_3);\n  first_calculation = FUNC_08000ad8(first_calculation, param_4);\n  FUNC_08000ad8(first_calculation, PTR_DAT_080042fc);\n  uint32_t third_value = FUN_08001078();\n  first_calculation = FUNC_08000adc(param_3, second_calculation);\n  first_calculation = FUNC_08000adc(first_calculation, param_4);\n  FUNC_08000ad8(first_calculation, PTR_DAT_080042fc);\n  uint32_t fourth_value = FUN_08001078();\n  uint32_t *PTR_DAT_08004264 = PTR_DAT_08004264;\n  if (999 < (int32_t)fourth_value) {\n    fourth_value = 1000;\n  }\n  if (999 < (int32_t)third_value) {\n    third_value = 1000;\n  }\n  if (999 < (int32_t)second_value) {\n    second_value = 1000;\n  }\n  if (999 < (int32_t)first_value) {\n    first_value = 1000;\n  }\n  *(uint32_t *)(PTR_DAT_08004264 + 8) = second_value & ~((int32_t)second_value >> 0x1f);\n  *(uint32_t *)(PTR_DAT_08004264 + 0xc) = first_value & ~((int32_t)first_value >> 0x1f);\n  *(uint32_t *)(PTR_DAT_08004264 + 4) = third_value & ~((int32_t)third_value >> 0x1f);\n  *(uint32_t *)PTR_DAT_08004264 = fourth_value & ~((int32_t)fourth_value >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(*(uint32_t *)(PTR_DAT_08004264 + 4));\n  FUN_08003fdc(*(uint32_t *)(PTR_DAT_08004264 + 8));\n  FUN_08003fe8(*(uint32_t *)(PTR_DAT_08004264 + 0xc));\n  uint16_t *PTR_DAT_08004268 = PTR_DAT_08004268;\n  *(uint16_t *)PTR_DAT_08004268 = (uint16_t)*(uint32_t *)PTR_DAT_08004264 + 1000;\n  *(uint16_t *)(PTR_DAT_08004268 + 2) = (uint16_t)*(uint32_t *)(PTR_DAT_08004264 + 4) + 1000;\n  *(uint16_t *)(PTR_DAT_08004268 + 4) = (uint16_t)*(uint32_t *)(PTR_DAT_08004264 + 8) + 1000;\n  *(uint16_t *)(PTR_DAT_08004268 + 6) = (uint16_t)*(uint32_t *)(PTR_DAT_08004264 + 0xc) + 1000;\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08001078",
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_stats_and_update_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "set_flag_08002538",
                "param_1": "pointer_to_pointer",
                "param_2": "flag_value",
                "puVar1": "DAT_08002560_PTR",
                "puVar2": "pointer"
            },
            "code": "int set_flag_08002538(uint **pointer_to_pointer, int flag_value){\n                      uint *pointer = *pointer_to_pointer;\n                      uint *DAT_08002560_PTR = DAT_08002560;\n                      \n                      FUN_08002520(*pointer_to_pointer,flag_value,1);\n                      \n                      if (pointer == DAT_08002560_PTR) {\n                        DAT_08002560_PTR = (uint *)(pointer[0x11] | 0x8000);\n                      }\n                      \n                      if (pointer == DAT_08002560_PTR) {\n                        pointer[0x11] = (uint)DAT_08002560_PTR;\n                      }\n                      \n                      *pointer = *pointer | 1;\n                      \n                      return 0;\n                    }",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "set_flag_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "write_i2c_data_to_memory_080040e8",
                "param_1": "memory_address",
                "param_2": "data_offset",
                "param_3": "data_size",
                "param_4": "i2c_address",
                "puVar1": "i2c_data_buffer",
                "uVar2": "data",
                "iVar3": "i",
                "puVar4": "memory_location",
                "iVar5": "i2c_data_buffer_size"
            },
            "code": "void write_i2c_data_to_memory_080040e8(void *memory_address, int data_offset, int data_size, int i2c_address)\n{\n  unsigned char *memory_location = (unsigned char *)(data_offset + memory_address - 1);\n  int i;\n  for (i = 0; i < data_size; i++) {\n    unsigned char data = read_i2c_data(i2c_address, (data_offset + i) & 0xFFFF, i2c_data_buffer, 0x4C, i2c_data_buffer_size);\n    memory_location++;\n    *memory_location = data;\n  }\n  return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002d88",
                "FUN_08002bf0",
                "FUN_08003298",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "write_i2c_data_to_memory_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "clear_string_and_fill_with_input_08004ffc",
                "param_1": "string",
                "param_2": "input_length",
                "param_3": "max_string_length",
                "param_4": "a",
                "local_78": "string_pointer",
                "local_70": "max_input_length",
                "local_6c": "max_string_input_length",
                "local_6a": "input_length_limit",
                "local_68": "string_start",
                "local_64": "a_copy",
                "uStack_c": "b_copy",
                "uStack_8": "unused",
                "uStack_4": "unused"
            },
            "code": "void clear_string_and_fill_with_input_08004ffc(char *string, int input_length, int max_string_length, int a, int b)\n{\n  char *string_pointer[2];\n  int max_input_length = 0x7fffffff;\n  int max_string_input_length = 0x7fffffff;\n  int input_length_limit = 0xffff;\n  string_pointer[0] = string;\n  char *string_start = string;\n  int a_copy = a;\n  int b_copy = b;\n  int unused;\n  fill_input_buffer(*(int **)PTR_PTR_DAT_08005040, string_pointer, a_copy);\n  *string_pointer[0] = 0;\n  return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "clear_string_and_fill_with_input_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_pointer_value_0800115c",
                "PTR_DAT_08001164": "PTR_DATA"
            },
            "code": "uint32_t get_pointer_value_0800115c(void)\n{\n  uint32_t* pointer = (uint32_t*)PTR_DAT_08001164;\n  return *pointer;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_0800209c",
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08004c18",
                "FUN_08001938",
                "FUN_080016f4",
                "FUN_08001b58",
                "FUN_08001828",
                "thunk_FUN_0800115c"
            ],
            "imported": false,
            "current_name": "get_pointer_value_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "process_sensor_data_08002d88",
                "param_1": "sensor_data_1",
                "param_2": "sensor_data_2",
                "param_3": "sensor_data_3",
                "param_4": "sensor_data_4",
                "sVar1": "sensor_reading_1",
                "sVar2": "sensor_reading_2",
                "puVar3": "sensor_data_ptr_1",
                "puVar4": "sensor_data_ptr_2",
                "puVar5": "sensor_data_ptr_3",
                "puVar6": "sensor_data_ptr_4",
                "iVar7": "function_return_value",
                "uVar8": "var_8",
                "uVar9": "var_c",
                "local_28": "local_var_28",
                "uStack_26": "var_26",
                "uStack_25": "var_25",
                "local_24": "local_var_24",
                "local_23": "local_var_23",
                "local_22": "local_var_22",
                "uStack_21": "var_21"
            },
            "code": "void process_sensor_data_08002d88(int sensor_data_1, int sensor_data_2, int sensor_data_3, int sensor_data_4)\n{\n  short sensor_reading_1;\n  short sensor_reading_2;\n  undefined *sensor_data_ptr_1;\n  undefined *sensor_data_ptr_2;\n  undefined *sensor_data_ptr_3;\n  undefined *sensor_data_ptr_4;\n  int function_return_value;\n  undefined4 var_8;\n  undefined4 var_c;\n  undefined2 local_var_28;\n  undefined var_26;\n  undefined var_25;\n  undefined local_var_24;\n  undefined local_var_23;\n  byte local_var_22;\n  undefined var_21;\n  \n  sensor_data_ptr_1 = PTR_s____Src_MPU9250_c_08002e80;\n  var_21 = (undefined)((uint)sensor_data_4 >> 0x18);\n  local_var_28 = 0;\n  var_26 = 0;\n  var_25 = 0;\n  local_var_24 = 0;\n  local_var_23 = 0;\n  local_var_22 = 0;\n  function_return_value = FUN_0800407c(0x18,2,PTR_s____Src_MPU9250_c_08002e80,0xd7,sensor_data_1,sensor_data_2);\n  if (function_return_value << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&local_var_28,7,sensor_data_ptr_1,0xda);\n    sensor_data_ptr_1 = PTR_DAT_08002e84;\n    if ((int)((uint)local_var_22 << 0x1c) < 0) {\n      *(short *)(PTR_DAT_08002e94 + 2) = *(short *)(PTR_DAT_08002e94 + 2) + 1;\n    }\n    else {\n      sensor_reading_1 = CONCAT11(var_25,var_26);\n      sensor_reading_2 = CONCAT11(local_var_23,local_var_24);\n      *(undefined2 *)PTR_DAT_08002e84 = local_var_28;\n      *(short *)(sensor_data_ptr_1 + 2) = sensor_reading_1;\n      *(short *)(sensor_data_ptr_1 + 4) = sensor_reading_2;\n      sensor_data_ptr_4 = PTR_DAT_08002e9c;\n      sensor_data_ptr_3 = PTR_DAT_08002e98;\n      var_c = *(undefined4 *)PTR_DAT_08002e88;\n      var_8 = FUN_08000c44();\n      var_8 = FUNC_08000cec(var_8,var_c);\n      var_8 = FUNC_08000cec(var_8,*(undefined4 *)sensor_data_ptr_3);\n      var_8 = FUNC_08000ad8(var_8,*(undefined4 *)sensor_data_ptr_4);\n      var_8 = FUNC_08000cec(var_8,*(undefined4 *)PTR_DAT_08002e8c);\n      sensor_data_ptr_2 = PTR_DAT_08002e90;\n      *(undefined4 *)PTR_DAT_08002e90 = var_8;\n      var_8 = FUN_08000c44((int)sensor_reading_1);\n      var_8 = FUNC_08000cec(var_8,var_c);\n      var_8 = FUNC_08000cec(var_8,*(undefined4 *)(sensor_data_ptr_3 + 4));\n      var_8 = FUNC_08000ad8(var_8,*(undefined4 *)(sensor_data_ptr_4 + 4));\n      var_8 = FUNC_08000cec(var_8,*(undefined4 *)(PTR_DAT_08002e8c + 4));\n      *(undefined4 *)(sensor_data_ptr_2 + 4) = var_8;\n      var_8 = FUN_08000c44((int)sensor_reading_2);\n      var_8 = FUNC_08000cec(var_8,var_c);\n      var_8 = FUNC_08000cec(var_8,*(undefined4 *)(sensor_data_ptr_3 + 8));\n      var_8 = FUNC_08000ad8(var_8,*(undefined4 *)(sensor_data_ptr_4 + 8));\n      var_8 = FUNC_08000cec(var_8,*(undefined4 *)(PTR_DAT_08002e8c + 8));\n      *(undefined4 *)(sensor_data_ptr_2 + 8) = var_8;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "calculate_hash_08000c44",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift",
                "iVar4": "hash",
                "uVar3": "sign_bit",
                "uVar5": "mask"
            },
            "code": "uint calculate_hash_08000c44(uint input)\n{\n    int leading_zeroes;\n    uint sign_bit;\n    uint mask;\n    int shift;\n    uint hash;\n    \n    sign_bit = input & 0x80000000;\n    if ((int)sign_bit < 0) {\n        input = -input;\n    }\n    if (input == 0) {\n        return 0;\n    }\n    leading_zeroes = count_leading_zeroes(input);\n    shift = leading_zeroes - 8;\n    mask = 0 << (shift & 0xff);\n    hash = ((sign_bit | 0x4b000000) - 0x800000) + shift * -0x800000;\n    if (leading_zeroes > 7) {\n        hash += (input << (shift & 0xff)) + (0U >> (0x20 - shift & 0xff)) + (uint)(0x7fffffff < mask);\n        if (mask == 0x80000000) {\n            hash = hash & 0xfffffffe;\n        }\n        return hash;\n    }\n    mask = input << (leading_zeroes + 0x18U & 0xff);\n    hash += ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)mask >> 0x1f));\n    if ((mask & 0x7fffffff) == 0) {\n        hash = hash & ~(mask >> 0x1f);\n    }\n    return hash;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_0800411c",
                "FUN_08002bf0",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_valid_input_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08000a04(uint32_t input1, int32_t input2, uint32_t input3, int32_t input4) {\n                        if (((input2 << 1) >> 0x15 != -1 || ((input1 | input2 << 0xc) == 0)) && \n                            ((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n                            return 0;\n                        }\n                        return 1;\n                    }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_data_080025e8",
                "param_1": "data",
                "iVar1": "func1",
                "iVar2": "func2",
                "uVar3": "data_3",
                "iVar4": "func3",
                "iVar5": "func4",
                "iVar6": "data_ptr",
                "data_4": "data_4",
                "data_5": "data_5",
                "data_c": "data_c",
                "data_14": "data_14",
                "data_10": "data_10",
                "PTR_DAT_08002720": "PTR_DAT_08002720",
                "func1": "func1",
                "func2": "func2",
                "func3": "func3",
                "func4": "func4",
                "func5": "func5",
                "func6": "func6",
                "func7": "func7",
                "func8": "func8",
                "func9": "func9",
                "func10": "func10",
                "func11": "func11",
                "func12": "func12",
                "func13": "func13",
                "func14": "func14",
                "func15": "func15",
                "func16": "func16",
                "func17": "func17",
                "func18": "func18",
                "func19": "func19",
                "func20": "func20"
            },
            "code": "void update_data_080025e8(int *data)\n{\n  int data_ptr = *data;\n  uint data_4 = data[4];\n  uint data_3 = data[3];\n  uint data_2 = data[2];\n  uint data_5 = data[5];\n  uint data_c = *(uint *)(data_ptr + 0xc);\n  uint data_14 = *(uint *)(data_ptr + 0x14);\n  uint data_10 = *(uint *)(data_ptr + 0x10);\n  uint data_8;\n  if (data_ptr == PTR_DAT_08002720) {\n    int func1 = get_value_from_function1();\n    int func2 = get_value_from_function2();\n    int func3 = get_value_from_function3();\n    int func4 = get_value_from_function4();\n    int func5 = get_value_from_function5();\n    int func6 = get_value_from_function6();\n    int func7 = get_value_from_function7();\n    int func8 = get_value_from_function8();\n    int func9 = get_value_from_function9();\n    int func10 = get_value_from_function10();\n    int func11 = get_value_from_function11();\n    int func12 = get_value_from_function12();\n    int func13 = get_value_from_function13();\n    int func14 = get_value_from_function14();\n    int func15 = get_value_from_function15();\n    int func16 = get_value_from_function16();\n    int func17 = get_value_from_function17();\n    int func18 = get_value_from_function18();\n    int func19 = get_value_from_function19();\n    int func20 = get_value_from_function20();\n    data_8 = (((func1 * 25 / (data[1] * 4)) / 100 + (func2 * 25 / (data[1] * 4)) / 100 + (func3 * 25 / (data[1] * 4)) / 100 + (func4 * 25 / (data[1] * 4)) / 100 + (func5 * 25 / (data[1] * 4)) / 100 + (func6 * 25 / (data[1] * 4)) / 100 + (func7 * 25 / (data[1] * 4)) / 100 + (func8 * 25 / (data[1] * 4)) / 100 + (func9 * 25 / (data[1] * 4)) / 100 + (func10 * 25 / (data[1] * 4)) / 100 + (func11 * 25 / (data[1] * 4)) / 100 + (func12 * 25 / (data[1] * 4)) / 100 + (func13 * 25 / (data[1] * 4)) / 100 + (func14 * 25 / (data[1] * 4)) / 100 + (func15 * 25 / (data[1] * 4)) / 100 + (func16 * 25 / (data[1] * 4)) / 100 + (func17 * 25 / (data[1] * 4)) / 100 + (func18 * 25 / (data[1] * 4)) / 100 + (func19 * 25 / (data[1] * 4)) / 100 + (func20 * 25 / (data[1] * 4)) / 100) * -16 + 50) / 100 & 0xf | ((func1 * 25 / (data[1] * 4)) / 100 * -16 + 50) / 100 & 0xf0) + (func1 * 25 / (data[1] * 4)) / 100 * 16;\n  } else {\n    int func1 = get_value_from_function1();\n    int func2 = get_value_from_function2();\n    int func3 = get_value_from_function3();\n    int func4 = get_value_from_function4();\n    int func5 = get_value_from_function5();\n    int func6 = get_value_from_function6();\n    int func7 = get_value_from_function7();\n    int func8 = get_value_from_function8();\n    int func9 = get_value_from_function9();\n    int func10 = get_value_from_function10();\n    int func11 = get_value_from_function11();\n    int func12 = get_value_from_function12();\n    int func13 = get_value_from_function13();\n    int func14 = get_value_from_function14();\n    int func15 = get_value_from_function15();\n    int func16 = get_value_from_function16();\n    int func17 = get_value_from_function17();\n    int func18 = get_value_from_function18();\n    int func19 = get_value_from_function19();\n    int func20 = get_value_from_function20();\n    data_8 = (((func1 * 25 / (data[1] * 4)) / 100 + (func2 * 25 / (data[1] * 4)) / 100 + (func3 * 25 / (data[1] * 4)) / 100 + (func4 * 25 / (data[1] * 4)) / 100 + (func5 * 25 / (data[1] * 4)) / 100 + (func6 * 25 / (data[1] * 4)) / 100 + (func7 * 25 / (data[1] * 4)) / 100 + (func8 * 25 / (data[1] * 4)) / 100 + (func9 * 25 / (data[1] * 4)) / 100 + (func10 * 25 / (data[1] * 4)) / 100 + (func11 * 25 / (data[1] * 4)) / 100 + (func12 * 25 / (data[1] * 4)) / 100 + (func13 * 25 / (data[1] * 4)) / 100 + (func14 * 25 / (data[1] * 4)) / 100 + (func15 * 25 / (data[1] * 4)) / 100 + (func16 * 25 / (data[1] * 4)) / 100 + (func17 * 25 / (data[1] * 4)) / 100 + (func18 * 25 / (data[1] * 4)) / 100 + (func19 * 25 / (data[1] * 4)) / 100 + (func20 * 25 / (data[1] * 4)) / 100) * -16 + 50) / 100 & 0xf | ((func1 * 25 / (data[1] * 4)) / 100 * -16 + 50) / 100 & 0xf0) + (func1 * 25 / (data[1] * 4)) / 100 * 16;\n  }\n  *(uint *)(data_ptr + 8) = data_8;\n  *(uint *)(data_ptr + 0xc) = data_c & 0xffffe9f3 | data_2 | data_4 | data_5;\n  *(uint *)(data_ptr + 0x10) = data_10 & 0xffffcfff | data_3;\n  *(uint *)(data_ptr + 0x14) = data_14 & 0xfffffcff | data[6];\n}\n",
            "called": [
                "FUN_08002250",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_data_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "initialize_mpu9250_registers_08002b48",
                "in_r3": "high_bits_mask",
                "local_18": "temperature_sensor_data",
                "local_14": "gyro_x_data",
                "PTR_s____Src_MPU9250_c_08002be4": "gyro_y_data",
                "PTR_DAT_08002be8": "temperature_gyro_data_pointer",
                "PTR_DAT_08002bec": "scaled_gyro_accel_data_pointer",
                "uVar2": "scale_factor_applied_data",
                "FUN_08000c44": "apply_scale_factor",
                "FUNC_08000cec": "apply_float_factor"
            },
            "code": "void initialize_mpu9250_registers_08002b48(void)\n{\n  uint16_t high_bits_mask = 0xffff0000;\n  uint16_t low_bits_mask = 0x0000ffff;\n  uint16_t temperature_sensor_register_address = 0xd0;\n  uint16_t power_management_1_register_address = 0x3b;\n  float gyro_scale_factor = 0x40800000;\n  float accel_scale_factor = 0x38000000;\n  uint16_t temperature_sensor_data;\n  uint16_t gyro_x_data;\n  uint16_t PTR_s____Src_MPU9250_c_08002be4;\n  uint16_t gyro_z_data;\n  uint16_t accel_x_data;\n  uint16_t accel_y_data;\n  uint16_t accel_z_data;\n  initialize_registers(temperature_sensor_register_address, power_management_1_register_address, &temperature_sensor_data, 6, &gyro_x_data, 0x58);\n  *(uint16_t*)PTR_DAT_08002be8 = (uint16_t)temperature_sensor_data;\n  *(uint16_t*)(PTR_DAT_08002be8 + 2) = gyro_x_data;\n  *(uint16_t*)(PTR_DAT_08002be8 + 4) = high_bits_mask;\n  gyro_x_data = apply_scale_factor(gyro_x_data, gyro_scale_factor);\n  PTR_s____Src_MPU9250_c_08002be4 = apply_scale_factor(PTR_s____Src_MPU9250_c_08002be4, gyro_scale_factor);\n  gyro_z_data = apply_scale_factor(gyro_z_data, gyro_scale_factor);\n  accel_x_data = apply_scale_factor(accel_x_data, accel_scale_factor);\n  accel_y_data = apply_scale_factor(accel_y_data, accel_scale_factor);\n  accel_z_data = apply_scale_factor(accel_z_data, accel_scale_factor);\n  *(float*)PTR_DAT_08002bec = gyro_x_data;\n  *(float*)(PTR_DAT_08002bec + 4) = PTR_s____Src_MPU9250_c_08002be4;\n  *(float*)(PTR_DAT_08002bec + 8) = gyro_z_data;\n  *(float*)(PTR_DAT_08002bec + 12) = accel_x_data;\n  *(float*)(PTR_DAT_08002bec + 16) = accel_y_data;\n  *(float*)(PTR_DAT_08002bec + 20) = accel_z_data;\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "initialize_mpu9250_registers_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "initialize_data_and_call_functions_08004f68",
                "iVar1": "data_index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_08004fa8": "data_ptr_start",
                "PTR_DAT_08004fac": "data_ptr_end",
                "PTR_DAT_08004fa0": "data_start",
                "PTR_DAT_08004fa4": "data_end",
                "DAT_08004f9c": "source_data",
                "FUN_08004f10": "initialize_first_function",
                "FUN_08004fb4": "initialize_second_function",
                "FUN_080041ae": "call_function_from_jump_table"
            },
            "code": "void initialize_data_and_call_functions_08004f68(void)\n{\n  int data_index;\n  undefined4 *data_ptr;\n  code *jump_table;\n  for (data_index = 0; PTR_DAT_08004fa0 + data_index < PTR_DAT_08004fa4; data_index += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + data_index) = *(undefined4 *)(DAT_08004f9c + data_index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_08004fa8; data_ptr < PTR_DAT_08004fac; data_ptr++) {\n    *data_ptr = 0;\n  }\n  initialize_first_function();\n  initialize_second_function();\n  jump_table = (code *)0x8004f9a;\n  call_function_from_jump_table();\n}\n",
            "called": [
                "FUN_08004fb4",
                "FUN_080041ae",
                "FUN_08004f10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "initialize_data_and_call_functions_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "set_display_mode_08001170",
                "param_1": "display_mode",
                "PTR_DAT_08001190": "display_mode_ptr",
                "DAT_08001190": "display_mode_ptr",
                "current_display_mode": "current_display_mode",
                "mask": "mask",
                "new_display_mode": "new_display_mode"
            },
            "code": "void set_display_mode_08001170(uint display_mode) {\n  uint* PTR_DAT_08001190 = (uint*)(DAT_08001190 + 0xc);\n  uint current_display_mode = *PTR_DAT_08001190;\n  uint mask = 0xf8ff;\n  uint new_display_mode = (display_mode & 7) << 8;\n  *PTR_DAT_08001190 = (current_display_mode & mask) | 0x5fa0000 | new_display_mode;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_display_mode_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "read_MPU9250_data_08002bf0",
                "puVar1": "data_ptr",
                "puVar2": "reg_ptr",
                "uVar3": "acc_gyro_temp_data",
                "local_20": "acc_data",
                "local_1c": "gyro_data",
                "PTR_s____Src_MPU9250_c_08002c9c": "MPU9250_ADDRESS",
                "PTR_DAT_08002ca0": "temp_data",
                "DAT_08002ca8": "temp_adjust",
                "PTR_DAT_08002ca4": "mag_data",
                "PTR_DAT_08002cac": "mag_adjust",
                "FUN_08000c44": "i2c_write",
                "FUNC_08000cec": "i2c_read",
                "FUNC_08000ad8": "i2c_write"
            },
            "code": "void read_MPU9250_data_08002bf0(void)\n{\n  uint8_t *data_ptr;\n  uint8_t *reg_ptr;\n  uint32_t acc_gyro_PTR_DAT_08002ca0;\n  uint32_t PTR_DAT_08002ca4;\n  uint32_t PTR_DAT_08002ca0;\n  uint16_t acc_data[3];\n  uint16_t gyro_data[3];\n  uint16_t PTR_DAT_08002cac[3] = {0, 0, 0};\n  uint16_t DAT_08002ca8;\n  uint16_t i;\n  reg_ptr = (uint8_t*)0xD0;\n  data_ptr = (uint8_t*)0x43;\n  i2c_write(reg_ptr, 1, data_ptr, 6, PTR_s____Src_MPU9250_c_08002c9c, 0x7B);\n  data_ptr = (uint8_t*)0x3B;\n  i2c_read(reg_ptr, 1, data_ptr, 14, PTR_s____Src_MPU9250_c_08002c9c, 0x7B);\n  for(i = 0; i < 3; i++)\n  {\n    acc_data[i] = (data_ptr[2*i] << 8) | data_ptr[2*i+1];\n    gyro_data[i] = (data_ptr[8+2*i] << 8) | data_ptr[8+2*i+1];\n  }\n  PTR_DAT_08002ca0 = (data_ptr[6] << 8) | data_ptr[7];\n  DAT_08002ca8 = ((PTR_DAT_08002ca0 - 21) * 333.87) / 1000.0 + 21;\n  acc_gyro_PTR_DAT_08002ca0 = ((uint32_t)acc_data[0] << 24) | ((uint32_t)acc_data[1] << 8) | ((uint32_t)acc_data[2] << 8) | ((uint32_t)gyro_data[0] << 8) | ((uint32_t)gyro_data[1] << 8) | ((uint32_t)gyro_data[2] << 8) | ((uint32_t)DAT_08002ca8 << 8);\n  data_ptr = (uint8_t*)0x03;\n  i2c_write(reg_ptr, 1, data_ptr, 1, AK8963_ADDRESS, 0x7B);\n  data_ptr = (uint8_t*)0x03;\n  i2c_read(reg_ptr, 1, data_ptr, 7, AK8963_ADDRESS, 0x7B);\n  for(i = 0; i < 3; i++)\n  {\n    PTR_DAT_08002cac[i] = (data_ptr[2*i+1] << 8) | data_ptr[2*i];\n  }\n  PTR_DAT_08002ca4 = ((uint32_t)PTR_DAT_08002cac[0] << 16) | ((uint32_t)PTR_DAT_08002cac[1] << 16) | ((uint32_t)PTR_DAT_08002cac[2] << 16);\n  acc_gyro_PTR_DAT_08002ca0 |= PTR_DAT_08002ca4;\n  data_ptr = (uint8_t*)0x00;\n  i2c_write(reg_ptr, 1, data_ptr, 1, AK8963_ADDRESS, 0x7B);\n  return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "read_MPU9250_data_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "initialize_MPU9250_08002ad0",
                "PTR_s____Src_MPU9250_c_08002b44": "MPU9250_register_address",
                "set_register": "set_register",
                "0xd0": "device_address",
                "0x75": "register_address",
                "0x6b": "register_address",
                "0x80": "register_value",
                "0x6c": "register_address",
                "0x19": "register_address",
                "0x1d": "register_address",
                "0x1a": "register_address",
                "0x1b": "register_address",
                "0x1c": "register_address"
            },
            "code": "void initialize_MPU9250_08002ad0(void)\n{\n  set_register(0xd0,0x75,PTR_s____Src_MPU9250_c_08002b44,0x3b);\n  set_register(0xd0,0x6b,0x80,1);\n  set_register(0xd0,0x6b,1);\n  set_register(0xd0,0x6c,0,1);\n  set_register(0xd0,0x19,0,1);\n  set_register(0xd0,0x1d,3,1);\n  set_register(0xd0,0x1a,3,1);\n  set_register(0xd0,0x1b,0x10,1);\n  set_register(0xd0,0x1c,8,1);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "initialize_MPU9250_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "should_execute_function_08001050",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag",
                "FUN_08000ffc": "execute_startup_routine"
            },
            "code": "bool should_execute_function_08001050(void)\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  execute_startup_routine();\n  return !(bool)carry_flag || (bool)zero_flag;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "should_execute_function_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "check_if_not_carry_or_zero_080009c8",
                "in_CY": "is_carry",
                "in_ZR": "is_zero",
                "FUN_08000990": "check_carry"
            },
            "code": "bool check_if_not_carry_or_zero_080009c8(void)\n{\n  bool is_carry = check_carry();\n  bool is_zero = check_zero();\n  return !is_carry || is_zero;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "check_if_not_carry_or_zero_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_result_08002ed4",
                "puVar1": "result_pointer",
                "uVar2": "first_value",
                "uVar3": "third_value",
                "uVar4": "fourth_value"
            },
            "code": "void calculate_result_08002ed4(void)\n{\n  undefined *result_pointer;\n  undefined4 second_value;\n  undefined4 third_value;\n  undefined4 fourth_value;\n  \n  result_pointer = PTR_DAT_08002ee4;\n  third_value = *(undefined4 *)PTR_DAT_08002ee0;\n  fourth_value = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n  undefined4 first_value = FUNC_08000ad8(0x3f800000,fourth_value);\n  first_value = FUNC_08000cec(first_value,third_value);\n  third_value = FUNC_08000cec(fourth_value,*(undefined4 *)result_pointer);\n  first_value = FUNC_08000adc(third_value,first_value);\n  *(undefined4 *)result_pointer = first_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "check_overflow_08000f9c",
                "param_1": "a",
                "param_2": "b",
                "uVar2": "a_times_two",
                "uVar3": "b_times_two",
                "uVar4": "a_or_b",
                "bVar5": "a_or_b_is_zero",
                "bVar1": "overflow_detected"
            },
            "code": "uint check_overflow_08000f9c(uint a, uint b)\n{\n  bool overflow_detected;\n  uint a_times_two = a * 2;\n  uint b_times_two = b * 2;\n  if (((int)a_times_two >> 0x18 == -1 || (int)b_times_two >> 0x18 == -1) && ((((int)a_times_two >> 0x18 == -1 && ((a & 0x7fffff) != 0)) || (((int)b_times_two >> 0x18 == -1 && ((b & 0x7fffff) != 0))))){\n    return 1;\n  }\n  uint a_or_b = a_times_two | b & 0x7fffffff;\n  bool a_or_b_is_zero = a_or_b == 0;\n  if (!a_or_b_is_zero) {\n    a_or_b = a ^ b;\n    a_or_b_is_zero = a_or_b == 0;\n  }\n  overflow_detected = -1 < (int)a_or_b;\n  if (overflow_detected) {\n    a = a_times_two + b * -2;\n    a_or_b_is_zero = a == 0;\n  }\n  if (overflow_detected && b_times_two <= a_times_two && !a_or_b_is_zero) {\n    a = (int)b >> 0x1f;\n  }\n  if (!overflow_detected || b_times_two > a_times_two) {\n    a = ~((int)b >> 0x1f);\n  }\n  if (!a_or_b_is_zero) {\n    a |= 1;\n  }\n  return a;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "check_overflow_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = FUN_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = FUN_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = FUN_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000404",
                "FUN_080009c8",
                "FUN_080071c0",
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "mask",
                "shifted_input": "shifted_input",
                "shifted_mask": "shifted_mask",
                "result": "result"
            },
            "code": "uint calculate_hash_08000c3c(uint input)\n{\n    if (input == 0) {\n        return 0;\n    }\n    int leading_zeroes = count_leading_zeroes(input);\n    int shift_amount = leading_zeroes - 8;\n    int multiplier = shift_amount * -0x800000 + 0x4a800000;\n    if (leading_zeroes > 7) {\n        uint mask = 0 << (shift_amount & 0xff);\n        uint shifted_input = input << (shift_amount & 0xff);\n        uint shifted_mask = 0U >> (0x20 - shift_amount & 0xff);\n        uint result = multiplier + shifted_input + shifted_mask + (uint)(0x7fffffff < mask);\n        if (mask == 0x80000000) {\n            result = result & 0xfffffffe;\n        }\n        return result;\n    }\n    uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n    uint shifted_mask = ((int)shifted_input >> 0x1f);\n    uint result = multiplier + ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - shifted_mask);\n    if ((shifted_input & 0x7fffffff) == 0) {\n        result = result & ~(shifted_input >> 0x1f);\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "copy_data_and_send_080043bc",
                "uVar1": "data_1",
                "uVar2": "data_2",
                "puVar3": "data_ptr_1",
                "puVar4": "data_ptr_2",
                "local_24": "data_array",
                "local_1c": "data_array_2"
            },
            "code": "void copy_data_and_send_080043bc() {\n    undefined4 data_1;\n    undefined4 data_2;\n    undefined4 *data_ptr_1;\n    undefined4 *data_ptr_2;\n    undefined4 data_array[2];\n    undefined2 data_array_2[6];\n\n    data_ptr_1 = data_array;\n    data_ptr_2 = (undefined4 *)data_ptr_constant;\n    do {\n        data_1 = *data_ptr_2;\n        data_2 = data_ptr_2[1];\n        data_ptr_2 = data_ptr_2 + 2;\n        *data_ptr_1 = data_1;\n        data_ptr_1[1] = data_2;\n        data_ptr_1 = data_ptr_1 + 2;\n    } while (data_ptr_2 != (undefined4 *)(data_ptr_constant + 0x10));\n    *(undefined2 *)data_ptr_1 = *(undefined2 *)data_ptr_2;\n    send_data(0x66, data_array, 0x12);\n    return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_data_and_send_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "validate_input_08001214",
                "param_1": "input_value",
                "puVar1": "input_ptr",
                "iVar2": "input_data"
            },
            "code": "int validate_input_08001214(unsigned int input_value)\n{\n  unsigned int *input_ptr = DAT_08001238;\n  int input_data = DAT_0800123c;\n  if (input_value - 1U < 0x1000000) {\n    input_ptr[1] = input_value - 1U;\n    *(unsigned char *)(input_data + 0x23) = 0xf0;\n    input_ptr[2] = 0;\n    *input_ptr = 7;\n    return 0;\n  }\n  return 1;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "validate_input_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_parameter_in_global_memory_08003fc4",
                "param_1": "value",
                "PTR_DAT_08003fcc": "global_memory_pointer"
            },
            "code": "void set_parameter_in_global_memory_08003fc4(int value) {\n  int* PTR_DAT_08003fcc = *(int *)PTR_DAT_08003fcc;\n  int offset = 0x40;\n  *(int *)(PTR_DAT_08003fcc + offset) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_parameter_in_global_memory_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "calculate_shifted_value_08000404",
                "param_1": "value",
                "uVar1": "result_high",
                "uVar2": "abs_value",
                "uVar3": "shift_distance",
                "iVar4": "leading_zeroes_count",
                "uVar5": "shift_distance_overflow",
                "uVar6": "is_negative",
                "in_r12": "unused",
                "bVar7": "should_shift_right",
                "bVar8": "shift_distance_is_zero",
                "bVar9": "should_shift_left"
            },
            "code": "ulonglong calculate_shifted_value_08000404(uint num) {\n    ulonglong count = 0;\n    while (num != 0) {\n        count++;\n        num >>= 1;\n    }\n    return 32 - count;\n}\n\n\nulonglong calculate_shifted_value_08000404(uint value) {\n    if (value == 0) {\n        return 0;\n    }\n    bool is_negative = (value & 0x80000000) < 0;\n    uint abs_value = is_negative ? -value : value;\n    uint leading_zeroes_count = calculate_shifted_value_08000404(abs_value);\n    uint shift_distance = leading_zeroes_count + 0x15;\n    uint shift_distance_overflow = shift_distance - 0x20;\n    bool should_shift_left = shift_distance_overflow < 0;\n    bool should_shift_right = shift_distance_overflow > 0;\n    if (should_shift_left) {\n        uint shift_amount = shift_distance & 0xff;\n        uint shifted_value = abs_value << shift_amount;\n        uint overflow_shift_amount = 0xc - leading_zeroes_count + 1;\n        uint shifted_value_overflow = abs_value >> overflow_shift_amount;\n        return CONCAT44(shifted_value_overflow | (value & 0x80000000), shifted_value);\n    }\n    if (!should_shift_right) {\n        uint shifted_value = abs_value << (leading_zeroes_count & 0xff);\n        return CONCAT44(value & 0x80000000, shifted_value);\n    }\n    uint shift_amount = shift_distance_overflow & 0xff;\n    uint shifted_value = abs_value >> shift_amount;\n    uint overflow_shift_amount = shift_distance_overflow - 0x1f;\n    uint shifted_value_overflow = abs_value << (0x20 - overflow_shift_amount);\n    if (shift_distance_overflow == 0 || (shift_distance_overflow < 0 && (shift_distance_overflow - 0x1f) < 0)) {\n        return CONCAT44(is_negative ? 0x8000000000000000 : 0, shifted_value >> (shift_distance & 0xff)) & 0x80000000ffffffff;\n    }\n    return CONCAT44(is_negative ? 0x8000000000000000 : 0, shifted_value_overflow | shifted_value) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "verify_and_process_0800209c",
                "param_1": "input_array",
                "param_2": "array_length",
                "cVar1": "is_negative",
                "cVar2": "temp_bit",
                "puVar3": "ptr1",
                "iVar4": "sign_bit_shift",
                "iVar5": "difference",
                "uVar6": "temp_value",
                "uVar7": "leading_zero_count",
                "DAT_08002204": "ptr1",
                "DAT_08002208": "ptr2",
                "PTR_DAT_0800220c": "shift_amount_table",
                "PTR_DAT_08002210": "output_ptr",
                "count_leading_zeroes": "count_leading_zero_bits",
                "FUN_08002008": "get_random_value",
                "FUN_08001104": "print_result",
                "FUN_0800115c": "calculate_difference",
                "return": "return_value"
            },
            "code": "uint32_t verify_and_process_0800209c(uint32_t *input_array, uint32_t array_length)\n{\n  char is_negative;\n  uint32_t *DAT_08002204;\n  int32_t sign_bit_shift;\n  uint32_t leading_zero_count;\n  uint32_t shift_amount;\n  uint32_t temp_value;\n  uint32_t leading_zero_mask;\n  uint32_t *DAT_08002208;\n  uint32_t return_value;\n  \n  DAT_08002204 = DAT_08002204;\n  if ((array_length <= (*DAT_08002204 & 7)) || (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | array_length, array_length == (*DAT_08002204 & 7))) {\n    temp_value = *input_array;\n    is_negative = (temp_value & 0x80000000) >> 31;\n    if (is_negative) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | input_array[2];\n    }\n    DAT_08002208 = DAT_08002208;\n    sign_bit_shift = temp_value << 31;\n    if (sign_bit_shift >= 0) {\n      DAT_08002204 = DAT_08002204;\n      if ((array_length < (*DAT_08002204 & 7)) && (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | array_length, array_length != (*DAT_08002204 & 7))) {\n        return 1;\n      }\n      DAT_08002208 = DAT_08002208;\n      temp_value = *input_array;\n      if ((temp_value & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | input_array[3];\n      }\n      is_negative = (temp_value & 0x40000000) >> 30;\n      if (is_negative) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xffffc7ff | input_array[4] << 3;\n      }\n      temp_value = FUN_08002008();\n      leading_zero_count = count_leading_zeroes(0xf000000);\n      shift_amount = PTR_DAT_0800220c[(DAT_08002208[1] & 0xf0) >> (leading_zero_count & 0xff)];\n      leading_zero_mask = 0xffffffff >> (32 - shift_amount);\n      *(uint32_t *)PTR_DAT_08002210 = temp_value >> shift_amount;\n      FUN_08001104(0);\n      return 0;\n    }\n    temp_value = input_array[1];\n    if (temp_value == 1) {\n      is_negative = 1;\n    }\n    else {\n      if (temp_value == 2) {\n        shift_amount = *DAT_08002208;\n        goto LAB_08002176;\n      }\n      is_negative = 0;\n    }\n    leading_zero_mask = (is_negative << 6) | (temp_value << 6);\n    leading_zero_count = count_leading_zeroes(leading_zero_mask << 16);\n    shift_amount = PTR_DAT_0800220c[(DAT_08002208[1] & 0xf0) >> (leading_zero_count & 0xff)];\n    temp_value = (shift_amount == 31) ? 0xffffffff : (0xffffffff >> shift_amount) << 31;\n    if (temp_value >= 0) {\nLAB_08002176:\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | temp_value;\n      sign_bit_shift = temp_value << 31;\n      return_value = FUN_0800115c(sign_bit_shift, shift_amount);\n      if (input_array[1] == 1) {\n        do {\n          if ((DAT_08002208[1] & 0xc) == 4) {\n            goto LAB_080020ba;\n          }\n          return_value = FUN_0800115c(sign_bit_shift, shift_amount);\n          sign_bit_shift = return_value;\n        } while ((return_value - sign_bit_shift) < 0x1389);\n      }\n      else if (input_array[1] == 2) {\n        do {\n          if ((DAT_08002208[1] & 0xc) == 8) {\n            goto LAB_080020ba;\n          }\n          return_value = FUN_0800115c(sign_bit_shift, shift_amount);\n          sign_bit_shift = return_value;\n        } while ((return_value - sign_bit_shift) < 0x1389);\n      }\n      else {\n        do {\n          if ((DAT_08002208[1] & 0xc) == 0) {\n            goto LAB_080020ba;\n          }\n          return_value = FUN_0800115c(sign_bit_shift, shift_amount);\n          sign_bit_shift = return_value;\n        } while ((return_value - sign_bit_shift) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n",
            "called": [
                "FUN_08002008",
                "FUN_08001104",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "verify_and_process_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "send_i2c_data_0800403c",
                "param_1": "address",
                "param_2": "data",
                "param_3": "reg",
                "param_4": "param_4",
                "iVar1": "result",
                "local_14": "buffer",
                "PTR_DAT_08004074": "PTR_DAT_08004074",
                "PTR_s____Src_i2c_c_08004078": "PTR_s____Src_i2c_c_08004078",
                "FUN_08001828": "i2c_write",
                "FUN_08004490": "print_error",
                "thunk_do_nothing_08001168": "do_nothing"
            },
            "code": "void send_i2c_data_0800403c(unsigned int address, unsigned int data, unsigned char reg, int param_4)\n{\n  int result;\n  unsigned char buffer[8];\n  buffer[0] = reg;\n  result = i2c_write(PTR_DAT_08004074, address, data, 1, buffer, 1, 200);\n  if (result != 0) {\n    print_error(PTR_s____Src_i2c_c_08004078, 0x1b);\n  }\n  if (param_4 != 0) {\n    do_nothing(0x32);\n  }\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "send_i2c_data_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08004a30",
                "FUN_08002bf0",
                "FUN_08002f28",
                "FUN_08004a84",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "calculate_08006070",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "flag",
                "uVar2": "param2_masked",
                "iVar3": "difference",
                "uVar4": "param4_masked",
                "result": "result",
                "uVar5": "concatenated1",
                "uVar6": "concatenated2",
                "uVar7": "concatenated3",
                "uVar8": "concatenated4",
                "mask": "mask"
            },
            "code": "ulonglong calculate_08006070(uint param1, uint param2, uint param3, uint param4)\n{\n  uint mask = 0x7fffffff;\n  uint uVar1;\n  uint uVar2;\n  int diff;\n  uint uVar4;\n  ulonglong result = 0;\n  ulonglong uVar6 = CONCAT44(DAT_08006214,DAT_08006210);\n  ulonglong uVar5 = CONCAT44(DAT_08006204,DAT_08006200);\n  undefined8 uVar7;\n  undefined8 uVar8;\n  \n  uVar4 = param4 & mask;\n  if ((DAT_08006220 < (uVar4 | (-param3 | param3) >> 0x1f)) ||\n     (uVar2 = param2 & mask, DAT_08006220 < (uVar2 | (-param1 | param1) >> 0x1f))) {\n    result = FUNC_0800016c(param1, param2, param3, param4, param4);\n    return result;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    result = FUNC_08006d68();\n    return result;\n  }\n  uVar1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | uVar2) == 0) {\n    if (uVar1 == 2) {\n      return CONCAT44(DAT_080061fc, DAT_080061f8);\n    }\n    if (uVar1 != 3) {\n      return CONCAT44(param2, param1);\n    }\n  }\n  else {\n    if ((param3 | uVar4) != 0) {\n      if (uVar4 == DAT_08006220) {\n        if (uVar2 == uVar4) {\n          if (uVar1 == 2) {\n            return CONCAT44(DAT_080061ec, DAT_080061e8);\n          }\n          if (uVar1 == 3) {\n            return CONCAT44(DAT_080061f4, DAT_080061f0);\n          }\n          if (uVar1 != 1) {\n            return CONCAT44(DAT_0800621c, DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4, DAT_080061e0);\n        }\n        if (uVar1 == 2) {\n          return CONCAT44(DAT_080061fc, DAT_080061f8);\n        }\n        if (uVar1 == 3) {\n          return result;\n        }\n        if (uVar1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (uVar2 != DAT_08006220) {\n        diff = (int)(uVar2 - uVar4) >> 0x14;\n        if (diff < 0x3d) {\n          if (((int)param4 < 0) && (diff + 0x3c < 0 != SCARRY4(diff, 0x3c))) {\n            uVar6 = 0;\n          }\n          else {\n            FUNC_08000724(param1, param2);\n            do_nothing_0800708c();\n            uVar6 = FUNC_08006d68();\n          }\n        }\n        diff = (int)(uVar6 >> 0x20);\n        if (uVar1 != 1) {\n          if (uVar1 == 2) {\n            uVar8 = FUNC_08000168((int)uVar6, diff, DAT_08006208, DAT_0800620c);\n            uVar7 = CONCAT44(DAT_080061fc, DAT_080061f8);\n          }\n          else {\n            if (uVar1 == 0) {\n              return uVar6;\n            }\n            uVar7 = FUNC_08000168((int)uVar6, diff, DAT_08006208, DAT_0800620c);\n            uVar8 = CONCAT44(DAT_080061fc, DAT_080061f8);\n          }\n          result = FUNC_08000168((int)uVar7, (int)((ulonglong)uVar7 >> 0x20), (int)uVar8,\n                               (int)((ulonglong)uVar8 >> 0x20));\n          return result;\n        }\n        result = uVar6 & 0xffffffff | (ulonglong)(diff + 0x80000000) << 0x20;\n      }\n    }\n    if ((int)param2 < 0) {\n      result = CONCAT44(DAT_080061dc, DAT_080061d8);\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_08006d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar4": "var4",
                "uVar5": "result1",
                "uVar6": "result2",
                "uVar7": "var7",
                "uVar8": "var8",
                "iVar3": "var3"
            },
            "code": "ulonglong calculate_result_thunk_08006070(uint input1, uint input2, uint input3, uint input4)\n{\n  uint param1 = input1 & 0x7fffffff;\n  uint param2 = input2 & 0x7fffffff;\n  uint param3 = input3 & 0x7fffffff;\n  uint param4 = input4 & 0x7fffffff;\n  ulonglong result1 = CONCAT44(DAT_08006204, DAT_08006200);\n  ulonglong result2 = CONCAT44(DAT_08006214, DAT_08006210);\n  if (DAT_08006220 < (param4 | (-input3 | input3) >> 0x1f) || DAT_08006220 < (param2 | (-input1 | input1) >> 0x1f)) {\n    result1 = FUNC_0800016c(input1, input2, input3, input4, input4);\n    return result1;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result1 = FUNC_08006d68();\n    return result1;\n  }\n  uint uVar1 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | param2) == 0) {\n    if (uVar1 == 2) {\n      return CONCAT44(DAT_080061fc, DAT_080061f8);\n    }\n    if (uVar1 != 3) {\n      return CONCAT44(input2, input1);\n    }\n  }\n  else {\n    if ((input3 | param4) != 0) {\n      if (param4 == DAT_08006220) {\n        if (param2 == param4) {\n          if (uVar1 == 2) {\n            return CONCAT44(DAT_080061ec, DAT_080061e8);\n          }\n          if (uVar1 == 3) {\n            return CONCAT44(DAT_080061f4, DAT_080061f0);\n          }\n          if (uVar1 != 1) {\n            return CONCAT44(DAT_0800621c, DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4, DAT_080061e0);\n        }\n        if (uVar1 == 2) {\n          return CONCAT44(DAT_080061fc, DAT_080061f8);\n        }\n        if (uVar1 == 3) {\n          return result1;\n        }\n        if (uVar1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (param2 != DAT_08006220) {\n        int iVar3 = (int)(param2 - param4) >> 0x14;\n        if (iVar3 < 0x3d) {\n          if (((int)input4 < 0) && (iVar3 + 0x3c < 0 != SCARRY4(iVar3,0x3c))) {\n            result2 = 0;\n          }\n          else {\n            FUNC_08000724(input1, input2);\n            do_nothing_0800708c();\n            result2 = FUNC_08006d68();\n          }\n        }\n        iVar3 = (int)(result2 >> 0x20);\n        if (uVar1 != 1) {\n          if (uVar1 == 2) {\n            ulonglong uVar7 = FUNC_08000168((int)result2, iVar3, DAT_08006208, DAT_0800620c);\n            ulonglong uVar8 = CONCAT44(DAT_080061fc, DAT_080061f8);\n            result1 = FUNC_08000168((int)uVar7, (int)(uVar7 >> 0x20), (int)uVar8, (int)(uVar8 >> 0x20));\n          }\n          else {\n            if (uVar1 == 0) {\n              return result2;\n            }\n            ulonglong uVar7 = FUNC_08000168((int)result2, iVar3, DAT_08006208, DAT_0800620c);\n            ulonglong uVar8 = CONCAT44(DAT_080061fc, DAT_080061f8);\n            result1 = FUNC_08000168((int)uVar8, (int)(uVar8 >> 0x20), (int)uVar7, (int)(uVar7 >> 0x20));\n          }\n          return result1;\n        }\n        return result2 & 0xffffffff | (ulonglong)(iVar3 + 0x80000000) << 0x20;\n      }\n    }\n    result1 = result2;\n    if ((int)input2 < 0) {\n      result1 = CONCAT44(DAT_080061dc, DAT_080061d8);\n    }\n  }\n  return result1;\n}\n",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "process_data_08004cac",
                "param_1": "data",
                "puVar1": "data_ptr",
                "PTR_DAT_08004cc4": "data_start_address",
                "PTR_DAT_08004cc8": "data_end_address",
                "FUN_08004c8c": "clean_up_data"
            },
            "code": "void process_data_08004cac(undefined4 data)\n{\n  undefined *data_ptr;\n  data_ptr = PTR_DAT_08004cc4;\n  process_data_08004cac_chunk(PTR_DAT_08004cc4, PTR_DAT_08004cc8, data);\n  clean_up_data(data_ptr);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "process_input_08004c18",
                "param_1": "input",
                "puVar1": "data_ptr",
                "iVar2": "counter_1",
                "iVar3": "counter_2",
                "uVar4": "character",
                "puVar5": "ushort_ptr"
            },
            "code": "undefined4 process_input_08004c18(undefined input) {\n  undefined *data_ptr;\n  int counter_1;\n  int counter_2;\n  undefined character;\n  ushort *ushort_ptr;\n  ushort_ptr = (ushort *)PTR_DAT_08004c28;\n  *PTR_DAT_08004c28 = input;\n  data_ptr = PTR_DAT_08004c2c;\n  if ((PTR_DAT_08004c2c[0x39] == '\\x01') || (PTR_DAT_08004c2c[0x39] == '\"')) {\n    if (ushort_ptr == (ushort *)0x0) {\n      return 1;\n    }\n    if (PTR_DAT_08004c2c[0x38] != '\\x01') {\n      PTR_DAT_08004c2c[0x38] = 1;\n      *(undefined4 *)(data_ptr + 0x3c) = 0;\n      *(undefined2 *)(data_ptr + 0x24) = 1;\n      if (data_ptr[0x39] == '\"') {\n        character = 0x32;\n      }\n      else {\n        character = 0x12;\n      }\n      *(undefined2 *)(data_ptr + 0x26) = 1;\n      data_ptr[0x39] = character;\nLAB_080027c4:\n      do {\n        if (*(short *)(data_ptr + 0x26) == 0) {\n          counter_1 = FUN_0800115c();\n          do {\n            if (**(int **)data_ptr << 0x19 < 0) {\n              if (data_ptr[0x39] == '2') {\n                character = 0x22;\n              }\n              else {\n                character = 1;\n              }\n              data_ptr[0x39] = character;\n              data_ptr[0x38] = 0;\n              return 0;\n            }\n            counter_2 = FUN_0800115c();\n          } while ((uint)(counter_2 - counter_1) < 6);\nLAB_0800281c:\n          counter_1 = *(int *)data_ptr;\n          *(uint *)(counter_1 + 0xc) = *(uint *)(counter_1 + 0xc) & 0xffffff7f;\n          *(uint *)(counter_1 + 0xc) = *(uint *)(counter_1 + 0xc) & 0xffffffdf;\n          *(uint *)(counter_1 + 0xc) = *(uint *)(counter_1 + 0xc) & 0xfffffeff;\n          *(uint *)(counter_1 + 0x14) = *(uint *)(counter_1 + 0x14) & 0xfffffffe;\n          data_ptr[0x39] = 1;\n          data_ptr[0x38] = 0;\n          return 3;\n        }\n        *(short *)(data_ptr + 0x26) = *(short *)(data_ptr + 0x26) + -1;\n        if (*(int *)(data_ptr + 8) == 0x1000) {\n          counter_1 = FUN_0800115c();\n          while (-1 < **(int **)data_ptr << 0x18) {\n            counter_2 = FUN_0800115c();\n            if (5 < (uint)(counter_2 - counter_1)) goto LAB_0800281c;\n          }\n          (*(int **)data_ptr)[1] = *ushort_ptr & 0x1ff;\n          if (*(int *)(data_ptr + 0x10) == 0) {\n            ushort_ptr = ushort_ptr + 1;\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          counter_1 = FUN_0800115c();\n          while (-1 < **(int **)data_ptr << 0x18) {\n            counter_2 = FUN_0800115c();\n            if (5 < (uint)(counter_2 - counter_1)) goto LAB_0800281c;\n          }\n          (*(int **)data_ptr)[1] = (uint)*(byte *)ushort_ptr;\n        }\n        ushort_ptr = (ushort *)((int)ushort_ptr + 1);\n      } while( true );\n    }\n  }\n  return 2;\n}\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "process_input_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "calculate_result_0800483c",
                "param_1": "input_array",
                "uVar1": "var1",
                "uVar2": "var2",
                "iVar3": "var3",
                "iVar4": "var7",
                "iVar5": "var8",
                "iVar6": "var6",
                "iVar9": "var9",
                "iVar10": "var10",
                "iVar11": "var11",
                "DAT_08004974": "CONSTANT1",
                "DAT_08004964": "CONSTANT2",
                "DAT_08004968": "CONSTANT3",
                "DAT_0800496c": "CONSTANT4",
                "DAT_08004970": "CONSTANT5",
                "PTR_FUN_08000adc": "calculate_func1",
                "PTR_FUN_08000ad8": "calculate_func2",
                "PTR_FUN_08001064": "calculate_func3",
                "PTR_FUN_08001028": "calculate_func4",
                "PTR_FUN_08000cec": "calculate_func5",
                "PTR_FUN_08000e54": "calculate_func6",
                "PTR_FUN_08000c44": "calculate_func7"
            },
            "code": "void calculate_result_0800483c(int *input_array)\n{\n  int var1 = input_array[12];\n  int var2 = PTR_FUN_08000adc(input_array[7],input_array[9]);\n  var1 = PTR_FUN_08000ad8(var2,var1);\n  input_array[10] = var1;\n  \n  if (*input_array == 3) {\n    int var3 = PTR_FUN_08001064(input_array[10],0);\n    if (var3 == 0) {\n      var3 = PTR_FUN_08001028(input_array[10],DAT_08004974);\n    }\n    else {\n      var3 = PTR_FUN_08001064(input_array[10],DAT_08004964);\n    }\n    if (var3 != 0) {\n      int var4 = input_array[10];\n      int var5 = PTR_FUN_08000cec(input_array[10],DAT_08004968);\n      int var6 = input_array[10];\n      if (PTR_FUN_08001064(input_array[10],0) == 0) {\n        var6 = var6 - 0x80000000;\n      }\n      var5 = PTR_FUN_08000e54(var5,var6);\n      var3 = PTR_FUN_08000ad8(var4,var5);\n      input_array[10] = var3;\n    }\n  }\n  \n  int var7 = input_array[2];\n  int var8 = input_array[3];\n  int var9 = PTR_FUN_08000cec(input_array[1],input_array[10]);\n  input_array[14] = var9;\n  var9 = PTR_FUN_08000adc(input_array[10],input_array[15]);\n  input_array[15] = var9;\n  int var10 = PTR_FUN_08001028(input_array[15],DAT_0800496c);\n  if ((var10 == 0) &&\n     (var10 = PTR_FUN_08001064(input_array[15],DAT_08004970), var10 = DAT_08004970, var10 == 0)) {\n    var10 = input_array[15];\n  }\n  input_array[15] = var10;\n  var10 = PTR_FUN_08000ad8(input_array[12],input_array[13]);\n  input_array[16] = var10;\n  var9 = PTR_FUN_08000cec(var7,input_array[15]);\n  var9 = PTR_FUN_08000adc(var9,input_array[14]);\n  int var11 = PTR_FUN_08000cec(var8,input_array[16]);\n  var10 = PTR_FUN_08000ad8(var9,var11);\n  input_array[18] = var10;\n  var9 = PTR_FUN_08000c44(input_array[19]);\n  var10 = PTR_FUN_08001028(input_array[18],DAT_0800496c);\n  if ((var10 == 0) &&\n     (var10 = PTR_FUN_08001064(input_array[18],DAT_08004970), var10 = DAT_08004970, var10 == 0)) {\n    var10 = input_array[18];\n  }\n  var10 = PTR_FUN_08000cec(var10,var9);\n  input_array[18] = var10;\n  input_array[13] = input_array[12];\n  input_array[11] = input_array[10];\n  input_array[21] = input_array[20];\n  return;\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_08001064",
                "FUN_08000e54",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "iterate_and_call_function_on_each_element_08004c8c",
                "param_1": "elements",
                "uVar1": "distance_from_start",
                "puVar2": "current_element",
                "FUN_08000150": "calculate_distance_from_start",
                "*puVar2": "*current_element",
                "FUN_08004c18": "call_function_on_element"
            },
            "code": "void iterate_and_call_function_on_each_element_08004c8c(char *elements) {\n  uint distance_from_start;\n  char *current_element = elements;\n  while (true) {\n    distance_from_start = calculate_distance_from_start(elements, current_element);\n    if (distance_from_start <= (uint)(current_element - elements)) break;\n    call_function_on_element(*current_element);\n    current_element++;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004cac",
                "FUN_08004300",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "iterate_and_call_function_on_each_element_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "check_for_value_08001460",
                "param_1": "ptr_array",
                "param_2": "value_to_check",
                "param_3": "timeout",
                "iVar1": "start_time",
                "puVar4": "ptr",
                "uVar3": "value",
                "*puVar4": "*ptr",
                "param_1[5]": "ptr[5]",
                "param_1[6]": "ptr[6]",
                "(param_2 << 8) >> 0x18": "(value_to_check >> 24) == 1",
                "(param_2 & 0xffff & ~uVar3)": "(value_to_check & 0xFFFF & ~value)",
                "puVar4[5]": "ptr[5]",
                "(int)(puVar4[5] << 0x15)": "(int32_t)(ptr[5] << 0x15)",
                "*puVar4 = *puVar4 | 0x200": "*ptr = *ptr | 0x200",
                "puVar4[5] = puVar4[5] & 0xfffffbff": "ptr[5] &= 0xFFFFFBFF",
                "param_1[0xe]": "ptr_array[14]",
                "*(undefined *)((int)param_1 + 0x35)": "ptr_array[0][0x35/4]",
                "*(undefined *)(param_1 + 0xd)": "ptr_array[0xD/4]",
                "return 0": "return 0;",
                "return 1": "return 1;",
                "return 3": "return 3;"
            },
            "code": "uint32_t check_for_value_08001460(uint32_t **ptr_array, uint32_t value_to_check, uint32_t timeout)\\n\\\n    {\\n\\\n        int start_time = get_current_time();\\n\\\n        do {\\n\\\n            uint32_t *ptr = *ptr_array;\\n\\\n            uint32_t value = (value_to_check >> 24) == 1 ? ptr[5] : ptr[6];\\n\\\n            if ((value_to_check & 0xFFFF & ~value) == 0) {\\n\\\n                return 0;\\n\\\n            }\\n\\\n            if ((int32_t)(ptr[5] << 0x15) < 0) {\\n\\\n                *ptr = *ptr | 0x200;\\n\\\n                ptr[5] &= 0xFFFFFBFF;\\n\\\n                ptr_array[14] = (uint32_t *)0x4;\\n\\\n                ptr_array[0][0x35/4] = 0x20;\\n\\\n                ptr_array[0xD/4] = 0;\\n\\\n                return 1;\\n\\\n            }\\n\\\n        } while ((timeout == 0xFFFFFFFF) || ((timeout != 0) && (get_current_time() - start_time <= timeout)));\\n\\\n        ptr_array[0][0x35/4] = 0x20;\\n\\\n        ptr_array[0xD/4] = 0;\\n\\\n        return 3;\\n\\\n    }",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_for_value_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_end_of_string_08001064",
                "in_CY": "current_char",
                "FUN_08000ffc": "execute_some_function"
            },
            "code": "bool is_end_of_string_08001064(void)\n{\n  char current_char;\n  execute_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_param_in_struct_08003fd0",
                "param_1": "param",
                "PTR_DAT_08003fd8": "ptr",
                "offset": "offset",
                "struct_ptr": "struct_ptr"
            },
            "code": "void set_param_in_struct_08003fd0(int param){\n\tint* PTR_DAT_08003fd8 = (int*)PTR_DAT_08003fd8;\n\tint offset = 0x3c;\n\tint* struct_PTR_DAT_08003fd8 = (int*)(*PTR_DAT_08003fd8 + offset);\n\t*struct_PTR_DAT_08003fd8 = param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_in_struct_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "convert_float_to_uint64_t_08000892",
                "param_1": "float_part_1",
                "param_2": "float_part_2",
                "param_3": "float_part_3",
                "param_4": "float_part_4",
                "uVar1": "bit_value",
                "unaff_r4": "float_part_2_copy",
                "uVar2": "shifted_float_part_4",
                "uVar3": "shifted_float_part_4",
                "in_r12": "constant_0x7f800000",
                "bVar4": "bit_check_result",
                "mantissa": "mantissa",
                "exponent": "exponent",
                "sign_bit": "sign_bit"
            },
            "code": "uint64_t convert_float_to_uint64_t_08000892(uint32_t float_part_1, uint32_t float_part_2, uint32_t float_part_3, uint32_t float_part_4) {\n    uint32_t sign_bit = float_part_2 & 0x80000000;\n    uint32_t exponent = (float_part_2 & 0x7f800000) >> 0x17;\n    uint32_t mantissa = (float_part_2 & 0x007fffff) | 0x00800000;\n    if (exponent == 0xff) {\n        if (mantissa == 0) {\n            return (uint64_t)sign_bit << 0x3f | 0x7ff8000000000000;\n        } else {\n            return (uint64_t)sign_bit << 0x3f | 0x7ff0000000000000 | (uint64_t)mantissa << 0x14;\n        }\n    }\n    exponent = exponent - 0x7f;\n    if (exponent >= 0x20) {\n        return (uint64_t)sign_bit << 0x3f | 0x7ff0000000000000;\n    }\n    if (exponent < 0) {\n        if (exponent < -0x1e) {\n            mantissa = 0;\n        } else {\n            mantissa = (mantissa | 0x00800000) >> 1 | 0x00800000;\n            mantissa = mantissa >> -exponent;\n        }\n        return (uint64_t)sign_bit << 0x3f | (uint64_t)mantissa;\n    }\n    mantissa = mantissa | 0x00800000;\n    mantissa = mantissa << exponent;\n    return (uint64_t)sign_bit << 0x3f | (uint64_t)mantissa;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "convert_float_to_uint64_t_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "copy_and_convert_data_08004458",
                "puVar1": "source_ptr",
                "uVar2": "temp_1",
                "puVar3": "dest_ptr",
                "puVar4": "dest_next_ptr",
                "puVar5": "dest_end_ptr",
                "local_30": "destination",
                "local_24": "destination_2byte"
            },
            "code": "void copy_and_convert_data_08004458()\n{\n    undefined4 *source_ptr;\n    undefined4 temp_1;\n    undefined4 *dest_ptr;\n    undefined4 *dest_end_ptr;\n    undefined4 *dest_next_ptr;\n    undefined4 destination[3];\n    undefined2 destination_2byte[10];\n    \n    source_ptr = destination;\n    dest_end_ptr = (undefined4 *)PTR_DAT_0800448c + 0x18;\n    while (source_ptr != dest_end_ptr)\n    {\n        dest_ptr = (undefined4 *)PTR_DAT_0800448c;\n        dest_next_ptr = dest_ptr + 2;\n        temp_1 = dest_next_ptr[0];\n        dest_ptr[0] = source_ptr[0];\n        dest_ptr[1] = source_ptr[1];\n        dest_next_ptr[0] = source_ptr[2];\n        dest_next_ptr[1] = *(undefined2 *)(source_ptr + 3);\n        source_ptr += 2;\n    }\n    \n    destination[2] = *source_ptr;\n    *(undefined2 *)(destination + 3) = *(undefined2 *)(dest_ptr + 3);\n    FUN_08004300(0x70, destination, 0x1e);\n    return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_and_convert_data_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08004490",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "combine_params_08000134",
                "param_1": "param1",
                "param_2": "param2",
                "DAT_08000144": "some_condition",
                "PTR_FUN_0800014c": "pointer_fun",
                "PTR_DAT_08000148": "pointer_dat"
            },
            "code": "typedef unsigned long long uint64;\n\nuint64 combine_params_08000134(uint64 param1, uint64 param2) {\n    if (DAT_08000144 != 0) {\n        param1 = PTR_FUN_0800014c;\n        param2 = PTR_DAT_08000148;\n    }\n    return ((uint64)param2 << 32) | param1;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "combine_params_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_param_to_64_bit_08003eb0",
                "param_1": "param",
                "PTR_DAT_08003ec4": "data_pointer"
            },
            "code": "long long convert_param_to_64_bit_08003eb0(uint32_t param)\n{\n  if (*PTR_DAT_08003ec4 == 0) {\n    software_interrupt(0x3f);\n    return ((long long)param) | 0x1;\n  }\n  return ((long long)param) << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "convert_param_to_64_bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = FUN_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = FUN_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "process_data_08002ee8",
                "iVar1": "result",
                "uVar2": "data",
                "PTR_DAT_08002f18": "data_pointer",
                "DAT_08002f1c": "type_1_data",
                "DAT_08002f20": "type_2_data",
                "DAT_08002f24": "type_3_data",
                "FUN_08001050": "check_data",
                "FUN_08001028": "check_data",
                "FUNC_08000adc": "process_data_type",
                "FUNC_08000ad8": "process_data_type"
            },
            "code": "void process_data_08002ee8(void)\n{\n  int result;\n  undefined4 data;\n  data = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  result = check_data(data, DAT_08002f1c);\n  if ((result != 0) && (result = check_data(data, DAT_08002f20), result != 0)) {\n    process_data_08002ee8_type(data, DAT_08002f20);\n    return;\n  }\n  process_data_08002ee8_type(data, DAT_08002f24);\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08000adc",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_data_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "convertMillisecondsToSecondsAndPrint_08001104",
                "param_1": "inputParam",
                "uVar1": "milliseconds",
                "FUN_08002214": "getTimeInMilliseconds",
                "FUN_08001214": "printValue",
                "FUN_08001194": "unknownFunction"
            },
            "code": "int convertMillisecondsToSecondsAndPrint_08001104(int inputParam)\n{\n  uint32_t milliseconds = getTimeInMilliseconds();\n  int seconds = milliseconds / 1000;\n  printValue(-1, inputParam, 0);\n  return 0;\n}",
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "convertMillisecondsToSecondsAndPrint_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "getValueFromPtr_thunk_0800115c",
                "undefined4": "int",
                "PTR_DAT_08001164": "ptr",
                "*(undefined4 *)PTR_DAT_08001164": "*ptr",
                "return *(undefined4 *)PTR_DAT_08001164;": "return value;"
            },
            "code": "int getValueFromPtr_thunk_0800115c() {\n    int* PTR_DAT_08001164 = (int*)PTR_DAT_08001164;\n    int value = *(undefined4 *)PTR_DAT_08001164;\n    return *(undefined4 *)PTR_DAT_08001164;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "getValueFromPtr_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = FUN_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "accumulate_param_and_global_080072b8",
                "param_1": "param",
                "puVar1": "global_ptr"
            },
            "code": "void accumulate_param_and_global_080072b8(int param){\n  undefined *global_ptr;\n  global_ptr = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)global_ptr = param + *(int *)global_ptr;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "accumulate_param_and_global_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "FUN_0800581c": "process_param_0800581c",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "data_ptr",
                "iVar2": "result"
            },
            "code": "void process_param_0800581c(int *output, undefined4 input) {\n  undefined *data_ptr;\n  int result;\n  data_ptr = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  result = calculate(input);\n  if ((result == -1) && (*(int *)data_ptr != 0)) {\n    *output = *(int *)data_ptr;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "process_param_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "check_if_param_equals_constant_08004d48",
                "param_1": "param_ptr",
                "param_2": "param_2",
                "local_18": "local_var_1",
                "local_14": "local_var_2",
                "*param_1": "*param_ptr",
                "DAT_08004d80": "constant_value",
                "DAT_08004d84": "function_to_call",
                "DAT_08004d88": "memory_location"
            },
            "code": "void check_if_param_equals_constant_08004d48(int *param_ptr, undefined4 param_2) {\n  undefined4 local_var_1;\n  undefined4 local_var_2;\n  int DAT_08004d80 = 0x08004d80;\n\n  if (*param_ptr == DAT_08004d80) {\n    local_var_1 = 0xc0;\n    local_var_2 = 0x12;\n    call_function_with_params(DAT_08004d84, &local_var_1, *param_ptr, 3, param_ptr, param_2);\n    *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n  }\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "check_if_param_equals_constant_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_pointer_value_from_data_section_080072ac",
                "PTR_PTR_DAT_080072b4": "data_section_pointer_pointer"
            },
            "code": "get_pointer_value_from_data_section_080072ac() {\n  return *(undefined4 *)PTR_PTR_DAT_080072b4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_pointer_value_from_data_section_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "update_data_08002280",
                "param_1": "data_index",
                "param_2": "data_array",
                "uVar1": "modified_value1",
                "uVar2": "modified_value2",
                "uVar3": "modified_value3"
            },
            "code": "void update_data_08002280(int data_index, uint *data_array)\n{\n  uint modified_value1;\n  uint modified_value2;\n  uint modified_value3;\n  \n  modified_value1 = data_array[2] | (*(uint *)(data_index + 0x20) & 0xfffffffd);\n  modified_value2 = data_array[5] | data_array[6] | (*(uint *)(data_index + 4) & 0xfffffcff);\n  if (data_index == DAT_080022cc) {\n    modified_value1 = (modified_value1 & 0xfffffff7) | data_array[3];\n    modified_value2 = (modified_value2 & 0xffffff3f) | (*(uint *)(data_index + 4) & 0xffffffc0);\n  }\n  *(uint *)(data_index + 4) = modified_value2;\n  *(uint *)(data_index + 0x18) = (*(uint *)(data_index + 0x18) & 0xffffff8c) | data_array[0];\n  *(uint *)(data_index + 0x34) = data_array[1];\n  *(uint *)(data_index + 0x20) = modified_value1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "encode_data_08001194",
                "param_1": "data",
                "param_2": "mask",
                "param_3": "shift_amount",
                "uVar1": "encoded_data",
                "uVar2": "shift_bits",
                "uVar3": "mask_bits",
                "uVar4": "max_mask_bits"
            },
            "code": "void encode_data_08001194(uint data, uint mask, uint shift_amount) {\n  uint mask_bits = (uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n  uint shift_bits = 7 - mask_bits;\n  uint max_mask_bits = mask_bits + 4;\n  if (shift_bits > 3) {\n    shift_bits = 4;\n  }\n  if (max_mask_bits < 7) {\n    mask_bits = 0;\n  }\n  shift_bits = (1 << (shift_bits & 0xff)) - 1;\n  if (max_mask_bits > 6) {\n    mask_bits = mask_bits - 3;\n  }\n  undefined encoded_data = (undefined)((shift_amount & (1 << (mask_bits & 0xff)) - 1U | (mask & shift_bits) << (mask_bits & 0xff)) << 4);\n  if (-1 < (int)data) {\n    data = data + 0xe000e100;\n  }\n  else {\n    data = data & 0xf;\n    mask_bits = DAT_080011f8;\n  }\n  if (-1 < (int)data) {\n    *(undefined *)(data + 0x300) = encoded_data;\n  }\n  else {\n    *(undefined *)(mask_bits + data) = encoded_data;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004e7c",
                "FUN_08004ccc",
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "encode_data_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "calculateSensorDataAndSaveToMemory_08002cb0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "sensorData",
                "puVar1": "sensorDataPtr",
                "uVar2": "calculatedSensorData",
                "local_c": "rawSensorData",
                "PTR_s____Src_MPU9250_c_08002d80": "sensorSrcArray",
                "PTR_DAT_08002d84": "sensorDataArray",
                "FUN_0800403c": "writeToSensor",
                "FUN_0800407c": "writeToSensorWithMemory",
                "FUN_080040e8": "calculateSensorData"
            },
            "code": "void calculateSensorDataAndSaveToMemory_08002cb0(uint8_t param1, uint8_t param2, uint8_t param3, uint32_t sensorData)\n{\n    uint32_t rawSensorData = sensorData;\n    writeToSensor(0xd0, 0x37, 0x22, 1, param1, param2, param3);\n    uint8_t* sensorDataPtr = PTR_DAT_08002d84;\n    writeToSensor(0xd0, 0x6a, 1);\n    writeToSensor(0x18, 0, PTR_s____Src_MPU9250_c_08002d80, 0xad);\n    writeToSensor(0x18, 0xb, 1);\n    writeToSensor(0x18, 10, 0, 1);\n    writeToSensor(0x18, 10, 0xf, 1);\n    calculateSensorData(rawSensorData, &sensorDataPtr, 3, PTR_s____Src_MPU9250_c_08002d80, 0xb6);\n    uint32_t calculatedSensorData = calculateSensorData(rawSensorData & 0xff - 0x80);\n    calculatedSensorData = calculateSensorData(calculatedSensorData, 0x3b800000);\n    calculatedSensorData = calculateSensorData(calculatedSensorData, 0x3f800000);\n    *(uint32_t*)sensorDataPtr = calculatedSensorData;\n    calculatedSensorData = calculateSensorData(rawSensorData >> 8 & 0xff - 0x80);\n    calculatedSensorData = calculateSensorData(calculatedSensorData, 0x3b800000);\n    calculatedSensorData = calculateSensorData(calculatedSensorData, 0x3f800000);\n    *(uint32_t*)(sensorDataPtr + 4) = calculatedSensorData;\n    calculatedSensorData = calculateSensorData(rawSensorData >> 0x10 & 0xff - 0x80);\n    calculatedSensorData = calculateSensorData(calculatedSensorData, 0x3b800000);\n    calculatedSensorData = calculateSensorData(calculatedSensorData, 0x3f800000);\n    *(uint32_t*)(sensorDataPtr + 8) = calculatedSensorData;\n    writeToSensor(0x18, 10, 0, 1);\n    writeToSensor(0x18, 10, 0x16, 1);\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "calculateSensorDataAndSaveToMemory_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "execute_assembly_code_08004348",
                "param_1": "address",
                "param_2": "address_offset",
                "param_3": "data",
                "puVar1": "assembly_code",
                "local_10": "code_address",
                "local_c": "combined_offset",
                "uStack_8": "data_address"
            },
            "code": "void execute_assembly_code_08004348(uint32_t address, uint32_t address_offset, uint32_t data) {\n    uint8_t *assembly_code = PTR_ASSEMBLY_CODE;\n    assembly_code[0] = 0xe9;\n    assembly_code[1] = 3;\n    assembly_code[3] = 4;\n    assembly_code[2] = 0;\n    uint32_t code_address = *(uint32_t *)assembly_code;\n    assembly_code[4] = 0;\n    assembly_code[5] = 0;\n    assembly_code[6] = 0;\n    uint32_t combined_offset = address_offset & 0xff000000 | (uint32_t)*(uint16_t *)(assembly_code + 4);\n    uint32_t data_address = data;\n    execute_function(code_address, combined_offset, data_address);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "execute_assembly_code_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "update_data_08002324",
                "param_1": "data_address",
                "param_2": "new_data",
                "uVar1": "data2",
                "iVar2": "data3",
                "iVar3": "data4",
                "iVar4": "data5",
                "DAT_08002364": "constant_data"
            },
            "code": "void update_data_08002324(int data_address, int *new_data) {\n  uint32_t bitmask1 = 0xffffefff;\n  uint32_t bitmask2 = 0xffffbfff;\n  uint32_t bitmask3 = 0xffff8cff;\n\n  uint32_t* data1 = (uint32_t*)(data_address + 0x20);\n  *data1 = *data1 & bitmask1;\n\n  uint32_t data2 = *(uint32_t *)(data_address + 4);\n  int data3 = *new_data;\n  int data4 = new_data[2];\n  int data5 = DAT_08002364;\n\n  if (data_address == DAT_08002364) {\n    data5 = new_data[5];\n    data2 = data2 & bitmask2;\n  }\n\n  if (data_address == DAT_08002364) {\n    data2 = data2 | data5 << 6;\n  }\n\n  *(uint32_t *)(data_address + 4) = data2;\n  uint32_t* data6 = (uint32_t*)(data_address + 0x1c);\n  *data6 = *data6 & bitmask3 | data3 << 8;\n\n  int* data7 = (int*)(data_address + 0x40);\n  *data7 = new_data[1];\n\n  uint32_t* data8 = (uint32_t*)(data_address + 0x20);\n  *data8 = *data8 & 0xffffdfff | data4 << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "convert_to_signed_int_08001078",
                "param_1": "unsigned_int_value",
                "uVar1": "leading_byte",
                "uVar2": "difference",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "uint convert_to_signed_int_08001078(uint unsigned_int_value) {\n  uint leading_byte = (unsigned_int_value << 1) >> 0x18;\n  uint difference = 0x9e - leading_byte;\n  if (leading_byte >= 0x9f || difference == 0) {\n    if (difference == 0xffffff9f && (unsigned_int_value & 0x7fffff) != 0) {\n      return 0;\n    }\n    if ((unsigned_int_value & 0x80000000) == 0) {\n      return 0x7fffffff;\n    }\n    return unsigned_int_value;\n  }\n  uint signed_int_value = (unsigned_int_value << 8 | 0x80000000) >> (difference & 0xff);\n  if ((unsigned_int_value & 0x80000000) != 0) {\n    signed_int_value = -signed_int_value;\n  }\n  return signed_int_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "convert_to_signed_int_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "calculate_checksum_08002564",
                "param_1": "array",
                "param_2": "data",
                "uVar1": "result",
                "*(char *)(param_1 + 0xe)": "*(char *)(array + 0xe)",
                "*(undefined *)((int)param_1 + 0x39)": "*(int *)((int)array + 0x39)",
                "*(uint *)(*param_1 + 0x44)": "*(uint *)(*array + 0x44)",
                "*param_2 | param_2[1] | param_2[2] | param_2[3] | param_2[4] | param_2[5] | param_2[6]": "data[0] | data[1] | data[2] | data[3] | data[4] | data[5] | data[6]",
                "*(undefined *)(param_1 + 0xe)": "*(char *)(array + 0xe)"
            },
            "code": "int calculate_checksum_08002564(int *array, uint *data)\n{\n    int result = 2;\n    if (*(char *)(array + 0xe) != '\\x01') {\n        *(int *)((int)array + 0x39) = 2;\n        *(uint *)(*array + 0x44) = data[0] | data[1] | data[2] | data[3] | data[4] | data[5] | data[6];\n        *(int *)((int)array + 0x39) = 1;\n        result = 0;\n        *(char *)(array + 0xe) = 0;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "initialize_08001754",
                "param_1": "params",
                "uVar1": "value1",
                "uVar2": "value2",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar6": "value3",
                "uVar7": "value4",
                "DAT_08001820": "PTR_DAT_08001820",
                "DAT_08001824": "PTR_DAT_08001824",
                "FUN_08002220": "get_value"
            },
            "code": "int initialize_08001754(uint **params)\\n\\\n{\\n\\\n  uint uVar1;\\n\\\n  uint uVar2;\\n\\\n  uint *ptr1;\\n\\\n  uint *ptr2;\\n\\\n  uint *ptr3;\\n\\\n  uint uVar4;\\n\\\n  undefined8 uVar5;\\n\\\n  if (params == (uint **)0x0) {\\n\\\n    return 1;\\n\\\n  }\\n\\\n  if (*(char *)((int)params + 0x35) == \"\\0\") {\\n\\\n    *(undefined *)(params + 0xd) = 0;\\n\\\n    initialize_08001754_subroutine();\\n\\\n  }\\n\\\n  *(undefined *)((int)params + 0x35) = 0x24;\\n\\\n  ptr1 = DAT_08001820;\\n\\\n  **params = **params & 0xfffffffe;\\n\\\n  uVar5 = get_value();\\n\\\n  uVar2 = (uint)((ulonglong)uVar5 >> 0x20);\\n\\\n  uVar1 = (uint)uVar5;\\n\\\n  ptr3 = params[1];\\n\\\n  uVar4 = uVar1 / DAT_08001824;\\n\\\n  if (ptr1 < ptr3) {\\n\\\n    uVar2 = 300;\\n\\\n  }\\n\\\n  ptr2 = *params;\\n\\\n  if (ptr1 < ptr3) {\\n\\\n    uVar2 = uVar4 * uVar2;\\n\\\n  }\\n\\\n  ptr2[1] = uVar4;\\n\\\n  if (ptr1 < ptr3) {\\n\\\n    uVar4 = uVar2 / 1000;\\n\\\n  }\\n\\\n  ptr2[8] = uVar4 + 1;\\n\\\n  if (ptr1 < ptr3) {\\n\\\n    if (params[2] == (uint *)0x0) {\\n\\\n      uVar1 = uVar1 / (uint)((int)ptr3 * 3) | 0x8000;\\n\\\n    }\\n\\\n    else {\\n\\\n      uVar1 = uVar1 / (uint)((int)ptr3 * 0x19) | 0xc000;\\n\\\n    }\\n\\\n    if ((uVar1 & 0xfff) == 0) {\\n\\\n      uVar1 = 1;\\n\\\n    }\\n\\\n  }\\n\\\n  else {\\n\\\n    uVar1 = uVar1 / (uint)((int)ptr3 << 1);\\n\\\n    if ((uVar1 & 0xfff) < 4) {\\n\\\n      uVar1 = 4;\\n\\\n    }\\n\\\n  }\\n\\\n  ptr1 = params[8];\\n\\\n  ptr3 = params[7];\\n\\\n  ptr2[7] = uVar1;\\n\\\n  *ptr2 = (uint)ptr3 | (uint)ptr1;\\n\\\n  ptr2[2] = (uint)params[4] | (uint)params[3];\\n\\\n  ptr2[3] = (uint)params[5] | (uint)params[6];\\n\\\n  *ptr2 = *ptr2 | 1;\\n\\\n  params[0xe] = (uint *)0x0;\\n\\\n  *(undefined *)((int)params + 0x35) = 0x20;\\n\\\n  *(undefined *)((int)params + 0x36) = 0;\\n\\\n  return 0;\\n\\\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ec0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08002bf0",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "increment_and_store_at_offset_08003ec8",
                "param_1": "base_address",
                "param_2": "data",
                "*(short *)(param_1 + 0x804)": "count",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "data",
                "*(ushort *)(param_1 + 0x802)": "index",
                "*(short *)(param_1 + 0x802)": "count",
                "& 0x7ff": "& 0x7ff"
            },
            "code": "int increment_and_store_at_offset_08003ec8(int base_address, unsigned short data_offset, char data) {\n    unsigned short* index = (unsigned short*)(base_address + 0x802);\n    short* count = (short*)(base_address + 0x804);\n    *count += 1;\n    *(char*)(base_address + *index) = data;\n    *index = (*index + 1) & 0x7ff;\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "increment_and_store_at_offset_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "set_param_08002724",
                "param_1": "param_array",
                "iVar1": "param_ptr",
                "*(char *)((int)param_1 + 0x39)": "param_array[0x39]",
                "*(undefined *)(param_1 + 0xe)": "*(undefined *)(param_array + 0xe)",
                "FUN_08004e7c": "some_function",
                "*(undefined *)((int)param_1 + 0x39)": "param_array[0x39]",
                "*(uint *)(*param_1 + 0xc)": "*(uint *)(param_ptr + 0xc)",
                "FUN_080025e8": "some_other_function",
                "*param_1": "*param_array",
                "*(uint *)(iVar1 + 0x10)": "*(uint *)(param_ptr + 0x10)",
                "*(uint *)(iVar1 + 0x14)": "*(uint *)(param_ptr + 0x14)",
                "param_1[0xf]": "param_array[0xf]",
                "return 0": "return_success",
                "return 1": "return_failure"
            },
            "code": "int set_param_08002724(int *param_array)\n{\n    int param_ptr = *param_array;\n    if (param_array != NULL)\n    {\n        if (param_array[0x39] == 0)\n        {\n            *(undefined *)(param_array + 0xe) = 0;\n            FUN_08004e7c();\n        }\n        param_array[0x39] = 2;\n        *(uint *)(param_ptr + 0xc) &= 0xffffdfff;\n        FUN_080025e8(param_array);\n        *(uint *)(param_ptr + 0x10) &= 0xffffb7ff;\n        *(uint *)(param_ptr + 0x14) &= 0xffffffd5;\n        *(uint *)(param_ptr + 0xc) |= 0x2000;\n        param_array[0xf] = 0;\n        param_array[0x39] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_param_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "set_parameter_value_08003fe8",
                "param_1": "new_value",
                "PTR_DAT_08003ff0": "ptr"
            },
            "code": "void set_parameter_value_08003fe8(int new_value)\n{\n    int *PTR_DAT_08003ff0 = (int *)PTR_DAT_08003ff0;\n    int offset = 0x3c;\n    int *address = (int *)(*PTR_DAT_08003ff0 + offset);\n    *address = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_parameter_value_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "ptr",
                "uVar2": "new_block_size",
                "puVar3": "prev_ptr",
                "iVar4": "block_size_diff",
                "puVar5": "current_ptr",
                "uVar6": "diff",
                "puVar7": "free_block_ptr",
                "uVar8": "aligned_size",
                "PTR_DAT_080057cc": "free_list",
                "PTR_DAT_080057c8": "free_list_head"
            },
            "code": "uint allocate_memory_block_08005714(undefined4 *result, uint size)\n{\n  uint aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    void *PTR_DAT_080057cc = PTR_DAT_080057cc;\n    uint **prev_ptr = *(uint ***)PTR_DAT_080057c8;\n    uint **current_ptr = *(uint ***)PTR_DAT_080057c8;\n    while (current_ptr != (uint **)0x0) {\n      uint diff = *current_ptr - aligned_size;\n      if (-1 < (int)diff) {\n        if (diff < 0xc) {\n          if (prev_ptr == current_ptr) {\n            uint next_block_size = prev_ptr[1];\n            *(uint ***)PTR_DAT_080057c8 = (uint **)next_block_size;\n          }\n          else {\n            uint next_block_size = current_ptr[1];\n          }\n          if (prev_ptr != current_ptr) {\n            prev_ptr[1] = next_block_size;\n            prev_ptr = current_ptr;\n          }\n        }\n        else {\n          *current_ptr = diff;\n          *(uint *)((int)current_ptr + diff) = aligned_size;\n          prev_ptr = (uint **)((int)current_ptr + diff);\n        }\n        goto LAB_08005778;\n      }\n      prev_ptr = current_ptr;\n      current_ptr = (uint **)*current_ptr[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint new_block_size = FUN_0800581c(result);\n      *(undefined4 *)PTR_DAT_080057cc = new_block_size;\n    }\n    current_ptr = (uint **)FUN_0800581c(result,aligned_size);\n    if ((current_ptr != (uint **)0xffffffff) &&\n       ((prev_ptr = (uint **)((int)current_ptr + 3U & 0xfffffffc), current_ptr == prev_ptr ||\n        (int block_size_diff = FUN_0800581c(result,(int)prev_ptr - (int)current_ptr), block_size_diff != -1)))) {\n      *prev_ptr = aligned_size;\nLAB_08005778:\n      do_nothing_0800583e(result);\n      uint block_end = (int)prev_ptr + 0xbU & 0xfffffff8;\n      int padding_size = block_end - (int)(prev_ptr + 1);\n      if (padding_size != 0) {\n        *(int *)((int)prev_ptr + padding_size) = -padding_size;\n        return block_end;\n      }\n      return block_end;\n    }\n    *result = 0xc;\n    do_nothing_0800583e(result);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "ptr_callback",
                "iVar2": "num_callbacks",
                "iVar3": "i",
                "PTR_DAT_08004fec": "PTR_FUNCTION_START",
                "PTR_DAT_08004ff0": "PTR_FUNCTION_END",
                "do_nothing_080072d4": "do_nothing",
                "PTR_DAT_08004ff4": "PTR_CALLBACK_START",
                "PTR_DAT_08004ff8": "PTR_CALLBACK_END"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  int num_functions = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (int i = 0; i < num_functions >> 2; i++) {\n    (**(code **)(PTR_DAT_08004fec + i * 4))();\n  }\n  do_nothing();\n  int num_callbacks = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (int i = 0; i < num_callbacks >> 2; i++) {\n    (**(code **)(PTR_DAT_08004ff4 + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "process_data_080043f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "local_10": "ptr_data_1",
                "uStack_c": "ptr_data_2",
                "auStack_8": "stack_data"
            },
            "code": "void process_data_080043f0(undefined4 arg1, undefined4 arg2, undefined4 arg3)\n{\n  undefined4 ptr_data_1;\n  undefined4 ptr_data_2;\n  undefined4 stack_data[2];\n\n  ptr_data_1 = *(undefined4 *)PTR_DAT_0800440c;\n  ptr_data_2 = *(undefined4 *)(PTR_DAT_0800440c + 4);\n  stack_data[0] = arg3;\n  function_08004300(0x68, &ptr_data_1, 8, stack_data);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "calculate_hash_08000428",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "sign_bit",
                "uVar2": "temp_input",
                "uVar3": "hash",
                "uVar4": "shift_bits",
                "uVar5": "shift_input",
                "uVar7": "shift_amount",
                "iVar6": "num_leading_zeros",
                "bVar8": "is_zero_shift_amount_2",
                "bVar9": "is_negative_shift_amount_2",
                "bVar10": "is_negative_shift_amount",
                "mask": "mask"
            },
            "code": "ulonglong calculate_hash_08000428(uint input, undefined4 param_2, undefined4 param_3, uint param_4)\n{\n  uint shift_input = input << 1;\n  bool is_zero = shift_input == 0;\n  uint sign_bit = (uint)((input & 0x80000000) != 0) << 0x1f;\n  uint shift_bits = (uint)((int)shift_input >> 3) >> 1;\n  uint hash = sign_bit | shift_bits;\n  input = input << 0x1d;\n  if (!is_zero) {\n    uint mask = shift_input & 0xff000000;\n    is_zero = mask == 0;\n  }\n  if (!is_zero) {\n    is_zero = mask == 0xff000000;\n  }\n  if (!is_zero) {\n    return CONCAT44(hash,input) ^ 0x3800000000000000;\n  }\n  if (shift_input == 0 || mask == 0xff000000) {\n    return CONCAT44(hash,input);\n  }\n  uint temp_input = input;\n  shift_input = shift_bits;\n  if (shift_bits == 0) {\n    temp_input = 0;\n    shift_input = input;\n  }\n  int num_leading_zeros = count_leading_zeroes(shift_input);\n  if (shift_bits == 0) {\n    num_leading_zeros = num_leading_zeros + 0x20;\n  }\n  uint shift_amount = num_leading_zeros - 0xb;\n  bool is_negative_shift_amount = SBORROW4(shift_amount,0x20);\n  uint shift_amount_2 = num_leading_zeros - 0x2b;\n  bool is_negative_shift_amount_2 = (int)shift_amount_2 < 0;\n  bool is_zero_shift_amount_2 = shift_amount_2 == 0;\n  if ((int)shift_amount < 0x20) {\n    is_negative_shift_amount = SCARRY4(shift_amount,0xc);\n    num_leading_zeros = num_leading_zeros + -0x1f;\n    is_negative_shift_amount_2 = num_leading_zeros < 0;\n    is_zero_shift_amount_2 = num_leading_zeros == 0;\n    shift_amount = shift_amount_2;\n    if (!is_zero_shift_amount_2 && is_negative_shift_amount_2 == is_negative_shift_amount) {\n      temp_input = shift_input << (shift_amount & 0xff);\n      shift_input = shift_input >> (0xcU - num_leading_zeros & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_zero_shift_amount_2 || is_negative_shift_amount_2 != is_negative_shift_amount) {\n    uint shift_amount_3 = 0x20 - shift_amount;\n    shift_input = shift_input << (shift_amount & 0xff);\n    if (is_zero_shift_amount_2 || is_negative_shift_amount_2 != is_negative_shift_amount) {\n      shift_input = shift_input | temp_input >> (shift_amount_3 & 0xff);\n    }\n    if (is_zero_shift_amount_2 || is_negative_shift_amount_2 != is_negative_shift_amount) {\n      temp_input = temp_input << (shift_amount & 0xff);\n    }\n  }\nLAB_080002f0:\n  if ((int)shift_amount < 0x381) {\n    return CONCAT44(shift_input + (0x380 - shift_amount) * 0x100000 | sign_bit,temp_input);\n  }\n  uint shift_amount_4 = ~(0x380 - shift_amount);\n  if ((int)shift_amount_4 < 0x1f) {\n    int shift_amount_5 = shift_amount_4 - 0x13;\n    if (shift_amount_5 != 0 && shift_amount_5 < 0 == SCARRY4(shift_amount_4 - 0x1f,0xc)) {\n      return CONCAT44(hash,temp_input >> (0x20 - (0xcU - shift_amount_5) & 0xff) | shift_input << (0xcU - shift_amount_5 & 0xff)) & 0x80000000ffffffff;\n    }\n    shift_amount_4 = shift_amount_4 + 1;\n    return CONCAT44(sign_bit | shift_input >> (shift_amount_4 & 0xff),temp_input >> (shift_amount_4 & 0xff) | shift_input << (0x20 - shift_amount_4 & 0xff));\n  }\n  return CONCAT44(hash,shift_input >> (shift_amount_4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "set_bit_and_call_funcs_08004ccc",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "iVar1": "data_address",
                "uVar2": "bit_mask",
                "uVar3": "masked_bit"
            },
            "code": "void set_bit_and_call_funcs_08004ccc(int param1, int param2, int param3)\n{\n  int data_address = DAT_08004d44;\n  uint bit_mask = *(uint *)(DAT_08004d44 + 0x18) | 1;\n  *(uint *)(DAT_08004d44 + 0x18) = bit_mask;\n  uint masked_bit = *(uint *)(data_address + 0x18) & 1;\n  FUN_08001170(3, param2, bit_mask, masked_bit, param1, masked_bit, param3);\n  FUN_08001194(0xfffffff4, 0);\n  FUN_08001194(0xfffffff5, 0);\n  FUN_08001194(0xfffffff6, 0);\n  FUN_08001194(0xfffffffb, 0);\n  FUN_08001194(0xfffffffc, 0);\n  FUN_08001194(0xfffffffe, 0);\n  FUN_08001194(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_bit_and_call_funcs_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "calculate_float_bits_08000a30",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "result",
                "uVar2": "shifted_mantissa",
                "uVar3": "biased_exponent",
                "in_r12": "temp",
                "bVar4": "is_zero",
                "bVar5": "is_small",
                "SCARRY4": "SCARRY4",
                "PTR_DAT_08003000": "PTR_DAT_08003000",
                "PTR_FUN_08000a20": "PTR_FUN_08000a20",
                "PTR_FUN_08000a28": "PTR_FUN_08000a28"
            },
            "code": "uint calculate_float_bits_08000a30(uint exponent, uint mantissa) {\n  uint shifted_mantissa = mantissa * 2;\n  bool is_small = shifted_mantissa < 0x70000000;\n  uint biased_exponent = shifted_mantissa + 0x90000000;\n  uint result = biased_exponent;\n  if (!is_small) {\n    biased_exponent = shifted_mantissa + 0x8fe00000;\n    result = biased_exponent;\n  }\n  bool is_zero = result == 0;\n  if (!is_small && biased_exponent >= 0x200000) {\n    is_zero = biased_exponent == 0x1fc00000;\n  }\n  if (((is_small || biased_exponent < 0x200000) || 0x1fc00000 < biased_exponent) || is_zero) {\n    if ((mantissa & 0x40000000) != 0) {\n      if (((int)shifted_mantissa >> 0x15 == -1) && ((exponent | mantissa << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return mantissa & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shifted_mantissa + 0x92e00000) < 0 != SCARRY4(biased_exponent,0x2e00000)) {\n      return mantissa & 0x80000000;\n    }\n    uint shift_amount = 0x18 - (shifted_mantissa + 0x92e00000 >> 0x15);\n    uint normalized_mantissa = exponent >> (shift_amount & 0xff);\n    if (exponent << (0x20 - shift_amount & 0xff) != 0) {\n      normalized_mantissa = normalized_mantissa | 1;\n    }\n    biased_exponent = mantissa & 0x1fffff | 0x100000;\n    exponent = normalized_mantissa | biased_exponent << (0x20 - shift_amount & 0xff);\n    biased_exponent = (biased_exponent >> (shift_amount & 0xff)) << 1;\n  }\n  result = (mantissa & 0x80000000 | exponent >> 0x1d) + biased_exponent * 4 + (uint)(0x7fffffff < exponent * 8);\n  if (exponent * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_float_bits_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "process_data_080023d0",
                "*param_1": "data",
                "(undefined4 *)0x0": "NULL",
                "*(char *)((int)param_1 + 0x39)": "data[9]",
                "*(undefined *)((int)param_1 + 0x39)": "data[9]",
                "*(undefined *)(param_1 + 0xe)": "data[14]",
                "FUN_08004d8c": "execute_function"
            },
            "code": "int process_data_080023d0(int* data)\n{\n    if (data != NULL)\n    {\n        if (data[9] == 0)\n        {\n            data[14] = 0;\n            execute_function();\n        }\n        data[9] = 2;\n        process_data_080023d0(data[0], data+1);\n        data[9] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "validate_input_08004c30",
                "param_1": "input",
                "puVar1": "data_ptr",
                "puVar2": "config_ptr",
                "uVar3": "flag",
                "uVar4": "var",
                "iVar5": "data_ptr_int"
            },
            "code": "int *validate_input_08004c30(int *input)\n{\n  unsigned char *data_ptr = PTR_DAT_08004c58;\n  if (*input != DAT_08004c54) {\n    return input;\n  }\n  FUN_08003ec8(PTR_DAT_08004c5c,*PTR_DAT_08004c58);\n  unsigned char *config_ptr = PTR_DAT_08004c60;\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12')) {\n    if (data_ptr == (unsigned char *)0x0) {\n      return (int *)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(int *)(config_ptr + 0x3c) = 0;\n      *(short *)(config_ptr + 0x2c) = 1;\n      *(short *)(config_ptr + 0x2e) = 1;\n      config_ptr[0x38] = 0;\n      unsigned char flag = 0x22;\n      if (config_ptr[0x39] == '\\x12') {\n        flag = 0x32;\n      }\n      int *data_ptr_int = (int *)data_ptr;\n      config_ptr[0x39] = flag;\n      unsigned int var = *(unsigned int *)(data_ptr_int + 3);\n      *(unsigned char **)(config_ptr + 0x28) = data_ptr;\n      *(unsigned int *)(data_ptr_int + 3) = var | 0x100;\n      *(unsigned int *)(data_ptr_int + 5) = *(unsigned int *)(data_ptr_int + 5) | 1;\n      *(unsigned int *)(data_ptr_int + 3) = *(unsigned int *)(data_ptr_int + 3) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "validate_input_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "set_param_in_global_data_structure_08003fdc",
                "param_1": "new_param",
                "PTR_DAT_08003fe4": "global_data_structure_ptr"
            },
            "code": "void set_param_in_global_data_structure_08003fdc(int new_param) {\n    int* global_ptr = *(int*)PTR_DAT_08003fe4;\n    int offset = 0x38;\n    *(int*)(global_ptr + offset) = new_param;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_in_global_data_structure_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "isEndOfString_080009f0",
                "in_CY": "currentChar"
            },
            "code": "bool isEndOfString_080009f0(void)\n{\n  char currentChar;\n  FUN_08000980();\n  return currentChar == '\\0';\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "isEndOfString_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "set_flags_and_values_08004f10",
                "DAT_08004f50": "flags",
                "DAT_08004f54": "values",
                "puVar1": "flag_ptr"
            },
            "code": "void set_flags_and_values_08004f10(void)\n{\n  uint *flag_ptr;\n  flag_ptr = DAT_08004f50;\n  *DAT_08004f50 |= 1;\n  flag_ptr[1] = DAT_08004f54[1] & DAT_08004f50[1];\n  *flag_ptr &= 0xfef6ffff;\n  *flag_ptr &= 0xfffbffff;\n  flag_ptr[1] &= 0xff80ffff;\n  flag_ptr[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f54 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "allocate_memory_08005044",
                "param_1": "memory_pointer",
                "param_2": "parameters",
                "param_3": "data",
                "param_4": "size",
                "iVar1": "new_memory_pointer",
                "iVar4": "offset",
                "uVar2": "required_size",
                "uVar3": "minimum_size",
                "flag": "flag"
            },
            "code": "uint32_t allocate_memory_08005044(uint32_t *memory_pointer, int *parameters, uint32_t data, uint32_t size)\n{\n    int offset = parameters[0] - parameters[4];\n    uint32_t minimum_size = (uint32_t)(parameters[5] * 3) / 2;\n    uint32_t required_size = size + 1 + offset;\n    if (minimum_size < required_size)\n    {\n        minimum_size = required_size;\n    }\n    uint16_t flag = *(uint16_t *)(parameters + 3);\n    if ((int)(flag << 0x15) < 0)\n    {\n        uint32_t new_memory_pointer = allocate_heap_memory(memory_pointer, minimum_size);\n        if (new_memory_pointer == 0)\n        {\n            *memory_pointer = 0xc;\n            *(uint16_t *)(parameters + 3) = *(uint16_t *)(parameters + 3) | 0x40;\n            return 0xffffffff;\n        }\n        copy_memory(new_memory_pointer, parameters[4], offset);\n        *(uint16_t *)(parameters + 3) = *(uint16_t *)(parameters + 3) & 0xfb7f | 0x80;\n        parameters[4] = new_memory_pointer;\n    }\n    else\n    {\n        uint32_t new_memory_pointer = allocate_stack_memory(memory_pointer, parameters[4], minimum_size);\n        if (new_memory_pointer == 0)\n        {\n            free_heap_memory(memory_pointer, parameters[4]);\n            *memory_pointer = 0xc;\n            *(uint16_t *)(parameters + 3) = *(uint16_t *)(parameters + 3) | 0x40;\n            return 0xffffffff;\n        }\n        parameters[4] = new_memory_pointer;\n    }\n    parameters[5] = minimum_size;\n    parameters[0] = parameters[4] + offset;\n    parameters[2] = minimum_size - offset;\n    if (size <= parameters[2])\n    {\n        parameters[2] = parameters[2] - size;\n        parameters[0] = size + parameters[0];\n        copy_memory(*memory_pointer, data, size);\n    }\n    else\n    {\n        copy_memory(*memory_pointer, data, parameters[2]);\n        parameters[2] = 0;\n        parameters[0] = parameters[5] + parameters[4];\n    }\n    return 0;\n}",
            "called": [
                "FUN_08005630",
                "FUN_080057d0",
                "FUN_0800567c",
                "FUN_08005646",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initialize_data_values_08004194",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "uVar5": "val1",
                "uVar6": "val2",
                "uVar7": "val3",
                "uVar8": "val4"
            },
            "code": "void initialize_data_values_08004194(void)\n{\n  unsigned int *ptr1;\n  unsigned int *ptr2;\n  unsigned int *ptr3;\n  unsigned int *ptr4;\n  unsigned int val1;\n  unsigned int val2;\n  unsigned int val3;\n  unsigned int val4;\n  \n  initialize_function1();\n  initialize_function2();\n  initialize_function3();\n  initialize_function4();\n  \n  ptr3 = PTR_DAT_080049f0;\n  ptr2 = PTR_DAT_080049ec;\n  ptr1 = PTR_DAT_080049e8;\n  *(unsigned int *)(PTR_DAT_080049ec + 0x4c) = 1;\n  *(unsigned int *)(ptr1 + 0x4c) = 1;\n  *(unsigned int *)(ptr3 + 0x4c) = 0xffffffff;\n  val1 = DAT_080049f8;\n  ptr4 = PTR_DAT_080049f4;\n  *(unsigned int *)(PTR_DAT_080049f4 + 0x4c) = 1;\n  val2 = DAT_08004a00;\n  *(unsigned int *)(ptr2 + 0x20) = DAT_080049fc;\n  val3 = DAT_08004a08;\n  *(unsigned int *)(ptr1 + 0x20) = DAT_08004a04;\n  *(unsigned int *)(ptr3 + 0x20) = DAT_08004a0c;\n  *(unsigned int *)(ptr4 + 0x20) = 0;\n  *(unsigned int *)(ptr2 + 4) = val1;\n  val1 = DAT_08004a10;\n  *(unsigned int *)(ptr2 + 8) = DAT_08004a10;\n  *(unsigned int *)(ptr2 + 0xc) = val2;\n  *(unsigned int *)(ptr2 + 0x10) = val3;\n  val3 = DAT_08004a14;\n  *(unsigned int *)(ptr2 + 0x14) = val1;\n  *(unsigned int *)(ptr2 + 0x18) = val3;\n  val4 = DAT_08004a1c;\n  val3 = DAT_08004a18;\n  *(unsigned int *)(ptr1 + 4) = DAT_08004a18;\n  *(unsigned int *)(ptr1 + 8) = val1;\n  *(unsigned int *)(ptr1 + 0xc) = val4;\n  *(unsigned int *)(ptr1 + 0x10) = val3;\n  val3 = DAT_08004a20;\n  *(unsigned int *)(ptr1 + 0x14) = val1;\n  *(unsigned int *)(ptr1 + 0x18) = val3;\n  *(unsigned int *)(ptr3 + 4) = DAT_08004a24;\n  *(unsigned int *)(ptr3 + 8) = DAT_08004a28;\n  *(unsigned int *)(ptr3 + 0xc) = val2;\n  *(unsigned int *)(ptr3 + 0x10) = 0;\n  *(unsigned int *)(ptr3 + 0x14) = 0;\n  *(unsigned int *)(ptr3 + 0x18) = 0;\n  *(unsigned int *)(ptr4 + 4) = DAT_08004a2c;\n  *(unsigned int *)(ptr4 + 8) = 0;\n  *(unsigned int *)(ptr4 + 0xc) = 0;\n  *(unsigned int *)(ptr4 + 0x10) = 0;\n  *(unsigned int *)(ptr4 + 0x14) = 0;\n  *(unsigned int *)(ptr4 + 0x18) = 0;\n  return;\n}",
            "called": [
                "FUN_08004028",
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "initialize_data_values_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "set_flag_08001240",
                "param_1": "flag_value",
                "uVar1": "new_flag_value",
                "*DAT_08001254": "flag_ptr"
            },
            "code": "void set_flag_08001240(int flag_value) {\n  uint32_t **DAT_08001254 = DAT_08001254;\n  if (flag_value == 4) {\n    **DAT_08001254 |= 4;\n  }\n  else {\n    **DAT_08001254 &= 0xfffffffb;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "set_flag_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_sum_08005840",
                "param_1": "start_index",
                "param_2": "array",
                "iVar1": "sum"
            },
            "code": "int calculate_sum_08005840(int start_index, int* array) {\n  int sum = array[start_index - 1] - 4;\n  if (array[start_index - 1] < 0) {\n    sum += array[start_index + sum];\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_sum_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "param_1": "input_string",
                "pcVar3": "current_pointer",
                "pcVar2": "next_pointer",
                "cVar1": "current_character"
            },
            "code": "char* find_end_of_string_08000150(char* input_string) {\n  char current_character;\n  char* current_pointer = input_string;\n  do {\n    current_pointer++;\n    current_character = *current_pointer;\n  } while (current_character != '\\0');\n  return current_pointer + (-1 - (int)input_string);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "find_end_of_string_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "leading_zeroes_count_and_call_functions_08003f3c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "data",
                "uVar2": "count_1, count_2, count_3, shift_1, shift_2, shift_3"
            },
            "code": "void leading_zeroes_count_and_call_functions_08003f3c(uint32_t input_1, uint32_t input_2, uint32_t input_3)\n{\n  uint32_t data = DAT_08003f78;\n  uint32_t count_1 = count_leading_zeroes(input_1);\n  uint32_t count_2 = count_leading_zeroes(input_2);\n  uint32_t count_3 = count_leading_zeroes(input_3);\n  uint32_t shift_1 = count_1 >> 5;\n  uint32_t shift_2 = count_2 >> 5;\n  uint32_t shift_3 = count_3 >> 5;\n  FUN_08001424(data, 0x8000, shift_1);\n  FUN_08001424(data, 0x4000, shift_2);\n  FUN_08001424(data, 0x2000, shift_3);\n}\n",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "leading_zeroes_count_and_call_functions_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_value_from_pointer_08002214",
                "PTR_DAT_0800221c": "PTR_DATA"
            },
            "code": "int get_value_from_pointer_08002214() {\n    int* pointer_to_value = (int*)PTR_DAT_0800221c;\n    return *pointer_to_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "concatenate_08001004",
                "param_1": "param1",
                "param_2": "param2",
                "FUN_08000f9c": "call_function",
                "CONCAT44": "bitwise_concatenate"
            },
            "code": "uint64_t concatenate_08001004(uint32_t param1, uint32_t param2)\n{\n    call_function();\n    return ((uint64_t)param2 << 32) | param1;\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001014",
                "FUN_08000ffc",
                "FUN_08001028"
            ],
            "imported": false,
            "current_name": "concatenate_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4",
                "puVar1": "data_ptr",
                "PTR_DAT_0800401c": "data_pointer_1",
                "PTR_DAT_08004020": "data_pointer_2",
                "PTR_DAT_08004024": "data_pointer_3",
                "FUN_08002538": "write_data"
            },
            "code": "void initialize_data_08003ff4(void)\n{\n  undefined *data_ptr;\n  data_ptr = PTR_DAT_0800401c;\n  write_data(PTR_DAT_08004020, 4);\n  write_data(PTR_DAT_08004024, 8);\n  write_data(data_ptr, 8);\n  write_data(data_ptr, 0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "initialize_data_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "start_application_080041ae",
                "FUN_08003eb0": "initialize_data",
                "FUN_08004194": "display_welcome_message",
                "FUN_0800114c": "get_user_input",
                "FUNC_0800411c": "process_user_input"
            },
            "code": "void start_application_080041ae(void)\n{\n  initialize_data(0);\n  display_welcome_message();\n  do {\n    get_user_input();\n    process_user_input();\n  } while( true );\n}",
            "called": [
                "FUN_08003eb0",
                "FUN_0800411c",
                "FUN_0800114c",
                "FUN_08004194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "start_application_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "set_flag_and_call_functions_08001128",
                "FUN_08001170": "call_function_with_param_3",
                "FUN_08001104": "call_function_with_param_1",
                "FUN_08004ccc": "call_function_at_address_08004ccc",
                "DAT_08001148": "flag_ptr"
            },
            "code": "int set_flag_and_call_functions_08001128(void)\n{\n  int* DAT_08001148 = DAT_08001148;\n  *DAT_08001148 |= 0x10;\n  call_function_with_param_3(3);\n  call_function_with_param_1(0);\n  call_function_at_address_08004ccc();\n  return 0;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "initialize_peripherals_08004514",
                "iVar1": "peripheral_init_success",
                "uVar2": "wait_time_in_ms",
                "uVar3": "peripheral_id",
                "iVar4": "peripheral_index",
                "local_44": "peripheral_address_index",
                "local_40": "peripheral_count",
                "local_3c": "peripheral_status",
                "local_38": "peripheral_base_address",
                "local_34": "peripheral_id",
                "local_30": "peripheral_address",
                "local_20": "peripheral_base_address",
                "local_1c": "peripheral_divisor",
                "local_14": "peripheral_address[1]",
                "local_10": "peripheral_address[0]",
                "local_c": "peripheral_address[2]"
            },
            "code": "void initialize_peripherals_08004514(void)\n{\n  int peripheral_init_success;\n  uint32_t wait_time_in_ms;\n  uint32_t peripheral_id;\n  uint32_t peripheral_count;\n  uint32_t peripheral_status;\n  uint32_t peripheral_index;\n  uint32_t peripheral_address[4];\n  uint32_t peripheral_address_index;\n  uint32_t peripheral_base_address;\n  uint32_t peripheral_divisor;\n  peripheral_base_address = 1;\n  peripheral_divisor = 0x10;\n  peripheral_index = 2;\n  peripheral_address[0] = 2;\n  peripheral_address[1] = 2;\n  peripheral_address[2] = 0x380000;\n  peripheral_init_success = initialize_peripheral_addresses(peripheral_address);\n  if (peripheral_init_success == 0) goto LAB_08004540;\n  wait_time_in_ms = 0x3c;\n  while (true) {\n    peripheral_status = check_peripheral_status(PTR_s____Src_peripherals_c_08004588, wait_time_in_ms);\nLAB_08004540:\n    peripheral_address_index = 0xf;\n    peripheral_base_address = 0x400;\n    peripheral_count = peripheral_index;\n    peripheral_id = peripheral_status;\n    peripheral_status = peripheral_id;\n    peripheral_index = calculate_peripheral_index(&peripheral_address_index, peripheral_index);\n    if (peripheral_index == 0) break;\n    wait_time_in_ms = 0x49;\n  }\n  wait_time_in_ms = get_elapsed_time_in_ms();\n  set_led_state(wait_time_in_ms / 1000);\n  set_peripheral_status(peripheral_status);\n  set_error_status(0xffffffff, 0, 0);\n  return;\n}",
            "called": [
                "FUN_0800209c",
                "FUN_08002214",
                "FUN_08001240",
                "FUN_08001b58",
                "FUN_08001194",
                "FUN_08004490",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_peripherals_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "initialize_system_08004a84",
                "FUN_08002ec0": "get_system_parameter_1",
                "FUN_08002ed4": "get_system_parameter_2",
                "FUN_08002ee8": "get_system_parameter_3",
                "FUN_08004a30": "handle_subsystem_initialization",
                "FUN_08001064": "is_subsystem_initialized",
                "FUN_08001028": "initialize_subsystem_1_default",
                "FUN_08003f3c": "handle_system_initialization_error",
                "FUN_0800483c": "initialize_subsystem",
                "FUNC_08000adc": "initialize_subsystem_1",
                "FUNC_08000cec": "initialize_subsystem",
                "DAT_08004bfc": "subsystem_1_initialized",
                "DAT_08004c00": "subsystem_2_initialized",
                "DAT_08004c04": "subsystem_3",
                "DAT_08004c08": "subsystem_4",
                "DAT_08004c0c": "subsystem_5",
                "DAT_08004c10": "subsystem_6"
            },
            "code": "void initialize_system_08004a84(void)\n{\n  // Get system parameters\n  int system_parameter_1 = get_system_parameter_1();\n  int system_parameter_2 = get_system_parameter_2();\n  int system_parameter_3 = get_system_parameter_3();\n\n  // Initialize subsystems\n  initialize_subsystem_1(system_parameter_1);\n  initialize_subsystem_2(system_parameter_2);\n  initialize_DAT_08004c04(system_parameter_3);\n\n  // Check subsystem initialization\n  int DAT_08004bfc = is_subsystem_initialized(subsystem_1);\n  if (DAT_08004bfc == 0) {\n    initialize_subsystem_1_default();\n  }\n\n  int DAT_08004c00 = is_subsystem_initialized(subsystem_2);\n  if (DAT_08004c00 == 0) {\n    initialize_subsystem_2_default();\n  }\n\n  // Check system initialization\n  int system_initialized = is_system_initialized();\n  if (system_initialized == 0) {\n    handle_system_initialization_error();\n    return;\n  }\n\n  // Initialize remaining subsystems\n  initialize_DAT_08004c08();\n  initialize_DAT_08004c0c();\n  initialize_DAT_08004c10();\n  initialize_subsystem_7();\n  initialize_subsystem_8();\n  initialize_subsystem_9();\n  initialize_subsystem_10();\n  initialize_subsystem_11();\n  initialize_subsystem_12();\n  initialize_subsystem_13();\n  initialize_subsystem_14();\n  initialize_subsystem_15();\n}\n",
            "called": [
                "FUN_0800483c",
                "FUN_08002ec0",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_08003f3c",
                "FUN_08004a30",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080041c4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_system_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "initialize_data_section_080041c4",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_08003fc4": "initialize_function1",
                "FUN_08003fd0": "initialize_function2",
                "FUN_08003fdc": "initialize_function3",
                "FUN_08003fe8": "initialize_function4",
                "extraout_r1": "extraout_r1"
            },
            "code": "void initialize_data_section_080041c4(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4) {\n  undefined4 extraout_r1;\n  initialize_function1(0);\n  initialize_function2(0);\n  initialize_function3(0);\n  initialize_function4(0, extraout_r1, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "initialize_data_section_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = FUN_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "calculate_result_080057d0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "result",
                "uVar2": "min_val",
                "FUN_0800567c": "print_success",
                "FUN_08005840": "find_min_val",
                "FUN_08005714": "perform_calculation",
                "FUN_08005630": "print_result"
            },
            "code": "uint calculate_result_080057d0(undefined4 arg1, uint arg2, uint arg3, undefined4 arg4)\n{\n  uint result;\n  uint min_val;\n  if (arg2 != 0) {\n    if (arg3 == 0) {\n      print_error();\n      result = arg3;\n    }\n    else {\n      min_val = find_min_val();\n      result = arg2;\n      if ((min_val < arg3) && (result = perform_calculation(arg1, arg3), result != 0)) {\n        print_result(result, arg2, arg3);\n        print_success(arg1, arg2);\n      }\n    }\n    return result;\n  }\n  result = perform_calculation(arg1, arg3, arg3, arg4);\n  return result;\n}",
            "called": [
                "FUN_08005630",
                "FUN_08005840",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "calculate_result_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "add_to_linked_list_0800567c",
                "param_1": "new_node",
                "param_2": "num_nodes",
                "param_3": "unused1",
                "param_4": "unused2",
                "puVar1": "ptr_to_head_ptr",
                "extraout_r1": "next_node_ptr",
                "ppiVar2": "next_node_ptr",
                "ppiVar3": "prev_node_ptr",
                "piVar4": "last_node",
                "ppiVar5": "head_node_ptr",
                "ppiVar6": "current_node_ptr",
                "ppiVar7": "last_node_ptr"
            },
            "code": "void add_to_linked_list_0800567c(int *new_node, int num_nodes, int unused1, int unused2)\n{\n    if (num_nodes == 0) {\n        return;\n    }\n    int **last_node_ptr = (int **)(num_nodes - 4);\n    if (*last_node_ptr < 0) {\n        last_node_ptr = (int **)((int)last_node_ptr + *(*last_node_ptr - 4));\n    }\n    do_nothing_0800583c();\n    int **head_node_ptr = *(int ***)HEAD_PTR;\n    if (head_node_ptr == NULL) {\n        last_node_ptr[1] = NULL;\n        *(int ***)HEAD_PTR = last_node_ptr;\n        int **next_node_ptr = extraout_r1;\n        int **prev_node_ptr = (int **)HEAD_PTR;\n    }\n    else if (last_node_ptr < head_node_ptr) {\n        int **next_node_ptr = (int **)*last_node_ptr;\n        int **prev_node_ptr = (int **)((int)last_node_ptr + (int)next_node_ptr);\n        if (head_node_ptr == prev_node_ptr) {\n            int *last_node = *head_node_ptr;\n            head_node_ptr = (int **)head_node_ptr[1];\n            prev_node_ptr = (int **)((int)last_node + (int)next_node_ptr);\n            *last_node_ptr = (int *)prev_node_ptr;\n        }\n        last_node_ptr[1] = (int *)head_node_ptr;\n        *(int ***)HEAD_PTR = last_node_ptr;\n    }\n    else {\n        int **current_node_ptr = head_node_ptr;\n        while (current_node_ptr[1] != NULL && current_node_ptr[1] <= last_node_ptr) {\n            current_node_ptr = current_node_ptr[1];\n        }\n        int **next_node_ptr = (int **)*current_node_ptr;\n        if ((int **)((int)current_node_ptr + (int)next_node_ptr) == last_node_ptr) {\n            next_node_ptr = (int **)((int)next_node_ptr + (int)*last_node_ptr);\n            *current_node_ptr = (int *)next_node_ptr;\n            if (current_node_ptr[1] == (int **)((int)current_node_ptr + (int)next_node_ptr)) {\n                int *last_node = *current_node_ptr[1];\n                current_node_ptr[1] = (int **)last_node[1];\n                next_node_ptr = (int **)((int)next_node_ptr + (int)last_node);\n                *current_node_ptr = (int *)next_node_ptr;\n            }\n        }\n        else if (last_node_ptr < (int **)((int)current_node_ptr + (int)next_node_ptr)) {\n            *new_node = 12;\n        }\n        else {\n            next_node_ptr = (int **)((int)last_node_ptr + (int)*last_node_ptr);\n            if (current_node_ptr[1] == next_node_ptr) {\n                int *last_node = *current_node_ptr[1];\n                current_node_ptr[1] = (int **)last_node[1];\n                next_node_ptr = (int **)((int)last_node + (int)*last_node_ptr);\n                *current_node_ptr = (int *)next_node_ptr;\n            }\n            last_node_ptr[1] = (int *)current_node_ptr[1];\n            current_node_ptr[1] = (int **)last_node_ptr;\n        }\n    }\n    do_nothing_0800583e(new_node, next_node_ptr, prev_node_ptr, unused2);\n    return;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "add_to_linked_list_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  FUN_08001128();\n  FUN_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  FUN_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  FUN_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = FUN_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = FUN_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = FUN_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = FUN_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = FUN_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = FUN_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = FUN_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        FUN_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = FUN_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = FUN_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = FUN_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  FUN_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = FUN_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = FUN_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = FUN_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = FUN_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          FUN_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = FUN_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = FUN_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = FUN_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = FUN_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  FUN_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08001754",
                "FUN_080025a4",
                "FUN_0800245c",
                "FUN_080023d0",
                "FUN_08002564",
                "FUN_08001128",
                "FUN_08004490",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08002724",
                "FUN_08001424"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08004fb4",
                "FUN_08000110",
                "FUN_08000134"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "swap_parameters_and_call_function_08000ffc",
                "param_1": "first_param",
                "param_2": "second_param",
                "FUN_08001004": "call_function_with_swapped_params"
            },
            "code": "void swap_parameters_and_call_function_08000ffc(int second_param, int first_param)\n{\n  call_function_with_swapped_params(first_param, second_param);\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "imported": false,
            "current_name": "swap_parameters_and_call_function_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_permissions_080016f4",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "start_time",
                "iVar2": "current_data"
            },
            "code": "int check_permissions_080016f4(int *data, uint32_t size) {\n  int start_time = get_start_time();\n  while (true) {\n    int current_data = *data;\n    if ((*(uint32_t *)(current_data + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(current_data + 0x14) << 0x1b < 0) {\n      if ((size == 0) || (int elapsed_time = get_elapsed_time(start_time), size < (uint32_t)(elapsed_time - start_time))) {\n        data[14] |= 0x20;\n        *(undefined *)((int)data + 0x35) = 0x20;\n        *(undefined *)(data + 13) = 0;\n        return 3;\n      }\n    }\n    else {\n      *(uint32_t *)(current_data + 0x14) = *(uint32_t *)(current_data + 0x14) & 0xffffffef;\n      data[14] = 0;\n      *(undefined *)(data + 13) = 0;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      return 1;\n    }\n  }\n}\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_permissions_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "set_flags_and_return_080025a4",
                "param_1": "flag_ptr",
                "param_2": "data_ptr",
                "uVar1": "data_0",
                "uVar2": "return_value",
                "iVar3": "flag_ptr_0",
                "uVar4": "data_1"
            },
            "code": "int set_flags_and_return_080025a4(int *flag_ptr, uint *data_ptr)\n{\n    uint data_0 = data_ptr[0];\n    uint data_1 = data_ptr[1];\n    int return_value = 2;\n\n    if (*(char *)(flag_ptr + 0xe) != '\\x01') {\n        *(undefined *)((int)flag_ptr + 0x39) = 2;\n        int flag_ptr_0 = *flag_ptr;\n        *(uint *)(flag_ptr_0 + 4) &= 0xffffff8f;\n        *(uint *)(flag_ptr_0 + 4) |= data_0;\n        *(uint *)(flag_ptr_0 + 8) &= 0xffffff7f;\n        *(uint *)(flag_ptr_0 + 8) |= data_1;\n        *(undefined *)((int)flag_ptr + 0x39) = 1;\n        return_value = 0;\n        *(undefined *)(flag_ptr + 0xe) = 0;\n    }\n    return return_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flags_and_return_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "extract_bits_08002220",
                "uVar1": "count_leading_zeroes_result",
                "PTR_DAT_0800224c": "ptr_dat_0800224c",
                "PTR_DAT_08002248": "ptr_dat_08002248",
                "DAT_08002244": "dat_08002244",
                "masked_value": "masked_value",
                "shift_value": "shift_value",
                "ptr_dat_08002248_value": "ptr_dat_08002248_value"
            },
            "code": "uint extract_bits_08002220(uint num) {\n    uint count = 0;\n    while (num != 0) {\n        num >>= 1;\n        count++;\n    }\n    return (32 - count);\n}\n\nuint extract_bits_08002220() {\n    uint extract_bits_08002220_result = extract_bits_08002220(0xe00000);\n    uint PTR_DAT_0800224c = *(uint *)PTR_DAT_0800224c;\n    uint DAT_08002244_value = *(uint *)(DAT_08002244 + 4);\n    uint masked_value = DAT_08002244_value & 0x700;\n    uint shift_value = masked_value >> (extract_bits_08002220_result & 0xff);\n    uint PTR_DAT_08002248_value = PTR_DAT_08002248[shift_value];\n    return PTR_DAT_0800224c >> PTR_DAT_08002248_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "extract_bits_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "convertSensorDataToUint32_08003034",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "local_c": "sensorData"
            },
            "code": "uint convertSensorDataToUint32_08003034(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4)\n{\n    uint32_t sensorData;\n\n    sensorData = param4;\n    convertSensorData(0xee, 0, &sensorData, 3, sensorDataArray, 0x8c, param3);\n    return (uint) CONCAT12((undefined) sensorData, CONCAT11(sensorData._1_1_, sensorData._2_1_));\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "convertSensorDataToUint32_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "set_bit_08004e7c",
                "param_1": "memory_address",
                "*param_1": "*memory_address",
                "DAT_08004edc": "TARGET_ADDRESS",
                "DAT_08004ee0": "MESSAGE_ADDRESS",
                "local_18": "value1",
                "local_14": "value2",
                "local_10": "value3",
                "local_c": "unused_variable"
            },
            "code": "void set_bit_08004e7c(int *memory_address)\n{\n  int target_value = 0x4000;\n\n  if (*memory_address == DAT_08004edc) {\n    *(unsigned int *)(DAT_08004edc + 0xd818) |= target_value;\n    int value1 = 0x200;\n    int value2 = 2;\n    int value3 = 3;\n    set_value(DAT_08004edc, &value1);\n    value1 = 0x400;\n    value2 = 0;\n    value3 = 0;\n    set_value(DAT_08004edc, &value1);\n    print_message(0x25);\n    print_message(0x25);\n  }\n  return;\n}\n",
            "called": [
                "FUN_080011fc",
                "FUN_08001194",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "set_bit_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "set_flags_08001530",
                "param_1": "flags",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "param",
                "param_5": "value",
                "iVar1": "result",
                "iVar2": "start_time",
                "puVar3": "flag_ptr",
                "ppuVar4": "flags_ptr",
                "uVar5": "flag5",
                "uVar6": "flag6"
            },
            "code": "int set_flags_08001530(uint **flags, uint flag1, uint flag2, int param, uint value) {\n  int result;\n  int start_time;\n  uint *flag_ptr;\n  uint **flags_ptr;\n  uint flag5;\n  uint flag6;\n  \n  **flags = **flags | 0x100;\n  flags_ptr = flags;\n  flag5 = flag1;\n  flag6 = flag2;\n  start_time = get_start_time();\n  do {\n    flag_ptr = *flags;\n    do {\n      if ((int)(flag_ptr[5] << 0x1f) < 0) {\n        flag_ptr[4] = flag1 & 0xfe;\n        result = set_value(flags, DAT_080015e4, value, flag_ptr, flags_ptr, flag5, flag6);\n        if (result == 0) {\n          result = set_value(flags, value, (*flags)[5], (*flags)[6]);\n          if (result == 0) {\n            flag_ptr = *flags;\n            if (param == 1) {\n              flag_ptr[4] = flag2 & 0xff;\n              return result;\n            }\n            flag_ptr[4] = flag2 >> 8;\n            result = set_value(flags, value);\n            if (result == 0) {\n              flag_ptr = *flags;\n              flag_ptr[4] = flag2 & 0xff;\n              return result;\n            }\n          }\n          if (flags[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **flags = **flags | 0x200;\n        }\n        else if (flags[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (value == 0xffffffff);\n    if ((value == 0) || (start_time = get_start_time(), value < (uint)(start_time - start_time))) {\n      *(undefined *)((int)flags + 0x35) = 0x20;\n      *(undefined *)(flags + 0xd) = 0;\n      return 3;\n    }\n  } while(true);\n}",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "set_flags_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_value_at_pointer_08003314",
                "param_1": "pointer",
                "PTR_DAT_0800331c": "pointer",
                "undefined4": "int",
                "*(undefined4 *)PTR_DAT_0800331c": "*(int*)pointer"
            },
            "code": "void set_value_at_pointer_08003314(void* PTR_DAT_0800331c, int value) {\n  *(undefined4 *)PTR_DAT_0800331c = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "set_value_at_pointer_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "FUN_08005854": "FUNC_08005854"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUNC_08005854(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined4 local_48;\n  undefined *local_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined4 local_38;\n  undefined4 uStack_34;\n  undefined8 local_30;\n  int local_28;\n  \n  uVar5 = FUNC_08005c70();\n  puVar1 = PTR_DAT_080058f8;\n  if (*PTR_DAT_080058f8 == -1) {\n    return uVar5;\n  }\n  local_28 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  if (local_28 != 0) {\n    return uVar5;\n  }\n  uVar6 = do_nothing_0800708c(param_1,param_2);\n  iVar2 = FUN_080009f0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),0,DAT_080058ec);\n  if (iVar2 == 0) {\n    return uVar5;\n  }\n  local_48 = 1;\n  local_44 = PTR_DAT_080058f0;\n  local_40 = param_1;\n  uStack_3c = param_2;\n  local_38 = param_1;\n  uStack_34 = param_2;\n  local_30 = FUN_080070a4(PTR_DAT_080058f4);\n  if (*puVar1 != '\\x02') {\n    iVar2 = FUN_0800709e(&local_48);\n    if (iVar2 != 0) goto LAB_080058d0;\n  }\n  puVar3 = (undefined4 *)FUN_080072ac();\n  *puVar3 = 0x21;\nLAB_080058d0:\n  if (local_28 != 0) {\n    piVar4 = (int *)FUN_080072ac();\n    *piVar4 = local_28;\n  }\n  return local_30;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080070a4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "FUNC_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "check_input_not_null_08001014",
                "in_ZR": "input_char",
                "FUN_08001004": "call_function_to_initialize_input"
            },
            "code": "bool check_input_not_null_08001014() {\n  char input_char;\n  call_function_to_initialize_input();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "check_input_not_null_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_result_080071c0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "shifted_second_param",
                "iVar2": "shifted_param",
                "uVar3": "ptr_dat_08007280",
                "uVar4": "ptr_dat_08007284",
                "uVar5": "upper_bits",
                "uVar6": "result"
            },
            "code": "unsigned long long calculate_result_080071c0(uint32_t first_param, uint32_t second_param, int third_param, uint32_t fourth_param) {\n  unsigned long long result = ((unsigned long long)second_param << 32) | first_param;\n  uint32_t shifted_second_param = (second_param << 1) >> 21;\n  if (shifted_second_param == 0) {\n    if ((second_param & 0x7fffffff | first_param) == 0) {\n      return result;\n    }\n    result = FUNC_080004d0(first_param, second_param, 0, PTR_DAT_08007290);\n    uint32_t ptr_dat_08007280 = PTR_DAT_08007280;\n    uint32_t ptr_dat_08007284 = PTR_DAT_08007284;\n    if (third_param < PTR_DAT_08007294) goto LAB_0800722e;\n    shifted_second_param = (((int64_t)(result >> 32)) << 1) >> 21 - 0x36;\n  } else if (shifted_second_param == 0x7ff) {\n    result = FUNC_0800016c(first_param, second_param, first_param, second_param, fourth_param);\n    return result;\n  }\n  uint32_t upper_bits = (uint32_t)(result >> 32);\n  int shifted_param = shifted_second_param + third_param;\n  if (shifted_param < 0x7ff) {\n    if (shifted_param > 0) {\n      return result & 0xffffffff | (unsigned long long)(upper_bits & 0x800fffff | shifted_param * 0x100000) << 32;\n    }\n    if (shifted_param + 0x35 < 0 == __builtin_sub_overflow(shifted_param, 0x35, &shifted_param)) {\n      result = result & 0xffffffff | (unsigned long long)(upper_bits & 0x800fffff | (shifted_param + 0x36) * 0x100000) << 32;\n      uint32_t ptr_dat_08007298 = PTR_DAT_08007298;\n      goto LAB_0800722e;\n    }\n    if (third_param < 0xc351) {\n      result = do_nothing_0800729c(PTR_DAT_08007280, PTR_DAT_08007284, (int)result, upper_bits);\n      uint32_t ptr_dat_08007280 = PTR_DAT_08007280;\n      uint32_t ptr_dat_08007284 = PTR_DAT_08007284;\n      goto LAB_0800722e;\n    }\n  }\n  result = do_nothing_0800729c(PTR_DAT_08007288, PTR_DAT_0800728c, (int)result, upper_bits);\n  uint32_t ptr_dat_08007288 = PTR_DAT_08007288;\n  uint32_t ptr_dat_0800728c = PTR_DAT_0800728c;\nLAB_0800722e:\n  result = FUNC_080004d0((int)result, (int)(result >> 32), ptr_dat_08007280, ptr_dat_08007284);\n  return result;\n}",
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_result_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_character_08005614",
                "param_1": "input_string",
                "param_2": "target_character",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "current_char_ptr"
            },
            "code": "char* find_character_08005614(char* input_string, char target_character, int string_length) {\n  char* current_char = input_string;\n  while (current_char != input_string + string_length) {\n    if (*current_char == target_character) {\n      return current_char;\n    }\n    current_char++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_character_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_by_32_bits_080070a4",
                "DAT_080070ac": "DAT_value",
                "ulonglong": "unsigned long long"
            },
            "code": "unsigned long long shift_left_by_32_bits_080070a4(void)\n{\n    unsigned long long shifted_value = (unsigned long long)DAT_080070ac << 32;\n    return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "shift_left_by_32_bits_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "check_data_0800407c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "iVar1": "result",
                "local_14": "success",
                "PTR_DAT_080040b4": "PTR_DATA",
                "FUNC_08001938": "check_inputs",
                "FUN_08004490": "process_output"
            },
            "code": "int check_data_0800407c(int input1, int input2, int output1, int output2){\n                      int result;\n                      int success = 0;\n                      result = check_inputs(PTR_DAT_080040b4, input1, input2, 1, &success, 1, 200);\n                      if (success != 0){\n                          process_output(output1, output2);\n                      }\n                      return result;\n                  }",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_080040e8"
            ],
            "imported": false,
            "current_name": "check_data_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = FUN_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = FUN_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = FUN_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = FUN_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = FUN_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = FUN_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": false,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08002f28();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004a84();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = FUN_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = FUN_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = FUN_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = FUN_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = FUN_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    FUN_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = FUN_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    FUN_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = FUN_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000c44",
                "FUN_08005900",
                "FUN_08003034",
                "FUN_08004348",
                "FUN_08002f28",
                "FUN_080043bc",
                "FUN_08004410",
                "thunk_FUN_0800115c",
                "FUN_0800403c",
                "FUN_08000a30",
                "FUN_08001078",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08000428",
                "FUN_08004434",
                "FUN_08000adc",
                "FUN_08004384",
                "FUN_08004a84",
                "FUN_08000168",
                "FUN_08000e54",
                "FUN_08004458"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_data_080022d0",
                "param_1": "data_id",
                "param_2": "data_array",
                "uVar1": "updated_data1",
                "uVar2": "updated_data2",
                "uVar3": "updated_data3",
                "PTR_DAT_08002320": "DAT_08002320",
                "mask1": "clear_mask",
                "mask2": "update_mask1",
                "mask3": "update_mask2",
                "mask4": "update_mask3",
                "data_ptr1": "data_ptr_1",
                "data_ptr2": "data_ptr_2",
                "data_ptr3": "data_ptr_3",
                "data_ptr4": "data_ptr_4"
            },
            "code": "void update_data_080022d0(int data_id, uint32_t *data_array)\n{\n  uint32_t mask1 = 0xfffffeff;\n  uint32_t mask2 = 0xfffffdff;\n  uint32_t mask3 = 0xfffff7ff;\n  uint32_t mask4 = 0xfffffbff;\n  uint32_t uVar1, uVar2, uVar3;\n  \n  uint32_t *data_ptr1 = (uint32_t *)(data_id + 0x20);\n  uint32_t *data_ptr2 = (uint32_t *)(data_id + 0x4);\n  uint32_t *data_ptr3 = (uint32_t *)(data_id + 0x1c);\n  uint32_t *data_ptr4 = (uint32_t *)(data_id + 0x3c);\n  \n  *data_ptr1 = (*data_ptr1) & mask1;\n  uVar2 = *data_ptr2;\n  uVar3 = *data_array;\n  uVar1 = ((*data_ptr1) & mask2) | (data_array[2] << 8);\n  \n  if (data_id == PTR_DAT_08002320) {\n    uVar1 = (uVar1 & mask3) | (data_array[3] << 8);\n    uVar2 = (uVar2 & 0xffffcfff) | ((data_array[5] | data_array[6]) << 4);\n  }\n  \n  *data_ptr2 = uVar2;\n  *data_ptr3 = (*data_ptr3 & 0xffffff8c) | uVar3;\n  *data_ptr4 = data_array[1];\n  *data_ptr1 = uVar1;\n  \n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "validate_input_080010c4",
                "param_1": "input",
                "uVar1": "shift_amount",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "uint validate_input_080010c4(uint input) {\n  uint result;\n  bool is_negative = (input & 0x80000000) != 0;\n  bool is_valid = (input << 1 < 0x7f000000);\n  if (is_negative || !is_valid) {\n    return 0;\n  }\n  uint shift_amount = 0x1e - ((input << 1) >> 0x18);\n  if (shift_amount >= 0) {\n    result = (input << 8 | 0x80000000) >> (shift_amount & 0xff);\n    return result;\n  }\n  bool is_special_case = (shift_amount == 0xffffff9f) && ((input & 0x7fffff) != 0);\n  if (is_special_case) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "validate_input_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "process_data_080040b8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "result1",
                "param_6": "result2",
                "iVar1": "status",
                "FUNC_08001938": "perform_operation",
                "PTR_DAT_080040e4": "PTR_DATA_ARRAY",
                "FUN_08004490": "generate_error"
            },
            "code": "void process_data_080040b8(int data1, int data2, int data3, int data4, int result1, int result2)\\n\\\n{\\n\\\n    int status;\\n\\\n    status = perform_operation(PTR_DAT_080040e4, data1, data2, 1, data3, data4, 200, data4);\\n\\\n    if (status != 0) {\\n\\\n        generate_error(result1, result2);\\n\\\n        return;\\n\\\n    }\\n\\\n    return;\\n\\\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "process_data_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "update_flags_0800245c",
                "param_1": "flags",
                "param_2": "flag_type",
                "param_3": "flag_value",
                "extraout_r1": "extra_out_1",
                "extraout_r1_00": "extra_out_2",
                "extraout_r1_01": "extra_out_3",
                "extraout_r1_02": "extra_out_4",
                "iVar1": "int_var_1",
                "iVar3": "int_var_2",
                "uVar2": "uint_var",
                "set_flag_type_0": "set_flag_type_zero",
                "set_flag_type_4": "set_flag_type_four",
                "set_flag_type_8": "set_flag_type_eight",
                "set_flag_type_c": "set_flag_type_twelve"
            },
            "code": "void update_flags_0800245c(int *flags, int flag_type, int flag_value) {\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  int extraout_r1_02;\n  int flags_ptr = *flags;\n  uint flags_val;\n  if (*(char *)(flags + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)flags + 0x39) = 2;\n  *(undefined *)(flags + 0xe) = 1;\n  switch(flag_type) {\n    case 0:\n      set_flag_type_0(flags_ptr);\n      flags_val = *(uint *)(extraout_r1 + 0x10);\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) | 8;\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) & 0xfffffffb;\n      flags_val = *(uint *)(flags_ptr + 0x18) | flags_val;\n      break;\n    default:\n      goto switchD_0800247a_caseD_1;\n    case 4:\n      set_flag_type_4(flags_ptr);\n      flags_val = *(uint *)(extraout_r1_00 + 0x10);\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) | 0x800;\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) & 0xfffffbff;\n      flags_val = *(uint *)(flags_ptr + 0x18) | (flag_value << 8);\n      break;\n    case 8:\n      set_flag_type_8(flags_ptr);\n      flags_val = *(uint *)(extraout_r1_01 + 0x10);\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) | 8;\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) & 0xfffffffb;\n      flags_val = *(uint *)(flags_ptr + 0x1c) | flags_val;\n      goto LAB_080024fa;\n    case 0xc:\n      set_flag_type_c(flags_ptr);\n      flags_val = *(uint *)(extraout_r1_02 + 0x10);\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) | 0x800;\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) & 0xfffffbff;\n      flags_val = *(uint *)(flags_ptr + 0x1c) | (flag_value << 8);\n      *(uint *)(flags_ptr + 0x1c) = flags_val;\n      break;\n  }\n  *(uint *)(flags_ptr + 0x18) = flags_val;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)flags + 0x39) = 1;\n  *(undefined *)(flags + 0xe) = 0;\n  return;\n}\n",
            "called": [
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "update_flags_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "print_error_and_line_number_08004490",
                "param_1": "error_message",
                "param_2": "line_number",
                "puVar2": "line_prefix",
                "puVar3": "error_prefix",
                "uVar1": "flags",
                "PTR_s_Error_with_08004510": "s_error_with",
                "DAT_08004508": "flag_register",
                "FUN_08001424": "set_flag",
                "FUN_0800142e": "print_string",
                "FUN_08004c8c": "print_number",
                "FUN_08004cac": "print_char",
                "FUN_08004c18": "delay",
                "thunk_do_nothing_08001168": "delay"
            },
            "code": "void print_error_and_line_number_08004490(char* error_message, int line_number) {\n  int delay_time = 500;\n  char* error_prefix = \"Error with \";\n  char* line_prefix = \" at line \";\n  int flags[] = {0x4000, 0x8000, 0x2000};\n  char newline = 10;\n  while(true) {\n    for(int i = 0; i < 3; i++) {\n      set_flag(DAT_08004508, flags[i]);\n    }\n    print_string(PTR_s_Error_with_08004510);\n    print_string(error_prefix);\n    print_string(error_message);\n    print_string(line_prefix);\n    print_number(line_number);\n    print_char(newline);\n    delay(delay_time);\n  }\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "FUN_08004c8c",
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_080040b8",
                "FUN_0800403c",
                "FUN_0800407c",
                "FUN_0800458c",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "print_error_and_line_number_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "set_flags_and_call_function_080015e8",
                "param_1": "param_list",
                "param_2": "param1",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "var1",
                "iVar2": "var2",
                "puVar3": "param_copy",
                "ppuVar4": "param_list_copy",
                "uVar5": "param1_copy",
                "uVar6": "param2_copy",
                "FUN_0800115c": "calculate_var1",
                "DAT_080016f0": "some_data"
            },
            "code": "uint32_t set_flags_and_call_function_080015e8(uint32_t **param_list, uint32_t param1, uint32_t param2, int param3, uint32_t param4)\n{\n  uint32_t *param = *param_list;\n  param[0] |= 0x400;\n  param[0] |= 0x100;\n  uint32_t **param_list_copy = param_list;\n  uint32_t param1_copy = param1;\n  uint32_t param2_copy = param2;\n  int var1 = calculate_var1();\n\nLABEL_0800160E:\n  uint32_t *param_copy = *param_list;\n  while (-1 < (int)(param_copy[5] << 0x1f)) {\n    if (param4 != 0xffffffff) {\n      goto code_r0x08001658;\n    }\n  }\n  param_copy[4] = param1 & 0xfe;\n  int var2 = call_function(param_list, DAT_080016f0, param4, param_copy, param_list_copy, param1_copy, param2_copy);\n  if (var2 != 0) {\n    goto LAB_080016BA;\n  }\n  var2 = call_another_function(param_list, param4, (*param_list)[5], (*param_list)[6]);\n  if (var2 == 0) {\n    uint32_t *param_copy2 = *param_list;\n    if (param3 != 1) {\n      param_copy2[4] = param2 >> 8;\n      var2 = call_another_function(param_list, param4);\n      if (var2 != 0) {\n        goto LAB_08001642;\n      }\n      param_copy2 = *param_list;\n    }\n    param_copy2[4] = param2 & 0xff;\n    var2 = call_another_function(param_list, param4);\n    if (var2 == 0) {\n      **param_list = **param_list | 0x100;\n      int var3 = calculate_var1();\n      do {\n        do {\n          if ((int)((*param_list)[5] << 0x1f) < 0) {\n            (*param_list)[4] = param1 & 0xff | 1;\n            var2 = call_function(param_list, DAT_080016f0, param4);\n            if (var2 == 0) {\n              return 0;\n            }\nLAB_080016BA:\n            if (param_list[0xe] != (uint32_t *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (param4 == 0xffffffff);\n      } while ((param4 != 0) && (int)((call_function(param_list, calculate_var1()) - var3)) <= param4);\nLAB_0800165A:\n      *(undefined *)((int)param_list + 0x35) = 0x20;\n      *(undefined *)(param_list + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (param_list[0xe] == (uint32_t *)0x4) {\n    **param_list = **param_list | 0x200;\n    return 1;\n  }\n  return 3;\n\nCODE_R0x08001658:\n  if ((param4 == 0) || ((int)((call_function(param_list, calculate_var1()) - var1)) < param4)) {\n    goto LAB_0800165A;\n  }\n  goto LABEL_0800160E;\n}",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_function_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "identify_type_of_value_08004e14",
                "param_1": "value_ptr",
                "param_2": "arg2",
                "param_3": "arg3",
                "uVar1": "type_identifier",
                "iVar2": "value",
                "local_18": "flag_1",
                "local_14": "flag_2",
                "uStack_10": "arg4"
            },
            "code": "void identify_type_of_value_08004e14(int *value_ptr, undefined4 arg2, undefined4 arg3)\n{\n  undefined4 type_identifier;\n  int value = *value_ptr;\n  undefined4 flag_1 = 2;\n  undefined4 flag_2 = 2;\n  undefined4 arg4 = arg3;\n  if (value == 134217736)\n  {\n    type_identifier = 2048;\n  }\n  else if (value == 1073741824)\n  {\n    type_identifier = 2;\n  }\n  else\n  {\n    if (value == 2139062144)\n    {\n      type_identifier = 3;\n    }\n    else\n    {\n      if (value != 2130706432)\n      {\n        return;\n      }\n      type_identifier = 768;\n    }\n  }\n  FUN_08001264(type_identifier, &flag_1);\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "identify_type_of_value_08004e14"
        }
    },
    "used_tokens": 149387,
    "layers": [
        [
            "FUN_080050fc",
            "FUN_08003320",
            "FUN_08004410",
            "FUN_08001264",
            "FUN_08002ea0",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_08001028",
            "FUN_080006ac",
            "FUN_08001828",
            "FUN_08004c64",
            "FUN_08007092",
            "FUN_0800290c",
            "FUN_08002f28",
            "FUN_08004384",
            "FUN_080009a0",
            "FUN_08003298",
            "FUN_08004300",
            "FUN_08005630",
            "FUN_08000980",
            "FUN_08004028",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08005bc8",
            "FUN_08001436",
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_08000904",
            "FUN_0800299a",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_080014e2",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080009b4",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000990",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08004434",
            "FUN_08006c0c",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080040e8",
            "FUN_08004ffc",
            "FUN_0800115c",
            "FUN_08002d88",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_080025e8",
            "FUN_08002b48",
            "FUN_08004f68",
            "FUN_08001170",
            "FUN_08002bf0",
            "FUN_08002ad0",
            "FUN_08001050",
            "FUN_080009c8",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_080043bc",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_0800209c",
            "FUN_0800403c",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08004cac",
            "FUN_08004c18",
            "FUN_0800483c",
            "FUN_08004c8c",
            "FUN_08001460",
            "FUN_08001064",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08004458",
            "FUN_08000134",
            "FUN_08003eb0",
            "FUN_08002ee8",
            "FUN_08001104",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002cb0",
            "FUN_08004348",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08001754",
            "FUN_08003ec8",
            "FUN_08002724",
            "FUN_08003fe8",
            "FUN_08005714",
            "FUN_08004fb4",
            "FUN_080043f0",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_08000a30",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003fdc",
            "FUN_080009f0",
            "FUN_08004f10",
            "FUN_08005044",
            "FUN_08004194",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08003f3c",
            "FUN_08002214",
            "FUN_08001004",
            "FUN_08003ff4",
            "FUN_080041ae",
            "FUN_08001128",
            "FUN_08004514",
            "FUN_08004a84",
            "FUN_080041c4",
            "FUN_080057d0",
            "FUN_0800567c",
            "FUN_08000ffc",
            "FUN_080016f4",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003034",
            "FUN_08004e7c",
            "FUN_08001530",
            "FUN_08003314",
            "FUN_08005854",
            "FUN_08001014",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_0800407c",
            "FUN_080022d0",
            "FUN_080010c4",
            "FUN_080040b8",
            "FUN_0800245c",
            "FUN_08004490",
            "FUN_080015e8",
            "FUN_08004e14"
        ]
    ],
    "locked_functions": []
}