{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_integers_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_integers_080001ac(undefined4 first_integer,undefined4 second_integer)\n\n{\n  return concatenate_64bit_integers(second_integer,first_integer);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_integers_080001ac",
                "param_1": "first_integer",
                "param_2": "second_integer",
                "CONCAT44": "concatenate_64bit_integers"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "execute_startup_functions_08000210",
            "code": "\nvoid execute_startup_functions_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "execute_startup_functions_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "handle_parameter_08000220",
            "code": "\nvoid handleParameter_08000220(char parameter)\n\n{\n  if (parameter != DAT_20000468) {\n    FUN_08002fd4();\n    if (parameter == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = parameter;\n    }\n    else if (parameter == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = parameter;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = parameter;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "handle_parameter_08000220",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_adjusted_value_08000268",
            "code": "\n\n\nint calculateAdjustedValue_08000268(void)\n\n{\n  int value;\n  \n  value = FUN_08005a84();\n  return (value + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "value"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_function_080002a0",
            "code": "\nvoid executeFunction_080002a0(undefined4 arg)\n\n{\n  FUN_08005a98(arg);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_function_080002a0",
                "param_1": "arg"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "check_if_greater_or_equal_080002b6",
            "code": "\nvoid checkIfGreaterOrEqual_080002b6(uint input)\n\n{\n  uint result1;\n  uint result2;\n  bool isGreater;\n  longlong randomValue;\n  undefined8 newRandomValue;\n  \n  randomValue = FUN_08000268();\n  result2 = (uint)(randomValue + (ulonglong)input >> 0x20);\n  do {\n    newRandomValue = FUN_08000268();\n    result1 = (uint)((ulonglong)newRandomValue >> 0x20);\n    isGreater = result2 <= result1;\n    if (result1 == result2) {\n      isGreater = (uint)(randomValue + (ulonglong)input) <= (uint)newRandomValue;\n    }\n  } while (!isGreater);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "check_if_greater_or_equal_080002b6",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "bVar3": "isGreater",
                "lVar4": "randomValue",
                "uVar5": "newRandomValue"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_indexed_value_08000310",
            "code": "\nundefined getIndexedValue_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_indexed_value_08000310",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined data)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "data"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculateChecksum_08000374(int startIndex,char *data,int length)\n\n{\n  int remainingLength;\n  char *currentByte;\n  int currentIndex;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingLength = length;\n  currentByte = data;\n  currentIndex = startIndex;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentByte = data;\n    currentIndex = startIndex;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    checksum = (checksum != '\\0') + *currentByte;\n    FUN_08000340(currentIndex,*currentByte);\n    currentByte = currentByte + 1;\n    currentIndex = currentIndex + 1;\n  }\n  FUN_08000340(currentIndex,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "startIndex",
                "param_2": "data",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentByte",
                "local_14": "currentIndex",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "perform_comparison_080003ec",
            "code": "\nbool performComparison_080003ec(char *inputString,int startIndex,int length)\n\n{\n  char currentCharacter;\n  uint comparisonResult;\n  int remainingLength;\n  int currentIndex;\n  char *outputString;\n  byte sum;\n  \n  sum = 0;\n  remainingLength = length;\n  currentIndex = startIndex;\n  outputString = inputString;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentIndex = startIndex;\n    outputString = inputString;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    currentCharacter = FUN_08000310(currentIndex);\n    sum = currentCharacter + (sum != 0);\n    *outputString = currentCharacter;\n    currentIndex = currentIndex + 1;\n    outputString = outputString + 1;\n  }\n  comparisonResult = FUN_08000310(currentIndex);\n  return sum == comparisonResult;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "perform_comparison_080003ec",
                "param_1": "inputString",
                "param_2": "startIndex",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentIndex",
                "local_14": "outputString",
                "local_9": "sum",
                "cVar1": "currentCharacter",
                "uVar2": "comparisonResult"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_function_08000478",
            "code": "\nvoid initializeFunction_08000478(undefined inputParameter1,undefined inputParameter2,undefined inputParameter3)\n\n{\n  DAT_20000e89 = inputParameter1;\n  DAT_20000e8a = inputParameter2;\n  DAT_20000e8b = inputParameter3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_function_08000478",
                "param_1": "inputParameter1",
                "param_2": "inputParameter2",
                "param_3": "inputParameter3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int result;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  result = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (result == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result1;\n  \n  result1 = FUN_08008e44(param1);\n  DAT_20000e7c = FUN_08009054(result1,DAT_20000ebc);\n  result1 = FUN_08008e44(param2);\n  DAT_20000e80 = FUN_08009054(result1,DAT_20000ec0);\n  result1 = FUN_08008e44(param3);\n  DAT_20000e84 = FUN_08009054(result1,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result1"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 input)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(input);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    input = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "process_data_080005b4",
            "code": "\nchar processData_080005b4(undefined4 input)\n\n{\n  int result;\n  undefined4 temp;\n  char status;\n  uint temp1;\n  undefined4 temp2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  undefined4 array1 [4];\n  undefined4 array2;\n  undefined4 array3;\n  undefined4 array4;\n  undefined4 stack1;\n  undefined4 stack2;\n  undefined4 arrayStack [6];\n  undefined4 value;\n  byte byte1;\n  undefined byte2;\n  undefined4 byte3;\n  undefined4 byte4;\n  undefined flag1;\n  uint flag2;\n  byte byte5;\n  byte byte6;\n  byte byte7;\n  byte byte8;\n  char flag3;\n  uint flag4;\n  undefined4 flag5;\n  sbyte flag6;\n  char flag7;\n  char flag8;\n  undefined4 flag9;\n  byte byte9;\n  ushort flag10;\n  uint flag11;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    status = '\\f';\n  }\n  else {\n    byte2 = 0;\n    flag10 = 0;\n    byte9 = 0;\n    flag9 = 0xbf800000;\n    flag8 = '\\0';\n    flag7 = '\\0';\n    FUN_0800b430(arrayStack + 3,0,0xc);\n    FUN_0800b430(arrayStack,0,0xc);\n    DAT_20000e70 = '\\0';\n    flag6 = 0;\n    while (result = FUN_0800184c(&byte1,arrayStack + 6,input,&byte2), result != 0) {\n      temp3 = FUN_08008590(value);\n      temp3 = FUN_08009798((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      flag11 = FUN_08008ba0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      if (byte1 == 0x47) {\n        switch(flag11) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          flag6 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          flag6 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          flag6 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          flag6 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          flag6 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          flag6 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          flag6 = 6;\n        }\n        switch(flag11) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          flag7 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          flag7 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          temp = FUN_08008eec(value,0x41200000);\n          temp3 = FUN_08008590(temp);\n          temp3 = FUN_08009798((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          flag11 = FUN_08008ba0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          switch(flag11) {\n          case 0x118:\n            flag7 = '\\x03';\n            break;\n          case 0x119:\n            flag7 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            flag7 = '\\x05';\n            break;\n          case 0x12d:\n            flag7 = '\\x06';\n          }\n          break;\n        case 0x35:\n          flag8 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)flag11 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          temp = FUN_08008eec(value,0x41200000);\n          temp3 = FUN_08008590(temp);\n          temp3 = FUN_08009798((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          flag11 = FUN_08008ba0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          if (flag11 == 0x398) {\n            flag7 = '\\a';\n          }\n          else if (flag11 == 0x399) {\n            flag7 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (byte1 == 0x4d) {\n        if (flag11 == 0x1e) {\nLAB_08000b96:\n          flag6 = 5;\n        }\n        else if ((int)flag11 < 0x1f) {\n          if ((int)flag11 < 3) {\n            if (-1 < (int)flag11) goto LAB_08000b96;\n          }\n          else if (flag11 - 3 < 3) {\n            flag6 = 8;\n          }\n        }\n        switch(flag11) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (flag6 != 0) {\n        if (((int)(uint)flag10 >> flag6 & 1U) == 0) {\n          flag10 = flag10 | (ushort)(1 << flag6);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        flag6 = 0;\n      }\n    }\n    status = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      flag5 = 0;\n      flag4 = 0;\n      flag3 = '\\0';\n      byte2 = 0;\nswitchD_08000d18_caseD_47:\n      result = FUN_0800184c(&byte1,arrayStack + 6,input,&byte2);\n      if (result != 0) {\n        switch(byte1) {\n        case 0x46:\n          result = FUN_0800923c(value,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(value);\n          }\n          else {\n            flag9 = FUN_0800056c(value);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          temp1 = (uint)byte1;\n          temp = FUN_0800056c(value);\n          arrayStack[temp1 - 0x49] = temp;\n          break;\n        case 0x4c:\n          temp3 = FUN_08008590(value);\n          temp3 = FUN_08009798((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          flag3 = FUN_08008bf0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          break;\n        case 0x50:\n          flag5 = value;\n          break;\n        case 0x52:\n          flag4 = FUN_0800056c(value);\n          break;\n        case 0x53:\n          result = FUN_08009228(value,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          result = FUN_08009228(value,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          temp3 = FUN_08008590(value);\n          temp3 = FUN_08009798((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          break;\n        case 0x58:\n          arrayStack[3] = FUN_0800056c(value);\n          byte9 = byte9 | 1;\n          break;\n        case 0x59:\n          arrayStack[4] = FUN_0800056c(value);\n          byte9 = byte9 | 2;\n          break;\n        case 0x5a:\n          arrayStack[5] = FUN_0800056c(value);\n          byte9 = byte9 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      status = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((flag10 & 0x200) != 0) {\n          result = FUN_08004d7c(DAT_20000e8c,&array4);\n          if (result == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = array4;\n          DAT_20000e94 = stack1;\n          DAT_20000e98 = stack2;\n        }\n        switch(flag7) {\n        case '\\x01':\n          result = FUN_08009228(flag5,0);\n          if (result == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(flag5);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          temp3 = FUN_08008590(flag5);\n          temp3 = FUN_08009798((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          flag11 = FUN_08008ba0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          if ((((flag3 == '\\x02') || (flag3 == '\\x14')) && (-1 < (int)flag11)) &&\n             ((int)flag11 < 7)) {\n            if ((byte9 == 0) && (flag3 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)flag11 < 1) {\n                flag11 = (uint)DAT_20000e8c;\n              }\n              else {\n                flag11 = flag11 - 1;\n              }\n              result = FUN_08004d7c(flag11 & 0xff,array1);\n              if (result == 0) {\n                return '\\n';\n              }\n              for (byte8 = 0; byte8 < 3; byte8 = byte8 + 1) {\n                if (((int)(uint)byte9 >> byte8 & 1U) != 0) {\n                  if (flag3 == '\\x14') {\n                    temp1 = (uint)byte8;\n                    temp = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byte8 + 2) * 4),\n                                         arrayStack[byte8 + 3]);\n                    array1[temp1] = temp;\n                  }\n                  else {\n                    array1[byte8] = arrayStack[byte8 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(flag11 & 0xff,array1);\n              if (flag11 == DAT_20000e8c) {\n                DAT_20000e90 = array1[0];\n                DAT_20000e94 = array1[1];\n                DAT_20000e98 = array1[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          byte9 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (byte9 != 0) {\n            for (byte7 = 0; byte7 < 3; byte7 = byte7 + 1) {\n              if (((int)(uint)byte9 >> byte7 & 1U) == 0) {\n                arrayStack[byte7 + 3] = *(undefined4 *)(&DAT_20000e74 + (byte7 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                temp1 = (uint)byte7;\n                temp = FUN_08008cdc(arrayStack[byte7 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byte7 + 2) * 4));\n                arrayStack[temp1 + 3] = temp;\n              }\n              else {\n                temp2 = arrayStack[byte7 + 3];\n                temp = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byte7 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byte7 + 10) * 4));\n                temp1 = (uint)byte7;\n                temp = FUN_08008cdc(temp2,temp);\n                arrayStack[temp1 + 3] = temp;\n              }\n            }\n            FUN_08001e98(arrayStack[3],arrayStack[4],arrayStack[5],DAT_20000ed0,0);\n          }\n          if (flag7 == '\\x05') {\n            result = FUN_08004d7c(7,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            result = FUN_08004d7c(6,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(array1[3],array2,array3,DAT_20000ed0,0);\n          DAT_20000e7c = array1[3];\n          DAT_20000e80 = array2;\n          DAT_20000e84 = array3;\n          byte9 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (flag7 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (byte9 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (byte6 = 0; byte6 < 3; byte6 = byte6 + 1) {\n              if (((int)(uint)byte9 >> byte6 & 1U) != 0) {\n                temp = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byte6 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (byte6 + 8) * 4));\n                temp1 = (uint)byte6;\n                temp = FUN_08008cd8(temp,arrayStack[byte6 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (temp1 + 10) * 4) = temp;\n              }\n            }\n          }\n          byte9 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((flag10 & 4) != 0) || (byte9 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((result = FUN_08009228(flag9,0), result != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((flag8 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (byte5 = 0; byte5 < 3; byte5 = byte5 + 1) {\n            if (((int)(uint)byte9 >> byte5 & 1U) == 0) {\n              arrayStack[byte5 + 3] = *(undefined4 *)(&DAT_20000e74 + (byte5 + 2) * 4);\n            }\n            else if (flag8 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                temp1 = (uint)byte5;\n                temp = FUN_08008cdc(arrayStack[byte5 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byte5 + 2) * 4));\n                arrayStack[temp1 + 3] = temp;\n              }\n              else {\n                temp2 = arrayStack[byte5 + 3];\n                temp = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byte5 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byte5 + 10) * 4));\n                temp1 = (uint)byte5;\n                temp = FUN_08008cdc(temp2,temp);\n                arrayStack[temp1 + 3] = temp;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (byte9 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(arrayStack[3],arrayStack[4],arrayStack[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (byte9 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              temp = flag9;\n              if (DAT_20000e72 == '\\0') {\n                temp = DAT_20000e78;\n              }\n              FUN_08001e98(arrayStack[3],arrayStack[4],arrayStack[5],temp,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            byte9 = byte9 & ~(byte)(1 << DAT_20000e8b);\n            if ((byte9 == 0) ||\n               (((result = FUN_08009214(flag4,0), result != 0 &&\n                 (result = FUN_08009214(arrayStack[DAT_20000e89],0), result != 0)) &&\n                (result = FUN_08009214(arrayStack[DAT_20000e8a],0), result != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = FUN_08009214(flag4,0);\n              if (result == 0) {\n                byte4 = FUN_08008cd8(arrayStack[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                byte3 = FUN_08008cd8(arrayStack[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(arrayStack,0,0xc);\n                temp = FUN_08008eec(flag4,0x40800000);\n                temp = FUN_08008eec(temp,flag4);\n                temp2 = FUN_08008eec(byte4,byte4);\n                temp = FUN_08008cd8(temp,temp2);\n                temp2 = FUN_08008eec(byte3,byte3);\n                flag2 = FUN_08008cd8(temp,temp2);\n                result = FUN_08009228(flag2,0);\n                if (result != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                temp3 = FUN_08008590(flag2);\n                temp3 = FUN_080098d0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n                temp4 = FUN_08008590(byte4);\n                temp5 = FUN_08008590(byte3);\n                temp4 = FUN_0800981c((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                                     (int)((ulonglong)temp5 >> 0x20));\n                temp3 = FUN_08008894((int)temp3,(uint)((ulonglong)temp3 >> 0x20) ^ 0x80000000,\n                                     (int)temp4,(int)((ulonglong)temp4 >> 0x20));\n                flag2 = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  flag2 = flag2 ^ 0x80000000;\n                }\n                result = FUN_08009228(flag4,0);\n                if (result != 0) {\n                  flag2 = flag2 ^ 0x80000000;\n                  flag4 = flag4 ^ 0x80000000;\n                }\n                temp = FUN_08008eec(byte3,flag2);\n                temp = FUN_08008cd8(byte4,temp);\n                temp1 = (uint)DAT_20000e89;\n                temp = FUN_08008eec(temp,0x3f000000);\n                arrayStack[temp1] = temp;\n                temp = FUN_08008eec(byte4,flag2);\n                temp = FUN_08008cdc(temp,byte3);\n                temp1 = (uint)DAT_20000e8a;\n                temp = FUN_08008eec(temp,0x3f000000);\n                arrayStack[temp1] = temp;\n              }\n              else {\n                temp3 = FUN_08008590(arrayStack[DAT_20000e89]);\n                temp4 = FUN_08008590(arrayStack[DAT_20000e8a]);\n                temp3 = FUN_0800981c((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                                     (int)((ulonglong)temp4 >> 0x20));\n                flag4 = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n              }\n              flag1 = DAT_20000e71 == '\\x02';\n              temp = flag9;\n              if (DAT_20000e72 == '\\0') {\n                temp = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,arrayStack + 3,arrayStack,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,temp,DAT_20000e72,flag4,flag1);\n            }\n            break;\n          case '\\x04':\n            if (byte9 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = arrayStack[3];\n          DAT_20000e80 = arrayStack[4];\n          DAT_20000e84 = arrayStack[5];\n        }\n        status = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            status = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            status = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "process_data_080005b4",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "temp",
                "cVar3": "status",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "local_94": "array1",
                "local_84": "array2",
                "local_80": "array3",
                "local_7c": "array4",
                "uStack_78": "stack1",
                "uStack_74": "stack2",
                "auStack_70": "arrayStack",
                "local_58": "value",
                "local_52": "byte1",
                "local_51": "byte2",
                "local_50": "byte3",
                "local_4c": "byte4",
                "local_45": "flag1",
                "local_44": "flag2",
                "local_3d": "byte5",
                "local_3c": "byte6",
                "local_3b": "byte7",
                "local_3a": "byte8",
                "local_39": "flag3",
                "local_38": "flag4",
                "local_34": "flag5",
                "local_2f": "flag6",
                "local_2e": "flag7",
                "local_2d": "flag8",
                "local_2c": "flag9",
                "local_27": "byte9",
                "local_26": "flag10",
                "local_24": "flag11"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_and_update_char_0800184c",
            "code": "\nundefined4 checkAndUpdateChar_0800184c(byte *output,undefined4 flag,int base,byte *currentChar)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)(base + (uint)*currentChar) == '\\0') {\n    returnValue = 0;\n  }\n  else {\n    *output = *(byte *)(base + (uint)*currentChar);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      DAT_20000e70 = 2;\n      returnValue = 0;\n    }\n    else {\n      *currentChar = *currentChar + 1;\n      result = FUN_08002638(base,currentChar,flag);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 1;\n      }\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_and_update_char_0800184c",
                "param_1": "output",
                "param_2": "flag",
                "param_3": "base",
                "param_4": "currentChar",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_register_value_080018cc",
            "code": "\n\n\nvoid updateRegisterValue_080018cc(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_register_value_080018cc",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_bits_080018fc",
            "code": "\n\n\nvoid updateBits_080018fc(uint newBits)\n\n{\n  _DAT_40021014 = newBits | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_bits_080018fc",
                "param_1": "newBits"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "extract_flag_from_data_0800192c",
            "code": "\nvoid extractFlagFromData_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "extract_flag_from_data_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "check_and_update_settings_0800195c",
            "code": "\nvoid check_and_update_settings_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "check_and_update_settings_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char flag1,char flag2,undefined4 data)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 temp1;\n  undefined8 temp2;\n  byte tempFlag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant1;\n  uint maxValue2;\n  int tempResult;\n  undefined4 result2;\n  uint value4;\n  uint result3;\n  ushort constant2;\n  uint value5;\n  uint value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  ushort constant3;\n  uint minValue;\n  char counter;\n  \n  counter = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    counter = counter + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    counter = counter + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    counter = counter + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  value4 = value1;\n  if (value1 < maxValue) {\n    value4 = maxValue;\n  }\n  temp1 = FUN_0800854c(value4);\n  temp2 = FUN_0800854c(counter);\n  temp2 = FUN_080098d0((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  temp1 = FUN_08008894((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  result2 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000edc,result2);\n  result1 = FUN_08009054(result1,0x453b8000);\n  temp1 = FUN_08008590(result1);\n  temp1 = FUN_08009318((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  tempResult = FUN_08008bf0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp1 = FUN_0800854c(counter);\n  temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp2 = FUN_08008590(data);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  result1 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result1 = FUN_08008eec(result2,result1);\n  result1 = FUN_08009054(0x4c64e1c0,result1);\n  temp1 = FUN_08008590(result1);\n  maxValue2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  minValue = 75000;\n  if (maxValue2 < 75000) {\n    minValue = maxValue2;\n  }\n  constant1 = DAT_20000ed4;\n  constant3 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (flag1 == '\\0') {\n    constant3 = constant3 ^ 0xaa0;\n  }\n  FUN_080018fc(constant3);\n  FUN_080018cc(constant1);\n  value8 = -(value4 >> 1);\n  value7 = minValue - DAT_20000ec9;\n  value6 = 0;\n  value5 = 10000;\n  tempFlag = flags;\n  value9 = value8;\n  value10 = value8;\n  while( true ) {\n    constant2 = constant1;\n    result3 = FUN_080078f4();\n    if (flag2 == '\\0') {\n      result3 = result3 ^ 0x1e;\n    }\n    if (((tempFlag & 1) != 0) && (value10 = value10 + value1, 0 < value10)) {\n      if ((result3 & 0x10) == 0) {\n        tempFlag = tempFlag & 0xfe;\n      }\n      else {\n        constant2 = constant2 ^ 0x10;\n      }\n      value10 = value10 - value4;\n    }\n    if (((tempFlag & 2) != 0) && (value9 = value9 + value2, 0 < value9)) {\n      if ((result3 & 8) == 0) {\n        tempFlag = tempFlag & 0xfd;\n      }\n      else {\n        constant2 = constant2 ^ 0x440;\n      }\n      value9 = value9 - value4;\n    }\n    if (((tempFlag & 4) != 0) && (value8 = value8 + value3, 0 < value8)) {\n      if ((result3 & 4) == 0) {\n        tempFlag = tempFlag & 0xfb;\n      }\n      else {\n        constant2 = constant2 ^ 0x100;\n      }\n      value8 = value8 - value4;\n    }\n    if ((tempFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(constant2);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant1);\n    FUNC_08002828(value7);\n    if ((maxValue2 < minValue) && (value5 = minValue + value5, 20000 < value5)) {\n      value5 = value5 - 20000;\n      value6 = tempResult + value6;\n      minValue = 60000000 / value6;\n      if (minValue < maxValue2) {\n        minValue = maxValue2;\n      }\n      value7 = minValue - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "data",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "local_61": "tempFlag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "constant1",
                "local_4c": "maxValue2",
                "local_48": "tempResult",
                "local_44": "result2",
                "local_40": "value4",
                "local_3c": "result3",
                "local_36": "constant2",
                "local_34": "value5",
                "local_30": "value6",
                "local_2c": "value7",
                "local_28": "value8",
                "local_24": "value9",
                "local_20": "value10",
                "local_1a": "constant3",
                "local_18": "minValue",
                "local_11": "counter"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_system_08001d4c",
            "code": "\nvoid initializeSystem_08001d4c(void)\n\n{\n  char previousCounter;\n  char counter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  counter = '\\x02';\n  while( true ) {\n    previousCounter = counter + -1;\n    if (counter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    counter = previousCounter;\n    if ('\\0' < previousCounter) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_system_08001d4c",
                "local_9": "counter",
                "cVar1": "previousCounter"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_application_08001ddc",
            "code": "\nvoid initializeApplication_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_application_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "check_and_process_data_08001e98",
            "code": "\nvoid checkAndProcessData_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int iterationCount;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      iterationCount = FUN_08002fac();\n    } while (iterationCount != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "check_and_process_data_08001e98",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "iterationCount"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_checksum_08001f00",
            "code": "\nvoid calculateChecksum_08001f00(int dataStartAddress,undefined4 *pointerArray,int dataEndAddress,byte paramIndex1,byte paramIndex2,byte paramIndex3\n                 ,undefined4 calculationParam1,char calculationParam2,undefined4 calculationParam3,char condition)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  int index;\n  uint result;\n  undefined8 temp3;\n  undefined8 temp4;\n  uint intermediateValues [4];\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  ushort loopCount;\n  undefined4 finalResult;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint temp7;\n  undefined4 temp8;\n  undefined4 temp9;\n  char conditionCounter;\n  ushort loopCounter;\n  undefined4 checksum;\n  uint temp10;\n  uint temp11;\n  \n  temp9 = FUN_08008cdc(*(undefined4 *)((uint)paramIndex1 * 4 + dataStartAddress),\n                          *(undefined4 *)((uint)paramIndex1 * 4 + dataEndAddress));\n  temp8 = FUN_08008cdc(*(undefined4 *)((uint)paramIndex2 * 4 + dataStartAddress),\n                          *(undefined4 *)((uint)paramIndex2 * 4 + dataEndAddress));\n  temp7 = FUN_08008cd8(pointerArray[paramIndex3],*(undefined4 *)((uint)paramIndex3 * 4 + dataStartAddress));\n  temp11 = *(uint *)((uint)paramIndex1 * 4 + dataEndAddress) ^ 0x80000000;\n  temp10 = *(uint *)((uint)paramIndex2 * 4 + dataEndAddress) ^ 0x80000000;\n  temp6 = FUN_08008cd8(pointerArray[paramIndex1],temp9);\n  temp5 = FUN_08008cd8(pointerArray[paramIndex2],temp8);\n  temp1 = FUN_08008eec(temp11,temp5);\n  temp2 = FUN_08008eec(temp10,temp6);\n  temp1 = FUN_08008cd8(temp1,temp2);\n  temp3 = FUN_08008590(temp1);\n  temp1 = FUN_08008eec(temp11,temp6);\n  temp2 = FUN_08008eec(temp10,temp5);\n  temp1 = FUN_08008cdc(temp1,temp2);\n  temp4 = FUN_08008590(temp1);\n  temp3 = thunk_FUN_08009990((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                             (int)((ulonglong)temp4 >> 0x20));\n  checksum = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  if (condition == '\\0') {\n    index = FUN_0800923c(checksum,0);\n    if (index != 0) {\n      temp3 = FUN_08008590(checksum);\n      temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x54442d18,0x401921fb);\n      checksum = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n    }\n  }\n  else {\n    index = FUN_08009250(checksum,0);\n    if (index != 0) {\n      temp3 = FUN_08008590(checksum);\n      temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x54442d18,0x401921fb);\n      checksum = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n    }\n  }\n  temp1 = FUN_08008eec(checksum,calculationParam3);\n  temp3 = FUN_08008590(temp1);\n  temp4 = FUN_08008590(temp7 & 0x7fffffff);\n  temp3 = FUN_0800981c((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                       (int)((ulonglong)temp4 >> 0x20));\n  finalResult = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  index = FUN_08009214(finalResult,0);\n  if (index == 0) {\n    temp1 = FUN_08009054(finalResult,DAT_20000ed8);\n    temp3 = FUN_08008590(temp1);\n    temp3 = FUN_080094c0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n    loopCount = FUN_08008bf0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n    if (calculationParam2 != '\\0') {\n      temp1 = FUN_08008e44(loopCount);\n      calculationParam1 = FUN_08008eec(calculationParam1,temp1);\n    }\n    temp1 = FUN_08008e44(loopCount);\n    localVar6 = FUN_08009054(checksum,temp1);\n    temp1 = FUN_08008e44(loopCount);\n    localVar5 = FUN_08009054(temp7,temp1);\n    temp3 = FUN_08008590(localVar6);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x3fe00000);\n    temp4 = FUN_08008590(localVar6);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                         (int)((ulonglong)temp4 >> 0x20));\n    temp3 = FUN_080082d0(0,0x3ff00000,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n    localVar4 = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n    localVar3 = localVar6;\n    conditionCounter = '\\0';\n    intermediateValues[paramIndex3] = *(uint *)(dataStartAddress + (uint)paramIndex3 * 4);\n    for (loopCounter = 1; loopCounter < loopCount; loopCounter = loopCounter + 1) {\n      if ((int)conditionCounter < (int)(uint)DAT_20000efa) {\n        temp1 = FUN_08008eec(temp11,localVar3);\n        temp2 = FUN_08008eec(temp10,localVar4);\n        intermediateValues[3] = FUN_08008cdc(temp1,temp2);\n        temp1 = FUN_08008eec(temp11,localVar4);\n        temp2 = FUN_08008eec(temp10,localVar3);\n        temp11 = FUN_08008cd8(temp1,temp2);\n        temp10 = intermediateValues[3];\n        conditionCounter = conditionCounter + '\\x01';\n      }\n      else {\n        temp1 = FUN_08008e44(loopCounter);\n        temp1 = FUN_08008eec(temp1,localVar6);\n        temp3 = FUN_08008590(temp1);\n        temp3 = FUN_08009410((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n        localVar2 = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n        temp1 = FUN_08008e44(loopCounter);\n        temp1 = FUN_08008eec(temp1,localVar6);\n        temp3 = FUN_08008590(temp1);\n        temp3 = FUN_080096e8((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n        localVar1 = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n        temp1 = FUN_08008eec(*(uint *)((uint)paramIndex1 * 4 + dataEndAddress) ^ 0x80000000,localVar2);\n        temp2 = FUN_08008eec(*(undefined4 *)((uint)paramIndex2 * 4 + dataEndAddress),localVar1);\n        temp11 = FUN_08008cdc(temp1,temp2);\n        temp1 = FUN_08008eec(*(uint *)((uint)paramIndex1 * 4 + dataEndAddress) ^ 0x80000000,localVar1);\n        temp2 = FUN_08008eec(*(undefined4 *)((uint)paramIndex2 * 4 + dataEndAddress),localVar2);\n        temp10 = FUN_08008cd8(temp1,temp2);\n        conditionCounter = '\\0';\n      }\n      result = FUN_08008cdc(temp9,temp11);\n      intermediateValues[paramIndex1] = result;\n      result = FUN_08008cdc(temp8,temp10);\n      intermediateValues[paramIndex2] = result;\n      result = FUN_08008cdc(intermediateValues[paramIndex3],localVar5);\n      intermediateValues[paramIndex3] = result;\n      FUN_08001e98(intermediateValues[0],intermediateValues[1],intermediateValues[2],calculationParam1,calculationParam2);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*pointerArray,pointerArray[1],pointerArray[2],calculationParam1,calculationParam2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_checksum_08001f00",
                "param_1": "dataStartAddress",
                "param_2": "pointerArray",
                "param_3": "dataEndAddress",
                "param_4": "paramIndex1",
                "param_5": "paramIndex2",
                "param_6": "paramIndex3",
                "param_7": "calculationParam1",
                "param_8": "calculationParam2",
                "param_9": "calculationParam3",
                "param_10": "condition",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "index",
                "uVar4": "result",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "local_6c": "intermediateValues",
                "local_5c": "localVar1",
                "local_58": "localVar2",
                "local_54": "localVar3",
                "local_50": "localVar4",
                "local_4c": "localVar5",
                "local_48": "localVar6",
                "local_42": "loopCount",
                "local_40": "finalResult",
                "local_3c": "temp5",
                "local_38": "temp6",
                "local_34": "temp7",
                "local_30": "temp8",
                "local_2c": "temp9",
                "local_27": "conditionCounter",
                "local_26": "loopCounter",
                "local_24": "checksum",
                "local_20": "temp10",
                "local_1c": "temp11"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 input_param)\n\n{\n  undefined2 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined8 result4;\n  ushort counter;\n  \n  result2 = FUN_08008eec(input_param,0x41a00000);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  counter = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUN_08002fd4();\n  result2 = FUN_08008eec(input_param,0x447a0000);\n  result3 = FUN_08008e44((uint)counter * 0x32);\n  result2 = FUN_08008cd8(result2,result3);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  result1 = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUNC_08002814(result1);\n  while ((counter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "input_param",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "local_12": "counter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_system_080024c4",
            "code": "\nvoid initializeSystem_080024c4(void)\n\n{\n  undefined4 localFlag1;\n  undefined4 localFlag2;\n  undefined4 localFlag3;\n  char flag1;\n  char flag2;\n  char flag3;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      flag3 = -1;\n    }\n    else {\n      flag3 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      flag2 = -1;\n    }\n    else {\n      flag2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = '\\x01';\n    }\n    localFlag1 = FUN_08008e44((int)flag3);\n    localFlag1 = FUN_08008eec(localFlag1,DAT_20000ef4);\n    localFlag2 = FUN_08008e44((int)flag2);\n    localFlag2 = FUN_08008eec(localFlag2,DAT_20000ef4);\n    localFlag3 = FUN_08008e44((int)flag1);\n    localFlag3 = FUN_08008eec(localFlag3,DAT_20000ef4);\n    FUN_08001e98(localFlag1,localFlag2,localFlag3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_system_080024c4",
                "uVar1": "localFlag1",
                "uVar2": "localFlag2",
                "uVar3": "localFlag3",
                "local_13": "flag1",
                "local_12": "flag2",
                "local_11": "flag3"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "toggle_flags_and_update_080025e8",
            "code": "\nvoid toggleFlagsAndUpdate_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "toggle_flags_and_update_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_from_string_08002638",
            "code": "\nundefined4 parseIntegerFromString_08002638(int baseAddress,byte *stringPointer,uint *resultPointer)\n\n{\n  byte digit;\n  bool isNegative;\n  bool isExponential;\n  int status;\n  char *currentChar;\n  char *nextChar;\n  undefined4 returnValue;\n  undefined8 tempValue;\n  uint parsedValue;\n  byte digitCount;\n  char exponent;\n  int integerValue;\n  char signChar;\n  char *currentPos;\n  \n  nextChar = (char *)(baseAddress + (uint)*stringPointer);\n  currentChar = nextChar + 1;\n  signChar = *nextChar;\n  isNegative = false;\n  if (signChar == '-') {\n    isNegative = true;\n    signChar = *currentChar;\n    currentPos = nextChar + 2;\n  }\n  else {\n    currentPos = currentChar;\n    if (signChar == '+') {\n      currentPos = nextChar + 2;\n      signChar = *currentChar;\n    }\n  }\n  integerValue = 0;\n  exponent = '\\0';\n  digitCount = 0;\n  isExponential = false;\n  do {\n    digit = signChar - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isExponential) {\n          exponent = exponent + -1;\n        }\n        integerValue = (uint)digit + integerValue * 10;\n      }\n      else if (!isExponential) {\n        exponent = exponent + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (isExponential)) {\n        if (digitCount == 0) {\n          returnValue = 0;\n        }\n        else {\n          parsedValue = FUN_08008e3c(integerValue);\n          status = FUN_08009214(parsedValue,0);\n          if (status == 0) {\n            for (; exponent < -1; exponent = exponent + '\\x02') {\n              tempValue = FUN_08008590(parsedValue);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              parsedValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (exponent < '\\0') {\n              tempValue = FUN_08008590(parsedValue);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              parsedValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < exponent; exponent = exponent + -1) {\n                parsedValue = FUN_08008eec(parsedValue,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *resultPointer = parsedValue ^ 0x80000000;\n          }\n          else {\n            *resultPointer = parsedValue;\n          }\n          *stringPointer = ((char)currentPos - (char)baseAddress) - 1;\n          returnValue = 1;\n        }\n        return returnValue;\n      }\n      isExponential = true;\n    }\n    signChar = *currentPos;\n    currentPos = currentPos + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_from_string_08002638",
                "param_1": "baseAddress",
                "param_2": "stringPointer",
                "param_3": "resultPointer",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "isExponential",
                "iVar4": "status",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "returnValue",
                "uVar8": "tempValue",
                "local_1c": "parsedValue",
                "local_16": "digitCount",
                "local_15": "exponent",
                "local_14": "integerValue",
                "local_d": "signChar",
                "local_c": "currentPos"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_data_0800283a",
            "code": "\nvoid initializeData_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_limit_08002870",
            "code": "\nchar incrementAndLimit_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_limit_08002870",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "decrement_and_set_default_08002896",
            "code": "\nchar decrement_and_set_default_08002896(char input_char)\n\n{\n  char output_char;\n  \n  output_char = input_char;\n  if (input_char == '\\0') {\n    output_char = '\\x12';\n  }\n  return output_char + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "decrement_and_set_default_08002896",
                "param_1": "input_char",
                "local_9": "output_char"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_result_080028bc",
            "code": "\nundefined4 calculateResult_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = FUN_08008cdc(input_3,input_3);\n  result_1 = FUN_08008eec(result_1,input_4);\n  result_2 = FUN_08008eec(input_1,input_1);\n  result_1 = FUN_08008cd8(result_1,result_2);\n  result_2 = FUN_08008eec(input_2,input_2);\n  result_1 = FUN_08008cdc(result_1,result_2);\n  result_2 = FUN_08008eec(input_3,0x40800000);\n  result_1 = FUN_08009054(result_1,result_2);\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 result3;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  result3 = FUN_08008590(result1);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result3,(int)((ulonglong)result3 >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_parameters_080029d8",
            "code": "\nvoid updateParameters_080029d8(undefined4 status,int object1,int object2)\n\n{\n  int result;\n  undefined4 newParameter;\n  undefined4 currentParameter;\n  \n  if (((object1 != 0) && (object2 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(object1 + 0x18),*(undefined4 *)(object1 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(object1 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(object1 + 0x1c),*(undefined4 *)(object2 + 0x18)),\n       result != 0)) {\n      currentParameter = *(undefined4 *)(object1 + 0x1c);\n      newParameter = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(object2 + 0x18),\n                           *(undefined4 *)(object1 + 0x20));\n      result = FUN_08009228(currentParameter,newParameter);\n      if (result == 0) {\n        newParameter = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(object2 + 0x18),\n                             *(undefined4 *)(object1 + 0x20));\n      }\n      else {\n        newParameter = *(undefined4 *)(object1 + 0x1c);\n      }\n      *(undefined4 *)(object1 + 0x18) = newParameter;\n    }\n    else {\n      *(undefined4 *)(object1 + 0x18) = *(undefined4 *)(object1 + 0x1c);\n    }\n    *(undefined *)(object1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_parameters_080029d8",
                "param_1": "status",
                "param_2": "object1",
                "param_3": "object2",
                "iVar1": "result",
                "uVar2": "newParameter",
                "uVar3": "currentParameter"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_data_08002a94",
            "code": "\nvoid processData_08002a94(void)\n\n{\n  undefined *puVar1;\n  undefined *currentAddress;\n  undefined *previousAddress;\n  byte currentByte;\n  \n  currentByte = DAT_20000cf0;\n  currentAddress = (undefined *)0x0;\n  previousAddress = (undefined *)0x0;\n  while (puVar1 = previousAddress, currentByte != DAT_20000cf1) {\n    currentByte = FUN_08002896(currentByte);\n    previousAddress = currentAddress;\n    FUN_080029d8(&DAT_20000870 + (uint)currentByte * 0x40,currentAddress,puVar1);\n    currentAddress = &DAT_20000870 + (uint)currentByte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "local_18": "currentAddress",
                "local_14": "previousAddress",
                "local_9": "currentByte"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "check_and_update_parameters_08002afc",
            "code": "\nvoid checkAndUpdateParameters_08002afc(int parameter1,int parameter2)\n\n{\n  int result;\n  undefined4 tempValue1;\n  undefined4 tempValue2;\n  \n  if (((parameter1 != 0) && (*(char *)(parameter1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(parameter1 + 0x18),*(undefined4 *)(parameter2 + 0x18)),\n     result != 0)) {\n    tempValue2 = *(undefined4 *)(parameter2 + 0x18);\n    tempValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(parameter1 + 0x18),\n                         *(undefined4 *)(parameter1 + 0x20));\n    result = FUN_08009228(tempValue2,tempValue1);\n    if (result == 0) {\n      tempValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(parameter1 + 0x18),\n                           *(undefined4 *)(parameter1 + 0x20));\n    }\n    else {\n      tempValue1 = *(undefined4 *)(parameter2 + 0x18);\n    }\n    result = FUN_08009214(tempValue1,*(undefined4 *)(parameter2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(parameter2 + 0x18) = tempValue1;\n      *(undefined *)(parameter2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "check_and_update_parameters_08002afc",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "iVar1": "result",
                "uVar2": "tempValue1",
                "uVar3": "tempValue2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint uVar1;\n  undefined *previousData;\n  undefined *currentData;\n  undefined *previousPointer;\n  undefined *currentPointer;\n  byte byteValue;\n  \n  previousPointer = (undefined *)0x0;\n  currentPointer = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  currentData = (undefined *)0x0;\n  while (previousData = previousPointer, byteValue != DAT_20000cf0) {\n    previousPointer = currentPointer;\n    uVar1 = (uint)byteValue;\n    FUN_08002afc(previousData,currentPointer,&DAT_20000870 + uVar1 * 0x40);\n    byteValue = FUN_08002870(byteValue);\n    currentData = previousData;\n    currentPointer = &DAT_20000870 + uVar1 * 0x40;\n  }\n  FUN_08002afc(previousPointer,currentPointer,0,previousPointer,currentData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "puVar2": "previousData",
                "puVar3": "currentData",
                "local_14": "previousPointer",
                "local_10": "currentPointer",
                "local_9": "byteValue"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_bounds_08002c18",
            "code": "\nvoid calculateBounds_08002c18(int baseAddress,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result1;\n  int result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint result6;\n  undefined8 result7;\n  int lowerBound;\n  uint upperBound;\n  \n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result1 = FUN_08008eec(result1,param2);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(baseAddress + 0x28) = result1;\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result1 = FUN_08008eec(result1,param3);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(baseAddress + 0x2c) = result1;\n  result7 = FUN_0800856c(*(int *)(baseAddress + 0x30) * 0x32);\n  result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x404e0000);\n  result2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x28));\n  result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result4 = FUN_08008e44(result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  upperBound = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x2c));\n  result4 = FUN_08008e44(-result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_080094c0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  lowerBound = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  lowerBound = (*(int *)(baseAddress + 0x10) - upperBound) - lowerBound;\n  if (lowerBound < 0) {\n    result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x28));\n    result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x2c));\n    result4 = FUN_08008e44(result2);\n    result5 = FUN_08008e44(*(undefined4 *)(baseAddress + 0x10));\n    result1 = FUN_08002908(result1,result3,result4,result5);\n    result7 = FUN_08008590(result1);\n    result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = result6 & ~((int)result6 >> 0x1f);\n    upperBound = *(uint *)(baseAddress + 0x10);\n    if ((int)result6 <= (int)*(uint *)(baseAddress + 0x10)) {\n      upperBound = result6;\n    }\n    lowerBound = 0;\n  }\n  *(uint *)(baseAddress + 0x34) = upperBound;\n  *(uint *)(baseAddress + 0x38) = lowerBound + upperBound;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_bounds_08002c18",
                "param_1": "baseAddress",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "local_20": "lowerBound",
                "local_1c": "upperBound"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *pData;\n  byte byteValue;\n  \n  pData = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  while (byteValue != DAT_20000cf0) {\n    index = (uint)byteValue * 0x40;\n    if ((pData != (undefined *)0x0) &&\n       ((pData[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(pData + 0x18),*(undefined4 *)(pData + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(pData + 0x14));\n      FUN_08002c18(pData,result1,result2);\n      pData[0x24] = 0;\n    }\n    byteValue = FUN_08002870(byteValue);\n    pData = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(pData + 0x18),*(undefined4 *)(pData + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(pData + 0x14));\n  FUN_08002c18(pData,result1,result2);\n  pData[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "pData",
                "local_11": "byteValue",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "index"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_system_08002edc",
            "code": "\nvoid initialize_system_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_system_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "perform_data_check_08002f40",
            "code": "\nvoid performDataCheck_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "perform_data_check_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_current_data_pointer_08002f74",
            "code": "\nundefined * get_current_data_pointer_08002f74(void)\n\n{\n  undefined *current_data_pointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    current_data_pointer = (undefined *)0x0;\n  }\n  else {\n    current_data_pointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return current_data_pointer;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_current_data_pointer_08002f74",
                "puVar1": "current_data_pointer"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_data_equal_08002fac",
            "code": "\nbool areDataEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_data_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_data_08002fd4",
            "code": "\nvoid processData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_function_08003004",
            "code": "\nvoid calculateFunction_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int value1;\n  int value2;\n  int value3;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint minValue;\n  int offset;\n  ushort *pointer;\n  int difference;\n  uint result13;\n  undefined8 result14;\n  undefined8 result15;\n  undefined8 result16;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  offset = (uint)DAT_20000cf0 * 0x40;\n  pointer = (ushort *)(&DAT_20000870 + offset);\n  result1 = FUN_08008eec(DAT_20000ebc,input1);\n  result14 = FUN_08008590(result1);\n  value1 = FUN_080095b8((int)result14,(int)((ulonglong)result14 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,input2);\n  result14 = FUN_08008590(result1);\n  value2 = FUN_080095b8((int)result14,(int)((ulonglong)result14 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,input3);\n  result14 = FUN_08008590(result1);\n  value3 = FUN_080095b8((int)result14,(int)((ulonglong)result14 >> 0x20));\n  *pointer = 0;\n  if (value1 < DAT_20000cf4) {\n    *pointer = *pointer | 0x20;\n  }\n  if (value2 < DAT_20000cf8) {\n    *pointer = *pointer | 0x880;\n  }\n  if (value3 < DAT_20000cfc) {\n    *pointer = *pointer | 0x200;\n  }\n  difference = value1 - DAT_20000cf4;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_20000874 + offset) = difference;\n  difference = value2 - DAT_20000cf8;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_20000878 + offset) = difference;\n  difference = value3 - DAT_20000cfc;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_2000087c + offset) = difference;\n  minValue = *(uint *)(&DAT_2000087c + offset);\n  if (*(uint *)(&DAT_2000087c + offset) < *(uint *)(&DAT_20000878 + offset)) {\n    minValue = *(uint *)(&DAT_20000878 + offset);\n  }\n  result13 = *(uint *)(&DAT_20000874 + offset);\n  if (*(uint *)(&DAT_20000874 + offset) < minValue) {\n    result13 = minValue;\n  }\n  *(uint *)(&DAT_20000880 + offset) = result13;\n  if (*(int *)(&DAT_20000880 + offset) != 0) {\n    result1 = FUN_08008e44(value1 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result2 = FUN_08008e44(value2 - DAT_20000cf8);\n    result2 = FUN_08009054(result2,DAT_20000ec0);\n    result3 = FUN_08008e44(value3 - DAT_20000cfc);\n    result3 = FUN_08009054(result3,DAT_20000ec4);\n    result4 = FUN_08008eec(result1,result1);\n    result5 = FUN_08008eec(result2,result2);\n    result4 = FUN_08008cdc(result4,result5);\n    result5 = FUN_08008eec(result3,result3);\n    result4 = FUN_08008cdc(result4,result5);\n    result14 = FUN_08008590(result4);\n    result14 = FUN_080098d0((int)result14,(int)((ulonglong)result14 >> 0x20));\n    result4 = FUN_08008c30((int)result14,(int)((ulonglong)result14 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + offset) = result4;\n    result4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + offset));\n    if (flag == '\\0') {\n      local_1c = FUN_08008eec(input4,result4);\n    }\n    else {\n      local_1c = FUN_08009054(0x3f800000,input4);\n    }\n    result5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + offset),local_1c);\n    *(undefined4 *)(&DAT_20000884 + offset) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    result5 = FUN_08008eec(result5,local_1c);\n    result14 = FUN_08008590(result5);\n    result14 = FUN_08009318((int)result14,(int)((ulonglong)result14 >> 0x20));\n    result5 = FUN_08008bf0((int)result14,(int)((ulonglong)result14 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + offset) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    result5 = FUN_08008eec(result5,result4);\n    result5 = FUN_08008eec(result5,DAT_20000edc);\n    result5 = FUN_08009054(result5,0x453b8000);\n    result14 = FUN_08008590(result5);\n    result14 = FUN_08009318((int)result14,(int)((ulonglong)result14 >> 0x20));\n    result5 = FUN_08008ba0((int)result14,(int)((ulonglong)result14 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + offset) = result5;\n    minValue = FUN_08008eec(result1,result4);\n    result1 = FUN_08008eec(result2,result4);\n    result2 = FUN_08008eec(result3,result4);\n    local_20 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (difference = FUN_08009264(DAT_20000d0c,0), difference != 0)) {\n      result3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,minValue);\n      result4 = FUN_08008eec(DAT_20000d04,result1);\n      result3 = FUN_08008cd8(result3,result4);\n      result4 = FUN_08008eec(DAT_20000d08,result2);\n      result3 = FUN_08008cd8(result3,result4);\n      result14 = FUN_08008590(result3);\n      difference = FUN_08008b24((int)result14,(int)((ulonglong)result14 >> 0x20),0x66666666,0x3fee6666);\n      if (difference != 0) {\n        difference = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + offset));\n        local_20 = DAT_20000d0c;\n        if (difference == 0) {\n          local_20 = *(undefined4 *)(&DAT_20000884 + offset);\n        }\n        result14 = FUN_08008590(result3);\n        difference = FUN_08008b60((int)result14,(int)((ulonglong)result14 >> 0x20),0x66666666,0xbfee6666);\n        if (difference != 0) {\n          result14 = FUN_08008590(result3);\n          result14 = FUN_080082d0(0,0x3ff00000,(int)result14,(int)((ulonglong)result14 >> 0x20));\n          result14 = FUN_08008640((int)result14,(int)((ulonglong)result14 >> 0x20),0,0x3fe00000);\n          result14 = FUN_080098d0((int)result14,(int)((ulonglong)result14 >> 0x20));\n          result3 = FUN_08008c30((int)result14,(int)((ulonglong)result14 >> 0x20));\n          result14 = FUN_08008590(local_20);\n          result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result4 = FUN_08008eec(result4,result3);\n          result15 = FUN_08008590(result4);\n          result16 = FUN_08008590(result3);\n          result16 = FUN_080082d0(0,0x3ff00000,(int)result16,(int)((ulonglong)result16 >> 0x20));\n          result15 = FUN_08008894((int)result15,(int)((ulonglong)result15 >> 0x20),(int)result16,\n                                (int)((ulonglong)result16 >> 0x20));\n          result15 = FUN_080098d0((int)result15,(int)((ulonglong)result15 >> 0x20));\n          difference = FUN_08008b24((int)result14,(int)((ulonglong)result14 >> 0x20),(int)result15,\n                                (int)((ulonglong)result15 >> 0x20));\n          if (difference == 0) {\n            result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result4 = FUN_08008eec(result4,result3);\n            result14 = FUN_08008590(result4);\n            result15 = FUN_08008590(result3);\n            result15 = FUN_080082d0(0,0x3ff00000,(int)result15,(int)((ulonglong)result15 >> 0x20));\n            result14 = FUN_08008894((int)result14,(int)((ulonglong)result14 >> 0x20),(int)result15,\n                                  (int)((ulonglong)result15 >> 0x20));\n            result14 = FUN_080098d0((int)result14,(int)((ulonglong)result14 >> 0x20));\n            local_20 = FUN_08008c30((int)result14,(int)((ulonglong)result14 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + offset) = local_20;\n    result4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + offset));\n    difference = FUN_08009228(local_20,result4);\n    result3 = result4;\n    if (difference != 0) {\n      result3 = local_20;\n    }\n    *(undefined4 *)(&DAT_20000888 + offset) = result3;\n    difference = FUN_08009250(result4,*(undefined4 *)(&DAT_20000884 + offset));\n    if (difference == 0) {\n      (&DAT_20000895)[offset] = 0;\n    }\n    else {\n      (&DAT_20000895)[offset] = 1;\n    }\n    (&DAT_20000894)[offset] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + offset);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = minValue;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = value1;\n    DAT_20000cf8 = value2;\n    DAT_20000cfc = value3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_function_08003004",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "uVar1": "result1",
                "iVar2": "value1",
                "iVar3": "value2",
                "iVar4": "value3",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "result4",
                "uVar8": "result5",
                "uVar9": "minValue",
                "iVar10": "offset",
                "puVar11": "pointer",
                "iVar12": "difference"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_parameters_080035ec",
            "code": "\nvoid initializeParameters_080035ec(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  DAT_20000cf4 = input1;\n  DAT_20000cf8 = input2;\n  DAT_20000cfc = input3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_parameters_080035ec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 newData)\n\n{\n  undefined4 result;\n  int offset;\n  undefined4 currentData;\n  \n  offset = (uint)DAT_20000cf1 * 0x40;\n  currentData = *(undefined4 *)(&DAT_20000890 + offset);\n  result = FUN_08008e44(newData);\n  result = FUN_08008eec(currentData,result);\n  currentData = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n  result = FUN_08009054(result,currentData);\n  *(undefined4 *)(&DAT_20000890 + offset) = result;\n  *(undefined4 *)(&DAT_20000880 + offset) = newData;\n  *(undefined4 *)(&DAT_20000888 + offset) = 0;\n  *(undefined4 *)(&DAT_2000088c + offset) = 0;\n  (&DAT_20000895)[offset] = 0;\n  (&DAT_20000894)[offset] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "newData",
                "uVar1": "result",
                "iVar2": "offset",
                "uVar3": "currentData"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid processString_0800369c(char *input_string)\n\n{\n  char *current_character;\n  \n  current_character = input_string;\n  while (*current_character != '\\0') {\n    FUN_08008250(*current_character);\n    current_character = current_character + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "input_string",
                "local_c": "current_character"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_string_080036c6",
            "code": "\nvoid printString_080036c6(char *string)\n\n{\n  char *currentChar;\n  \n  currentChar = string;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "string",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_representation_080036f0",
            "code": "\nvoid print_binary_representation_080036f0(uint number,int bit_count)\n\n{\n  undefined4 uVar1;\n  int bit_index;\n  uint mask;\n  \n  mask = 1 << (bit_count - 1U & 0xff);\n  for (bit_index = 0; bit_index < bit_count; bit_index = bit_index + 1) {\n    if ((mask & number) == 0) {\n      uVar1 = 0x30;\n    }\n    else {\n      uVar1 = 0x31;\n    }\n    FUN_08008250(uVar1);\n    mask = mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "bit_count",
                "local_10": "bit_index",
                "local_c": "mask"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_memory_08003740",
            "code": "\nvoid initialize_memory_08003740(undefined data_buffer)\n\n{\n  FUN_080036f0(data_buffer,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_memory_08003740",
                "param_1": "data_buffer"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_memory_0800375c",
            "code": "\nvoid initializeMemory_0800375c(undefined2 data)\n\n{\n  FUN_080036f0(data,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_memory_0800375c",
                "param_1": "data"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_number_08003778",
            "code": "\nvoid printNumber_08003778(uint number)\n\n{\n  uint previousDigitCount;\n  uint remainingNumber;\n  char digitBuffer [12];\n  byte digitCount;\n  \n  digitCount = 0;\n  remainingNumber = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; remainingNumber != 0; remainingNumber = remainingNumber / 10) {\n      previousDigitCount = (uint)digitCount;\n      digitCount = digitCount + 1;\n      digitBuffer[previousDigitCount + 1] = (char)(remainingNumber % 10) + '0';\n    }\n    for (; digitCount != 0; digitCount = digitCount - 1) {\n      FUN_08008250(digitBuffer[digitCount]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_number_08003778",
                "param_1": "number",
                "uVar1": "previousDigitCount",
                "local_1c": "remainingNumber",
                "acStack_15": "digitBuffer",
                "local_9": "digitCount"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_abs_value_080037fc",
            "code": "\nvoid print_abs_value_080037fc(int value)\n\n{\n  int abs_value;\n  \n  abs_value = value;\n  if (value < 0) {\n    FUN_08008250(0x2d);\n    abs_value = -value;\n  }\n  FUN_08003778(abs_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_abs_value_080037fc",
                "param_1": "value",
                "local_c": "abs_value"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "calculate_checksum_08003826",
            "code": "\nvoid calculateChecksum_08003826(uint inputData)\n\n{\n  int result;\n  undefined4 modifiedData;\n  byte digitChar;\n  uint temp;\n  uint modifiedInput;\n  char checksumArray [13];\n  uint digitCount;\n  byte currentIndex;\n  byte loopCounter;\n  \n  result = FUN_08009228(inputData,0);\n  modifiedInput = inputData;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    modifiedInput = inputData ^ 0x80000000;\n  }\n  for (loopCounter = DAT_20000ef9; 1 < loopCounter; loopCounter = loopCounter - 2) {\n    modifiedInput = FUN_08008eec(modifiedInput,0x42c80000);\n  }\n  if (loopCounter != 0) {\n    modifiedInput = FUN_08008eec(modifiedInput,0x41200000);\n  }\n  modifiedData = FUN_08008cdc(modifiedInput,0x3f000000);\n  currentIndex = 0;\n  digitCount = FUN_08009278(modifiedData);\n  checksumArray[DAT_20000ef9 + 1] = '.';\n  for (; digitCount != 0; digitCount = digitCount / 10) {\n    if (currentIndex == DAT_20000ef9) {\n      currentIndex = currentIndex + 1;\n    }\n    temp = (uint)currentIndex;\n    currentIndex = currentIndex + 1;\n    checksumArray[temp + 1] = (char)(digitCount % 10) + '0';\n  }\n  while (currentIndex < DAT_20000ef9) {\n    temp = (uint)currentIndex;\n    currentIndex = currentIndex + 1;\n    checksumArray[temp + 1] = '0';\n  }\n  if (currentIndex == DAT_20000ef9) {\n    digitChar = currentIndex + 1;\n    currentIndex = currentIndex + 2;\n    checksumArray[digitChar + 1] = '0';\n  }\n  for (; currentIndex != 0; currentIndex = currentIndex - 1) {\n    FUN_08008250(checksumArray[currentIndex]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "calculate_checksum_08003826",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "modifiedData",
                "bVar3": "digitChar",
                "uVar4": "temp",
                "local_24": "modifiedInput",
                "acStack_1d": "checksumArray",
                "local_10": "digitCount",
                "local_a": "currentIndex",
                "local_9": "loopCounter"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_function_080039a0",
            "code": "\nvoid initializeFunction_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_function_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "check_and_process_data_080039bc",
            "code": "\nvoid checkAndProcessData_080039bc(void)\n\n{\n  int result;\n  undefined4 errorCode;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = FUN_08004d2c(counter,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      errorCode = FUN_080005b4(&DAT_20000d10);\n      FUN_08004030(errorCode);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "check_and_process_data_080039bc",
                "local_9": "counter",
                "iVar1": "result",
                "uVar2": "errorCode"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "set_bits_according_to_param_08003a18",
            "code": "\nvoid setBitsAccordingToParam_08003a18(uint param)\n\n{\n  if ((param & 0x80) == 0) {\n    if ((param & 0x40) == 0) {\n      if ((param & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "set_bits_according_to_param_08003a18",
                "param_1": "param"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "process_data_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid processData_08003a74(void)\n\n{\n  byte value;\n  \n  value = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((value & 0x10) == 0) {\n      if ((value & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((value & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((value & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((value & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "bVar1": "value"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_parameter_08003b98",
            "code": "\nuint processParameter_08003b98(char *inputString)\n\n{\n  byte firstChar;\n  int result;\n  undefined4 conversionResult;\n  uint returnValue;\n  undefined8 tempVar;\n  undefined4 paramValue1;\n  undefined4 paramValue2;\n  byte index;\n  byte isSecondParamPresent;\n  \n  if (*inputString != '$') {\n    returnValue = FUN_080005b4(inputString);\n    return returnValue;\n  }\n  index = 1;\n  isSecondParamPresent = '\\0';\n  firstChar = inputString[1];\n  if (firstChar == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < firstChar) || (firstChar < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstChar) {\n  case 0x23:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (inputString[2] == '\\0') {\n      for (isSecondParamPresent = 0; isSecondParamPresent < 2; isSecondParamPresent = isSecondParamPresent + 1) {\n        result = FUN_08004d2c(isSecondParamPresent,inputString);\n        if (result == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(isSecondParamPresent,inputString);\n        }\n      }\n      return 0;\n    }\n    isSecondParamPresent = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(inputString,&index,&paramValue2);\n    if (result == 0) {\n      return 1;\n    }\n    firstChar = index + 1;\n    if (inputString[index] != '=') {\n      return 3;\n    }\n    index = firstChar;\n    if (isSecondParamPresent == '\\0') {\n      result = FUN_08002638(inputString,&index,&paramValue1);\n      if (result == 0) {\n        return 1;\n      }\n      if (inputString[index] == '\\0') {\n        conversionResult = FUN_08009278(paramValue2);\n        returnValue = FUN_08004e30(conversionResult,paramValue1);\n        return returnValue;\n      }\n      return 3;\n    }\n    do {\n      inputString[(uint)index - (uint)firstChar] = inputString[index];\n      returnValue = (uint)index;\n      index = index + 1;\n    } while (inputString[returnValue] != '\\0');\n    isSecondParamPresent = firstChar;\n    isSecondParamPresent = FUN_080005b4(inputString);\n    if (isSecondParamPresent != 0) {\n      return (uint)isSecondParamPresent;\n    }\n    tempVar = FUN_08008590(paramValue2);\n    tempVar = FUN_08009798((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    isSecondParamPresent = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    FUN_08004bc0(isSecondParamPresent,inputString);\n    break;\n  case 0x58:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_parameter_08003b98",
                "param_1": "inputString",
                "bVar1": "firstChar",
                "iVar2": "result",
                "uVar3": "conversionResult",
                "uVar4": "returnValue",
                "uVar5": "tempVar",
                "local_14": "paramValue1",
                "local_10": "paramValue2",
                "local_a": "index",
                "local_9": "isSecondParamPresent"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "parse_input_08003f34",
            "code": "\nvoid parseInput_08003f34(void)\n\n{\n  byte currentChar;\n  undefined4 result;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      currentChar = FUN_08008286();\n      if (currentChar == 0xff) {\n        return;\n      }\n      if ((currentChar == 10) || (currentChar == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < currentChar) && (currentChar != 0x2f)) {\n          if (currentChar == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((currentChar < 0x61) || (0x7a < currentChar)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = currentChar;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = currentChar - 0x20;\n          }\n        }\n      }\n      else if (currentChar == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUN_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      result = FUN_08003b98(&DAT_20000d10);\n      FUN_08004030(result);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "parse_input_08003f34",
                "bVar1": "currentChar",
                "uVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "display_error_08004030",
            "code": "\nvoid displayError_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(errorCode) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "display_error_08004030",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char alarmType)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (alarmType == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (alarmType == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "alarmType"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_status_message_080041a0",
            "code": "\nvoid displayStatusMessage_080041a0(undefined statusType)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(statusType) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_status_message_080041a0",
                "param_1": "statusType"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_grbl_version_08004228",
            "code": "\nvoid printGrblVersion_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_grbl_version_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "display_grbl_commands_0800423c",
            "code": "\nvoid displayGrblCommands_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$setting=value (save Grbl setting)\\r\\n$startup=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "display_grbl_commands_0800423c",
                "$x=value": "$setting=value",
                "$Nx=line": "$startup=line"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_settings_08004250",
            "code": "\nvoid printSettings_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_settings_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 tempVar;\n  undefined8 processedVar;\n  undefined4 stackArray [3];\n  byte index;\n  byte currentIteration;\n  \n  currentIteration = 0;\n  while( true ) {\n    if (7 < currentIteration) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          processedVar = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          processedVar = FUN_08008640((int)processedVar,(int)((ulonglong)processedVar >> 0x20),0x57e16865,0x3fa42851);\n          tempVar = FUN_08008c30((int)processedVar,(int)((ulonglong)processedVar >> 0x20));\n          FUN_08003826(tempVar);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(currentIteration,stackArray);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(currentIteration) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(stackArray[index]);\n      }\n      else {\n        processedVar = FUN_08008590(stackArray[index]);\n        processedVar = FUN_08008640((int)processedVar,(int)((ulonglong)processedVar >> 0x20),0x57e16865,0x3fa42851);\n        tempVar = FUN_08008c30((int)processedVar,(int)((ulonglong)processedVar >> 0x20));\n        FUN_08003826(tempVar);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    currentIteration = currentIteration + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "local_9": "currentIteration",
                "local_a": "index",
                "iVar1": "result",
                "uVar2": "tempVar",
                "uVar3": "processedVar",
                "auStack_18": "stackArray"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "initialize_settings_080046d0",
            "code": "\nvoid initializeSettings_080046d0(void)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    uVar2 = FUN_08008590(DAT_20000e78);\n    uVar2 = FUN_08008640((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),0x57e16865,0x3fa42851);\n    uVar1 = FUN_08008c30((int)uVar2,(int)((ulonglong)uVar2 >> 0x20));\n    FUN_08003826(uVar1);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "initialize_settings_080046d0"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_binary_08004900",
            "code": "\nvoid initializeBinary_08004900(undefined undefinedParam1,undefined4 undefinedParam2)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(undefinedParam1);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(undefinedParam2);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_binary_08004900",
                "param_1": "undefinedParam1",
                "param_2": "undefinedParam2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 statusVal;\n  uint index;\n  undefined4 position;\n  undefined8 tempVar1;\n  undefined8 tempVar2;\n  undefined4 statusArray [6];\n  byte i;\n  \n  statusArray[3] = DAT_20000eac;\n  statusArray[4] = DAT_20000eb0;\n  statusArray[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    statusVal = FUN_08008e44(statusArray[i + 3]);\n    index = (uint)i;\n    statusVal = FUN_08009054(statusVal,(&DAT_20000ebc)[i]);\n    statusArray[index] = statusVal;\n    if ((DAT_20000ee4 & 1) != 0) {\n      tempVar1 = FUN_08008590(statusArray[i]);\n      tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x57e16865,0x3fa42851);\n      index = (uint)i;\n      statusVal = FUN_08008c30((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20));\n      statusArray[index] = statusVal;\n    }\n    FUN_08003826(statusArray[i]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      position = statusArray[i];\n      statusVal = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      index = (uint)i;\n      statusVal = FUN_08008cd8(position,statusVal);\n      statusArray[index] = statusVal;\n    }\n    else {\n      tempVar1 = FUN_08008590(statusArray[i]);\n      statusVal = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      tempVar2 = FUN_08008590(statusVal);\n      tempVar2 = FUN_08008640((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20),0x57e16865,0x3fa42851);\n      tempVar1 = FUN_080082d0((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),(int)tempVar2,\n                           (int)((ulonglong)tempVar2 >> 0x20));\n      index = (uint)i;\n      statusVal = FUN_08008c30((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20));\n      statusArray[index] = statusVal;\n    }\n    FUN_08003826(statusArray[i]);\n    if (i < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "uVar1": "statusVal",
                "uVar2": "index",
                "uVar3": "position",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "auStack_2c": "statusArray",
                "local_11": "i"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_08004bc0",
            "code": "\nvoid initializeMemory_08004bc0(byte byteValue,undefined4 undefinedValue)\n\n{\n  FUN_08000374((ushort)byteValue * 0x101 + 0x300,undefinedValue,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_08004bc0",
                "param_1": "byteValue",
                "param_2": "undefinedValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_data_offset_08004bf4",
            "code": "\nvoid calculateDataOffset_08004bf4(byte inputByte,undefined4 outputData)\n\n{\n  FUN_08000374((ushort)inputByte * 0xd + 0x200,outputData,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_data_offset_08004bf4",
                "param_1": "inputByte",
                "param_2": "outputData"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_memory_08004c2a",
            "code": "\nvoid initializeMemory_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_memory_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char inputParameter)\n\n{\n  if (inputParameter != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "validate_and_process_byte_08004d2c",
            "code": "\nbool validateAndProcessByte_08004d2c(byte inputByte,undefined *outputBuffer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(outputBuffer,(ushort)inputByte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *outputBuffer = 0;\n    FUN_08004bc0(inputByte,outputBuffer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "validate_and_process_byte_08004d2c",
                "param_1": "inputByte",
                "param_2": "outputBuffer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_update_data_08004d7c",
            "code": "\nbool checkAndUpdateData_08004d7c(byte byteValue,undefined4 dataPointer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(dataPointer,(ushort)byteValue * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(dataPointer,0,0xc);\n    FUN_08004bf4(byteValue,dataPointer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_update_data_08004d7c",
                "param_1": "byteValue",
                "param_2": "dataPointer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_and_perform_operation_08004dd2",
            "code": "\nundefined4 checkAndPerformOperation_08004dd2(void)\n\n{\n  byte status;\n  int result;\n  \n  status = FUN_08000310(0);\n  if (status == 5) {\n    result = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < status) {\n      return 0;\n    }\n    result = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (result == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_and_perform_operation_08004dd2",
                "bVar1": "status",
                "iVar2": "result"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_config_08004e30",
            "code": "\nundefined4 updateConfig_08004e30(int configOption,uint configValue)\n\n{\n  undefined4 returnValue;\n  int errorCode;\n  undefined8 tempValue;\n  \n  switch(configOption) {\n  case 0:\n  case 1:\n  case 2:\n    errorCode = FUN_0800923c(configValue,0);\n    if (errorCode != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[configOption] = configValue;\n    break;\n  case 3:\n    errorCode = FUN_08009228(configValue,0x40400000);\n    if (errorCode != 0) {\n      return 9;\n    }\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = configValue;\n    break;\n  case 5:\n    DAT_20000ed0 = configValue;\n    break;\n  case 6:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 7:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 8:\n    returnValue = FUN_08008eec(configValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(returnValue,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = configValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = configValue;\n    break;\n  case 0xb:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xc:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xd:\n    errorCode = FUN_08009214(configValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    errorCode = FUN_08009214(configValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    errorCode = FUN_08009214(configValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    errorCode = FUN_08009214(configValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    errorCode = FUN_08009214(configValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = configValue;\n    break;\n  case 0x14:\n    DAT_20000eec = configValue;\n    break;\n  case 0x15:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = configValue;\n    break;\n  case 0x17:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_config_08004e30",
                "param_1": "configOption",
                "param_2": "configValue",
                "uVar1": "returnValue",
                "iVar2": "errorCode",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int result;\n  undefined buffer [15];\n  byte index;\n  \n  result = FUN_08004dd2();\n  if (result == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (index = 0; index < 8; index = index + 1) {\n    result = FUN_08004d7c(index,buffer);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "iVar1": "result",
                "auStack_18": "buffer",
                "local_9": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_application_08005250",
            "code": "\nvoid initializeApplication_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_application_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "update_data_0800525c",
            "code": "\nvoid updateData_0800525c(byte inputByte)\n\n{\n  if ((int)(char)inputByte != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (inputByte == 0) {\n      FUN_08005250();\n      DAT_20000e12 = inputByte;\n    }\n    else {\n      if ((char)inputByte < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = inputByte;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "update_data_0800525c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_with_mask_080052ac",
            "code": "\n\n\nvoid updateDataWithMask_080052ac(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_with_mask_080052ac",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "apply_mask_to_data_080052dc",
            "code": "\n\n\nvoid applyMaskToData_080052dc(uint data)\n\n{\n  _DAT_40021014 = data | _DAT_40021014 & 0xfffff55f;\n  void;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "apply_mask_to_data_080052dc",
                "param_1": "data",
                "return": "void"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_division_factor_08005324",
            "code": "\nvoid calculateDivisionFactor_08005324(uint inputParameter)\n\n{\n  uint adjustedParameter;\n  \n  adjustedParameter = inputParameter;\n  if (inputParameter < 800) {\n    adjustedParameter = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedParameter;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_division_factor_08005324",
                "param_1": "inputParameter",
                "local_14": "adjustedParameter"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "calculate_excess_08005360",
            "code": "\nbool calculateExcess_08005360(void)\n\n{\n  bool exceedsThreshold;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  exceedsThreshold = 420000 < DAT_20000e2c;\n  if (exceedsThreshold) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return exceedsThreshold;\n}\n\n",
            "renaming": {
                "FUN_08005360": "calculate_excess_08005360",
                "bVar1": "exceedsThreshold"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_status_080053a0",
            "code": "\nvoid updateStatus_080053a0(void)\n\n{\n  int returnValue;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushortType *)0x0) {\n    DAT_20000e38 = (ushortType *)FUN_08002f74();\n    if (DAT_20000e38 == (ushortType *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushortType *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushortType *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_status_080053a0",
                "iVar1": "returnValue",
                "ushort": "ushortType"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_and_process_data_08005790",
            "code": "\nvoid initializeAndProcessData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_and_process_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "initialize_and_check_080057e4",
            "code": "\nvoid initialize_and_check_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "initialize_and_check_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_application_0800583c",
            "code": "\nvoid initializeApplication_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_application_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_state_and_call_function_0800585c",
            "code": "\nvoid updateStateAndCallFunction_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_state_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_if_ready_0800587c",
            "code": "\nvoid updateStatusIfReady_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_if_ready_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_and_update_flags_08005900",
            "code": "\nundefined4 checkAndUpdateFlags_08005900(byte byteValue)\n\n{\n  if (byteValue == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (byteValue < 0x7f) {\n    if (byteValue == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (byteValue < 0x40) {\n      if (byteValue == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (byteValue == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_and_update_flags_08005900",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "execute_system_interrupt_0800597c",
            "code": "\nvoid execute_system_interrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "execute_system_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "check_initialization_08005984",
            "code": "\nundefined4 checkInitialization_08005984(undefined4 input)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000e44 == 0) {\n    result = FUN_0800597c(1,input,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005984": "check_initialization_08005984",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initialize_system_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_dat20000e48_08005a68",
            "code": "\nvoid incrementDat20000e48_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_dat20000e48_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_08005a84",
            "code": "\nundefined4 get_data_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "wait_for_value_to_reach_08005a98",
            "code": "\nvoid waitForValueToReach_08005a98(int targetValue)\n\n{\n  int initialValue;\n  uint currentValue;\n  \n  initialValue = FUN_08005a84();\n  do {\n    currentValue = FUN_08005a84();\n  } while (currentValue < (uint)(targetValue + initialValue));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "wait_for_value_to_reach_08005a98",
                "param_1": "targetValue",
                "iVar1": "initialValue",
                "uVar2": "currentValue"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "write_to_memory_08005bdc",
            "code": "\nvoid writeToMemory_08005bdc(byte byteValue,uint byteToWrite)\n\n{\n  if ((char)byteValue < '\\0') {\n    *(char *)((byteValue & 0xf) + 0xe000ed14) = (char)((byteToWrite & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)byteValue + -0x1fff1c00) = (char)((byteToWrite & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "write_to_memory_08005bdc",
                "param_1": "byteValue",
                "param_2": "byteToWrite"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_update_param_08005c30",
            "code": "\n\n\nbool checkAndUpdateParam_08005c30(int inputParam)\n\n{\n  bool isWithinRange;\n  \n  isWithinRange = inputParam - 1U < 0x1000000;\n  if (isWithinRange) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isWithinRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_update_param_08005c30",
                "param_1": "inputParam",
                "bVar1": "isWithinRange"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_and_control_08005cec",
            "code": "\n\n\nundefined4 check_and_control_08005cec(uint *flags)\n\n{\n  int result;\n  uint random_number;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        random_number = FUN_08005a84();\n        if (result + 5000U <= random_number) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flags[1],_DAT_40023800));\n      if (flags[1] == 1) {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          random_number = FUN_08005a84();\n          if (result + 5000U <= random_number) {\n            return 3;\n          }\n        }\n      }\n      else {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          random_number = FUN_08005a84();\n          if (result + 5000U <= random_number) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flags[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    result = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      random_number = FUN_08005a84();\n      if (result + 100U <= random_number) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    result = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      random_number = FUN_08005a84();\n      if (result + 5000U <= random_number) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flags[2]);\n    if (flags[2] == 1) {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        random_number = FUN_08005a84();\n        if (result + 5000U <= random_number) {\n          return 3;\n        }\n      }\n    }\n    else {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        random_number = FUN_08005a84();\n        if (result + 5000U <= random_number) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flags[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flags[6] == 2) {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           device_config_b << 0x18 |\n           device_config_8 | device_config_9 << 6 | ((device_config_10 >> 1) - 1) * 0x10000 | device_config_7 |\n           0x20000000;\n      _DAT_42470060 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        random_number = FUN_08005a84();\n        if (result + 100U <= random_number) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_and_control_08005cec",
                "param_1": "flags",
                "iVar1": "result",
                "uVar2": "random_number",
                "param_1[0xb]": "device_config_b",
                "param_1[8]": "device_config_8",
                "param_1[9]": "device_config_9",
                "param_1[10]": "device_config_10",
                "param_1[7]": "device_config_7"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "check_params_and_perform_action_0800618c",
            "code": "\n\n\nundefined4 checkParamsAndPerformAction_0800618c(uint *paramArray,uint paramSize)\n\n{\n  int returnValue;\n  uint randomValue1;\n  uint randomValue2;\n  undefined8 timeValue;\n  \n  if ((_DAT_40023c00 & 0xf) < paramSize) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)paramSize);\n    if (paramSize != (paramSize & 0xf)) {\n      return 1;\n    }\n    if ((*paramArray & 1) != 0) {\n      if (paramArray[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((paramArray[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = paramArray[1] | _DAT_40023808 & 0xfffffffc;\n      returnValue = FUN_08005a84();\n      randomValue2 = returnValue + 5000;\n      if (paramArray[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          randomValue1 = FUN_08005a84();\n          if (randomValue2 <= randomValue1) {\n            return 3;\n          }\n        }\n      }\n      else if (paramArray[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          randomValue1 = FUN_08005a84();\n          if (randomValue2 <= randomValue1) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          randomValue1 = FUN_08005a84();\n          if (randomValue2 <= randomValue1) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*paramArray & 1) != 0) {\n      if (paramArray[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (paramArray[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = paramArray[1] | _DAT_40023808 & 0xfffffffc;\n      returnValue = FUN_08005a84();\n      randomValue2 = returnValue + 5000;\n      if (paramArray[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          randomValue1 = FUN_08005a84();\n          if (randomValue2 <= randomValue1) {\n            return 3;\n          }\n        }\n      }\n      else if (paramArray[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          randomValue1 = FUN_08005a84();\n          if (randomValue2 <= randomValue1) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          randomValue1 = FUN_08005a84();\n          if (randomValue2 <= randomValue1) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)paramSize);\n    if (paramSize != (paramSize & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*paramArray & 2) != 0) {\n    _DAT_40023808 = paramArray[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*paramArray & 4) != 0) {\n    _DAT_40023808 = paramArray[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*paramArray & 8) != 0) {\n    _DAT_40023808 = paramArray[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  timeValue = FUN_08006628();\n  FUN_08005c30((uint)timeValue / 1000,(int)((ulonglong)timeValue >> 0x20),(uint)timeValue * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "check_params_and_perform_action_0800618c",
                "param_1": "paramArray",
                "param_2": "paramSize",
                "iVar1": "returnValue",
                "uVar2": "randomValue1",
                "uVar3": "randomValue2",
                "uVar4": "timeValue"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "update_flags_0800640c",
            "code": "\n\n\nvoid updateFlags_0800640c(int condition,uint value1,uint value2)\n\n{\n  undefined4 flag;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  if (condition == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    flag = 0x100;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020000,&flag);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    flag = 0x200;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020800,&flag);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "update_flags_0800640c",
                "param_1": "condition",
                "param_2": "value1",
                "param_3": "value2",
                "local_1c": "flag",
                "local_18": "constant1",
                "local_14": "constant2",
                "local_10": "constant3",
                "local_c": "constant4"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_speed_080064ec",
            "code": "\n\n\nuint calculateClockSpeed_080064ec(void)\n\n{\n  uint clockSource;\n  uint clockSpeed;\n  \n  clockSource = _DAT_40023808 & 0xc;\n  if (clockSource == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      clockSpeed = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      clockSpeed = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return clockSpeed / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockSource < 9) {\n    if (clockSource == 0) {\n      return 16000000;\n    }\n    if (clockSource == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_speed_080064ec",
                "uVar1": "clockSource",
                "local_c": "clockSpeed"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_shifted_value_08006628",
            "code": "\n\n\nuint calculateShiftedValue_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_shifted_value_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "calculate_shifted_value_08006680",
            "code": "\n\n\nuint calculateShiftedValue_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "calculate_shifted_value_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "shift_value_080066cc",
            "code": "\n\n\nuint shiftValue_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "shift_value_080066cc",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_control_register_08006950",
            "code": "\n\n\nvoid setControlRegister_08006950(uint inputParam)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (inputParam & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_control_register_08006950",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_shifted_value_08006998",
            "code": "\n\n\nuint getShiftedValue_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_shifted_value_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_080069b4",
            "code": "\nvoid setBit_080069b4(byteValue inputByte)\n\n{\n  *(integer *)(((uinteger)(integer)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_080069b4",
                "param_1": "inputByte",
                "int": "integer",
                "byte": "byteValue"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_08006a18",
            "code": "\nbool checkBit_08006a18(byte byteValue)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteValue >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (byteValue & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_08006a18",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_08006a58",
            "code": "\nvoid setBit_08006a58(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_08006a58",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_by_index_08006a8c",
            "code": "\nvoid setBitByIndex_08006a8c(byte inputByte)\n\n{\n  *(signedInt *)((((unsignedInt)(signedInt)(signedChar)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte addressOf 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_by_index_08006a8c",
                "param_1": "inputByte",
                "uint": "unsignedInt",
                "int": "signedInt",
                "char": "signedChar",
                "&": "addressOf"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_08006ac0",
            "code": "\nbool checkBit_08006ac0(byte byteToCheck)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteToCheck >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (byteToCheck & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "byteToCheck"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "update_memory_08006b00",
            "code": "\nvoid updateMemory_08006b00(byte inputByte,uint valueToStore)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((valueToStore & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((valueToStore & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "update_memory_08006b00",
                "param_1": "inputByte",
                "param_2": "valueToStore"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "get_nibble_08006b54",
            "code": "\nbyte getNibble_08006b54(byte inputByte)\n\n{\n  byte outputByte;\n  \n  if ((char)inputByte < '\\0') {\n    outputByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    outputByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return outputByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "get_nibble_08006b54",
                "param_1": "inputByte",
                "bVar1": "outputByte"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "masked_bitwise_operation_08006ba0",
            "code": "\nuint maskedBitwiseOperation_08006ba0(uint mask,uint value1,uint value2)\n\n{\n  uint remainingBits;\n  \n  mask = mask & 7;\n  remainingBits = 7 - mask;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (mask + 4 < 7) {\n    mask = 0;\n  }\n  else {\n    mask = mask - 3;\n  }\n  return value2 & (1 << (mask & 0xff)) - 1U |\n         ((1 << (remainingBits & 0xff)) - 1U & value1) << (mask & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "masked_bitwise_operation_08006ba0",
                "param_1": "mask",
                "param_2": "value1",
                "param_3": "value2",
                "uVar1": "remainingBits"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "bitwise_operation_08006c04",
            "code": "\nvoid bitwiseOperation_08006c04(uint inputValue,uint bitShiftAmount,uint *outputValue1,uint *outputValue2)\n\n{\n  uint difference;\n  \n  bitShiftAmount = bitShiftAmount & 7;\n  difference = 7 - bitShiftAmount;\n  if (3 < difference) {\n    difference = 4;\n  }\n  if (bitShiftAmount + 4 < 7) {\n    bitShiftAmount = 0;\n  }\n  else {\n    bitShiftAmount = bitShiftAmount - 3;\n  }\n  *outputValue1 = (1 << (difference & 0xff)) - 1U & inputValue >> (bitShiftAmount & 0xff);\n  *outputValue2 = (1 << (bitShiftAmount & 0xff)) - 1U & inputValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "bitwise_operation_08006c04",
                "param_1": "inputValue",
                "param_2": "bitShiftAmount",
                "param_3": "outputValue1",
                "param_4": "outputValue2",
                "uVar1": "difference"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "endless_loop_08006c70",
            "code": "\nvoid endlessLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "endless_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_set_param_08006c9c",
            "code": "\n\n\nbool checkAndSetParam_08006c9c(int input)\n\n{\n  bool isInputValid;\n  \n  isInputValid = input - 1U < 0x1000000;\n  if (isInputValid) {\n    _DAT_e000e014 = input + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInputValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_set_param_08006c9c",
                "param_1": "input",
                "bVar1": "isInputValid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "execute_function_08006ce0",
            "code": "\nvoid executeFunction_08006ce0(undefined4 param)\n\n{\n  FUN_08006950(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "execute_function_08006ce0",
                "param_1": "param"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "execute_reverse_function_08006cf6",
            "code": "\nvoid executeReverseFunction_08006cf6(char character,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 returnValue;\n  \n  returnValue = FUN_08006998();\n  returnValue = FUN_08006ba0(returnValue,parameter2,parameter3);\n  FUN_08006b00((int)character,returnValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "execute_reverse_function_08006cf6",
                "param_1": "character",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "initialize_08006d2e",
            "code": "\nvoid initialize_08006d2e(char input_char)\n\n{\n  FUN_080069b4((int)input_char);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "initialize_08006d2e",
                "param_1": "input_char"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "execute_function_08006d4a",
            "code": "\nvoid executeFunction_08006d4a(char inputParameter)\n\n{\n  FUN_080069e4((int)inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "execute_function_08006d4a",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_system_08006d66",
            "code": "\nvoid initialize_system_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_system_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "process_data_08006d72",
            "code": "\nundefined4 processData_08006d72(undefined4 input)\n\n{\n  undefined4 returnValue;\n  \n  returnValue = FUN_08006c9c(input);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "process_data_08006d72",
                "param_1": "input",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "fetch_data_08006d8a",
            "code": "\nundefined4 fetchData_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "fetch_data_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "convert_and_process_08006d98",
            "code": "\nvoid convertAndProcess_08006d98(char inputChar,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = FUN_08006b54((int)inputChar);\n  FUN_08006c04(convertedValue,arg1,arg2,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "convert_and_process_08006d98",
                "param_1": "inputChar",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "convertedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "initialize_character_08006dc4",
            "code": "\nvoid initializeCharacter_08006dc4(char character)\n\n{\n  FUN_08006a58((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "initialize_character_08006dc4",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "decode_byte_08006de0",
            "code": "\nundefined4 decode_byte_08006de0(char encoded_byte)\n\n{\n  undefined4 decoded_value;\n  \n  decoded_value = FUN_08006a18((int)encoded_byte);\n  return decoded_value;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "decode_byte_08006de0",
                "param_1": "encoded_byte",
                "uVar1": "decoded_value"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "execute_function_08006dfe",
            "code": "\nvoid executeFunction_08006dfe(char input)\n\n{\n  FUN_08006a8c((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "execute_function_08006dfe",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "process_char_08006e1a",
            "code": "\nundefined4 processChar_08006e1a(char inputChar)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006ac0((int)inputChar);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "process_char_08006e1a",
                "param_1": "inputChar",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_bits_08006e88",
            "code": "\n\n\nvoid updateBits_08006e88(uint *inputData,uint *maskData)\n\n{\n  uint bitMask;\n  uint bitValue;\n  int memoryOffset;\n  uint bitIndex;\n  \n  for (bitIndex = 0; bitIndex < 0x10; bitIndex = bitIndex + 1) {\n    bitMask = 1 << (bitIndex & 0xff);\n    bitValue = *maskData & bitMask;\n    if (bitValue == bitMask) {\n      if ((maskData[1] == 2) || (maskData[1] == 0x12)) {\n        bitMask = maskData[4];\n        inputData[(bitIndex >> 3) + 8] = inputData[(bitIndex >> 3) + 8] & ~(0xf << ((bitIndex & 7) << 2));\n        inputData[(bitIndex >> 3) + 8] = inputData[(bitIndex >> 3) + 8] | bitMask << ((bitIndex & 7) << 2);\n      }\n      *inputData = *inputData & ~(3 << ((bitIndex & 0x7f) << 1));\n      *inputData = *inputData | (maskData[1] & 3) << ((bitIndex & 0x7f) << 1);\n      if ((((maskData[1] == 1) || (maskData[1] == 2)) || (maskData[1] == 0x11)) || (maskData[1] == 0x12)\n         ) {\n        inputData[2] = inputData[2] & ~(3 << ((bitIndex & 0x7f) << 1));\n        inputData[2] = inputData[2] | maskData[3] << ((bitIndex & 0x7f) << 1);\n        inputData[1] = inputData[1] & ~(1 << (bitIndex & 0xff));\n        inputData[1] = inputData[1] | (maskData[1] >> 4 & 1) << (bitIndex & 0xff);\n      }\n      inputData[3] = inputData[3] & ~(3 << ((bitIndex & 0x7f) << 1));\n      inputData[3] = inputData[3] | maskData[2] << ((bitIndex & 0x7f) << 1);\n      if ((maskData[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((bitIndex & 3) << 2)) & *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800);\n        if (inputData == (uint *)0x40020000) {\n          memoryOffset = 0;\n        }\n        else if (inputData == (uint *)0x40020400) {\n          memoryOffset = 1;\n        }\n        else if (inputData == (uint *)0x40020800) {\n          memoryOffset = 2;\n        }\n        else if (inputData == (uint *)0x40020c00) {\n          memoryOffset = 3;\n        }\n        else if (inputData == (uint *)0x40021000) {\n          memoryOffset = 4;\n        }\n        else if (inputData == (uint *)0x40021400) {\n          memoryOffset = 5;\n        }\n        else if (inputData == (uint *)0x40021800) {\n          memoryOffset = 6;\n        }\n        else if (inputData == (uint *)0x40021c00) {\n          memoryOffset = 7;\n        }\n        else if (inputData == (uint *)0x40022000) {\n          memoryOffset = 8;\n        }\n        else if (inputData == (uint *)0x40022400) {\n          memoryOffset = 9;\n        }\n        else {\n          memoryOffset = 10;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             memoryOffset << ((bitIndex & 3) << 2) | *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bitValue & _DAT_40013c00;\n        _DAT_40013c04 = ~bitValue & _DAT_40013c04;\n        if ((maskData[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bitValue | _DAT_40013c00;\n        }\n        if ((maskData[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bitValue | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bitValue & _DAT_40013c08;\n        _DAT_40013c0c = ~bitValue & _DAT_40013c0c;\n        if ((maskData[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bitValue | _DAT_40013c08;\n        }\n        if ((maskData[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bitValue | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_bits_08006e88",
                "param_1": "inputData",
                "param_2": "maskData",
                "uVar1": "bitMask",
                "uVar2": "bitValue",
                "iVar3": "memoryOffset",
                "local_c": "bitIndex"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_param_0800733e",
            "code": "\nvoid updateParam_0800733e(int baseAddress,undefined2 newValue,char flag)\n\n{\n  if (flag == '\\0') {\n    *(undefined2 *)(baseAddress + 0x1a) = newValue;\n  }\n  else {\n    *(undefined2 *)(baseAddress + 0x18) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_param_0800733e",
                "param_1": "baseAddress",
                "param_2": "newValue",
                "param_3": "flag"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_data_if_flag_set_0800738e",
            "code": "\n\n\nvoid updateDataIfFlagSet_0800738e(ushort inputValue)\n\n{\n  if ((inputValue & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)inputValue;\n    FUNC_080073c0(inputValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_data_if_flag_set_0800738e",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_080073d4",
            "code": "\nvoid setBit_080073d4(uint value)\n\n{\n  *(short *)(((int)value >> 4) * 0x400 + 0x4002001a) = (short)(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_080073d4",
                "param_1": "value"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_08007402",
            "code": "\nvoid setBit_08007402(uint value)\n\n{\n  *(short *)(((int)value >> 4) * 0x400 + 0x40020018) = (short)(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_08007402",
                "param_1": "value"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "run_infinite_loop_08007430",
            "code": "\nvoid runInfiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "run_infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int iVar1;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 address1;\n  undefined4 size1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 size2;\n  undefined4 value6;\n  undefined4 address2;\n  undefined4 size3;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  address1 = 0x400000;\n  size1 = 8;\n  value2 = 0x150;\n  value3 = 2;\n  value4 = 7;\n  iVar1 = FUN_08005cec(&flag1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  value5 = 0xf;\n  size2 = 2;\n  value6 = 0;\n  address2 = 0x1400;\n  size3 = 0x1000;\n  iVar1 = FUN_0800618c(&value5,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "value1",
                "local_30": "address1",
                "local_2c": "size1",
                "local_28": "value2",
                "local_24": "value3",
                "local_20": "value4",
                "local_1c": "value5",
                "local_18": "size2",
                "local_14": "value6",
                "local_10": "address2",
                "local_c": "size3"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "process_flags_080074c8",
            "code": "\nvoid processFlags_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "process_flags_080074c8",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "check_and_invoke_function_08007520",
            "code": "\nvoid checkAndInvokeFunction_08007520(uint input)\n\n{\n  if ((input & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "check_and_invoke_function_08007520",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_system_08007540",
            "code": "\nundefined4 initialize_system_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_system_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_system_0800756c",
            "code": "\n\n\nvoid initializeSystem_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_system_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_value_080076c8",
            "code": "\nvoid updateBitValue_080076c8(uint inputValue)\n\n{\n  *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) ^ 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_value_080076c8",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "process_data_08007756",
            "code": "\nvoid processData_08007756(void)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_08005a84();\n  if ((returnValue & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((returnValue & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "process_data_08007756",
                "uVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_memory_0800778c",
            "code": "\n\n\nvoid initializeMemory_0800778c(void)\n\n{\n  int offset;\n  int bitMask;\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 value_3;\n  undefined4 value_4;\n  uint *pointer;\n  uint counter;\n  \n  for (counter = 0; counter < 0x11; counter = counter + 1) {\n    offset = counter * 0x18;\n    pointer = (uint *)(&DAT_0800bcbc + offset);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*pointer >> 4 & 0xff);\n    bitMask = 1 << (*pointer & 0xf);\n    value_1 = *(undefined4 *)(&DAT_0800bcc0 + offset);\n    value_2 = *(undefined4 *)(&DAT_0800bcc4 + offset);\n    value_3 = *(undefined4 *)(&DAT_0800bcc8 + offset);\n    value_4 = *(undefined4 *)(&DAT_0800bccc + offset);\n    FUN_08006e88(((*pointer >> 4) + 0x100080) * 0x400,&bitMask);\n    if (-1 < (int)pointer[5]) {\n      FUN_0800733e(((*pointer >> 4) + 0x100080) * 0x400,1 << (*pointer & 0xf) & 0xffff,\n                   pointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_memory_0800778c",
                "local_24": "bitMask",
                "local_20": "value_1",
                "local_1c": "value_2",
                "local_18": "value_3",
                "local_14": "value_4",
                "local_10": "pointer",
                "local_c": "counter",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "get_bit_08007854",
            "code": "\nuint get_bit_08007854(uint value)\n\n{\n  return *(uint *)(((int)value >> 4) * 0x400 + 0x40020010) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "get_bit_08007854",
                "param_1": "value"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "get_combined_values_08007884",
            "code": "\nuint getCombinedValues_08007884(void)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  uint baseValue;\n  \n  value1 = FUN_08007854(0x36);\n  value2 = FUN_08007854(0x37);\n  value3 = FUN_08007854(0x38);\n  value4 = FUN_08007854(0x39);\n  value5 = FUN_08007854(0xf);\n  baseValue = FUN_08007854(0);\n  return baseValue | value1 << 4 | value2 << 3 | value3 << 2 | value4 << 1 | value5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "get_combined_values_08007884",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "uVar6": "baseValue"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "combine_and_or_080078f4",
            "code": "\nuint combineAndOr_080078f4(void)\n\n{\n  int counter;\n  uint result;\n  \n  result = 0;\n  for (counter = 0; counter < 4; counter = counter + 1) {\n    result = *(uint *)(&DAT_20000e54 + counter * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "combine_and_or_080078f4",
                "local_10": "counter",
                "local_c": "result"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int dataIndex;\n  uint previousValue;\n  undefined4 newValue;\n  uint currentValue;\n  uint changedBits;\n  \n  dataIndex = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + dataIndex * 4) = newValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    currentValue = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (currentValue != DAT_20000e64) {\n      changedBits = ~currentValue & DAT_20000e64;\n      if ((~DAT_20000e64 & currentValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & currentValue);\n      }\n      previousValue = currentValue;\n      if (changedBits != 0) {\n        FUN_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "dataIndex",
                "uVar2": "previousValue",
                "uVar3": "newValue",
                "uVar4": "currentValue",
                "uVar5": "changedBits"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_in_memory_080079e0",
            "code": "\nvoid setBitInMemory_080079e0(byte bitPosition)\n\n{\n  *(int *)(((uint)(int)(char)bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_in_memory_080079e0",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "set_flag_08007a10",
            "code": "\n\n\nvoid setFlag_08007a10(Pointer *input)\n\n{\n  if (input == (Pointer *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (input == (Pointer *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (input == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "set_flag_08007a10",
                "param_1": "input",
                "undefined": "Pointer"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "determine_value_and_call_functions_08007a70",
            "code": "\nvoid determineValueAndCallFunctions_08007a70(undefined *inputParam,undefined4 value1,undefined4 value2)\n\n{\n  undefined result;\n  \n  if (inputParam == (undefined *)0x40000000) {\n    result = 0x1c;\n  }\n  else if (inputParam == (undefined *)0x40000400) {\n    result = 0x1d;\n  }\n  else {\n    if (inputParam != &DAT_40000800) {\n      return;\n    }\n    result = 0x1e;\n  }\n  FUN_08006cf6(result,value1,value2);\n  FUN_080079e0(result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "determine_value_and_call_functions_08007a70",
                "param_1": "inputParam",
                "param_2": "value1",
                "param_3": "value2",
                "local_c": "result"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_flags_08007b70",
            "code": "\n\n\nvoid setFlags_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_flags_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_bits_08007bc2",
            "code": "\n\n\nvoid clearBits_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_bits_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_parameter_08007bf0",
            "code": "\n\n\nvoid updateParameter_08007bf0(uint newValue)\n\n{\n  _DAT_4000002c = newValue;\n  if (newValue <= _DAT_40000024) {\n    _DAT_40000024 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_parameter_08007bf0",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "set_global_variable_08007c40",
            "code": "\n\n\nvoid setGlobalVariable_08007c40(undefined4 value)\n\n{\n  _DAT_40000034 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "set_global_variable_08007c40",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_global_variable_08007c5e",
            "code": "\n\n\nvoid setGlobalVariable_08007c5e(undefined4 value)\n\n{\n  _DAT_40000038 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_flags_and_invoke_functions_08007c7c",
            "code": "\n\n\nvoid updateFlagsAndInvokeFunctions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_flags_and_invoke_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_hardware_08007d08",
            "code": "\n\n\nvoid initializeHardware_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_hardware_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_08007da8",
            "code": "\n\n\nvoid setFlags_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_process_08007e08",
            "code": "\nvoid initialize_process_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_process_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "wait_for_flag_08007e1c",
            "code": "\n\n\nvoid waitForFlag_08007e1c(byte flagToSet)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)flagToSet;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "wait_for_flag_08007e1c",
                "param_1": "flagToSet"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_flag_set_08007e58",
            "code": "\n\n\nbool checkFlagSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_flag_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_memory_flags_08007ea4",
            "code": "\n\n\nvoid updateMemoryFlags_08007ea4(undefined *address)\n\n{\n  if (address == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (address == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (address == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (address == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (address == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (address == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_memory_flags_08007ea4",
                "param_1": "address"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_parameter_08007f54",
            "code": "\nvoid calculateParameter_08007f54(int inputAddress,int inputValue)\n\n{\n  ulonglong result1;\n  int result2;\n  int result3;\n  undefined8 randomValue;\n  \n  if ((*(uint *)(inputAddress + 0xc) & 0x8000) == 0) {\n    if ((inputAddress != 0x40011000) && (inputAddress != 0x40011400)) {\n      randomValue = FUN_08006680();\n      result1 = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 2);\n      result2 = FUN_08006680((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(result1 * 0x51eb851f));\n      result3 = FUN_08006680();\n      *(uint *)(inputAddress + 8) =\n           (int)(result1 / 100) << 4 |\n           (((uint)(result2 * 0x19) / (uint)(inputValue << 2) +\n            (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(inputValue << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomValue = FUN_080066cc();\n    result1 = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 2);\n    result2 = FUN_080066cc((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(result1 * 0x51eb851f));\n    result3 = FUN_080066cc();\n    *(uint *)(inputAddress + 8) =\n         (int)(result1 / 100) << 4 |\n         (((uint)(result2 * 0x19) / (uint)(inputValue << 2) +\n          (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(inputValue << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((inputAddress != 0x40011000) && (inputAddress != 0x40011400)) {\n      randomValue = FUN_08006680();\n      result1 = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 1);\n      result2 = FUN_08006680((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(result1 * 0x51eb851f));\n      result3 = FUN_08006680();\n      *(uint *)(inputAddress + 8) =\n           (int)(result1 / 100) << 4 |\n           (((uint)(result2 * 0x19) / (uint)(inputValue << 1) +\n            (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(inputValue << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomValue = FUN_080066cc();\n    result1 = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 1);\n    result2 = FUN_080066cc((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(result1 * 0x51eb851f));\n    result3 = FUN_080066cc();\n    *(uint *)(inputAddress + 8) =\n         (int)(result1 / 100) << 4 |\n         (((uint)(result2 * 0x19) / (uint)(inputValue << 1) +\n          (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(inputValue << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_parameter_08007f54",
                "param_1": "inputAddress",
                "param_2": "inputValue",
                "uVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "uVar4": "randomValue"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_08008250",
            "code": "\nvoid initialize_08008250(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_08008250",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "execute_initialization_0800826a",
            "code": "\nundefined4 executeInitialization_0800826a(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "execute_initialization_0800826a",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_and_process_08008286",
            "code": "\nundefined check_and_process_08008286(void)\n\n{\n  undefined result;\n  int status;\n  \n  status = FUN_08007e58();\n  if (status != 0) {\n    result = FUN_08007e84();\n    status = FUN_08005900(result);\n    if (status == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_and_process_08008286",
                "uVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "reverse_and_improve_080082d0",
            "code": "\nulonglong reverse_and_improve_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint result1;\n  uint result2;\n  uint result3;\n  uint result4;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp6 = input4 ^ 0x80000000;\n  result1 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (result1 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)result1 >> 0x15;\n  if (!flag2) {\n    flag2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp8 == -1 || temp1 == -1) {\n      result1 = temp6;\n      result3 = input3;\n      if (temp8 == -1) {\n        result1 = input2;\n        result3 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = result3;\n        temp6 = result1;\n      }\n      flag2 = (result3 | result1 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = result1 == temp6;\n      }\n      if (!flag2) {\n        result1 = result1 | 0x80000;\n      }\n      return CONCAT44(result1,result3);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((result1 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (result1 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (result1 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  result1 = result1 >> 0x15;\n  input4 = input4 >> 0x15;\n  result3 = input4 - result1;\n  flag2 = result3 != 0;\n  if (input4 < result1) {\n    result3 = -result3;\n  }\n  result2 = input1;\n  temp7 = input2;\n  if (flag2 && result1 <= input4) {\n    result1 = result1 + result3;\n    result2 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < result3) {\n    return CONCAT44(temp7,result2);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    flag2 = result2 != 0;\n    result2 = -result2;\n    temp4 = -temp4 - (uint)flag2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)flag2;\n  }\n  if (result1 == result3) {\n    temp7 = temp7 ^ 0x100000;\n    if (result1 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      result1 = 1;\n    }\n    else {\n      result3 = result3 - 1;\n    }\n  }\n  temp6 = -result3 + 0x20;\n  if ((int)result3 < 0x21) {\n    result4 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (result3 & 0xff);\n    temp3 = result2 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(result2,input3) + ((int)temp7 >> (result3 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    result4 = temp7 << (-result3 + 0x40 & 0xff);\n    if (input3 != 0) {\n      result4 = result4 | 2;\n    }\n    temp7 = (int)temp7 >> (result3 - 0x20 & 0xff);\n    temp6 = result2 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(result2,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  result3 = temp4;\n  if ((int)temp4 < 0) {\n    flag2 = result4 == 0;\n    result4 = -result4;\n    result3 = -temp6;\n    temp6 = -(uint)!flag2 - temp6;\n    result3 = -(uint)(flag2 <= result3) - temp4;\n  }\n  if (0xfffff < result3) {\n    result2 = result1 - 1;\n    if (0x1fffff < result3) {\n      result2 = result3 & 1;\n      result3 = result3 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(result2 != 0) << 0x1f | temp6 >> 1;\n      result4 = (uint)(temp2 & 1) << 0x1f | result4 >> 1;\n      result2 = result1;\n      if (0xffbfffff < result1 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    flag2 = 0x7fffffff < result4;\n    if (result4 == 0x80000000) {\n      flag2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(result3 + result2 * 0x100000 + (uint)CARRY4(temp6,(uint)flag2) | input2,\n                    temp6 + flag2);\n  }\n  flag1 = (result4 & 0x80000000) != 0;\n  result4 = result4 << 1;\n  result2 = temp6 * 2;\n  flag2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)flag1;\n  result3 = result3 * 2 + (uint)(flag2 || CARRY4(result2,(uint)flag1));\n  result2 = result1 - 2;\n  if (result1 - 1 != 0 && 0xfffff < result3) goto LAB_080083e0;\n  temp7 = temp6;\n  result1 = result3;\n  if (result3 == 0) {\n    temp7 = 0;\n    result1 = temp6;\n  }\n  temp8 = LZCOUNT(result1);\n  if (result3 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  result3 = temp8 - 0xb;\n  flag3 = SBORROW4(result3,0x20);\n  temp6 = temp8 - 0x2b;\n  flag2 = (int)temp6 < 0;\n  flag1 = temp6 == 0;\n  if ((int)result3 < 0x20) {\n    flag3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    flag2 = temp8 < 0;\n    flag1 = temp8 == 0;\n    temp6 = result3;\n    if (!flag1 && flag2 == flag3) {\n      temp7 = result1 << (result3 & 0xff);\n      result1 = result1 >> (0xcU - temp8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    result4 = 0x20 - temp6;\n  }\n  result1 = result1 << (temp6 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    result1 = result1 | temp7 >> (result4 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result3 <= (int)result2) {\n    return CONCAT44(result1 + (result2 - result3) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(result2 - result3);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | result1 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | result1 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | result1 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,result1 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "reverse_and_improve_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "result1",
                "uVar10": "result2",
                "uVar11": "result3",
                "uVar12": "result4",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "reverse_numbers_080082d4",
            "code": "\nulonglong reverseNumbers_080082d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int result;\n  byte tempByte;\n  uint tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  int tempInt1;\n  uint tempVar4;\n  uint tempVar5;\n  uint tempVar6;\n  uint tempVar7;\n  uint tempVar8;\n  uint tempVar9;\n  bool bool1;\n  bool bool2;\n  bool bool3;\n  \n  tempVar4 = input2 << 1;\n  tempVar6 = input4 << 1;\n  bool1 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  bool2 = bool1 && input1 == input3;\n  if (!bool1 || input1 != input3) {\n    bool2 = (tempVar4 | input1) == 0;\n  }\n  if (!bool2) {\n    bool2 = (tempVar6 | input3) == 0;\n  }\n  tempInt1 = (int)tempVar4 >> 0x15;\n  if (!bool2) {\n    bool2 = tempInt1 == -1;\n  }\n  result = (int)tempVar6 >> 0x15;\n  if (!bool2) {\n    bool2 = result == -1;\n  }\n  if (bool2) {\n    if (tempInt1 == -1 || result == -1) {\n      tempVar6 = input4;\n      tempVar4 = input3;\n      if (tempInt1 == -1) {\n        tempVar6 = input2;\n        tempVar4 = input1;\n      }\n      if (tempInt1 != -1 || result != -1) {\n        input3 = tempVar4;\n        input4 = tempVar6;\n      }\n      bool2 = (tempVar4 | tempVar6 << 0xc) == 0;\n      if (bool2) {\n        bool2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (bool2) {\n        bool2 = tempVar6 == input4;\n      }\n      if (!bool2) {\n        tempVar6 = tempVar6 | 0x80000;\n      }\n      return CONCAT44(tempVar6,tempVar4);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((tempVar4 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (tempVar4 >> 0x15 == 0) {\n      bool2 = (input1 & 0x80000000) != 0;\n      tempVar6 = input2 * 2 + (uint)bool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)bool2)) {\n        tempVar6 = tempVar6 | 0x80000000;\n      }\n      return CONCAT44(tempVar6,input1 << 1);\n    }\n    if (tempVar4 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  tempVar4 = tempVar4 >> 0x15;\n  tempVar6 = tempVar6 >> 0x15;\n  tempVar7 = tempVar6 - tempVar4;\n  bool2 = tempVar7 != 0;\n  if (tempVar6 < tempVar4) {\n    tempVar7 = -tempVar7;\n  }\n  tempVar5 = input1;\n  tempVar3 = input2;\n  if (bool2 && tempVar4 <= tempVar6) {\n    tempVar4 = tempVar4 + tempVar7;\n    tempVar5 = input3;\n    tempVar3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < tempVar7) {\n    return CONCAT44(tempVar3,tempVar5);\n  }\n  tempVar6 = tempVar3 & 0xfffff | 0x100000;\n  if ((tempVar3 & 0x80000000) != 0) {\n    bool2 = tempVar5 != 0;\n    tempVar5 = -tempVar5;\n    tempVar6 = -tempVar6 - (uint)bool2;\n  }\n  tempVar3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    bool2 = input3 != 0;\n    input3 = -input3;\n    tempVar3 = -tempVar3 - (uint)bool2;\n  }\n  if (tempVar4 == tempVar7) {\n    tempVar3 = tempVar3 ^ 0x100000;\n    if (tempVar4 == 0) {\n      tempVar6 = tempVar6 ^ 0x100000;\n      tempVar4 = 1;\n    }\n    else {\n      tempVar7 = tempVar7 - 1;\n    }\n  }\n  tempVar9 = -tempVar7 + 0x20;\n  if ((int)tempVar7 < 0x21) {\n    tempVar8 = input3 << (tempVar9 & 0xff);\n    input3 = input3 >> (tempVar7 & 0xff);\n    tempVar1 = tempVar5 + input3;\n    tempVar2 = tempVar3 << (tempVar9 & 0xff);\n    tempVar9 = tempVar1 + tempVar2;\n    tempVar6 = tempVar6 + CARRY4(tempVar5,input3) + ((int)tempVar3 >> (tempVar7 & 0xff)) +\n            (uint)CARRY4(tempVar1,tempVar2);\n  }\n  else {\n    tempVar8 = tempVar3 << (-tempVar7 + 0x40 & 0xff);\n    if (input3 != 0) {\n      tempVar8 = tempVar8 | 2;\n    }\n    tempVar3 = (int)tempVar3 >> (tempVar7 - 0x20 & 0xff);\n    tempVar9 = tempVar5 + tempVar3;\n    tempVar6 = tempVar6 + ((int)tempVar3 >> 0x1f) + (uint)CARRY4(tempVar5,tempVar3);\n  }\n  input2 = tempVar6 & 0x80000000;\n  tempVar7 = tempVar6;\n  if ((int)tempVar6 < 0) {\n    bool2 = tempVar8 == 0;\n    tempVar8 = -tempVar8;\n    tempVar7 = -tempVar9;\n    tempVar9 = -(uint)!bool2 - tempVar9;\n    tempVar7 = -(uint)(bool2 <= tempVar7) - tempVar6;\n  }\n  if (0xfffff < tempVar7) {\n    tempVar5 = tempVar4 - 1;\n    if (0x1fffff < tempVar7) {\n      tempVar6 = tempVar7 & 1;\n      tempVar7 = tempVar7 >> 1;\n      tempByte = (byte)tempVar9;\n      tempVar9 = (uint)(tempVar6 != 0) << 0x1f | tempVar9 >> 1;\n      tempVar8 = (uint)(tempByte & 1) << 0x1f | tempVar8 >> 1;\n      tempVar5 = tempVar4;\n      if (0xffbfffff < tempVar4 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bool2 = 0x7fffffff < tempVar8;\n    if (tempVar8 == 0x80000000) {\n      bool2 = (tempVar9 & 1) != 0;\n    }\n    return CONCAT44(tempVar7 + tempVar5 * 0x100000 + (uint)CARRY4(tempVar9,(uint)bool2) | input2,\n                    tempVar9 + bool2);\n  }\n  bool1 = (tempVar8 & 0x80000000) != 0;\n  tempVar8 = tempVar8 << 1;\n  tempVar5 = tempVar9 * 2;\n  bool2 = CARRY4(tempVar9,tempVar9);\n  tempVar9 = tempVar9 * 2 + (uint)bool1;\n  tempVar7 = tempVar7 * 2 + (uint)(bool2 || CARRY4(tempVar5,(uint)bool1));\n  tempVar5 = tempVar4 - 2;\n  if (tempVar4 - 1 != 0 && 0xfffff < tempVar7) goto LAB_080083e0;\n  tempVar3 = tempVar9;\n  tempVar4 = tempVar7;\n  if (tempVar7 == 0) {\n    tempVar3 = 0;\n    tempVar4 = tempVar9;\n  }\n  tempInt1 = LZCOUNT(tempVar4);\n  if (tempVar7 == 0) {\n    tempInt1 = tempInt1 + 0x20;\n  }\n  tempVar9 = tempInt1 - 0xb;\n  bool3 = SBORROW4(tempVar9,0x20);\n  tempVar7 = tempInt1 - 0x2b;\n  bool2 = (int)tempVar7 < 0;\n  bool1 = tempVar7 == 0;\n  if ((int)tempVar9 < 0x20) {\n    bool3 = SCARRY4(tempVar7,0xc);\n    tempInt1 = tempInt1 + -0x1f;\n    bool2 = tempInt1 < 0;\n    bool1 = tempInt1 == 0;\n    tempVar7 = tempVar9;\n    if (!bool1 && bool2 == bool3) {\n      tempVar3 = tempVar4 << (tempVar9 & 0xff);\n      tempVar4 = tempVar4 >> (0xcU - tempInt1 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bool1 || bool2 != bool3) {\n    tempVar8 = 0x20 - tempVar7;\n  }\n  tempVar4 = tempVar4 << (tempVar7 & 0xff);\n  if (bool1 || bool2 != bool3) {\n    tempVar4 = tempVar4 | tempVar3 >> (tempVar8 & 0xff);\n  }\n  if (bool1 || bool2 != bool3) {\n    tempVar3 = tempVar3 << (tempVar7 & 0xff);\n  }\nLAB_08008458:\n  if ((int)tempVar9 <= (int)tempVar5) {\n    return CONCAT44(tempVar4 + (tempVar5 - tempVar9) * 0x100000 | input2,tempVar3);\n  }\n  tempVar7 = ~(tempVar5 - tempVar9);\n  if ((int)tempVar7 < 0x1f) {\n    tempInt1 = tempVar7 - 0x13;\n    if (tempInt1 != 0 && tempInt1 < 0 == SCARRY4(tempVar7 - 0x1f,0xc)) {\n      return CONCAT44(tempVar6,tempVar3 >> (0x20 - (0xcU - tempInt1) & 0xff) | tempVar4 << (0xcU - tempInt1 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    tempVar7 = tempVar7 + 1;\n    return CONCAT44(input2 | tempVar4 >> (tempVar7 & 0xff),\n                    tempVar3 >> (tempVar7 & 0xff) | tempVar4 << (0x20 - tempVar7 & 0xff));\n  }\n  return CONCAT44(tempVar6,tempVar4 >> (tempVar7 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "reverse_numbers_080082d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "bVar2": "tempByte",
                "uVar3": "tempVar1",
                "uVar4": "tempVar2",
                "uVar5": "tempVar3",
                "iVar6": "tempInt1",
                "uVar7": "tempVar4",
                "uVar8": "tempVar5",
                "uVar9": "tempVar6",
                "uVar10": "tempVar7",
                "uVar11": "tempVar8",
                "uVar12": "tempVar9",
                "bVar13": "bool1",
                "bVar14": "bool2",
                "bVar15": "bool3"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "reverse_bits_0800854c",
            "code": "\nulonglong reverseBits_0800854c(uint input)\n\n{\n  uint result;\n  uint shift;\n  int bitCount;\n  uint totalBits;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool hasCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  bitCount = LZCOUNT(input);\n  totalBits = bitCount + 0x15;\n  hasCarry = SBORROW4(totalBits,0x20);\n  shift = bitCount - 0xb;\n  isNegative = (int)shift < 0;\n  isZero = shift == 0;\n  if (totalBits < 0x20) {\n    hasCarry = SCARRY4(shift,0xc);\n    isNegative = false;\n    isZero = bitCount + 1 == 0;\n    shift = totalBits;\n    if (!isZero && hasCarry == false) {\n      result = input << totalBits;\n      input = input >> (0xcU - (bitCount + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != hasCarry) {\n    remainingBits = 0x20 - shift;\n  }\n  input = input << (shift & 0xff);\n  if (isZero || isNegative != hasCarry) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != hasCarry) {\n    result = 0 << (shift & 0xff);\n  }\nLAB_08008458:\n  if (totalBits < 0x433) {\n    return CONCAT44(input + (0x432 - totalBits) * 0x100000,result);\n  }\n  shift = ~(0x432 - totalBits);\n  if (0x1e < (int)shift) {\n    return (ulonglong)(input >> (shift - 0x1f & 0xff));\n  }\n  bitCount = shift - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(shift - 0x1f,0xc)) {\n    shift = shift + 1;\n    return CONCAT44(input >> (shift & 0xff),\n                    result >> (shift & 0xff) | input << (0x20 - shift & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - bitCount) & 0xff) | input << (0xcU - bitCount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "reverse_bits_0800854c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shift",
                "iVar3": "bitCount",
                "uVar4": "totalBits",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "hasCarry"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "reverse_bits_0800856c",
            "code": "\nulonglong reverseBits_0800856c(uint input)\n\n{\n  uint result;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint adjustedCount;\n  uint signBit;\n  uint unusedVar;\n  bool isNegative;\n  bool isZero;\n  bool overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  result = 0;\n  leadingZeros = countLeadingZeros(absInput);\n  adjustedCount = leadingZeros + 0x15;\n  overflow = isSubtractionOverflow(adjustedCount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (adjustedCount < 0x20) {\n    overflow = isShiftCarry(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = adjustedCount;\n    if (!isZero && overflow == false) {\n      result = absInput << adjustedCount;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != overflow) {\n    unusedVar = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (isZero || isNegative != overflow) {\n    absInput = absInput | 0U >> (unusedVar & 0xff);\n  }\n  if (isZero || isNegative != overflow) {\n    result = 0 << (shiftAmount & 0xff);\n  }\nLAB_08008458:\n  if (adjustedCount < 0x433) {\n    return combineBits(absInput + (0x432 - adjustedCount) * 0x100000 | signBit,result);\n  }\n  shiftAmount = ~(0x432 - adjustedCount);\n  if (0x1e < (int)shiftAmount) {\n    return combineBits(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != isShiftCarry(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return combineBits(signBit | absInput >> (shiftAmount & 0xff),\n                    result >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return combineBits(input,result >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "reverse_bits_0800856c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "adjustedCount",
                "uVar6": "signBit",
                "in_r12": "unusedVar",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "overflow",
                "LZCOUNT": "countLeadingZeros",
                "SBORROW4": "isSubtractionOverflow",
                "SCARRY4": "isShiftCarry",
                "CONCAT44": "combineBits"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "reverse_bits_08008590",
            "code": "\nulonglong reverseBits_08008590(uint input,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint bit31;\n  uint shiftedInput;\n  uint outputHigh;\n  uint shiftAmount;\n  uint shiftedInput2;\n  int bitCount;\n  uint bitCountDiff;\n  uint remainder;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  shiftedInput2 = input << 1;\n  isZero = shiftedInput2 == 0;\n  bit31 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftAmount = (uint)((int)shiftedInput2 >> 3) >> 1;\n  outputHigh = bit31 | shiftAmount;\n  input = input << 0x1d;\n  if (!isZero) {\n    param4 = shiftedInput2 & 0xff000000;\n    isZero = param4 == 0;\n  }\n  if (!isZero) {\n    isZero = param4 == 0xff000000;\n  }\n  if (!isZero) {\n    return CONCAT44(outputHigh,input) ^ 0x3800000000000000;\n  }\n  if ((shiftedInput2 & 0xffffff) == 0) {\n    return CONCAT44(outputHigh,input);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(outputHigh,input) | 0x8000000000000;\n  }\n  shiftedInput = input;\n  shiftedInput2 = shiftAmount;\n  if (shiftAmount == 0) {\n    shiftedInput = 0;\n    shiftedInput2 = input;\n  }\n  bitCount = LZCOUNT(shiftedInput2);\n  if (shiftAmount == 0) {\n    bitCount = bitCount + 0x20;\n  }\n  bitCountDiff = bitCount - 0xb;\n  isCarry = SBORROW4(bitCountDiff,0x20);\n  shiftAmount = bitCount - 0x2b;\n  isZero = (int)shiftAmount < 0;\n  isNegative = shiftAmount == 0;\n  if ((int)bitCountDiff < 0x20) {\n    isCarry = SCARRY4(shiftAmount,0xc);\n    bitCount = bitCount + -0x1f;\n    isZero = bitCount < 0;\n    isNegative = bitCount == 0;\n    shiftAmount = bitCountDiff;\n    if (!isNegative && isZero == isCarry) {\n      shiftedInput = shiftedInput2 << (bitCountDiff & 0xff);\n      shiftedInput2 = shiftedInput2 >> (0xcU - bitCount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isNegative || isZero != isCarry) {\n    remainder = 0x20 - shiftAmount;\n  }\n  shiftedInput2 = shiftedInput2 << (shiftAmount & 0xff);\n  if (isNegative || isZero != isCarry) {\n    shiftedInput2 = shiftedInput2 | shiftedInput >> (remainder & 0xff);\n  }\n  if (isNegative || isZero != isCarry) {\n    shiftedInput = shiftedInput << (shiftAmount & 0xff);\n  }\nLAB_08008458:\n  if ((int)bitCountDiff < 0x381) {\n    return CONCAT44(shiftedInput2 + (0x380 - bitCountDiff) * 0x100000 | bit31,shiftedInput);\n  }\n  shiftAmount = ~(0x380 - bitCountDiff);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(outputHigh,shiftedInput2 >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  bitCount = shiftAmount - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(bit31 | shiftedInput2 >> (shiftAmount & 0xff),\n                    shiftedInput >> (shiftAmount & 0xff) | shiftedInput2 << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(outputHigh,shiftedInput >> (0x20 - (0xcU - bitCount) & 0xff) | shiftedInput2 << (0xcU - bitCount & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "reverse_bits_08008590",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "bit31",
                "uVar2": "shiftedInput",
                "uVar3": "outputHigh",
                "uVar4": "shiftAmount",
                "uVar5": "shiftedInput2",
                "iVar6": "bitCount",
                "uVar7": "bitCountDiff",
                "in_r12": "remainder",
                "bVar8": "isNegative",
                "bVar9": "isZero",
                "bVar10": "isCarry"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_product_08008640",
            "code": "\nulonglong calculateProduct_08008640(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong temp;\n  uint highBits;\n  uint input2Bits;\n  int sumBits;\n  uint tempBits;\n  uint input4Bits;\n  uint tempBits2;\n  uint tempBits3;\n  bool isZero;\n  bool isNegative;\n  bool isBorrowed;\n  ulonglong concatenatedResult;\n  \n  concatenatedResult = CONCAT44(input2,input1);\n  tempBits2 = 0x7ff;\n  input2Bits = input2 >> 0x14 & 0x7ff;\n  isZero = input2Bits == 0;\n  if (!isZero) {\n    input4Bits = input4 >> 0x14 & 0x7ff;\n    isZero = input4Bits == 0;\n  }\n  if (!isZero) {\n    isZero = input2Bits == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = input4Bits == 0x7ff;\n  }\n  if (isZero) {\n    concatenatedResult = FUN_0800881c();\n  }\n  highBits = (uint)(concatenatedResult >> 0x20);\n  sumBits = input2Bits + input4Bits;\n  input2Bits = highBits ^ input4;\n  highBits = highBits & ~(tempBits2 << 0x15);\n  input4 = input4 & ~(tempBits2 << 0x15);\n  isZero = ((uint)concatenatedResult | highBits << 0xc) == 0;\n  if (!isZero) {\n    isZero = (input3 | input4 << 0xc) == 0;\n  }\n  highBits = highBits | 0x100000;\n  input4 = input4 | 0x100000;\n  if (isZero) {\n    input3 = (uint)concatenatedResult | input3;\n    input4 = (input2Bits & 0x80000000 | highBits) ^ input4;\n    input2Bits = tempBits2 >> 1;\n    isBorrowed = SBORROW4(sumBits,input2Bits);\n    tempBits = sumBits - input2Bits;\n    isZero = tempBits == 0;\n    highBits = tempBits;\n    if (!isZero && (int)input2Bits <= sumBits) {\n      isBorrowed = SBORROW4(tempBits2,tempBits);\n      highBits = tempBits2 - tempBits;\n      isZero = tempBits2 == tempBits;\n    }\n    if (!isZero && (int)highBits < 0 == isBorrowed) {\n      input4 = input4 | tempBits * 0x100000;\n    }\n    if (!isZero && (int)highBits < 0 == isBorrowed) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    tempBits2 = 0;\n    isBorrowed = SBORROW4(tempBits,1);\n    tempBits = tempBits - 1;\n    isZero = tempBits == 0;\n    input2Bits = tempBits;\n  }\n  else {\n    result = (concatenatedResult & 0xffffffff) * (ulonglong)input3;\n    concatenatedResult = (concatenatedResult & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)highBits * (ulonglong)input3 + (result >> 0x20);\n    tempBits3 = (uint)concatenatedResult;\n    temp = (ulonglong)highBits * (ulonglong)input4 + (concatenatedResult >> 0x20);\n    tempBits2 = (uint)temp;\n    highBits = (uint)((ulonglong)temp >> 0x20);\n    if ((int)result != 0) {\n      tempBits3 = tempBits3 | 1;\n    }\n    tempBits = (sumBits + -0x3ff) - (uint)(highBits < 0x200);\n    if (highBits < 0x200) {\n      isZero = (tempBits3 & 0x80000000) != 0;\n      tempBits3 = tempBits3 << 1;\n      temp = CONCAT44(highBits * 2 + (uint)(CARRY4(tempBits2,tempBits2) || CARRY4(tempBits2 * 2,(uint)isZero)),\n                       tempBits2 * 2 + (uint)isZero);\n    }\n    input4 = input2Bits & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    input3 = (uint)temp << 0xb | tempBits3 >> 0x15;\n    tempBits2 = tempBits3 * 0x800;\n    isNegative = 0xfc < tempBits;\n    isBorrowed = SBORROW4(tempBits,0xfd);\n    highBits = tempBits - 0xfd;\n    isZero = highBits == 0;\n    input2Bits = highBits;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < highBits;\n      isBorrowed = SBORROW4(highBits,0x700);\n      input2Bits = tempBits - 0x7fd;\n      isZero = highBits == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < tempBits2;\n      if (tempBits2 == 0x80000000) {\n        isZero = (tempBits3 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + tempBits * 0x100000 + (uint)CARRY4(input3,(uint)isZero),input3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)input2Bits < 0 == isBorrowed) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(tempBits,0x36);\n  isZero = (int)(tempBits + 0x36) < 0;\n  isBorrowed = tempBits == 0xffffffca;\n  if (isBorrowed || isZero != isNegative) {\n    input3 = 0;\n  }\n  if (isBorrowed || isZero != isNegative) {\n    input4 = input4 & 0x80000000;\n  }\n  if (isBorrowed || isZero != isNegative) {\n    return CONCAT44(input4,input3);\n  }\n  input2Bits = -tempBits;\n  highBits = input2Bits - 0x20;\n  if (0x1f < (int)input2Bits) {\n    tempBits = input3 >> (highBits & 0xff) | input4 << (0x20 - highBits & 0xff);\n    input2Bits = (input4 >> (highBits & 0xff) & ~((input4 & 0x80000000) >> (highBits & 0xff))) -\n            ((int)tempBits >> 0x1f);\n    if ((tempBits2 | input3 << (0x20 - highBits & 0xff) | tempBits << 1) == 0) {\n      input2Bits = input2Bits & ~(tempBits >> 0x1f);\n    }\n    return CONCAT44(input4,input2Bits) & 0x80000000ffffffff;\n  }\n  sumBits = input2Bits - 0x14;\n  if (sumBits == 0 || sumBits < 0 != SCARRY4(highBits,0xc)) {\n    tempBits3 = input3 << (tempBits + 0x20 & 0xff);\n    highBits = input3 >> (input2Bits & 0xff) | input4 << (tempBits + 0x20 & 0xff);\n    tempBits = highBits + -((int)tempBits3 >> 0x1f);\n    if ((tempBits2 | tempBits3 << 1) == 0) {\n      tempBits = tempBits & ~(tempBits3 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (input2Bits & 0xff)) +\n                    (uint)CARRY4(highBits,-((int)tempBits3 >> 0x1f)),tempBits);\n  }\n  input2Bits = 0xc - sumBits;\n  tempBits = input3 << (input2Bits & 0xff);\n  input2Bits = input3 >> (0x20 - input2Bits & 0xff) | input4 << (input2Bits & 0xff);\n  highBits = input2Bits + -((int)tempBits >> 0x1f);\n  if ((tempBits2 | tempBits << 1) == 0) {\n    highBits = highBits & ~(tempBits >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(input2Bits,-((int)tempBits >> 0x1f)),highBits);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_product_08008640",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "lVar2": "temp",
                "uVar3": "highBits",
                "uVar4": "input2Bits",
                "iVar5": "sumBits",
                "uVar6": "tempBits",
                "unaff_r5": "input4Bits",
                "uVar7": "tempBits2",
                "uVar8": "tempBits3",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "isBorrowed",
                "uVar12": "concatenatedResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800056c",
                "FUN_0800a348",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_0800881c",
            "code": "\nulonglong calculate_bitwise_0800881c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool is_zero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  bit4 = input2;\n  if (((!is_zero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (input1 = input3, bit4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_0800881c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 arg1,uint arg2,uint arg3,uint arg4)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  int diff;\n  uint temp7;\n  uint unaff_r5;\n  uint temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  bool isEqual1;\n  bool isEqual2;\n  bool isCarry;\n  undefined8 combinedArgs;\n  \n  combinedArgs = CONCAT44(arg2,arg1);\n  temp11 = 0x7ff;\n  temp6 = arg2 >> 0x14 & 0x7ff;\n  isEqual1 = temp6 == 0;\n  if (!isEqual1) {\n    unaff_r5 = arg4 >> 0x14 & 0x7ff;\n    isEqual1 = unaff_r5 == 0;\n  }\n  if (!isEqual1) {\n    isEqual1 = temp6 == 0x7ff;\n  }\n  if (!isEqual1) {\n    isEqual1 = unaff_r5 == 0x7ff;\n  }\n  if (isEqual1) {\n    combinedArgs = FUN_08008a02();\n  }\n  temp7 = (uint)((ulonglong)combinedArgs >> 0x20);\n  temp9 = (uint)combinedArgs;\n  diff = temp6 - unaff_r5;\n  if ((arg3 | arg4 << 0xc) == 0) {\n    temp6 = (temp7 ^ arg4) & 0x80000000 | temp7 & 0xfffff;\n    isCarry = SCARRY4(diff,temp11 >> 1);\n    temp7 = diff + (temp11 >> 1);\n    isEqual1 = (int)temp7 < 0;\n    isEqual2 = temp7 == 0;\n    if (!isEqual2 && isEqual1 == isCarry) {\n      isCarry = SBORROW4(temp11,temp7);\n      isEqual1 = (int)(temp11 - temp7) < 0;\n      isEqual2 = temp11 == temp7;\n    }\n    if (!isEqual2 && isEqual1 == isCarry) {\n      temp6 = temp6 | temp7 * 0x100000;\n    }\n    if (!isEqual2 && isEqual1 == isCarry) {\n      return CONCAT44(temp6,temp9);\n    }\n    temp6 = temp6 | 0x100000;\n    temp11 = 0;\n    isEqual2 = SBORROW4(temp7,1);\n    temp7 = temp7 - 1;\n    isEqual1 = temp7 == 0;\n    temp2 = temp7;\n  }\n  else {\n    temp2 = (arg4 << 0xc) >> 4 | 0x10000000 | arg3 >> 0x18;\n    temp11 = arg3 << 8;\n    temp8 = (temp7 << 0xc) >> 4 | 0x10000000 | temp9 >> 0x18;\n    temp9 = temp9 * 0x100;\n    temp6 = (temp7 ^ arg4) & 0x80000000;\n    isEqual1 = temp2 <= temp8;\n    if (temp8 == temp2) {\n      isEqual1 = temp11 <= temp9;\n    }\n    diff = diff + (uint)isEqual1;\n    temp7 = diff + 0x3fd;\n    if (isEqual1 == false) {\n      temp2 = temp2 >> 1;\n      temp11 = (uint)((arg3 >> 0x18 & 1) != 0) << 0x1f | temp11 >> 1;\n    }\n    temp10 = temp9 - temp11;\n    temp8 = (temp8 - temp2) - (uint)(temp9 < temp11);\n    temp3 = temp2 >> 1;\n    result = (uint)((temp2 & 1) != 0) << 0x1f | temp11 >> 1;\n    temp9 = 0x100000;\n    temp2 = 0x80000;\n    while( true ) {\n      isEqual1 = result <= temp10;\n      if (temp3 < temp8 || temp8 - temp3 < (uint)isEqual1) {\n        temp10 = temp10 - result;\n        temp9 = temp9 | temp2;\n        temp8 = (temp8 - temp3) - (uint)!isEqual1;\n      }\n      temp4 = temp3 >> 1;\n      result = (uint)((temp3 & 1) != 0) << 0x1f | result >> 1;\n      isEqual2 = result <= temp10;\n      isEqual1 = temp8 - temp4 < (uint)isEqual2;\n      temp11 = temp8;\n      if (temp4 < temp8 || isEqual1) {\n        temp10 = temp10 - result;\n        temp11 = (temp8 - temp4) - (uint)!isEqual2;\n      }\n      if (temp4 < temp8 || isEqual1) {\n        temp9 = temp9 | temp2 >> 1;\n      }\n      temp8 = temp3 >> 2;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | result >> 1;\n      isEqual2 = temp1 <= temp10;\n      isEqual1 = temp11 - temp8 < (uint)isEqual2;\n      temp4 = temp11;\n      if (temp8 < temp11 || isEqual1) {\n        temp10 = temp10 - temp1;\n        temp4 = (temp11 - temp8) - (uint)!isEqual2;\n      }\n      if (temp8 < temp11 || isEqual1) {\n        temp9 = temp9 | temp2 >> 2;\n      }\n      temp5 = temp3 >> 3;\n      result = (uint)((temp8 & 1) != 0) << 0x1f | temp1 >> 1;\n      isEqual2 = result <= temp10;\n      isEqual1 = temp4 - temp5 < (uint)isEqual2;\n      temp8 = temp4;\n      if (temp5 < temp4 || isEqual1) {\n        temp10 = temp10 - result;\n        temp8 = (temp4 - temp5) - (uint)!isEqual2;\n      }\n      if (temp5 < temp4 || isEqual1) {\n        temp9 = temp9 | temp2 >> 3;\n      }\n      temp11 = temp8 | temp10;\n      if (temp11 == 0) break;\n      temp8 = temp8 << 4 | temp10 >> 0x1c;\n      temp10 = temp10 << 4;\n      temp3 = temp3 & 0xfffffff8 | result >> 0x1d;\n      result = (temp1 >> 1) << 3;\n      temp2 = temp2 >> 4;\n      if (temp2 == 0) {\n        temp5 = temp3;\n        if ((temp6 & 0x100000) != 0) goto LAB_080089b2;\n        temp6 = temp6 | temp9;\n        temp9 = 0;\n        temp2 = 0x80000000;\n      }\n    }\n    if ((temp6 & 0x100000) == 0) {\n      temp6 = temp6 | temp9;\n      temp9 = 0;\n    }\nLAB_080089b2:\n    isCarry = 0xfc < temp7;\n    isEqual2 = SBORROW4(temp7,0xfd);\n    temp3 = diff + 0x300;\n    isEqual1 = temp3 == 0;\n    temp2 = temp3;\n    if (isCarry && !isEqual1) {\n      isCarry = 0x6ff < temp3;\n      isEqual2 = SBORROW4(temp3,0x700);\n      temp2 = diff - 0x400;\n      isEqual1 = temp3 == 0x700;\n    }\n    if (!isCarry || isEqual1) {\n      isEqual1 = temp5 <= temp8;\n      if (temp8 == temp5) {\n        isEqual1 = result <= temp10;\n      }\n      if (temp8 == temp5 && temp10 == result) {\n        isEqual1 = (temp9 & 1) != 0;\n      }\n      return CONCAT44(temp6 + temp7 * 0x100000 + (uint)CARRY4(temp9,(uint)isEqual1),temp9 + isEqual1);\n    }\n  }\n  if (!isEqual1 && (int)temp2 < 0 == isEqual2) {\n    return (ulonglong)(temp6 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isCarry = SCARRY4(temp7,0x36);\n  isEqual1 = (int)(temp7 + 0x36) < 0;\n  isEqual2 = temp7 == 0xffffffca;\n  if (isEqual2 || isEqual1 != isCarry) {\n    temp9 = 0;\n  }\n  if (isEqual2 || isEqual1 != isCarry) {\n    temp6 = temp6 & 0x80000000;\n  }\n  if (isEqual2 || isEqual1 != isCarry) {\n    return CONCAT44(temp6,temp9);\n  }\n  temp2 = -temp7;\n  temp8 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp2 = temp9 >> (temp8 & 0xff) | temp6 << (0x20 - temp8 & 0xff);\n    temp7 = (temp6 >> (temp8 & 0xff) & ~((temp6 & 0x80000000) >> (temp8 & 0xff))) -\n            ((int)temp2 >> 0x1f);\n    if ((temp11 | temp9 << (0x20 - temp8 & 0xff) | temp2 << 1) == 0) {\n      temp7 = temp7 & ~(temp2 >> 0x1f);\n    }\n    return CONCAT44(temp6,temp7) & 0x80000000ffffffff;\n  }\n  diff = temp2 - 0x14;\n  if (diff != 0 && diff < 0 == SCARRY4(temp8,0xc)) {\n    temp7 = 0xc - diff;\n    temp2 = temp9 << (temp7 & 0xff);\n    temp9 = temp9 >> (0x20 - temp7 & 0xff) | temp6 << (temp7 & 0xff);\n    temp7 = temp9 + -((int)temp2 >> 0x1f);\n    if ((temp11 | temp2 << 1) == 0) {\n      temp7 = temp7 & ~(temp2 >> 0x1f);\n    }\n    return CONCAT44((temp6 & 0x80000000) + (uint)CARRY4(temp9,-((int)temp2 >> 0x1f)),temp7);\n  }\n  temp8 = temp9 << (temp7 + 0x20 & 0xff);\n  temp9 = temp9 >> (temp2 & 0xff) | temp6 << (temp7 + 0x20 & 0xff);\n  temp7 = temp9 + -((int)temp8 >> 0x1f);\n  if ((temp11 | temp8 << 1) == 0) {\n    temp7 = temp7 & ~(temp8 >> 0x1f);\n  }\n  return CONCAT44((temp6 & 0x80000000) +\n                  ((temp6 & 0x7fffffff) >> (temp2 & 0xff)) +\n                  (uint)CARRY4(temp9,-((int)temp8 >> 0x1f)),temp7);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "iVar8": "diff",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "bVar14": "isEqual1",
                "bVar15": "isEqual2",
                "bVar16": "isCarry",
                "uVar17": "combinedArgs"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "convert_float_to_bits_08008a02",
            "code": "\nulonglong convertFloatToBits_08008a02(uint floatPart1,uint floatPart2,uint floatPart3,uint floatPart4)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  uint tempVar5;\n  bool isZero;\n  \n  tempVar3 = tempVar5 & floatPart4 >> 0x14;\n  tempVar4 = floatPart2;\n  if (tempVar2 != tempVar5 || tempVar3 != tempVar5) {\n    if (tempVar2 == tempVar5) {\n      if (((floatPart1 | floatPart2 << 0xc) == 0) && (floatPart1 = floatPart3, tempVar4 = floatPart4, tempVar3 != tempVar5)\n         ) {\nLAB_08008874:\n        return (ulonglong)((floatPart2 ^ floatPart4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (tempVar3 == tempVar5) {\n      floatPart1 = floatPart3;\n      tempVar4 = floatPart4;\n      if ((floatPart3 | floatPart4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((floatPart2 ^ floatPart4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (floatPart1 | floatPart2 << 1) == 0;\n      if (!isZero) {\n        isZero = (floatPart3 | floatPart4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (tempVar2 == 0) {\n          tempVar4 = floatPart2 & 0x80000000;\n          do {\n            tempVar1 = floatPart1 & 0x80000000;\n            floatPart1 = floatPart1 << 1;\n            floatPart2 = floatPart2 * 2 + (uint)(tempVar1 != 0);\n          } while ((floatPart2 & 0x100000) == 0);\n          floatPart2 = floatPart2 | tempVar4;\n          if (tempVar3 != 0) {\n            return CONCAT44(floatPart2,floatPart1);\n          }\n        }\n        do {\n          tempVar4 = floatPart3 & 0x80000000;\n          floatPart3 = floatPart3 << 1;\n          floatPart4 = floatPart4 * 2 + (uint)(tempVar4 != 0);\n        } while ((floatPart4 & 0x100000) == 0);\n        return CONCAT44(floatPart2,floatPart1);\n      }\n      if ((floatPart1 | floatPart2 << 1) != 0) goto LAB_08008874;\n      if ((floatPart3 | floatPart4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(tempVar4,floatPart1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "convert_float_to_bits_08008a02",
                "param_1": "floatPart1",
                "param_2": "floatPart2",
                "param_3": "floatPart3",
                "param_4": "floatPart4",
                "uVar1": "tempVar1",
                "unaff_r4": "tempVar2",
                "uVar2": "tempVar3",
                "uVar3": "tempVar4",
                "in_r12": "tempVar5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "compare_parameters_08008a74",
            "code": "\nuint compare_parameters_08008a74(uint value_1,uint value_2,uint value_3,uint value_4)\n\n{\n  uint result;\n  bool isZero;\n  bool isNegative;\n  \n  if (((int)(value_2 << 1) >> 0x15 == -1 || (int)(value_4 << 1) >> 0x15 == -1) &&\n     ((((int)(value_2 << 1) >> 0x15 == -1 && ((value_1 | value_2 << 0xc) != 0)) ||\n      (((int)(value_4 << 1) >> 0x15 == -1 && ((value_3 | value_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (value_1 | value_2 << 1) == 0;\n  if (isZero) {\n    isZero = (value_3 | value_4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = value_2 == value_4;\n  }\n  if (isZero) {\n    isZero = value_1 == value_3;\n  }\n  if (!isZero) {\n    result = value_2 ^ value_4;\n    isZero = result == 0;\n    if (-1 < (int)result) {\n      isZero = value_2 == value_4;\n    }\n    isNegative = -1 < (int)result && value_4 <= value_2;\n    if (isZero) {\n      isNegative = value_3 <= value_1;\n    }\n    value_4 = (int)value_4 >> 0x1f;\n    if (!isNegative) {\n      value_4 = ~value_4;\n    }\n    return value_4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "compare_parameters_08008a74",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "value_4",
                "uVar1": "result",
                "bVar2": "isZero",
                "bVar3": "isNegative"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008b00(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_program_08008b00",
            "code": "\nundefined4 initializeProgram_08008b00(undefined4 input)\n\n{\n  FUN_08008a74();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_program_08008b00",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_initialized_08008b10",
            "code": "\nbool check_if_initialized_08008b10(void)\n\n{\n  char is_initialized;\n  \n  FUN_08008b00();\n  return is_initialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_initialized_08008b10",
                "in_ZR": "is_initialized"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "is_cy_null_08008b24",
            "code": "\nbool is_CY_null_08008b24(void)\n\n{\n  char input_char;\n  \n  FUN_08008b00();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "is_cy_null_08008b24",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_cy_zr_08008b4c",
            "code": "\nbool check_CY_ZR_08008b4c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08008af0();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_cy_zr_08008b4c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "is_cy_null_08008b60",
            "code": "\nbool is_CY_null_08008b60(void)\n\n{\n  char input_char;\n  \n  FUN_08008af0();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "is_cy_null_08008b60",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_parameters_validity_08008b74",
            "code": "\nundefined4 check_parameters_validity_08008b74(uint input_value_1,int input_value_2,uint input_value_3,int input_value_4)\n\n{\n  if ((((input_value_2 << 1) >> 0x15 != -1) || ((input_value_1 | input_value_2 << 0xc) == 0)) &&\n     (((input_value_4 << 1) >> 0x15 != -1 || ((input_value_3 | input_value_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_parameters_validity_08008b74",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "input_value_3",
                "param_4": "input_value_4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "reverse_bits_08008ba0",
            "code": "\nuint reverseBits_08008ba0(uint inputValue,uint bitShift)\n\n{\n  uint result;\n  int shiftedDouble;\n  uint tempVar;\n  \n  shiftedDouble = bitShift * 2 + 0x200000;\n  if (bitShift * 2 < 0xffe00000) {\n    if (-1 < shiftedDouble) {\n      return 0;\n    }\n    result = shiftedDouble >> 0x15;\n    tempVar = -result - 0x3e1;\n    if (result < 0xfffffc20 && tempVar != 0) {\n      result = (bitShift << 0xb | 0x80000000 | inputValue >> 0x15) >> (tempVar & 0xff);\n      if ((bitShift & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((inputValue | bitShift << 0xc) != 0) {\n    return 0;\n  }\n  bitShift = bitShift & 0x80000000;\n  if (bitShift == 0) {\n    bitShift = 0x7fffffff;\n  }\n  return bitShift;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "reverse_bits_08008ba0",
                "param_1": "inputValue",
                "param_2": "bitShift",
                "uVar1": "result",
                "iVar2": "shiftedDouble",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "check_overflow_and_shift_08008bf0",
            "code": "\nuint check_overflow_and_shift_08008bf0(uint input_1,uint input_2)\n\n{\n  int temp_var_1;\n  uint temp_var_2;\n  \n  if ((input_2 & 0x80000000) != 0) {\n    return 0;\n  }\n  temp_var_1 = input_2 * 2 + 0x200000;\n  if (input_2 * 2 < 0xffe00000) {\n    if (-1 < temp_var_1) {\n      return 0;\n    }\n    temp_var_2 = -(temp_var_1 >> 0x15) - 0x3e1;\n    if (-1 < (int)temp_var_2) {\n      return (input_2 << 0xb | 0x80000000 | input_1 >> 0x15) >> (temp_var_2 & 0xff);\n    }\n  }\n  else if ((input_1 | input_2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "check_overflow_and_shift_08008bf0",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "temp_var_1",
                "uVar2": "temp_var_2"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_unsigned_addition_08008c30",
            "code": "\nuint calculateUnsignedAddition_08008c30(uint input1,uint input2)\n\n{\n  uint result;\n  uint param2Times2;\n  uint param2PlusOffset;\n  uint in_r12;\n  bool isZero;\n  bool isLessThan0x70000000;\n  \n  param2Times2 = input2 * 2;\n  isLessThan0x70000000 = param2Times2 < 0x70000000;\n  param2PlusOffset = param2Times2 + 0x90000000;\n  result = param2PlusOffset;\n  if (!isLessThan0x70000000) {\n    in_r12 = param2Times2 + 0x8fe00000;\n    result = in_r12;\n  }\n  isZero = result == 0;\n  if (!isLessThan0x70000000 && param2PlusOffset >= 0x200000) {\n    isZero = in_r12 == 0x1fc00000;\n  }\n  if (((isLessThan0x70000000 || param2PlusOffset < 0x200000) || 0x1fc00000 < in_r12) || isZero) {\n    if ((input2 & 0x40000000) != 0) {\n      if (((int)param2Times2 >> 0x15 == -1) && ((input1 | input2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return input2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(param2Times2 + 0x92e00000) < 0 != SCARRY4(param2PlusOffset,0x2e00000)) {\n      return input2 & 0x80000000;\n    }\n    param2Times2 = 0x18 - (param2Times2 + 0x92e00000 >> 0x15);\n    result = input1 >> (param2Times2 & 0xff);\n    if (input1 << (0x20 - param2Times2 & 0xff) != 0) {\n      result = result | 1;\n    }\n    param2PlusOffset = input2 & 0x1fffff | 0x100000;\n    input1 = result | param2PlusOffset << (0x20 - param2Times2 & 0xff);\n    param2PlusOffset = (param2PlusOffset >> (param2Times2 & 0xff)) << 1;\n  }\n  result = (input2 & 0x80000000 | input1 >> 0x1d) + param2PlusOffset * 4 + (uint)(0x7fffffff < input1 * 8);\n  if (input1 * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_unsigned_addition_08008c30",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "param2Times2",
                "uVar3": "param2PlusOffset",
                "bVar4": "isZero",
                "bVar5": "isLessThan0x70000000"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_08008cd8",
            "code": "\nuint calculateFloat_08008cd8(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shiftAmount;\n  int shiftAmount2;\n  uint bitwiseXorResult;\n  uint input1Modified;\n  uint leftShiftedInput1;\n  uint adjustedShiftAmount;\n  uint difference;\n  bool isConditionMet;\n  \n  bitwiseXorResult = input2 ^ 0x80000000;\n  leftShiftedInput1 = input1 << 1;\n  isConditionMet = leftShiftedInput1 == 0;\n  if (!isConditionMet) {\n    input4 = input2 << 1;\n    isConditionMet = input4 == 0;\n  }\n  if (!isConditionMet) {\n    isConditionMet = leftShiftedInput1 == input4;\n  }\n  shiftAmount = (int)leftShiftedInput1 >> 0x18;\n  if (!isConditionMet) {\n    isConditionMet = shiftAmount == -1;\n  }\n  if (!isConditionMet) {\n    isConditionMet = (int)input4 >> 0x18 == -1;\n  }\n  if (isConditionMet) {\n    shiftAmount2 = (int)(input2 << 1) >> 0x18;\n    if (shiftAmount == -1 || shiftAmount2 == -1) {\n      leftShiftedInput1 = bitwiseXorResult;\n      if (shiftAmount == -1) {\n        leftShiftedInput1 = input1;\n      }\n      if (shiftAmount != -1 || shiftAmount2 != -1) {\n        bitwiseXorResult = leftShiftedInput1;\n      }\n      isConditionMet = (leftShiftedInput1 & 0x7fffff) == 0;\n      if (isConditionMet) {\n        isConditionMet = (bitwiseXorResult & 0x7fffff) == 0;\n      }\n      if (isConditionMet) {\n        isConditionMet = leftShiftedInput1 == bitwiseXorResult;\n      }\n      if (!isConditionMet) {\n        leftShiftedInput1 = leftShiftedInput1 | 0x400000;\n      }\n      return leftShiftedInput1;\n    }\n    if (((input1 ^ bitwiseXorResult) & 0x7fffffff) != 0) {\n      if (leftShiftedInput1 == 0) {\n        input1 = bitwiseXorResult;\n      }\n      return input1;\n    }\n    if (input1 != bitwiseXorResult) {\n      return 0;\n    }\n    if ((leftShiftedInput1 & 0xff000000) == 0) {\n      bitwiseXorResult = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        bitwiseXorResult = bitwiseXorResult | 0x80000000;\n      }\n      return bitwiseXorResult;\n    }\n    if (leftShiftedInput1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  leftShiftedInput1 = leftShiftedInput1 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - leftShiftedInput1;\n  isConditionMet = difference != 0;\n  adjustedShiftAmount = leftShiftedInput1;\n  if (isConditionMet && leftShiftedInput1 <= input4) {\n    adjustedShiftAmount = leftShiftedInput1 + difference;\n  }\n  if (isConditionMet && leftShiftedInput1 <= input4) {\n    bitwiseXorResult = bitwiseXorResult ^ input1;\n  }\n  if (isConditionMet && leftShiftedInput1 <= input4) {\n    input1 = input1 ^ bitwiseXorResult;\n  }\n  if (isConditionMet && leftShiftedInput1 <= input4) {\n    bitwiseXorResult = bitwiseXorResult ^ input1;\n  }\n  if (input4 < leftShiftedInput1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  leftShiftedInput1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    leftShiftedInput1 = -leftShiftedInput1;\n  }\n  input1Modified = bitwiseXorResult & 0xffffff | 0x800000;\n  if ((bitwiseXorResult & 0x80000000) != 0) {\n    input1Modified = -input1Modified;\n  }\n  if (adjustedShiftAmount == difference) {\n    input1Modified = input1Modified ^ 0x800000;\n    if (adjustedShiftAmount == 0) {\n      leftShiftedInput1 = leftShiftedInput1 ^ 0x800000;\n      adjustedShiftAmount = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  leftShiftedInput1 = leftShiftedInput1 + ((int)input1Modified >> (difference & 0xff));\n  input1Modified = input1Modified << (0x20 - difference & 0xff);\n  input1 = leftShiftedInput1 & 0x80000000;\n  if ((int)leftShiftedInput1 < 0) {\n    isConditionMet = input1Modified != 0;\n    input1Modified = -input1Modified;\n    leftShiftedInput1 = -leftShiftedInput1 - (uint)isConditionMet;\n  }\n  if (leftShiftedInput1 < 0x800000) {\n    bitwiseXorResult = input1Modified & 0x80000000;\n    input1Modified = input1Modified << 1;\n    leftShiftedInput1 = leftShiftedInput1 * 2 + (uint)(bitwiseXorResult != 0);\n    bitwiseXorResult = adjustedShiftAmount - 2;\n    if (adjustedShiftAmount - 1 == 0 || leftShiftedInput1 < 0x800000) {\n      difference = LZCOUNT(leftShiftedInput1) - 8;\n      leftShiftedInput1 = leftShiftedInput1 << (difference & 0xff);\n      if ((int)bitwiseXorResult < (int)difference) {\n        leftShiftedInput1 = leftShiftedInput1 >> (-(bitwiseXorResult - difference) & 0xff);\n      }\n      else {\n        leftShiftedInput1 = leftShiftedInput1 + (bitwiseXorResult - difference) * 0x800000;\n      }\n      return leftShiftedInput1 | input1;\n    }\n  }\n  else {\n    bitwiseXorResult = adjustedShiftAmount - 1;\n    if (0xffffff < leftShiftedInput1) {\n      bitwiseXorResult = leftShiftedInput1 & 1;\n      leftShiftedInput1 = leftShiftedInput1 >> 1;\n      input1Modified = (uint)(bitwiseXorResult != 0) << 0x1f | input1Modified >> 1;\n      bitwiseXorResult = adjustedShiftAmount;\n      if (0xfd < adjustedShiftAmount) goto LAB_08008e12;\n    }\n  }\n  leftShiftedInput1 = leftShiftedInput1 + bitwiseXorResult * 0x800000 + (uint)(0x7fffffff < input1Modified);\n  if (input1Modified == 0x80000000) {\n    leftShiftedInput1 = leftShiftedInput1 & 0xfffffffe;\n  }\n  return leftShiftedInput1 | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_08008cd8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftAmount",
                "iVar2": "shiftAmount2",
                "uVar3": "bitwiseXorResult",
                "uVar4": "input1Modified",
                "uVar5": "leftShiftedInput1",
                "uVar6": "adjustedShiftAmount",
                "uVar7": "difference",
                "bVar8": "isConditionMet"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_floating_point_08008cdc",
            "code": "\nuint calculateFloatingPoint_08008cdc(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shiftRightAmount1;\n  int shiftRightAmount2;\n  uint mantissaPart1;\n  uint result;\n  uint exponentPart;\n  uint shiftDifference;\n  bool isEqual;\n  \n  result = input1 << 1;\n  isEqual = result == 0;\n  if (!isEqual) {\n    input4 = input2 << 1;\n    isEqual = input4 == 0;\n  }\n  if (!isEqual) {\n    isEqual = result == input4;\n  }\n  shiftRightAmount1 = (int)result >> 0x18;\n  if (!isEqual) {\n    isEqual = shiftRightAmount1 == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)input4 >> 0x18 == -1;\n  }\n  if (isEqual) {\n    shiftRightAmount2 = (int)(input2 << 1) >> 0x18;\n    if (shiftRightAmount1 == -1 || shiftRightAmount2 == -1) {\n      result = input2;\n      if (shiftRightAmount1 == -1) {\n        result = input1;\n      }\n      if (shiftRightAmount1 != -1 || shiftRightAmount2 != -1) {\n        input2 = result;\n      }\n      isEqual = (result & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (input2 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = result == input2;\n      }\n      if (!isEqual) {\n        result = result | 0x400000;\n      }\n      return result;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (result == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((result & 0xff000000) == 0) {\n      result = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        result = result | 0x80000000;\n      }\n      return result;\n    }\n    if (result < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  result = result >> 0x18;\n  input4 = input4 >> 0x18;\n  shiftDifference = input4 - result;\n  isEqual = shiftDifference != 0;\n  exponentPart = result;\n  if (isEqual && result <= input4) {\n    exponentPart = result + shiftDifference;\n  }\n  if (isEqual && result <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (isEqual && result <= input4) {\n    input1 = input1 ^ input2;\n  }\n  if (isEqual && result <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (input4 < result) {\n    shiftDifference = -shiftDifference;\n  }\n  if (0x19 < shiftDifference) {\n    return input1;\n  }\n  result = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    result = -result;\n  }\n  mantissaPart1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    mantissaPart1 = -mantissaPart1;\n  }\n  if (exponentPart == shiftDifference) {\n    mantissaPart1 = mantissaPart1 ^ 0x800000;\n    if (exponentPart == 0) {\n      result = result ^ 0x800000;\n      exponentPart = 1;\n    }\n    else {\n      shiftDifference = shiftDifference - 1;\n    }\n  }\n  result = result + ((int)mantissaPart1 >> (shiftDifference & 0xff));\n  mantissaPart1 = mantissaPart1 << (0x20 - shiftDifference & 0xff);\n  input1 = result & 0x80000000;\n  if ((int)result < 0) {\n    isEqual = mantissaPart1 != 0;\n    mantissaPart1 = -mantissaPart1;\n    result = -result - (uint)isEqual;\n  }\n  if (result < 0x800000) {\n    shiftDifference = mantissaPart1 & 0x80000000;\n    mantissaPart1 = mantissaPart1 << 1;\n    result = result * 2 + (uint)(shiftDifference != 0);\n    shiftDifference = exponentPart - 2;\n    if (exponentPart - 1 == 0 || result < 0x800000) {\n      exponentPart = LZCOUNT(result) - 8;\n      result = result << (exponentPart & 0xff);\n      if ((int)shiftDifference < (int)exponentPart) {\n        result = result >> (-(shiftDifference - exponentPart) & 0xff);\n      }\n      else {\n        result = result + (shiftDifference - exponentPart) * 0x800000;\n      }\n      return result | input1;\n    }\n  }\n  else {\n    shiftDifference = exponentPart - 1;\n    if (0xffffff < result) {\n      shiftDifference = result & 1;\n      result = result >> 1;\n      mantissaPart1 = (uint)(shiftDifference != 0) << 0x1f | mantissaPart1 >> 1;\n      shiftDifference = exponentPart;\n      if (0xfd < exponentPart) goto LAB_08008e12;\n    }\n  }\n  result = result + shiftDifference * 0x800000 + (uint)(0x7fffffff < mantissaPart1);\n  if (mantissaPart1 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_floating_point_08008cdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftRightAmount1",
                "iVar2": "shiftRightAmount2",
                "uVar3": "mantissaPart1",
                "uVar4": "result",
                "uVar5": "exponentPart",
                "uVar6": "shiftDifference",
                "bVar7": "isEqual"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_result_08008e3c",
            "code": "\nuint calculateResult_08008e3c(uint inputValue)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  int constantValue;\n  uint tempValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(inputValue);\n  shiftAmount = leadingZeros - 8;\n  constantValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeros) {\n    tempValue = 0 << (shiftAmount & 0xff);\n    leadingZeros = constantValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < tempValue);\n    if (tempValue == 0x80000000) {\n      leadingZeros = leadingZeros & 0xfffffffe;\n    }\n    return leadingZeros;\n  }\n  shiftAmount = inputValue << leadingZeros + 0x18;\n  leadingZeros = constantValue + ((inputValue >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeros = leadingZeros & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeros;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_result_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "iVar3": "constantValue",
                "uVar4": "tempValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "calculate_sign_offset_08008e44",
            "code": "\nuint calculateSignOffset_08008e44(uint inputValue)\n\n{\n  uint leadingZeroes;\n  uint bitDifference;\n  uint signBit;\n  int offset;\n  \n  signBit = inputValue & 0x80000000;\n  if ((int)signBit < 0) {\n    inputValue = -inputValue;\n  }\n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = LZCOUNT(inputValue);\n  bitDifference = leadingZeroes - 8;\n  offset = ((signBit | 0x4b000000) - 0x800000) + bitDifference * -0x800000;\n  if (7 < leadingZeroes) {\n    leadingZeroes = 0 << (bitDifference & 0xff);\n    signBit = offset + (inputValue << (bitDifference & 0xff)) +\n            (0U >> (0x20 - bitDifference & 0xff)) + (uint)(0x7fffffff < leadingZeroes);\n    if (leadingZeroes == 0x80000000) {\n      signBit = signBit & 0xfffffffe;\n    }\n    return signBit;\n  }\n  bitDifference = inputValue << leadingZeroes + 0x18;\n  signBit = offset + ((inputValue >> (0x20 - (leadingZeroes + 0x18) & 0xff)) - ((int)bitDifference >> 0x1f));\n  if ((bitDifference & 0x7fffffff) == 0) {\n    signBit = signBit & ~(bitDifference >> 0x1f);\n  }\n  return signBit;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "calculate_sign_offset_08008e44",
                "param_1": "inputValue",
                "uVar1": "leadingZeroes",
                "uVar2": "bitDifference",
                "uVar3": "signBit",
                "iVar4": "offset"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_float_08008eec",
            "code": "\nuint calculateFloat_08008eec(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  longlong result;\n  uint finalResult;\n  uint input1Shifted;\n  int sum;\n  int difference;\n  uint product;\n  int differenceAbs;\n  uint input2Shifted;\n  bool conditionCheck1;\n  bool conditionCheck2;\n  \n  input1Shifted = input1 >> 0x17 & 0xff;\n  conditionCheck1 = input1Shifted == 0;\n  if (!conditionCheck1) {\n    input4 = input2 >> 0x17 & 0xff;\n    conditionCheck1 = input4 == 0;\n  }\n  if (!conditionCheck1) {\n    conditionCheck1 = input1Shifted == 0xff;\n  }\n  if (!conditionCheck1) {\n    conditionCheck1 = input4 == 0xff;\n  }\n  if (conditionCheck1) {\n    input4 = input2 >> 0x17 & 0xff;\n    if (input1Shifted == 0xff || input4 == 0xff) {\n      conditionCheck1 = input1 == 0 || input1 == 0x80000000;\n      finalResult = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        conditionCheck1 = input2 == 0;\n        finalResult = input1;\n      }\n      if (!conditionCheck1) {\n        conditionCheck1 = input2 == 0x80000000;\n      }\n      input2Shifted = finalResult;\n      if (((conditionCheck1) || ((input1Shifted == 0xff && ((finalResult & 0x7fffff) != 0)))) ||\n         ((input4 == 0xff && (input2Shifted = input2, (input2 & 0x7fffff) != 0)))) {\n        return input2Shifted | 0x7fc00000;\n      }\n      finalResult = finalResult ^ input2;\n      goto LAB_0800903c;\n    }\n    conditionCheck1 = (input1 & 0x7fffffff) == 0;\n    if (!conditionCheck1) {\n      conditionCheck1 = (input2 & 0x7fffffff) == 0;\n    }\n    if (conditionCheck1) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    conditionCheck1 = input1Shifted == 0;\n    finalResult = input1 & 0x80000000;\n    while( true ) {\n      if (conditionCheck1) {\n        input1 = input1 << 1;\n        conditionCheck1 = (input1 & 0x800000) == 0;\n      }\n      if (!conditionCheck1) break;\n      input1Shifted = input1Shifted - 1;\n    }\n    input1 = input1 | finalResult;\n    conditionCheck1 = input4 == 0;\n    finalResult = input2 & 0x80000000;\n    while( true ) {\n      if (conditionCheck1) {\n        input2 = input2 << 1;\n        conditionCheck1 = (input2 & 0x800000) == 0;\n      }\n      if (!conditionCheck1) break;\n      input4 = input4 - 1;\n    }\n    input2 = input2 | finalResult;\n  }\n  sum = input1Shifted + input4;\n  input2Shifted = input1 ^ input2;\n  input1Shifted = input1 << 9;\n  conditionCheck1 = input1Shifted == 0;\n  if (!conditionCheck1) {\n    input2 = input2 << 9;\n    conditionCheck1 = input2 == 0;\n  }\n  if (conditionCheck1) {\n    if (input1Shifted == 0) {\n      input2 = input2 << 9;\n    }\n    finalResult = input2Shifted & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    conditionCheck2 = SBORROW4(sum,0x7f);\n    difference = sum + -0x7f;\n    conditionCheck1 = difference == 0;\n    differenceAbs = difference;\n    if (!conditionCheck1 && 0x7e < sum) {\n      conditionCheck2 = SBORROW4(0xff,difference);\n      differenceAbs = 0xff - difference;\n      conditionCheck1 = difference == 0xff;\n    }\n    if (!conditionCheck1 && differenceAbs < 0 == conditionCheck2) {\n      finalResult = finalResult | difference * 0x800000;\n    }\n    if (!conditionCheck1 && differenceAbs < 0 == conditionCheck2) {\n      return finalResult;\n    }\n    finalResult = finalResult | 0x800000;\n    product = 0;\n    conditionCheck2 = SBORROW4(difference,1);\n    input2Shifted = sum - 0x80;\n    conditionCheck1 = input2Shifted == 0;\n    input1Shifted = input2Shifted;\n  }\n  else {\n    result = (ulonglong)(input1Shifted >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    product = (uint)result;\n    finalResult = (uint)((ulonglong)result >> 0x20);\n    conditionCheck1 = finalResult < 0x800000;\n    if (conditionCheck1) {\n      finalResult = finalResult << 1;\n    }\n    if (conditionCheck1) {\n      finalResult = finalResult | product >> 0x1f;\n      product = product << 1;\n    }\n    finalResult = input2Shifted & 0x80000000 | finalResult;\n    input2Shifted = (sum + -0x7f) - (uint)conditionCheck1;\n    conditionCheck2 = SBORROW4(input2Shifted,0xfd);\n    conditionCheck1 = input2Shifted == 0xfd;\n    input1Shifted = input2Shifted - 0xfd;\n    if (input2Shifted < 0xfe) {\n      finalResult = finalResult + input2Shifted * 0x800000 + (uint)(0x7fffffff < product);\n      if (product == 0x80000000) {\n        finalResult = finalResult & 0xfffffffe;\n      }\n      return finalResult;\n    }\n  }\n  if (conditionCheck1 || (int)input1Shifted < 0 != conditionCheck2) {\n    conditionCheck1 = (int)(input2Shifted + 0x19) < 0;\n    if (input2Shifted == 0xffffffe7 || conditionCheck1 != SCARRY4(input2Shifted,0x19)) {\n      finalResult = finalResult & 0x80000000;\n    }\n    if (input2Shifted != 0xffffffe7 && conditionCheck1 == SCARRY4(input2Shifted,0x19)) {\n      input1Shifted = (finalResult << 1) >> (-input2Shifted & 0xff);\n      input2Shifted = finalResult << (input2Shifted + 0x20 & 0xff);\n      input1Shifted = ((uint)((finalResult & 0x80000000) != 0) << 0x1f | input1Shifted >> 1) + (uint)((byte)input1Shifted & 1);\n      if ((product | input2Shifted << 1) == 0) {\n        input1Shifted = input1Shifted & ~(input2Shifted >> 0x1f);\n      }\n      return input1Shifted;\n    }\n    return finalResult;\n  }\nLAB_0800903c:\n  return finalResult & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_float_08008eec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "lVar1": "result",
                "uVar2": "finalResult",
                "uVar3": "input1Shifted",
                "iVar4": "sum",
                "iVar5": "difference",
                "uVar6": "product",
                "iVar7": "differenceAbs",
                "uVar8": "input2Shifted",
                "bVar9": "conditionCheck1",
                "bVar10": "conditionCheck2"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "calculate_floating_point_08009054",
            "code": "\nuint calculateFloatingPoint_08009054(uint input1,uint input2,undefined4 param3,uint param4)\n\n{\n  uint exponentDiff;\n  uint exponent1;\n  int exponentDiffAbs;\n  uint mantissaDiff;\n  int updatedExponentDiff;\n  uint result;\n  bool isZero;\n  bool isNegativeExponentDiff;\n  bool isNegativeCarry;\n  \n  exponent1 = input1 >> 0x17 & 0xff;\n  isZero = exponent1 == 0;\n  if (!isZero) {\n    param4 = input2 >> 0x17 & 0xff;\n    isZero = param4 == 0;\n  }\n  if (!isZero) {\n    isZero = exponent1 == 0xff;\n  }\n  if (!isZero) {\n    isZero = param4 == 0xff;\n  }\n  if (isZero) {\n    param4 = input2 >> 0x17 & 0xff;\n    result = input1;\n    if (exponent1 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (result = input2, param4 == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (param4 == 0xff) {\n        result = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      isZero = (input1 & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (input2 & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = exponent1 == 0;\n        result = input1 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            input1 = input1 << 1;\n            isZero = (input1 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          exponent1 = exponent1 - 1;\n        }\n        input1 = input1 | result;\n        isZero = param4 == 0;\n        result = input2 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            input2 = input2 << 1;\n            isZero = (input2 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          param4 = param4 - 1;\n        }\n        input2 = input2 | result;\n        goto LAB_0800906c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_0800906c:\n    exponentDiffAbs = exponent1 - param4;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      isNegativeCarry = SCARRY4(exponentDiffAbs,0x7f);\n      updatedExponentDiff = exponentDiffAbs + 0x7f;\n      isZero = updatedExponentDiff < 0;\n      isNegativeExponentDiff = updatedExponentDiff == 0;\n      if (!isNegativeExponentDiff && isZero == isNegativeCarry) {\n        isNegativeCarry = SBORROW4(0xff,updatedExponentDiff);\n        isZero = 0xff - updatedExponentDiff < 0;\n        isNegativeExponentDiff = updatedExponentDiff == 0xff;\n      }\n      if (!isNegativeExponentDiff && isZero == isNegativeCarry) {\n        input1 = input1 | updatedExponentDiff * 0x800000;\n      }\n      if (!isNegativeExponentDiff && isZero == isNegativeCarry) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      exponent1 = 0;\n      isNegativeExponentDiff = SBORROW4(updatedExponentDiff,1);\n      mantissaDiff = exponentDiffAbs + 0x7e;\n      isZero = mantissaDiff == 0;\n      result = mantissaDiff;\n    }\n    else {\n      exponentDiff = (input2 << 9) >> 4 | 0x10000000;\n      exponent1 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      isZero = exponentDiff <= exponent1;\n      if (!isZero) {\n        exponent1 = exponent1 << 1;\n      }\n      mantissaDiff = exponentDiffAbs + 0x7d + (uint)isZero;\n      result = 0x800000;\n      do {\n        if (exponentDiff <= exponent1) {\n          exponent1 = exponent1 - exponentDiff;\n          input1 = input1 | result;\n        }\n        isZero = exponentDiff >> 1 <= exponent1;\n        if (isZero) {\n          exponent1 = exponent1 - (exponentDiff >> 1);\n        }\n        if (isZero) {\n          input1 = input1 | result >> 1;\n        }\n        isZero = exponentDiff >> 2 <= exponent1;\n        if (isZero) {\n          exponent1 = exponent1 - (exponentDiff >> 2);\n        }\n        if (isZero) {\n          input1 = input1 | result >> 2;\n        }\n        isZero = exponentDiff >> 3 <= exponent1;\n        if (isZero) {\n          exponent1 = exponent1 - (exponentDiff >> 3);\n        }\n        if (isZero) {\n          input1 = input1 | result >> 3;\n        }\n        exponent1 = exponent1 * 0x10;\n        isZero = exponent1 == 0;\n        if (!isZero) {\n          result = result >> 4;\n          isZero = result == 0;\n        }\n      } while (!isZero);\n      isNegativeExponentDiff = SBORROW4(mantissaDiff,0xfd);\n      isZero = mantissaDiff == 0xfd;\n      result = mantissaDiff - 0xfd;\n      if (mantissaDiff < 0xfe) {\n        input1 = input1 + mantissaDiff * 0x800000 + (uint)(exponentDiff <= exponent1);\n        if (exponent1 - exponentDiff == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (isZero || (int)result < 0 != isNegativeExponentDiff) {\n      isZero = (int)(mantissaDiff + 0x19) < 0;\n      if (mantissaDiff == 0xffffffe7 || isZero != SCARRY4(mantissaDiff,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (mantissaDiff == 0xffffffe7 || isZero != SCARRY4(mantissaDiff,0x19)) {\n        return input1;\n      }\n      result = (input1 << 1) >> (-mantissaDiff & 0xff);\n      mantissaDiff = input1 << (mantissaDiff + 0x20 & 0xff);\n      result = ((uint)((input1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((exponent1 | mantissaDiff << 1) == 0) {\n        result = result & ~(mantissaDiff >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "calculate_floating_point_08009054",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "exponentDiff",
                "uVar2": "exponent1",
                "iVar3": "exponentDiffAbs",
                "uVar4": "mantissaDiff",
                "iVar5": "updatedExponentDiff",
                "uVar6": "result",
                "bVar7": "isZero",
                "bVar8": "isNegativeExponentDiff",
                "bVar9": "isNegativeCarry"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "calculate_result_0800919c",
            "code": "\nuint calculate_result_0800919c(uint input_value1,uint input_value2)\n\n{\n  bool is_negative;\n  uint twice_input_value1;\n  uint twice_input_value2;\n  uint modified_input_values;\n  bool is_zero;\n  \n  twice_input_value1 = input_value1 * 2;\n  twice_input_value2 = input_value2 * 2;\n  if (((int)twice_input_value1 >> 0x18 == -1 || (int)twice_input_value2 >> 0x18 == -1) &&\n     ((((int)twice_input_value1 >> 0x18 == -1 && ((input_value1 & 0x7fffff) != 0)) ||\n      (((int)twice_input_value2 >> 0x18 == -1 && ((input_value2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  modified_input_values = twice_input_value1 | input_value2 & 0x7fffffff;\n  is_zero = modified_input_values == 0;\n  if (!is_zero) {\n    modified_input_values = input_value1 ^ input_value2;\n    is_zero = modified_input_values == 0;\n  }\n  is_negative = -1 < (int)modified_input_values;\n  if (is_negative) {\n    input_value1 = twice_input_value1 + input_value2 * -2;\n    is_zero = input_value1 == 0;\n  }\n  if ((is_negative && twice_input_value2 <= twice_input_value1) && !is_zero) {\n    input_value1 = (int)input_value2 >> 0x1f;\n  }\n  if (!is_negative || twice_input_value2 > twice_input_value1) {\n    input_value1 = ~((int)input_value2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_value1 = input_value1 | 1;\n  }\n  return input_value1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "bVar1": "is_negative",
                "uVar2": "twice_input_value1",
                "uVar3": "twice_input_value2",
                "uVar4": "modified_input_values",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_and_swap_params_080091fc",
            "code": "\nvoid copyAndSwapParams_080091fc(undefined4 sourceParam,undefined4 targetParam)\n\n{\n  FUN_08009204(targetParam,sourceParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_and_swap_params_080091fc",
                "param_1": "sourceParam",
                "param_2": "targetParam"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_params_08009204",
            "code": "\nundefined8 concatenate_params_08009204(undefined4 first_param,undefined4 second_param)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_params_08009204",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "is_non_null_character_08009214",
            "code": "\nbool isNonNullCharacter_08009214(void)\n\n{\n  char character;\n  \n  FUN_08009204();\n  return character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "is_non_null_character_08009214",
                "in_ZR": "character"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "is_null_terminated_08009228",
            "code": "\nbool is_null_terminated_08009228(void)\n\n{\n  char input_char;\n  \n  FUN_08009204();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "is_null_terminated_08009228",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_cy_zr_0800923c",
            "code": "\nbool check_CY_ZR_0800923c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08009204();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_cy_zr_0800923c",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_conditions_08009250",
            "code": "\nbool checkConditions_08009250(void)\n\n{\n  undefined isZeroFlagSet;\n  undefined isCarryFlagSet;\n  \n  FUN_080091fc();\n  return !(bool)isCarryFlagSet || (bool)isZeroFlagSet;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_conditions_08009250",
                "in_ZR": "isZeroFlagSet",
                "in_CY": "isCarryFlagSet"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "is_end_of_string_08009264",
            "code": "\nbool isEndOfString_08009264(void)\n\n{\n  char currentCharacter;\n  \n  FUN_080091fc();\n  return currentCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "is_end_of_string_08009264",
                "in_CY": "currentCharacter"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "extracted_value_08009278",
            "code": "\nuint extractedValue_08009278(uint inputValue)\n\n{\n  uint shiftedValue1;\n  uint differenceValue;\n  \n  if (inputValue << 1 < 0x7f000000) {\n    return 0;\n  }\n  shiftedValue1 = (inputValue << 1) >> 0x18;\n  differenceValue = 0x9e - shiftedValue1;\n  if (shiftedValue1 < 0x9f && differenceValue != 0) {\n    shiftedValue1 = (inputValue << 8 | 0x80000000) >> (differenceValue & 0xff);\n    if ((inputValue & 0x80000000) != 0) {\n      shiftedValue1 = -shiftedValue1;\n    }\n    return shiftedValue1;\n  }\n  if ((differenceValue == 0xffffff9f) && ((inputValue & 0x7fffff) != 0)) {\n    return 0;\n  }\n  inputValue = inputValue & 0x80000000;\n  if (inputValue == 0) {\n    inputValue = 0x7fffffff;\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_08009278": "extracted_value_08009278",
                "param_1": "inputValue",
                "uVar1": "shiftedValue1",
                "uVar2": "differenceValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "convert_to_double_08009318",
            "code": "\nlonglong convertToDouble_08009318(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  uint shiftAmount;\n  uint mask;\n  bool carryFlag;\n  undefined8 tempResult;\n  longlong finalResult;\n  \n  mask = (input2 << 1) >> 0x15;\n  shiftAmount = mask - 0x3ff;\n  if ((int)shiftAmount < 0x14) {\n    if ((int)shiftAmount < 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result1 = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result1 != 0) {\n        if ((int)input2 < 0) {\n          finalResult = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          finalResult = 0;\n        }\n        else {\n          finalResult = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftAmount & 0xff);\n      finalResult = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n        result1 = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n        finalResult = CONCAT44(input2,input1);\n        if (result1 != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (shiftAmount & 0xff));\n          }\n          finalResult = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftAmount < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    finalResult = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result1 = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result1 != 0) {\n        if (0 < (int)input2) {\n          if (shiftAmount == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftAmount = 1 << (0x34 - shiftAmount & 0xff);\n            carryFlag = CARRY4(shiftAmount,input1);\n            input1 = shiftAmount + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(input2,input1);\n    if (shiftAmount == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08009318": "convert_to_double_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "uVar2": "shiftAmount",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "tempResult",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_floating_point_number_08009410",
            "code": "\nundefined4 processFloatingPointNumber_08009410(undefined4 inputValue,uint flag)\n\n{\n  undefined4 returnValue;\n  uint result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  if (0x3fe921fb < (flag & 0x7fffffff)) {\n    if ((flag & 0x7fffffff) < 0x7ff00000) {\n      result = FUN_08009d78(inputValue,flag,&tempVar1);\n      result = result & 3;\n      if (result == 1) {\n        returnValue = FUN_0800adf0(tempVar1,tempVar2,tempVar3,tempVar4,1);\n      }\n      else if (result == 2) {\n        returnValue = FUN_0800a348(tempVar1,tempVar2,tempVar3,tempVar4);\n      }\n      else if (result == 0) {\n        returnValue = FUN_0800a348(tempVar1,tempVar2,tempVar3,tempVar4);\n      }\n      else {\n        returnValue = FUN_0800adf0(tempVar1,tempVar2,tempVar3,tempVar4,1);\n      }\n    }\n    else {\n      returnValue = FUN_080082d0(inputValue,flag,inputValue,flag);\n    }\n    return returnValue;\n  }\n  returnValue = FUN_0800a348(inputValue,flag,0,0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_floating_point_number_08009410",
                "param_1": "inputValue",
                "param_2": "flag",
                "uVar1": "returnValue",
                "uVar2": "result",
                "local_28": "tempVar1",
                "uStack_24": "tempVar2",
                "local_20": "tempVar3",
                "uStack_1c": "tempVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_double_precision_080094c0",
            "code": "\nlonglong calculateDoublePrecision_080094c0(uint input_1,uint input_2,undefined4 constant_1,undefined4 constant_2)\n\n{\n  int result;\n  uint shiftedBits;\n  uint mask;\n  bool carryFlag;\n  undefined8 conversionResult;\n  longlong combinedResult;\n  \n  mask = (input_2 << 1) >> 0x15;\n  shiftedBits = mask - 0x3ff;\n  if ((int)shiftedBits < 0x14) {\n    if ((int)shiftedBits < 0) {\n      conversionResult = FUN_080082d4(input_1,input_2,0x8800759c,0x7e37e43c,constant_2);\n      result = FUN_08008b60((int)conversionResult,(int)((ulonglong)conversionResult >> 0x20),0,0);\n      combinedResult = CONCAT44(input_2,input_1);\n      if (result != 0) {\n        if ((int)input_2 < 0) {\n          if ((input_1 | input_2 & 0x7fffffff) != 0) {\n            input_2 = 0xbff00000;\n          }\n          combinedResult = (ulonglong)input_2 << 0x20;\n        }\n        else {\n          combinedResult = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedBits & 0xff);\n      combinedResult = CONCAT44(input_2,input_1);\n      if ((input_2 & mask | input_1) != 0) {\n        conversionResult = FUN_080082d4(input_1,input_2,0x8800759c,0x7e37e43c,constant_2);\n        result = FUN_08008b60((int)conversionResult,(int)((ulonglong)conversionResult >> 0x20),0,0);\n        combinedResult = CONCAT44(input_2,input_1);\n        if (result != 0) {\n          if ((int)input_2 < 0) {\n            input_2 = input_2 + (0x100000 >> (shiftedBits & 0xff));\n          }\n          combinedResult = (ulonglong)(input_2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedBits < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    combinedResult = CONCAT44(input_2,input_1);\n    if ((mask & input_1) != 0) {\n      conversionResult = FUN_080082d4(input_1,input_2,0x8800759c,0x7e37e43c,constant_2);\n      result = FUN_08008b60((int)conversionResult,(int)((ulonglong)conversionResult >> 0x20),0,0);\n      combinedResult = CONCAT44(input_2,input_1);\n      if (result != 0) {\n        if ((int)input_2 < 0) {\n          if (shiftedBits == 0x14) {\n            input_2 = input_2 + 1;\n          }\n          else {\n            shiftedBits = 1 << (0x34 - shiftedBits & 0xff);\n            carryFlag = CARRY4(shiftedBits,input_1);\n            input_1 = shiftedBits + input_1;\n            if (carryFlag != false) {\n              input_2 = input_2 + 1;\n            }\n          }\n        }\n        combinedResult = CONCAT44(input_2,input_1 & ~mask);\n      }\n    }\n  }\n  else {\n    combinedResult = CONCAT44(input_2,input_1);\n    if (shiftedBits == 0x400) {\n      combinedResult = FUN_080082d4();\n    }\n  }\n  return combinedResult;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_double_precision_080094c0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "constant_1",
                "param_4": "constant_2",
                "iVar1": "result",
                "uVar2": "shiftedBits",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "conversionResult",
                "lVar6": "combinedResult"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint shiftRightTemp;\n  uint shiftRightCount;\n  uint result;\n  int sign;\n  uint shiftLeftCount;\n  \n  shiftRightCount = (input2 << 1) >> 0x15;\n  shiftLeftCount = shiftRightCount - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)shiftLeftCount < 0x14) {\n    if ((int)shiftLeftCount < 0) {\n      if (shiftLeftCount != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (shiftLeftCount & 0xff)) >> (0x14 - shiftLeftCount & 0xff);\n  }\n  else {\n    if (0x1e < shiftLeftCount) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)shiftLeftCount < 0x34) {\n      shiftRightTemp = 0x80000000 >> (shiftRightCount - 0x413 & 0xff);\n      if (CARRY4(shiftRightTemp,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftRightCount - 0x413 & 0xff);\n      if (shiftLeftCount != 0x14) {\n        result = result | shiftRightTemp + input1 >> (0x34 - shiftLeftCount & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftRightCount - 0x413 & 0xff) | input1 << (shiftRightCount - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftRightTemp",
                "uVar2": "shiftRightCount",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "shiftLeftCount"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_floating_point_08009654",
            "code": "\nlonglong convertFloatingPoint_08009654(uint integerPart,uint fractionalPart)\n\n{\n  uint exponentDiff;\n  uint shiftAmount;\n  longlong convertedValue;\n  \n  convertedValue = CONCAT44(fractionalPart,integerPart);\n  shiftAmount = (fractionalPart << 1) >> 0x15;\n  exponentDiff = shiftAmount - 0x3ff;\n  if ((int)exponentDiff < 0x14) {\n    if ((int)exponentDiff < 0) {\n      fractionalPart = fractionalPart & 0x80000000;\n      if (exponentDiff == 0xffffffff) {\n        fractionalPart = fractionalPart | 0x3ff00000;\n      }\n      convertedValue = (ulonglong)fractionalPart << 0x20;\n    }\n    else {\n      shiftAmount = 0xfffff >> (exponentDiff & 0xff);\n      convertedValue = CONCAT44(fractionalPart,integerPart);\n      if ((fractionalPart & shiftAmount | integerPart) != 0) {\n        convertedValue = (ulonglong)(fractionalPart + (0x80000 >> (exponentDiff & 0xff)) & ~shiftAmount) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponentDiff < 0x34) {\n    shiftAmount = 0xffffffff >> (shiftAmount - 0x413 & 0xff);\n    if ((integerPart & shiftAmount) != 0) {\n      exponentDiff = 1 << (0x33 - exponentDiff & 0xff);\n      if (CARRY4(integerPart,exponentDiff) != false) {\n        fractionalPart = fractionalPart + 1;\n      }\n      convertedValue = CONCAT44(fractionalPart,integerPart + exponentDiff & ~shiftAmount);\n    }\n  }\n  else {\n    convertedValue = CONCAT44(fractionalPart,integerPart);\n    if (exponentDiff == 0x400) {\n      convertedValue = FUN_080082d4();\n    }\n  }\n  return convertedValue;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_floating_point_08009654",
                "param_1": "integerPart",
                "param_2": "fractionalPart",
                "uVar1": "exponentDiff",
                "uVar2": "shiftAmount",
                "lVar3": "convertedValue"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "execute_operation_080096e8",
            "code": "\nundefined4 executeOperation_080096e8(undefined4 input1,uint input2)\n\n{\n  undefined4 result;\n  uint operationType;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  if (0x3fe921fb < (input2 & 0x7fffffff)) {\n    if ((input2 & 0x7fffffff) < 0x7ff00000) {\n      operationType = FUN_08009d78(input1,input2,&tempVar1);\n      operationType = operationType & 3;\n      if (operationType == 1) {\n        result = FUN_0800a348(tempVar1,tempVar2,tempVar3,tempVar4);\n      }\n      else if (operationType == 2) {\n        result = FUN_0800adf0(tempVar1,tempVar2,tempVar3,tempVar4,1);\n      }\n      else if (operationType == 0) {\n        result = FUN_0800adf0(tempVar1,tempVar2,tempVar3,tempVar4,1);\n      }\n      else {\n        result = FUN_0800a348(tempVar1,tempVar2,tempVar3,tempVar4);\n      }\n    }\n    else {\n      result = FUN_080082d0(input1,input2,input1,input2);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(input1,input2,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "execute_operation_080096e8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "operationType",
                "local_28": "tempVar1",
                "uStack_24": "tempVar2",
                "local_20": "tempVar3",
                "uStack_1c": "tempVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "calculate_shifted_value_08009798",
            "code": "\nlonglong calculate_shifted_value_08009798(uint input_value_1,uint input_value_2,undefined4 param_3,undefined4 param_4)\n\n{\n  uint shift_amount;\n  uint shifted_value;\n  longlong result;\n  \n  shifted_value = (input_value_2 << 1) >> 0x15;\n  shift_amount = shifted_value - 0x3ff;\n  if ((int)shift_amount < 0x14) {\n    if ((int)shift_amount < 0) {\n      return ((ulonglong)input_value_2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input_value_2 & ~(0xfffff >> (shift_amount & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shift_amount < 0x34) {\n      return CONCAT44(input_value_2,input_value_1 & ~(0xffffffffU >> (shifted_value - 0x413 & 0xff)));\n    }\n    if (shift_amount != 0x400) {\n      return CONCAT44(input_value_2,input_value_1);\n    }\n    result = FUN_080082d4(input_value_1,input_value_2,input_value_1,input_value_2,param_4);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "calculate_shifted_value_08009798",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "uVar1": "shift_amount",
                "uVar2": "shifted_value",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp7;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp4 = input4 & 0x7fffffff;\n  if (((temp4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (temp5 = input2 & 0x7fffffff, (temp5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUN_0800af78();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      if (temp3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (temp3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == 0x7ff00000) {\n          temp3 = temp3 - 1;\n          if (temp5 == 0x7ff00000) {\n            if (temp3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != 0x7ff00000) {\n          temp7 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp7 + 0x3c < 0 != SCARRY4(temp7,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              temp6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp6 = 0x3ff921fb54442d18;\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n            temp4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n          temp4 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x54442d18,0x400921fb);\n          return temp4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "iVar1": "temp7"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculate_hypotenuse_0800981c(undefined4 side1,undefined4 side2,undefined4 side3,undefined4 side4)\n\n{\n  int result;\n  undefined4 *pointer;\n  int *integerPointer;\n  undefined8 returnValue;\n  undefined4 hypotType;\n  char *hypotName;\n  undefined4 side1Copy;\n  undefined4 side2Copy;\n  undefined4 side3Copy;\n  undefined4 side4Copy;\n  undefined4 fixedPoint1;\n  undefined4 fixedPoint2;\n  int errorCode;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_0800b2d4();\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side1,side2);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side3,side4);\n  if (result == 0) {\n    return returnValue;\n  }\n  hypotType = 3;\n  hypotName = \"hypot\";\n  side1Copy = side1;\n  side2Copy = side2;\n  side3Copy = side3;\n  side4Copy = side4;\n  if (DAT_20000014 == '\\0') {\n    fixedPoint1 = 0xe0000000;\n    fixedPoint2 = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&hypotType);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    fixedPoint1 = 0;\n    fixedPoint2 = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  pointer = (undefined4 *)FUN_0800b3dc();\n  *pointer = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(fixedPoint2,fixedPoint1);\n  if (errorCode != 0) {\n    integerPointer = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(fixedPoint2,fixedPoint1);\n    *integerPointer = errorCode;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side1",
                "param_2": "side2",
                "param_3": "side3",
                "param_4": "side4",
                "iVar1": "result",
                "puVar2": "pointer",
                "piVar3": "integerPointer",
                "uVar4": "returnValue",
                "local_50": "hypotType",
                "pcStack_4c": "hypotName",
                "local_48": "side1Copy",
                "uStack_44": "side2Copy",
                "local_40": "side3Copy",
                "uStack_3c": "side4Copy",
                "local_38": "fixedPoint1",
                "uStack_34": "fixedPoint2",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "parse_and_process_data_080098d0",
            "code": "\nundefined4 parse_and_process_data_080098d0(undefined4 input_1,undefined4 input_2)\n\n{\n  char flag_2;\n  undefined4 result;\n  int status;\n  undefined4 *data_ptr;\n  int *status_ptr;\n  undefined4 flag_1;\n  undefined *message;\n  undefined4 input_1_copy;\n  undefined4 input_2_copy;\n  undefined4 input_1_copy_2;\n  undefined4 input_2_copy_2;\n  undefined8 temp;\n  int temp_status;\n  \n  result = FUN_0800a1bc();\n  flag_2 = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (temp_status = FUN_08008b74(input_1,input_2,input_1,input_2), temp_status != 0)) ||\n     (status = FUN_08008b24(input_1,input_2,0,0), status == 0)) {\n    return result;\n  }\n  flag_1 = 1;\n  message = &DAT_0800be5c;\n  input_1_copy = input_1;\n  input_2_copy = input_2;\n  input_1_copy_2 = input_1;\n  input_2_copy_2 = input_2;\n  if (flag_2 == '\\0') {\n    temp = 0;\nLAB_0800996c:\n    status = FUN_0800b2e0(&flag_1);\n    if (status != 0) goto joined_r0x0800997a;\n  }\n  else {\n    temp = FUN_08008894(0,0,0,0);\n    if (flag_2 != '\\x02') goto LAB_0800996c;\n  }\n  data_ptr = (undefined4 *)FUN_0800b3dc();\n  *data_ptr = 0x21;\njoined_r0x0800997a:\n  if (temp_status != 0) {\n    status_ptr = (int *)FUN_0800b3dc();\n    *status_ptr = temp_status;\n  }\n  return (undefined4)temp;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "parse_and_process_data_080098d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "result",
                "iVar3": "status",
                "puVar4": "data_ptr",
                "piVar5": "status_ptr",
                "local_50": "flag_1",
                "local_4c": "message",
                "local_48": "input_1_copy",
                "uStack_44": "input_2_copy",
                "local_40": "input_1_copy_2",
                "uStack_3c": "input_2_copy_2",
                "local_38": "temp",
                "local_30": "temp_status",
                "cVar1": "flag_2"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculateResult_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int tempVar1;\n  undefined4 tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  uint tempVar5;\n  undefined8 tempVar6;\n  \n  tempVar4 = input4 & 0x7fffffff;\n  if (((tempVar4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (tempVar5 = input2 & 0x7fffffff, (tempVar5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      tempVar4 = FUN_0800af78();\n      return tempVar4;\n    }\n    tempVar3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((tempVar5 | input1) == 0) {\n      if (tempVar3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (tempVar3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((tempVar4 | input3) != 0) {\n        if (tempVar4 == 0x7ff00000) {\n          tempVar3 = tempVar3 - 1;\n          if (tempVar5 == 0x7ff00000) {\n            if (tempVar3 < 3) {\n              return *(uint *)(&DAT_0800be68 + tempVar3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (tempVar3 < 3) {\n            return *(uint *)(&DAT_0800be80 + tempVar3 * 8);\n          }\n          return 0;\n        }\n        if (tempVar5 != 0x7ff00000) {\n          tempVar1 = (int)(tempVar5 - tempVar4) >> 0x14;\n          if ((int)(tempVar5 - tempVar4) < 0x3d00000) {\n            if (((int)input4 < 0) && (tempVar1 + 0x3c < 0 != SCARRY4(tempVar1,0x3c))) {\n              tempVar6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              tempVar6 = FUN_0800af78();\n            }\n          }\n          else {\n            tempVar6 = 0x3ff921fb54442d18;\n          }\n          tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n          tempVar4 = (uint)tempVar6;\n          if (tempVar3 == 1) {\n            return tempVar4;\n          }\n          if (tempVar3 == 2) {\n            tempVar6 = FUN_080082d0(tempVar4,tempVar2,0x33145c07,0x3ca1a626);\n            tempVar4 = FUN_080082d0(0x54442d18,0x400921fb,(int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20));\n            return tempVar4;\n          }\n          if (tempVar3 == 0) {\n            return tempVar4;\n          }\n          tempVar6 = FUN_080082d0(tempVar4,tempVar2,0x33145c07,0x3ca1a626);\n          tempVar4 = FUN_080082d0((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),0x54442d18,0x400921fb);\n          return tempVar4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_result_08009b24",
            "code": "\nuint calculate_result_08009b24(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  undefined4 result_1;\n  int result_2;\n  uint temp1;\n  int temp2;\n  undefined4 temp3;\n  int temp4;\n  uint temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int local_var;\n  \n  input_2 = input_2 & 0x7fffffff;\n  input_4 = input_4 & 0x7fffffff;\n  temp1 = input_1;\n  temp5 = input_2;\n  if (input_2 < input_4) {\n    temp1 = input_3;\n    input_3 = input_1;\n    temp5 = input_4;\n    input_4 = input_2;\n  }\n  if (0x3c00000 < (int)(temp5 - input_4)) {\n    temp1 = FUN_080082d4(temp1,temp5,input_3,input_4);\n    return temp1;\n  }\n  if (temp5 < 0x5f300001) {\n    local_var = 0;\n  }\n  else {\n    if (0x7fefffff < temp5) {\n      if ((temp5 & 0xfffff | temp1) != 0) {\n        temp1 = FUN_080082d4(temp1,temp5,input_3,input_4);\n      }\n      if ((input_4 ^ 0x7ff00000 | input_3) != 0) {\n        return temp1;\n      }\n      return input_3;\n    }\n    temp5 = temp5 + 0xda800000;\n    input_4 = input_4 + 0xda800000;\n    local_var = 600;\n  }\n  temp9 = CONCAT44(temp5,temp1);\n  temp8 = CONCAT44(input_4,input_3);\n  if ((int)input_4 < 0x20b00000) {\n    if ((int)input_4 < 0x100000) {\n      if ((input_4 | input_3) == 0) {\n        return temp1;\n      }\n      temp8 = FUN_08008640(input_3,input_4,0,0x7fd00000);\n      temp9 = FUN_08008640(temp1,temp5,0,0x7fd00000);\n      local_var = local_var + -0x3fe;\n    }\n    else {\n      temp5 = temp5 + 0x25800000;\n      temp9 = CONCAT44(temp5,temp1);\n      input_4 = input_4 + 0x25800000;\n      temp8 = CONCAT44(input_4,input_3);\n      local_var = local_var + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp4 = (int)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp8 = FUN_080082d0(temp6,temp7,temp3,temp4);\n  temp2 = (int)((ulonglong)temp8 >> 0x20);\n  result_1 = (undefined4)temp8;\n  result_2 = FUN_08008b24(temp3,temp4,result_1,temp2);\n  if (result_2 == 0) {\n    temp8 = FUN_08008640(0,input_4,0);\n    temp9 = FUN_08008640(result_1,temp2 + -0x80000000,result_1,temp2);\n    temp10 = FUN_080082d4(temp6,temp7,temp6,temp7);\n    temp10 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp3,temp4);\n    temp11 = FUN_080082d0(temp3,temp4,0,input_4);\n    temp11 = FUN_08008640((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_080082d4((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  else {\n    temp8 = FUN_08008640(0,temp5,0,temp5);\n    temp9 = FUN_08008640(temp3,temp4 + -0x80000000,temp3,temp4);\n    temp10 = FUN_080082d4(temp6,temp7,0,temp5);\n    temp11 = FUN_080082d0(temp6,temp7,0,temp5);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  temp1 = (uint)temp8;\n  if (local_var != 0) {\n    temp1 = FUN_08008640(temp1,(int)((ulonglong)temp8 >> 0x20),0,local_var * 0x100000 + 0x3ff00000);\n  }\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_1",
                "iVar2": "result_2",
                "uVar3": "temp1",
                "iVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "local_3c": "local_var"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_result_08009d78",
            "code": "\nint calculateResult_08009d78(undefined4 inputValue,uint flags,undefined8 *outputArray)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  uint mask;\n  int errorCode;\n  undefined8 temp6;\n  undefined8 temp7;\n  undefined8 temp8;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  undefined8 localVar5;\n  \n  mask = flags & 0x7fffffff;\n  if (mask < 0x3fe921fc) {\n    *(undefined4 *)outputArray = inputValue;\n    *(uint *)((int)outputArray + 4) = flags;\n    *(undefined4 *)(outputArray + 1) = 0;\n    *(undefined4 *)((int)outputArray + 0xc) = 0;\n    return 0;\n  }\n  if (mask < 0x4002d97c) {\n    if ((int)flags < 1) {\n      temp6 = FUN_080082d4(inputValue,flags,0x54400000,0x3ff921fb);\n      temp1 = (undefined4)((ulonglong)temp6 >> 0x20);\n      result1 = (undefined4)temp6;\n      if (mask != 0x3ff921fb) {\n        temp6 = FUN_080082d4(result1,temp1,0x1a626331,0x3dd0b461);\n        *outputArray = temp6;\n        temp6 = FUN_080082d0(result1,temp1);\n        temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x1a626331,0x3dd0b461);\n        outputArray[1] = temp6;\n        return -1;\n      }\n      temp6 = FUN_080082d4(result1,temp1,0x1a600000,0x3dd0b461);\n      result1 = (undefined4)((ulonglong)temp6 >> 0x20);\n      temp7 = FUN_080082d4((int)temp6,result1,0x2e037073,0x3ba3198a);\n      *outputArray = temp7;\n      temp6 = FUN_080082d0((int)temp6,result1);\n      temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x2e037073,0x3ba3198a);\n      outputArray[1] = temp6;\n      return -1;\n    }\n    temp6 = FUN_080082d0();\n    temp1 = (undefined4)((ulonglong)temp6 >> 0x20);\n    result1 = (undefined4)temp6;\n    if (mask != 0x3ff921fb) {\n      temp6 = FUN_080082d0(result1,temp1,0x1a626331,0x3dd0b461);\n      *outputArray = temp6;\n      temp6 = FUN_080082d0(result1,temp1);\n      temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x1a626331,0x3dd0b461);\n      outputArray[1] = temp6;\n      return 1;\n    }\n    temp6 = FUN_080082d0(result1,temp1,0x1a600000,0x3dd0b461);\n    result1 = (undefined4)((ulonglong)temp6 >> 0x20);\n    temp7 = FUN_080082d0((int)temp6,result1,0x2e037073,0x3ba3198a);\n    *outputArray = temp7;\n    temp6 = FUN_080082d0((int)temp6,result1);\n    temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x2e037073,0x3ba3198a);\n    outputArray[1] = temp6;\n    return 1;\n  }\n  if (0x413921fb < mask) {\n    if (0x7fefffff < mask) {\n      temp6 = FUN_080082d0(inputValue,flags,inputValue,flags);\n      outputArray[1] = temp6;\n      *outputArray = temp6;\n      return 0;\n    }\n    errorCode = ((int)mask >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    temp6 = FUN_080082d0(inputValue,mask + errorCode * -0x100000,(int)localVar3,\n                          (int)((ulonglong)localVar3 >> 0x20));\n    temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar4 = FUN_0800856c();\n    temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    localVar5 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar5,(int)((ulonglong)localVar5 >> 0x20),0,0);\n    errorCode = FUN_0800a5a0(&localVar3,outputArray,errorCode);\n    if (-1 < (int)flags) {\n      return errorCode;\n    }\n    *(int *)((int)outputArray + 4) = *(int *)((int)outputArray + 4) + -0x80000000;\n    *(int *)((int)outputArray + 0xc) = *(int *)((int)outputArray + 0xc) + -0x80000000;\n    return -errorCode;\n  }\n  temp6 = FUNC_0800b2cc();\n  temp1 = (undefined4)((ulonglong)temp6 >> 0x20);\n  temp7 = FUN_08008640((int)temp6,temp1,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0,0x3fe00000);\n  errorCode = FUN_08008ba0();\n  temp7 = FUN_0800856c();\n  temp2 = (undefined4)((ulonglong)temp7 >> 0x20);\n  result1 = (undefined4)temp7;\n  temp7 = FUN_08008640(result1,temp2,0x54400000,0x3ff921fb);\n  temp6 = FUN_080082d0((int)temp6,temp1,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n  temp3 = (undefined4)((ulonglong)temp6 >> 0x20);\n  temp1 = (undefined4)temp6;\n  temp7 = FUN_08008640(result1,temp2,0x1a626331,0x3dd0b461);\n  if ((0x1f < errorCode) || (*(uint *)(&DAT_0800be98 + (errorCode + -1) * 4) == mask)) {\n    temp8 = FUN_080082d0(temp1,temp3,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n    if ((int)((mask >> 0x14) - ((uint)((int)((ulonglong)temp8 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp7 = FUN_08008640(result1,temp2,0x1a600000,0x3dd0b461);\n    temp4 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp6 = FUN_080082d0(temp1,temp3,(int)temp7,temp4);\n    temp5 = (undefined4)((ulonglong)temp6 >> 0x20);\n    result2 = (undefined4)temp6;\n    temp8 = FUN_080082d0(temp1,temp3,result2,temp5);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,temp4);\n    temp8 = FUN_08008640(result1,temp2,0x2e037073,0x3ba3198a);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                          (int)((ulonglong)temp7 >> 0x20));\n    temp8 = FUN_080082d0(result2,temp5,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n    if ((int)(((int)mask >> 0x14) - ((uint)((int)((ulonglong)temp8 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp7 = FUN_08008640(result1,temp2,0x2e000000,0x3ba3198a);\n    temp1 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp6 = FUN_080082d0(result2,temp5,(int)temp7,temp1);\n    temp8 = FUN_080082d0(result2,temp5);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,temp1);\n    temp8 = FUN_08008640(result1,temp2,0x252049c1,0x397b839a);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                          (int)((ulonglong)temp7 >> 0x20));\n  }\n  temp8 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n                        (int)((ulonglong)temp7 >> 0x20));\nLAB_0800a0ce:\n  localVar2 = (undefined4)((ulonglong)temp6 >> 0x20);\n  localVar1 = (undefined4)temp6;\n  *outputArray = temp8;\n  temp6 = FUN_080082d0(localVar1,localVar2);\n  temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n                        (int)((ulonglong)temp7 >> 0x20));\n  outputArray[1] = temp6;\n  if ((int)flags < 0) {\n    *(int *)outputArray = (int)temp8;\n    *(int *)((int)outputArray + 4) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n    *(int *)(outputArray + 1) = (int)temp6;\n    *(int *)((int)outputArray + 0xc) = (int)((ulonglong)temp6 >> 0x20) + -0x80000000;\n    errorCode = -errorCode;\n  }\n  return errorCode;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_result_08009d78",
                "param_1": "inputValue",
                "param_2": "flags",
                "param_3": "outputArray",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "mask",
                "iVar9": "errorCode",
                "uVar10": "temp6",
                "uVar11": "temp7",
                "uVar12": "temp8",
                "local_50": "localVar1",
                "uStack_4c": "localVar2",
                "local_40": "localVar3",
                "local_38": "localVar4",
                "local_30": "localVar5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_value_0800a1bc",
            "code": "\nuint calculateValue_0800a1bc(uint input1,uint input2)\n\n{\n  uint shiftAmount;\n  int temp1;\n  uint temp2;\n  undefined4 temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  int temp9;\n  uint temp10;\n  uint temp11;\n  undefined8 functionResult;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    functionResult = FUN_08008640(input1,input2,input1,input2);\n    temp6 = FUN_080082d4((int)functionResult,(int)((ulonglong)functionResult >> 0x20),input1,input2);\n    return temp6;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      functionResult = FUN_080082d0(input1,input2,input1);\n      temp3 = (undefined4)((ulonglong)functionResult >> 0x20);\n      temp6 = FUN_08008894((int)functionResult,temp3,(int)functionResult,temp3);\n      return temp6;\n    }\n    do {\n      temp8 = input1;\n      temp6 = temp8 >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = temp8 << 0x15;\n    } while (temp6 == 0);\n    shiftAmount = input2;\n    if (-1 < (int)temp8) goto LAB_0800a290;\n    temp11 = 0x20;\n    temp4 = 0xffffffff;\n    temp8 = input1;\n  }\n  else {\n    shiftAmount = (int)input2 >> 0x14;\n    temp6 = input2;\n    temp8 = input1;\n    if (shiftAmount != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    temp8 = 0;\n    temp11 = temp6;\n    do {\n      temp4 = temp8;\n      temp6 = temp11 << 1;\n      temp9 = temp11 << 0xc;\n      temp8 = temp4 + 1;\n      temp11 = temp6;\n    } while (-1 < temp9);\n    temp11 = 0x20 - temp8;\n    input2 = shiftAmount;\n    temp8 = input1 << (temp8 & 0xff);\n  }\n  temp6 = input1 >> (temp11 & 0xff) | temp6;\n  shiftAmount = input2 - temp4;\nLAB_0800a1da:\n  temp6 = temp6 & 0xfffff | 0x100000;\n  if (-1 < (int)(shiftAmount << 0x1f)) {\n    temp6 = temp6 * 2 - ((int)temp8 >> 0x1f);\n    temp8 = temp8 << 1;\n  }\n  temp11 = 0;\n  temp6 = temp6 * 2 - ((int)temp8 >> 0x1f);\n  temp8 = temp8 << 1;\n  shiftAmount = 0;\n  temp9 = 0x16;\n  temp4 = 0x200000;\n  do {\n    temp1 = shiftAmount + temp4;\n    if (temp1 <= (int)temp6) {\n      temp6 = temp6 - temp1;\n      shiftAmount = temp1 + temp4;\n      temp11 = temp11 + temp4;\n    }\n    temp9 = temp9 + -1;\n    temp6 = temp6 * 2 - ((int)temp8 >> 0x1f);\n    temp4 = temp4 >> 1;\n    temp8 = temp8 << 1;\n  } while (temp9 != 0);\n  temp1 = 0x20;\n  temp5 = 0x80000000;\n  temp9 = 0;\n  temp4 = 0;\n  do {\n    temp2 = temp5 + temp9;\n    temp10 = shiftAmount;\n    if ((int)shiftAmount < (int)temp6) {\n      if ((int)temp2 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(temp2 + temp5)) {\n          temp10 = shiftAmount + 1;\n        }\n      }\n      temp7 = temp6 - shiftAmount;\n      shiftAmount = temp10;\n      if (temp8 < temp2) {\n        temp7 = temp7 - 1;\n      }\nLAB_0800a262:\n      temp9 = temp2 + temp5;\n      temp8 = temp8 - temp2;\n      temp4 = temp4 + temp5;\n      temp6 = temp7;\n    }\n    else if ((temp6 == shiftAmount) && (temp2 <= temp8)) {\n      if ((int)temp2 < 0) goto LAB_0800a26a;\n      temp7 = 0;\n      shiftAmount = temp6;\n      goto LAB_0800a262;\n    }\n    temp1 = temp1 + -1;\n    temp5 = temp5 >> 1;\n    temp6 = temp6 * 2 - ((int)temp8 >> 0x1f);\n    temp8 = temp8 << 1;\n    if (temp1 == 0) {\n      if ((temp6 | temp8) == 0) {\n        temp4 = temp4 >> 1;\n      }\n      else if (temp4 == 0xffffffff) {\n        temp11 = temp11 + 1;\n        temp4 = 0;\n      }\n      else {\n        temp4 = temp4 + 1 >> 1;\n      }\n      if ((temp11 & 1) != 0) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return temp4;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_value_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftAmount",
                "iVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "uVar9": "temp8",
                "iVar10": "temp9",
                "uVar11": "temp10",
                "uVar12": "temp11",
                "uVar13": "functionResult"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_value_0800a348",
            "code": "\nundefined4 calculate_value_0800a348(undefined4 input_param_1,uint input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  int result;\n  undefined4 temp_value_1;\n  undefined4 temp_value_2;\n  uint cleaned_param_2;\n  undefined8 temp_value_3;\n  undefined8 temp_value_4;\n  undefined8 temp_value_5;\n  undefined4 local_var_1;\n  undefined4 local_var_2;\n  undefined4 local_var_3;\n  undefined4 local_var_4;\n  \n  cleaned_param_2 = input_param_2 & 0x7fffffff;\n  if (cleaned_param_2 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    temp_value_3 = FUN_08008640(input_param_1,input_param_2,input_param_1,input_param_2);\n    temp_value_2 = (undefined4)((ulonglong)temp_value_3 >> 0x20);\n    temp_value_1 = (undefined4)temp_value_3;\n    temp_value_4 = FUN_08008640(temp_value_1,temp_value_2,0xbe8838d4,0xbda8fae9);\n    temp_value_4 = FUN_080082d4((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d0((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d4((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d0((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x16c15177,0x3f56c16c);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d4((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x5555554c,0x3fa55555);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n  }\n  else {\n    temp_value_3 = FUN_08008640(input_param_1,input_param_2,input_param_1,input_param_2);\n    temp_value_2 = (undefined4)((ulonglong)temp_value_3 >> 0x20);\n    temp_value_1 = (undefined4)temp_value_3;\n    temp_value_4 = FUN_08008640(temp_value_1,temp_value_2,0xbe8838d4,0xbda8fae9);\n    temp_value_4 = FUN_080082d4((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d0((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d4((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d0((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x16c15177,0x3f56c16c);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    temp_value_4 = FUN_080082d4((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),0x5555554c,0x3fa55555);\n    temp_value_4 = FUN_08008640((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),temp_value_1,temp_value_2);\n    if (0x3fd33332 < cleaned_param_2) {\n      if (cleaned_param_2 < 0x3fe90001) {\n        result = cleaned_param_2 - 0x200000;\n        temp_value_3 = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        temp_value_3 = 0x3fe7000000000000;\n      }\n      local_var_4 = (undefined4)((ulonglong)temp_value_3 >> 0x20);\n      local_var_3 = (undefined4)temp_value_3;\n      temp_value_3 = FUN_08008640(temp_value_1,temp_value_2,0,0x3fe00000);\n      temp_value_3 = FUN_080082d0((int)temp_value_3,(int)((ulonglong)temp_value_3 >> 0x20),0,result);\n      temp_value_4 = FUN_08008640(temp_value_1,temp_value_2,(int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20));\n      temp_value_5 = FUN_08008640(input_param_1,input_param_2,input_param_3,input_param_4);\n      temp_value_4 = FUN_080082d0((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),(int)temp_value_5,\n                           (int)((ulonglong)temp_value_5 >> 0x20));\n      temp_value_3 = FUN_080082d0((int)temp_value_3,(int)((ulonglong)temp_value_3 >> 0x20),(int)temp_value_4,\n                           (int)((ulonglong)temp_value_4 >> 0x20));\n      temp_value_1 = FUN_080082d0(local_var_3,local_var_4,(int)temp_value_3,(int)((ulonglong)temp_value_3 >> 0x20));\n      return temp_value_1;\n    }\n  }\n  local_var_2 = (undefined4)((ulonglong)temp_value_4 >> 0x20);\n  local_var_1 = (undefined4)temp_value_4;\n  temp_value_1 = (undefined4)((ulonglong)temp_value_3 >> 0x20);\n  temp_value_4 = FUN_08008640((int)temp_value_3,temp_value_1,0,0x3fe00000);\n  temp_value_3 = FUN_08008640((int)temp_value_3,temp_value_1,local_var_1,local_var_2);\n  temp_value_5 = FUN_08008640(input_param_1,input_param_2,input_param_3,input_param_4);\n  temp_value_3 = FUN_080082d0((int)temp_value_3,(int)((ulonglong)temp_value_3 >> 0x20),(int)temp_value_5,\n                       (int)((ulonglong)temp_value_5 >> 0x20));\n  temp_value_3 = FUN_080082d0((int)temp_value_4,(int)((ulonglong)temp_value_4 >> 0x20),(int)temp_value_3,\n                       (int)((ulonglong)temp_value_3 >> 0x20));\n  temp_value_1 = FUN_080082d0(0,0x3ff00000,(int)temp_value_3,(int)((ulonglong)temp_value_3 >> 0x20));\n  return temp_value_1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_value_0800a348",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "result",
                "uVar2": "temp_value_1",
                "uVar3": "temp_value_2",
                "uVar4": "cleaned_param_2",
                "uVar5": "temp_value_3",
                "uVar6": "temp_value_4",
                "uVar7": "temp_value_5",
                "local_30": "local_var_1",
                "uStack_2c": "local_var_2",
                "local_28": "local_var_3",
                "uStack_24": "local_var_4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int input,undefined8 *output,int length,int offset,int param5,int param6)\n\n{\n  undefined4 *pointer1;\n  uint result;\n  uint temp;\n  int count;\n  uint *pointer2;\n  undefined4 temp1;\n  uint **pointer3;\n  undefined4 temp2;\n  int offsetCount;\n  undefined4 *pointer4;\n  undefined4 temp3;\n  uint value1;\n  uint *pointer5;\n  int value2;\n  int index;\n  undefined8 *pointer6;\n  int offsetIndex;\n  undefined4 *pointer18;\n  undefined8 *pointer19;\n  undefined4 result0;\n  int tempIndex;\n  undefined8 *presult2;\n  undefined4 *presult3;\n  bool bVar24;\n  undefined8 tempResult;\n  undefined8 calcResult;\n  undefined8 tempResult2;\n  undefined8 *tempValues;\n  int tempCount;\n  int tempOffset;\n  int tempLength;\n  uint *resultArray [2];\n  uint valueArray [20];\n  undefined8 tempStack1;\n  undefined8 tempValue1;\n  int tempArray1 [38];\n  undefined8 tempStack2;\n  \n  index = *(int *)(&DAT_0800c060 + param5 * 4);\n  offsetCount = offset + -1;\n  resultArray[1] = (uint *)output;\n  if (length + 0x14 < 0 == SCARRY4(length,0x14)) {\n    tempLength = (length + -3) / 0x18;\n    tempOffset = (tempLength + 1) * -0x18;\n  }\n  else {\n    tempOffset = -0x18;\n    tempLength = 0;\n  }\n  tempOffset = length + tempOffset;\n  offsetIndex = tempLength - offsetCount;\n  if (-1 < index + offsetCount) {\n    tempIndex = index + offsetCount + 1 + offsetIndex;\n    pointer6 = &tempStack1;\n    do {\n      while (offsetIndex < 0) {\n        offsetIndex = offsetIndex + 1;\n        *(undefined4 *)pointer6 = 0;\n        *(undefined4 *)((int)pointer6 + 4) = 0;\n        pointer6 = pointer6 + 1;\n        if (offsetIndex == tempIndex) goto LAB_0800a626;\n      }\n      calcResult = FUN_0800856c(*(undefined4 *)(param6 + offsetIndex * 4));\n      offsetIndex = offsetIndex + 1;\n      *pointer6 = calcResult;\n      pointer6 = pointer6 + 1;\n    } while (offsetIndex != tempIndex);\n  }\nLAB_0800a626:\n  pointer4 = (undefined4 *)(input + -8);\n  if (-1 < index) {\n    presult2 = &tempStack1 + offset;\n    offsetIndex = offsetCount;\n    pointer6 = &tempStack2;\n    do {\n      if (offsetCount < 0) {\n        calcResult = 0;\n      }\n      else {\n        calcResult = 0;\n        presult3 = pointer4;\n        pointer19 = presult2;\n        do {\n          pointer18 = presult3 + 2;\n          tempResult = FUN_08008640(*pointer18,presult3[3],*(undefined4 *)(pointer19 + -1),\n                                *(undefined4 *)((int)pointer19 + -4));\n          calcResult = FUN_080082d4((int)calcResult,(int)((ulonglong)calcResult >> 0x20),(int)tempResult,\n                                (int)((ulonglong)tempResult >> 0x20));\n          presult3 = pointer18;\n          pointer19 = pointer19 + -1;\n        } while (pointer18 != pointer4 + offset * 2);\n      }\n      offsetIndex = offsetIndex + 1;\n      *pointer6 = calcResult;\n      presult2 = presult2 + 1;\n      pointer6 = pointer6 + 1;\n    } while (offsetIndex != index + offset);\n  }\n  resultArray[0] = valueArray + index + -1;\n  offsetIndex = index;\n  do {\n    calcResult = CONCAT44(*(undefined4 *)((int)&tempStack2 + offsetIndex * 8 + 4),\n                      *(undefined4 *)(&tempStack2 + offsetIndex));\n    if (0 < offsetIndex) {\n      pointer6 = &tempStack2 + offsetIndex;\n      pointer2 = valueArray;\n      do {\n        temp1 = (undefined4)((ulonglong)calcResult >> 0x20);\n        FUN_08008640((int)calcResult,temp1,0,0x3e700000);\n        FUN_08008ba0();\n        tempResult = FUN_0800856c();\n        temp2 = (undefined4)((ulonglong)tempResult >> 0x20);\n        tempResult2 = FUN_08008640((int)tempResult,temp2,0,0x41700000);\n        FUN_080082d0((int)calcResult,temp1,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n        result = FUN_08008ba0();\n        presult2 = pointer6 + -1;\n        temp1 = *(undefined4 *)presult2;\n        temp3 = *(undefined4 *)((int)pointer6 + -4);\n        *pointer2 = result;\n        calcResult = FUN_080082d4((int)tempResult,temp2,temp1,temp3);\n        pointer6 = presult2;\n        pointer2 = pointer2 + 1;\n      } while (presult2 != &tempStack2);\n    }\n    calcResult = FUN_0800b2e8((int)calcResult,(int)((ulonglong)calcResult >> 0x20),tempOffset);\n    temp2 = (undefined4)((ulonglong)calcResult >> 0x20);\n    FUN_08008640((int)calcResult,temp2,0,0x3fc00000);\n    tempResult = FUN_080094c0();\n    tempResult = FUN_08008640((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0x40200000);\n    calcResult = FUN_080082d0((int)calcResult,temp2,(int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n    result = FUN_08008ba0();\n    tempResult = FUN_0800856c();\n    calcResult = FUN_080082d0((int)calcResult,(int)((ulonglong)calcResult >> 0x20),(int)tempResult,\n                          (int)((ulonglong)tempResult >> 0x20));\n    temp1 = (undefined4)((ulonglong)calcResult >> 0x20);\n    temp2 = (undefined4)calcResult;\n    if (tempOffset < 1) {\n      if (tempOffset == 0) {\n        tempIndex = (int)valueArray[offsetIndex + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      tempIndex = FUN_08008b4c(temp2,temp1,0,0x3fe00000);\n      if (tempIndex != 0) {\n        result = result + 1;\n        if (offsetIndex < 1) {\n          calcResult = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          tempIndex = 2;\n          goto LAB_0800a7a4;\n        }\n        tempIndex = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      count = (int)valueArray[offsetIndex + -1] >> (0x18U - tempOffset & 0xff);\n      value1 = valueArray[offsetIndex + -1] - (count << (0x18U - tempOffset & 0xff));\n      tempIndex = (int)value1 >> (0x17U - tempOffset & 0xff);\n      valueArray[offsetIndex + -1] = value1;\n      result = result + count;\njoined_r0x0800a8b8:\n      if (0 < tempIndex) {\n        result = result + 1;\n        if (offsetIndex < 1) {\n          bVar24 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (valueArray[0] == 0) {\n            bVar24 = false;\n            if (offsetIndex != 1) {\n              pointer2 = valueArray;\n              count = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  value2 = count + 1;\n                  value1 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                count = count + 1;\n              } while (count != offsetIndex);\n              bVar24 = false;\n            }\n          }\n          else {\n            value2 = 1;\n            count = 0;\n            value1 = valueArray[0];\nLAB_0800a8e2:\n            valueArray[count] = 0x1000000 - value1;\n            if (value2 < offsetIndex) {\n              value1 = valueArray[value2];\n              pointer2 = valueArray + value2;\n              while( true ) {\n                pointer5 = pointer2 + 1;\n                *pointer2 = 0xffffff - value1;\n                if (pointer5 == valueArray + offsetIndex) break;\n                value1 = *pointer5;\n                pointer2 = pointer5;\n              }\n            }\n            bVar24 = true;\n          }\n        }\n        if (0 < tempOffset) {\n          if (tempOffset == 1) {\n            valueArray[offsetIndex + -1] = valueArray[offsetIndex + -1] & 0x7fffff;\n          }\n          else if (tempOffset == 2) {\n            valueArray[offsetIndex + -1] = valueArray[offsetIndex + -1] & 0x3fffff;\n          }\n        }\n        if (tempIndex == 2) {\n          calcResult = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          if (bVar24) {\n            tempResult = FUN_0800b2e8(0,0x3ff00000,tempOffset);\n            calcResult = FUN_080082d0((int)calcResult,(int)((ulonglong)calcResult >> 0x20),(int)tempResult,\n                                  (int)((ulonglong)tempResult >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp2 = (undefined4)((ulonglong)calcResult >> 0x20);\n    count = FUN_08008b10((int)calcResult,temp2,0,0);\n    if (count == 0) {\n      calcResult = FUN_0800b2e8((int)calcResult,temp2,-tempOffset);\n      temp1 = (undefined4)((ulonglong)calcResult >> 0x20);\n      temp2 = (undefined4)calcResult;\n      offsetCount = FUN_08008b4c(temp2,temp1,0,0x41700000);\n      if (offsetCount == 0) {\n        value1 = FUN_08008ba0(temp2,temp1);\n        valueArray[offsetIndex] = value1;\n        count = offsetIndex;\n      }\n      else {\n        FUN_08008640(temp2,temp1,0,0x3e700000);\n        value1 = FUN_08008ba0();\n        calcResult = FUN_0800856c();\n        calcResult = FUN_08008640((int)calcResult,(int)((ulonglong)calcResult >> 0x20),0,0x41700000);\n        FUN_080082d0(temp2,temp1,(int)calcResult,(int)((ulonglong)calcResult >> 0x20));\n        temp = FUN_08008ba0();\n        tempOffset = tempOffset + 0x18;\n        valueArray[offsetIndex] = temp;\n        valueArray[offsetIndex + 1] = value1;\n        count = offsetIndex + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    count = offsetIndex + -1;\n    if (index <= count) {\n      value1 = 0;\n      pointer2 = valueArray + offsetIndex + 0x3fffffff;\n      do {\n        pointer5 = pointer2 + -1;\n        value1 = value1 | *pointer2;\n        pointer2 = pointer5;\n      } while (pointer5 != resultArray[0]);\n      if (value1 != 0) break;\n    }\n    if (valueArray[index + -1] == 0) {\n      tempCount = 1;\n      pointer3 = resultArray + index;\n      do {\n        pointer2 = *pointer3;\n        tempCount = tempCount + 1;\n        pointer3 = pointer3 + -1;\n      } while (pointer2 == (uint *)0x0);\n      tempCount = offsetIndex + tempCount;\n    }\n    else {\n      tempCount = offsetIndex + 1;\n    }\n    tempIndex = offsetIndex + 1;\n    presult3 = (undefined4 *)(param6 + (tempIndex + tempLength + 0x3fffffff) * 4);\n    pointer6 = &tempStack1 + offsetIndex + offset;\n    tempValues = &tempStack2 + tempIndex;\n    do {\n      presult3 = presult3 + 1;\n      calcResult = FUN_0800856c(*presult3);\n      *pointer6 = calcResult;\n      presult2 = pointer6 + 1;\n      if (offsetCount < 0) {\n        tempResult = 0;\n      }\n      else {\n        tempResult = 0;\n        pointer18 = pointer4;\n        while( true ) {\n          pointer6 = pointer6 + -1;\n          pointer1 = pointer18 + 2;\n          calcResult = FUN_08008640((int)calcResult,(int)((ulonglong)calcResult >> 0x20),*pointer1,pointer18[3]);\n          tempResult = FUN_080082d4((int)tempResult,(int)((ulonglong)tempResult >> 0x20),(int)calcResult,\n                                (int)((ulonglong)calcResult >> 0x20));\n          if (pointer1 == pointer4 + offset * 2) break;\n          calcResult = *pointer6;\n          pointer18 = pointer1;\n        }\n      }\n      *tempValues = tempResult;\n      tempIndex = tempIndex + 1;\n      offsetIndex = tempCount;\n      pointer6 = presult2;\n      tempValues = tempValues + 1;\n    } while (tempIndex <= tempCount);\n  } while( true );\n  tempOffset = tempOffset + -0x18;\n  if (valueArray[count] == 0) {\n    pointer2 = valueArray + offsetIndex + 0x3ffffffe;\n    do {\n      value1 = *pointer2;\n      count = count + -1;\n      tempOffset = tempOffset + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (value1 == 0);\n  }\nLAB_0800a9f6:\n  calcResult = FUN_0800b2e8(0,0x3ff00000,tempOffset);\n  if (count < 0) {\n    if (2 < param5) {\n      if (param5 == 3) {\n        calcResult = 0;\nLAB_0800abe4:\n        if (tempIndex == 0) {\n          *resultArray[1] = (undefined4)tempValue1;\n          *(int *)((int)resultArray[1] + 4) = tempValue1._4_4_;\n          *(undefined8 *)((int)resultArray[1] + 0x10) = calcResult;\n          *(int *)((int)resultArray[1] + 8) = tempArray1[0];\n          *(int *)((int)resultArray[1] + 0xc) = tempArray1[1];\n          return result & 7;\n        }\n        *(int *)((int)resultArray[1] + 0x10) = (int)calcResult;\n        *(int *)((int)resultArray[1] + 8) = tempArray1[0];\n        *(int *)((int)resultArray[1] + 0x14) = (int)((ulonglong)calcResult >> 0x20) + -0x80000000;\n        *(int *)((int)resultArray[1] + 4) = tempValue1._4_4_ + -0x80000000;\n        *(int *)((int)resultArray[1] + 0xc) = tempArray1[1] + -0x80000000;\n        *resultArray[1] = (undefined4)tempValue1;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param5 < 1) {\n      if (param5 != 0) goto LAB_0800ab0e;\n      calcResult = 0;\nLAB_0800aafc:\n      offsetCount = (int)((ulonglong)calcResult >> 0x20);\n      if (tempIndex != 0) {\n        offsetCount = offsetCount + -0x80000000;\n      }\n      *resultArray[1] = (int)calcResult;\n      *(int *)((int)resultArray[1] + 4) = offsetCount;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    calcResult = 0;\n  }\n  else {\n    presult2 = &tempStack2 + count;\n    pointer2 = valueArray + count + 1;\n    pointer6 = &tempStack2 + count + 1;\n    do {\n      temp2 = (undefined4)((ulonglong)calcResult >> 0x20);\n      pointer2 = pointer2 + -1;\n      tempResult = FUN_0800856c(*pointer2);\n      tempResult = FUN_08008640((int)tempResult,(int)((ulonglong)tempResult >> 0x20),(int)calcResult,temp2);\n      pointer6 = pointer6 + -1;\n      *pointer6 = tempResult;\n      calcResult = FUN_08008640((int)calcResult,temp2,0,0x3e700000);\n    } while (pointer2 != valueArray);\n    offsetCount = 0;\n    do {\n      if (index < 0) {\n        calcResult = 0;\n      }\n      else {\n        temp2 = 0x40000000;\n        temp1 = 0x3ff921fb;\n        calcResult = 0;\n        offsetIndex = 0;\n        pointer6 = presult2;\n        pointer4 = &DAT_0800c028;\n        while( true ) {\n          tempResult = FUN_08008640(*(undefined4 *)pointer6,*(undefined4 *)((int)pointer6 + 4),temp2,temp1\n                               );\n          calcResult = FUN_080082d4((int)calcResult,(int)((ulonglong)calcResult >> 0x20),(int)tempResult,\n                                (int)((ulonglong)tempResult >> 0x20));\n          offsetIndex = offsetIndex + 1;\n          if ((index < offsetIndex) || (offsetCount < offsetIndex)) break;\n          temp2 = *pointer4;\n          temp1 = pointer4[1];\n          pointer6 = pointer6 + 1;\n          pointer4 = pointer4 + 2;\n        }\n      }\n      bVar24 = offsetCount != count;\n      *(int *)(&tempValue1 + offsetCount) = (int)calcResult;\n      *(int *)((int)&tempValue1 + (offsetCount * 2 + 1) * 4) = (int)((ulonglong)calcResult >> 0x20);\n      presult2 = presult2 + -1;\n      offsetCount = offsetCount + 1;\n    } while (bVar24);\n    if (2 < param5) {\n      if (param5 == 3) {\n        if (count != 0) {\n          pointer6 = &tempValue1 + count;\n          calcResult = CONCAT44(*(undefined4 *)((int)&tempValue1 + (count * 2 + 1) * 4),\n                            *(undefined4 *)pointer6);\n          do {\n            temp1 = (undefined4)((ulonglong)calcResult >> 0x20);\n            temp2 = (undefined4)calcResult;\n            temp3 = *(undefined4 *)(pointer6 + -1);\n            result0 = *(undefined4 *)((int)pointer6 + -4);\n            calcResult = FUN_080082d4(temp2,temp1,temp3,result0);\n            tempResult = FUN_080082d0(temp3,result0,(int)calcResult,(int)((ulonglong)calcResult >> 0x20));\n            tempResult = FUN_080082d4((int)tempResult,(int)((ulonglong)tempResult >> 0x20),temp2,temp1);\n            *pointer6 = tempResult;\n            pointer6 = pointer6 + -1;\n            *pointer6 = calcResult;\n          } while (&tempValue1 != pointer6);\n          if (1 < count) {\n            pointer6 = &tempValue1 + count;\n            calcResult = CONCAT44(*(undefined4 *)((int)&tempValue1 + (count * 2 + 1) * 4),\n                              *(undefined4 *)pointer6);\n            do {\n              temp1 = (undefined4)((ulonglong)calcResult >> 0x20);\n              temp2 = (undefined4)calcResult;\n              temp3 = *(undefined4 *)(pointer6 + -1);\n              result0 = *(undefined4 *)((int)pointer6 + -4);\n              calcResult = FUN_080082d4(temp2,temp1,temp3,result0);\n              tempResult = FUN_080082d0(temp3,result0,(int)calcResult,(int)((ulonglong)calcResult >> 0x20));\n              tempResult = FUN_080082d4((int)tempResult,(int)((ulonglong)tempResult >> 0x20),temp2,temp1);\n              *pointer6 = tempResult;\n              pointer6 = pointer6 + -1;\n              *pointer6 = calcResult;\n            } while (&tempValue1 + 1 != pointer6);\n            calcResult = 0;\n            pointer6 = &tempValue1 + count + 1;\n            do {\n              presult2 = pointer6 + -1;\n              calcResult = FUN_080082d4((int)calcResult,(int)((ulonglong)calcResult >> 0x20),\n                                    *(undefined4 *)presult2,*(undefined4 *)((int)pointer6 + -4));\n              pointer6 = presult2;\n            } while (&tempValue1 + 2 != presult2);\n            goto LAB_0800abe4;\n          }\n        }\n        calcResult = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param5 < 1) {\n      if (param5 != 0) goto LAB_0800ab0e;\n      calcResult = 0;\n      pointer6 = &tempValue1 + count + 1;\n      do {\n        presult2 = pointer6 + -1;\n        calcResult = FUN_080082d4((int)calcResult,(int)((ulonglong)calcResult >> 0x20),*(undefined4 *)presult2,\n                              *(undefined4 *)((int)pointer6 + -4));\n        pointer6 = presult2;\n      } while (&tempValue1 != presult2);\n      goto LAB_0800aafc;\n    }\n    calcResult = 0;\n    pointer6 = &tempValue1 + count + 1;\n    do {\n      presult2 = pointer6 + -1;\n      calcResult = FUN_080082d4((int)calcResult,(int)((ulonglong)calcResult >> 0x20),*(undefined4 *)presult2,\n                            *(undefined4 *)((int)pointer6 + -4));\n      pointer6 = presult2;\n    } while (&tempValue1 != presult2);\n  }\n  offsetCount = (int)((ulonglong)calcResult >> 0x20);\n  temp2 = (undefined4)calcResult;\n  if (tempIndex == 0) {\n    *(undefined8 *)resultArray[1] = calcResult;\n    calcResult = FUN_080082d0((undefined4)tempValue1,tempValue1._4_4_,temp2,offsetCount);\n    if (count < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    offsetCount = 1;\n    pointer6 = &tempValue1;\n    do {\n      calcResult = FUN_080082d4((int)calcResult,(int)((ulonglong)calcResult >> 0x20),\n                            *(undefined4 *)(pointer6 + 1),*(undefined4 *)((int)pointer6 + 0xc));\n      offsetCount = offsetCount + 1;\n      pointer6 = pointer6 + 1;\n    } while (offsetCount <= count);\n    if (tempIndex == 0) goto LAB_0800ad26;\n  }\n  else {\n    *resultArray[1] = temp2;\n    *(int *)((int)resultArray[1] + 4) = offsetCount + -0x80000000;\n    calcResult = FUN_080082d0((undefined4)tempValue1,tempValue1._4_4_,temp2,offsetCount);\n    if (0 < count) goto LAB_0800ad04;\n  }\n  calcResult = CONCAT44((int)((ulonglong)calcResult >> 0x20) + -0x80000000,(int)calcResult);\nLAB_0800ad26:\n  *(undefined8 *)((int)resultArray[1] + 8) = calcResult;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input",
                "param_2": "output",
                "param_3": "length",
                "param_4": "offset",
                "param_5": "param5",
                "param_6": "param6",
                "puVar1": "pointer1",
                "uVar2": "result",
                "uVar3": "temp",
                "iVar4": "count",
                "puVar5": "pointer2",
                "uVar6": "temp1",
                "ppuVar7": "pointer3",
                "uVar8": "temp2",
                "iVar9": "offsetCount",
                "puVar10": "pointer4",
                "uVar11": "temp3",
                "uVar12": "value1",
                "puVar13": "pointer5",
                "iVar14": "value2",
                "iVar15": "index",
                "puVar16": "pointer6",
                "iVar17": "offsetIndex",
                "iVar21": "tempIndex",
                "uVar25": "tempResult",
                "uVar26": "calcResult",
                "uVar27": "tempResult2",
                "local_284": "tempValues",
                "local_280": "tempCount",
                "local_270": "tempOffset",
                "local_26c": "tempLength",
                "local_260": "resultArray",
                "local_258": "valueArray",
                "uStack_208": "tempStack1",
                "local_168": "tempValue1",
                "local_160": "tempArray1",
                "uStack_c8": "tempStack2"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input,uint value,undefined4 param1,undefined4 param2,int inverse)\n\n{\n  int result;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined8 temp;\n  undefined8 temp2;\n  \n  if (((value & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input;\n  }\n  temp = FUN_08008640(input,value,input);\n  value3 = (undefined4)((ulonglong)temp >> 0x20);\n  value2 = (undefined4)temp;\n  temp = FUN_08008640(input,value,value2,value3);\n  value4 = (undefined4)((ulonglong)temp >> 0x20);\n  value1 = (undefined4)temp;\n  temp = FUN_08008640(value2,value3,0x5acfd57c,0x3de5d93a);\n  temp = FUN_080082d0((int)temp,(int)((ulonglong)temp >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  temp = FUN_08008640((int)temp,(int)((ulonglong)temp >> 0x20),value2,value3);\n  temp = FUN_080082d4((int)temp,(int)((ulonglong)temp >> 0x20),0x57b1fe7d,0x3ec71de3);\n  temp = FUN_08008640((int)temp,(int)((ulonglong)temp >> 0x20),value2,value3);\n  temp = FUN_080082d0((int)temp,(int)((ulonglong)temp >> 0x20),0x19c161d5,0x3f2a01a0);\n  temp = FUN_08008640((int)temp,(int)((ulonglong)temp >> 0x20),value2,value3);\n  temp = FUN_080082d4((int)temp,(int)((ulonglong)temp >> 0x20),0x1110f8a6,0x3f811111);\n  value5 = (undefined4)((ulonglong)temp >> 0x20);\n  if (inverse != 0) {\n    temp2 = FUN_08008640(param1,param2,0,0x3fe00000);\n    temp = FUN_08008640(value1,value4,(int)temp,value5);\n    temp = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp,\n                         (int)((ulonglong)temp >> 0x20));\n    temp = FUN_08008640((int)temp,(int)((ulonglong)temp >> 0x20),value2,value3);\n    temp = FUN_080082d0((int)temp,(int)((ulonglong)temp >> 0x20),param1,param2);\n    temp2 = FUN_08008640(value1,value4,0x55555549,0x3fc55555);\n    temp = FUN_080082d4((int)temp,(int)((ulonglong)temp >> 0x20),(int)temp2,\n                         (int)((ulonglong)temp2 >> 0x20));\n    value2 = FUN_080082d0(input,value,(int)temp,(int)((ulonglong)temp >> 0x20));\n    return value2;\n  }\n  temp = FUN_08008640(value2,value3,(int)temp,value5);\n  temp = FUN_080082d0((int)temp,(int)((ulonglong)temp >> 0x20),0x55555549,0x3fc55555);\n  temp = FUN_08008640((int)temp,(int)((ulonglong)temp >> 0x20),value1,value4);\n  value2 = FUN_080082d4((int)temp,(int)((ulonglong)temp >> 0x20),input,value);\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input",
                "param_2": "value",
                "param_3": "param1",
                "param_4": "param2",
                "param_5": "inverse",
                "iVar1": "result",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3",
                "uVar5": "value4",
                "uVar6": "value5",
                "uVar7": "temp",
                "uVar8": "temp2"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int returnValue;\n  undefined4 result5;\n  uint tempVar;\n  undefined8 result6;\n  undefined8 result7;\n  undefined4 tempVar2;\n  \n  result6 = CONCAT44(input2,input1);\n  tempVar = input2 & 0x7fffffff;\n  if (tempVar < 0x44100000) {\n    if (tempVar < 0x3fdc0000) {\n      if (tempVar < 0x3e200000) {\n        result7 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        returnValue = FUN_08008b60((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x3ff00000);\n        if (returnValue != 0) {\n          return input1;\n        }\n      }\n      returnValue = -1;\n    }\n    else {\n      result6 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)result6 >> 0x20);\n      result1 = (undefined4)result6;\n      if (tempVar < 0x3ff30000) {\n        if (tempVar < 0x3fe60000) {\n          result6 = FUN_080082d4(result1,result4,result1,result4);\n          result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x3ff00000);\n          result7 = FUN_080082d4(result1,result4,0,0x40000000);\n          result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                               (int)((ulonglong)result7 >> 0x20));\n          returnValue = 0;\n        }\n        else {\n          result6 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          result7 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                               (int)((ulonglong)result7 >> 0x20));\n          returnValue = 1;\n        }\n      }\n      else if (tempVar < 0x40038000) {\n        result6 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        result7 = FUN_08008640(result1,result4,0,0x3ff80000);\n        result7 = FUN_080082d4((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x3ff00000);\n        result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                             (int)((ulonglong)result7 >> 0x20));\n        returnValue = 2;\n      }\n      else {\n        result6 = FUN_08008894(0,0xbff00000,result1,result4);\n        returnValue = 3;\n      }\n    }\n    tempVar2 = (undefined4)((ulonglong)result6 >> 0x20);\n    result5 = (undefined4)result6;\n    result6 = FUN_08008640(result5,tempVar2,result5);\n    result2 = (undefined4)((ulonglong)result6 >> 0x20);\n    result1 = (undefined4)result6;\n    result6 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)result6 >> 0x20);\n    result4 = (undefined4)result6;\n    result6 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0x24760deb,0x3fa97b4b);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0xa0d03d51,0x3fb10d66);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0xc54c206e,0x3fb745cd);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0x920083ff,0x3fc24924);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0x5555550d,0x3fd55555);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)result6 >> 0x20);\n    result7 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0x52defd9a,0x3fadde2d);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0xfe231671,0x3fbc71c6);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0x9998ebc4,0x3fc99999);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)result7 >> 0x20);\n    if (returnValue == -1) {\n      result6 = FUN_080082d4((int)result6,result1,(int)result7,result4);\n      result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result5,tempVar2);\n      returnValue = FUN_080082d0(result5,tempVar2,(int)result6,(int)((ulonglong)result6 >> 0x20));\n      return returnValue;\n    }\n    result6 = FUN_080082d4((int)result6,result1,(int)result7,result4);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result5,tempVar2);\n    result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + returnValue * 8),\n                         *(undefined4 *)(&UNK_0800c094 + returnValue * 8));\n    result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),result5,tempVar2);\n    returnValue = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + returnValue * 8),\n                         *(undefined4 *)(&UNK_0800c074 + returnValue * 8),(int)result6,\n                         (int)((ulonglong)result6 >> 0x20));\n    if ((int)input2 < 0) {\n      return returnValue;\n    }\n  }\n  else {\n    if ((0x7ff00000 < tempVar) || ((tempVar == 0x7ff00000 && (input1 != 0)))) {\n      returnValue = FUN_080082d4(input1,input2,input1);\n      return returnValue;\n    }\n    returnValue = 0x54442d18;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "returnValue",
                "uVar6": "result5",
                "uVar7": "tempVar",
                "uVar8": "result6",
                "uVar9": "result7",
                "local_2c": "tempVar2"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "set_bit_high_then_shift_right_0800b2d4",
            "code": "\nuint setBitHighThenShiftRight_0800b2d4(undefined4 inputMask,uint bitField)\n\n{\n  return (bitField | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "set_bit_high_then_shift_right_0800b2d4",
                "param_1": "inputMask",
                "param_2": "bitField"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_application_0800b2e0",
            "code": "\nundefined4 initializeApplication_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_application_0800b2e0"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_result_0800b2e8",
            "code": "\nuint calculate_result_0800b2e8(uint input_value1,uint input_value2,int offset,undefined4 constant)\n\n{\n  uint shifted_value;\n  int temp_offset;\n  uint upper_bits;\n  undefined8 combined_values;\n  \n  combined_values = CONCAT44(input_value2,input_value1);\n  shifted_value = (input_value2 << 1) >> 0x15;\n  if (shifted_value == 0) {\n    if ((input_value1 | input_value2 & 0x7fffffff) == 0) {\n      return input_value1;\n    }\n    combined_values = FUN_08008640(input_value1,input_value2,0,0x43500000);\n    if (offset < -50000) goto LAB_0800b34a;\n    shifted_value = ((uint)((int)((ulonglong)combined_values >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_value == 0x7ff) {\n    shifted_value = FUN_080082d4(input_value1,input_value2,input_value1,input_value2,constant);\n    return shifted_value;\n  }\n  upper_bits = (uint)((ulonglong)combined_values >> 0x20);\n  temp_offset = shifted_value + offset;\n  if (temp_offset < 0x7ff) {\n    if (0 < temp_offset) {\n      return (uint)combined_values;\n    }\n    if (temp_offset + 0x35 < 0 == SCARRY4(temp_offset,0x35)) {\n      shifted_value = FUN_08008640((uint)combined_values,upper_bits & 0x800fffff | (temp_offset + 0x36) * 0x100000,0,0x3c900000);\n      return shifted_value;\n    }\n    if (offset < 0xc351) {\n      combined_values = CONCAT44(upper_bits & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shifted_value = FUN_08008640((int)combined_values,(int)((ulonglong)combined_values >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shifted_value;\n    }\n  }\n  shifted_value = FUN_08008640(0x8800759c,upper_bits & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "param_3": "offset",
                "param_4": "constant",
                "uVar1": "shifted_value",
                "iVar2": "temp_offset",
                "uVar3": "upper_bits",
                "uVar4": "combined_values"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_data_address_0800b3dc",
            "code": "\nundefined4 get_data_address_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_data_address_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_code_blocks_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeCodeBlocks_0800b3e8(void)\n\n{\n  int blockCounter;\n  code **codeBlock;\n  \n  FUNC_0800b5b0();\n  blockCounter = 0;\n  codeBlock = (code **)&DAT_0800c0b4;\n  do {\n    blockCounter = blockCounter + 1;\n    (**codeBlock)();\n    codeBlock = codeBlock + 1;\n  } while (blockCounter != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_code_blocks_0800b3e8",
                "iVar1": "blockCounter",
                "ppcVar2": "codeBlock"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "fill_buffer_with_byte_value_0800b430",
            "code": "\nvoid fillBufferWithByteValue_0800b430(undefined4 *buffer,undefined byteValue,uint byteCount)\n\n{\n  undefined4 *destPtr;\n  undefined4 *srcPtr;\n  uint remainingCount;\n  undefined4 value;\n  bool isFinished;\n  \n  if (((uint)buffer & 3) != 0) {\n    remainingCount = byteCount - 1;\n    destPtr = buffer;\n    if (byteCount == 0) {\n      return;\n    }\n    while( true ) {\n      buffer = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = byteValue;\n      byteCount = remainingCount;\n      if (((uint)buffer & 3) == 0) break;\n      isFinished = remainingCount == 0;\n      remainingCount = remainingCount - 1;\n      destPtr = buffer;\n      if (isFinished) {\n        return;\n      }\n    }\n  }\n  if (3 < byteCount) {\n    value = CONCAT22(CONCAT11(byteValue,byteValue),CONCAT11(byteValue,byteValue));\n    if (0xf < byteCount) {\n      destPtr = buffer + 4;\n      do {\n        destPtr[-4] = value;\n        destPtr[-3] = value;\n        destPtr[-2] = value;\n        destPtr[-1] = value;\n        destPtr = destPtr + 4;\n      } while (destPtr != (undefined4 *)((int)buffer + (byteCount - 0x10 & 0xfffffff0) + 0x20));\n      remainingCount = byteCount & 0xc;\n      buffer = buffer + ((byteCount - 0x10 >> 4) + 1) * 4;\n      byteCount = byteCount & 0xf;\n      if (remainingCount == 0) goto joined_r0x0800b4a8;\n    }\n    destPtr = (undefined4 *)((byteCount - 4 & 0xfffffffc) + 4 + (int)buffer);\n    do {\n      srcPtr = buffer + 1;\n      *buffer = value;\n      buffer = srcPtr;\n    } while (destPtr != srcPtr);\n    byteCount = byteCount & 3;\n    buffer = destPtr;\n  }\njoined_r0x0800b4a8:\n  if (byteCount != 0) {\n    destPtr = buffer;\n    do {\n      srcPtr = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = byteValue;\n      destPtr = srcPtr;\n    } while ((undefined4 *)(byteCount + (int)buffer) != srcPtr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "fill_buffer_with_byte_value_0800b430",
                "param_1": "buffer",
                "param_2": "byteValue",
                "param_3": "byteCount",
                "puVar1": "destPtr",
                "puVar2": "srcPtr",
                "uVar3": "remainingCount",
                "uVar4": "value",
                "bVar5": "isFinished"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "store_data_and_return_0800b524",
            "code": "\nundefined4 storeDataAndReturn_0800b524(int operation,undefined4 value,undefined4 data1,undefined4 data2)\n\n{\n  undefined *dataPtr;\n  undefined4 returnValue;\n  uint bitMask;\n  uint count;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPtr = DAT_20000168;\n  count = *(uint *)(DAT_20000168 + 4);\n  if ((int)count < 0x20) {\n    if (operation != 0) {\n      *(undefined4 *)(DAT_20000168 + count * 4 + 0x88) = data1;\n      bitMask = 1 << (count & 0xff);\n      *(uint *)(dataPtr + 0x188) = *(uint *)(dataPtr + 0x188) | bitMask;\n      *(undefined4 *)(dataPtr + count * 4 + 0x108) = data2;\n      if (operation == 2) {\n        *(uint *)(dataPtr + 0x18c) = bitMask | *(uint *)(dataPtr + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPtr + 4) = count + 1;\n    *(undefined4 *)(dataPtr + (count + 2) * 4) = value;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "store_data_and_return_0800b524",
                "param_1": "operation",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2",
                "puVar1": "dataPtr",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "count"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 201582,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}