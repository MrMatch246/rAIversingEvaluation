{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "check_flag_status_0800192c",
                "PTR_DAT_08001954": "flag_array",
                "PTR_DAT_08001958": "flag_array_result"
            },
            "code": "void check_flag_status_0800192c(void)\n{\n  if ((PTR_DAT_08001954[0x28] & 8) == 0) {\n    *(uint32_t *)PTR_DAT_08001958 = 0;\n  }\n  else {\n    *(uint32_t *)PTR_DAT_08001958 = 1;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_flag_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "set_param_value_08006950",
                "param_1": "param_value",
                "PTR_DAT_08006994": "ptr_dat",
                "DAT_08006994": "ptr_dat",
                "mask": "mask",
                "shift_value": "shift_value",
                "new_value": "new_value",
                "old_value": "old_value",
                "masked_value": "masked_value",
                "result_value": "result_value"
            },
            "code": "void set_param_value_08006950(uint8_t param_value) {\n  uint32_t* PTR_DAT_08006994 = (uint32_t*) DAT_08006994;\n  uint32_t mask = 0xf8ff;\n  uint32_t shift_value = (param_value & 7) << 8;\n  uint32_t new_value = 0x5fa0000;\n  uint32_t old_value = *(PTR_DAT_08006994 + 0x3);\n  uint32_t masked_value = old_value & mask;\n  uint32_t result_value = masked_value | shift_value | new_value;\n  *(PTR_DAT_08006994 + 0x3) = result_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": false,
            "current_name": "set_param_value_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "convert_to_integer_08008ba0",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "output1",
                "iVar2": "intermediate_value",
                "uVar3": "abs_intermediate_value",
                "shifted_input": "shifted_input",
                "shift_amount": "shift_amount"
            },
            "code": "uint convert_to_integer_08008ba0(uint input1, uint input2) {\n  uint output1;\n  int intermediate_value;\n  uint output2;\n  if (input2 * 2 < 0xffe00000) {\n    intermediate_value = input2 * 2 + 0x200000;\n    if (intermediate_value >= -1) {\n      return 0;\n    }\n    uint abs_intermediate_value = -intermediate_value - 0x3e1;\n    if (abs_intermediate_value != 0 && abs_intermediate_value < 0xfffffc20) {\n      uint shifted_input = (input2 << 0xb | 0x80000000 | input1 >> 0x15);\n      uint shift_amount = abs_intermediate_value & 0xff;\n      output1 = shifted_input >> shift_amount;\n      if ((input2 & 0x80000000) != 0) {\n        output1 = -output1;\n      }\n      return output1;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_0800adf0",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_080095b8",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "convert_to_integer_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "initialize_08005984",
                "param_1": "input_param",
                "uVar1": "is_initialized"
            },
            "code": "int initialize_08005984(int input_param)\n{\n  int is_initialize_08005984d = *(int *)PTR_DAT_080059b0;\n  if (is_initialize_08005984d == 0) {\n    is_initialize_08005984d = FUN_0800597c(1, input_param, 0);\n  }\n  else {\n    is_initialize_08005984d = 0;\n  }\n  return is_initialize_08005984d;\n}",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "set_flags_08007a10",
                "param_1": "flag_value",
                "DAT_08007a64": "flags_ptr",
                "uint": "unsigned int"
            },
            "code": "void set_flags_08007a10(int flag_value)\n{\n    uint* DAT_08007a64 = (uint*)(DAT_08007a64 + 0x40);\n    if (flag_value == 0x40000000) {\n        *DAT_08007a64 |= 1;\n    }\n    else if (flag_value == DAT_08007a68) {\n        *DAT_08007a64 |= 2;\n    }\n    else if (flag_value == DAT_08007a6c) {\n        *DAT_08007a64 |= 4;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "set_flags_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "FUN_0800856c": "improved_function_name_0800856c",
                "param_1": "input_num",
                "uVar1": "result_high",
                "uVar2": "num",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeroes",
                "uVar5": "shift_amount_2",
                "uVar6": "sign_bit",
                "in_r12": "excess_bits",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "carry_flag"
            },
            "code": "unsigned long long improved_function_name_0800856c(unsigned int num);\n\nunsigned long long improved_function_name_0800856c(unsigned int input_num)\n{\n    unsigned int sign_bit = input_num & 0x80000000;\n    unsigned int num = input_num;\n    if ((int)sign_bit < 0) {\n        num = -input_num;\n    }\n    unsigned long long result = 0;\n    int leading_zeroes = improved_function_name_0800856c(num);\n    int shift_amount = leading_zeroes + 21;\n    if (shift_amount < 32) {\n        shift_amount = shift_amount + 1;\n        result = num << (shift_amount & 0xff);\n        num = num >> ((0x1c - leading_zeroes) & 0xff);\n    }\n    else {\n        int remaining_bits = 32 - leading_zeroes;\n        num = num << (leading_zeroes & 0xff);\n        if (remaining_bits > 0) {\n            num = num | (0U >> (remaining_bits & 0xff));\n        }\n        if (remaining_bits > 0) {\n            result = 0 << (leading_zeroes & 0xff);\n        }\n    }\n    if (shift_amount < 1075) {\n        return (((unsigned long long)(num + (0x433 - shift_amount) * 0x100000) | sign_bit) << 32) | result;\n    }\n    int excess_bits = ~(0x433 - shift_amount);\n    if (excess_bits > 30) {\n        return (((unsigned long long)input_num) << 32) & 0x80000000ffffffff;\n    }\n    int shift_amount_2 = excess_bits - 19;\n    if (shift_amount_2 == 0 || (shift_amount_2 < 0) != (((excess_bits - 31) + 12) < 0)) {\n        excess_bits = excess_bits + 1;\n        return (((unsigned long long)(sign_bit | (num >> (excess_bits & 0xff)))) << 32) | (result >> (excess_bits & 0xff)) | (num << ((0x20 - excess_bits) & 0xff));\n    }\n    return (((unsigned long long)input_num) << 32) & 0x80000000ffffffff;\n}\n\nunsigned long long improved_function_name_0800856c(unsigned int num)\n{\n    unsigned long long count = 0;\n    if (num == 0) {\n        return 32;\n    }\n    while ((num & 0x80000000) == 0) {\n        count = count + 1;\n        num = num << 1;\n    }\n    return count;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "improved_function_name_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "execute_function_08008b00",
                "param_1": "input_param",
                "FUN_08008a74": "call_helper_function"
            },
            "code": "undefined4 execute_function_08008b00(undefined4 input_param)\n{\n  call_helper_function();\n  return input_param;\n}",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008b10",
                "FUN_08008b24",
                "FUN_08008af0"
            ],
            "imported": false,
            "current_name": "execute_function_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "update_data_if_second_element_is_2_0800585c",
                "PTR_DAT_08005878": "PTR_data_array",
                "FUN_08005790": "update_data"
            },
            "code": "void update_data_if_second_element_is_2_0800585c(void)\n{\n  if (PTR_DAT_08005878[1] == '\\x02') {\n    PTR_DAT_08005878[1] = 3;\n    update_data();\n  }\n  return;\n}",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_second_element_is_2_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "print_interrupt_message_0800597c"
            },
            "code": "void print_interrupt_message_0800597c(void)\n{\n  software_interrupt(0x3f);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": false,
            "current_name": "print_interrupt_message_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "calculate_double_precision_08009798",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "exponent_diff",
                "uVar2": "exponent_shifted",
                "DAT_08009814": "mantissa_mask",
                "lVar3": "result"
            },
            "code": "longlong calculate_double_precision_08009798(uint exponent, uint mantissa, undefined4 param_3, undefined4 param_4)\n{\n  uint exponent_shifted = (mantissa << 1) >> 0x15;\n  uint exponent_diff = exponent_shifted - 0x3ff;\n  if ((int)exponent_diff < 0x14) {\n    if ((int)exponent_diff < 0) {\n      return ((ulonglong)mantissa & 0x80000000) << 0x20;\n    }\n    longlong mantissa_shifted = (ulonglong)(mantissa & ~(DAT_08009814 >> (exponent_diff & 0xff))) << 0x20;\n    return mantissa_shifted;\n  }\n  else {\n    if ((int)exponent_diff < 0x34) {\n      uint masked_mantissa = (uint)(0xffffffffU >> (exponent_shifted - 0x413 & 0xff));\n      longlong result = CONCAT44(mantissa, exponent & ~masked_mantissa);\n      return result;\n    }\n    if (exponent_diff != 0x400) {\n      longlong result = CONCAT44(mantissa, exponent);\n      return result;\n    }\n    longlong result = FUNC_080082d4(exponent, mantissa, exponent, mantissa, param_4);\n    return result;\n  }\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "calculate_double_precision_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08002408",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "update_values_08007930",
                "puVar1": "values_ptr",
                "uVar2": "new_value",
                "uVar3": "current_value",
                "uVar4": "mask",
                "iVar5": "index"
            },
            "code": "void update_values_08007930(void)\n{\n  uint32_t *values_ptr;\n  uint32_t new_value;\n  uint32_t current_value;\n  int index;\n  \n  values_ptr = PTR_DAT_080079b8;\n  if (*(int *)PTR_DAT_080079bc != 0) {\n    index = *(int *)(PTR_DAT_080079b8 + 0x14);\n    new_value = get_new_value();\n    *(uint32_t *)(values_ptr + index * 4) = new_value;\n    if (*(int *)(values_ptr + 0x14) == 3) {\n      index = 0;\n    }\n    else {\n      index = *(int *)(values_ptr + 0x14) + 1;\n    }\n    *(int *)(values_ptr + 0x14) = index;\n    current_value = get_current_value();\n    if (current_value != *(uint32_t *)(values_ptr + 0x10)) {\n      uint32_t mask = ~(uint32_t)(*(uint32_t *)(values_ptr + 0x10));\n      if ((mask & current_value) != 0) {\n        FUN_080074c8(mask & current_value);\n      }\n      mask = ~(uint32_t)current_value;\n      if ((mask & *(uint32_t *)(values_ptr + 0x10)) != 0) {\n        FUN_08007520(mask & *(uint32_t *)(values_ptr + 0x10));\n      }\n      *(uint32_t *)(values_ptr + 0x10) = current_value;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08007884",
                "FUN_08007520",
                "FUN_080074c8",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "update_values_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "check_if_initialized_08000188",
                "param_1": "is_initialized",
                "*PTR_DAT_080001a0": "is_initialized",
                "DAT_080001a4": "global_var",
                "PTR_FUN_080001a8": "init_function_ptr"
            },
            "code": "int * check_if_initialized_08000188(int **PTR_DAT_080001a0)\\n{\\n    if (**PTR_DAT_080001a0 == \"\\0\") {\\n        if (DAT_080001a4 != 0) {\\n            *PTR_DAT_080001a0 = PTR_FUN_080001a8;\\n        }\\n        **PTR_DAT_080001a0 = 1;\\n    }\\n    return *PTR_DAT_080001a0;\\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": false,
            "current_name": "check_if_initialized_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "calculate_result_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result1",
                "uVar2": "shift_amount",
                "uVar3": "mask",
                "bVar4": "carry_flag",
                "uVar5": "temp_result",
                "lVar6": "final_result"
            },
            "code": "long long calculate_result_08009318(uint input1, uint input2, undefined4 param_3, undefined4 param_4)\n{\n  int result1;\n  uint shift_amount;\n  uint mask;\n  bool carry_flag;\n  undefined8 temp_result;\n  long long final_result;\n  shift_amount = (input2 << 1) >> 0x15;\n  mask = shift_amount - 0x3ff;\n  if ((int)mask < 0x14) {\n    if ((int)mask < 0) {\n      temp_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n      result1 = FUN_08008b60((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0);\n      final_result = CONCAT44(input2, input1);\n      if (result1 != 0) {\n        if ((int)input2 < 0) {\n          final_result = -0x8000000000000000;\n        }\n        else {\n          input1 = input1 | input2;\n          final_result = CONCAT44(input1, input1);\n          if (input1 != 0) {\n            final_result = (ulonglong)DAT_0800940c << 0x20;\n          }\n        }\n      }\n    }\n    else {\n      mask = DAT_08009408 >> (mask & 0xff);\n      final_result = CONCAT44(input2, input1);\n      if ((input2 & mask | input1) != 0) {\n        temp_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n        result1 = FUN_08008b60((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0);\n        final_result = CONCAT44(input2, input1);\n        if (result1 != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (mask & 0xff));\n          }\n          final_result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)mask < 0x34) {\n    mask = 0xffffffff >> (shift_amount - 0x413 & 0xff);\n    final_result = CONCAT44(input2, input1);\n    if ((mask & input1) != 0) {\n      temp_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n      result1 = FUN_08008b60((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0);\n      final_result = CONCAT44(input2, input1);\n      if (result1 != 0) {\n        if (0 < (int)input2) {\n          if (mask == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            mask = 1 << (0x34 - shift_amount & 0xff);\n            carry_flag = CARRY4(mask, input1);\n            input1 = mask + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input2, input1 & ~mask);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input2, input1);\n    if (mask == 0x400) {\n      final_result = FUNC_080082d4();\n    }\n  }\n  return final_result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08001994",
                "FUN_08003004",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "set_param_1_in_dat_080018f8_080018cc",
                "param_1": "param_1",
                "DAT_080018f8": "DAT_080018f8",
                "PTR_DAT_080018f8_14": "ptr_dat_080018f8_14",
                "current_value": "current_value",
                "mask": "mask",
                "new_value": "new_value"
            },
            "code": "void set_param_1_in_dat_080018f8_080018cc(uint param_1)\n{\n  uint* PTR_DAT_080018f8_14 = (uint*)(DAT_080018f8 + 0x14);\n  uint current_value = *PTR_DAT_080018f8_14;\n  uint mask = 0xfffffaaf;\n  uint new_value = param_1 | (current_value & mask);\n  *PTR_DAT_080018f8_14 = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "set_param_1_in_dat_080018f8_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_bit_in_array_080079e0",
                "param_1": "bit_index",
                "DAT_08007a0c": "array_start"
            },
            "code": "void set_bit_in_array_080079e0(uint8_t bit_index) {\n    uint32_t* array_ptr = (uint32_t*)(DAT_08007a0c + (bit_index >> 5) * 4);\n    uint32_t bit_mask = 1 << (bit_index & 0x1f);\n    *array_ptr = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "param_1": "bit_position",
                "DAT_08006a88": "array_ptr",
                "uint": "unsigned_integer",
                "index": "array_index",
                "target_ptr": "array_element_ptr",
                "bit_mask": "bit_mask"
            },
            "code": "void set_bit_in_array_08006a58(byte bit_position){\n    int* DAT_08006a88 = DAT_08006a88;\n    uint index = ((uint)(int)(char)bit_position >> 5) + 0x40;\n    int* target_ptr = DAT_08006a88 + index;\n    int bit_mask = 1 << (bit_position & 0x1f);\n    *target_ptr = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_value_from_pointer_08005a84",
                "PTR_DAT_08005a94": "value_pointer"
            },
            "code": "uint32_t get_value_from_pointer_08005a84() {\n  uint32_t* PTR_DAT_08005a94 = (uint32_t*)PTR_DAT_08005a94;\n  return *PTR_DAT_08005a94;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08007756",
                "FUN_08005cec",
                "FUN_08000268"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "is_input_zero_08008b10",
                "in_ZR": "input_char",
                "FUN_08008b00": "get_input"
            },
            "code": "bool is_input_zero_08008b10(void)\\n{\\n  char input_char;\\n  input_char = get_input();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "is_input_zero_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = FUN_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = FUN_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08008590",
                "FUN_0800192c",
                "FUN_08009214",
                "FUN_08009798",
                "FUN_08008bf0",
                "FUN_08009228",
                "FUN_08004c2a",
                "FUN_0800923c",
                "FUN_08009654",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "calculate_float_bits_08008c30",
                "param_1": "float_bits",
                "param_2": "float_bits_sign",
                "uVar1": "biased_exponent_bits",
                "uVar2": "exponent_bits",
                "uVar3": "normalized_float_bits",
                "in_r12": "shifted_normalized_float_bits",
                "bVar4": "is_exponent_negative",
                "bVar5": "is_exponent_too_large",
                "SCARRY4": "SCARRY4",
                "shift_amount": "shift_amount",
                "fraction_bits": "fraction_bits",
                "is_normalized_float_zero": "is_normalized_float_zero",
                "significand_bits": "significand_bits"
            },
            "code": "uint calculate_float_bits_08008c30(uint float_bits, uint float_bits_sign) {\n  uint exponent_bits;\n  uint normalized_float_bits;\n  bool is_exponent_negative;\n  bool is_exponent_too_large;\n  bool is_normalized_float_zero;\n  \n  exponent_bits = float_bits_sign * 2;\n  is_exponent_too_large = exponent_bits >= 0x70000000;\n  normalized_float_bits = exponent_bits + 0x90000000;\n  if (is_exponent_too_large) {\n    normalized_float_bits = exponent_bits + 0x8fe00000;\n  }\n  is_exponent_negative = normalized_float_bits == 0;\n  if (!is_exponent_too_large && normalized_float_bits >= 0x200000) {\n    is_exponent_negative = normalized_float_bits == 0x1fc00000;\n  }\n  if (is_exponent_too_large || normalized_float_bits < 0x200000 || 0x1fc00000 < normalized_float_bits || is_exponent_negative) {\n    if ((float_bits_sign & 0x40000000) != 0) {\n      if (((int)exponent_bits >> 0x15 == -1) && ((float_bits | float_bits_sign << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return float_bits_sign & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(exponent_bits + 0x92e00000) < 0 != SCARRY4(normalized_float_bits,0x2e00000)) {\n      return float_bits_sign & 0x80000000;\n    }\n    uint shift_amount = 0x18 - (exponent_bits + 0x92e00000 >> 0x15);\n    uint fraction_bits = float_bits >> (shift_amount & 0xff);\n    is_normalized_float_zero = (float_bits << (0x20 - shift_amount & 0xff)) == 0;\n    if (!is_normalized_float_zero) {\n      fraction_bits = fraction_bits | 1;\n    }\n    uint significand_bits = (float_bits_sign & 0x1fffff) | 0x100000;\n    fraction_bits = fraction_bits | (significand_bits << (0x20 - shift_amount & 0xff));\n    significand_bits = (significand_bits >> (shift_amount & 0xff)) << 1;\n  }\n  uint biased_exponent_bits = (float_bits_sign & 0x80000000 | fraction_bits >> 0x1d) + significand_bits * 4 + (uint)(0x7fffffff < fraction_bits * 8);\n  if (fraction_bits * 8 == 0x80000000) {\n    biased_exponent_bits = biased_exponent_bits & 0xfffffffe;\n  }\n  return biased_exponent_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_080044e8",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_float_bits_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_08009798",
                "FUN_0800a348",
                "FUN_08009654"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "update_data_08007bf0",
                "param_1": "new_value",
                "_DAT_4000002c": "data_ptr_1",
                "_DAT_40000024": "data_ptr_2"
            },
            "code": "void update_data_08007bf0(uint32_t new_value)\n{\n    PTR_DAT_4000002c = new_value;\n    if (new_value <= PTR_DAT_40000024) {\n        PTR_DAT_40000024 = new_value;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": false,
            "current_name": "update_data_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "FUN_08008590": "bit_shift_08008590",
                "param_1": "num",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "shift",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar7": "leading_zeros",
                "bVar8": "temp7",
                "bVar9": "temp8",
                "bVar10": "temp9"
            },
            "code": "ulonglong bit_shift_08008590(uint num, undefined4 param_2, undefined4 param_3, uint shift) {\n  uint temp1, temp2, temp3, temp4, temp5, leading_zeros, trailing_zeros, temp6;\n  bool is_zero;\n  temp5 = num << 1;\n  is_zero = temp5 == 0;\n  temp1 = (uint)((num & 0x80000000) != 0) << 0x1f;\n  temp4 = (uint)((int)temp5 >> 3) >> 1;\n  temp3 = temp1 | temp4;\n  num = num << 0x1d;\n  if (!is_zero) {\n    temp6 = temp5 & 0xff000000;\n    is_zero = temp6 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp6 == 0xff000000;\n  }\n  if (!is_zero) {\n    return CONCAT44(temp3, num) ^ 0x3800000000000000;\n  }\n  if ((temp5 & 0xffffff) == 0) {\n    return CONCAT44(temp3, num);\n  }\n  if (temp6 == 0xff000000) {\n    return CONCAT44(temp3, num) | 0x8000000000000;\n  }\n  temp2 = num;\n  temp5 = temp4;\n  if (temp4 == 0) {\n    temp2 = 0;\n    temp5 = num;\n  }\n  leading_zeros = count_leading_zeroes(temp5);\n  if (temp4 == 0) {\n    leading_zeros = leading_zeros + 0x20;\n  }\n  trailing_zeros = leading_zeros - 0xb;\n  bool temp7 = trailing_zeros < 0x20;\n  bool temp8 = trailing_zeros == 0;\n  bool temp9 = SBORROW4(trailing_zeros, 0x20);\n  if (temp7) {\n    temp9 = SCARRY4(leading_zeros, 0xc);\n    leading_zeros = leading_zeros + -0x1f;\n    temp7 = leading_zeros < 0;\n    temp8 = leading_zeros == 0;\n    temp4 = trailing_zeros;\n    if (!temp8 && temp7 == temp9) {\n      temp2 = temp5 << (trailing_zeros & 0xff);\n      temp5 = temp5 >> (0xcU - leading_zeros & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (temp8 || temp7 != temp9) {\n    temp4 = 0x20 - trailing_zeros;\n  }\n  temp5 = temp5 << (trailing_zeros & 0xff);\n  if (temp8 || temp7 != temp9) {\n    temp5 = temp5 | temp2 >> (temp4 & 0xff);\n  }\n  if (temp8 || temp7 != temp9) {\n    temp2 = temp2 << (trailing_zeros & 0xff);\n  }\n  LAB_08008458:\n  if (trailing_zeros < 0x381) {\n    return CONCAT44(temp5 + (0x380 - trailing_zeros) * 0x100000 | temp1, temp2);\n  }\n  temp4 = ~(0x380 - trailing_zeros);\n  if (0x1e < temp4) {\n    return CONCAT44(temp3, temp5 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = temp4 - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(temp4 - 0x1f, 0xc)) {\n    temp4 = temp4 + 1;\n    return CONCAT44(temp1 | temp5 >> (temp4 & 0xff), temp2 >> (temp4 & 0xff) | temp5 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp3, temp2 >> (0x20 - (0xcU - leading_zeros) & 0xff) | temp5 << (0xcU - leading_zeros & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "bit_shift_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initialize_data_registers_08007ad0",
                "PTR_DAT_08007b68": "pointer_data_08007b68",
                "DAT_08007b6c": "data_08007b6c",
                "_DAT_40000000": "data_register_0",
                "_DAT_40000004": "data_register_1",
                "_DAT_40000008": "data_register_2",
                "_DAT_4000000c": "data_register_3",
                "_DAT_40000010": "data_register_4",
                "_DAT_40000018": "data_register_5",
                "_DAT_4000001c": "data_register_6",
                "_DAT_40000020": "data_register_7",
                "_DAT_40000024": "data_register_8",
                "_DAT_40000028": "data_register_9",
                "_DAT_4000002c": "data_register_10",
                "_DAT_40000034": "data_register_12",
                "_DAT_40000038": "data_register_13",
                "_DAT_4000003c": "data_register_14",
                "_DAT_40000040": "data_register_15",
                "_DAT_40000048": "data_register_16",
                "_DAT_4000004c": "data_register_18",
                "FUN_08007a10": "initialize_function_08007a10",
                "FUN_08007a70": "initialize_function_08007a70"
            },
            "code": "void initialize_data_registers_08007ad0(void)\n{\n  uint64_t result = (uint64_t)DAT_08007b6c * (uint64_t)*(uint32_t *)PTR_DAT_08007b68;\n  uint32_t register_value = (uint32_t)(result >> 56) - 1;\n  uint32_t *data_registers = (uint32_t *)0x40000000;\n  data_registers[0] = 0;\n  data_registers[1] = 0;\n  data_registers[2] = 0;\n  data_registers[3] = 0;\n  data_registers[4] = 0;\n  data_registers[5] = 0;\n  data_registers[6] = 0;\n  data_registers[7] = 0;\n  data_registers[8] = 0;\n  data_registers[9] = register_value;\n  data_registers[10] = 0;\n  data_registers[12] = 0;\n  data_registers[13] = 0;\n  data_registers[14] = 0;\n  data_registers[15] = 0;\n  data_registers[16] = 0;\n  data_registers[18] = 0;\n  data_registers[19] = 0;\n}\n",
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_registers_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = FUN_08008590(local_58);\n      uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = FUN_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = FUN_0800056c(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = FUN_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = FUN_0800056c(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUN_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = FUN_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUN_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUN_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          FUN_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          FUN_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = FUN_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = FUN_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = FUN_08008590(local_34);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            FUN_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = FUN_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          FUN_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            FUN_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_08002fd4",
                "FUN_08008590",
                "FUN_08008bf0",
                "FUN_08000220",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08001f00",
                "FUN_080025e8",
                "FUN_08001e98",
                "FUN_08000478",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_0800525c",
                "FUN_08004bf4",
                "FUN_080098d0",
                "FUN_08009228",
                "FUN_0800056c",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_0800184c",
                "FUN_0800923c",
                "FUN_08008894",
                "FUN_08002408"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "initialize_system_080039a0",
                "FUN_08003980": "initialize_network",
                "FUN_08004228": "initialize_database"
            },
            "code": "void initialize_system_080039a0(void)\n{\n  initialize_network();\n  initialize_database();\n  *(undefined4 *)PTR_DAT_080039b8 = 1;\n  return;\n}",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_system_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "concat_44_08009204",
                "param_1": "low_value",
                "param_2": "high_value",
                "FUN_0800919c": "call_function_1"
            },
            "code": "undefined8 concat_44_08009204(uint32_t low_value, uint32_t high_value)\n{\n  call_function_1();\n  return CONCAT44(high_value, low_value);\n}",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_0800923c"
            ],
            "imported": false,
            "current_name": "concat_44_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "processParamsAndValues_080029d8",
                "param_1": "value1",
                "param_2": "paramPtr",
                "param_3": "valuePtr",
                "iVar1": "result",
                "uVar2": "tempVar",
                "uVar3": "tempVar2"
            },
            "code": "void processParamsAndValues_080029d8(undefined4 value1, int paramPtr, int valuePtr) {\\n    int result = 0;\\n    if ((paramPtr != 0) && (valuePtr != 0)) {\\n        result = FUN_08009214(*(undefined4 *)(paramPtr + 0x18),*(undefined4 *)(paramPtr + 0x1c));\\n        if (result == 0) {\\n            if (*(char *)(paramPtr + 0x25) == \"\\0\") {\\n                result = FUN_08009264(*(undefined4 *)(paramPtr + 0x1c),*(undefined4 *)(valuePtr + 0x18));\\n                if (result != 0) {\\n                    undefined4 tempVar = *(undefined4 *)(paramPtr + 0x1c);\\n                    undefined4 tempVar2 = FUN_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000, *(undefined4 *)(valuePtr + 0x18),*(undefined4 *)(paramPtr + 0x20));\\n                    result = FUN_08009228(tempVar, tempVar2);\\n                    if (result == 0) {\\n                        tempVar2 = FUN_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000, *(undefined4 *)(valuePtr + 0x18),*(undefined4 *)(paramPtr + 0x20));\\n                    }\\n                    else {\\n                        tempVar2 = *(undefined4 *)(paramPtr + 0x1c);\\n                    }\\n                    *(undefined4 *)(paramPtr + 0x18) = tempVar2;\\n                }\\n                else {\\n                    *(undefined4 *)(paramPtr + 0x18) = *(undefined4 *)(paramPtr + 0x1c);\\n                }\\n                *(undefined *)(paramPtr + 0x24) = 1;\\n            }\\n        }\\n    }\\n    return;\\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "processParamsAndValues_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_data_at_address_08007c5e",
                "param_1": "address",
                "_DAT_40000038": "PTR_40000038"
            },
            "code": "void set_data_at_address_08007c5e(void* address, int data) {\n  _DAT_40000038 = data;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_data_at_address_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "FUNC_08005760"
            },
            "code": "\nvoid FUNC_08005760(void)\n\n{\n  FUN_080052ac(*(undefined2 *)(PTR_DAT_08005774 + 0x18));\n  return;\n}\n\n",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "is_end_of_string_08008b24",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_string_08008b24(void)\n{\n  char current_char;\n  FUN_08008b00();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08001d4c",
                "FUN_08004148",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "check_and_set_value_0800587c",
                "PTR_DAT_0800589c": "value_array"
            },
            "code": "void check_and_set_value_0800587c(void)\n{\n  if (PTR_DAT_0800589c[1] == 3) {\n    PTR_DAT_0800589c[1] = 4;\n    PTR_DAT_0800589c[16] = 0;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "check_and_set_value_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "calculate_result_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp6",
                "in_r12": "temp5",
                "bVar4": "is_zero"
            },
            "code": "ulonglong calculate_result_08008a02(uint input1, uint input2, uint input3, uint input4)\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  bool is_zero;\n  \n  temp1 = input4 >> 0x14;\n  temp2 = input2;\n  \n  if (input3 != input4 || temp1 != input4) {\n    if (input3 == input4) {\n      is_zero = ((input1 | (input2 << 0xc)) == 0);\n      if (is_zero && temp1 != input4) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp1 == input4) {\n      temp3 = input3;\n      temp4 = input4;\n      is_zero = ((input3 | (input4 << 0xc)) == 0);\n      if (is_zero) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = ((input1 | (input2 << 1)) == 0);\n      if (!is_zero) {\n        is_zero = ((input3 | (input4 << 1)) == 0);\n      }\n      if (!is_zero) {\n        if (input3 == 0) {\n          temp5 = input2 & 0x80000000;\n          do {\n            temp6 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(temp6 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp5;\n          if (temp1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | (input2 << 1)) != 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if ((input3 | (input4 << 1)) != 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n  }\n  return CONCAT44(temp2,input1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": false,
            "current_name": "calculate_result_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "print_string_0800369c",
                "param_1": "str",
                "local_c": "current_char",
                "FUN_08008250": "print_character"
            },
            "code": "void print_string_0800369c(char *str) {\n  char *current_char = str;\n  while (*current_char != '\\0') {\n    print_character(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_string_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "check_if_param_less_than_sum_08005a98",
                "param_1": "sum",
                "iVar1": "current_sum",
                "uVar2": "rand_num",
                "FUN_08005a84": "get_random_num"
            },
            "code": "void check_if_param_less_than_sum_08005a98(int sum){\n    int current_sum = get_current_sum();\n    uint rand_num;\n    do {\n        rand_num = get_random_num();\n    } while (rand_num < (uint)(sum + current_sum));\n    return;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": false,
            "current_name": "check_if_param_less_than_sum_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "print_data_080044e8",
                "iVar1": "result",
                "uVar2": "decrypted_value",
                "uVar3": "encrypted_value",
                "auStack_18": "stack_array",
                "local_a": "index",
                "local_9": "loop_counter"
            },
            "code": "void print_data_080044e8() {\n  int index;\n  undefined8 encrypted_value;\n  undefined4 decrypted_value;\n  undefined4 stack_array[3];\n  byte loop_counter = 0;\n  while(loop_counter <= 7) {\n    if (loop_counter > 7) {\n      print_string(\"G92\\n\");\n      for (index = 0; index < 3; index++) {\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n          print_data_080044e8(stack_array[index]);\n        }\n        else {\n          encrypted_value = encrypt_data(stack_array[index]);\n          encrypted_value = decrypt_data((int)encrypted_value, (int)((ulonglong)encrypted_value >> 0x20), DAT_08004690, DAT_08004694);\n          decrypted_value = decrypt_data((int)encrypted_value, (int)((ulonglong)encrypted_value >> 0x20));\n          print_data_080044e8(decrypted_value);\n        }\n        if (index < 2) {\n          print_string(\"G92.1\\n\");\n        }\n        else {\n          print_string(\"G92.2\\n\");\n        }\n      }\n      return;\n    }\n    if (!get_data(loop_counter, stack_array)) {\n        break;\n    }\n    print_string(\"G92\\n\");\n    switch(loop_counter) {\n      case 0:\n        print_string(\"G92.1\\n\");\n        break;\n      case 1:\n        print_string(\"G92.2\\n\");\n        break;\n      case 2:\n        print_string(\"G92.3\\n\");\n        break;\n      case 3:\n        print_string(\"G92.4\\n\");\n        break;\n      case 4:\n        print_string(\"G92.5\\n\");\n        break;\n      case 5:\n        print_string(\"G92.6\\n\");\n        break;\n      case 6:\n        print_string(\"G92.7\\n\");\n        break;\n      case 7:\n        print_string(\"G92.8\\n\");\n        break;\n    }\n    for (index = 0; index < 3; index++) {\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n        print_data_080044e8(stack_array[index]);\n      }\n      else {\n        encrypted_value = encrypt_data(stack_array[index]);\n        encrypted_value = decrypt_data((int)encrypted_value, (int)((ulonglong)encrypted_value >> 0x20), DAT_08004690, DAT_08004694);\n        decrypted_value = decrypt_data((int)encrypted_value, (int)((ulonglong)encrypted_value >> 0x20));\n        print_data_080044e8(decrypted_value);\n      }\n      if (index < 2) {\n        print_string(\"G92.1\\n\");\n      }\n      else {\n        print_string(\"G92.2\\n\");\n      }\n    }\n    loop_counter++;\n  }\n  print_data_080044e8(10);\n  return;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_data_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "check_if_param_within_range_08006c9c",
                "param_1": "param",
                "bVar1": "is_within_range"
            },
            "code": "bool check_if_param_within_range_08006c9c(int param) {\n\tbool is_within_range = param < 0x1000000;\n\tif (is_within_range) {\n\t\tDAT_08006cdc[1] = param - 1;\n\t\tFUN_08006b00(0xffffffff, 0xf);\n\t\tDAT_08006cdc[2] = 0;\n\t\t*DAT_08006cdc = 7;\n\t}\n\treturn !is_within_range;\n}",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": false,
            "current_name": "check_if_param_within_range_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = FUN_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        FUN_08008ba0();\n        uVar25 = FUN_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = FUN_0800856c();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = FUN_08008ba0();\n        uVar26 = FUN_0800856c();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = FUN_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = FUN_0800856c(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_080094c0",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800b2e8",
                "FUN_08008b4c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "check_data_0800195c",
                "PTR_DAT_08001990": "data",
                "FUN_080025e8": "execute_process"
            },
            "code": "void check_data_0800195c()\n{\n  if ((PTR_DAT_08001990[1] != '\\x06') && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    execute_process();\n    PTR_DAT_08001990[2] |= 0x40;\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_data_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "is_input_valid_08009214",
                "in_ZR": "input_character",
                "FUN_08009204": "get_input"
            },
            "code": "bool is_input_valid_08009214(void)\n{\n  char input_character;\n  input_character = get_input();\n  return input_character != '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "is_input_valid_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_input_and_allocate_memory_08004dd2",
                "bVar1": "input_byte",
                "iVar2": "allocation_result",
                "PTR_DAT_08004e2c": "memory_allocation_pointer"
            },
            "code": "int check_input_and_allocate_memory_08004dd2() {\n  unsigned char input_byte = get_input_byte();\n  if (input_byte == 5) {\n    int allocation_result = allocate_memory(PTR_DAT_08004e2c, 1, 0x40);\n    if (allocation_result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (input_byte > 4) {\n      return 0;\n    }\n    int allocation_result = allocate_memory(PTR_DAT_08004e2c, 1, 0x28);\n    if (allocation_result == 0) {\n      return 0;\n    }\n    perform_additional_operation(0);\n  }\n  return 1;\n}\n",
            "called": [
                "FUN_08000310",
                "FUN_08004c48",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": false,
            "current_name": "check_input_and_allocate_memory_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "print_data_from_pointer_08005778",
                "PTR_DAT_0800578c": "pointer_to_pointer_to_data",
                "FUN_080052ac": "print_data",
                "*(undefined2 *)PTR_DAT_0800578c": "*(int**)pointer_to_pointer_to_data"
            },
            "code": "void print_data_from_pointer_08005778(void)\n{\n    int* pointer_to_data = *(int**)PTR_DAT_0800578c;\n    print_data(*pointer_to_data);\n    return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "print_data_from_pointer_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "uVar1": "result1",
                "uVar2": "result2",
                "FUNC_08008eec": "multiply",
                "FUNC_08008cd8": "add",
                "FUNC_08008cdc": "subtract",
                "FUNC_08009054": "multiply"
            },
            "code": "undefined4 calculate_result_080028bc(undefined4 num1, undefined4 num2, undefined4 num3)\n{\n  undefined4 result1;\n  undefined4 result2;\n  result1 = multiply(num2,num2);\n  result2 = multiply(num1,num1);\n  result1 = add(result1,result2);\n  result2 = subtract(num3,num3);\n  result1 = multiply(result1,result2);\n  return result1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "FUN_08006628": "calculate_value_08006628",
                "uVar1": "value1",
                "uVar2": "leading_zeroes",
                "PTR_DAT_0800667c": "result_ptr",
                "PTR_DAT_08006678": "index_ptr",
                "DAT_08006674": "data_ptr"
            },
            "code": "uint32_t calculate_value_08006628() {\n    uint32_t value1 = get_value1();\n    uint32_t leading_zeroes = count_leading_zeroes(0xf000000);\n    uint32_t* PTR_DAT_0800667c = (uint32_t*)PTR_DAT_0800667c;\n    uint32_t index = (*(uint32_t*)(DAT_08006674 + 8) & 0xf0) >> (leading_zeroes & 0xff);\n    *PTR_DAT_0800667c = value1 >> index;\n    return *(uint32_t*)PTR_DAT_0800667c;\n}",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_0800618c",
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "imported": false,
            "current_name": "calculate_value_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "update_param_if_bit_set_0800738e",
                "param_1": "param",
                "DAT_080073bc": "ptr_dat_080073bc",
                "PTR_DAT_080073bc_plus_0x14": "ptr_dat_080073bc_plus_0x14",
                "mask": "mask"
            },
            "code": "void update_param_if_bit_set_0800738e(uint16_t param) {\n    uint32_t* PTR_DAT_080073bc_plus_0x14 = (uint32_t*)(DAT_080073bc + 0x14);\n    uint32_t mask = *PTR_DAT_080073bc_plus_0x14;\n    if ((uint32_t)param & mask) {\n        *PTR_DAT_080073bc_plus_0x14 = (uint32_t)param;\n        do_nothing_080073c0(param);\n    }\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "update_param_if_bit_set_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  FUN_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = FUN_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      FUN_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            FUN_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      FUN_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_080052dc",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_080057e4",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "copy_data_and_call_functions_080092c4",
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_0800930c": "data_ptr_start",
                "PTR_DAT_08009304": "data_start",
                "PTR_DAT_08009308": "data_end",
                "DAT_08009300": "source_data",
                "PTR_DAT_08009310": "data_ptr_end",
                "FUN_0800756c": "call_function_1",
                "FUN_0800b3e8": "call_function_2",
                "FUN_08007540": "call_function_3"
            },
            "code": "void copy_data_and_call_functions_080092c4(void)\n{\n  int index;\n  undefined4 *data_ptr;\n  code *jump_table;\n  for (index = 0; PTR_DAT_08009304 + index < PTR_DAT_08009308; index += 4) {\n    *(undefined4 *)(PTR_DAT_08009304 + index) = *(undefined4 *)(DAT_08009300 + index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_0800930c; data_ptr < PTR_DAT_08009310; data_ptr++) {\n    *data_ptr = 0;\n  }\n  call_function_1();\n  call_function_2();\n  jump_table = (code *)0x80092fa;\n  call_function_3();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_08007540",
                "FUN_0800756c",
                "FUN_0800b3e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_call_functions_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "call_function_08008250",
                "param_1": "data",
                "FUN_08007e1c": "original_function"
            },
            "code": "void call_function_08008250(void* data)\n{\n    original_function(data);\n    return;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "imported": false,
            "current_name": "call_function_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "check_character_0800184c",
                "param_1": "output",
                "param_2": "input_length",
                "param_3": "index",
                "param_4": "input_string",
                "uVar2": "status",
                "iVar1": "result"
            },
            "code": "int check_character_0800184c(byte *output, int input_length, int index, byte *input_string)\n{\n  int status = 1;\n  if (*(char *)(input_length + (uint)*input_string) == \"\\0\") \n  {\n    status = 0;\n  }\n  else \n  {\n    *output = *(byte *)(input_length + (uint)*input_string);\n    if ((*output < 0x41) || (0x5a < *output)) \n    {\n      *PTR_DAT_080018c8 = 2;\n      status = 0;\n    }\n    else \n    {\n      *input_string = *input_string + 1;\n      int result = check_character_0800184c(output, input_length, index, input_string);\n      if (result == 0) \n      {\n        *PTR_DAT_080018c8 = 1;\n        status = 0;\n      }\n    }\n  }\n  return status;\n}",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_character_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = FUN_08008590(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = FUN_08008590(uVar1);\n  uVar5 = thunk_FUN_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = FUN_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = FUN_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = FUN_08008590(uVar1);\n  uVar6 = FUN_08008590(local_34 & 0x7fffffff);\n  uVar5 = FUN_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = FUN_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = FUN_08008590(uVar1);\n    uVar5 = FUN_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = FUN_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = FUN_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = FUN_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      FUN_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009250",
                "FUN_08009410",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_080096e8",
                "FUN_08008640",
                "FUN_08008bf0",
                "thunk_FUN_08009990",
                "FUN_08008cdc",
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_0800923c",
                "FUN_0800981c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "call_function_with_param_08006ce0",
                "param_1": "argument",
                "FUN_08006950": "call_function"
            },
            "code": "void call_function_with_param_08006ce0(undefined4 argument)\n{\n  call_function(argument);\n  return;\n}",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "call_function_with_param_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "print_character_08006d4a",
                "param_1": "character",
                "FUN_080069e4": "print_to_screen"
            },
            "code": "void print_character_08006d4a(char character) {\n  print_to_screen((int)character);\n  return;\n}",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08001994",
                "FUN_080098d0",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "process_input_08000374",
                "param_1": "input_length",
                "param_2": "input_string",
                "param_3": "starting_index",
                "local_1c": "remaining_length",
                "local_18": "current_char",
                "local_14": "starting_index",
                "local_9": "checksum"
            },
            "code": "void process_input_08000374(int input_length, char *input_string, int starting_index)\\n{\\n  int remaining_length = input_length;\\n  char *current_char = input_string;\\n  char checksum = \"\\0\";\\n  if (*(int *)PTR_DAT_080003e8 == 0) {\\n    initialize();\\n    current_char = input_string;\\n    starting_index = input_length;\\n  }\\n  for (; remaining_length != 0; remaining_length--) {\\n    checksum = (checksum != \"\\0\") + *current_char;\\n    write_byte(starting_index, *current_char);\\n    current_char++;\\n    starting_index++;\\n  }\\n  write_byte(starting_index, checksum);\\n  return;\\n}",
            "called": [
                "FUN_080002f0",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004bf4",
                "FUN_08004bc0",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "process_input_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absolute_value",
                "FUN_08008250": "print_character",
                "FUN_08003778": "print_integer"
            },
            "code": "void print_absolute_value_080037fc(int value)\n{\n  int absolute_value;\n  absolute_value = value;\n  if (value < 0) {\n    print_character('-');\n    absolute_value = -value;\n  }\n  print_integer(absolute_value);\n  return;\n}",
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_absolute_value_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "calculate_0800a1bc",
                "param_1": "dividend",
                "param_2": "divisor",
                "uVar1": "quotient",
                "uVar2": "remainder",
                "iVar3": "iterator",
                "uVar4": "bit",
                "uVar5": "unused",
                "uVar6": "shifted_dividend",
                "uVar7": "unused",
                "uVar8": "shifted_divisor",
                "uVar9": "difference",
                "uVar10": "unused",
                "uVar11": "bit_count",
                "uVar12": "unused",
                "uVar13": "unused",
                "uVar14": "product",
                "undefined4": "unused",
                "undefined8": "unused"
            },
            "code": "uint calculate_0800a1bc(uint dividend, uint divisor)\n{\n  uint quotient = 0;\n  uint remainder = 0;\n  uint bit = 0x80000000;\n  uint shifted_divisor = 0;\n  uint sign_bit = 0;\n  \n  if ((0x0800a340 & ~divisor) == 0) {\n    uint64_t product = multiply(dividend, divisor);\n    quotient = divide(product, divisor);\n    return quotient;\n  }\n  if ((int)divisor < 1) {\n    if ((divisor & 0x7fffffff | dividend) == 0) {\n      return dividend;\n    }\n    if (divisor != 0) {\n      uint64_t product = multiply(dividend, divisor);\n      quotient = divide(product, dividend);\n      return quotient;\n    }\n    do {\n      uint shifted_dividend = dividend << 0x15;\n      uint shifted_bit = dividend >> 0xb;\n      bit >>= 1;\n      shifted_divisor = shifted_dividend | shifted_bit;\n    } while (shifted_bit == 0);\n  } else {\n    bit = 0x80000000 >> 0x14;\n    shifted_divisor = dividend;\n    if (bit != 0) {\n      while (bit != 0) {\n        shifted_dividend = shifted_divisor >> 1;\n        shifted_divisor = shifted_dividend | dividend;\n        bit >>= 1;\n      }\n    }\n  }\n  quotient = 0;\n  remainder = 0;\n  sign_bit = (dividend ^ divisor) >> 0x1f;\n  bit = 0x80000000 >> sign_bit;\n  while (bit != 0) {\n    remainder <<= 1;\n    shifted_divisor <<= 1;\n    if ((shifted_divisor | bit) <= dividend) {\n      remainder |= 1;\n      dividend -= (shifted_divisor | bit);\n    }\n    bit >>= 1;\n  }\n  quotient = remainder;\n  return quotient;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_08008894"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "calculate_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "check_and_set_input_0800525c",
                "param_1": "input_char",
                "PTR_DAT_080052a8": "current_ptr",
                "FUN_08002fd4": "error_handler",
                "FUN_08005250": "end_of_input_handler",
                "do_nothing_0800522c": "handle_invalid_input",
                "do_nothing_08005220": "handle_valid_input",
                "do_nothing_08005208": "input_processed"
            },
            "code": "void check_and_set_input_0800525c(char input_char)\n{\n  int current_input = (int)input_char;\n  int *PTR_DAT_080052a8 = PTR_DAT_080052a8;\n  if (current_input != (uint)(byte)*PTR_DAT_080052a8) {\n    FUN_08002fd4();\n    if (input_char == '\\0') {\n      FUN_08005250();\n    }\n    else {\n      if (input_char < '\\x01') {\n        do_nothing_0800522c();\n      }\n      else {\n        do_nothing_08005220();\n      }\n      do_nothing_08005208();\n    }\n    *PTR_DAT_080052a8 = current_input;\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_08002fd4",
                "FUN_0800522c",
                "FUN_08005220",
                "FUN_08005208"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_and_set_input_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_bit_in_short_at_offset_080073d4",
                "param_1": "bit_offset",
                "*PTR_DAT_0801b3a4": "short_ptr",
                "DAT_0802001a": "short_offset",
                "PTR_DAT_0801b3a4": "short_ptr",
                "DAT_080073d4": "bit_mask"
            },
            "code": "void set_bit_in_short_at_offset_080073d4(uint8_t bit_offset)\n{\n    uint16_t* *PTR_DAT_0801b3a4 = (uint16_t*)(0x4002001a + ((int)bit_offset >> 4) * 0x400);\n    uint8_t DAT_080073d4 = 1 << (bit_offset & 0xf);\n    **PTR_DAT_0801b3a4 |= DAT_080073d4;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_at_offset_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "print_character_08006dfe",
                "param_1": "character_to_print",
                "FUN_08006a8c": "print_ascii_code"
            },
            "code": "void print_character_08006dfe(char character_to_print)\n{\n  print_ascii_code((int)character_to_print);\n  return;\n}",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "execute_program_08006d66",
                "FUN_08006c70": "initialize_program"
            },
            "code": "void execute_program_08006d66(void)\n{\n  initialize_program();\n  return;\n}",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "execute_program_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "update_registers_08006e88",
                "param_1": "registers",
                "param_2": "changes",
                "uVar1": "bit_value",
                "uVar2": "bit_mask",
                "iVar3": "register_index",
                "local_c": "bit_mask"
            },
            "code": "void update_registers_08006e88(uint *registers, uint *changes)\n{\n    uint bit_mask;\n    uint bit_value;\n    int register_index;\n\n    for (bit_mask = 0; bit_mask < 0x10; bit_mask++) {\n        bit_value = 1 << (bit_mask & 0xff);\n        if ((*changes & bit_value) == bit_value) {\n            if ((changes[1] == 2) || (changes[1] == 0x12)) {\n                uint new_value = changes[4];\n                uint register_offset = (bit_mask >> 3) + 8;\n                registers[register_offset] = registers[register_offset] & ~(0xf << ((bit_mask & 7) << 2));\n                registers[register_offset] = registers[register_offset] | new_value << ((bit_mask & 7) << 2);\n            }\n            *registers = *registers & ~(3 << ((bit_mask & 0x7f) << 1));\n            *registers = *registers | (changes[1] & 3) << ((bit_mask & 0x7f) << 1);\n            if ((((changes[1] == 1) || (changes[1] == 2)) || (changes[1] == 0x11)) || (changes[1] == 0x12)) {\n                registers[2] = registers[2] & ~(3 << ((bit_mask & 0x7f) << 1));\n                registers[2] = registers[2] | changes[3] << ((bit_mask & 0x7f) << 1);\n                registers[1] = registers[1] & ~(1 << (bit_mask & 0xff));\n                registers[1] = registers[1] | (changes[1] >> 4 & 1) << (bit_mask & 0xff);\n            }\n            registers[3] = registers[3] & ~(3 << ((bit_mask & 0x7f) << 1));\n            registers[3] = registers[3] | changes[2] << ((bit_mask & 0x7f) << 1);\n            if ((changes[1] & 0x10000000) != 0) {\n                *(uint *)(PTR_DAT_0800719c + 0x44) = *(uint *)(PTR_DAT_0800719c + 0x44) | 0x4000;\n                *(uint *)(PTR_DAT_080071a0 + ((bit_mask >> 2) + 2) * 4) = ~(0xf << ((bit_mask & 3) << 2)) & *(uint *)(PTR_DAT_080071a0 + ((bit_mask >> 2) + 2) * 4);\n                if (registers == PTR_DAT_080071a4) {\n                    register_index = 0;\n                }\n                else if (registers == PTR_DAT_080071a8) {\n                    register_index = 1;\n                }\n                else if (registers == PTR_DAT_080071ac) {\n                    register_index = 2;\n                }\n                else if (registers == PTR_DAT_080071b0) {\n                    register_index = 3;\n                }\n                else if (registers == PTR_DAT_080071b4) {\n                    register_index = 4;\n                }\n                else if (registers == PTR_DAT_080071b8) {\n                    register_index = 5;\n                }\n                else if (registers == PTR_DAT_080071bc) {\n                    register_index = 6;\n                }\n                else if (registers == PTR_DAT_080071c0) {\n                    register_index = 7;\n                }\n                else if (registers == PTR_DAT_080071c4) {\n                    register_index = 8;\n                }\n                else {\n                    register_index = 10;\n                }\n                *(uint *)(PTR_DAT_080071a0 + ((bit_mask >> 2) + 2) * 4) = register_index << ((bit_mask & 3) << 2) | *(uint *)(PTR_DAT_080071a0 + ((bit_mask >> 2) + 2) * 4);\n                *PTR_DAT_080071cc = ~bit_value & *PTR_DAT_080071cc;\n                PTR_DAT_080071cc[1] = ~bit_value & PTR_DAT_080071cc[1];\n                if ((changes[1] & 0x10000) != 0) {\n                    *PTR_DAT_080071cc = bit_value | *PTR_DAT_080071cc;\n                }\n                if ((changes[1] & 0x20000) != 0) {\n                    PTR_DAT_080071cc[1] = bit_value | PTR_DAT_080071cc[1];\n                }\n                PTR_DAT_080071cc[2] = ~bit_value & PTR_DAT_080071cc[2];\n                PTR_DAT_080071cc[3] = ~bit_value & PTR_DAT_080071cc[3];\n                if ((changes[1] & 0x100000) != 0) {\n                    PTR_DAT_080071cc[2] = bit_value | PTR_DAT_080071cc[2];\n                }\n                if ((changes[1] & 0x200000) != 0) {\n                    PTR_DAT_080071cc[3] = bit_value | PTR_DAT_080071cc[3];\n                }\n            }\n        }\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_registers_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_binary_representation_of_uint_080036f0",
                "param_1": "number",
                "param_2": "num_bits",
                "local_10": "i",
                "local_c": "mask",
                "uVar1": "binary_digit"
            },
            "code": "void print_binary_representation_of_uint_080036f0(uint number, int num_bits) {\n    uint mask = 1 << (num_bits - 1);\n    for (int i = 0; i < num_bits; i++) {\n        if ((mask & number) == 0) {\n            putchar('0');\n        }\n        else {\n            putchar('1');\n        }\n        mask = mask >> 1;\n    }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "imported": false,
            "current_name": "print_binary_representation_of_uint_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "execute_three_functions_08002edc",
                "FUN_08002a94": "call_first_function",
                "FUN_08002ba8": "call_second_function",
                "FUN_08002e08": "call_third_function"
            },
            "code": "void execute_three_functions_08002edc(void)\n{\n  call_first_function();\n  call_second_function();\n  call_third_function();\n  return;\n}",
            "called": [
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002a94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "imported": false,
            "current_name": "execute_three_functions_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "copy_data_to_buffer_0800375c",
                "param_1": "data",
                "FUN_080036f0": "copy_data",
                "0x10": "buffer_size"
            },
            "code": "void copy_data_to_buffer_0800375c(char* data){\n  copy_data(data, 0x10);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_var_1",
                "uVar2": "temp_var_2",
                "uVar3": "result_3",
                "uVar4": "result_2",
                "uVar5": "result_1",
                "uVar6": "concat_var_1"
            },
            "code": "uint calculate_result_08009990(uint input_1,uint input_2,uint input_3,uint input_4)\n{\n  int temp_var_1;\n  undefined4 temp_var_2;\n  uint result_1;\n  uint result_2;\n  uint result_3;\n  undefined8 concat_var_1;\n  \n  concat_var_1 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  result_2 = input_4 & 0x7fffffff;\n  if ((DAT_08009b18 < (result_2 | (-input_3 | input_3) >> 0x1f)) ||\n     (result_3 = input_2 & 0x7fffffff, DAT_08009b18 < (result_3 | (-input_1 | input_1) >> 0x1f))) {\n    result_2 = calculate_result_08009990_2(input_3,input_4,input_1,input_2);\n  }\n  else {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      result_2 = calculate_result_08009990_3();\n      return result_2;\n    }\n    result_1 = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((result_3 | input_1) == 0) {\n      result_2 = DAT_08009af0;\n      if ((result_1 != 2) && (result_2 = input_1, result_1 == 3)) {\n        result_2 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((result_2 | input_3) != 0) {\n        if (result_2 == DAT_08009b18) {\n          result_1 = result_1 - 1;\n          if (result_3 == result_2) {\n            if (2 < result_1) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + result_1 * 8);\n          }\n          if (result_1 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + result_1 * 8);\n          }\n          return 0;\n        }\n        if (result_3 != DAT_08009b18) {\n          temp_var_1 = (int)(result_3 - result_2) >> 0x14;\n          if ((int)(result_3 - result_2) < 0x3d00000) {\n            if (((int)input_4 < 0) && (temp_var_1 + 0x3c < 0 != SCARRY4(temp_var_1,0x3c))) {\n              concat_var_1 = 0;\n            }\n            else {\n              calculate_result_08009990_4(input_1,input_2,input_3,input_4,input_4);\n              do_nothing_0800b2cc();\n              concat_var_1 = calculate_result_08009990_3();\n            }\n          }\n          temp_var_2 = (undefined4)((ulonglong)concat_var_1 >> 0x20);\n          result_2 = (uint)concat_var_1;\n          if (result_1 == 1) {\n            return result_2;\n          }\n          if (result_1 == 2) {\n            concat_var_1 = calculate_result_08009990_5(result_2,temp_var_2,DAT_08009ae8,DAT_08009aec);\n            result_2 = calculate_result_08009990_5(DAT_08009af0,DAT_08009af4,(int)concat_var_1,(int)((ulonglong)concat_var_1 >> 0x20));\n            return result_2;\n          }\n          if (result_1 == 0) {\n            return result_2;\n          }\n          concat_var_1 = calculate_result_08009990_5(result_2,temp_var_2,DAT_08009ae8,DAT_08009aec);\n          result_2 = calculate_result_08009990_5((int)concat_var_1,(int)((ulonglong)concat_var_1 >> 0x20),DAT_08009af0,DAT_08009af4)\n          ;\n          return result_2;\n        }\n      }\n      result_2 = DAT_08009b08;\n      if (-1 < (int)input_2) {\n        result_2 = DAT_08009b00;\n      }\n    }\n  }\n  return result_2;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800af78",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": false,
            "current_name": "calculate_result_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "is_bit_set_08007e58",
                "DAT_08007e80": "bitmask",
                "0x20": "BITMASK_FLAG"
            },
            "code": "bool is_bit_set_08007e58(void)\n{\n  bool is_set = (*DAT_08007e80 & BITMASK_FLAG) != 0;\n  return is_set;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "is_bit_set_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "initialize_values_080059f8",
                "DAT_08005a4c": "data_ptr"
            },
            "code": "int initialize_values_080059f8()\n{\n    int* DAT_08005a4c = (int*)DAT_08005a4c;\n    * (DAT_08005a4c + 0x20) = -1;\n    * (DAT_08005a4c + 0x20) = 0;\n    * (DAT_08005a4c + 0x24) = -1;\n    * (DAT_08005a4c + 0x24) = 0;\n    * (DAT_08005a4c + 0x10) = -1;\n    * (DAT_08005a4c + 0x10) = 0;\n    * (DAT_08005a4c + 0x14) = -1;\n    * (DAT_08005a4c + 0x14) = 0;\n    * (DAT_08005a4c + 0x18) = -1;\n    * (DAT_08005a4c + 0x18) = 0;\n    do_nothing_08005a5c();\n    return 0;\n}",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "initialize_values_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "current_char",
                "bVar2": "current_char",
                "uVar3": "result",
                "PTR_DAT_08004028": "is_parenthesis_open",
                "PTR_DAT_08004020": "buffer_index",
                "PTR_DAT_08004024": "input_buffer",
                "PTR_DAT_0800401c": "is_exit_requested",
                "FUN_08008286": "get_next_char",
                "FUN_08003a74": "print_error_message",
                "FUN_08003b98": "process_input_buffer",
                "FUN_08004030": "print_result",
                "FUN_08003980": "clear_buffer"
            },
            "code": "void process_input_08003f34(void)\n{\n  char current_char;\n  int PTR_DAT_08004028 = 0;\n  char PTR_DAT_08004024[50];\n  int PTR_DAT_08004020 = 0;\n  int is_buffer_full = 0;\n  int PTR_DAT_0800401c = 0;\n  while(1) {\n    current_char = get_next_char();\n    if (current_char == 0xff) {\n      return;\n    }\n    if ((current_char == 10) || (current_char == 0xd)) {\n      if (PTR_DAT_08004028) {\n        continue;\n      }\n      if (is_buffer_full) {\n        print_error_message();\n        clear_buffer();\n      }\n      else {\n        PTR_DAT_08004024[PTR_DAT_08004020] = '\\0';\n        int result = process_PTR_DAT_08004024(PTR_DAT_08004024);\n        print_result(result);\n        clear_buffer();\n      }\n    }\n    else {\n      if (is_buffer_full) {\n        continue;\n      }\n      if (current_char == '(') {\n        PTR_DAT_08004028 = 1;\n      }\n      else if (current_char == ')') {\n        PTR_DAT_08004028 = 0;\n      }\n      else if ((current_char < 'a') || ('z' < current_char)) {\n        continue;\n      }\n      else {\n        if (current_char >= 'a') {\n          current_char -= 'a' - 'A';\n        }\n        PTR_DAT_08004024[PTR_DAT_08004020] = current_char;\n        PTR_DAT_08004020++;\n        is_buffer_full = (PTR_DAT_08004020 == 50);\n      }\n    }\n  }\n}\n",
            "called": [
                "FUN_08008286",
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_input_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_signed_dividend_080095b8",
                "param_1": "dividend",
                "param_2": "divisor",
                "uVar1": "carry_mask",
                "uVar2": "shift_amount",
                "uVar3": "normalized_divisor",
                "uVar4": "sign",
                "uVar5": "shifted_divisor",
                "iVar4": "sign",
                "CARRY4": "has_carry",
                "FUN_08008ba0": "handle_divide_by_zero"
            },
            "code": "int calculate_signed_dividend_080095b8(uint dividend, uint divisor)\n{\n  uint shift_amount;\n  uint normalized_divisor;\n  int sign;\n  uint quotient;\n  \n  shift_amount = (divisor << 1) >> 0x15;\n  sign = (int)divisor < 0 ? -1 : 1;\n  normalized_divisor = divisor & 0xfffff | 0x100000;\n  if ((int)(shift_amount - 0x3ff) < 0x14 && (int)(shift_amount - 0x3ff) >= 0)\n  {\n    if (shift_amount != 0xffffffff)\n    {\n      sign = 0;\n    }\n    return sign;\n  }\n  else if (shift_amount > 0x1e)\n  {\n    return FUN_08008ba0();\n  }\n  else if (shift_amount < 0x14)\n  {\n    quotient = normalized_divisor + (0x80000 >> (shift_amount & 0xff)) >> (0x14 - shift_amount & 0xff);\n    if (shift_amount != 0x14)\n    {\n      quotient |= (0x80000000 >> (shift_amount - 0x413 & 0xff)) + dividend >> (0x34 - shift_amount & 0xff);\n    }\n  }\n  else\n  {\n    quotient = normalized_divisor << (shift_amount - 0x413 & 0xff) | dividend << (shift_amount - 0x433 & 0xff);\n  }\n  return quotient * sign;\n}",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08001994",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_signed_dividend_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "print_result_to_stdout_08006cf6",
                "param_1": "character",
                "param_2": "result1",
                "param_3": "result2",
                "uVar1": "first_result",
                "FUN_08006998": "get_first_result",
                "FUN_08006ba0": "combine_results",
                "FUN_08006b00": "print_to_stdout"
            },
            "code": "void print_result_to_stdout_08006cf6(char character, int result1, int result2)\n{\n  int first_result = get_first_result();\n  int final_result = combine_results(first_result, result1, result2);\n  print_to_stdout((int)character, final_result);\n  return;\n}",
            "called": [
                "FUN_08006b00",
                "FUN_08006998",
                "FUN_08006ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "print_result_to_stdout_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "copy_and_modify_data_08002ef0",
                "uVar1": "modified_data",
                "*PTR_DAT_08002f1c": "*destination_data",
                "*PTR_DAT_08002f18": "*source_data",
                "FUN_08002870": "modify_data",
                "*PTR_DAT_08002f20": "*modified_data_address"
            },
            "code": "void copy_and_modify_data_08002ef0(void)\n{\n  int* source_data = PTR_DAT_08002f18;\n  int* destination_data = PTR_DAT_08002f1c;\n  int modified_data = modify_data(*PTR_DAT_08002f18);\n  *PTR_DAT_08002f1c = *PTR_DAT_08002f18;\n  *PTR_DAT_08002f20 = modified_data;\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": false,
            "current_name": "copy_and_modify_data_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "print_numbers_08001d4c",
                "local_9": "count",
                "cVar1": "current_number",
                "FUN_08005790": "initialize_printer",
                "FUNC_08001994": "print_number",
                "PTR_DAT_08001dd8": "PTR_DAT",
                "do_nothing_08002814": "do_nothing",
                "FUN_080057e4": "finalize_printer"
            },
            "code": "void print_numbers_08001d4c(void)\\n{\\n  char current_number;\\n  char count;\\n  initialize_printer();\\n  print_number(4,1,0,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\\n  print_number(3,1,0,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\\n  do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\\n  count = 2;\\n  while( true ) {\\n    current_number = count + -1;\\n    if (count == \"\\0\") break;\\n    print_number(7,0,1,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\\n    do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\\n    count = current_number;\\n    if (\"\\0\" < current_number) {\\n      print_number(7,1,0,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\\n      do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\\n    }\\n  }\\n  finalize_printer();\\n  return;\\n}",
            "called": [
                "FUN_08001994",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08002814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "print_numbers_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculate_result_08000268",
                "iVar1": "result",
                "FUN_08005a84": "call_function",
                "DAT_0800029c": "global_data",
                "DAT_08000298": "data_pointer"
            },
            "code": "int calculate_result_08000268(void)\n{\n  int result = call_function();\n  int offset = *(uint *)(DAT_08000298 + 8) >> 3;\n  int constant = 1000;\n  int product = (unsigned long long)DAT_0800029c * (unsigned long long)offset >> 33;\n  int final_result = (result + 1) * constant - product;\n  return final_result;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": false,
            "current_name": "calculate_result_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "print_uint_as_string_08003778",
                "param_1": "num",
                "local_1c": "quotient",
                "acStack_15": "reversed_digits",
                "local_9": "remainder"
            },
            "code": "void print_uint_as_string_08003778(uint num)\n{\n  uint quotient;\n  uint remainder;\n  char reversed_digits[12];\n  uint digit_index = 0;\n  reversed_digits[digit_index] = '0';\n  if (num == 0) {\n    print_char('0');\n  }\n  else {\n    for (quotient = num; quotient != 0; quotient = quotient / 10)\n    {\n      remainder = quotient % 10;\n      digit_index++;\n      reversed_digits[digit_index] = (char)(remainder + '0');\n    }\n    for (; digit_index != 0; digit_index--)\n    {\n      print_char(reversed_digits[digit_index]);\n    }\n  }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": false,
            "current_name": "print_uint_as_string_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "get_value_from_pointer_to_pointer_0800b3dc",
                "PTR_PTR_DAT_0800b3e4": "ptr_ptr_data"
            },
            "code": "int get_value_from_pointer_to_pointer_0800b3dc() {\n  int* pointer_to_value = *(int**)PTR_PTR_DAT_0800b3e4;\n  return *pointer_to_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_to_pointer_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "print_options_080046d0",
                "bVar1": "option",
                "cVar2": "c",
                "uVar3": "func_result",
                "uVar4": "func_wrapper"
            },
            "code": "void print_options_080046d0()\\n{\\n    byte option; \\n    char c; \\n    undefined4 uVar3; \\n    undefined8 uVar4; \\n\\n    if (4 < (byte)PTR_DAT_08004890[1]) {\\n        print_string(PTR_DAT_080048a8);\\n        print_char((byte)PTR_DAT_08004890[0x1c] + 0x36);\\n        if (PTR_DAT_08004890[0x19] == \"\\0\") {\\n            if (PTR_DAT_08004890[0x1a] == \"\\x01\") {\\n                print_string(PTR_DAT_080048ac);\\n            }\\n            else {\\n                print_string(PTR_DAT_080048b0);\\n            }\\n        }\\n        else {\\n            print_string(PTR_DAT_080048b4);\\n        }\\n        if (PTR_DAT_08004890[3] == \"\\0\") {\\n            print_string(PTR_DAT_080048bc);\\n        }\\n        else {\\n            print_string(PTR_DAT_080048b8);\\n        }\\n        if (PTR_DAT_08004890[4] == \"\\0\") {\\n            print_string(PTR_DAT_080048c4);\\n        }\\n        else {\\n            print_string(PTR_DAT_080048c0);\\n        }\\n        if (PTR_DAT_08004890[2] == \"\\0\") {\\n            print_string(PTR_DAT_080048cc);\\n        }\\n        else {\\n            print_string(PTR_DAT_080048c8);\\n        }\\n        option = PTR_DAT_08004890[5];\\n        if (option == 2) {\\n            print_string(PTR_DAT_080048d8);\\n        }\\n        else if (option < 3) {\\n            if (option == 0) {\\n                print_string(PTR_DAT_080048d0);\\n            }\\n            else if (option == 1) {\\n                print_string(PTR_DAT_080048d4);\\n            }\\n        }\\n        c = PTR_DAT_08004890[6];\\n        if (c == \"\\x01\") {\\n            print_string(PTR_DAT_080048dc);\\n        }\\n        else if (c < \"\\x02\") {\\n            if (c == -1) {\\n                print_string(PTR_DAT_080048e0);\\n            }\\n            else if (c == \"\\0\") {\\n                print_string(PTR_DAT_080048e4);\\n            }\\n        }\\n        option = PTR_DAT_08004890[7];\\n        if (option == 2) {\\n            print_string(PTR_DAT_080048f0);\\n        }\\n        else if (option < 3) {\\n            if (option == 0) {\\n                print_string(PTR_DAT_080048e8);\\n            }\\n            else if (option == 1) {\\n                print_string(PTR_DAT_080048ec);\\n            }\\n        }\\n        print_string(PTR_DAT_080048f4);\\n        print_char(PTR_DAT_08004890[0x18]);\\n        print_string(PTR_DAT_080048f8);\\n        if (PTR_DAT_08004890[3] == \"\\0\") {\\n            print_func(*(undefined4 *)(PTR_DAT_08004890 + 8));\\n        }\\n        else {\\n            uVar4 = get_func(*(undefined4 *)(PTR_DAT_08004890 + 8));\\n            uVar4 = func_wrapper((int)uVar4,(int)((ulonglong)uVar4 >> 0x20),DAT_08004888,DAT_0800488c);\\n            uVar3 = get_func_result((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\\n            print_func(uVar3);\\n        }\\n        print_string(PTR_DAT_080048fc);\\n        return;\\n    }\\n    (*(code *)(&switchD_080046de::switchdataD_080046e4)[(byte)PTR_DAT_08004890[1]])();\\n    return;\\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_080037fc",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_options_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "calculate_result_08006d72",
                "param_1": "input",
                "uVar1": "result",
                "FUN_08006c9c": "perform_calculation"
            },
            "code": "int calculate_result_08006d72(int input) {\n  int result = perform_calculation(input);\n  return result;\n}",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "calculate_result_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "set_bit_and_clear_other_bits_0800756c",
                "DAT_080075bc": "bit_field_ptr",
                "DAT_080075c0": "bit_field_ptr_1",
                "DAT_080075c4": "some_ptr"
            },
            "code": "void set_bit_and_clear_other_bits_0800756c(void)\n{\n  unsigned int* DAT_080075bc = DAT_080075bc;\n  unsigned int bit_mask = 1;\n  *DAT_080075bc = *DAT_080075bc | bit_mask;\n  DAT_080075bc[2] = 0;\n  bit_mask = 0xfef6ffff;\n  *DAT_080075bc = *DAT_080075bc & bit_mask;\n  DAT_080075bc[1] = DAT_080075c0;\n  bit_mask = 0xfffbffff;\n  *DAT_080075bc = *DAT_080075bc & bit_mask;\n  DAT_080075bc[3] = 0;\n  unsigned int* DAT_080075c4 = (unsigned int*)(DAT_080075c4 + 8);\n  *DAT_080075c4 = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "set_bit_and_clear_other_bits_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "initializeData_080001f8",
                "*PTR_DAT_0800020c": "dataPointer",
                "FUN_08000210": "executeStartupRoutine"
            },
            "code": "void initializeData_080001f8()\n{\n    **PTR_DAT_0800020c = 0;\n    executeStartupRoutine();\n    return;\n}",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initializeData_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "get_data_pointer_08002f74",
                "puVar1": "data_ptr",
                "PTR_DAT_08002fa0": "data_start",
                "PTR_DAT_08002fa4": "data_end",
                "PTR_DAT_08002fa8": "data_table"
            },
            "code": "uint8_t* get_data_pointer_08002f74() {\n  uint8_t* data_ptr;\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4) {\n    data_ptr = NULL;\n  }\n  else {\n    data_ptr = PTR_DAT_08002fa8 + (uint8_t)*PTR_DAT_08002fa4 * 0x40;\n  }\n  return data_ptr;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "imported": false,
            "current_name": "get_data_pointer_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "counter",
                "ppcVar2": "function",
                "iVar3": "num_functions",
                "PTR_DAT_0800b420": "PTR_FUNCTION_LIST_END",
                "PTR_DAT_0800b424": "PTR_FUNCTION_LIST_START",
                "PTR_DAT_0800b42c": "PTR_FUNCTION_LIST2_START",
                "PTR_DAT_0800b428": "PTR_FUNCTION_LIST2_END"
            },
            "code": "void execute_functions_0800b3e8()\n{\n  int num_functions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function = (code **)PTR_DAT_0800b424;\n    do {\n      i++;\n      (**function)();\n      function++;\n    } while (num_functions != i);\n  }\n  \n  code **function2 = (code **)PTR_DAT_0800b42c;\n  int num_functions2 = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c >> 2;\n  do_nothing();\n  num_functions2 = num_functions2 >> 2;\n  if (num_functions2 != 0) {\n    int i = 0;\n    do {\n      i++;\n      (**function2)();\n      function2++;\n    } while (num_functions2 != i);\n  }\n  return;\n}",
            "called": [
                "FUN_080001ac",
                "FUN_0800b4d0",
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "execute_functions_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "calculate_result_080096e8",
                "param_1": "input_value",
                "param_2": "input_flag",
                "uVar1": "result",
                "uVar2": "operation_type",
                "local_28": "temp_value_1",
                "uStack_24": "temp_value_2",
                "local_20": "temp_value_3",
                "uStack_1c": "temp_value_4"
            },
            "code": "undefined4 calculate_result_080096e8(undefined4 input_value, uint input_flag) \\n\\\n    { \\n\\\n        undefined4 result; \\n\\\n        uint operation_type; \\n\\\n        undefined4 temp_value_1; \\n\\\n        undefined4 temp_value_2; \\n\\\n        undefined4 temp_value_3; \\n\\\n        undefined4 temp_value_4; \\n\\\n        if (DAT_08009790 < (int)(input_flag & 0x7fffffff)) { \\n\\\n            if (DAT_08009794 < (int)(input_flag & 0x7fffffff)) { \\n\\\n                result = FUNC_080082d0(input_value, input_flag, input_value, input_flag); \\n\\\n            } \\n\\\n            else { \\n\\\n                operation_type = FUNC_08009d78(input_value, input_flag, &temp_value_1); \\n\\\n                operation_type = operation_type & 3; \\n\\\n                if (operation_type == 1) { \\n\\\n                    result = FUNC_0800a348(temp_value_1, temp_value_2, temp_value_3, temp_value_4); \\n\\\n                } \\n\\\n                else if (operation_type == 2 || operation_type == 0) { \\n\\\n                    result = FUN_0800adf0(temp_value_1, temp_value_2, temp_value_3, temp_value_4, 1); \\n\\\n                } \\n\\\n                else { \\n\\\n                    result = FUNC_0800a348(temp_value_1, temp_value_2, temp_value_3, temp_value_4); \\n\\\n                } \\n\\\n            } \\n\\\n            return result; \\n\\\n        } \\n\\\n        result = FUN_0800adf0(input_value, input_flag, 0, 0, 0); \\n\\\n        return result; \\n\\\n    }",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "isBitSet_08006a18",
                "param_1": "bitPosition",
                "DAT_08006a54": "dataPointer",
                "uint": "uint32_t",
                "int": "int32_t",
                "char": "int8_t",
                "&": "*",
                ">>": ">>",
                "<<": "<<",
                "&=": "&=",
                "!=": "!="
            },
            "code": "bool isBitSet_08006a18(uint8_t bitPosition) {\n    uint32_t* DAT_08006a54 = (uint32_t*)(DAT_08006a54 + (((uint32_t)bitPosition >> 5) + 0x40) * 4);\n    uint32_t bitMask = 1 << (bitPosition & 0x1f);\n    return (*DAT_08006a54 & bitMask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": false,
            "current_name": "isBitSet_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_offsets_08002c18",
                "param_1": "base_address",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar1": "section_header_offset",
                "iVar2": "number_of_sections",
                "uVar3": "section_header_size",
                "uVar4": "section_name_offset",
                "uVar5": "section_name_size",
                "uVar6": "section_name_type",
                "uVar7": "key_address",
                "local_20": "fourth_offset",
                "local_1c": "third_offset"
            },
            "code": "void calculate_offsets_08002c18(int base_address, undefined4 param_2, undefined4 param_3)\n{\n  int section_header_offset = *(int*)(base_address + 0x3c);\n  int section_header_address = calculate_address(section_header_offset, base_address);\n  int section_header_size = *(int*)(section_header_address + 0x14);\n  int number_of_sections = *(int*)(section_header_address + 0x10);\n  int section_name_offset = section_header_address + 0x28;\n  int section_name_address;\n  int section_name_size;\n  int section_name_type;\n  int i;\n  for (i = 0; i < number_of_sections; i++)\n  {\n    section_name_address = calculate_address(section_name_offset, base_address);\n    section_name_size = *(int*)(section_name_address + 0x8);\n    section_name_type = *(int*)(section_name_address + 0xc);\n    if (section_name_type == 0x1)\n    {\n      break;\n    }\n    section_name_offset += 0x28;\n  }\n  int section_data_offset = *(int*)(section_header_address + 0x20);\n  int section_data_address = calculate_address(section_data_offset, base_address);\n  int encrypted_data_offset = *(int*)(section_data_address + 0x10);\n  int encrypted_data_address = calculate_address(encrypted_data_offset, base_address);\n  int key = *(int*)(base_address + 0x30);\n  int key_address = calculate_address(key * 0x32, DAT_08002e04);\n  int key_size = *(int*)(key_address + 0x8);\n  int key_data_address = calculate_address(key_address + 0xc, DAT_08002e04);\n  int decrypted_data_address = calculate_address(encrypted_data_address, base_address);\n  int decrypted_data_size = section_header_size - (decrypted_data_address - section_data_address);\n  int decrypted_data = malloc(decrypted_data_size);\n  xor_decrypt(decrypted_data, decrypted_data_address, decrypted_data_size, key_data_address, key_size);\n  int first_offset = *(int*)(base_address + 0x28);\n  int second_offset = *(int*)(base_address + 0x2c);\n  int third_offset = calculate_third_offset(decrypted_data, decrypted_data_size, first_offset, second_offset, key_size);\n  int fourth_offset = *(int*)(base_address + 0x10) - third_offset - first_offset;\n  if (fourth_offset < 0)\n  {\n    fourth_offset = *(int*)(base_address + 0x10);\n  }\n  *(int*)(base_address + 0x34) = third_offset;\n  *(int*)(base_address + 0x38) = third_offset + first_offset + fourth_offset;\n  free(decrypted_data);\n}\n\nint calculate_address(int offset, int base_address)\n{\n  return base_address + offset;\n}\n\nvoid xor_decrypt(int* decrypted_data, int encrypted_data_address, int decrypted_data_size, int key_data_address, int key_size)\n{\n  int i;\n  for (i = 0; i < decrypted_data_size; i++)\n  {\n    decrypted_data[i] = *(char*)(encrypted_data_address + i) ^ *(char*)(key_data_address + (i % key_size));\n  }\n}\n\nint calculate_third_offset(int* decrypted_data, int decrypted_data_size, int first_offset, int second_offset, int key_size)\n{\n  int i;\n  int third_offset = 0;\n  for (i = 0; i < decrypted_data_size; i++)\n  {\n    if (i >= first_offset && i < first_offset + 4)\n    {\n      third_offset += decrypted_data[i] << ((i - first_offset) * 8);\n    }\n    else if (i >= second_offset && i < second_offset + 4)\n    {\n      third_offset += decrypted_data[i] << ((i - second_offset) * 8);\n    }\n    else if (i >= key_size && i < key_size + 4)\n    {\n      third_offset += decrypted_data[i] << ((i - key_size) * 8);\n    }\n  }\n  return third_offset;\n}",
            "called": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_0800856c",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "calculate_offsets_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "check_bit_at_position_08006ac0",
                "param_1": "bit_position",
                "DAT_08006afc": "data_array",
                "uint": "uint32_t",
                "int": "int32_t",
                "char": "int8_t",
                "*": "*",
                "&": "&",
                "<<": "<<",
                "!=": "!=",
                "+": "+",
                "(": "(",
                ")": ")",
                "1": "1",
                "0x1f": "0x1f",
                "bool": "bool"
            },
            "code": "bool check_bit_at_position_08006ac0(uint8_t bit_position)\n{\n    uint32_t *data_ptr = (uint32_t *)(DAT_08006afc + (((uint32_t)bit_position >> 5) + 0x80) * 4);\n    uint32_t mask = 1 << (bit_position & 0x1f);\n    return ((*data_ptr) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": false,
            "current_name": "check_bit_at_position_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "PTR_DAT_08002c0c": "data_index_start",
                "local_14": "previous_data_ptr",
                "local_10": "current_data_ptr",
                "PTR_DAT_08002c10": "data_ptr_start",
                "puVar1": "next_data_ptr",
                "local_9": "current_data_index",
                "PTR_DAT_08002c14": "data_end_ptr",
                "puVar2": "temp_data_ptr",
                "puVar3": "unused_variable"
            },
            "code": "void process_data_08002ba8(void)\n{\n  undefined *previous_data_ptr;\n  undefined *current_data_ptr;\n  undefined *next_data_ptr;\n  undefined *temp_data_ptr;\n  byte current_data_index;\n  current_data_index = *PTR_DAT_08002c0c;\n  previous_data_ptr = (undefined *)0x0;\n  current_data_ptr = (undefined *)0x0;\n  next_data_ptr = (undefined *)0x0;\n  while (previous_data_ptr != PTR_DAT_08002c14) {\n    previous_data_ptr = current_data_ptr;\n    current_data_ptr = PTR_DAT_08002c10 + (uint)current_data_index * 0x40;\n    copy_data(previous_data_ptr, current_data_ptr, next_data_ptr);\n    current_data_index = get_next_data_index(current_data_index);\n    temp_data_ptr = previous_data_ptr;\n    previous_data_ptr = current_data_ptr;\n    current_data_ptr = temp_data_ptr;\n  }\n  copy_data(previous_data_ptr, current_data_ptr, (undefined *)0x0, previous_data_ptr, temp_data_ptr);\n  return;\n}",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "compare_and_set_0800919c",
                "param_1": "num1",
                "param_2": "num2",
                "uVar2": "double_num1",
                "uVar3": "double_num2",
                "uVar4": "or_result",
                "bVar1": "is_positive",
                "bVar5": "is_zero"
            },
            "code": "uint compare_and_set_0800919c(uint num1, uint num2)\n{\n  bool is_negative1 = ((int)num1 >> 0x18 == -1);\n  bool is_negative2 = ((int)num2 >> 0x18 == -1);\n  uint double_num1 = num1 * 2;\n  uint double_num2 = num2 * 2;\n  bool is_overflow1 = (is_negative1 && ((num1 & 0x7fffff) != 0));\n  bool is_overflow2 = (is_negative2 && ((num2 & 0x7fffff) != 0));\n  if (is_negative1 || is_negative2)\n  {\n    if (is_overflow1 || is_overflow2)\n    {\n      return 1;\n    }\n  }\n  uint or_result = double_num1 | (num2 & 0x7fffffff);\n  bool is_zero = (or_result == 0);\n  if (!is_zero)\n  {\n    uint xor_result = num1 ^ num2;\n    is_zero = (xor_result == 0);\n  }\n  bool is_positive = ((int)num1 - (int)num2 < 0);\n  if (is_positive)\n  {\n    uint substraction_result = double_num1 + (num2 * -2);\n    is_zero = (substraction_result == 0);\n  }\n  if (is_positive && (double_num2 <= double_num1) && !is_zero)\n  {\n    num1 = (int)num2 >> 0x1f;\n  }\n  if (!is_positive || (double_num2 > double_num1))\n  {\n    num1 = ~((int)num2 >> 0x1f);\n  }\n  if (!is_zero)\n  {\n    num1 = num1 | 1;\n  }\n  return num1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": false,
            "current_name": "compare_and_set_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "calculate_shifted_value_0800854c",
                "param_1": "input_value",
                "uVar1": "upper_bits",
                "uVar2": "shift_distance",
                "iVar3": "leading_zeroes",
                "uVar4": "shift_amount",
                "in_r12": "remaining_bits",
                "bVar5": "is_shift_amount_negative",
                "bVar6": "is_shift_amount_zero",
                "bVar7": "is_shift_amount_negative_overflow",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "unsigned long long calculate_shifted_value_0800854c(uint32_t input_value) {\n    if (input_value == 0) {\n        return 0;\n    }\n    uint32_t leading_zeroes = count_leading_zeroes(input_value);\n    uint32_t shift_amount = leading_zeroes + 21;\n    bool is_shift_amount_negative = shift_amount < 32;\n    uint32_t shifted_input_value = input_value << (shift_amount % 32);\n    if (is_shift_amount_negative) {\n        uint32_t remaining_bits = 32 - shift_amount;\n        shifted_input_value |= 0U >> remaining_bits;\n    }\n    uint64_t shifted_value = ((uint64_t)shifted_input_value) << 32;\n    uint32_t upper_bits = 0;\n    if (shift_amount < 1075) {\n        upper_bits = (0x432 - shift_amount) * 0x100000;\n    } else {\n        uint32_t remaining_bits = ~(0x432 - shift_amount);\n        if (remaining_bits > 30) {\n            upper_bits = input_value >> (remaining_bits - 31);\n        } else {\n            int32_t shift_distance = remaining_bits - 19;\n            if (shift_distance == 0 || (shift_distance < 0) != ((remaining_bits - 31) < 0)) {\n                remaining_bits++;\n                upper_bits = (input_value >> (remaining_bits % 32)) | (shifted_input_value << (32 - remaining_bits % 32));\n            } else {\n                upper_bits = shifted_input_value >> (32 - (remaining_bits - 12));\n                upper_bits |= input_value << (remaining_bits - 12);\n            }\n        }\n    }\n    shifted_value |= upper_bits;\n    return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "calculate_hash_08008e44",
                "param_1": "input",
                "iVar1": "leading_zeroes_count",
                "uVar2": "shift_amount",
                "iVar4": "base_value",
                "uVar3": "is_negative",
                "uVar5": "high_bits",
                "shifted_input": "absolute_input_shifted",
                "result": "hash_value",
                "low_bits": "absolute_input_shifted_adjusted"
            },
            "code": "uint calculate_hash_08008e44(uint input) {\n  int leading_zeroes_count = count_leading_zeroes(input);\n  uint is_negative = input & 0x80000000;\n  uint absolute_input = input;\n  if ((int)is_negative < 0) {\n    absolute_input = -input;\n  }\n  if (absolute_input == 0) {\n    return 0;\n  }\n  uint shift_amount = leading_zeroes_count - 8;\n  int base_value = ((is_negative | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (leading_zeroes_count > 7) {\n    uint high_bits = 0 << (shift_amount & 0xff);\n    uint low_bits = 0U >> (0x20 - shift_amount & 0xff);\n    uint shifted_input = absolute_input << (shift_amount & 0xff);\n    uint result = base_value + shifted_input + high_bits + (uint)(0x7fffffff < high_bits);\n    if (high_bits == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint high_bits = absolute_input << (leading_zeroes_count + 0x18U & 0xff);\n  uint low_bits = (absolute_input >> (0x20 - (leading_zeroes_count + 0x18U) & 0xff)) - ((int)high_bits >> 0x1f);\n  uint result = base_value + low_bits;\n  if ((high_bits & 0x7fffffff) == 0) {\n    result = result & ~(high_bits >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "set_param_value_0800733e",
                "param_1": "base_addr",
                "param_2": "value",
                "param_3": "is_second_param"
            },
            "code": "void set_param_value_0800733e(int base_addr, undefined2 value, char is_second_param) {\\n  if (is_second_param == \"\\0\") {\\n    *(undefined2 *)(base_addr + 0x1a) = value;\\n  }\\n  else {\\n    *(undefined2 *)(base_addr + 0x18) = value;\\n  }\\n  return;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "set_param_value_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "initialize_and_execute_0800583c",
                "FUN_080052ac": "execute_function",
                "FUN_08005790": "execute_preprocessing",
                "FUN_080057e4": "execute_postprocessing"
            },
            "code": "void initialize_and_execute_0800583c(void)\n{\n  int initial_value = *(int *)(PTR_DAT_08005858 + 0x18);\n  execute_function(initial_value);\n  execute_preprocessing();\n  execute_postprocessing();\n  return;\n}",
            "called": [
                "FUN_080052ac",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_and_execute_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "processInputData_08001e98",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "inputData",
                "PTR_DAT_08001efc": "inputData",
                "FUN_08003a74": "processData",
                "FUN_08002fac": "checkDataValidity",
                "FUNC_08003004": "processValidData",
                "PTR_DAT_08001efc[1]": "inputData[1]",
                "PTR_DAT_08001efc[0x10]": "inputData[0x10]",
                "FUN_0800585c": "performAdditionalProcessing"
            },
            "code": "void processInputData_08001e98(undefined4 param1, undefined4 param2, undefined4 param3, undefined4 param4, undefined PTR_DAT_08001efc) {\\n  int errorCode = 0;\\n  if (PTR_DAT_08001efc[1] != \"\\a\") {\\n    do {\\n      processData();\\n      if (*PTR_DAT_08001efc != \"\\0\") {\\n        return;\\n      }\\n      errorCode = checkDataValidity();\\n    } while (errorCode != 0);\\n    processValidData(param1, param2, param3, param4, PTR_DAT_08001efc);\\n    if (PTR_DAT_08001efc[1] == \"\\0\") {\\n      PTR_DAT_08001efc[1] = 2;\\n    }\\n    if (PTR_DAT_08001efc[0x10] != \"\\0\") {\\n      performAdditionalProcessing();\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002fac",
                "FUN_08003004",
                "FUN_0800585c",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "processInputData_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_bit_in_array_080069e4",
                "param_1": "bit_index",
                "DAT_08006a14": "PTR_DAT_08006a14",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void set_bit_in_array_080069e4(byte bit_index) {\n    int* array_ptr = DAT_08006a14 + (((uint)(int)(char)bit_index >> 5) + 0x20) * 4;\n    int bit_mask = 1 << (bit_index & 0x1f);\n    *array_ptr = bit_mask;\n  }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "set_msb_bit_and_shift_right_0800b2d4",
                "param_1": "unsigned_int_input",
                "param_2": "constant_bitmask"
            },
            "code": "uint set_msb_bit_and_shift_right_0800b2d4(uint unsigned_int_input, uint constant_bitmask) {\n  uint unsigned_int_with_msb_set = unsigned_int_input | 0x80000000;\n  uint result = (unsigned_int_with_msb_set + 0x100000) >> 0x1f;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "set_msb_bit_and_shift_right_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_hash_08008e3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift",
                "iVar3": "multiplier",
                "uVar4": "left_shift",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_hash_08008e3c(uint input)\n{\n  if (input == 0) {\n    return 0;\n  }\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift = leading_zeroes - 8;\n  int multiplier = shift * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint left_shift = 0 << (shift & 0xff);\n    uint hash = multiplier + (input << (shift & 0xff)) + (0U >> (0x20 - shift & 0xff)) + (uint)(0x7fffffff < left_shift);\n    if (left_shift == 0x80000000) {\n      hash = hash & 0xfffffffe;\n    }\n    return hash;\n  }\n  uint left_shift = input << (leading_zeroes + 0x18U & 0xff);\n  uint hash = multiplier + ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)left_shift >> 0x1f));\n  if ((left_shift & 0x7fffffff) == 0) {\n    hash = hash & ~(left_shift >> 0x1f);\n  }\n  return hash;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "calculate_double_from_uints_08009654",
                "param_1": "first_uint",
                "param_2": "second_uint",
                "uVar1": "exponent",
                "uVar2": "shift_by",
                "lVar3": "result",
                "DAT_080096e4": "mask",
                "CARRY4": "CARRY4"
            },
            "code": "longlong calculate_double_from_uints_08009654(uint first_uint, uint second_uint)\n{\n  longlong result = CONCAT44(second_uint, first_uint);\n  uint shift_by = (second_uint << 1) >> 0x15;\n  uint exponent = shift_by - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      second_uint = second_uint & 0x80000000;\n      if (exponent == 0xffffffff) {\n        second_uint = second_uint | 0x3ff00000;\n      }\n      result = (ulonglong)second_uint << 0x20;\n    }\n    else {\n      uint DAT_080096e4 = DAT_080096e4 >> (exponent & 0xff);\n      result = CONCAT44(second_uint, first_uint);\n      if ((second_uint & DAT_080096e4 | first_uint) != 0) {\n        result = (ulonglong)(second_uint + (0x80000 >> (exponent & 0xff)) & ~DAT_080096e4) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    uint DAT_080096e4 = 0xffffffff >> (shift_by - 0x413 & 0xff);\n    if ((first_uint & DAT_080096e4) != 0) {\n      uint bit_to_add = 1 << (0x33 - exponent & 0xff);\n      if (CARRY4(first_uint, bit_to_add) != false) {\n        second_uint = second_uint + 1;\n      }\n      result = CONCAT44(second_uint, first_uint + bit_to_add & ~DAT_080096e4);\n    }\n  }\n  else {\n    result = CONCAT44(second_uint, first_uint);\n    if (exponent == 0x400) {\n      result = FUNC_080082d4();\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "calculate_double_from_uints_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_bits_08007bc2",
                "_DAT_40000000": "PTR_DAT_40000000",
                "_DAT_4000000c": "PTR_DAT_4000000c"
            },
            "code": "void clear_bits_08007bc2(void)\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "clear_bits_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "calculate_result_08009410",
                "param_1": "input_value",
                "param_2": "input_flag",
                "uVar1": "result",
                "uVar2": "flag_check",
                "local_28": "temp_value_1",
                "uStack_24": "temp_value_2",
                "local_20": "temp_value_3",
                "uStack_1c": "temp_value_4"
            },
            "code": "undefined4 calculate_result_08009410(undefined4 input_value, uint input_flag)\n{\n  undefined4 result;\n  uint flag_check;\n  undefined4 temp_value_1;\n  undefined4 temp_value_2;\n  undefined4 temp_value_3;\n  undefined4 temp_value_4;\n  \n  if (DAT_080094b4 < (int)(input_flag & 0x7fffffff)) {\n    if (DAT_080094b8 < (int)(input_flag & 0x7fffffff)) {\n      result = FUNC_080082d0(input_value, input_flag, input_value, input_flag);\n    }\n    else {\n      flag_check = FUNC_08009d78(input_value, input_flag, &temp_value_1);\n      flag_check = flag_check & 3;\n      if (flag_check == 1) {\n        result = FUN_0800adf0(temp_value_1, temp_value_2, temp_value_3, temp_value_4, 1);\n      }\n      else if (flag_check == 2) {\n        result = FUNC_0800a348(temp_value_1, temp_value_2, temp_value_3, temp_value_4);\n      }\n      else if (flag_check == 0) {\n        result = FUNC_0800a348(temp_value_1, temp_value_2, temp_value_3, temp_value_4);\n      }\n      else {\n        result = FUN_0800adf0(temp_value_1, temp_value_2, temp_value_3, temp_value_4, 1);\n      }\n    }\n    return result;\n  }\n  result = FUNC_0800a348(input_value, input_flag, 0, 0);\n  return result;\n}",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "set_parameters_080035ec",
                "param_1": "parameter_1",
                "param_2": "parameter_2",
                "param_3": "parameter_3",
                "PTR_DAT_08003614": "PTR_PARAMETERS"
            },
            "code": "void set_parameters_080035ec(int parameter_1, int parameter_2, int parameter_3) {\n    *(int*)PTR_DAT_08003614 = parameter_1;\n    *(int*)(PTR_DAT_08003614 + 4) = parameter_2;\n    *(int*)(PTR_DAT_08003614 + 8) = parameter_3;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "set_parameters_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "update_data_08006c70",
                "DAT_08006c94": "data_start",
                "DAT_08006c98": "data_value",
                "PTR_": "pointer_",
                "uint": "unsigned_int",
                "do": "while"
            },
            "code": "void update_data_08006c70(void)\n{\n  DataSynchronizationBarrier(0xf);\n  uint* data_ptr = (uint*)(DAT_08006c94 + 0xc);\n  uint data_val = *data_ptr & 0x700;\n  *data_ptr = DAT_08006c98 | data_val;\n  DataSynchronizationBarrier(0xf);\n  while(true) {\n    // do nothing\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": false,
            "current_name": "update_data_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "convert_char_to_int_and_print_08006d98",
                "param_1": "character",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "converted_character",
                "FUN_08006b54": "convert_char_to_int",
                "FUN_08006c04": "print_converted_value"
            },
            "code": "void convert_char_to_int_and_print_08006d98(char character, int param_2, int param_3, int param_4){\n    int converted_character = convert_char_to_int((int)character);\n    print_converted_value(converted_character, param_2, param_3, param_4);\n    return;\n}",
            "called": [
                "FUN_08006c04",
                "FUN_08006b54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_and_print_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_ptr_dat_08005a80_08005a68",
                "PTR_DAT_08005a80": "ptr_dat_08005a80"
            },
            "code": "void increment_ptr_dat_08005a80_08005a68(void)\n{\n  int* PTR_DAT_08005a80 = (int*)PTR_DAT_08005a80;\n  *PTR_DAT_08005a80 += 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "increment_ptr_dat_08005a80_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0",
                "PTR_DAT_080079d8": "PTR_DATA",
                "PTR_DAT_080079dc": "PTR_FLAG"
            },
            "code": "void initialize_data_080079c0(void)\n{\n  int data_size = 0x18;\n  int* data_ptr = PTR_DAT_080079d8;\n  int* flag_ptr = PTR_DAT_080079dc;\n  set_memory(data_ptr, 0, data_size);\n  *flag_ptr = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "return_zero_0800b2e0"
            },
            "code": "int return_zero_0800b2e0() {\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "return_zero_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "intermediate_result_1",
                "uVar2": "intermediate_result_2"
            },
            "code": "float calculate_result_08002908(float input_1, float input_2, float input_3, float input_4){\n    float intermediate_result_1 = square(input_3);\n    intermediate_result_1 = add(intermediate_result_1, input_4);\n    float intermediate_result_2 = square(input_1);\n    intermediate_result_1 = add(intermediate_result_1, intermediate_result_2);\n    float intermediate_result_3 = square(input_2);\n    intermediate_result_1 = multiply(intermediate_result_1, intermediate_result_3);\n    float intermediate_result_4 = 2.0;\n    intermediate_result_4 = power(intermediate_result_4, 10.0);\n    intermediate_result_1 = add(intermediate_result_1, intermediate_result_4);\n    return intermediate_result_1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_data_at_address_08007c40",
                "param_1": "address",
                "_DAT_40000034": "PTR_40000034"
            },
            "code": "void set_data_at_address_08007c40(unsigned int address, unsigned int data) {\n  _DAT_40000034 = data;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_data_at_address_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "calculate_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar2": "shift_amount",
                "uVar3": "mask",
                "bVar4": "carry_flag",
                "uVar5": "result",
                "lVar6": "result",
                "iVar1": "status"
            },
            "code": "longlong calculate_080094c0(uint input1, uint input2, undefined4 param_3, undefined4 param_4) {\n  int iVar1;\n  uint shift_count = (input2 << 1) >> 0x15;\n  uint uVar2 = shift_count - 0x3ff;\n  longlong result;\n\n  if ((int)uVar2 < 0x14) {\n    if ((int)uVar2 < 0) {\n      undefined8 uVar5 = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, param_4);\n      iVar1 = FUN_08008b60((int)uVar5, (int)((ulonglong)uVar5 >> 0x20), 0, 0);\n      result = CONCAT44(input2, input1);\n      if (iVar1 != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = DAT_080095b4;\n          }\n          result = (ulonglong)input2 << 0x20;\n        }\n        else {\n          result = 0;\n        }\n      }\n    }\n    else {\n      uint mask = DAT_080095b0 >> (uVar2 & 0xff);\n      result = CONCAT44(input2, input1);\n      if ((input2 & mask | input1) != 0) {\n        undefined8 uVar5 = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, param_4);\n        iVar1 = FUN_08008b60((int)uVar5, (int)((ulonglong)uVar5 >> 0x20), 0, 0);\n        result = CONCAT44(input2, input1);\n        if (iVar1 != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (uVar2 & 0xff));\n          }\n          result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)uVar2 < 0x34) {\n    uint mask = 0xffffffff >> (shift_count - 0x413 & 0xff);\n    result = CONCAT44(input2, input1);\n    if ((mask & input1) != 0) {\n      undefined8 uVar5 = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, param_4);\n      iVar1 = FUN_08008b60((int)uVar5, (int)((ulonglong)uVar5 >> 0x20), 0, 0);\n      result = CONCAT44(input2, input1);\n      if (iVar1 != 0) {\n        if ((int)input2 < 0) {\n          if (uVar2 == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            uint carry = 1 << (0x34 - uVar2 & 0xff);\n            bool bVar4 = CARRY4(carry, input1);\n            input1 = carry + input1;\n            if (bVar4 != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        result = CONCAT44(input2, input1 & ~mask);\n      }\n    }\n  }\n  else {\n    result = CONCAT44(input2, input1);\n    if (uVar2 == 0x400) {\n      result = FUNC_080082d4();\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_08003826",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_shifted_byte_08006b54",
                "param_1": "input_byte",
                "bVar1": "shifted_byte",
                "DAT_08006b98": "ptr_data_1",
                "DAT_08006b9c": "ptr_data_2"
            },
            "code": "byte get_shifted_byte_08006b54(byte input_byte) {\\n  byte shifted_byte;\\n  if ((char)input_byte < \"\\0\") {\\n    shifted_byte = *(byte *)((input_byte & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    shifted_byte = *(byte *)((char)input_byte + DAT_08006b9c + 0x300);\\n  }\\n  return shifted_byte >> 4;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "get_shifted_byte_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_data_byte_08007e84",
                "DAT_08007ea0": "PTR_data",
                "uint": "unsigned int",
                "data": "data_word",
                "data_byte": "data_byte"
            },
            "code": "uint get_data_byte_08007e84(void)\n{\n    uint data = *(uint *)(DAT_08007ea0 + 4);\n    uint data_byte = data & 0xff;\n    return data_byte;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "get_data_byte_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "checkStatus_080057e4",
                "PTR_DAT_0800580c": "statusArray",
                "PTR_DAT_08005810": "statusArray",
                "do_nothing_0800530c": "doNothing"
            },
            "code": "void checkStatus_080057e4(void)\n{\n  initializeSystem();\n  if ((PTR_DAT_0800580c[60] != -1) || ((PTR_DAT_0800580c[8] & 0x20) != 0)) {\n    doNothing();\n  }\n  return;\n}",
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_080025e8",
                "FUN_080053a0",
                "FUN_08001d4c",
                "FUN_0800583c"
            ],
            "imported": false,
            "current_name": "checkStatus_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "get_result_08006d8a",
                "uVar1": "result",
                "FUN_08006998": "calculate"
            },
            "code": "int get_result_08006d8a(void)\n{\n  int result;\n  result = calculate();\n  return result;\n}",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "get_result_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_hash_0800b2e8",
                "param_1": "key1",
                "param_2": "key2",
                "param_3": "seed",
                "param_4": "constant",
                "uVar1": "concatenated_bits",
                "iVar2": "sum",
                "uVar3": "high_bits",
                "uVar4": "keys_64bit",
                "FUNC_08008640": "hash_function",
                "DAT_0800b3c8": "constant_1",
                "DAT_0800b3cc": "constant_2",
                "DAT_0800b3d8": "constant_3",
                "DAT_0800b3d0": "constant_4",
                "DAT_0800b3b8": "constant_5",
                "DAT_0800b3bc": "constant_6",
                "DAT_0800b3d4": "constant_7",
                "DAT_0800b3c0": "constant_8",
                "DAT_0800b3c4": "constant_9"
            },
            "code": "uint calculate_hash_0800b2e8(uint key1, uint key2, int seed, undefined4 constant)\n{\n  uint hash_value;\n  int sum;\n  uint concat_keys;\n  ulonglong keys_64bit;\n  \n  keys_64bit = CONCAT44(key2, key1);\n  concat_keys = (key2 << 1) >> 0x15;\n  if (concat_keys == 0) {\n    if ((key1 | key2 & 0x7fffffff) == 0) {\n      return key1;\n    }\n    keys_64bit = FUNC_08008640(key1, key2, 0, DAT_0800b3c8);\n    if (seed < DAT_0800b3cc) goto LAB_0800b34a;\n    sum = ((uint)((int)(keys_64bit >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (concat_keys == 0x7ff) {\n    hash_value = FUNC_080082d4(key1, key2, key1, key2, constant);\n    return hash_value;\n  }\n  hash_value = (uint)(keys_64bit >> 0x20);\n  sum = concat_keys + seed;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)keys_64bit;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) {\n      hash_value = FUNC_08008640((uint)keys_64bit, hash_value & 0x800fffff | (sum + 0x36) * 0x100000, 0, DAT_0800b3d8);\n      return hash_value;\n    }\n    if (seed < 0xc351) {\n      keys_64bit = keys_64bit & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\n      goto LAB_0800b34a;\n    }\n  }\n  hash_value = FUNC_08008640(DAT_0800b3d4, hash_value & 0x80000000 | 0x7e37e43c, DAT_0800b3c0, DAT_0800b3c4);\n  return hash_value;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "calculate_hash_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "checkIfOddNumber_08007520",
                "param_1": "numberToCheck",
                "FUN_080073d4": "printErrorMessage"
            },
            "code": "void checkIfOddNumber_08007520(uint numberToCheck) {\n    if ((numberToCheck & 1) != 0) {\n        printErrorMessage(0x3e);\n    }\n    return;\n}",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "checkIfOddNumber_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "calculate_bitwise_or_08007884",
                "iVar1": "num1",
                "iVar2": "num2",
                "iVar3": "num3",
                "iVar4": "num4",
                "iVar5": "num5",
                "uVar6": "result",
                "FUN_08007854": "get_number"
            },
            "code": "uint calculate_bitwise_or_08007884()\n{\n  int num1 = get_number(0x36);\n  int num2 = get_number(0x37);\n  int num3 = get_number(0x38);\n  int num4 = get_number(0x39);\n  int num5 = get_number(0xf);\n  uint result = get_number(0) | num1 << 4 | num2 << 3 | num3 << 2 | num4 << 1 | num5 << 7;\n  return result;\n}",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_bitwise_or_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "initializeSettings_08004250"
            },
            "code": "void initializeSettings_08004250(void)\n{\n  int* data = PTR_DAT_08004474;\n  setStepSize(PTR_DAT_08004470);\n  setMaxSpeed(*(int *)data);\n  setStepSize(PTR_s___x__step_mm___1__08004478);\n  setAcceleration(*(int *)(data + 0x24));\n  setStepSize(PTR_s___y__step_mm___2__0800447c);\n  setDefaultFeedRate(*(int *)(data + 0x14));\n  setStepSize(PTR_s___z__step_mm___3__08004480);\n  setDefaultSeekRate(*(short *)(data + 0x18));\n  setStepSize(PTR_s___step_pulse__usec___4__08004484);\n  setStepPulse(*(int *)(data + 0x10));\n  setStepSize(PTR_s___default_feed__mm_min___5__08004488);\n  setDefaultFeedRate(*(int *)(data + 0x14));\n  setStepSize(PTR_s___default_seek__mm_min___6__0800448c);\n  setDefaultSeekRate(*(short *)(data + 0x18));\n  setStepSize(PTR_s___step_port_invert_mask__int__08004490);\n  setInvertStepEnable(*(short *)(data + 0x18));\n  setStepSize(PTR_s____7__08004494);\n  setNDecimals((data[0x28] & 1) != 0);\n  setStepSize(PTR_s___step_idle_delay__msec___8__08004498);\n  setStepIdleDelay(FUNC_08009054(*(int *)(data + 0x20), DAT_0800449c));\n  setStepSize(PTR_s___acceleration__mm_sec_2___9__080044a0);\n  setAcceleration(*(int *)(data + 0x24));\n  setStepSize(PTR_s___junction_deviation__mm___10__080044a4);\n  setJunctionDeviation(*(int *)(data + 0x1c));\n  setStepSize(PTR_s___arc__mm_segment___11__080044a8);\n  setArcSegmentLength(data[0x3e]);\n  setStepSize(PTR_s___n_arc_correction__int___12__080044ac);\n  setNArcCorrection(data[0x3d]);\n  setStepSize(PTR_s___n_decimals__int___13__080044b0);\n  setNDecimals((data[0x28] & 1) != 0);\n  setStepSize(PTR_s___report_inches__bool___14__080044b4);\n  setReportInches((data[0x28] & 2) != 0);\n  setStepSize(PTR_s___auto_start__bool___15__080044b8);\n  setAutoStart((data[0x28] & 4) != 0);\n  setStepSize(PTR_s___invert_step_enable__bool___16__080044bc);\n  setInvertStepEnable((data[0x28] & 8) != 0);\n  setStepSize(PTR_s___hard_limits__bool___17__080044c0);\n  setHardLimits((data[0x28] & 0x10) != 0);\n  setStepSize(PTR_s___homing_cycle__bool___18__080044c4);\n  setHomingCycle(*(short *)(data + 0x2a));\n  setStepSize(PTR_s___homing_dir_invert_mask__int__080044c8);\n  setHomingDirInvertMask(*(short *)(data + 0x2a));\n  setStepSize(PTR_s____19__080044cc);\n  setHomingFeedRate(*(int *)(data + 0x30));\n  setStepSize(PTR_s___homing_feed__mm_min___20__080044d0);\n  setHomingSeekRate(*(short *)(data + 0x34));\n  setStepSize(PTR_s___homing_seek__mm_min___21__080044d4);\n  setHomingDebounce(*(int *)(data + 0x38));\n  setStepSize(PTR_s___homing_debounce__msec___22__080044d8);\n  setHomingPullOff(*(short *)(data + 0x1a));\n  setStepSize(PTR_s___homing_pull_off__mm___23__080044dc);\n  setStepSize(PTR_s___dir_port_invert_mask__int__080044e0);\n  setDirPortInvertMask(*(short *)(data + 0x1a));\n  setStepSize(PTR_DAT_080044e4);\n}",
            "called": [
                "FUN_0800375c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08009054",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initializeSettings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "print_character_08006dc4",
                "param_1": "character_to_print",
                "FUN_08006a58": "print_ascii_code"
            },
            "code": "void print_character_08006dc4(char character_to_print)\n{\n  print_ascii_code((int)character_to_print);\n  return;\n}",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_at_position_08007402",
                "param_1": "position",
                "PTR_": "",
                "DAT_": "",
                "*": "",
                "int": "uint",
                "short": "uint",
                "word_index": "word_index",
                "word_address": "word_address",
                "bit_position": "bit_position",
                "bit_mask": "bit_mask"
            },
            "code": "void set_bit_at_position_08007402(uint position) {\n    uint word_index = position >> 4;\n    uint* word_address = (uint*)(0x40020018 + word_index * 0x400);\n    uint bit_position = position & 0xf;\n    uint bit_mask = 1 << bit_position;\n    *word_address |= bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_and_reset_if_18_08002870",
                "param_1": "input_char",
                "local_9": "incremented_char"
            },
            "code": "char increment_and_reset_if_18_08002870(char input_char) {\n  char incremented_char = input_char + 1;\n  if (incremented_char == 18) {\n    incremented_char = 0;\n  }\n  return incremented_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_08002f40"
            ],
            "imported": false,
            "current_name": "increment_and_reset_if_18_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "do_nothing_twice_08000210"
            },
            "code": "void do_nothing_twice_08000210(void)\n{\n  do_nothing_080001ec();\n  do_nothing_080001d4();\n  return;\n}",
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_080025e8",
                "FUN_080001f8",
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_twice_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "process_byte_08005900",
                "param_1": "input_byte",
                "PTR_DAT_08005978": "flags",
                "2": "TWO",
                "1": "ONE",
                "8": "FOUR",
                "0x7e": "TILDE",
                "0x7f": "QUESTION_MARK",
                "0x3f": "QUESTION_MARK",
                "0x40": "AT_SIGN",
                "0x18": "CANCEL",
                "0x21": "EXCLAMATION_MARK",
                "return 1": "return TRUE",
                "return 0": "return FALSE"
            },
            "code": "int process_byte_08005900(byte input_byte) {\n  if (input_byte == TILDE) {\n    PTR_DAT_08005978[2] |= FLAG_TWO_BIT_TWO;\n    return 1;\n  }\n  if (input_byte < QUESTION_MARK) {\n    if (input_byte == QUESTION_MARK) {\n      PTR_DAT_08005978[2] |= FLAG_TWO_BIT_ONE;\n      return 1;\n    }\n    if (input_byte < AT_SIGN) {\n      if (input_byte == CANCEL) {\n        perform_reset();\n        return 1;\n      }\n      if (input_byte == EXCLAMATION_MARK) {\n        PTR_DAT_08005978[2] |= FLAG_TWO_BIT_FOUR;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "process_byte_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "convert_string_to_int_08002638",
                "param_1": "base_address",
                "param_2": "string",
                "param_3": "result",
                "local_1c": "unsigned_result",
                "local_16": "current_char",
                "local_15": "decimal_part_length",
                "local_14": "integer_part",
                "local_d": "current_char",
                "local_c": "current_position",
                "pcVar6": "end_of_integer_part",
                "pcVar5": "end_of_integer_part",
                "bVar1": "digit_value",
                "bVar2": "is_negative",
                "bVar3": "has_decimals",
                "iVar4": "conversion_result",
                "uVar7": "return_value",
                "uVar8": "temp_value"
            },
            "code": "int convert_string_to_int_08002638(int base_address, byte *string, uint *result) {\n  byte current_char;\n  bool is_negative = false;\n  bool has_decimals = false;\n  int integer_part = 0;\n  char decimal_part_length = 0;\n  byte *current_position = string;\n  char *end_of_integer_part = NULL;\n\n  // Check if the number is negative\n  if (*current_position == '-') {\n    is_negative = true;\n    current_position++;\n  }\n  else if (*current_position == '+') {\n    current_position++;\n  }\n\n  // Parse the integer part\n  while ((current_char = *current_position++) != '\\0') {\n    if (current_char == '.') {\n      has_decimals = true;\n      break;\n    }\n    if (current_char < '0' || current_char > '9') {\n      return 0;\n    }\n    integer_part = (integer_part * 10) + (current_char - '0');\n    if (integer_part == 0 && current_char == '0') {\n      end_of_integer_part = current_position;\n    }\n    else {\n      end_of_integer_part = NULL;\n    }\n  }\n\n  // Parse the decimal part\n  if (has_decimals) {\n    decimal_part_length = -1;\n    while ((current_char = *current_position++) != '\\0') {\n      if (current_char < '0' || current_char > '9') {\n        return 0;\n      }\n      decimal_part_length--;\n    }\n  }\n\n  // Convert the integer part to a uint\n  uint unsigned_result = (uint)integer_part;\n  if (is_negative) {\n    unsigned_result = (uint)(-integer_part);\n  }\n\n  // Handle decimal part if it exists\n  if (has_decimals) {\n    uint decimal_multiplier = 1;\n    for (char i = decimal_part_length; i < 0; i++) {\n      decimal_multiplier *= 10;\n    }\n    unsigned_result *= decimal_multiplier;\n  }\n\n  *result = unsigned_result;\n  *string = (byte)(current_position - string - 1);\n  return 1;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_string_to_int_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "check_and_display_data_080051b4",
                "iVar1": "result",
                "auStack_18": "buffer",
                "local_9": "index",
                "FUN_08004dd2": "check_data",
                "FUN_08004030": "display_error_message",
                "FUN_08004c48": "reset_data",
                "FUN_08004250": "perform_cleanup",
                "FUN_08004d7c": "fetch_data"
            },
            "code": "void check_and_display_data_080051b4(void)\n{\n  int result;\n  undefined buffer[15];\n  byte index;\n  result = check_data();\n  if (result == 0) {\n    display_error_message(10);\n    reset_data();\n    perform_cleanup();\n  }\n  for (index = 0; index < 8; index++) {\n    result = fetch_data(index, buffer);\n    if (result == 0) {\n      display_error_message(10);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_and_display_data_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "FUNC_080098d0"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined4 FUNC_080098d0(undefined4 param_1,undefined4 param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  int *piVar5;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  uVar2 = FUN_0800a1bc();\n  cVar1 = *PTR_DAT_08009988;\n  if (((cVar1 == -1) || (local_30 = FUN_08008b74(param_1,param_2,param_1,param_2), local_30 != 0))\n     || (iVar3 = FUN_08008b24(param_1,param_2,0,0), iVar3 == 0)) {\n    return uVar2;\n  }\n  local_50 = 1;\n  local_4c = PTR_DAT_0800998c;\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_1;\n  uStack_3c = param_2;\n  if (cVar1 == '\\0') {\n    local_38 = 0;\nLAB_0800996c:\n    iVar3 = FUN_0800b2e0(&local_50);\n    if (iVar3 != 0) goto joined_r0x0800997a;\n  }\n  else {\n    local_38 = FUNC_08008894(0,0,0,0);\n    if (cVar1 != '\\x02') goto LAB_0800996c;\n  }\n  puVar4 = (undefined4 *)FUN_0800b3dc();\n  *puVar4 = 0x21;\njoined_r0x0800997a:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_0800b3dc();\n    *piVar5 = local_30;\n  }\n  return (undefined4)local_38;\n}\n\n",
            "called": [
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008b24",
                "FUN_08008894",
                "FUN_08008b74",
                "FUN_0800b3dc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002978"
            ],
            "imported": false,
            "current_name": "FUNC_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "is_param_within_range_08005c30",
                "param_1": "parameter",
                "bVar1": "is_within_range",
                "DAT_08005c70": "array",
                "FUN_08005bdc": "call_function1"
            },
            "code": "bool is_param_within_range_08005c30(int parameter)\n{\n  bool is_within_range = parameter - 1U < 0x1000000;\n  if (is_within_range) {\n    DAT_08005c70[1] = parameter - 1;\n    call_function1(0xffffffff,0xf);\n    DAT_08005c70[2] = 0;\n    *DAT_08005c70 = 7;\n  }\n  return !is_within_range;\n}",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": false,
            "current_name": "is_param_within_range_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "data",
                "PTR_DAT_080005b0": "data_validation_flag",
                "FUN_08008590": "perform_operation",
                "FUNC_08008640": "apply_constants",
                "DAT_080005a8": "CONSTANT_1",
                "DAT_080005ac": "CONSTANT_2",
                "FUN_08008c30": "transform_data"
            },
            "code": "int process_data_0800056c(int data)\n{\n  if (is_data_valid()) {\n    int processed_data = perform_operation(data);\n    processed_data = apply_constants(processed_data, DAT_080005a8, DAT_080005ac);\n    data = transform_data(processed_data);\n  }\n  return data;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "initialize_application_08002f24",
                "FUN_08002ef0": "setup_initial_configuration",
                "FUN_0800b430": "allocate_memory_for_data"
            },
            "code": "void initialize_application_08002f24(void)\n{\n  setup_initial_configuration();\n  allocate_memory_for_data(PTR_DAT_08002f3c,0,0x1c);\n  return;\n}",
            "called": [
                "FUN_08002ef0",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_application_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "calculate_result_from_inputs_0800981c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "cVar1": "input_type",
                "puVar2": "data_pointer",
                "iVar3": "result",
                "puVar4": "output_pointer",
                "piVar5": "error_code_pointer",
                "uVar6": "return_value",
                "local_50": "local_variable1",
                "puStack_4c": "local_variable2",
                "local_48": "local_variable3",
                "uStack_44": "local_variable4",
                "local_40": "local_variable5",
                "uStack_3c": "local_variable6",
                "local_38": "local_variable7",
                "uStack_34": "local_variable8",
                "local_30": "error_code"
            },
            "code": "undefined8 calculate_result_from_inputs_0800981c(undefined4 input1, undefined4 input2, undefined4 input3, undefined4 input4)\n{\n  char input_type;\n  undefined *data_pointer;\n  int result;\n  undefined4 *output_pointer;\n  int *error_code_pointer;\n  undefined8 return_value;\n  undefined4 local_variable1;\n  undefined *local_variable2;\n  undefined4 local_variable3;\n  undefined4 local_variable4;\n  undefined4 local_variable5;\n  int error_code;\n  data_pointer = PTR_DAT_080098cc;\n  return_value = FUNC_08009b24();\n  if (*data_pointer == -1) {\n    return return_value;\n  }\n  error_code = FUN_0800b2d4();\n  if (error_code != 0) {\n    return return_value;\n  }\n  error_code = FUN_0800b2d4(input1, input2);\n  if (error_code == 0) {\n    return return_value;\n  }\n  error_code = FUN_0800b2d4(input3, input4);\n  if (error_code == 0) {\n    return return_value;\n  }\n  input_type = *data_pointer;\n  local_variable1 = 3;\n  local_variable2 = PTR_s_hypot_080098c0;\n  local_variable3 = input1;\n  local_variable4 = input2;\n  local_variable5 = input3;\n  if (input_type == '\\0') {\n    local_variable1 = 0xe0000000;\n    local_variable2 = DAT_080098c8;\n  }\n  else {\n    local_variable1 = 0;\n    local_variable2 = DAT_080098c4;\n    if (input_type == '\\x02') {\n      goto LAB_080098aa;\n    }\n  }\n  error_code = FUN_0800b2e0(&local_variable1);\n  if (error_code != 0) {\n    goto LAB_08009896;\n  }\nLAB_080098aa:\n  output_pointer = (undefined4 *)FUN_0800b3dc();\n  *output_pointer = 0x22;\nLAB_08009896:\n  return_value = CONCAT44(local_variable2, local_variable1);\n  if (error_code != 0) {\n    error_code_pointer = (int *)FUN_0800b3dc();\n    return_value = CONCAT44(local_variable2, local_variable1);\n    *error_code_pointer = error_code;\n  }\n  return return_value;\n}",
            "called": [
                "FUN_0800b2e0",
                "FUN_0800b2d4",
                "FUN_08009b24",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_from_inputs_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "set_flags_and_call_functions_080059b4",
                "FUN_08006d72": "call_function_with_delay",
                "FUN_08006ce0": "call_another_function",
                "do_nothing_08005a50": "do_nothing",
                "DAT_080059f4": "data_ptr"
            },
            "code": "void set_flags_and_call_functions_080059b4(void)\n{\n  int* DAT_080059f4 = DAT_080059f4;\n  *DAT_080059f4 |= 0x200;\n  *DAT_080059f4 |= 0x400;\n  *DAT_080059f4 |= 0x100;\n  call_function_with_delay(16000);\n  call_another_function(3);\n  do_nothing();\n}",
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "extract_bits_from_uint_08006c04",
                "param_1": "input",
                "param_2": "num_bits",
                "param_3": "bits_out",
                "param_4": "remainder_out",
                "uVar1": "num_bits_to_extract"
            },
            "code": "void extract_bits_from_uint_08006c04(uint input, uint num_bits, uint *bits_out, uint *remainder_out)\n{\n  uint num_bits_to_extract;\n  num_bits = num_bits & 7;\n  num_bits_to_extract = 7 - num_bits;\n  if (num_bits_to_extract > 3) {\n    num_bits_to_extract = 4;\n  }\n  if (num_bits + 4 < 7) {\n    num_bits = 0;\n  }\n  else {\n    num_bits = num_bits - 3;\n  }\n  *bits_out = (1 << (num_bits_to_extract & 0xff)) - 1U & input >> (num_bits & 0xff);\n  *remainder_out = (1 << (num_bits & 0xff)) - 1U & input;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "extract_bits_from_uint_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "PTR_DAT_08002ed0": "current_byte",
                "PTR_DAT_08002ed8": "end_byte",
                "PTR_DAT_08002ed4": "data_array",
                "FUNC_08009054": "get_data_value",
                "FUN_08002c18": "process_data_values",
                "local_18": "previous_data",
                "local_11": "current_byte",
                "uVar1": "previous_data_value_1",
                "uVar2": "current_data_value_1"
            },
            "code": "void process_data_08002e08(void)\\n{\\n  uint8_t PTR_DAT_08002ed0 = *PTR_DAT_08002ed0;\\n  uint8_t *previous_data = NULL;\\n  while (PTR_DAT_08002ed0 != *PTR_DAT_08002ed8) {\\n    uint8_t *current_data = PTR_DAT_08002ed4 + (uint)PTR_DAT_08002ed0 * 0x40;\\n    if ((previous_data != NULL) && ((previous_data[0x24] != \"\\0\" || (current_data[0x24] != \"\\0\")))) {\\n      uint32_t previous_data_value_1 = FUNC_08009054(*(uint32_t *)(previous_data + 0x18),*(uint32_t *)(previous_data + 0x14));\\n      uint32_t current_data_value_1 = FUNC_08009054(*(uint32_t *)(current_data + 0x18),*(uint32_t *)(previous_data + 0x14));\\n      FUN_08002c18(previous_data,previous_data_value_1,current_data_value_1);\\n      previous_data[0x24] = 0;\\n    }\\n    PTR_DAT_08002ed0 = FUN_08002870(PTR_DAT_08002ed0);\\n    previous_data = current_data;\\n  }\\n  uint32_t previous_data_value_2 = FUNC_08009054(*(uint32_t *)(previous_data + 0x18),*(uint32_t *)(previous_data + 0x14));\\n  uint32_t current_data_value_2 = FUNC_08009054(0,*(uint32_t *)(previous_data + 0x14));\\n  FUN_08002c18(previous_data,previous_data_value_2,current_data_value_2);\\n  previous_data[0x24] = 0;\\n  return;\\n}",
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "get_shift_amount_08006680",
                "uVar1": "result",
                "uVar2": "leading_zeroes_count",
                "DAT_080066c4": "data_pointer",
                "PTR_DAT_080066c8": "shift_table_pointer"
            },
            "code": "uint get_shift_amount_08006680(void)\n{\n  uint leading_zeroes_count;\n  uint shift_amount;\n  leading_zeroes_count = count_leading_zeroes(0x380000);\n  shift_amount = (*(uint *)(DAT_080066c4 + 8) & 0x1c00) >> (leading_zeroes_count & 0xff);\n  return FUN_08006628() >> shift_amount;\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "get_shift_amount_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "data",
                "PTR_DAT_0800036c": "initialized",
                "FUN_080002f0": "initialize",
                "PTR_DAT_08000370": "data_buffer"
            },
            "code": "void store_data_08000340(uint index, undefined data){\n  if (*PTR_DAT_0800036c == 0) {\n    initialize();\n  }\n  PTR_DAT_08000370[index & 0x3ff] = data;\n  return;\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "store_data_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "resultVar3",
                "uVar4": "resultVar2",
                "uVar5": "resultVar1",
                "uVar6": "resultVar4"
            },
            "code": "uint calculate_result_thunk_08009990(uint input1, uint input2, uint input3, uint input4)\n{\n  int tempVar1;\n  undefined4 tempVar2;\n  uint resultVar1;\n  uint resultVar2;\n  uint resultVar3;\n  undefined8 resultVar4;\n  \n  resultVar4 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  resultVar2 = input4 & 0x7fffffff;\n  if ((DAT_08009b18 < (resultVar2 | (-input3 | input3) >> 0x1f)) || (resultVar3 = input2 & 0x7fffffff, DAT_08009b18 < (resultVar3 | (-input1 | input1) >> 0x1f))) {\n    resultVar2 = calculate_result_thunk_08009990(input3, input4, input1, input2);\n  }\n  else {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      resultVar2 = FUNC_0800af78();\n      return resultVar2;\n    }\n    resultVar1 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((resultVar3 | input1) == 0) {\n      resultVar2 = DAT_08009af0;\n      if ((resultVar1 != 2) && (resultVar2 = input1, resultVar1 == 3)) {\n        resultVar2 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((resultVar2 | input3) != 0) {\n        if (resultVar2 == DAT_08009b18) {\n          resultVar1 = resultVar1 - 1;\n          if (resultVar3 == resultVar2) {\n            if (2 < resultVar1) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + resultVar1 * 8);\n          }\n          if (resultVar1 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + resultVar1 * 8);\n          }\n          return 0;\n        }\n        if (resultVar3 != DAT_08009b18) {\n          tempVar1 = (int)(resultVar3 - resultVar2) >> 0x14;\n          if ((int)(resultVar3 - resultVar2) < 0x3d00000) {\n            if (((int)input4 < 0) && (tempVar1 + 0x3c < 0 != SCARRY4(tempVar1,0x3c))) {\n              resultVar4 = 0;\n            }\n            else {\n              calculate_result_thunk_08009990(input1, input2, input3, input4, input4);\n              do_nothing_0800b2cc();\n              resultVar4 = FUNC_0800af78();\n            }\n          }\n          tempVar2 = (undefined4)((ulonglong)resultVar4 >> 0x20);\n          resultVar2 = (uint)resultVar4;\n          if (resultVar1 == 1) {\n            return resultVar2;\n          }\n          if (resultVar1 == 2) {\n            resultVar4 = calculate_result_thunk_08009990(resultVar2, tempVar2, DAT_08009ae8, DAT_08009aec);\n            resultVar2 = calculate_result_thunk_08009990(DAT_08009af0, DAT_08009af4, (int)resultVar4, (int)((ulonglong)resultVar4 >> 0x20));\n            return resultVar2;\n          }\n          if (resultVar1 == 0) {\n            return resultVar2;\n          }\n          resultVar4 = calculate_result_thunk_08009990(resultVar2, tempVar2, DAT_08009ae8, DAT_08009aec);\n          resultVar2 = calculate_result_thunk_08009990((int)resultVar4, (int)((ulonglong)resultVar4 >> 0x20), DAT_08009af0, DAT_08009af4);\n          return resultVar2;\n        }\n      }\n      resultVar2 = DAT_08009b08;\n      if (-1 < (int)input2) {\n        resultVar2 = DAT_08009b00;\n      }\n    }\n  }\n  return resultVar2;\n}\n",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_send_08004bf4",
                "param_1": "character",
                "param_2": "address",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void calculate_offset_and_send_08004bf4(byte character, undefined4 address)\n{\n  ushort offset = (ushort)character * 0xd + 0x200;\n  FUN_08000374(offset, address, 0xc);\n  return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "imported": false,
            "current_name": "calculate_offset_and_send_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "validate_input_08004d7c",
                "param_1": "input_char",
                "param_2": "input_ptr",
                "iVar1": "result",
                "FUN_080003ec": "validate_range",
                "FUN_0800b430": "reset_ptr",
                "FUN_08004bf4": "process_input"
            },
            "code": "bool validate_input_08004d7c(byte input_char, undefined4 input_ptr) {\n  int result = FUN_080003ec(input_ptr, (ushort)input_char * 0xd + 0x200, 0xc);\n  if (result == 0) {\n    FUN_0800b430(input_ptr, 0, 0xc);\n    FUN_08004bf4(input_char, input_ptr);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bf4",
                "FUN_0800b430",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "validate_input_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "convert_to_signed_int_08009278",
                "param_1": "unsigned_int_value",
                "uVar1": "absolute_value",
                "uVar2": "shift_value",
                "uVar3": "shift_amount",
                "uVar4": "result"
            },
            "code": "uint convert_to_signed_int_08009278(uint unsigned_int_value)\n{\n  uint absolute_value;\n  uint shift_value;\n  uint shift_amount;\n  uint result;\n\n  if (unsigned_int_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  absolute_value = (unsigned_int_value << 1) >> 0x18;\n  shift_value = 0x9e - absolute_value;\n  if (absolute_value < 0x9f && shift_value != 0) {\n    shift_amount = shift_value & 0xff;\n    result = (unsigned_int_value << 8 | 0x80000000) >> shift_amount;\n    if ((unsigned_int_value & 0x80000000) != 0) {\n      result = -result;\n    }\n    return result;\n  }\n  if ((shift_value == 0xffffff9f) && ((unsigned_int_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  unsigned_int_value = unsigned_int_value & 0x80000000;\n  if (unsigned_int_value == 0) {\n    unsigned_int_value = 0x7fffffff;\n  }\n  return unsigned_int_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_to_signed_int_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "initialize_data_segments_080004fc",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "uVar1": "result_1",
                "FUN_08008e44": "get_data_segment",
                "FUNC_08009054": "process_data_segment",
                "PTR_DAT_08000564": "DATA_SEGMENT_POINTER_1",
                "PTR_DAT_08000568": "DATA_SEGMENT_POINTER_2"
            },
            "code": "void initialize_data_segments_080004fc(undefined4 first_param, undefined4 second_param, undefined4 third_param)\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  undefined4 result_3;\n  \n  result_1 = get_data_segment(first_param);\n  result_1 = process_data_segment(result_1, *(undefined4 *)PTR_DAT_08000564);\n  *(undefined4 *)(PTR_DAT_08000568 + 0xc) = result_1;\n  \n  result_2 = get_data_segment(second_param);\n  result_2 = process_data_segment(result_2, *(undefined4 *)(PTR_DAT_08000564 + 4));\n  *(undefined4 *)(PTR_DAT_08000568 + 0x10) = result_2;\n  \n  result_3 = get_data_segment(third_param);\n  result_3 = process_data_segment(result_3,*(undefined4 *)(PTR_DAT_08000564 + 8));\n  *(undefined4 *)(PTR_DAT_08000568 + 0x14) = result_3;\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "initialize_data_segments_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "update_state_08000220",
                "param_1": "new_state",
                "*PTR_DAT_08000264": "*current_state",
                "FUN_08002fd4": "reset_state",
                "do_nothing_080001c8": "handle_state_one",
                "do_nothing_080001e0": "handle_state_two",
                "FUN_08000210": "handle_error"
            },
            "code": "void update_state_08000220(char new_state){\n  if (new_state != *PTR_DAT_08000264) {\n    reset_state();\n    if (new_state == '\\x01') {\n      do_nothing_080001c8();\n    }\n    else if (new_state == '\\x02') {\n      do_nothing_080001e0();\n    }\n    else {\n      handle_error();\n    }\n    *PTR_DAT_08000264 = new_state;\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_080001c8",
                "FUN_08000210",
                "FUN_080001e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "update_state_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "clear_data_buffer_08005238",
                "PTR_DAT_0800524c": "data_buffer_ptr",
                "FUN_08005250": "execute_data_processing"
            },
            "code": "void clear_data_buffer_08005238(void)\n{\n  *PTR_DAT_0800524c = 0;\n  execute_data_processing();\n  return;\n}",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "clear_data_buffer_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_flags_and_enable_08007da8",
                "puVar1": "flag_ptr",
                "DAT_08007dd4": "flags"
            },
            "code": "void set_flags_and_enable_08007da8(void)\n{\n  uint *flag_ptr;\n  flag_ptr = DAT_08007dd4;\n  DAT_08007dd4[8] |= 0x10;\n  *flag_ptr |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "set_flags_and_enable_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "display_machine_position_08004148",
                "param_1": "alarm_type",
                "PTR_s_ALARM__08004190": "ALARM_MESSAGE",
                "PTR_s_Abort_during_cycle_08004198": "ABORT_MESSAGE",
                "PTR_s_Hard_limit_08004194": "HARD_LIMIT_MESSAGE",
                "PTR_s___MPos__0800419c": "CURRENT_POSITION_MESSAGE",
                "do_nothing_08002814": "wait_for_some_time"
            },
            "code": "void display_machine_position_08004148(char alarm_type) {\n  display_message(\"ALARM\");\n  if (alarm_type == -2) {\n    display_message(\"Abort during cycle\");\n  }\n  else if (alarm_type == -1) {\n    display_message(\"Hard limit\");\n  }\n  display_message(\"Current position: \");\n  wait_for_some_time(500);\n  return;\n}",
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_machine_position_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "process_data_08004940",
                "auStack_2c": "stack_array",
                "uVar1": "temp_var_1",
                "uVar2": "temp_var_2",
                "uVar3": "temp_var_3",
                "uVar4": "temp_var_4",
                "uVar5": "temp_var_5",
                "local_11": "i",
                "PTR_DAT_08004b88": "data_ptr_1",
                "PTR_DAT_08004bac": "data_ptr_2",
                "PTR_DAT_08004bb8": "data_ptr_3",
                "PTR_DAT_08004bb0": "data_ptr_4",
                "PTR_DAT_08004bb4": "data_ptr_5",
                "PTR_DAT_08004bbc": "data_ptr_6",
                "PTR_s__MPos__08004ba8": "string_ptr_1",
                "PTR_s_WPos__08004bb4": "string_ptr_2",
                "DAT_08004b80": "constant_1",
                "DAT_08004b84": "constant_2"
            },
            "code": "void process_data_08004940() {\n    uint8_t byte_1 = PTR_DAT_08004b88[1];\n    uint32_t stack_array[6];\n    stack_array[3] = *(uint32_t *)(PTR_DAT_08004b88 + 4);\n    stack_array[4] = *(uint32_t *)(PTR_DAT_08004b88 + 8);\n    stack_array[5] = *(uint32_t *)(PTR_DAT_08004b88 + 0xc);\n    if (byte_1 < 8) {\n        (*(void (*)())(&switchD_0800495e::switchdataD_08004964)[byte_1])();\n        return;\n    }\n    FUN_080036c6(PTR_s__MPos__08004ba8);\n    for (uint8_t i = 0; i < 3; i++) {\n        uint32_t uVar1 = FUN_08008e44(stack_array[i + 3]);\n        uVar1 = FUNC_08009054(uVar1, *(uint32_t *)(PTR_DAT_08004bac + i * 4));\n        stack_array[i] = uVar1;\n        if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\n            uint64_t uVar2 = FUN_08008590(stack_array[i]);\n            uVar2 = FUNC_08008640((int)uVar2, (int)(uVar2 >> 0x20), DAT_08004b80, DAT_08004b84);\n            uint32_t uVar3 = FUN_08008c30((int)uVar2, (int)(uVar2 >> 0x20));\n            stack_array[i] = uVar3;\n        }\n        FUN_08003826(stack_array[i]);\n        FUN_080036c6(PTR_DAT_08004bb0);\n    }\n    FUN_080036c6(PTR_s_WPos__08004bb4);\n    for (uint8_t i = 0; i < 3; i++) {\n        if ((PTR_DAT_08004bac[0x28] & 1) == 0) {\n            uint32_t uVar1 = stack_array[i];\n            uint32_t uVar2 = FUNC_08008cdc(*(uint32_t *)(PTR_DAT_08004bb8 + (i + 8) * 4), *(uint32_t *)(PTR_DAT_08004bb8 + (i + 10) * 4 + 4));\n            uVar2 = FUNC_08008cd8(uVar1, uVar2);\n            stack_array[i] = uVar2;\n        }\n        else {\n            uint64_t uVar2 = FUN_08008590(stack_array[i]);\n            uint32_t uVar3 = FUNC_08008cdc(*(uint32_t *)(PTR_DAT_08004bb8 + (i + 8) * 4), *(uint32_t *)(PTR_DAT_08004bb8 + (i + 10) * 4 + 4));\n            uint64_t uVar4 = FUN_08008590(uVar3);\n            uVar4 = FUNC_08008640((int)uVar4, (int)(uVar4 >> 0x20), DAT_08004b80, DAT_08004b84);\n            uVar2 = FUNC_080082d0((int)uVar2, (int)(uVar2 >> 0x20), (int)uVar4, (int)(uVar4 >> 0x20));\n            uint32_t uVar5 = FUN_08008c30((int)uVar2, (int)(uVar2 >> 0x20));\n            stack_array[i] = uVar5;\n        }\n        FUN_08003826(stack_array[i]);\n        if (i < 2) {\n            FUN_080036c6(PTR_DAT_08004bb0);\n        }\n    }\n    FUN_080036c6(PTR_DAT_08004bbc);\n}",
            "called": [
                "FUN_080082d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "process_data_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "check_collision_08008a74",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "uVar1": "dx",
                "bVar2": "no_collision",
                "bVar3": "dx_lt_0",
                "BLOCK_SIZE": "64"
            },
            "code": "uint check_collision_08008a74(uint x1, uint y1, uint x2, uint y2)\n{\n  bool x_overlap = (x1 < x2) ? (x2 - x1 < BLOCK_SIZE) : (x1 - x2 < BLOCK_SIZE);\n  bool y_overlap = (y1 < y2) ? (y2 - y1 < BLOCK_SIZE) : (y1 - y2 < BLOCK_SIZE);\n  return x_overlap && y_overlap;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": false,
            "current_name": "check_collision_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "check_for_valid_input_08002fd4",
                "iVar1": "input_value",
                "FUN_08002f74": "get_input_value",
                "PTR_DAT_08003000": "input_data"
            },
            "code": "void check_for_valid_input_08002fd4(void)\\n{\\n  int input_value;\\n  while((input_value = get_input_value()) || (PTR_DAT_08003000[1] == \"\\x03\"))\\n  {\\n    process_input(input_value);\\n    if (*PTR_DAT_08003000 != \"\\0\") {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002f74",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_0800525c",
                "FUN_080005b4",
                "FUN_08000220",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "check_for_valid_input_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "data",
                "uVar1": "converted_data",
                "uVar2": "converted_data_2",
                "uVar3": "converted_data_3",
                "uVar4": "converted_data_4",
                "local_12": "data_length"
            },
            "code": "void process_data_08002408(undefined4 data)\\n{\\n  undefined2 converted_data;\\n  undefined4 converted_data_2;\\n  undefined4 converted_data_3;\\n  undefined8 converted_data_4;\\n  ushort data_length;\\n  \\n  converted_data_2 = FUNC_08008eec(data, DAT_080024b8);\\n  converted_data_4 = FUN_08008590(converted_data_2);\\n  converted_data_4 = FUN_080094c0((int)converted_data_4,(int)((ulonglong)converted_data_4 >> 0x20));\\n  data_length = FUN_08008bf0((int)converted_data_4,(int)((ulonglong)converted_data_4 >> 0x20));\\n  FUN_08002fd4();\\n  converted_data_2 = FUNC_08008eec(data, DAT_080024bc);\\n  converted_data_3 = FUN_08008e44((uint)data_length * 0x32);\\n  converted_data_2 = FUNC_08008cd8(converted_data_2, converted_data_3);\\n  converted_data_4 = FUN_08008590(converted_data_2);\\n  converted_data_4 = FUN_080094c0((int)converted_data_4,(int)((ulonglong)converted_data_4 >> 0x20));\\n  converted_data = FUN_08008bf0((int)converted_data_4,(int)((ulonglong)converted_data_4 >> 0x20));\\n  do_nothing_08002814(converted_data);\\n  while ((data_length != 0 && (FUN_08003a74(), *PTR_DAT_080024c0 == \"\\0\"))) {\\n    FUN_080002a0(0x32);\\n    data_length = data_length - 1;\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080094c0",
                "FUN_080002a0",
                "FUN_08008590",
                "FUN_08002fd4",
                "FUN_08008e44",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "find_next_byte_08002a94",
                "puVar1": "previous_ptr",
                "puVar2": "current_ptr",
                "local_18": "previous_ptr",
                "local_14": "current_ptr",
                "local_9": "current_byte"
            },
            "code": "void find_next_byte_08002a94(void)\n{\n  uint8_t current_byte = *current_byte_ptr;\n  uint8_t *previous_ptr = NULL;\n  uint8_t *current_ptr = NULL;\n  while (current_byte != *end_byte_ptr) {\n    current_byte = get_next_byte(current_byte);\n    previous_ptr = current_ptr;\n    current_ptr = byte_map + (uint)current_byte * 0x40;\n    copy_bytes(current_ptr, previous_ptr, current_ptr);\n  }\n  return;\n}",
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "find_next_byte_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "new_data",
                "puVar2": "PTR_DATA",
                "bVar1": "index",
                "uVar3": "old_data",
                "uVar4": "temp_data"
            },
            "code": "void update_data_08003618(uint32_t new_data) {\n    uint8_t index = *PTR_INDEX;\n    uint8_t offset = index * 0x40;\n    uint32_t old_data = *(uint32_t *)(PTR_DATA + offset + 0x10);\n    uint32_t temp_data = compute_new_data(new_data);\n    temp_data = combine_data(old_data, temp_data);\n    *(uint32_t *)(PTR_DATA + offset + 0x20) = temp_data;\n    *(uint32_t *)(PTR_DATA + offset + 0x10) = new_data;\n    *(uint32_t *)(PTR_DATA + offset + 0x18) = 0;\n    *(uint32_t *)(PTR_DATA + offset + 0x1c) = 0;\n    PTR_DATA[offset + 0x25] = 0;\n    PTR_DATA[offset + 0x24] = 1;\n    do_cleanup();\n}\n",
            "called": [
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08002edc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": false,
            "current_name": "update_data_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = do_nothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = FUN_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_data_section_08007d08",
                "puVar1": "data_ptr",
                "DAT_08007d9c": "DATA_SECTION_START",
                "FUN_08007a10": "initialize_subsystem",
                "PTR_DAT_08007da0": "DATA_SECTION_PTR_1",
                "DAT_08007da4": "DATA_SECTION_VAR_1"
            },
            "code": "void initialize_data_section_08007d08(void)\n{\n    uint32_t *data_ptr;\n    data_ptr = DAT_08007d9c;\n    initialize_subsystem(data_ptr);\n    data_ptr[0] = 0x80;\n    data_ptr[1] = 0;\n    data_ptr[2] = 0;\n    data_ptr[3] = 0;\n    data_ptr[4] = 0;\n    data_ptr[5] = 1;\n    data_ptr[6] = 0x6800;\n    data_ptr[7] = 0;\n    data_ptr[8] = 0;\n    data_ptr[9] = 0;\n    data_ptr[10] = (uint32_t)((uint64_t)DAT_08007da4 * (uint64_t)*(uint32_t *)PTR_DAT_08007da0 >> 0x35) - 1;\n    data_ptr[11] = 199;\n    data_ptr[12] = 0;\n    data_ptr[13] = 100;\n    data_ptr[14] = 0;\n    data_ptr[15] = 0;\n    data_ptr[17] = 0;\n    data_ptr[18] = 0;\n}\n",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_section_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "swap_arguments_and_call_function_080091fc",
                "param_1": "arg1",
                "param_2": "arg2",
                "FUN_08009204": "call_function_with_swapped_arguments"
            },
            "code": "void swap_arguments_and_call_function_080091fc(int arg1, int arg2)\n{\n  call_function_with_swapped_arguments(arg2, arg1);\n  return;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": false,
            "current_name": "swap_arguments_and_call_function_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "checkPointerValidity_080058a0",
                "PTR_DAT_080058f0": "pointerData1",
                "PTR_DAT_080058fc": "pointerData2",
                "PTR_DAT_080058f4": "pointerData3",
                "DAT_080058f8": "data1"
            },
            "code": "void checkPointerValidity_080058a0()\n{\n    int* ptr = *(int**)PTR_DAT_080058f0;\n    if (*ptr == 0) {\n        PTR_DAT_080058fc[1] = 0;\n    }\n    else {\n        int val1 = *(int*)(ptr+0x10);\n        int val2 = *(int*)(PTR_DAT_080058f4+0x10);\n        int diff = val1 - val2;\n        FUN_08003618(diff);\n        *(undefined4 *)(PTR_DAT_080058f4 + 0x1c) = 0;\n        FUN_08005324(*(undefined4 *)(PTR_DAT_080058f4 + 0x1c));\n        *(undefined4 *)(PTR_DAT_080058f4 + 0x18) = DAT_080058f8;\n        *(undefined4 *)(PTR_DAT_080058f4 + 0x10) = 0;\n        PTR_DAT_080058fc[1] = 2;\n    }\n    return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "checkPointerValidity_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "string_to_process",
                "local_c": "current_char",
                "FUN_08008250": "process_character"
            },
            "code": "void process_string_080036c6(char *string_to_process)\n{\n  char *current_char;\n  current_char = string_to_process;\n  while (*current_char != '\\0') {\n    process_character(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004148",
                "FUN_08004940",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004228",
                "FUN_080044e8",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "process_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190",
                "puVar1": "memory_ptr",
                "DAT_08008240": "memory_data",
                "FUN_08007ea4": "initialize_memory_subroutine",
                "FUN_08007f54": "initialize_memory_subroutine"
            },
            "code": "void initialize_memory_08008190(void)\n{\n  uint *memory_ptr;\n  memory_ptr = DAT_08008240;\n  initialize_memory_08008190_subroutine(DAT_08008240);\n  memory_ptr[3] &= 0xffffdfff;\n  memory_ptr[3] = (memory_ptr[3] & 0xffff400c) | 0xc;\n  memory_ptr[4] &= 0xffff8090;\n  memory_ptr[5] &= 0xfffff000;\n  *memory_ptr &= 0xfffffc00;\n  initialize_memory_08008190_subroutine(memory_ptr,0x1c200);\n  memory_ptr[6] = memory_ptr[6];\n  memory_ptr[3] |= 0x2000;\n  return;\n}",
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_memory_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "check_and_call_functions_080074c8",
                "param_1": "flags",
                "FUN_08007402": "call_function_A",
                "PTR_DAT_08007518": "ptr_data_A",
                "FUN_0800195c": "call_function_B",
                "PTR_DAT_0800751c": "ptr_data_C",
                "FUN_08003a18": "call_function_C"
            },
            "code": "void check_and_call_functions_080074c8(uint flags) {\n  if ((flags & 0x01) != 0) {\n    call_function_A(0x3e);\n  }\n  if ((*(int *)PTR_DAT_08007518 != 0) && ((flags & 0x1e) != 0)) {\n    call_function_B();\n  }\n  if ((*(int *)PTR_DAT_0800751c != 0) && ((flags & 0x80) != 0)) {\n    call_function_C(flags);\n  }\n  return;\n}",
            "called": [
                "FUN_08007402",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_and_call_functions_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "fill_memory_with_value_0800b430",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "current_word",
                "puVar2": "current_byte",
                "uVar3": "remaining_size",
                "uVar4": "value_word",
                "bVar5": "need_byte_fill"
            },
            "code": "void fill_memory_with_value_0800b430(unsigned int *memory, unsigned char value, unsigned int size) {\n  unsigned int *current_word;\n  unsigned char *current_byte;\n  unsigned int remaining_size;\n  unsigned int value_word;\n  bool need_byte_fill;\n\n  if (((unsigned int)memory & 3) != 0) {\n    remaining_size = size - 1;\n    current_byte = (unsigned char *)memory;\n    if (size == 0) {\n      return;\n    }\n    while(true) {\n      memory = (unsigned int *)((int)current_byte + 1);\n      *current_byte = value;\n      size = remaining_size;\n      if (((unsigned int)memory & 3) == 0) break;\n      need_byte_fill = remaining_size == 0;\n      remaining_size = remaining_size - 1;\n      current_byte = (unsigned char *)memory;\n      if (need_byte_fill) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    value_word = (value << 24) | (value << 16) | (value << 8) | value;\n    if (0xf < size) {\n      current_word = memory + 4;\n      do {\n        current_word[-4] = value_word;\n        current_word[-3] = value_word;\n        current_word[-2] = value_word;\n        current_word[-1] = value_word;\n        current_word = current_word + 4;\n      } while (current_word != (unsigned int *)((int)memory + (size - 0x10 & 0xfffffff0) + 0x20));\n      remaining_size = size & 0xc;\n      memory = memory + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (remaining_size == 0) goto joined_r0x0800b4a8;\n    }\n    current_word = (unsigned int *)((size - 4 & 0xfffffffc) + 4 + (int)memory);\n    do {\n      *memory = value_word;\n      memory = current_word;\n      current_word = memory + 1;\n    } while (current_word != current_word);\n    size = size & 3;\n    memory = current_word;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    current_byte = (unsigned char *)memory;\n    do {\n      current_byte = current_byte + 1;\n      *current_byte = value;\n    } while ((unsigned int)(current_byte + 1) <= (unsigned int)(size + (int)memory));\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_08001994",
                "FUN_080079c0",
                "FUN_080005b4",
                "FUN_080002f0",
                "FUN_080004ac",
                "FUN_08004d7c",
                "FUN_08005814",
                "FUN_080024c4",
                "FUN_08002f24",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "fill_memory_with_value_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "print_error_message_08004030",
                "param_1": "error_code"
            },
            "code": "void print_error_message_08004030(char error_code){\n    if (error_code == \"\\0\") {\n        print_message(PTR_DAT_08004108);\n    }\n    else {\n        print_message(PTR_s_error__0800410c);\n        switch(error_code) {\n            case \"\\x01\":\n                print_message(PTR_s_Bad_number_format_08004110);\n                break;\n            case \"\\x02\":\n                print_message(PTR_s_Expected_command_letter_08004114);\n                break;\n            case \"\\x03\":\n                print_message(PTR_s_Unsupported_statement_08004118);\n                break;\n            case \"\\x04\":\n                print_message(PTR_s_Invalid_radius_0800411c);\n                break;\n            case \"\\x05\":\n                print_message(PTR_s_Modal_group_violation_08004120);\n                break;\n            case \"\\x06\":\n                print_message(PTR_s_Invalid_statement_08004124);\n                break;\n            case \"\\a\":\n                print_message(PTR_s_Setting_disabled_08004128);\n                break;\n            case \"\\b\":\n                print_message(PTR_s_Value___0_0_0800412c);\n                break;\n            case \"\\t\":\n                print_message(PTR_s_Value___3_usec_08004130);\n                break;\n            case \"\\n\":\n                print_message(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n                break;\n            case \"\\v\":\n                print_message(PTR_s_Busy_or_queued_08004138);\n                break;\n            case \"\\f\":\n                print_message(PTR_s_Alarm_lock_0800413c);\n                break;\n            case \"\\r\":\n                print_message(PTR_s_Line_overflow_08004140);\n        }\n        print_message(PTR_DAT_08004144);\n    }\n    return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_error_message_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "check_if_data_exceeds_threshold_08005360",
                "PTR_DAT_08005398": "data_pointer",
                "DAT_0800539c": "threshold",
                "data_ptr": "data_pointer",
                "data_sum": "data_total_sum",
                "threshold": "threshold_value",
                "data_total": "total_data_value"
            },
            "code": "bool check_if_data_exceeds_threshold_08005360(void)\n{\n  int* data_ptr = PTR_DAT_08005398 + 0x18;\n  int data_sum = *(int *)(PTR_DAT_08005398 + 0x14) + *(int *)(data_ptr);\n  *data_ptr = data_sum;\n  uint DAT_0800539c = DAT_0800539c;\n  uint data_total = *(uint *)(data_ptr);\n  if (DAT_0800539c < data_total) {\n    *data_ptr -= 420000;\n  }\n  return DAT_0800539c < data_total;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_if_data_exceeds_threshold_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "reset_pointers_08003980",
                "PTR_DAT_08003998": "data_pointer_1",
                "PTR_DAT_0800399c": "data_pointer_2"
            },
            "code": "void reset_pointers_08003980(void)\n{\n  *PTR_DAT_08003998 = 0;\n  *PTR_DAT_0800399c = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "reset_pointers_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "convert_char_to_int_08006de0",
                "param_1": "character",
                "uVar1": "converted_value",
                "FUN_08006a18": "convert_character"
            },
            "code": "int convert_char_to_int_08006de0(char character) {\n  int converted_value = convert_character((int)character);\n  return converted_value;\n}",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "main_08007540",
                "FUN_080059b4": "initialize_network",
                "FUN_08007436": "load_data",
                "FUN_0800778c": "preprocess_data",
                "FUN_08007e08": "train_network",
                "FUN_080079c0": "evaluate_network",
                "FUN_08008190": "save_model",
                "FUN_08005984": "set_seed",
                "FUN_08001ddc": "initialize_random_generator"
            },
            "code": "int main_08007540(void)\n{\n  initialize_network();\n  load_data();\n  preprocess_data();\n  train_network();\n  evaluate_network();\n  save_model();\n  return 0;\n}",
            "called": [
                "FUN_080079c0",
                "FUN_08008190",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08007436",
                "FUN_08005984",
                "FUN_080059b4",
                "FUN_08001ddc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "main_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "set_param_080052dc",
                "param_1": "new_param",
                "PTR_DAT_08005308": "param_ptr",
                "DAT_08005308": "param_offset",
                "*PTR_DAT_08005308": "current_param",
                "mask": "mask",
                "masked_current_param": "masked_current_param",
                "masked_new_param": "masked_new_param"
            },
            "code": "void set_param_080052dc(uint new_param) {\n  uint* PTR_DAT_08005308 = (uint*)(DAT_08005308 + 0x14);\n  uint *PTR_DAT_08005308 = *PTR_DAT_08005308;\n  uint mask = 0xfffff55f;\n  uint masked_*PTR_DAT_08005308 = *PTR_DAT_08005308 & mask;\n  uint masked_new_param = new_param | masked_*PTR_DAT_08005308;\n  *PTR_DAT_08005308 = masked_new_param;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "set_param_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_result_080064ec",
                "uVar1": "flags",
                "uVar2": "denominator",
                "local_c": "result",
                "DAT_0800661c": "data_pointer",
                "count_leading_zeroes": "count_leading_zeros",
                "DAT_08006620": "dividend_1",
                "DAT_08006624": "dividend_2"
            },
            "code": "uint calculate_result_080064ec(void)\n{\n  uint result;\n  uint flags;\n  uint divisor;\n  uint multiplier;\n  uint quotient;\n  \n  flags = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (flags == 8) {\n    uint denominator = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    uint shift_count = count_leading_zeroes(0x200);\n    if ((*(uint *)(DAT_0800661c + 4) & 0x400000) >> (shift_count & 0xff) == 0) {\n      uint dividend_shift_count = count_leading_zeroes(0x3fe0000);\n      multiplier = (*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (dividend_shift_count & 0xff);\n      divisor = DAT_08006620 / denominator;\n    }\n    else {\n      uint dividend_shift_count = count_leading_zeroes(0x3fe0000);\n      multiplier = (*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (dividend_shift_count & 0xff);\n      divisor = DAT_08006624 / denominator;\n    }\n    uint quotient_shift_count = count_leading_zeroes(0xc000);\n    quotient = ((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (quotient_shift_count & 0xff)) + 1;\n    result = ((multiplier * divisor) / quotient) & 0xffffffff;\n  }\n  else {\n    if (flags == 0) {\n      result = DAT_08006620;\n    }\n    else if (flags == 4) {\n      result = DAT_08006624;\n    }\n    else {\n      result = DAT_08006620;\n    }\n  }\n  return result;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": false,
            "current_name": "calculate_result_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "mask_bits_08006ba0",
                "param_1": "start_position",
                "param_2": "num_bits",
                "param_3": "value",
                "uVar1": "end_position",
                "mask": "mask",
                "shifted_value": "shifted_value"
            },
            "code": "uint mask_bits_08006ba0(uint start_position, uint num_bits, uint value)\n{\n  uint end_position = start_position + num_bits;\n  uint mask = (1U << num_bits) - 1U;\n  uint shifted_value = (value >> start_position) & mask;\n  return (shifted_value << start_position) | (mask << end_position);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "mask_bits_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "verify_checksum_080003ec",
                "param_1": "data",
                "param_2": "length",
                "param_3": "expected_checksum",
                "cVar1": "current_char",
                "local_1c": "length_remaining",
                "local_18": "current_index",
                "local_14": "current_position",
                "local_9": "calculated_checksum"
            },
            "code": "bool verify_checksum_080003ec(char *data, int length, int expected_checksum)\n{\n    char current_char;\n    uint8_t calculated_checksum = 0;\n\n    if (*(int *)PTR_DAT_08000470 == 0) {\n        initialize();\n    }\n\n    for (int i = 0; i < length; i++) {\n        current_char = get_next_char();\n        calculated_checksum += (current_char != 0);\n        *data = current_char;\n        data++;\n    }\n\n    uint8_t actual_checksum = get_next_char();\n    return calculated_checksum == actual_checksum;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d2c",
                "FUN_08004d7c",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "verify_checksum_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "replace_null_with_0x12_and_decrement_08002896",
                "param_1": "character",
                "local_9": "result"
            },
            "code": "char replace_null_with_0x12_and_decrement_08002896(char character) {\n  char result = character;\n  if (character == '\\0') {\n    result = '\\x12';\n  }\n  return result - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "replace_null_with_0x12_and_decrement_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = FUN_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_values_080001ac",
                "param_1": "value1",
                "param_2": "value2",
                "DAT_080001bc": "global_variable",
                "PTR_FUN_080001c4": "global_pointer1",
                "PTR_DAT_080001c0": "global_pointer2"
            },
            "code": "uint64_t concatenate_values_080001ac(uint8_t *value1, uint8_t *value2) {\n  if (DAT_080001bc != 0) {\n    value1 = PTR_FUN_080001c4;\n    value2 = PTR_DAT_080001c0;\n  }\n  return ((uint64_t)value2 << 32) | value1;\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "concatenate_values_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "initialize_array_with_value_08003740",
                "param_1": "array",
                "FUN_080036f0": "set_array_value",
                "PTR_": "array_",
                "DAT_": "data_"
            },
            "code": "void initialize_array_with_value_08003740(void* array, int value) {\n  set_PTR_value(array, value, 8);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "initialize_array_with_value_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "set_params_to_pointer_array_08000478",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "PTR_DAT_080004a8[0x19]": "PTR_DAT_080004a8[25]",
                "PTR_DAT_080004a8[0x1a]": "PTR_DAT_080004a8[26]",
                "PTR_DAT_080004a8[0x1b]": "PTR_DAT_080004a8[27]"
            },
            "code": "void set_params_to_pointer_array_08000478(void* param_1, void* param_2, void* param_3) {\n  PTR_DAT_080004a8[0x19] = param_1;\n  PTR_DAT_080004a8[0x1a] = param_2;\n  PTR_DAT_080004a8[0x1b] = param_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "set_params_to_pointer_array_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "print_character_08006d2e",
                "param_1": "character",
                "FUN_080069b4": "print_ascii_code"
            },
            "code": "void print_character_08006d2e(char character){\n    print_ascii_code((int)character);\n    return;\n}",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "wait_for_bit_to_set_08007e1c",
                "param_1": "bit_to_set",
                "DAT_08007e48": "status_register"
            },
            "code": "void wait_for_bit_to_set_08007e1c(byte bit_to_set){\n  do {\n  } while ((*DAT_08007e48 & 0x80) == 0);\n  DAT_08007e48[1] = (uint)bit_to_set;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "imported": false,
            "current_name": "wait_for_bit_to_set_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "param_5": "input_5",
                "iVar1": "is_valid",
                "uVar2": "intermediate_result_2",
                "uVar3": "intermediate_result_3",
                "uVar4": "intermediate_result_4",
                "uVar5": "intermediate_result_5",
                "uVar6": "intermediate_result_6",
                "uVar7": "intermediate_result_1",
                "uVar8": "intermediate_result_7"
            },
            "code": "undefined4 calculate_result_0800adf0(undefined4 input_1, uint32_t input_2, undefined4 input_3, undefined4 input_4, int input_5) {\n  int is_valid = FUN_08008ba0();\n  if (((input_2 & 0x7fffffff) < 0x3e400000) && (is_valid == 0)) {\n    return input_1;\n  }\n  undefined8 intermediate_result_1 = FUNC_08008640(input_1, input_2, input_1);\n  undefined4 intermediate_result_2 = (undefined4)((ulonglong)intermediate_result_1 >> 0x20);\n  undefined4 intermediate_result_3 = (undefined4)intermediate_result_1;\n  intermediate_result_1 = FUNC_08008640(input_1, input_2, intermediate_result_3, intermediate_result_2);\n  undefined4 intermediate_result_4 = (undefined4)((ulonglong)intermediate_result_1 >> 0x20);\n  undefined4 intermediate_result_5 = (undefined4)intermediate_result_1;\n  intermediate_result_1 = FUNC_08008640(intermediate_result_3, intermediate_result_2, PTR_DAT_0800af40, PTR_DAT_0800af44);\n  intermediate_result_1 = FUNC_080082d0((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), PTR_DAT_0800af48, PTR_DAT_0800af4c);\n  intermediate_result_1 = FUNC_08008640((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), intermediate_result_3, intermediate_result_2);\n  intermediate_result_1 = FUNC_080082d4((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), PTR_DAT_0800af50, PTR_DAT_0800af54);\n  intermediate_result_1 = FUNC_08008640((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), intermediate_result_3, intermediate_result_2);\n  intermediate_result_1 = FUNC_080082d0((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), PTR_DAT_0800af58, PTR_DAT_0800af5c);\n  intermediate_result_1 = FUNC_08008640((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), intermediate_result_3, intermediate_result_2);\n  intermediate_result_1 = FUNC_080082d4((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), PTR_DAT_0800af60, PTR_DAT_0800af64);\n  undefined4 intermediate_result_6 = (undefined4)((ulonglong)intermediate_result_1 >> 0x20);\n  if (input_5 != 0) {\n    undefined8 intermediate_result_7 = FUNC_08008640(input_3, input_4, 0, PTR_DAT_0800af70);\n    intermediate_result_1 = FUNC_08008640(intermediate_result_5, intermediate_result_4, (int)intermediate_result_1, intermediate_result_6);\n    intermediate_result_1 = FUNC_080082d0((int)intermediate_result_7, (int)((ulonglong)intermediate_result_7 >> 0x20), (int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20));\n    intermediate_result_1 = FUNC_08008640((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), intermediate_result_3, intermediate_result_2);\n    intermediate_result_1 = FUNC_080082d0((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), input_3, input_4);\n    intermediate_result_7 = FUNC_08008640(intermediate_result_5, intermediate_result_4, PTR_DAT_0800af68, PTR_DAT_0800af6c);\n    intermediate_result_1 = FUNC_080082d4((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), (int)intermediate_result_7, (int)((ulonglong)intermediate_result_7 >> 0x20));\n    undefined4 final_result = FUNC_080082d0(input_1, input_2, (int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20));\n    return final_result;\n  }\n  intermediate_result_1 = FUNC_08008640(intermediate_result_3, intermediate_result_2, (int)intermediate_result_1, intermediate_result_6);\n  intermediate_result_1 = FUNC_080082d0((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), PTR_DAT_0800af68, PTR_DAT_0800af6c);\n  intermediate_result_1 = FUNC_08008640((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), intermediate_result_5, intermediate_result_4);\n  undefined4 final_result = FUNC_080082d4((int)intermediate_result_1, (int)((ulonglong)intermediate_result_1 >> 0x20), input_1, input_2);\n  return final_result;\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "calculate_result_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "PTR_DAT_08003b90": "PTR_DATA",
                "PTR_DAT_08003b94": "PTR_DATA2",
                "bVar1": "data",
                "FUN_08004148": "send_error_message",
                "FUN_080041a0": "set_data_flag",
                "FUN_08004940": "do_something",
                "FUN_0800587c": "do_something_else",
                "FUN_080058a0": "do_another_thing",
                "FUN_0800585c": "do_one_last_thing"
            },
            "code": "void process_data_08003a74(void)\\n{\\n  byte data = PTR_DAT_08003b90[2];\\n\\n  if (data != \"\\0\") {\\n    if ((data & 0x60) != 0) {\\n      PTR_DAT_08003b90[1] = 6;\\n      if ((data & 0x40) == 0) {\\n        send_error_message(0xfffffffe);\\n      }\\n      else {\\n        send_success_message();\\n        set_data_flag();\\n        PTR_DAT_08003b90[2] &= 0xef;\\n        wait_for_data_flag();\\n      }\\n      PTR_DAT_08003b90[2] &= 0x9f;\\n    }\\n    if ((data & 0x10) == 0) {\\n      if ((data & 1) != 0) {\\n        do_something();\\n        PTR_DAT_08003b90[2] &= 0xfe;\\n      }\\n      if ((data & 8) != 0) {\\n        do_something_else();\\n        PTR_DAT_08003b90[2] &= 0xf7;\\n      }\\n      if ((data & 4) != 0) {\\n        do_another_thing();\\n        PTR_DAT_08003b90[2] &= 0xfb;\\n      }\\n      if ((data & 2) != 0) {\\n        do_one_last_thing();\\n        if ((PTR_DAT_08003b90[0x28] & 2) != 0) {\\n          PTR_DAT_08003b90[0x10] = 1;\\n        }\\n        PTR_DAT_08003b90[2] &= 0xfd;\\n      }\\n    }\\n    else {\\n      *PTR_DAT_08003b90 = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080058a0",
                "FUN_08004940",
                "FUN_08004148",
                "FUN_0800587c",
                "FUN_0800585c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_08002fd4",
                "FUN_08003f34",
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_data_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = FUN_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = FUN_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "set_byte_value_08006b00",
                "param_1": "value",
                "param_2": "index",
                "DAT_08006b4c": "data_ptr_1",
                "DAT_08006b50": "data_ptr_2"
            },
            "code": "void set_byte_value_08006b00(byte value, uint index) {\n  if (value < 0) {\n    *(char *)((value & 0xf) + DAT_08006b4c + 0x14) = (char)((index & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)value + DAT_08006b50 + 0x300) = (char)((index & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "set_byte_value_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "checkIfDataIsNotNull_0800b4d0",
                "DAT_0800b4dc": "data",
                "FUN_0800b524": "performAction",
                "PTR_LAB_0800b4f0_1_0800b4e0": "labelPointer"
            },
            "code": "void checkIfDataIsNotNull_0800b4d0()\n{\n    if (DAT_0800b4dc != 0)\n    {\n        performAction(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\n        return;\n    }\n    return;\n}",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "checkIfDataIsNotNull_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculate_checksum_08007f54",
                "param_1": "data_address",
                "param_2": "data_length",
                "lVar1": "checksum1",
                "iVar2": "checksum2",
                "iVar3": "checksum3",
                "uVar4": "random_value",
                "DAT_08008184": "data_address1",
                "DAT_08008188": "data_address2",
                "checksum_constant": "DAT_0800818c",
                "*(uint *)(param_1 + 0xc)": "data_flags",
                "*(uint *)(param_1 + 8)": "checksum"
            },
            "code": "void calculate_checksum_08007f54(int data_address, int data_length) {\n  long long checksum1;\n  int checksum2;\n  int checksum3;\n  unsigned int data_flags = *(unsigned int *)(data_address + 0xc);\n  if ((data_flags & 0x8000) == 0) {\n    if ((data_address != DAT_08008184) && (data_address != DAT_08008188)) {\n      unsigned long long temp1 = (unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)((int)get_random_value() * 0x19) / ((unsigned long long)(unsigned int)(data_length << 2)));\n      checksum2 = get_random_value((int)temp1,(int)((unsigned long long)temp1 >> 0x20),(int)checksum1);\n      checksum3 = get_random_value();\n      *(unsigned int *)(data_address + 8) = ((unsigned int)(temp1 >> 0x25) << 4) | ((unsigned int)checksum_constant * ((unsigned long long)(unsigned int)(((unsigned int)(checksum2 * 0x19) / (unsigned int)(data_length << 2)) + ((unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)(checksum3 * 0x19) / ((unsigned long long)(unsigned int)(data_length << 2))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      return;\n    }\n    else {\n      unsigned long long temp1 = (unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)((int)get_random_value() * 0x19) / ((unsigned long long)(unsigned int)(data_length << 2)));\n      checksum2 = get_random_value((int)temp1,(int)((unsigned long long)temp1 >> 0x20),(int)checksum1);\n      checksum3 = get_random_value();\n      *(unsigned int *)(data_address + 8) = ((unsigned int)(temp1 >> 0x25) << 4) | ((unsigned int)checksum_constant * ((unsigned long long)(unsigned int)(((unsigned int)(checksum2 * 0x19) / (unsigned int)(data_length << 2)) + ((unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)(checksum3 * 0x19) / ((unsigned long long)(unsigned int)(data_length << 2))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n    }\n  }\n  else {\n    if ((data_address != DAT_08008184) && (data_address != DAT_08008188)) {\n      unsigned long long temp1 = (unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)((int)get_random_value() * 0x19) / ((unsigned long long)(unsigned int)(data_length << 1)));\n      checksum2 = get_random_value((int)temp1,(int)((unsigned long long)temp1 >> 0x20),(int)checksum1);\n      checksum3 = get_random_value();\n      *(unsigned int *)(data_address + 8) = ((unsigned int)(temp1 >> 0x25) << 4) | ((unsigned int)checksum_constant * ((unsigned long long)(unsigned int)(((unsigned int)(checksum2 * 0x19) / (unsigned int)(data_length << 1)) + ((unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)(checksum3 * 0x19) / ((unsigned long long)(unsigned int)(data_length << 1))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      return;\n    }\n    else {\n      unsigned long long temp1 = (unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)((int)get_random_value() * 0x19) / ((unsigned long long)(unsigned int)(data_length << 1)));\n      checksum2 = get_random_value((int)temp1,(int)((unsigned long long)temp1 >> 0x20),(int)checksum1);\n      checksum3 = get_random_value();\n      *(unsigned int *)(data_address + 8) = ((unsigned int)(temp1 >> 0x25) << 4) | ((unsigned int)checksum_constant * ((unsigned long long)(unsigned int)(((unsigned int)(checksum2 * 0x19) / (unsigned int)(data_length << 1)) + ((unsigned long long)checksum_constant * ((unsigned long long)(unsigned int)(checksum3 * 0x19) / ((unsigned long long)(unsigned int)(data_length << 1))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n    }\n  }\n}",
            "called": [
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "process_input_08003b98",
                "param_1": "input",
                "bVar1": "second_char",
                "iVar2": "int_param",
                "uVar4": "return_val",
                "uVar5": "uVar5",
                "local_14": "local_int_param",
                "local_10": "local_index_3",
                "local_a": "local_index_1",
                "local_9": "local_index_2"
            },
            "code": "uint process_input_08003b98(char *input)\n{\n  byte first_char = input[0];\n  int int_param;\n  undefined4 uVar3;\n  uint return_val;\n  undefined8 uVar5;\n  undefined4 local_14;\n  undefined4 local_10;\n  byte local_index_1;\n  byte local_index_2;\n  \n  if (first_char != '$') {\n    return FUNC_080005b4(input);\n  }\n  local_index_1 = 1;\n  local_index_2 = 0;\n  byte second_char = input[1];\n  if (second_char == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < second_char) || (second_char < 0x23)) {\n    goto switchD_08003bdc_caseD_25;\n  }\n  switch(second_char) {\n    case 0x23:\n      local_index_1 = 2;\n      if (input[2] != '\\0') {\n        return 3;\n      }\n      FUN_080044e8();\n      break;\n    case 0x24:\n      local_index_1 = 2;\n      if (input[2] != '\\0') {\n        return 3;\n      }\n      FUN_08004250();\n      break;\n    case 0x43:\n      local_index_1 = 2;\n      if (input[2] != '\\0') {\n        return 3;\n      }\n      if (PTR_DAT_08003f2c[1] == '\\a') {\n        FUN_080025e8();\n        FUN_080041a0(5);\n      }\n      else {\n        if (PTR_DAT_08003f2c[1] != '\\0') {\n          return 0xb;\n        }\n        PTR_DAT_08003f2c[1] = 7;\n        FUN_080041a0(4);\n      }\n      break;\n    case 0x47:\n      local_index_1 = 2;\n      if (input[2] != '\\0') {\n        return 3;\n      }\n      FUN_080046d0();\n      break;\n    case 0x48:\n      if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n        return 7;\n      }\n      if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n        return 0xb;\n      }\n      FUN_080024c4();\n      if (*PTR_DAT_08003f2c == '\\0') {\n        FUN_080039bc();\n      }\n      break;\n    case 0x4e:\n      local_index_1 = 2;\n      if (input[2] == '\\0') {\n        for (local_index_2 = 0; local_index_2 < 2; local_index_2++) {\n          int_param = FUN_08004d2c(local_index_2, input);\n          if (int_param == 0) {\n            FUN_08004030(10);\n          }\n          else {\n            FUN_08004900(local_index_2, input);\n          }\n        }\n        return 0;\n      }\n      local_index_2 = '\\x01';\n      \n    default:\nswitchD_08003bdc_caseD_25:\n      int_param = FUN_08002638(input, &local_index_1, &local_10);\n      if (int_param == 0) {\n        return 1;\n      }\n      byte index_3 = local_index_1 + 1;\n      if (input[local_index_1] != '=') {\n        return 3;\n      }\n      local_index_1 = index_3;\n      if (local_index_2 == '\\0') {\n        int_param = FUN_08002638(input, &local_index_1, &local_14);\n        if (int_param == 0) {\n          return 1;\n        }\n        if (input[local_index_1] == '\\0') {\n          uVar3 = FUN_08009278(local_10);\n          return_val = FUNC_08004e30(uVar3, local_14);\n          return return_val;\n        }\n        return 3;\n      }\n      do {\n        input[(uint)local_index_1 - (uint)index_3] = input[local_index_1];\n        return_val = (uint)local_index_1;\n        local_index_1++;\n      } while (input[return_val] != '\\0');\n      local_index_2 = index_3;\n      local_index_2 = FUNC_080005b4(input);\n      if (local_index_2 != 0) {\n        return (uint)local_index_2;\n      }\n      uVar5 = FUN_08008590(local_10);\n      uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      local_index_2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      FUN_08004bc0(local_index_2, input);\n      break;\n    case 0x58:\n      local_index_1 = 2;\n      if (input[2] != '\\0') {\n        return 3;\n      }\n      if (PTR_DAT_08003f2c[1] == '\\x06') {\n        FUN_080041a0(3);\n        PTR_DAT_08003f2c[1] = 0;\n      }\n  }\n  return 0;\n}",
            "called": [
                "FUN_080046d0",
                "FUN_08008590",
                "FUN_08004bc0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_08009278",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_080025e8",
                "FUN_08004250",
                "FUN_08004d2c",
                "FUN_080005b4",
                "FUN_08009798",
                "FUN_080024c4",
                "FUN_080041a0",
                "FUN_08004900",
                "FUN_080044e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "process_input_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "initialize_globals_080024c4",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "local_13": "local_variable_1",
                "local_12": "local_variable_2",
                "local_11": "local_variable_3",
                "PTR_DAT_080025d8": "pointer_data_1",
                "PTR_DAT_080025dc": "pointer_data_2",
                "PTR_DAT_080025e0": "pointer_data_3",
                "PTR_DAT_080025e4": "pointer_data_4",
                "initialize_helper_functions": "initialize_function_1",
                "initialize_other_functions": "initialize_function_2",
                "FUN_08008e44": "get_variable",
                "FUNC_08008eec": "helper_function",
                "FUN_08001e98": "function_2",
                "FUN_0800585c": "function_3",
                "FUN_08002fd4": "function_4",
                "set_string": "set_string"
            },
            "code": "void initialize_globals_080024c4()\n{\n  int five = 5;\n  int zero = 0;\n  char is_negative_1;\n  char is_positive_1;\n  char local_11;\n\n  PTR_DAT_080025d8[1] = five;\n  *(int *)PTR_DAT_080025dc = zero;\n  initialize_helper_functions();\n  initialize_other_functions();\n  if (*PTR_DAT_080025d8 == zero) {\n    set_string(PTR_DAT_080025e0, 0, 0xc);\n    initialize_function_1();\n    PTR_DAT_080025d8[1] = zero;\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x20) == zero) {\n      is_negative_1 = -1;\n    }\n    else {\n      is_negative_1 = 1;\n    }\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x80) == zero) {\n      is_positive_1 = -1;\n    }\n    else {\n      is_positive_1 = 1;\n    }\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x200) == zero) {\n      local_11 = -1;\n    }\n    else {\n      local_11 = 1;\n    }\n    int var1 = get_variable(is_negative_1);\n    var1 = helper_function(var1, *(int *)(PTR_DAT_080025e4 + 0x38));\n    int var2 = get_variable(is_positive_1);\n    var2 = helper_function(var2, *(int *)(PTR_DAT_080025e4 + 0x38));\n    int var3 = get_variable(local_11);\n    var3 = helper_function(var3, *(int *)(PTR_DAT_080025e4 + 0x38));\n    function_2(var1,var2,var3,*(int *)(PTR_DAT_080025e4 + 0x30),0);\n    function_3();\n    function_4();\n    initialize_function_1();\n    if ((PTR_DAT_080025e4[0x28] & 8) != 0) {\n      *(int *)PTR_DAT_080025dc = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_0800585c",
                "FUN_0800b430",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_globals_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "check_data_mismatch_08002f40",
                "*PTR_DAT_08002f6c": "*data_pointer_1",
                "*PTR_DAT_08002f70": "*data_pointer_2",
                "uVar1": "new_data",
                "FUN_08002870": "modify_data"
            },
            "code": "void check_data_mismatch_08002f40(void)\n{\n  const int data_1 = *PTR_DAT_08002f6c;\n  const int data_2 = *PTR_DAT_08002f70;\n  if (data_1 != data_2) {\n    const int new_data = modify_data(data_2);\n    *PTR_DAT_08002f70 = new_data;\n  }\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_data_mismatch_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08004250",
                "FUN_08001994",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08002908",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "set_flag_if_not_set_080025e8",
                "PTR_DAT_08002634": "status_flags",
                "perform_action_1": "enable_something",
                "perform_action_2": "initialize_something",
                "perform_action_3": "execute_something"
            },
            "code": "void set_flag_if_not_set_080025e8() {\n  if ((PTR_DAT_08002634[2] & 0x10) == 0) {\n    PTR_DAT_08002634[2] |= 0x10;\n    perform_action_1();\n    perform_action_2();\n    if ((byte)PTR_DAT_08002634[1] - 3 < 3) {\n      PTR_DAT_08002634[2] |= 0x20;\n      perform_action_3();\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_080057e4",
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08005900",
                "FUN_080005b4",
                "FUN_08003b98",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "imported": false,
            "current_name": "set_flag_if_not_set_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "do_nothing_and_return_08005250",
                "do_nothing_08005214": "do_nothing"
            },
            "code": "void do_nothing_and_return_08005250(void)\n{\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_080025e8",
                "FUN_0800525c",
                "FUN_08005238"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "code": "void infinite_loop_08007430() {\n  while (true) {\n    // Do nothing\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "infinite_loop_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800056c",
                "FUN_0800af78",
                "FUN_08002638",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "set_flags_and_call_functions_08007436",
                "local_4c": "local_variable_1",
                "local_48": "local_variable_2",
                "local_34": "local_variable_3",
                "local_30": "local_variable_4",
                "local_2c": "local_variable_5",
                "local_28": "local_variable_6",
                "local_24": "local_variable_7",
                "local_20": "local_variable_8",
                "local_1c": "local_variable_9",
                "local_18": "local_variable_10",
                "local_14": "local_variable_11",
                "local_10": "local_variable_12",
                "local_c": "local_variable_13",
                "DAT_080074c0": "flag_data_location",
                "DAT_080074c4": "other_flag_data_location",
                "FUNC_08005cec": "function_1",
                "FUN_08007430": "function_2",
                "FUN_0800618c": "function_3"
            },
            "code": "void set_flags_and_call_functions_08007436(void)\n{\n  int function_return_value;\n  uint *flag_pointer = (uint *)(DAT_080074c0 + 0x40);\n  uint *other_flag_pointer = DAT_080074c4;\n  uint flag_value_1 = 0x10000000;\n  uint flag_value_2 = 0xc000;\n  int local_variable_1 = 1;\n  int local_variable_2 = 1;\n  int local_variable_3 = 2;\n  uint local_variable_4 = 0x400000;\n  int local_variable_5 = 8;\n  int local_variable_6 = 0x150;\n  int local_variable_7 = 2;\n  int local_variable_8 = 7;\n  *flag_pointer = *flag_pointer | flag_value_1;\n  *other_flag_pointer = *other_flag_pointer | flag_value_2;\n  function_return_value = FUNC_08005cec(&local_variable_1);\n  if (function_return_value != 0) {\n    FUN_08007430();\n  }\n  int local_variable_9 = 0xf;\n  int local_variable_10 = 2;\n  int local_variable_11 = 0;\n  uint local_variable_12 = 0x1400;\n  uint local_variable_13 = 0x1000;\n  function_return_value = FUN_0800618c(&local_variable_9, 5);\n  if (function_return_value != 0) {\n    FUN_08007430();\n  }\n  return;\n}",
            "called": [
                "FUN_0800618c",
                "FUN_08005cec",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_08005814",
                "PTR_DAT_08005834": "PTR_CONFIG_DATA",
                "FUN_0800b430": "set_default_values",
                "FUN_08005324": "set_display_brightness",
                "PTR_DAT_08005838": "PTR_STATUS_FLAG"
            },
            "code": "void initialize_08005814(void)\n{\n  set_default_values(PTR_DAT_08005834,0,0x24);\n  set_display_brightness(800);\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "set_byte_value_08005bdc",
                "param_1": "index",
                "param_2": "value",
                "PTR_DAT_08005c28": "ptr1",
                "PTR_DAT_08005c2c": "ptr2"
            },
            "code": "void set_byte_value_08005bdc(byte index, uint value) {\n    if (index < 0) {\n        char* ptr = (char*)((index & 0xf) + DAT_08005c28 + 0x14);\n        *ptr = (char)((value & 0xff) << 4);\n    }\n    else {\n        char* ptr = (char*)((char)index + DAT_08005c2c + 0x300);\n        *ptr = (char)((value & 0xff) << 4);\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": false,
            "current_name": "set_byte_value_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0",
                "PTR_DAT_08000308": "PTR_data_array",
                "PTR_DAT_0800030c": "PTR_data_flag"
            },
            "code": "void initialize_data_080002f0(void)\n{\n  set_memory(PTR_DAT_08000308, 0xff, 4);\n  *(int *)PTR_DAT_0800030c = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000374",
                "FUN_08000310",
                "FUN_08000340",
                "FUN_080003ec"
            ],
            "imported": false,
            "current_name": "initialize_data_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "process_data_0800778c",
                "local_24": "bit_position",
                "local_20": "mask1",
                "local_1c": "mask2",
                "local_18": "mask3",
                "local_14": "mask4",
                "local_10": "data_ptr",
                "local_c": "loop_counter"
            },
            "code": "void process_data_0800778c()\n{\n  int bit_position;\n  uint mask1;\n  uint mask2;\n  uint mask3;\n  uint mask4;\n  uint *data_ptr;\n  uint loop_counter;\n  \n  for (loop_counter = 0; loop_counter < 0x11; loop_counter = loop_counter + 1) {\n    data_ptr = (uint *)(PTR_DAT_0800784c + loop_counter * 0x18);\n    *(uint *)(DAT_08007850 + 0x30) = *(uint *)(DAT_08007850 + 0x30) | 1 << (*data_ptr >> 4 & 0xff);\n    bit_position = 1 << (*data_ptr & 0xf);\n    mask1 = data_ptr[1];\n    mask2 = data_ptr[2];\n    mask3 = data_ptr[3];\n    mask4 = data_ptr[4];\n    FUN_08006e88(((*data_ptr >> 4) + 0x100080) * 0x400,&bit_position);\n    if (-1 < (int)data_ptr[5]) {\n      FUN_0800733e(((*data_ptr >> 4) + 0x100080) * 0x400,1 << (*data_ptr & 0xf) & 0xffff,data_ptr[5] & 0xff);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "process_data_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "run_application_08001ddc",
                "FUN_080051b4": "initialize_network",
                "FUN_0800583c": "initialize_database",
                "FUN_0800b430": "initialize_settings",
                "PTR_DAT_08001e90": "PTR_SETTINGS",
                "PTR_DAT_08001e94": "PTR_STATUS",
                "do_nothing_08008244": "do_nothing",
                "do_nothing_080082ba": "do_nothing",
                "FUN_08002f24": "update_network",
                "FUN_080004ac": "process_input",
                "FUN_080039a0": "process_output",
                "FUN_08005238": "update_display",
                "FUN_080001f8": "process_events",
                "FUN_0800192c": "process_errors",
                "FUN_08005814": "process_user_input",
                "FUN_0800283a": "process_database_updates",
                "FUN_080039bc": "process_database_queries",
                "FUN_08003a74": "process_timer_events",
                "FUN_08003f34": "process_file_system_events",
                "FUN_080041a0": "process_error"
            },
            "code": "void run_application_08001ddc(void)\n{\n  do_nothing();\n  initialize_network();\n  initialize_database();\n  initialize_settings(PTR_DAT_08001e90, 0, 20);\n  *PTR_DAT_08001e90 = 1;\n  PTR_DAT_08001e90[1] = 1;\n  do {\n    if (*PTR_DAT_08001e90 != '\\0') {\n      do_nothing();\n      update_network();\n      process_input();\n      process_output();\n      update_display();\n      process_events();\n      process_errors();\n      process_user_input();\n      process_database_updates();\n      *PTR_DAT_08001e90 = 0;\n      PTR_DAT_08001e90[2] = 0;\n      if ((PTR_DAT_08001e94[40] & 2) != 0) {\n        PTR_DAT_08001e90[16] = 1;\n      }\n      if ((PTR_DAT_08001e90[1] == '\\x01') && ((PTR_DAT_08001e94[40] & 0x10) != 0)) {\n        PTR_DAT_08001e90[1] = 6;\n      }\n      if (PTR_DAT_08001e90[1] == '\\x06') {\n        process_error(2);\n      }\n      else {\n        PTR_DAT_08001e90[1] = 0;\n        process_database_queries();\n      }\n    }\n    process_timer_events();\n    process_file_system_events();\n  } while(true);\n}",
            "called": [
                "FUN_080039a0",
                "FUN_0800283a",
                "FUN_080039bc",
                "FUN_0800583c",
                "FUN_080001f8",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_08005814",
                "FUN_0800b430",
                "FUN_08002f24",
                "FUN_080082ba",
                "FUN_08003a74",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_08005238",
                "FUN_0800192c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "run_application_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_bit_in_array_080069b4",
                "param_1": "bit_position"
            },
            "code": "void set_bit_in_array_080069b4(int bit_position) {\n    int array_index = (uint)(int)(char)bit_position >> 5;\n    int bit_mask = 1 << (bit_position & 0x1f);\n    *(int *)(DAT_080069e0 + array_index * 4) = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "check_input_termination_08009228",
                "in_CY": "input_char",
                "FUN_08009204": "get_input"
            },
            "code": "bool check_input_termination_08009228(void)\n{\n  char input_char;\n  get_input();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_080029d8",
                "FUN_08003004",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "check_input_termination_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "check_and_call_functions_08007c7c",
                "_DAT_40000010": "_data_register_1",
                "_DAT_4000000c": "_data_register_2",
                "call_function1": "call_function_1",
                "call_function2": "call_function_2",
                "call_function3": "call_function_3"
            },
            "code": "void check_and_call_functions_08007c7c(void)\n{\n    bool flag1 = (_DAT_40000010 & 2) != 0;\n    bool flag2 = (_DAT_4000000c & 2) != 0;\n    if (flag1 && flag2) {\n        _DAT_40000010 &= ~(1u << 1);\n        call_function1();\n    }\n    flag1 = (_DAT_40000010 & 4) != 0;\n    flag2 = (_DAT_4000000c & 4) != 0;\n    if (flag1 && flag2) {\n        _DAT_40000010 &= ~(1u << 2);\n        call_function2();\n    }\n    flag1 = (_DAT_40000010 & 1) != 0;\n    flag2 = (_DAT_4000000c & 1) != 0;\n    if (flag1 && flag2) {\n        _DAT_40000010 &= ~(1u << 0);\n        call_function3();\n    }\n}",
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "check_and_call_functions_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "set_flags_based_on_globals_08007b70",
                "local_c": "flags",
                "_DAT_40000034": "global_flag_1",
                "_DAT_40000038": "global_flag_2",
                "_DAT_4000000c": "global_variable_1",
                "_DAT_40000000": "global_variable_2"
            },
            "code": "void set_flags_based_on_globals_08007b70(void)\n{\n    uint8_t flags = 1;\n    if (_DAT_40000034 != 0) {\n        flags |= 3;\n    }\n    if (_DAT_40000038 != 0) {\n        flags |= 4;\n    }\n    _DAT_4000000c |= flags;\n    _DAT_40000000 |= 1;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_flags_based_on_globals_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "check_valid_byte_08004d2c",
                "param_1": "byte_val",
                "param_2": "ptr_data",
                "iVar1": "result"
            },
            "code": "bool check_valid_byte_08004d2c(byte byte_val, undefined *ptr_data)\n{\n  int result = FUN_080003ec(ptr_data, (ushort)byte_val * 0x101 + 0x300, 0x100);\n  if (result == 0) {\n    *ptr_data = 0;\n    FUN_08004bc0(byte_val, ptr_data);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_valid_byte_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = FUN_08008590(uVar3);\n  iVar4 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = FUN_08008590(uVar3);\n  iVar5 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = FUN_08008590(uVar3);\n  iVar6 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = FUN_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = FUN_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = FUN_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = FUN_08008590(uVar9);\n    uVar15 = FUNC_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = FUN_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = FUN_08008590(uVar9);\n      iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = FUN_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = FUN_08008590(uVar9);\n        iVar13 = FUN_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = FUN_08008590(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = FUNC_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUN_08008590(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = FUN_08008590(uVar10);\n          uVar17 = FUN_08008590(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = FUN_08008590(uVar10);\n            uVar16 = FUN_08008590(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = FUN_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = FUN_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = FUN_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = FUN_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08009250",
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008b24",
                "FUN_08008bf0",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002870",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08002edc",
                "FUN_080082d0",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "get_shifted_result_080066cc",
                "uVar1": "result",
                "uVar2": "leading_zeroes",
                "FUN_08006628": "get_value_from_function",
                "count_leading_zeroes": "count_leading_zeroes",
                "DAT_08006710": "global_data",
                "PTR_DAT_08006714": "PTR_DAT_08006714"
            },
            "code": "uint get_shifted_result_080066cc(void)\n{\n  uint result = get_value_from_function();\n  uint leading_zeroes = count_leading_zeroes(0x70000);\n  uint masked_value = (*(uint *)(DAT_08006710 + 8) & 0xe000) >> (leading_zeroes & 0xff);\n  return result >> PTR_DAT_08006714[masked_value];\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "get_shifted_result_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "update_param_in_memory_080018fc",
                "param_1": "new_param_value",
                "DAT_08001928": "memory_start_address",
                "PTR_0800193c": "param_in_memory_address",
                "PTR_0800193c+0x14": "current_value",
                "mask": "bitmask",
                "masked_value": "masked_current_value",
                "updated_param_value": "updated_value"
            },
            "code": "void update_param_in_memory_080018fc(uint new_param_value)\n{\n    uint* PTR_0800193c = (uint*)(DAT_08001928 + 0x14);\n    uint PTR_0800193c+0x14 = *PTR_0800193c;\n    uint bitmask = 0xfffff55f;\n    uint masked_PTR_0800193c+0x14 = PTR_0800193c+0x14 & bitmask;\n    uint updated_value = new_param_value | masked_PTR_0800193c+0x14;\n    *PTR_0800193c = updated_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_param_in_memory_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "check_data_validity_080039bc",
                "iVar1": "result",
                "uVar2": "data_value",
                "local_9": "data_index",
                "PTR_DAT_08003a14": "data_pointer",
                "FUN_08004d2c": "check_data",
                "FUN_08004030": "print_error_message",
                "FUN_0800369c": "print_data",
                "FUNC_080005b4": "calculate_data_value",
                "*PTR_DAT_08003a14": "data_value_at_pointer"
            },
            "code": "void check_data_validity_080039bc(void)\\n{\\n  int result;\\n  byte data_index;\\n  for (data_index = 0; data_index < 2; data_index++) {\\n    result = check_data(PTR_DAT_08003a14, data_index);\\n    if (result == 0) {\\n      print_error_message(10);\\n    }\\n    else if (*PTR_DAT_08003a14 != \"\\0\") {\\n      print_data(PTR_DAT_08003a14);\\n      int data_value = calculate_data_value(PTR_DAT_08003a14);\\n      print_data_value(data_value);\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08004d2c",
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_data_validity_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "validate_input_and_compute_0800618c",
                "param_1": "input_flags",
                "param_2": "input_size",
                "uVar3": "current_flags",
                "uVar4": "max_wait_time",
                "uVar5": "product",
                "lVar1": "wait_time",
                "iVar2": "compute_time"
            },
            "code": "int validate_input_and_compute_0800618c(uint *input_flags, uint input_size)\n{\n  long long product;\n  int wait_time;\n  uint current_flags;\n  uint max_wait_time;\n\n  current_flags = *PTR_DAT_08006400 & 0xf;\n  if (current_flags < input_size) {\n    *(char *)PTR_DAT_08006400 = (char)input_size;\n    if (input_size != (*PTR_DAT_08006400 & 0xf)) {\n      return 1;\n    }\n    if ((input_flags[0] & 1) != 0) {\n      if (input_flags[1] == 1) {\n        if ((*PTR_DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((input_flags[1] != 2) && ((*PTR_DAT_08006404 & 2) == 0)) {\n        return 1;\n      }\n      PTR_DAT_08006404[2] = input_flags[1] | PTR_DAT_08006404[2] & 0xfffffffc;\n      wait_time = compute_wait_time();\n      max_wait_time = wait_time + 5000;\n      if (input_flags[1] == 1) {\n        while ((PTR_DAT_08006404[2] & 0xc) != 4) {\n          wait_time = compute_wait_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else if (input_flags[1] == 2) {\n        while ((PTR_DAT_08006404[2] & 0xc) != 8) {\n          wait_time = compute_wait_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((PTR_DAT_08006404[2] & 0xc) != 0) {\n          wait_time = compute_wait_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((input_flags[0] & 1) != 0) {\n      if (input_flags[1] == 1) {\n        if ((*PTR_DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (input_flags[1] == 2) {\n        if ((*PTR_DAT_08006404 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((*PTR_DAT_08006404 & 2) == 0) {\n        return 1;\n      }\n      PTR_DAT_08006404[2] = input_flags[1] | PTR_DAT_08006404[2] & 0xfffffffc;\n      wait_time = compute_wait_time();\n      max_wait_time = wait_time + 5000;\n      if (input_flags[1] == 1) {\n        while ((PTR_DAT_08006404[2] & 0xc) != 4) {\n          wait_time = compute_wait_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else if (input_flags[1] == 2) {\n        while ((PTR_DAT_08006404[2] & 0xc) != 8) {\n          wait_time = compute_wait_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((PTR_DAT_08006404[2] & 0xc) != 0) {\n          wait_time = compute_wait_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n    }\n    *(char *)PTR_DAT_08006400 = (char)input_size;\n    if (input_size != (*PTR_DAT_08006400 & 0xf)) {\n      return 1;\n    }\n  }\n  if ((input_flags[0] & 2) != 0) {\n    PTR_DAT_08006404[2] = input_flags[2] | PTR_DAT_08006404[2] & 0xffffff0f;\n  }\n  if ((input_flags[0] & 4) != 0) {\n    PTR_DAT_08006404[2] = input_flags[3] | PTR_DAT_08006404[2] & 0xffffe3ff;\n  }\n  if ((input_flags[0] & 8) != 0) {\n    product = (long long)input_flags[4] << 3;\n    PTR_DAT_08006404[2] = product | PTR_DAT_08006404[2] & 0xffff1fff;\n  }\n  product = (long long)PTR_DAT_08006408 * (compute_time() & 0xffffffff);\n  compute_output((uint)((ulonglong)product >> 0x26),(int)(compute_time() >> 0x20),(int)product);\n  return 0;\n}",
            "called": [
                "FUN_08005c30",
                "FUN_08006628",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "validate_input_and_compute_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_bits_from_offset_08006998",
                "DAT_080069b0": "data_offset",
                "uint": "unsigned int",
                "PTR_": "pointer_",
                "DAT_": "data_"
            },
            "code": "uint get_bits_from_offset_08006998(void)\n{\n    uint data = *(uint *)(DAT_080069b0 + 0xc);\n    uint shifted_data = data >> 8;\n    uint bits = shifted_data & 7;\n    return bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": false,
            "current_name": "get_bits_from_offset_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "initialize_and_check_080004ac",
                "iVar1": "status",
                "FUN_0800b430": "initialize_memory",
                "PTR_DAT_080004f0": "data_pointer_1",
                "PTR_DAT_080004f4": "data_pointer_2",
                "print_values": "print_values",
                "check_values": "check_values",
                "print_error": "print_error"
            },
            "code": "void initialize_and_check_080004ac() {\n  int status;\n  initialize_memory(PTR_DAT_080004f0, 0, 0x38);\n  *(undefined4 *)(PTR_DAT_080004f0 + 8) = *(undefined4 *)(PTR_DAT_080004f4 + 0x10);\n  print_values(0, 1, 2);\n  PTR_DAT_080004f0[4] = 1;\n  status = check_values(PTR_DAT_080004f0[0x1c], PTR_DAT_080004f8);\n  if (status == 0) {\n    print_error(10);\n  }\n  return;\n}",
            "called": [
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_and_check_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "calculate_sum_of_array_080078f4",
                "local_10": "index",
                "local_c": "sum"
            },
            "code": "uint calculate_sum_of_array_080078f4(void)\n{\n  int index;\n  uint sum = 0;\n  for (index = 0; index < 4; index++) {\n    sum = *(uint *)(PTR_DAT_0800792c + index * 4) | sum;\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08001994",
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_sum_of_array_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "message_type",
                "PTR_DAT_0800420c": "header_text",
                "PTR_s_Reset_to_continue_08004210": "reset_text",
                "PTR_s___H____X__to_unlock_08004214": "unlock_text",
                "PTR_s_Caution__Unlocked_08004218": "caution_text",
                "PTR_s_Enabled_0800421c": "enabled_text",
                "PTR_s_Disabled_08004220": "disabled_text",
                "PTR_DAT_08004224": "footer_text"
            },
            "code": "void display_message_080041a0(int message_type)\n{\n    display_header();\n    switch(message_type) {\n        case 1:\n            display_text(\"Reset to continue\");\n            break;\n        case 2:\n            display_text(\"Press H to unlock\");\n            break;\n        case 3:\n            display_text(\"Caution: Unlocked\");\n            break;\n        case 4:\n            display_text(\"Enabled\");\n            break;\n        case 5:\n            display_text(\"Disabled\");\n            break;\n    }\n    display_footer();\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_message_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "iVar1": "intermediate_value",
                "uVar2": "output_value"
            },
            "code": "uint32_t calculate_shifted_value_08008bf0(uint32_t input_value, uint32_t shift_amount)\n{\n  int32_t intermediate_value;\n  uint32_t output_value;\n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  intermediate_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < intermediate_value) {\n      return 0;\n    }\n    output_value = -(intermediate_value >> 0x15) - 0x3e1;\n    if (-1 < (int32_t)output_value) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (output_value & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "check_bitmask_08003a18",
                "param_1": "bitmask"
            },
            "code": "void check_bitmask_08003a18(uint8_t bitmask) {\n  if ((bitmask & 0x80) == 0x80) {\n    call_error_handler();\n  }\n  else {\n    if ((bitmask & 0x40) == 0x40) {\n      PTR_DAT_08003a70[2] |= 8;\n    }\n    else if ((bitmask & 0x20) == 0x20) {\n      PTR_DAT_08003a70[2] |= 2;\n    }\n  }\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_bitmask_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "do_nothing_and_then_check_if_three_08005790",
                "PTR_DAT_080057d4": "data_array",
                "PTR_DAT_080057dc": "data_array_ptr_1",
                "PTR_DAT_080057d8": "data_array_ptr_2",
                "PTR_DAT_080057e0": "data_array_ptr_2 + 2",
                "FUN_08007c40": "call_function_with_hex",
                "FUN_08007c5e": "call_function_with_byte_value",
                "FUN_08007b70": "another_function"
            },
            "code": "void do_nothing_and_then_check_if_three_08005790()\n{\n  do_nothing();\n  if (PTR_DAT_080057d4[1] == '\\x03') {\n    *(undefined2 *)PTR_DAT_080057dc = *(undefined2 *)(PTR_DAT_080057d8 + 0x18);\n    *(undefined2 *)PTR_DAT_080057d8 = *(undefined2 *)(PTR_DAT_080057d8 + 0x1a);\n    call_function_with_hex(0x69);\n    call_function_with_byte_value(((byte)PTR_DAT_080057d8[0xd] + 5) * 0x15);\n    another_function();\n  }\n  return;\n}",
            "called": [
                "FUN_08007b70",
                "FUN_08007c5e",
                "FUN_08005318",
                "FUN_08007c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_08001d4c",
                "FUN_0800583c",
                "FUN_0800585c"
            ],
            "imported": false,
            "current_name": "do_nothing_and_then_check_if_three_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  FUN_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = FUN_0800854c(local_40);\n  uVar4 = FUN_0800854c(local_11);\n  uVar4 = FUNC_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = FUN_08008590(uVar1);\n  uVar3 = FUN_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = FUN_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = FUN_0800854c(local_11);\n  uVar3 = FUNC_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = FUN_08008590(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = FUN_08008590(uVar1);\n  local_4c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  FUN_080018fc(local_1a);\n  FUN_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = FUN_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    FUN_080018cc(local_36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    FUN_080018cc(local_4e);\n    do_nothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008640",
                "FUN_080078f4",
                "FUN_08008bf0",
                "FUN_0800b430",
                "FUN_080018fc",
                "FUN_08008c30",
                "FUN_080018cc",
                "FUN_08002828",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_0800854c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_at_position_08007854",
                "param_1": "num",
                "PTR_": "",
                "DAT_": "",
                "uint": "",
                "*": "",
                ">>": "",
                "&": "",
                "(": "",
                ")": "",
                "+": "",
                "=": "",
                ";": "",
                ",": "",
                "0x400": "PAGE_SIZE",
                "0x40020010": "BASE_ADDR",
                "pos": "bit_position",
                "shifted_num": "num_at_position"
            },
            "code": "uint get_bit_at_position_08007854(uint num, uint pos)\n{\n    uint base_addr = ((int)num >> 4) * 0x400 + 0x40020010;\n    uint shifted_num = *(uint *)(base_addr) >> (pos & 0xf);\n    return shifted_num & 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": false,
            "current_name": "get_bit_at_position_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "print_data_and_value_08004900",
                "param_1": "data",
                "param_2": "value",
                "FUN_080036c6": "print_header",
                "FUN_080037fc": "print_data",
                "FUN_0800369c": "print_value",
                "PTR_DAT_08004934": "header_separator",
                "PTR_DAT_08004938": "data_separator",
                "PTR_DAT_0800493c": "footer_separator"
            },
            "code": "void print_data_and_value_08004900(char* data, int value)\n{\n  print_header();\n  print_data(data);\n  print_separator();\n  print_value(value);\n  print_footer();\n}",
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_data_and_value_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "print_help_message_08004228",
                "PTR_s__Grbl_0_8c______for_help__08004238": "help_message",
                "FUN_080036c6": "print_message"
            },
            "code": "void print_help_message_08004228(void)\n{\n    print_message(PTR_s__Grbl_0_8c______for_help__08004238);\n    return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": false,
            "current_name": "print_help_message_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "FUNC_08009b24"
            },
            "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = FUN_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_08008b24"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "FUNC_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "set_bit_in_array_080076c8",
                "param_1": "array_index",
                "PTR_": "array",
                "DAT_": "bit_index"
            },
            "code": "void set_bit_in_array_080076c8(uint PTR__index) {\n    uint* PTR_ = (uint*)((int)PTR__index >> 4) * 0x400 + 0x40020014;\n    uint DAT_ = PTR__index & 0xf;\n    *PTR_ = *PTR_ ^ 1 << DAT_;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_bit_in_array_08006a8c",
                "param_1": "bit_index",
                "DAT_08006abc": "array_ptr"
            },
            "code": "void set_bit_in_array_08006a8c(uint8_t bit_index)\n{\n    uint32_t* DAT_08006abc = (uint32_t*)(DAT_08006abc + ((bit_index >> 5) + 0x60) * 4);\n    uint32_t bit_mask = 1 << (bit_index & 0x1f);\n    *DAT_08006abc = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "print_data_0800283a",
                "PTR_DAT_08002868": "PTR_DATA",
                "FUN_080035ec": "print_data1",
                "FUN_080004fc": "print_data2"
            },
            "code": "void print_data_0800283a(void)\n{\n    int data1 = *(int *)(PTR_DAT_08002868 + 4);\n    int data2 = *(int *)(PTR_DAT_08002868 + 8);\n    int data3 = *(int *)(PTR_DAT_08002868 + 0xc);\n    print_data_0800283a1(data1, data2, data3);\n    print_data_0800283a2(data1, data2, data3);\n    return;\n}",
            "called": [
                "FUN_080004fc",
                "FUN_080035ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_080024c4",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "print_data_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "FUN_0800881c": "calculate_result_0800881c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "unaff_r4": "temp1",
                "in_r12": "temp2",
                "uVar1": "temp3",
                "uVar2": "temp4",
                "uVar3": "mask",
                "bVar4": "is_zero",
                "mask": "mask",
                "bit_mask": "bit_mask",
                "is_zero": "is_zero",
                "is_input1_and_input2_zero": "is_input1_and_input2_zero",
                "is_input3_and_input4_zero": "is_input3_and_input4_zero",
                "is_input4_greater_than_in_r12": "is_input4_greater_than_in_r12",
                "is_in_r12_greater_than_input4_shifted_by_0x14": "is_in_r12_greater_than_input4_shifted_by_0x14",
                "is_input4_and_input2_xor_greater_than_mask": "is_input4_and_input2_xor_greater_than_mask",
                "is_input1_and_input2_shifted_by_0xc_zero": "is_input1_and_input2_shifted_by_0xc_zero",
                "result": "result"
            },
            "code": "ulonglong calculate_result_0800881c(uint input1,uint input2,uint input3,uint input4)\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint mask = 0x80000000;\n  uint bit_mask = 0x100000;\n  bool is_zero;\n  bool is_input1_and_input2_zero;\n  bool is_input3_and_input4_zero;\n  bool is_input4_greater_than_in_r12;\n  bool is_in_r12_greater_than_input4_shifted_by_0x14;\n  bool is_input4_and_input2_xor_greater_than_mask;\n  bool is_input1_and_input2_shifted_by_0xc_zero;\n  ulonglong result;\n  \n  is_input4_greater_than_in_r12 = (input4 > in_r12);\n  is_in_r12_greater_than_input4_shifted_by_0x14 = (in_r12 > (input4 >> 0x14));\n  is_input1_and_input2_zero = ((input1 | (input2 << 1)) == 0);\n  is_input3_and_input4_zero = ((input3 | (input4 << 1)) == 0);\n  is_input4_and_input2_xor_greater_than_mask = (((input2 ^ input4) & mask) != 0);\n  is_input1_and_input2_shifted_by_0xc_zero = ((input1 | (input2 << 0xc)) == 0);\n\n  if (is_input4_greater_than_in_r12 && is_in_r12_greater_than_input4_shifted_by_0x14)\n  {\n    if (is_input1_and_input2_zero || is_input3_and_input4_zero)\n    {\n      result = ((ulonglong)((input2 ^ input4) & mask) << 0x20);\n    }\n    else\n    {\n      temp2 = input2 & mask;\n      do\n      {\n        temp1 = input1 & mask;\n        input1 = input1 << 1;\n        input2 = (input2 * 2) + (uint)(temp1 != 0);\n      }\n      while ((input2 & bit_mask) == 0);\n      input2 = input2 | temp2;\n      if (in_r12 > 0)\n      {\n        result = CONCAT44(input2,input1);\n      }\n    }\n  }\n  else\n  {\n    if (is_input1_and_input2_zero)\n    {\n      temp2 = input4;\n      temp1 = input3;\n    }\n    else if (is_input3_and_input4_zero)\n    {\n      temp2 = input2;\n      temp1 = input1;\n    }\n    else\n    {\n      temp2 = input2;\n      temp1 = input1;\n      if (!is_input1_and_input2_shifted_by_0xc_zero)\n      {\n        is_zero = ((input3 | (input4 << 1)) == 0);\n        if (!is_zero)\n        {\n          is_zero = ((in_r12 == input4) && (is_input1_and_input2_shifted_by_0xc_zero));\n          if (!is_zero)\n          {\n            temp1 = input3;\n            temp2 = input4;\n            do\n            {\n              temp3 = temp1 & mask;\n              temp1 = temp1 << 1;\n              temp4 = (temp4 * 2) + (uint)(temp3 != 0);\n            }\n            while ((temp4 & bit_mask) == 0);\n            temp4 = temp4 | temp2;\n          }\n        }\n      }\n    }\n    if (is_input4_and_input2_xor_greater_than_mask)\n    {\n      result = ((ulonglong)((input2 ^ input4) & mask | 0x7ff00000) << 0x20);\n    }\n    else\n    {\n      result = CONCAT44(temp2,temp1) | 0x7ff8000000000000;\n    }\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": false,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "convert_byte_to_ushort_and_multiply_by_0x101_and_add_0x300_and_call_08000374_08004bc0",
                "param_1": "byte_as_ushort",
                "param_2": "param_2"
            },
            "code": "void convert_byte_to_ushort_and_multiply_by_0x101_and_add_0x300_and_call_08000374_08004bc0(ushort byte_as_ushort, undefined4 param_2)\n{\n  FUN_08000374(byte_as_ushort * 0x101 + 0x300, param_2, 0x100);\n  return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_byte_to_ushort_and_multiply_by_0x101_and_add_0x300_and_call_08000374_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "is_CY_false_or_ZR_true_08008b4c",
                "in_ZR": "in_zero",
                "in_CY": "in_carry"
            },
            "code": "bool is_CY_false_or_ZR_true_08008b4c(void)\n{\n  undefined in_zero = 0;\n  undefined in_carry = 0;\n  FUN_08008af0();\n  return (bool)in_zero || !(bool)in_carry;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "is_CY_false_or_ZR_true_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "initialize_system_08004c2a",
                "FUN_08000340": "set_initial_values",
                "FUN_08000374": "set_memory",
                "PTR_DAT_08004c44": "DATA_POINTER_08004c44"
            },
            "code": "void initialize_system_08004c2a(void)\n{\n  set_initial_values(0,5);\n  set_memory(1,PTR_DAT_08004c44,0x40);\n  return;\n}",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004c48",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "initialize_system_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "perform_action_on_parameter_and_return_zero_0800826a",
                "param_1": "parameter",
                "FUN_08007e1c": "perform_action"
            },
            "code": "int perform_action_on_parameter_and_return_zero_0800826a(int parameter)\n{\n  perform_action(parameter);\n  return 0;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "perform_action_on_parameter_and_return_zero_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "is_end_of_string_08008b60",
                "in_CY": "current_char",
                "FUN_08008af0": "execute_preprocessing"
            },
            "code": "bool is_end_of_string_08008b60(void)\n{\n  char current_char;\n  execute_preprocessing();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_and_execute_08005324",
                "param_1": "user_input",
                "local_14": "min_input",
                "DAT_08005358": "CONSTANT_VALUE",
                "PTR_DAT_0800535c": "pointer_to_data"
            },
            "code": "void calculate_and_execute_08005324(uint user_input) {\n  uint min_input = 800;\n  uint result = 0;\n  if (user_input < min_input) {\n    min_input = user_input;\n  }\n  result = DAT_08005358 / min_input;\n  *(uint *)(PTR_DAT_0800535c + 0x14) = result;\n  execute_function(result);\n  return;\n}",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_080058a0",
                "FUN_080053a0",
                "FUN_08005814"
            ],
            "imported": false,
            "current_name": "calculate_and_execute_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_value_at_index_08000310",
                "param_1": "index",
                "PTR_DAT_08000338": "ptr",
                "FUN_080002f0": "initialize",
                "PTR_DAT_0800033c": "data_array"
            },
            "code": "int get_value_at_index_08000310(uint index) {\n  int* PTR_DAT_08000338 = (int*)PTR_DAT_08000338;\n  if (*PTR_DAT_08000338 == 0) {\n    initialize();\n  }\n  return PTR_DAT_0800033c[index & 0x3ff];\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "get_value_at_index_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "process_value_08007a70",
                "param_1": "value",
                "local_c": "local_variable",
                "DAT_08007ac8": "ptr_dat_1",
                "DAT_08007acc": "ptr_dat_2",
                "FUN_08006cf6": "process_value_2",
                "FUN_080079e0": "process_value_3"
            },
            "code": "void process_value_08007a70(int value, undefined4 param_2, undefined4 param_3)\n{\n  undefined local_variable;\n  if (value == 0x40000000) {\n    local_variable = 0x1c;\n  }\n  else if (value == DAT_08007ac8) {\n    local_variable = 0x1d;\n  }\n  else {\n    if (value != DAT_08007acc) {\n      return;\n    }\n    local_variable = 0x1e;\n  }\n  process_value_08007a70_2(local_variable, param_2, param_3);\n  process_value_08007a70_3(local_variable);\n  return;\n}",
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "process_value_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_080001ac",
                "FUN_0800b3e8",
                "FUN_08000188"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_hash_value_08002978",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "FUNC_08008eec": "get_hash_value",
                "FUNC_08008cdc": "get_hash_value",
                "FUNC_08008cd8": "combine_hash_values",
                "FUN_08008590": "get_long_hash_value",
                "FUN_080098d0": "get_long_hash_value_2",
                "FUN_08008c30": "get_final_hash_value",
                "uVar1": "hash_value_1",
                "uVar2": "hash_value_2",
                "uVar3": "hash_value_5"
            },
            "code": "int calculate_hash_value_08002978(int data1, int data2, int data3)\n{\n  int hash_value_1 = get_hash_value(data2);\n  int hash_value_2 = get_hash_value(data1);\n  int hash_value_3 = get_hash_value(data3);\n  int hash_value_4 = combine_hash_values(hash_value_1, hash_value_2);\n  long long hash_value_5 = get_long_hash_value(hash_value_4);\n  long long hash_value_6 = get_long_hash_value_2(hash_value_5);\n  int final_hash_value = get_final_hash_value(hash_value_6);\n  return final_hash_value;\n}",
            "called": [
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_hash_value_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_40 = FUN_0800856c();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008ba0();\n    local_38 = FUN_0800856c();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = do_nothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = FUN_08008ba0();\n  uVar11 = FUN_0800856c();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800a5a0",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "print_floating_point_number_08003826",
                "param_1": "number",
                "iVar1": "is_negative",
                "local_24": "absolute_number",
                "local_9": "i",
                "PTR_DAT_08003970": "digits",
                "local_a": "digits_count",
                "DAT_08003974": "0x3dcccccd",
                "DAT_08003978": "0x3d70a3d7",
                "FUNC_08008eec": "multiply_by_10",
                "FUNC_08008cdc": "shift_bits_right",
                "DAT_0800397c": "0x147ae147",
                "FUN_08008250": "print_character",
                "byte": "uint8_t",
                "char": "char",
                "uint": "uint32_t",
                "ulonglong": "uint64_t"
            },
            "code": "void print_floating_point_number_08003826(uint number)\n{\n    int is_negative = FUN_08009228(number,0);\n    uint absolute_number = number;\n    if (is_negative != 0) {\n        FUN_08008250(0x2d);\n        absolute_number = number ^ 0x80000000;\n    }\n    for (int i = PTR_DAT_08003970[0x3d]; i > 1; i -= 2) {\n        absolute_number = FUNC_08008eec(absolute_number, DAT_08003974);\n    }\n    if (i != 0) {\n        absolute_number = FUNC_08008eec(absolute_number, DAT_08003978);\n    }\n    uint shifted_number = FUNC_08008cdc(absolute_number, 0x3f000000);\n    byte PTR_DAT_08003970[13];\n    int PTR_DAT_08003970_count = 0;\n    uint remainder = FUN_08009278(shifted_number);\n    PTR_DAT_08003970[PTR_DAT_08003970[0x3d] + 1] = '.';\n    while (remainder != 0) {\n        if (PTR_DAT_08003970_count == PTR_DAT_08003970[0x3d]) {\n            PTR_DAT_08003970_count++;\n        }\n        PTR_DAT_08003970[PTR_DAT_08003970_count + 1] = (char)remainder + (char)((ulonglong)DAT_0800397c * (ulonglong)remainder >> 0x23) * -10 + '0';\n        remainder = (uint)((ulonglong)DAT_0800397c * (ulonglong)remainder >> 0x23);\n        PTR_DAT_08003970_count++;\n    }\n    while (PTR_DAT_08003970_count < PTR_DAT_08003970[0x3d]) {\n        PTR_DAT_08003970_count++;\n        PTR_DAT_08003970[PTR_DAT_08003970_count + 1] = '0';\n    }\n    if (PTR_DAT_08003970_count == PTR_DAT_08003970[0x3d]) {\n        PTR_DAT_08003970_count += 2;\n        PTR_DAT_08003970[PTR_DAT_08003970_count + 1] = '0';\n    }\n    for (int i = PTR_DAT_08003970_count; i > 0; i--) {\n        FUN_08008250(PTR_DAT_08003970[i]);\n    }\n}\n",
            "called": [
                "FUN_08008250",
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "print_floating_point_number_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "should_execute_0800923c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag",
                "FUN_08009204": "execute_setup"
            },
            "code": "bool should_execute_0800923c() {\n  undefined zero_flag;\n  undefined carry_flag;\n  execute_setup();\n  return !(bool)carry_flag || (bool)zero_flag;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "should_execute_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "checkAndUpdate_08002afc",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "tempVar1",
                "uVar2": "var1",
                "uVar3": "var2",
                "FUN_08009228": "checkCondition",
                "FUN_08002978": "calculate"
            },
            "code": "void checkAndUpdate_08002afc(int input1, int input2)\n{\n  int tempVar1;\n  undefined4 var1;\n  undefined4 var2;\n  \n  if (((input1 != 0) && (*(char *)(input1 + 0x25) == \"\\0\")) &&\n     (tempVar1 = checkCondition(*(undefined4 *)(input1 + 0x18),*(undefined4 *)(input2 + 0x18)),\n     tempVar1 != 0)) {\n    var2 = *(undefined4 *)(input2 + 0x18);\n    var1 = calculate(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000,\n                         *(undefined4 *)(input1 + 0x18),*(undefined4 *)(input1 + 0x20));\n    tempVar1 = checkCondition(var2,var1);\n    if (tempVar1 == 0) {\n      var1 = calculate(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000,\n                           *(undefined4 *)(input1 + 0x18),*(undefined4 *)(input1 + 0x20));\n    }\n    else {\n      var1 = *(undefined4 *)(input2 + 0x18);\n    }\n    tempVar1 = checkAndUpdate_08002afc(var1,*(undefined4 *)(input2 + 0x18));\n    if (tempVar1 == 0) {\n      *(undefined4 *)(input2 + 0x18) = var1;\n      *(undefined *)(input2 + 0x24) = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": false,
            "current_name": "checkAndUpdate_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "initialize_data_structures_08004c48",
                "param_1": "input_char",
                "PTR_DAT_08004d0c": "my_data",
                "DAT_08004d10": "10",
                "DAT_08004d14": "20",
                "DAT_08004d18": "100",
                "DAT_08004d1c": "1.0f",
                "DAT_08004d20": "25",
                "DAT_08004d24": "1.5f",
                "FUN_08004c2a": "perform_initialization"
            },
            "code": "void initialize_data_structures_08004c48(char input_char) {\n    if (input_char != '\\0') {\n        PTR_DAT_08004d0c.my_int_1 = DAT_08004d10;\n        PTR_DAT_08004d0c.my_int_2 = DAT_08004d18;\n        PTR_DAT_08004d0c.my_float_1 = DAT_08004d1c;\n        PTR_DAT_08004d0c.my_int_3 = DAT_08004d20;\n        PTR_DAT_08004d0c.my_int_4 = 3;\n        PTR_DAT_08004d0c.my_int_5 = DAT_08004d20;\n        PTR_DAT_08004d0c.my_short_1 = 0;\n        PTR_DAT_08004d0c.my_short_2 = 2688;\n        PTR_DAT_08004d0c.my_int_6 = 30;\n    }\n    PTR_DAT_08004d0c.my_byte_1 |= 2;\n    PTR_DAT_08004d0c.my_byte_1 |= 16;\n    PTR_DAT_08004d0c.my_short_3 = 0;\n    PTR_DAT_08004d0c.my_int_7 = DAT_08004d14;\n    PTR_DAT_08004d0c.my_int_2 = DAT_08004d10;\n    PTR_DAT_08004d0c.my_short_4 = DAT_08004d18;\n    PTR_DAT_08004d0c.my_float_2 = DAT_08004d24;\n    PTR_DAT_08004d0c.my_byte_2 = DAT_08004d20;\n    PTR_DAT_08004d0c.my_byte_3 = 3;\n    PTR_DAT_08004d0c.my_byte_4 = DAT_08004d20;\n    perform_initialization();\n}\n",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "initialize_data_structures_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "call_function_with_param_080002a0",
                "param_1": "param",
                "FUN_08005a98": "call_function"
            },
            "code": "void call_function_with_param_080002a0(undefined4 param)\n{\n  call_function(param);\n  return;\n}",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "call_function_with_param_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "check_CY_or_ZR_08009250",
                "in_CY": "has_CY",
                "in_ZR": "has_ZR",
                "FUN_080091fc": "check_CY"
            },
            "code": "bool check_CY_or_ZR_08009250(void)\n{\n  bool has_CY = check_CY();\n  bool has_ZR = check_ZR();\n  return !has_CY || has_ZR;\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_CY_or_ZR_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "send_data_packet_0800640c",
                "param_1": "packet_type",
                "param_2": "data1",
                "param_3": "data2",
                "local_1c": "packet_header[0]",
                "local_18": "packet_header[1]",
                "local_14": "packet_header[2]",
                "local_10": "packet_header[3]",
                "local_c": "packet_header[4]",
                "DAT_080064b0": "control_reg_base",
                "DAT_080064b4": "packet_sender1",
                "DAT_080064b8": "packet_sender2"
            },
            "code": "void send_data_packet_0800640c(int packet_type, uint32_t data1, uint32_t data2)\n{\n  uint32_t* control_reg = (uint32_t*)(DAT_080064b0 + 0x30);\n  uint32_t* data_reg = (uint32_t*)(DAT_080064b0 + 8);\n\n  if (packet_type == 0) {\n    *control_reg |= 1;\n    uint32_t packet_header[] = {0x100, 2, 3, 0, 0};\n    send_packet(DAT_080064b4, packet_header);\n    *data_reg = data2 | data1 | (*data_reg & 0xf89fffff);\n  }\n  else {\n    *control_reg |= 4;\n    uint32_t packet_header[] = {0x200, 2, 3, 0, 0};\n    send_packet(DAT_080064b8, packet_header);\n    *data_reg = data1 | (data2 << 3) | (*data_reg & 0x7ffffff);\n  }\n}",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "send_data_packet_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "execute_function_with_swapped_params_08008af0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "FUN_08008b00": "execute_function"
            },
            "code": "void execute_function_with_swapped_params_08008af0(undefined4 first_param, undefined4 second_param, undefined4 third_param, undefined4 fourth_param)\n{\n    execute_function(third_param, fourth_param, first_param, second_param);\n    return;\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b60",
                "FUN_08008b4c"
            ],
            "imported": false,
            "current_name": "execute_function_with_swapped_params_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "convert_char_to_int_08006e1a",
                "param_1": "character",
                "uVar1": "converted_value"
            },
            "code": "int convert_char_to_int_08006e1a(char character){\n  int converted_value = (int) character;\n  return converted_value;\n}",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "update_param_080052ac",
                "param_1": "new_param",
                "*(uint *)(DAT_080052d8 + 0x14)": "ptr",
                "DAT_080052d8": "data_ptr",
                "0x14": "offset",
                "uint": "unsigned int",
                "current_value": "current_value",
                "mask": "mask",
                "masked_current_value": "masked_current_value",
                "new_value": "new_value"
            },
            "code": "void update_param_080052ac(uint new_param)\n{\n  uint* *(uint *)(DAT_080052d8 + 0x14) = (uint*)(DAT_080052d8 + 0x14);\n  uint current_value = **(uint *)(DAT_080052d8 + 0x14);\n  uint mask = 0xfffffaaf;\n  uint masked_current_value = current_value & mask;\n  uint new_value = new_param | masked_current_value;\n  **(uint *)(DAT_080052d8 + 0x14) = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "imported": false,
            "current_name": "update_param_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "check_input_08008286",
                "iVar2": "input_status",
                "FUN_08007e58": "check_input_status",
                "uVar1": "input_char",
                "FUN_08007e84": "get_input_char",
                "FUN_08005900": "check_input_char"
            },
            "code": "undefined check_input_08008286(void)\n{\n  int input_status = check_input_08008286_status();\n  if (input_status != 0) {\n    char input_char = get_input_char();\n    int char_check = check_input_08008286_char(input_char);\n    if (char_check == 0) {\n      return input_char;\n    }\n  }\n  return 0xff;\n}",
            "called": [
                "FUN_08005900",
                "FUN_08007e58",
                "FUN_08007e84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "check_input_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08008b74(uint32_t input1, int input2, uint32_t input3, int input4){\n\tint shifted_input2 = (input2 << 1) >> 21;\n\tint shifted_input4 = (input4 << 1) >> 21;\n\tif ((shifted_input2 != -1 || (input1 | (input2 << 12)) == 0) && (shifted_input4 != -1 || (input3 | (input4 << 12)) == 0)) {\n\t\treturn 0;\n\t}\n\treturn 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "add_data_to_list_0800b524",
                "param_1": "listIndex",
                "param_2": "data",
                "param_3": "flag",
                "param_4": "status",
                "puVar1": "listPointer",
                "uVar2": "listValue",
                "uVar3": "flagBit",
                "iVar4": "listStart",
                "iVar5": "listEnd",
                "uVar6": "listSize",
                "PTR_PTR_DAT_0800b5ac": "listPointerPointer",
                "do_nothing_0800b51c": "do_nothing_1",
                "PTR_PTR_DAT_0800b5a8": "listStartPointer",
                "do_nothing_0800b520": "do_nothing_2"
            },
            "code": "int add_data_to_list_0800b524(int listIndex, int data, int flag, int status) {\n    int* listPointer = PTR_PTR_DAT_0800b5ac;\n    do_nothing_0800b51c(*(int*)PTR_PTR_DAT_0800b5ac);\n    int listStart = *(int*)PTR_PTR_DAT_0800b5a8;\n    int listEnd = *(int*)(listStart + 0x148);\n    if (listEnd == 0) {\n        listEnd = listStart + 0x14c;\n        *(int*)(listStart + 0x148) = listEnd;\n    }\n    uint listSize = *(uint*)(listEnd + 4);\n    if ((int)listSize < 0x20) {\n        if (listIndex != 0) {\n            int dataPointer = listEnd + listSize * 4;\n            *(int*)(dataPointer + 0x88) = flag;\n            uint flagBit = 1 << (listSize & 0xff);\n            *(uint*)(listEnd + 0x188) |= flagBit;\n            *(int*)(dataPointer + 0x108) = status;\n            if (listIndex == 2) {\n                *(uint*)(listEnd + 0x18c) |= flagBit;\n            }\n        }\n        int listValue = *(int*)listPointer;\n        *(uint*)(listEnd + 4) = listSize + 1;\n        *(int*)(listEnd + (listSize + 2) * 4) = data;\n        do_nothing_0800b520(listValue);\n        return 0;\n    }\n    else {\n        do_nothing_0800b520(*(int*)listPointer);\n        return -1;\n    }\n}",
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": false,
            "current_name": "add_data_to_list_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "set_display_flag_08007ea4",
                "param_1": "flag",
                "DAT_08007f38": "SOME_FLAG_1",
                "DAT_08007f40": "SOME_FLAG_2",
                "DAT_08007f44": "SOME_FLAG_3",
                "DAT_08007f48": "SOME_FLAG_4",
                "DAT_08007f4c": "SOME_FLAG_5",
                "DAT_08007f50": "SOME_FLAG_6",
                "*(uint *)(DAT_08007f3c + 0x44)": "display_flag2_ptr",
                "*(uint *)(DAT_08007f3c + 0x40)": "display_flag_ptr"
            },
            "code": "void set_display_flag_08007ea4(int flag) {\n  uint **(uint *)(DAT_08007f3c + 0x40) = (uint *)(DAT_08007f3c + 0x40);\n  uint **(uint *)(DAT_08007f3c + 0x44) = (uint *)(DAT_08007f3c + 0x44);\n\n  switch (flag) {\n    case DAT_08007f38:\n      **(uint *)(DAT_08007f3c + 0x44) |= 0x10;\n      break;\n    case DAT_08007f40:\n      **(uint *)(DAT_08007f3c + 0x40) |= 0x20000;\n      break;\n    case DAT_08007f44:\n      **(uint *)(DAT_08007f3c + 0x40) |= 0x40000;\n      break;\n    case DAT_08007f48:\n      **(uint *)(DAT_08007f3c + 0x40) |= 0x80000;\n      break;\n    case DAT_08007f4c:\n      **(uint *)(DAT_08007f3c + 0x40) |= 0x100000;\n      break;\n    case DAT_08007f50:\n      **(uint *)(DAT_08007f3c + 0x44) |= 0x20;\n      break;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "set_display_flag_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "check_and_run_tasks_08007756",
                "FUN_08005a84": "get_task_flags",
                "FUN_080076c8": "run_task_1",
                "FUN_08007930": "run_task_2",
                "FUN_08005a68": "run_task_3",
                "uVar1": "task_flags"
            },
            "code": "void check_and_run_tasks_08007756(void)\n{\n  uint32_t task_flags;\n  task_flags = get_task_flags();\n  if ((task_flags & 0x1ff) == 0) {\n    run_task_1();\n  }\n  if ((task_flags & 0xf) == 0) {\n    run_task_2();\n  }\n  run_task_3();\n  return;\n}\n",
            "called": [
                "FUN_08007930",
                "FUN_08005a68",
                "FUN_080076c8",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "check_and_run_tasks_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "display_Grbl_settings_0800423c",
                "FUN_080036c6": "show_view"
            },
            "code": "void display_Grbl_settings_0800423c(){\n  show_view(PTR_s_____view_Grbl_settings______view_0800424c);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "display_Grbl_settings_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "is_end_of_string_08009264",
                "in_CY": "current_char",
                "FUN_080091fc": "execute_some_function"
            },
            "code": "bool is_end_of_string_08009264(void)\n{\n  char current_char;\n  execute_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "run_all_functions_08007e08",
                "FUN_08007ad0": "initialize_system",
                "FUN_08007d08": "load_data",
                "FUN_08007da8": "process_data"
            },
            "code": "void run_all_functions_08007e08(void)\n{\n  initialize_system();\n  load_data();\n  process_data();\n  return;\n}",
            "called": [
                "FUN_08007d08",
                "FUN_08007ad0",
                "FUN_08007da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "run_all_functions_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "check_if_pointers_are_equal_08002fac",
                "PTR_DAT_08002fcc": "pointer_to_dat_1",
                "PTR_DAT_08002fd0": "pointer_to_dat_2"
            },
            "code": "bool check_if_pointers_are_equal_08002fac(void)\n{\n  bool are_equal = (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\n  return are_equal;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "check_if_pointers_are_equal_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "check_if_param_greater_than_random_080002b6",
                "param_1": "random_num",
                "uVar1": "current_random_num",
                "uVar2": "random_num_2",
                "bVar3": "is_greater_than",
                "lVar4": "random_num_sum",
                "uVar5": "random_num_3"
            },
            "code": "void check_if_param_greater_than_random_080002b6(uint random_num) {\n  uint random_num_2;\n  uint current_random_num;\n  bool is_greater_than;\n  longlong random_num_sum;\n  undefined8 random_num_3;\n  \n  random_num_sum = generate_random_number();\n  random_num_2 = (uint)(random_num_sum + (ulonglong)random_num >> 0x20);\n  do {\n    random_num_3 = generate_random_number();\n    current_random_num = (uint)((ulonglong)random_num_3 >> 0x20);\n    is_greater_than = random_num_2 <= current_random_num;\n    if (current_random_num == random_num_2) {\n      is_greater_than = (uint)(random_num_sum + (ulonglong)random_num) <= (uint)random_num_3;\n    }\n  } while (!is_greater_than);\n  return;\n}",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "check_if_param_greater_than_random_080002b6"
        }
    },
    "used_tokens": 192014,
    "layers": [
        [
            "FUN_0800192c",
            "FUN_08006950",
            "FUN_08008ba0",
            "FUN_08005984",
            "FUN_08007a10",
            "FUN_0800856c",
            "FUN_08008b00",
            "FUN_0800585c",
            "FUN_0800597c",
            "FUN_08009798",
            "FUN_08007930",
            "FUN_08000188",
            "FUN_08009318",
            "FUN_080018cc",
            "FUN_080079e0",
            "FUN_08006a58",
            "FUN_08005a84",
            "FUN_08008b10",
            "FUN_08008c30",
            "FUN_08007bf0",
            "FUN_08008590",
            "FUN_08007ad0",
            "FUN_080039a0",
            "FUN_08009204",
            "FUN_080029d8",
            "FUN_08007c5e",
            "FUN_08005760",
            "FUN_08008b24",
            "FUN_0800587c",
            "FUN_08008a02",
            "FUN_0800369c",
            "FUN_08005a98",
            "FUN_080044e8",
            "FUN_08006c9c",
            "FUN_0800195c",
            "FUN_08009214",
            "FUN_08004dd2",
            "FUN_08005778",
            "FUN_080028bc",
            "FUN_08006628",
            "FUN_0800738e",
            "FUN_080092c4",
            "FUN_08008250",
            "FUN_0800184c",
            "FUN_08006ce0",
            "FUN_08006d4a",
            "FUN_08000374",
            "FUN_080037fc",
            "FUN_0800a1bc",
            "FUN_0800525c",
            "FUN_080073d4",
            "FUN_08006dfe",
            "FUN_08006d66",
            "FUN_08006e88",
            "FUN_080036f0",
            "FUN_08002edc",
            "FUN_0800375c",
            "FUN_08009990",
            "FUN_08007e58",
            "FUN_080059f8",
            "FUN_08003f34",
            "FUN_080095b8",
            "FUN_08006cf6",
            "FUN_08002ef0",
            "FUN_08001d4c",
            "FUN_08000268",
            "FUN_08003778",
            "FUN_0800b3dc",
            "FUN_080046d0",
            "FUN_08006d72",
            "FUN_0800756c",
            "FUN_080001f8",
            "FUN_08002f74",
            "FUN_0800b3e8",
            "FUN_080096e8",
            "FUN_08006a18",
            "FUN_08002c18",
            "FUN_08006ac0",
            "FUN_08002ba8",
            "FUN_0800919c",
            "FUN_0800854c",
            "FUN_08008e44",
            "FUN_0800733e",
            "FUN_0800583c",
            "FUN_08001e98",
            "FUN_080069e4",
            "FUN_0800b2d4",
            "FUN_08008e3c",
            "FUN_08009654",
            "FUN_08007bc2",
            "FUN_08009410",
            "FUN_080035ec",
            "FUN_08006c70",
            "FUN_08006d98",
            "FUN_08005a68",
            "FUN_080079c0",
            "FUN_0800b2e0",
            "FUN_08002908",
            "FUN_08007c40",
            "FUN_080094c0",
            "FUN_08006b54",
            "FUN_08007e84",
            "FUN_080057e4",
            "FUN_08006d8a",
            "FUN_0800b2e8",
            "FUN_08007520",
            "FUN_08007884",
            "FUN_08004250",
            "FUN_08006dc4",
            "FUN_08007402",
            "FUN_08002870",
            "FUN_08000210",
            "FUN_08005900",
            "FUN_08002638",
            "FUN_080051b4",
            "FUN_080098d0",
            "FUN_08005c30",
            "FUN_0800056c",
            "FUN_08002f24",
            "FUN_0800981c",
            "FUN_080059b4",
            "FUN_08006c04",
            "FUN_08002e08",
            "FUN_08006680",
            "FUN_08000340",
            "thunk_FUN_08009990",
            "FUN_08004bf4",
            "FUN_08004d7c",
            "FUN_08009278",
            "FUN_080004fc",
            "FUN_08000220",
            "FUN_08005238",
            "FUN_08007da8",
            "FUN_08004148",
            "FUN_08004940",
            "FUN_08008a74",
            "FUN_08002fd4",
            "FUN_08002408",
            "FUN_08002a94",
            "FUN_08003618",
            "FUN_08007d08",
            "FUN_080091fc",
            "FUN_080058a0",
            "FUN_080036c6",
            "FUN_08008190",
            "FUN_080074c8",
            "FUN_0800b430",
            "FUN_08004030",
            "FUN_08005360",
            "FUN_08003980",
            "FUN_08006de0",
            "FUN_08007540",
            "FUN_080052dc",
            "FUN_080064ec",
            "FUN_08006ba0",
            "FUN_080003ec",
            "FUN_08002896",
            "FUN_080001ac",
            "FUN_08003740",
            "FUN_08000478",
            "FUN_08006d2e",
            "FUN_08007e1c",
            "FUN_0800adf0",
            "FUN_08003a74",
            "FUN_08006b00",
            "FUN_0800b4d0",
            "FUN_08007f54",
            "FUN_08003b98",
            "FUN_080024c4",
            "FUN_08002f40",
            "FUN_080025e8",
            "FUN_08005250",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_08005814",
            "FUN_08005bdc",
            "FUN_080002f0",
            "FUN_0800778c",
            "FUN_08001ddc",
            "FUN_080069b4",
            "FUN_08009228",
            "FUN_08007c7c",
            "FUN_08007b70",
            "FUN_08004d2c",
            "FUN_080066cc",
            "FUN_080018fc",
            "FUN_080039bc",
            "FUN_0800618c",
            "FUN_08006998",
            "FUN_080004ac",
            "FUN_080078f4",
            "FUN_080041a0",
            "FUN_08008bf0",
            "FUN_08003a18",
            "FUN_08005790",
            "FUN_08007854",
            "FUN_08004900",
            "FUN_08004228",
            "FUN_080076c8",
            "FUN_08006a8c",
            "FUN_0800283a",
            "FUN_0800881c",
            "FUN_08004bc0",
            "FUN_08008b4c",
            "FUN_08004c2a",
            "FUN_0800826a",
            "FUN_08008b60",
            "FUN_08005324",
            "FUN_08000310",
            "FUN_08007a70",
            "FUN_08002978",
            "FUN_08003826",
            "FUN_0800923c",
            "FUN_08002afc",
            "FUN_08004c48",
            "FUN_080002a0",
            "FUN_08009250",
            "FUN_0800640c",
            "FUN_08008af0",
            "FUN_08006e1a",
            "FUN_080052ac",
            "FUN_08008286",
            "FUN_08008b74",
            "FUN_0800b524",
            "FUN_08007ea4",
            "FUN_08007756",
            "FUN_0800423c",
            "FUN_08009264",
            "FUN_08007e08",
            "FUN_08002fac",
            "FUN_080002b6"
        ]
    ],
    "locked_functions": []
}