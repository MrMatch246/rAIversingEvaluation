{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "parse_string_and_format_output_080050fc",
                "param_1": "output_buffer",
                "param_2": "output_buffer_length",
                "param_3": "input_string",
                "param_4": "input_string_length",
                "puVar1": "current_char",
                "iVar2": "total_length",
                "iVar3": "string_length",
                "puVar4": "output_buffer",
                "piVar5": "next_param",
                "bVar6": "found_width",
                "pbVar7": "current_char",
                "pbVar8": "current_char",
                "unaff_r9": "specifier_index",
                "local_8c": "input_string_length",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "length_modifier",
                "local_7c": "width",
                "local_74": "total_length",
                "local_70": "specifier"
            },
            "code": "int parse_string_and_format_output_080050fc(undefined4 *output_buffer, int *output_buffer_length, byte *input_string, int *input_string_length) {\n  undefined *current_char;\n  int total_length = 0;\n  int width = -1;\n  int precision = 0;\n  int flags = 0;\n  int length_modifier = 0;\n  byte specifier;\n  while (*input_string != 0) {\n    current_char = input_string;\n    while (*current_char != 0 && *current_char != '%') {\n      current_char++;\n    }\n    int string_length = (int)current_char - (int)input_string;\n    if (string_length != 0) {\n      int status = format_string(output_buffer, output_buffer_length, input_string, string_length);\n      if (status == -1) {\n        if ((int)((uint)*(ushort *)(output_buffer_length + 3) << 0x19) < 0) {\n          return -1;\n        }\n        return total_length;\n      }\n      total_length += string_length;\n    }\n    if (*current_char == 0) {\n      break;\n    }\n    flags = 0;\n    width = -1;\n    precision = 0;\n    length_modifier = 0;\n    specifier = *(current_char + 1);\n    current_char += 2;\n    while (true) {\n      int flag_index = get_flag_index(PTR_FLAG_NAMES, specifier);\n      if (flag_index == 0) {\n        break;\n      }\n      flags |= 1 << (flag_index - (int)PTR_FLAG_NAMES & 0xffU);\n      specifier = *current_char;\n      current_char++;\n    }\n    if (*current_char == '*') {\n      int *next_param = input_string_length + 1;\n      int param_value = *input_string_length;\n      input_string_length = next_param;\n      if (-1 < param_value) {\n        width = param_value;\n      }\n      flags |= 2;\n    }\n    else {\n      bool found_width = false;\n      int width_value = 0;\n      while (true) {\n        if (9 < *current_char - 0x30) {\n          break;\n        }\n        width_value = width_value * 10 + (*current_char - 0x30);\n        found_width = true;\n        current_char++;\n      }\n      if (found_width) {\n        width = width_value;\n      }\n    }\n    if (*current_char == '.') {\n      if (*(current_char + 1) == '*') {\n        current_char += 2;\n        int *next_param = input_string_length + 1;\n        int param_value = *input_string_length;\n        input_string_length = next_param;\n        if (param_value >= 0) {\n          precision = param_value;\n        }\n      }\n      else {\n        bool found_precision = false;\n        int precision_value = 0;\n        while (true) {\n          current_char++;\n          if (9 < *current_char - 0x30) {\n            break;\n          }\n          precision_value = precision_value * 10 + (*current_char - 0x30);\n          found_precision = true;\n        }\n        if (found_precision) {\n          precision = precision_value;\n        }\n      }\n    }\n    int length_modifier_index = get_flag_index(PTR_LENGTH_MODIFIER_NAMES, specifier);\n    if (length_modifier_index != 0) {\n      length_modifier = length_modifier_index - (int)PTR_LENGTH_MODIFIER_NAMES & 0xffU;\n      specifier = *++current_char;\n    }\n    int specifier_index = get_flag_index(PTR_SPECIFIER_NAMES, specifier);\n    if (specifier_index == 0) {\n      output_buffer = (undefined4 *)format_string(output_buffer, output_buffer_length, current_char - 1, 2);\n    }\n    else {\n      output_buffer = (undefined4 *)format_output(PTR_SPECIFIER_FUNCTIONS, specifier_index, output_buffer, output_buffer_length, flags, width, precision, length_modifier, input_string_length);\n    }\n    if (output_buffer == (undefined4 *)0xffffffff) {\n      if ((int)((uint)*(ushort *)(output_buffer_length + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    input_string = current_char + 1;\n    total_length += (int)output_buffer;\n  }\n  return total_length;\n}\n",
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005614",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "parse_string_and_format_output_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "store_parameter_in_pointer_08003320",
                "param_1": "parameter",
                "PTR_DAT_08003328": "PTR_DATA_POINTER"
            },
            "code": "void store_parameter_in_pointer_08003320(void* parameter){\n  *(void**)PTR_DAT_08003328 = parameter;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "store_parameter_in_pointer_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "send_data_to_device_08004410",
                "param_1": "device_address",
                "param_2": "data",
                "param_3": "extra_data",
                "local_10": "device_data",
                "local_c": "masked_data",
                "uStack_8": "extra_device_data"
            },
            "code": "void send_data_to_device_08004410(uint32_t device_address, uint16_t data, uint32_t extra_data) {\n  uint16_t masked_data = data & 0xFFFF0000 | (uint16_t)*(uint16_t *)(PTR_DAT_08004430 + 4);\n  uint32_t device_data = *(uint32_t *)PTR_DAT_08004430;\n  uint32_t extra_device_data = extra_data;\n  send_command_to_device(0x6C, &device_data, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_data_to_device_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "process_bits_08001264",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "data_ptr",
                "uVar2": "DATA_08001414",
                "uVar3": "DATA_08001418",
                "uVar4": "output_value",
                "uVar5": "input_value",
                "uVar6": "data_index",
                "iVar7": "output_index",
                "uVar8": "i",
                "uVar9": "data_value",
                "uVar10": "bit_mask",
                "unaff_r10": "input_ptr",
                "iVar11": "data_index",
                "DATA_08001418": "DATA_08001418",
                "DATA_08001414": "DATA_08001414",
                "DATA_08001404": "DATA_08001404",
                "DATA_08001410": "DATA_08001410",
                "DATA_0800141c": "DATA_0800141c",
                "DATA_08001408": "DATA_08001408",
                "DAT_0800140c": "DAT_0800140c"
            },
            "code": "void process_bits_08001264(uint *output, uint *input)\n{\n  uint *output_ptr;\n  uint current_bit;\n  uint input_value;\n  uint output_value;\n  uint bit_mask;\n  uint input_type;\n  uint *data_ptr;\n  uint data_value;\n  int output_index;\n  int data_index;\n  int i;\n  uint *input_ptr;\n  \n  uint DATA_08001418 = 0x10000;\n  uint DATA_08001414 = 0x8000;\n  uint *DATA_08001404 = (uint *)0x40010000;\n  uint DATA_08001410 = 0x10;\n  uint DATA_0800141c = 0x20;\n  uint *DATA_08001408 = (uint *)0x50000000;\n  uint *DAT_0800140c = (uint *)0x51000000;\n  \n  output_value = 0;\n  bit_mask = 0;\n  for (i = 0; i < 16; i++)\n  {\n    current_bit = 1 << i;\n    input_value = current_bit & *input;\n    if (input_value == current_bit)\n    {\n      input_type = input[1];\n      if (input_type == 0x12)\n      {\n        output_value = input[3] + 0xc;\n      }\n      else if (input_type < 0x13)\n      {\n        if (input_type == 2)\n        {\n          output_value = input[3] + 8;\n        }\n        else if (input_type < 3)\n        {\n          if (input_type == 0)\n            goto LAB_080013be;\n          if (input_type == 1)\n          {\n            output_value = input[3];\n          }\n        }\n        else if (input_type == 3)\n        {\n          output_value = 0;\n        }\n        else if (input_type == 0x11)\n        {\n          output_value = input[3] + 4;\n        }\n      }\n      else\n      {\n        if (input_type != DATA_08001410)\n        {\n          if (DATA_08001410 < input_type)\n          {\n            if ((input_type != DATA_08001414) && (data_value = DATA_08001418, input_type != DATA_08001418))\n              goto LAB_080013b8;\n          }\n          else if (input_type != DATA_0800141c)\n          {\n            data_value = DATA_0800141c + 0x10000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        data_ptr = input + 2;\n        if (*data_ptr == 0)\n        {\n          output_value = 4;\n        }\n        else\n        {\n          if (*data_ptr == 1)\n          {\n            output[4] = current_bit;\n          }\n          if (*data_ptr != 1)\n          {\n            output[5] = current_bit;\n          }\n          output_value = 8;\n        }\n      }\nLAB_080012a8:\n      if (input_value < 0x100)\n      {\n        output_ptr = output;\n        data_index = i << 2;\n      }\n      else\n      {\n        output_ptr = output + 1;\n        data_index = (i + 0x3ffffff8) * 4;\n      }\n      if (0xff < input_value)\n      {\n        data_index = i + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (data_index & 0xff)) | output_value << (data_index & 0xff);\n      input_ptr = (uint *)input[1];\n      if (((uint)input_ptr & 0x10000000) != 0)\n      {\n        *(uint *)(DATA_08001408 + 0x18) = *(uint *)(DATA_08001408 + 0x18) | 1;\n        output_index = (i & 3) << 2;\n        if (output == DAT_0800140c)\n        {\n          data_index = 0;\n        }\n        else if (output == DAT_0800140c + 0x100)\n        {\n          data_index = 1;\n        }\n        else if (output == DAT_0800140c + 0x200)\n        {\n          data_index = 2;\n        }\n        else if (output == DAT_0800140c + 0x300)\n        {\n          data_index = 3;\n        }\n        else\n        {\n          data_index = 4;\n        }\n        *(uint *)(&DATA_08001404 + (i & 0xfffffffc)) = data_index << output_index | *(uint *)(&DATA_08001404 + (i & 0xfffffffc)) & ~(0xf << output_index);\n        if (((uint)input_ptr & 0x10000) == 0)\n        {\n          data_value = *DATA_08001404 & ~input_value;\n        }\n        else\n        {\n          data_value = *DATA_08001404 | input_value;\n        }\n        *DATA_08001404 = data_value;\n        if (((uint)input_ptr & 0x20000) == 0)\n        {\n          data_value = DATA_08001404[1] & ~input_value;\n        }\n        else\n        {\n          data_value = DATA_08001404[1] | input_value;\n        }\n        DATA_08001404[1] = data_value;\n        if (((uint)input_ptr & 0x100000) == 0)\n        {\n          data_value = DATA_08001404[2] & ~input_value;\n        }\n        else\n        {\n          data_value = DATA_08001404[2] | input_value;\n        }\n        DATA_08001404[2] = data_value;\n        if (((uint)input_ptr & 0x200000) == 0)\n        {\n          input_value = DATA_08001404[3] & ~input_value;\n        }\n        else\n        {\n          input_value = input_value | DATA_08001404[3];\n        }\n        DATA_08001404[3] = input_value;\n      }\n    }\n  }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_0800458c",
                "FUN_08004e14"
            ],
            "imported": false,
            "current_name": "process_bits_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "initialize_game_board_08002ea0",
                "param_1": "row_count",
                "param_2": "column_count",
                "param_3": "unknown_param_1",
                "param_4": "unknown_param_2",
                "FUN_08002ad0": "initialize_game_pieces",
                "FUN_08002cb0": "initialize_game_rules",
                "FUN_08003314": "set_game_board_size",
                "DAT_08002ebc": "game_board_size",
                "FUN_08003320": "set_game_board",
                "extraout_r1": "game_board_ptr"
            },
            "code": "void initialize_game_board_08002ea0(undefined4 row_count, undefined4 column_count, undefined4 unknown_param_1, undefined4 unknown_param_2)\n{\n  undefined4 extraout_r1;\n  initialize_game_pieces();\n  initialize_game_rules();\n  set_DAT_08002ebc(DAT_08002ebc);\n  set_game_board(0, extraout_r1, unknown_param_1, unknown_param_2);\n  return;\n}",
            "called": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08003314",
                "FUN_08003320"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_game_board_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "calculate_080070b0",
                "param_1": "numerator",
                "param_2": "denominator",
                "param_3": "shift",
                "uVar1": "high",
                "uVar2": "exponent",
                "uVar3": "low",
                "uVar4": "significand",
                "uVar5": "bias",
                "uVar6": "mask",
                "uVar7": "quotient",
                "uVar8": "result"
            },
            "code": "unsigned long long calculate_080070b0(uint numerator, uint denominator, unsigned int shift) {\n    unsigned int exponent = (denominator << 1) >> 0x15;\n    unsigned int bias = exponent - 0x3ff;\n    uint32_t sign = (numerator & 0x80000000) | (denominator & 0x7fffffff);\n    if ((int)bias < 0x14) {\n        if ((int)bias < 0) {\n            if (sign == 0) {\n                return ((unsigned long long)denominator << 32) | numerator;\n            }\n            unsigned int significand = denominator & 0xfffff | numerator;\n            unsigned int* ptr = (unsigned int*)0x080071b8 + ((int)denominator >> 0x1f) * -8;\n            unsigned int high = *(ptr + 1);\n            unsigned int low = *ptr;\n            unsigned long long quotient = divide(numerator, (-significand | significand) >> 0xc & 0x80000 | denominator & 0xfffe0000, high, low, numerator, denominator, shift);\n            unsigned long long result = multiply((int)quotient, (int)(quotient >> 0x20), high, low);\n            return result & 0xffffffff | ((unsigned long long)(sign >> 31) << 32);\n        }\n        unsigned int mask = 0x80000000 >> (bias & 0xff);\n        if ((denominator & mask | numerator) == 0) {\n            return ((unsigned long long)denominator << 32) | numerator;\n        }\n        mask = mask >> 1;\n        unsigned int significand = denominator & mask | numerator;\n        if (significand != 0) {\n            if (bias == 0x13) {\n                significand = 0x80000000;\n            }\n            else {\n                significand = 0;\n            }\n            exponent = 0x40000 >> (bias & 0xff) | denominator & ~mask;\n        }\n    }\n    else {\n        if (0x33 < (int)bias) {\n            if (bias != 0x400) {\n                return ((unsigned long long)denominator << 32) | numerator;\n            }\n            unsigned long long result = divide(numerator, denominator, shift);\n            return result;\n        }\n        exponent = exponent - 0x413;\n        unsigned int mask = 0xffffffff >> (exponent & 0xff);\n        if ((numerator & mask) == 0) {\n            return ((unsigned long long)denominator << 32) | numerator;\n        }\n        mask = mask >> 1;\n        unsigned int significand = numerator;\n        if ((numerator & mask) != 0) {\n            significand = 0x40000000 >> (exponent & 0xff) | numerator & ~mask;\n        }\n    }\n    unsigned int* ptr = (unsigned int*)0x080071b8 + ((int)denominator >> 0x1f) * -8;\n    unsigned int high = *(ptr + 1);\n    unsigned int low = *ptr;\n    unsigned long long quotient = divide(significand, exponent, high, low, numerator, denominator, shift);\n    unsigned long long result = multiply((int)quotient, (int)(quotient >> 0x20), high, low);\n    return result;\n}",
            "called": [
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "write_to_memory_08001424",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "shift_amount",
                "*(int *)(param_1 + 0x10)": "*(int *)(base_address + 16)"
            },
            "code": "void write_to_memory_08001424(int base_address, int value, int shift_amount) {\n  if (shift_amount == 0) {\n    value = value << 16;\n  }\n  *(int *)(base_address + 16) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "write_to_memory_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "is_end_of_input_08001028",
                "in_CY": "input_character",
                "FUN_08001004": "execute_input"
            },
            "code": "bool is_end_of_input_08001028(void)\n{\n  char input_character;\n  execute_input();\n  return input_character == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_end_of_input_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = FUN_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = FUN_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = FUN_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = FUN_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = FUN_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = FUN_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = FUN_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = FUN_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = FUN_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = FUN_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = FUN_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_080070b0",
                "FUN_080009a0",
                "FUN_08007092",
                "FUN_080004d0",
                "FUN_08006228",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "calculate_result_080006ac",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "register12",
                "bVar4": "is_zero"
            },
            "code": "ulonglong calculate_result_080006ac(uint input1,uint input2,uint input3,uint input4)\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  bool is_zero;\n  \n  temp1 = input4 >> 0x14;\n  if (input2 != input3 && temp1 != input3) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (input2 == 0) {\n      temp3 = input1 & 0x80000000;\n      do {\n        temp2 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(temp2 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp3;\n      if (temp1 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp1 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp1 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  temp3 = input2;\n  if (((!is_zero) && ((input2 != input3 || ((input1 | input2 << 0xc) == 0)))) && ((temp1 != input3 || (input1 = input3, temp3 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp3,input1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "calculate_result_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "send_data_08001828",
                "param_1": "data",
                "param_2": "size",
                "param_3": "flag1",
                "param_4": "flag2",
                "param_5": "buffer",
                "param_6": "buffer_size",
                "param_7": "flag3",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "puVar3": "data_ptr",
                "uVar4": "data_value",
                "LAB_080018e2": "send_data_loop",
                "LAB_080018ee": "error_handling"
            },
            "code": "uint32_t send_data_08001828(uint32_t **data, uint32_t size, uint32_t flag1, uint32_t flag2, uint8_t *buffer, uint16_t buffer_size, uint32_t flag3)\n{\n    int start_time = get_current_time();\n    int current_time;\n    uint32_t *data_ptr;\n    uint32_t data_value;\n    \n    if (*(char *)((int)data + 0x35) == ' ')\n    {\n        if (buffer == NULL || buffer_size == 0)\n        {\n            return 1;\n        }\n        \n        int start_time = get_current_time();\n        do\n        {\n            data_ptr = *data;\n            if ((~data_ptr[6] & 2) != 0)\n            {\n                if (*(char *)(data + 0xd) == '\\x01')\n                {\n                    return 2;\n                }\n                \n                data_value = *data_ptr;\n                *(uint8_t *)(data + 0xd) = 1;\n                *data_ptr = data_value & 0xfffff7ff;\n                *(uint8_t *)((int)data + 0x35) = 0x21;\n                *(uint8_t *)((int)data + 0x36) = 0x40;\n                data[0xe] = NULL;\n                int result = send_data_08001828_helper(data, size, flag1, flag2, flag3);\n                if (result != 0)\n                {\n                    *(uint8_t *)(data + 0xd) = 0;\n                    if (data[0xe] == (uint32_t *)0x4)\n                    {\n                        return 1;\n                    }\n                    return 3;\n                }\n                goto LAB_080018e2;\n            }\n            current_time = get_current_time();\n        } while ((uint)(current_time - start_time) < 0x2711);\n        \n        *(uint8_t *)(data + 0xd) = 0;\n        *(uint8_t *)((int)data + 0x35) = 0x20;\n    }\n    return 2;\n    \n    while (buffer_size != 0)\n    {\nLAB_080018e2:\n        int result = send_data_08001828_helper(data, flag3);\n        if (result != 0)\n        {\n            goto LAB_080018ee;\n        }\n        data_ptr = *data;\n        data_ptr[4] = (uint32_t)*buffer;\n        if ((int)(data_ptr[5] << 0x1d) < 0)\n        {\n            if ((uint16_t)(buffer_size - 1) == 0)\n            {\n                break;\n            }\n            buffer_size -= 2;\n            data_ptr[4] = (uint32_t)buffer[1];\n            buffer += 2;\n        }\n        else\n        {\n            buffer++;\n            buffer_size--;\n        }\n    }\n    \n    int result = send_data_08001828_helper(data, flag3);\n    if (result == 0)\n    {\n        **data = **data | 0x200;\n        *(uint8_t *)(data + 0xd) = 0;\n        *(uint8_t *)((int)data + 0x35) = 0x20;\n        *(uint8_t *)((int)data + 0x36) = 0;\n        return 0;\n    }\n\nLAB_080018ee:\n    if (data[0xe] == (uint32_t *)0x4)\n    {\n        **data = **data | 0x200;\n        return 1;\n    }\n    return 3;\n}",
            "called": [
                "FUN_08001530",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "send_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "initialize_data_buffer_08004c64",
                "puVar1": "data_buffer_ptr",
                "iVar2": "index"
            },
            "code": "void initialize_data_buffer_08004c64(void)\n{\n  undefined *data_buffer_ptr;\n  int index;\n  data_buffer_ptr = data_buffer_start;\n  index = 0;\n  *(undefined2 *)(data_buffer_start + 0x800) = 0;\n  *(undefined2 *)(data_buffer_ptr + 0x802) = 0;\n  *(undefined2 *)(data_buffer_ptr + 0x804) = 0;\n  do {\n    data_buffer_ptr[index] = 0;\n    index = index + 1;\n  } while (index != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "initialize_data_buffer_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = FUN_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = FUN_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = FUN_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = FUN_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = FUN_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = FUN_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = FUN_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = FUN_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = FUN_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = FUN_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = FUN_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = FUN_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = FUN_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = FUN_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = FUN_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08001168",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "set_sign_bit_08007092",
                "param_1": "value",
                "param_2": "sign_bit",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "uint set_sign_bit_08007092(uint value, uint sign_bit) {\n    uint signed_value = value | sign_bit;\n    uint shifted_value = signed_value + 0x100000;\n    uint shifted_value_msb = shifted_value >> 0x1f;\n    return shifted_value_msb;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "set_sign_bit_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "decode_message_0800290c",
                "param_1": "message_buffer",
                "bVar1": "message_byte",
                "iVar2": "message_start",
                "uVar3": "message_id",
                "uVar4": "unused_variable",
                "sVar5": "message_length",
                "puVar6": "message_data",
                "puVar7": "next_message_data",
                "bVar8": "is_valid_message",
                "is_long_message": "is_long_message",
                "is_second_byte": "is_second_byte",
                "message_type": "message_type"
            },
            "code": "int decode_message_0800290c(int *message_buffer) {\n    byte message_type = *(byte *)((int)message_buffer + 0x39);\n    if ((message_type & 0xef) != 0x22) {\n        return 2;\n    }\n    int message_start = *message_buffer;\n    ushort *message_data = (ushort *)message_buffer[10];\n    bool is_long_message = message_buffer[2] == 0x1000;\n    bool is_second_byte = message_buffer[4] != 0;\n    if (is_long_message) {\n        if (is_second_byte) {\n            *message_data = (ushort)*(int *)(message_start + 4) & 0xff;\n            message_data = (ushort *)((int)message_data + 1);\n        }\n        else {\n            *message_data = (ushort)((uint)(*(int *)(message_start + 4) << 0x17) >> 0x17);\n            message_data++;\n        }\n    }\n    else {\n        if (is_second_byte) {\n            byte message_byte = (byte)*(undefined4 *)(message_start + 4) & 0x7f;\n            *(byte *)message_data = message_byte;\n            message_data = (ushort *)((int)message_data + 1);\n        }\n        else {\n            byte message_byte = (byte)*(undefined4 *)(message_start + 4);\n            *(byte *)message_data = message_byte;\n            message_data = (ushort *)((int)message_data + 1);\n        }\n    }\n    short message_length = *(short *)((int)message_buffer + 0x2e) - 1;\n    *(short *)((int)message_buffer + 0x2e) = message_length;\n    if (message_length == 0) {\n        *(uint *)(message_start + 0xc) &= 0xffffffdf;\n        uint message_id = (uint)message_type;\n        bool is_valid_message = message_id == 0x32;\n        if (!is_valid_message) {\n            *(uint *)(message_start + 0xc) &= 0xfffffeff;\n            message_id = 0x12;\n        }\n        *(char *)((int)message_buffer + 0x39) = (char)message_id;\n        perform_action();\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "decode_message_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "initialize_application_08002f28",
                "iVar6": "initial_value",
                "uVar7": "new_value",
                "iVar8": "initial_value2",
                "puVar2": "pointer1",
                "puVar3": "pointer2",
                "puVar4": "pointer3",
                "uVar5": "temp_value",
                "sVar1": "short_value"
            },
            "code": "void initialize_application_08002f28(void)\n{\n  // Call initialization functions\n  initialize_subsystem_1();\n  initialize_subsystem_2();\n  initialize_subsystem_3();\n\n  // Get initial value for variable\n  int initial_value = get_initial_value();\n\n  // Calculate new value based on initial value\n  int new_value = calculate_new_value(initial_value);\n\n  // Update system with new value\n  update_system(new_value);\n\n  // Get values for various parameters\n  int param1 = get_parameter1();\n  int param2 = get_parameter2();\n  int param3 = get_parameter3();\n\n  // Calculate and update various values based on parameters\n  calculate_and_update_values(param1, param2, param3);\n}\n",
            "called": [
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_08002d88",
                "FUN_08000c3c",
                "thunk_FUN_0800115c",
                "FUN_08002ed4",
                "FUN_08002ee8",
                "FUN_08001078",
                "FUN_08000cec",
                "FUN_08002bf0",
                "FUN_08003320",
                "FUN_08000e54",
                "FUN_08002b48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_application_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "decode_and_execute_08004384",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "PTR_DAT_080043b8": "data_ptr",
                "data_ptr[4]": "data_ptr_size",
                "data_ptr[5]": "data_ptr_offset_1",
                "data_ptr[6]": "data_ptr_offset_2",
                "data_ptr[7]": "data_ptr_offset_3",
                "data_ptr[8]": "data_ptr_value_1",
                "data_ptr[9]": "data_ptr_value_2",
                "data_ptr[10]": "data_ptr_value_3",
                "local_14": "data_ptr_value_4",
                "uStack_10": "data_ptr_value_5",
                "local_c": "local_variable_1",
                "execute_command": "execute_command"
            },
            "code": "void decode_and_execute_08004384(uint32_t param_1,uint32_t param_2,uint32_t param_3,uint32_t param_4)\n{\n  uint32_t* PTR_DAT_080043b8 = PTR_DAT_080043b8;\n  PTR_DAT_080043b8[4] = 7;\n  PTR_DAT_080043b8[5] = 0;\n  PTR_DAT_080043b8[6] = 0x2a;\n  PTR_DAT_080043b8[7] = 0;\n  uint32_t local_14 = *PTR_DAT_080043b8;\n  uint32_t uStack_10 = *(PTR_DAT_080043b8 + 1);\n  PTR_DAT_080043b8[8] = 0;\n  PTR_DAT_080043b8[9] = 0;\n  PTR_DAT_080043b8[10] = 0;\n  uint32_t local_c = param_4 & 0xff000000 | (uint32_t)*(uint16_t *)(PTR_DAT_080043b8 + 8);\n  execute_command(0x65,&local_14,0xb,*(uint16_t *)(PTR_DAT_080043b8 + 8),param_1);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_execute_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "is_input_empty_080009a0",
                "in_ZR": "input_char",
                "FUN_08000990": "get_input_char"
            },
            "code": "bool is_input_empty_080009a0(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "is_input_empty_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "read_MS5611_calibration_data_08003298",
                "puVar1": "src_ptr",
                "puVar2": "data_ptr",
                "puVar3": "calibration_data_storage",
                "iVar4": "data_index",
                "local_1c": "read_data",
                "local_1b": "unused_byte",
                "PTR_DAT_0800330c": "calibration_data_MS5611",
                "PTR_DAT_08003310": "calibration_data_storage",
                "PTR_s____Src_MS5611_c_08003308": "MS5611_src_data",
                "PTR_DAT_08003304": "calibration_data_index"
            },
            "code": "void read_MS5611_calibration_data_08003298(void)\n{\n  int data_index = 0;\n  write_byte_to_MS5611(0xee, 0x1e, 1);\n  delay_ms(10);\n  uint8_t* data_ptr = PTR_DAT_0800330c;\n  uint8_t* src_ptr = PTR_s____Src_MS5611_c_08003308;\n  *PTR_DAT_08003304 = 8;\n  do {\n    uint16_t read_data = 0;\n    read_word_from_MS5611(0xee, data_index + 0xa0U & 0xffff, &read_data, 2, src_ptr, 0x7c);\n    *(uint16_t *)(data_ptr + data_index) = read_data;\n    PTR_DAT_08003304 = PTR_DAT_08003304 + 2;\n  } while (data_index != 0x10);\n  data_index = 0;\n  do {\n    *(uint32_t *)(PTR_DAT_08003310 + data_index * 4) = 0;\n    data_index = data_index + 1;\n  } while (data_index != 0x14);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "read_MS5611_calibration_data_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "calculate_checksum_and_store_08004300",
                "param_1": "starting_value",
                "param_2": "data",
                "param_3": "data_length",
                "PTR_DAT_08004344": "PTR_DAT_08004344",
                "FUN_08004c8c": "store_value",
                "FUN_08004c18": "store_value"
            },
            "code": "void calculate_checksum_and_store_08004300(uint starting_value, byte* data, uint data_length) {\n  uint checksum = starting_value ^ (data_length & 0xff);\n  store_value(PTR_DAT_08004344);\n  store_value(data_length & 0xff);\n  store_value(starting_value);\n  for (byte* current_byte = data; current_byte < data + data_length; current_byte++) {\n    store_value(*current_byte);\n    checksum ^= *current_byte;\n  }\n  store_value(checksum);\n  return;\n}",
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004348",
                "FUN_08004410",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004458"
            ],
            "imported": false,
            "current_name": "calculate_checksum_and_store_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_string_08005630",
                "param_1": "dest_start",
                "param_2": "source",
                "param_3": "length",
                "puVar1": "dest_ptr",
                "puVar2": "source_ptr"
            },
            "code": "void copy_string_08005630(int dest_start, undefined *source, int length)\n{\n  undefined *dest_ptr;\n  undefined *source_ptr;\n  dest_ptr = (undefined *)(dest_start - 1);\n  source_ptr = source + length;\n  for (; source != source_ptr; source++) {\n    dest_ptr++;\n    *dest_ptr = *source;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_string_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  FUN_08000428();\n  FUNC_08005bc8();\n  uVar2 = FUN_08000a30();\n  iVar4 = FUN_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    FUN_08000428();\n    FUNC_08005bc8();\n    uVar3 = FUN_08000a30();\n    iVar4 = FUN_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = FUN_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = FUN_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      FUN_08000428();\n      FUNC_08005bc8();\n      iVar27 = FUN_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      FUN_08000428();\n      FUNC_08005bc8();\n      uVar8 = FUN_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      FUN_08000428();\n      FUNC_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      FUN_08000428();\n      uVar32 = FUN_08005854();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = FUN_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005854",
                "FUN_08000a30",
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08005bc8",
                "FUN_08000adc",
                "FUN_08000724",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "swap_integers_08000980",
                "param_1": "first_integer",
                "param_2": "second_integer",
                "param_3": "temporary_integer"
            },
            "code": "void swap_integers_08000980(int* first_integer, int* second_integer){\n    int temporary_integer = *first_integer;\n    *first_integer = *second_integer;\n    *second_integer = temporary_integer;\n    return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "swap_integers_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "perform_operation_08004028",
                "FUNC_0800458c": "perform_action_1",
                "FUN_08003ff4": "perform_action_2",
                "FUN_08003f3c": "perform_action_3",
                "thunk_do_nothing_08001168": "wait_for_some_time",
                "iVar1": "counter"
            },
            "code": "void perform_operation_08004028(void)\n{\n  int counter = 3;\n  perform_action_1();\n  perform_action_2();\n  do {\n    perform_action_3(1, 0);\n    wait_for_some_time(100);\n    perform_action_3(0, 1);\n    wait_for_some_time(100);\n    perform_action_3(0, 0, 1);\n    wait_for_some_time(100);\n    counter--;\n  } while (counter != 0);\n  perform_action_3(1, 1);\n  return;\n}",
            "called": [
                "FUN_08003ff4",
                "FUN_08003f3c",
                "thunk_FUN_08001168",
                "FUN_0800458c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "perform_operation_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "update_data_08002368",
                "param_1": "data_array",
                "param_2": "update_array",
                "uVar1": "original_value",
                "puVar2": "pointer",
                "DAT_080023cc": "original_data"
            },
            "code": "void update_data_08002368(uint *data_array, uint *update_array)\n{\n  uint original_value = *data_array;\n  if (((data_array == DAT_080023cc) || (data_array == (uint *)0x40000000)) ||\n      (data_array == DAT_080023cc - 0x4a00) || (data_array == DAT_080023cc - 0x4900)) {\n    original_value = original_value & 0xffffff8f | update_array[1];\n    if (((data_array == DAT_080023cc) || (data_array == (uint *)0x40000000)) ||\n        ((data_array == DAT_080023cc - 0x4a00 || (data_array == DAT_080023cc - 0x4900))))) {\n      original_value = original_value & 0xfffffcff | update_array[3];\n    }\n  }\n  *data_array = original_value;\n  data_array[11] = update_array[2];\n  data_array[10] = *update_array;\n  uint *pointer = DAT_080023cc;\n  if (data_array == DAT_080023cc) {\n    pointer = (uint *)update_array[4];\n  }\n  if (data_array == DAT_080023cc) {\n    data_array[12] = (uint)pointer;\n  }\n  data_array[5] = 1;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_data_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "set_bit_08002520",
                "param_1": "bit_array",
                "param_2": "bit_index",
                "param_3": "bit_value",
                "*(uint *)(param_1 + 0x20)": "*bit_array",
                "*(uint *)(param_1 + 0x20) & ~(1 << (param_2 & 0xff))": "*bit_array & ~mask",
                "param_3 << (param_2 & 0xff) | *(uint *)(param_1 + 0x20)": "bit_value << (bit_index & 0xff) | *bit_array",
                "uint": "uint32_t"
            },
            "code": "void set_bit_08002520(uint32_t *bit_array, uint8_t bit_index, uint32_t bit_value){\n    uint32_t mask = 1 << (bit_index & 0xff);\n    *bit_array = (*bit_array & ~mask) | (bit_value << (bit_index & 0xff));\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "set_bit_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_value_08002008",
                "uVar1": "value_1",
                "uVar2": "value_2",
                "uVar3": "data_1",
                "uVar4": "shift",
                "uVar5": "value",
                "puVar6": "ptr_data",
                "puVar7": "ptr_local",
                "local_24": "local_array",
                "local_20": "local_array_2"
            },
            "code": "uint calculate_value_08002008(void)\n{\n    uint value = 0;\n    uint data_1 = *(uint *)(DAT_08002090 + 4);\n    uint data_2 = DAT_08002094;\n    byte local_array[4] = {1, 2, 0, 0};\n    uint local_array_2[5];\n    uint *ptr_data = (uint *)PTR_DAT_0800208c;\n    uint *ptr_local = local_array_2;\n    for (int i = 0; i < 5; i++) {\n        *ptr_local = *ptr_data;\n        ptr_local++;\n        ptr_data++;\n        *ptr_local = *ptr_data;\n        ptr_local++;\n        ptr_data++;\n    }\n    if ((data_1 & 0xc) == 8) {\n        int shift = ((data_1 & 0x3c0000) >> 14) & 0xff;\n        uint temp = count_leading_zeroes(0x3c00);\n        if ((int)(data_1 << 0xf) < 0) {\n            uint temp2 = count_leading_zeroes(0x4000);\n            uint divisor = local_array[temp2 & 0xff];\n            data_2 /= divisor;\n        }\n        value = data_2 * local_array_2[shift];\n    }\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_value_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "update_data_08002404",
                "param_1": "data_addr",
                "param_2": "data_array",
                "uVar1": "data1",
                "uVar2": "data2",
                "iVar3": "data3",
                "mask1": "mask1",
                "mask2": "mask2",
                "mask3": "mask3",
                "mask4": "mask4"
            },
            "code": "void update_data_08002404(int data_addr, int *data_array) {\n    uint32_t mask1 = 0xFFFFFFEF;\n    uint32_t mask2 = 0xFFFFF3FF;\n    uint32_t mask3 = 0xFFFFFFDF;\n    uint32_t mask4 = 0xFFFFFF7F;\n    uint32_t data1 = *(uint32_t *)(data_addr + 0x20) & mask1;\n    uint32_t data2 = *(uint32_t *)(data_addr + 4);\n    int data3 = *data_array;\n    uint32_t data4 = data_array[2] << 4;\n    if (data_addr == DAT_08002458) {\n        data4 = (data4 & mask4) | (data_array[3] << 4);\n        data2 = (data2 & mask2) | ((data_array[5] | data_array[6]) << 2);\n    }\n    *(uint32_t *)(data_addr + 0x20) = (data1 & mask3) | data4;\n    *(uint32_t *)(data_addr + 4) = data2;\n    *(uint32_t *)(data_addr + 0x18) = (*(uint32_t *)(data_addr + 0x18) & 0xFFFF8CFF) | (data3 << 8);\n    *(int *)(data_addr + 0x38) = data_array[1];\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "FUNC_08005bc8"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUNC_08005bc8(undefined4 param_1,undefined4 param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined4 *puVar4;\n  undefined8 uVar5;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  uVar5 = FUN_08006c0c();\n  cVar1 = *PTR_DAT_08005c68;\n  if (cVar1 == -1) {\n    return uVar5;\n  }\n  local_30 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  if (local_30 != 0) {\n    return uVar5;\n  }\n  iVar2 = FUN_080009b4(param_1,param_2,0,0);\n  if (iVar2 == 0) {\n    return uVar5;\n  }\n  local_50 = 1;\n  local_4c = PTR_DAT_08005c6c;\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_1;\n  uStack_3c = param_2;\n  if (cVar1 == '\\0') {\n    local_38 = 0;\nLAB_08005c26:\n    iVar2 = FUN_0800709e(&local_50);\n    if (iVar2 != 0) goto LAB_08005c2e;\n  }\n  else {\n    local_38 = FUNC_08000724(0,0,0,0);\n    if (cVar1 != '\\x02') goto LAB_08005c26;\n  }\n  puVar4 = (undefined4 *)FUN_080072ac();\n  *puVar4 = 0x21;\nLAB_08005c2e:\n  if (local_30 != 0) {\n    piVar3 = (int *)FUN_080072ac();\n    *piVar3 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "FUNC_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "clear_bit_if_set_08001436",
                "param_1": "ptr",
                "iVar1": "var",
                "*(uint *)(iVar1 + 0x14)": "*(uint *)(var + 0x14)",
                "*(uint *)(iVar1 + 0x14) & 0x400": "(*(uint *)(var + 0x14) & 0x400) != 0",
                "param_1[0xe]": "ptr[14]",
                "*(undefined *)((int)param_1 + 0x35)": "*(undefined *)((int)ptr + 0x35)",
                "*(undefined *)(param_1 + 0xd)": "*(undefined *)(ptr + 13)"
            },
            "code": "int clear_bit_if_set_08001436(uint32_t *ptr)\n{\n  int var = *ptr;\n  if ((*(uint *)(var + 0x14) & 0x400) != 0) {\n    *(uint *)(var + 0x14) &= 0xfffffbff;\n    ptr[14] = 4;\n    *(undefined *)((int)ptr + 0x35) = 0x20;\n    *(undefined *)(ptr + 13) = 0;\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "clear_bit_if_set_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "update_data_if_needed_08004a30",
                "puVar1": "data_ptr",
                "puVar2": "flag_ptr",
                "puVar3": "value_ptr",
                "uVar4": "new_value",
                "PTR_DAT_08004a74": "data_array",
                "PTR_DAT_08004a78": "flag_array",
                "PTR_DAT_08004a7c": "result_array",
                "DAT_08004a80": "TRANSFORMATION_CONSTANT",
                "FUNC_08000cec": "apply_transformation",
                "FUN_08003068": "get_new_value"
            },
            "code": "void update_data_if_needed_08004a30(void)\\n{\\n  char* data_ptr = PTR_DAT_08004a74;\\n  char* flag_ptr = PTR_DAT_08004a78;\\n  char* value_ptr = value_array;\\n  if (*flag_ptr != \"\\0\") {\\n    if (*data_ptr == \"\\0\") {\\n      int new_value = get_new_value();\\n      new_value = apply_transformation(new_value, DAT_08004a80);\\n      *(int *)(PTR_DAT_08004a7c + 0x1c) = new_value;\\n      *flag_ptr = 1;\\n    }\\n    else {\\n      int new_value = get_new_value();\\n      new_value = apply_transformation(new_value, DAT_08004a80);\\n      *(int *)(PTR_DAT_08004a7c + 0x30) = new_value;\\n    }\\n  }\\n  if (*(data_ptr + 1) == \"\\0\") {\\n    if (*flag_ptr != \"\\0\") {\\n      *flag_ptr = 0;\\n    }\\n    *(int *)(PTR_DAT_08004a7c + 0x48) = *(int *)(data_ptr + 4);\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "update_data_if_needed_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "initialize_08004c70",
                "puVar1": "data_ptr",
                "puVar2": "flag_ptr",
                "uVar3": "new_flag",
                "uVar4": "var4",
                "iVar5": "var5"
            },
            "code": "int initialize_08004c70() {\n  char *data_ptr = data_buffer;\n  char *flag_ptr = flag_buffer;\n  if ((flag_buffer[0x39] == '\\x01') || (flag_buffer[0x39] == '\\x12')) {\n    if (data_buffer == (char *)0x0) {\n      return 1;\n    }\n    if (flag_buffer[0x38] != '\\x01') {\n      flag_buffer[0x38] = 1;\n      *(int *)(flag_buffer + 0x3c) = 0;\n      *(short *)(flag_buffer + 0x2c) = 1;\n      *(short *)(flag_buffer + 0x2e) = 1;\n      flag_buffer[0x38] = 0;\n      if (flag_buffer[0x39] == '\\x12') {\n        char new_flag = 0x32;\n      }\n      else {\n        char new_flag = 0x22;\n      }\n      int var5 = *(int *)flag_buffer;\n      flag_buffer[0x39] = new_flag;\n      uint var4 = *(uint *)(var5 + 0xc);\n      *(char **)(flag_buffer + 0x28) = data_ptr;\n      *(uint *)(var5 + 0xc) = var4 | 0x100;\n      *(uint *)(var5 + 0x14) = *(uint *)(var5 + 0x14) | 1;\n      *(uint *)(var5 + 0xc) = *(uint *)(var5 + 0xc) | 0x20;\n      return 0;\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "check_values_08000904",
                "param_1": "first_val",
                "param_2": "second_val",
                "param_3": "third_val",
                "param_4": "fourth_val",
                "uVar1": "xor_of_second_and_fourth_vals",
                "bVar2": "is_first_val_zero",
                "bVar3": "is_third_val_zero"
            },
            "code": "uint check_values_08000904(uint first_val, uint second_val, uint third_val, uint fourth_val)\n{\n  bool is_first_val_zero = (first_val | (second_val << 1)) == 0;\n  bool is_third_val_zero = (third_val | (fourth_val << 1)) == 0;\n  bool are_second_and_fourth_vals_equal = second_val == fourth_val;\n  bool are_first_and_third_vals_equal = first_val == third_val;\n  uint xor_of_second_and_fourth_vals = second_val ^ fourth_val;\n  bool is_xor_of_second_and_fourth_vals_zero = xor_of_second_and_fourth_vals == 0;\n  bool is_xor_of_second_and_fourth_vals_positive = -1 < (int)xor_of_second_and_fourth_vals;\n  bool is_fourth_val_less_than_or_equal_to_second_val = fourth_val <= second_val;\n  bool is_third_val_less_than_or_equal_to_first_val = third_val <= first_val;\n  bool is_condition_one_met = (((int)(second_val << 1) >> 0x15 == -1 && !is_first_val_zero) || ((int)(fourth_val << 1) >> 0x15 == -1 && !is_third_val_zero));\n  bool is_condition_two_met = is_first_val_zero && is_third_val_zero && are_second_and_fourth_vals_equal && are_first_and_third_vals_equal;\n  bool is_condition_three_met = is_xor_of_second_and_fourth_vals_zero || (is_xor_of_second_and_fourth_vals_positive && are_second_and_fourth_vals_equal && is_fourth_val_less_than_or_equal_to_second_val) || (!is_xor_of_second_and_fourth_vals_positive && is_third_val_less_than_or_equal_to_first_val);\n  return (is_condition_one_met || is_condition_two_met || is_condition_three_met) ? 1 : 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "check_values_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "validate_input_0800299a",
                "param_1": "input",
                "uVar1": "first_value",
                "sVar2": "short_value",
                "uVar3": "third_value",
                "puVar4": "ptr_eighth_value",
                "uVar5": "undefined_value",
                "puVar6": "ptr_input",
                "uVar7": "fifth_value",
                "bVar8": "seventeenth_value"
            },
            "code": "void validate_input_0800299a(uint **input)\n{\n  uint first_value, third_value;\n  uint *ptr_input = *input;\n  first_value = *ptr_input;\n  third_value = ptr_input[3];\n  if ((first_value & 0xf) == 0) {\n    if (((int)(first_value << 0x1a) < 0) && ((int)(third_value << 0x1a) < 0)) {\n      handle_error();\n      return;\n    }\n  }\n  else {\n    bool fifth_value = ptr_input[5] & 1;\n    if ((fifth_value != 0) || ((third_value & 0x120) != 0)) {\n      ptr_input = (uint *)(first_value << 0x1f);\n      if ((int)ptr_input < 0) {\n        bool seventeenth_value = (int)(third_value << 0x17) < 0;\n        if (seventeenth_value) {\n          ptr_input = (uint *)((uint)input[0xf] | 1);\n        }\n        if (seventeenth_value) {\n          input[0xf] = ptr_input;\n        }\n      }\n      if (((int)(first_value << 0x1d) < 0) && (fifth_value != 0)) {\n        input[0xf] = (uint *)((uint)input[0xf] | 2);\n      }\n      if (((int)(first_value << 0x1e) < 0) && (fifth_value != 0)) {\n        input[0xf] = (uint *)((uint)input[0xf] | 4);\n      }\n      if (((int)(first_value << 0x1c) < 0) && (fifth_value != 0)) {\n        input[0xf] = (uint *)((uint)input[0xf] | 8);\n      }\n      if (input[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(first_value << 0x1a) < 0) && ((int)(third_value << 0x1a) < 0)) {\n        handle_error(input);\n      }\n      ptr_input = *input;\n      if ((-1 < (int)input[0xf] << 0x1c) && ((ptr_input[5] & 0x40) == 0)) {\n        do_nothing(input);\n        input[0xf] = (uint *)0x0;\n        return;\n      }\n      ptr_input[3] = ptr_input[3] & 0xfffffedf;\n      ptr_input[5] = ptr_input[5] & 0xfffffffe;\n      *(undefined *)((int)input + 0x39) = 1;\n      do_nothing(input);\n      return;\n    }\n  }\n  if (((int)(first_value << 0x18) < 0) && ((int)(third_value << 0x18) < 0)) {\n    if ((*(byte *)((int)input + 0x39) & 0xdf) == 0x12) {\n      uint *ptr_eighth_value = input[8];\n      if (input[2] == (uint *)0x1000) {\n        ptr_input[1] = *(ushort *)ptr_eighth_value & 0x1ff;\n        if (input[4] == (uint *)0x0) {\n          ptr_eighth_value = (uint *)((int)ptr_eighth_value + 2);\n        }\n        else {\n          ptr_eighth_value = (uint *)((int)ptr_eighth_value + 1);\n        }\n        input[8] = ptr_eighth_value;\n      }\n      else {\n        input[8] = (uint *)((int)ptr_eighth_value + 1);\n        ptr_input[1] = (uint)*(byte *)ptr_eighth_value;\n      }\n      short *ptr_twenty_sixth_value = (short *)((int)input + 0x26);\n      *ptr_twenty_sixth_value = *ptr_twenty_sixth_value - 1;\n      if (*ptr_twenty_sixth_value == 0) {\n        ptr_input[3] = ptr_input[3] & 0xffffff7f;\n        ptr_input[3] = ptr_input[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(first_value << 0x19) < 0) && ((int)(third_value << 0x19) < 0)) {\n    ptr_input[3] = ptr_input[3] & 0xffffffbf;\n    if (*(char *)((int)input + 0x39) == '2') {\n      undefined new_value = 0x22;\n    }\n    else {\n      undefined new_value = 1;\n    }\n    *(undefined *)((int)input + 0x39) = new_value;\n    do_nothing_else(input);\n  }\n  return;\n}",
            "called": [
                "FUN_0800290c",
                "FUN_08002998",
                "FUN_0800290a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "validate_input_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_pointer_value_0800114c",
                "PTR_DAT_08001158": "ptr",
                "*PTR_DAT_08001158": "*ptr"
            },
            "code": "void increment_pointer_value_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*)PTR_DAT_08001158;\n  *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_pointer_value_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "process_data_080052e4",
                "param_1": "data",
                "param_2": "count",
                "param_3": "result",
                "param_4": "flag",
                "param_5": "callback",
                "iVar1": "index",
                "uVar2": "max_count",
                "uVar3": "flag_value",
                "bVar4": "is_flag_set",
                "status": "callback_status",
                "count_value": "remaining_count"
            },
            "code": "undefined4 process_data_080052e4(uint32_t data, uint32_t *count, uint32_t *result, uint32_t flag, code *callback)\\n\\\n    {\\n\\\n        int index = 0;\\n\\\n        uint32_t max_count = count[4];\\n\\\n        if ((int)count[4] < (int)count[2]) {\\n\\\n            max_count = count[2];\\n\\\n        }\\n\\\n        *result = max_count;\\n\\\n        if (*(char *)((int)count + 0x43) != \"\\0\") {\\n\\\n            *result = max_count + 1;\\n\\\n        }\\n\\\n        if ((int)(*count << 0x1a) < 0) {\\n\\\n            *result = *result + 2;\\n\\\n        }\\n\\\n        uint32_t flag_value = *count & 6;\\n\\\n        if (flag_value == 0) {\\n\\\n            for (; (int)flag_value < (int)(count[3] - *result); flag_value = flag_value + 1) {\\n\\\n                int status = (*callback)(data,flag,(int)count + 0x19,1);\\n\\\n                if (status == -1) {\\n\\\n                    return 0xffffffff;\\n\\\n                }\\n\\\n            }\\n\\\n        }\\n\\\n        uint32_t is_flag_set = (uint32_t)*(byte *)((int)count + 0x43);\\n\\\n        if (is_flag_set != 0) {\\n\\\n            is_flag_set = 1;\\n\\\n        }\\n\\\n        uint32_t flag_length = is_flag_set;\\n\\\n        if ((int)(*count << 0x1a) < 0) {\\n\\\n            *(undefined *)((int)count + is_flag_set + 0x43) = 0x30;\\n\\\n            flag_length = is_flag_set + 2;\\n\\\n            *(undefined *)((int)count + is_flag_set + 0x44) = *(undefined *)((int)count + 0x45);\\n\\\n        }\\n\\\n        int status = (*callback)(data,flag,(int)count + 0x43,flag_length);\\n\\\n        if (status != -1) {\\n\\\n            uint32_t count_value = count[3];\\n\\\n            bool is_flag_four = (*count & 6) != 4;\\n\\\n            if (is_flag_four) {\\n\\\n                count_value = 0;\\n\\\n            }\\n\\\n            uint32_t remaining_count = 0;\\n\\\n            if (!is_flag_four) {\\n\\\n                count_value = count_value - *result;\\n\\\n            }\\n\\\n            if (!is_flag_four) {\\n\\\n                count_value = count_value & ~((int)count_value >> 0x1f);\\n\\\n            }\\n\\\n            if ((int)count[4] < (int)count[2]) {\\n\\\n                count_value = count_value + (count[2] - count[4]);\\n\\\n            }\\n\\\n            while (remaining_count != count_value) {\\n\\\n                int status = (*callback)(data,flag,(int)count + 0x1a,1);\\n\\\n                if (status == -1) break;\\n\\\n                remaining_count = remaining_count + 1;\\n\\\n            }\\n\\\n            return 0;\\n\\\n        }\\n\\\n        return 0xffffffff;\\n\\\n    }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "process_data_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "check_param_080014e2",
                "param_1": "param_array",
                "param_2": "max_param_size",
                "iVar1": "start_time",
                "iVar2": "ret_val"
            },
            "code": "int check_param_080014e2(uint32_t *param_array, uint32_t max_param_size){\n\tint start_time = get_current_time();\n\twhile(true){\n\t\tif(param_array[3] << 0x18 < 0){\n\t\t\treturn 0;\n\t\t}\n\t\tint ret_val = check_param_080014e22(param_array);\n\t\tif(ret_val != 0){\n\t\t\tbreak;\n\t\t}\n\t\tif((max_param_size != 0xffffffff) && ((max_param_size == 0 || (get_current_time() - start_time) > max_param_size))){\n\t\t\tparam_array[14] = param_array[14] | 0x20;\n\t\t\t*(uint8_t *)((int)param_array + 0x35) = 0x20;\n\t\t\t*(uint32_t *)(param_array + 13) = 0;\n\t\t\treturn 3;\n\t\t}\n\t}\n\treturn 1;\n}",
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8",
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "check_param_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_param_with_ptr_0800142e",
                "param_1": "ptr",
                "param_2": "param",
                "*(uint *)(param_1 + 0xc)": "*ptr_to_xor",
                "uint": "uint32_t"
            },
            "code": "void xor_param_with_ptr_0800142e(uint32_t* ptr, uint32_t param)\n{\n    uint32_t* ptr_to_xor = ptr + 0xc;\n    *ptr_to_xor = param ^ *ptr_to_xor;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_param_with_ptr_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "update_memory_flags_08004d8c",
                "param_1": "memory_address",
                "iVar1": "value",
                "DAT_08004e04": "MEMORY_FLAG_A",
                "DAT_08004e08": "MEMORY_FLAG_ADDRESS",
                "_DAT_4002101c": "MEMORY_FLAG_B",
                "DAT_08004e0c": "MEMORY_FLAG_C",
                "DAT_08004e10": "MEMORY_FLAG_D"
            },
            "code": "void update_memory_flags_08004d8c(int *memory_address) {\n  int value = *memory_address;\n  if (value == DAT_08004e04) {\n    *(uint *)(DAT_08004e08 + 0x18) |= 0x800;\n  }\n  else if (value == _DAT_4002101c) {\n    _DAT_4002101c |= 1;\n  }\n  else if (value == DAT_08004e0c) {\n    *(uint *)(DAT_08004e08 + 0x1c) |= 2;\n  }\n  else if (value == DAT_08004e10) {\n    *(uint *)(DAT_08004e08 + 0x1c) |= 4;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_memory_flags_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250",
                "uVar1": "leading_zeroes_count",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_0800227c": "shifted_value_pointer",
                "PTR_DAT_08002278": "shift_amount_pointer",
                "DAT_08002274": "data_pointer"
            },
            "code": "uint get_shifted_value_08002250(void)\n{\n  uint leading_zeroes_count = count_leading_zeroes(0x1c0000);\n  uint shifted_value = *(uint *)PTR_DAT_0800227c >> PTR_DAT_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (leading_zeroes_count & 0xff)];\n  return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "get_shifted_value_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "is_end_of_input_080009b4",
                "in_CY": "current_character",
                "FUN_08000990": "execute_input_validation"
            },
            "code": "bool is_end_of_input_080009b4(void)\n{\n  char current_character;\n  execute_input_validation();\n  return current_character == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_end_of_input_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_at_index_080011fc",
                "param_1": "index",
                "DAT_08001210": "data_ptr"
            },
            "code": "void set_bit_at_index_080011fc(uint index) {\n  int* DAT_08001210 = DAT_08001210;\n  int offset = index >> 5;\n  int bit_index = index & 0x1f;\n  int* target_ptr = DAT_08001210 + offset;\n  int bit_mask = 1 << bit_index;\n  *target_ptr = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_value_from_pointer_08003068",
                "PTR_DAT_08003070": "pointer_to_value"
            },
            "code": "int get_value_from_pointer_08003068() {\n    int *PTR_DAT_08003070 = PTR_DAT_08003070;\n    int value = *PTR_DAT_08003070;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_copy_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "len",
                "puVar1": "end"
            },
            "code": "void reverse_copy_08005646(char* dest, char* src, int len) {\n  char* end = src + len;\n  if ((src < dest) && (dest < end)) {\n    dest += len;\n    len = len - (int)end;\n    while (end + len != NULL) {\n      end--;\n      dest--;\n      *dest = *end;\n    }\n  }\n  else {\n    dest--;\n    for (; src != end; src++) {\n      dest++;\n      *dest = *src;\n    }\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "reverse_copy_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "execute_function_08000990",
                "param_1": "input_param",
                "FUN_08000904": "call_helper_function"
            },
            "code": "undefined4 execute_function_08000990(undefined4 input_param)\n{\n    call_helper_function();\n    return input_param;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": false,
            "current_name": "execute_function_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "isFirstTimeCallingFunction_08000110",
                "param_1": "isCalledBefore",
                "PTR_DAT_08000128": "isCalledBefore",
                "DAT_0800012c": "hasFunctionPointer",
                "PTR_FUN_08000130": "functionPointer"
            },
            "code": "bool isFirstTimeCallingFunction_08000110(bool *PTR_DAT_08000128, bool DAT_0800012c) {\n  if (*PTR_DAT_08000128 == false) {\n    if (DAT_0800012c) {\n      return true;\n    }\n    *PTR_DAT_08000128 = true;\n  }\n  return false;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "isFirstTimeCallingFunction_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "return_zero_0800709e"
            },
            "code": "int return_zero_0800709e() {\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "return_zero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "puVar1": "result_ptr",
                "uVar2": "var1",
                "uVar3": "var3",
                "uVar4": "var2"
            },
            "code": "void calculate_result_08002ec0(void)\n{\n    undefined *result_ptr;\n    undefined4 var1;\n    undefined4 var2;\n    undefined4 var3;\n    \n    result_ptr = PTR_DAT_08002ed0;\n    var2 = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n    var1 = FUNC_08000ad8(0x3f800000,var2);\n    var1 = FUNC_08000cec(var1,*(undefined4 *)(PTR_DAT_08002ecc + 4));\n    var3 = FUNC_08000cec(var2,*(undefined4 *)result_ptr);\n    var1 = FUNC_08000adc(var3,var1);\n    *(undefined4 *)result_ptr = var1;\n    return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "send_data_to_device_08004434",
                "param_1": "device_address",
                "param_2": "data",
                "param_3": "additional_data",
                "local_10": "device_register",
                "local_c": "masked_data",
                "uStack_8": "additional_data_stack"
            },
            "code": "void send_data_to_device_08004434(undefined4 device_address, uint16_t data, undefined4 additional_data)\n{\n  undefined4 device_register = *(undefined4 *)PTR_DEVICE_REGISTER;\n  uint16_t masked_data = data & 0xffff0000 | (uint16_t)*(ushort *)(PTR_DEVICE_REGISTER + 4);\n  undefined4 additional_data_stack = additional_data;\n  send_data_to_device_08004434(0x6d, &device_register, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_data_to_device_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_1": "num1",
                "param_2": "num2",
                "uVar1": "undefined_var_1",
                "uVar2": "undefined_var_2",
                "iVar3": "undefined_var_3",
                "uVar4": "undefined_var_4",
                "uVar5": "undefined_var_5",
                "uVar6": "undefined_var_6",
                "iVar7": "undefined_var_7",
                "uVar8": "undefined_var_8",
                "uVar9": "undefined_var_9",
                "iVar10": "undefined_var_10",
                "uVar11": "undefined_var_11",
                "uVar12": "undefined_var_12",
                "uVar13": "undefined_var_13",
                "DAT_08006d60": "data_var_1"
            },
            "code": "uint64_t calculate_float_08006c0c(uint32_t num1, uint32_t num2) {\n    uint32_t sign_mask = 0x80000000;\n    uint32_t exp_mask = 0x7F800000;\n    uint32_t mant_mask = 0x007FFFFF;\n    uint32_t sign1 = num1 & sign_mask;\n    uint32_t sign2 = num2 & sign_mask;\n    uint32_t exp1 = num1 & exp_mask;\n    uint32_t exp2 = num2 & exp_mask;\n    uint32_t mant1 = num1 & mant_mask;\n    uint32_t mant2 = num2 & mant_mask;\n    if (exp1 == 0 && mant1 == 0) {\n        return (uint64_t)num2 << 32 | num1;\n    }\n    if (exp2 == 0 && mant2 == 0) {\n        return (uint64_t)num1 << 32 | num2;\n    }\n    uint32_t exp_diff = (exp1 >> 23) - (exp2 >> 23);\n    uint32_t sign = sign1 ^ sign2;\n    if (exp_diff > 0) {\n        exp1 -= exp_diff << 23;\n    } else {\n        exp2 += exp_diff << 23;\n    }\n    uint64_t mantissa = (uint64_t)mant1 * mant2;\n    uint32_t carry = (mantissa >> 47) & 1;\n    mantissa >>= 24;\n    if (carry) {\n        mantissa += 1;\n    }\n    exp1 = exp1 - 127 + 0x3FE;\n    exp1 |= sign;\n    mantissa &= mant_mask;\n    return (uint64_t)exp1 << 52 | mantissa;\n}",
            "called": [
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_float_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "calculate_statistics_0800426c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "result3",
                "uVar6": "result4",
                "uVar7": "result5",
                "uVar8": "result6",
                "uVar9": "result7"
            },
            "code": "void calculate_statistics_0800426c(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4)\n{\n  uint32_t result1, result2, result3, result4;\n  result1 = get_random_number();\n  result2 = calculate_result(param1, param2);\n  result3 = get_random_number(result1, param3);\n  result3 = calculate_result(result3, param4);\n  save_result(result3, GLOBAL_CONSTANT);\n  result4 = get_time_elapsed();\n  result3 = calculate_result(result2, param3);\n  result3 = calculate_result(result3, param4);\n  save_result(result3, GLOBAL_CONSTANT);\n  result2 = get_time_elapsed();\n  result1 = calculate_result(result1, param3);\n  result1 = calculate_result(result1, param4);\n  save_result(result1, GLOBAL_CONSTANT);\n  result4 = get_time_elapsed();\n  result1 = calculate_result(param3, result2);\n  result1 = calculate_result(result1, param4);\n  save_result(result1, GLOBAL_CONSTANT);\n  result4 = get_time_elapsed();\n  uint32_t *ptr = PTR_DAT_08004264;\n  if (999 < result4) {\n    result4 = 1000;\n  }\n  if (999 < result3) {\n    result3 = 1000;\n  }\n  if (999 < result2) {\n    result2 = 1000;\n  }\n  if (999 < result1) {\n    result1 = 1000;\n  }\n  *(uint32_t *)(PTR_DAT_08004264 + 8) = result3 & ~((int)result3 >> 0x1f);\n  *(uint32_t *)(ptr + 0xc) = result2 & ~((int)result2 >> 0x1f);\n  *(uint32_t *)(ptr + 4) = result4 & ~((int)result4 >> 0x1f);\n  *(uint32_t *)ptr = result1 & ~((int)result1 >> 0x1f);\n  calculate_result_final();\n  save_result_1(*(uint32_t *)(ptr + 4));\n  save_result_2(*(uint32_t *)(ptr + 8));\n  save_result_3(*(uint32_t *)(ptr + 0xc));\n  uint16_t *ptr2 = PTR_DAT_08004268;\n  *(uint16_t *)PTR_DAT_08004268 = (uint16_t)(*(uint32_t *)ptr + 1000);\n  *(uint16_t *)(ptr2 + 2) = (uint16_t)(*(uint32_t *)(ptr + 4) + 1000);\n  *(uint16_t *)(ptr2 + 4) = (uint16_t)(*(uint32_t *)(ptr + 8) + 1000);\n  *(uint16_t *)(ptr2 + 6) = (uint16_t)(*(uint32_t *)(ptr + 0xc) + 1000);\n  return;\n}\n",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08001078",
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_statistics_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "set_bit_08002538",
                "param_1": "data",
                "param_2": "bit_position",
                "puVar1": "data_limit",
                "puVar2": "current_data"
            },
            "code": "uint set_bit_08002538(uint **data, uint bit_position)\n{\n  uint *current_data = *data;\n  uint *data_limit = DAT_08002560;\n  if (current_data == data_limit) {\n    data_limit = (uint *)(current_data[0x11] | 0x8000);\n  }\n  if (current_data == DAT_08002560) {\n    current_data[0x11] = (uint)data_limit;\n  }\n  *current_data |= 1 << bit_position;\n  return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "set_bit_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "param_1": "buffer_start",
                "param_2": "data_start",
                "param_3": "data_size",
                "param_4": "buffer_size",
                "puVar1": "data_ptr",
                "uVar2": "data_byte",
                "iVar3": "data_index",
                "puVar4": "buffer_ptr",
                "iVar5": "buffer_index"
            },
            "code": "void copy_data_to_buffer_080040e8(unsigned int buffer_start, int data_start, int data_size, int buffer_size) {\n  unsigned char *data_ptr;\n  unsigned char data_byte;\n  int data_index;\n  unsigned char *buffer_ptr;\n  int buffer_index;\n  data_ptr = data_start;\n  buffer_ptr = buffer_start + (data_size - 1);\n  buffer_index = buffer_size;\n  for (data_index = 0; data_index < data_size; data_index++) {\n    data_byte = read_data_byte(data_start, (data_start + data_index) & 0xffff, data_ptr, 0x4c, buffer_index);\n    buffer_ptr++;\n    *buffer_ptr = data_byte;\n  }\n  return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002d88",
                "FUN_08002bf0",
                "FUN_08003298",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "clear_string_08004ffc",
                "param_1": "str",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "local_78": "string_ptr",
                "local_70": "max_string_len",
                "local_6c": "max_short_len",
                "local_6a": "max_short_len",
                "local_68": "string_start",
                "local_64": "max_string_len",
                "uStack_c": "param_2",
                "uStack_8": "param_3",
                "uStack_4": "param_4"
            },
            "code": "void clear_string_08004ffc(char *str)\n{\n    char *string_ptr[2];\n    int max_string_len = 0x7fffffff;\n    int max_short_len = 0xffff;\n    char *string_start = str;\n    int param_2 = 0;\n    int param_3 = 0;\n    int param_4 = 0;\n    string_ptr[0] = str;\n    FUN_080050fc(*(int *)PTR_PTR_DAT_08005040, string_ptr, param_2);\n    *string_ptr[0] = 0;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "clear_string_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_pointer_value_0800115c",
                "PTR_DAT_08001164": "pointer_data"
            },
            "code": "get_pointer_value_0800115c() {\n    return *(undefined4 *)PTR_DAT_08001164;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_0800209c",
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08004c18",
                "FUN_08001938",
                "FUN_080016f4",
                "FUN_08001b58",
                "FUN_08001828",
                "thunk_FUN_0800115c"
            ],
            "imported": false,
            "current_name": "get_pointer_value_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "process_MPU9250_data_08002d88",
                "param_1": "data_pin",
                "param_2": "clock_pin",
                "param_3": "chip_select_pin",
                "param_4": "slave_address",
                "puVar3": "src_MPU9250_c",
                "puVar4": "dst_MPU9250_c",
                "iVar7": "status",
                "uVar8": "var_8h",
                "uVar9": "var_9h",
                "local_28": "data1",
                "uStack_26": "data2_high",
                "uStack_25": "data2_low",
                "local_24": "data3_high",
                "local_23": "data3_low",
                "local_22": "data3",
                "puVar5": "PTR_DAT_08002e98",
                "puVar6": "PTR_DAT_08002e9c"
            },
            "code": "void process_MPU9250_data_08002d88(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4) {\n    uint32_t status = call_func_0800407c(0x18, 2, src_MPU9250_c, 0xd7, param_1, param_2);\n    if (status >= 0) {\n        return;\n    }\n    uint16_t data1 = 0;\n    uint16_t data2 = 0;\n    uint8_t data3 = 0;\n    call_func_080040e8(0x18, 3, &data1, 7, src_MPU9250_c, 0xda);\n    if ((int32_t)(data3 << 0x1c) < 0) {\n        *(uint16_t *)(dst_MPU9250_c + 2) += 1;\n    }\n    else {\n        *(uint16_t *)src_MPU9250_c = data1;\n        *(uint16_t *)(src_MPU9250_c + 2) = data2;\n        uint32_t var_8h = call_func_08000c44(data1);\n        var_8h = call_func_08000cec(var_8h, *(uint32_t *)dst_MPU9250_c);\n        var_8h = call_func_08000cec(var_8h, *(uint32_t *)(dst_MPU9250_c + 4));\n        var_8h = call_func_08000ad8(var_8h, *(uint32_t *)(dst_MPU9250_c + 8));\n        var_8h = call_func_08000cec(var_8h, *(uint32_t *)src_MPU9250_c);\n        *(uint32_t *)dst_MPU9250_c = var_8h;\n        var_8h = call_func_08000c44(data2);\n        var_8h = call_func_08000cec(var_8h, *(uint32_t *)dst_MPU9250_c);\n        var_8h = call_func_08000cec(var_8h, *(uint32_t *)(dst_MPU9250_c + 4));\n        var_8h = call_func_08000ad8(var_8h, *(uint32_t *)(dst_MPU9250_c + 12));\n        var_8h = call_func_08000cec(var_8h, *(uint32_t *)(src_MPU9250_c + 4));\n        *(uint32_t *)(dst_MPU9250_c + 4) = var_8h;\n    }\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_MPU9250_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "calculate_hash_08000c44",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar4": "hash",
                "uVar3": "is_negative",
                "iVar5": "carry",
                "uVar5": "unused"
            },
            "code": "uint calculate_hash_08000c44(uint input){\n  int leading_zeroes = count_leading_zeroes(input);\n  uint is_negative = input & 0x80000000;\n  if ((int)is_negative < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  uint shifted_input = input << (leading_zeroes - 8);\n  uint hash = ((is_negative | 0x4b000000) - 0x800000) + shifted_input;\n  if (leading_zeroes > 7) {\n    uint carry = 0 << (leading_zeroes - 8);\n    hash += carry + (uint)(0x7fffffff < carry);\n    if (carry == 0x80000000) {\n      hash = hash & 0xfffffffe;\n    }\n    return hash;\n  }\n  uint shift_amount = leading_zeroes + 0x18;\n  uint shifted_input2 = input << (shift_amount & 0xff);\n  uint carry = (shifted_input >> 0x1f) - (int)shifted_input2;\n  hash += carry;\n  if ((shifted_input & 0x7fffffff) == 0) {\n    hash = hash & ~(shifted_input >> 0x1f);\n  }\n  return hash;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_0800411c",
                "FUN_08002bf0",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_valid_input_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08000a04(uint32_t input1, int input2, uint32_t input3, int input4) {\n    int is_input2_valid = ((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0);\n    int is_input4_valid = ((input4 << 1) >> 0x15 != -1) || ((input3 | input4 << 0xc) == 0);\n    if (is_input2_valid && is_input4_valid) {\n        return 1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_values_080025e8",
                "param_1": "values",
                "iVar1": "value_1",
                "iVar2": "value_2",
                "uVar3": "value_3",
                "iVar4": "value_4",
                "iVar5": "value_5",
                "iVar6": "current_value"
            },
            "code": "void update_values_080025e8(int *values)\n{\n    int current_value = *values;\n    uint value_4 = values[4];\n    *(uint *)(current_value + 0x10) = *(uint *)(current_value + 0x10) & 0xffffcfff | values[3];\n    *(uint *)(current_value + 0xc) = values[2] | value_4 | values[5] | *(uint *)(current_value + 0xc) & 0xffffe9f3;\n    *(uint *)(current_value + 0x14) = *(uint *)(current_value + 0x14) & 0xfffffcff | values[6];\n    if (current_value == PTR_DAT_08002720) {\n        int value_1 = FUN_08002250();\n        int value_5 = values[1];\n        int value_2 = FUN_08002250();\n        int value_3 = FUN_08002250();\n        value_2 = (uint)(value_1 * 0x19) / (uint)(value_5 << 2) + (int)(((ulonglong)(uint)(value_2 * 0x19) / (ulonglong)(uint)(values[1] << 2)) / 100) * -100;\n        uint value_6 = (uint)(value_3 * 0x19) / (uint)(values[1] << 2);\n        int value_7 = FUN_08002250();\n        *(uint *)(current_value + 8) = (((value_6 + (int)(((ulonglong)(uint)(value_7 * 0x19) / (ulonglong)(uint)(values[1] << 2)) / 100)) * -100 + 0x32) / 100 & 0xf | (value_2 * 0x10 + 0x32U) / 100 & 0xf0) + value_4 * 0x10;\n    }\n    else {\n        int value_1 = FUN_08002220();\n        int value_5 = values[1];\n        int value_2 = FUN_08002220();\n        int value_3 = FUN_08002220();\n        value_2 = (uint)(value_1 * 0x19) / (uint)(value_5 << 2) + (int)(((ulonglong)(uint)(value_2 * 0x19) / (ulonglong)(uint)(values[1] << 2)) / 100) * -100;\n        uint value_6 = (uint)(value_3 * 0x19) / (uint)(values[1] << 2);\n        int value_7 = FUN_08002220();\n        *(uint *)(current_value + 8) = (((value_6 + (int)(((ulonglong)(uint)(value_7 * 0x19) / (ulonglong)(uint)(values[1] << 2)) / 100)) * -100 + 0x32) / 100 & 0xf | (value_2 * 0x10 + 0x32U) / 100 & 0xf0) + value_4 * 0x10;\n    }\n}",
            "called": [
                "FUN_08002250",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "read_sensor_data_08002b48",
                "in_r3": "sensor_data_raw",
                "local_18": "lower_bits",
                "local_14": "upper_bits",
                "PTR_s____Src_MPU9250_c_08002be4": "buffer",
                "PTR_DAT_08002be8": "buffer",
                "PTR_DAT_08002bec": "sensor_data_scaled"
            },
            "code": "void read_sensor_data_08002b48(void)\n{\n    uint16_t lower_bits;\n    uint32_t upper_bits;\n    uint32_t sensor_data;\n    uint32_t PTR_DAT_08002bec;\n    uint8_t PTR_s____Src_MPU9250_c_08002be4[6];\n    memset(PTR_s____Src_MPU9250_c_08002be4, 0, sizeof(PTR_s____Src_MPU9250_c_08002be4));\n    i2c_read(0xd0, 0x3b, PTR_s____Src_MPU9250_c_08002be4, 6);\n    lower_bits = (PTR_s____Src_MPU9250_c_08002be4[1] << 8) | PTR_s____Src_MPU9250_c_08002be4[0];\n    upper_bits = (PTR_s____Src_MPU9250_c_08002be4[3] << 8) | PTR_s____Src_MPU9250_c_08002be4[2];\n    sensor_data = (upper_bits << 16) | lower_bits;\n    PTR_DAT_08002bec = (sensor_data / 32768.0) * 4.0;\n    PTR_DAT_08002bec = (PTR_DAT_08002bec - 500.0) / 10.0;\n    *(uint32_t*)DAT_08002bec = PTR_DAT_08002bec;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "read_sensor_data_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "copy_and_initialize_data_08004f68",
                "iVar1": "index",
                "puVar2": "data_pointer",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_08004fa8": "data_pointer_start",
                "PTR_DAT_08004fa0": "data_start",
                "PTR_DAT_08004fa4": "data_end",
                "DAT_08004f9c": "source_data",
                "FUN_08004f10": "initialize_first_data",
                "FUN_08004fb4": "initialize_second_data",
                "(*UNRECOVERED_JUMPTABLE)()": "call_function_through_jump_table"
            },
            "code": "void copy_and_initialize_data_08004f68(void)\n{\n  int index;\n  undefined4 *data_pointer;\n  code *jump_table;\n  for (index = 0; index < PTR_DAT_08004fa4 - PTR_DAT_08004fa0; index += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n  }\n  for (data_pointer = (undefined4 *)PTR_DAT_08004fa8; data_pointer < PTR_DAT_08004fac; data_pointer++) {\n    *data_pointer = 0;\n  }\n  initialize_first_data();\n  initialize_second_data();\n  jump_table = (code *)0x8004f9a;\n  call_function_through_jump_table(jump_table);\n  return;\n}",
            "called": [
                "FUN_08004fb4",
                "FUN_080041ae",
                "FUN_08004f10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "copy_and_initialize_data_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "set_param_08001170",
                "param_1": "param",
                "PTR_DAT_08001190": "ptr"
            },
            "code": "void set_param_08001170(uint param) {\n    uint* PTR_DAT_08001190 = (uint*)(DAT_08001190 + 0xc);\n    uint mask = 0xf8ff;\n    uint shifted_param = (param & 7) << 8;\n    uint new_value = (*PTR_DAT_08001190 & mask) | 0x5fa0000 | shifted_param;\n    *PTR_DAT_08001190 = new_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_param_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "read_sensor_data_08002bf0",
                "local_20": "low_byte",
                "local_1c": "high_byte",
                "PTR_s____Src_MPU9250_c_08002c9c": "sensor_registers",
                "PTR_DAT_08002ca0": "output_registers",
                "PTR_DAT_08002ca4": "some_pointer1",
                "PTR_DAT_08002cac": "some_pointer2",
                "uVar3": "sensor_data",
                "puVar1": "pointer1",
                "puVar2": "pointer2"
            },
            "code": "void read_sensor_data_08002bf0(void)\n{\n  uint16_t low_byte, high_byte;\n  uint32_t sensor_data;\n  uint32_t scaled_sensor_data;\n\n  // Read sensor data\n  read_PTR_s____Src_MPU9250_c_08002c9c(0xd0, 0x43, &low_byte, 1, PTR_s____Src_MPU9250_c_08002c9c, 0x7b);\n\n  // Combine low and high byte to get signed 16-bit integer\n  sensor_data = (int16_t)((high_byte << 8) | low_byte);\n\n  // Scale sensor data to engineering units\n  scaled_sensor_data = (uint32_t)((float)sensor_data * 0.000061035);\n\n  // Write sensor data to output registers\n  PTR_DAT_08002ca0[0] = scaled_sensor_data;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "read_sensor_data_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "initialize_MPU9250_08002ad0",
                "0xd0": "device_address",
                "0x75": "register_address",
                "PTR_s____Src_MPU9250_c_08002b44": "register_data",
                "0x3b": "register_data_length",
                "0x6b": "sample_rate_divider",
                "0x80": "sample_rate_divider_value",
                "0x6c": "gyroscope_config",
                "0x19": "accelerometer_config",
                "0x1d": "interrupt_enable",
                "0x1a": "accelerometer_config2",
                "0x1b": "interrupt_config",
                "0x1c": "interrupt_status"
            },
            "code": "void initialize_MPU9250_08002ad0(void)\n{\n    write_register_MPU9250(0xd0, 0x75, PTR_s____Src_MPU9250_c_08002b44, 0x3b);\n    write_register_MPU9250(0xd0, 0x6b, 0x80, 1);\n    write_register_MPU9250(0xd0, 0x6b, 1);\n    write_register_MPU9250(0xd0, 0x6c, 0, 1);\n    write_register_MPU9250(0xd0, 0x19, 0, 1);\n    write_register_MPU9250(0xd0, 0x1d, 3, 1);\n    write_register_MPU9250(0xd0, 0x1a, 3, 1);\n    write_register_MPU9250(0xd0, 0x1b, 0x10, 1);\n    write_register_MPU9250(0xd0, 0x1c, 8, 1);\n    return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "initialize_MPU9250_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_CY_or_ZR_08001050",
                "in_CY": "CY",
                "in_ZR": "ZR",
                "FUN_08000ffc": "check_CY"
            },
            "code": "bool check_CY_or_ZR_08001050(void)\n{\n  bool CY = check_CY();\n  bool ZR = check_ZR();\n  return !CY || ZR;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "check_CY_or_ZR_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "check_for_carry_or_zero_flag_080009c8",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "code": "bool check_for_carry_or_zero_flag_080009c8(void)\n{\n  bool carry_flag = (bool)in_CY;\n  bool zero_flag = (bool)in_ZR;\n  FUN_08000990();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "check_for_carry_or_zero_flag_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_average_08002ed4",
                "puVar1": "data_pointer",
                "uVar2": "numerator",
                "uVar3": "denominator",
                "uVar4": "divisor"
            },
            "code": "void calculate_average_08002ed4(void)\n{\n  undefined *data_pointer;\n  undefined4 numerator;\n  undefined4 denominator;\n  undefined4 divisor;\n\n  data_pointer = PTR_DAT_08002ee4;\n  numerator = *(undefined4 *)PTR_DAT_08002ee0;\n  divisor = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n  denominator = FUNC_08000ad8(0x3f800000, divisor);\n  denominator = FUNC_08000cec(denominator, numerator);\n  numerator = FUNC_08000cec(divisor,*(undefined4 *)data_pointer);\n  denominator = FUNC_08000adc(numerator, denominator);\n  *(undefined4 *)data_pointer = denominator;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_average_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "double_input_1",
                "uVar3": "double_input_2",
                "uVar4": "combined_inputs",
                "bVar1": "is_negative",
                "bVar5": "overflow"
            },
            "code": "uint calculate_result_08000f9c(uint input_1, uint input_2)\n{\n  bool overflow;\n  uint double_input_1;\n  uint double_input_2;\n  uint combined_inputs;\n  \n  double_input_1 = input_1 * 2;\n  double_input_2 = input_2 * 2;\n  \n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) &&\n     ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  \n  combined_inputs = double_input_1 | input_2 & 0x7fffffff;\n  overflow = combined_inputs == 0;\n  if (!overflow) {\n    combined_inputs = input_1 ^ input_2;\n    overflow = combined_inputs == 0;\n  }\n  \n  bool is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = double_input_1 + input_2 * -2;\n    overflow = input_1 == 0;\n  }\n  \n  if ((is_negative && double_input_2 <= double_input_1) && !overflow) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  \n  if (!is_negative || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  \n  if (!overflow) {\n    input_1 = input_1 | 1;\n  }\n  \n  return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = FUN_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = FUN_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = FUN_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000404",
                "FUN_080009c8",
                "FUN_080071c0",
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "shifted_input",
                "carry": "carry",
                "result": "result",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_hash_08000c3c(uint input)\n{\n  if (input == 0) {\n    return 0;\n  }\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zeroes = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < 0);\n    uint result = multiplier + shifted_input + shifted_zeroes + carry;\n    if (shifted_input == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << ((leading_zeroes + 0x18U) & 0xff);\n  uint shifted_zeroes = ((int)shifted_input >> 0x1f) - (input >> (0x20 - (leading_zeroes + 0x18U) & 0xff));\n  uint result = multiplier + shifted_zeroes;\n  if ((shifted_input & 0x7fffffff) == 0) {\n    result = result & ~(shifted_input >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "copy_and_process_data_080043bc",
                "local_24": "copied_data",
                "local_1c": "copied_data_2byte",
                "uVar1": "value_1",
                "uVar2": "value_2",
                "puVar3": "source_ptr",
                "puVar4": "destination_ptr"
            },
            "code": "void copy_and_process_data_080043bc(void)\n{\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 *source_ptr;\n  undefined4 *destination_ptr;\n  undefined4 copied_data [2];\n  undefined2 copied_data_2byte [6];\n  \n  source_ptr = copied_data;\n  destination_ptr = (undefined4 *)PTR_DAT_080043ec;\n  do {\n    value_1 = *destination_ptr;\n    value_2 = destination_ptr[1];\n    destination_ptr = destination_ptr + 2;\n    *source_ptr = value_1;\n    source_ptr[1] = value_2;\n    source_ptr = source_ptr + 2;\n  } while (destination_ptr != (undefined4 *)(PTR_DAT_080043ec + 0x10));\n  *(undefined2 *)source_ptr = *(undefined2 *)destination_ptr;\n  process_data(0x66,copied_data,0x12);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_and_process_data_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "check_param_08001214",
                "param_1": "param",
                "puVar1": "param_ptr",
                "iVar2": "var2"
            },
            "code": "int check_param_08001214(unsigned int param) {\n  unsigned int *param_ptr = DAT_08001238;\n  int var2 = DAT_0800123c;\n  if (param - 1 < 0x1000000) {\n    param_ptr[1] = param - 1;\n    *(unsigned char *)(var2 + 0x23) = 0xf0;\n    param_ptr[2] = 0;\n    *param_ptr = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "check_param_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_param_08003fc4",
                "param_1": "ptr",
                "PTR_DAT_08003fcc": "ptr_dat",
                "offset": "offset",
                "*ptr_offset": "value_at_offset"
            },
            "code": "void set_param_08003fc4(void* ptr) {\n    int* PTR_DAT_08003fcc = (int*) PTR_DAT_08003fcc;\n    int offset = 0x40;\n    int* ptr_offset = PTR_DAT_08003fcc + offset;\n    *ptr_offset = (int)ptr;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "reverseBits_08000404",
                "param_1": "num",
                "uVar1": "low_bits",
                "uVar2": "high_bits",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeros",
                "uVar5": "temp",
                "uVar6": "sign_bit",
                "in_r12": "mask",
                "bVar7": "is_negative_shift",
                "bVar8": "is_zero_shift",
                "bVar9": "is_overflow_shift"
            },
            "code": "ulonglong reverseBits_08000404(uint num)\n{\n    if (num == 0) {\n        return 0;\n    }\n    uint leading_zeros = count_leading_zeroes(num);\n    uint shift_amount = 0x32 - (leading_zeros + 0xb);\n    if (shift_amount < 0x20) {\n        return (ulonglong)num << shift_amount;\n    }\n    uint mask = 0xffffffff << (0x40 - shift_amount);\n    uint high_bits = num << (shift_amount - 0x20);\n    uint low_bits = 0;\n    if (shift_amount != 0x20) {\n        low_bits = num >> (0x40 - shift_amount);\n    }\n    return ((ulonglong)high_bits << 0x20) | low_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "reverseBits_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "validate_input_0800209c",
                "param_1": "input",
                "param_2": "input_length",
                "cVar1": "bit1",
                "cVar2": "bit2",
                "puVar3": "ptr1",
                "iVar4": "var1",
                "iVar5": "var2",
                "uVar6": "var4",
                "uVar7": "var5"
            },
            "code": "int validate_input_0800209c(uint *input, uint input_length) {\n  char bit1, bit2;\n  uint *ptr1, *ptr2;\n  int var1, var2, var3;\n  uint var4, var5;\n  \n  ptr1 = DAT_08002204;\n  if ((input_length <= (*DAT_08002204 & 7)) ||\n     (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | input_length, input_length == (*ptr1 & 7))) {\n    var4 = *input;\n    if ((int)(var4 << 0x1e) < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | input[2];\n    }\n    ptr1 = DAT_08002208;\n    var1 = var4 << 0x1f;\n    if (-1 < var1) {\nLAB_080020ba:\n      ptr1 = DAT_08002204;\n      if ((input_length < (*DAT_08002204 & 7)) &&\n         (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | input_length, input_length != (*ptr1 & 7))) {\n        return 1;\n      }\n      ptr1 = DAT_08002208;\n      var4 = *input;\n      if ((var4 & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | input[3];\n      }\n      if ((int)(var4 << 0x1c) < 0) {\n        ptr1[1] = ptr1[1] & 0xffffc7ff | input[4] << 3;\n      }\n      var4 = FUN_08002008();\n      var5 = count_leading_zeroes(0xf000000);\n      *(uint *)PTR_DAT_08002210 = var4 >> PTR_DAT_0800220c[(ptr1[1] & 0xf0) >> (var5 & 0xff)];\n      FUN_08001104(0);\n      return 0;\n    }\n    var4 = input[1];\n    if (var4 == 1) {\n      bit2 = '\\x01';\n      bit1 = '\\0';\n    }\n    else {\n      if (var4 == 2) {\n        var5 = *DAT_08002208;\n        goto LAB_08002176;\n      }\n      bit2 = '\\0';\n      bit1 = '\\x01';\n    }\n    var5 = count_leading_zeroes((uint)(byte)(bit1 << 6) << 0x18 | (uint)(byte)(bit2 << 6) << 8);\n    var5 = (*DAT_08002208 >> (var5 & 0x1f)) << 0x1f;\n    if ((int)var5 < 0) {\nLAB_08002176:\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | var4;\n      var1 = FUN_0800115c(var1,var5);\n      if (input[1] == 1) {\n        do {\n          if ((ptr1[1] & 0xc) == 4) goto LAB_080020ba;\n          var2 = FUN_0800115c();\n        } while ((uint)(var2 - var1) < 0x1389);\n      }\n      else if (input[1] == 2) {\n        do {\n          if ((ptr1[1] & 0xc) == 8) goto LAB_080020ba;\n          var2 = FUN_0800115c();\n        } while ((uint)(var2 - var1) < 0x1389);\n      }\n      else {\n        do {\n          if ((ptr1[1] & 0xc) == 0) goto LAB_080020ba;\n          var2 = FUN_0800115c();\n        } while ((uint)(var2 - var1) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_08002008",
                "FUN_08001104",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "validate_input_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "send_i2c_data_and_check_response_0800403c",
                "param_1": "data_address",
                "param_2": "data_value",
                "param_3": "is_start_bit",
                "param_4": "should_do_nothing",
                "iVar1": "response_code",
                "local_14": "local_storage",
                "FUN_08001828": "send_i2c_data",
                "PTR_DAT_08004074": "i2c_device_address",
                "FUN_08004490": "log_error",
                "PTR_s____Src_i2c_c_08004078": "error_log_message",
                "thunk_do_nothing_08001168": "do_nothing"
            },
            "code": "void send_i2c_data_and_check_response_0800403c(undefined4 data_address, undefined4 data_value, undefined is_start_bit, int should_do_nothing) {\n  int response_code;\n  undefined local_storage[8];\n  local_storage[0] = is_start_bit;\n  response_code = send_i2c_data(PTR_DAT_08004074, data_address, data_value, 1, local_storage, 1, 200);\n  if (response_code != 0) {\n    log_error(PTR_s____Src_i2c_c_08004078, 0x1b);\n  }\n  if (should_do_nothing != 0) {\n    do_nothing(0x32);\n  }\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "send_i2c_data_and_check_response_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08004a30",
                "FUN_08002bf0",
                "FUN_08002f28",
                "FUN_08004a84",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_type",
                "uVar2": "abs_input_2",
                "uVar3": "abs_input_4",
                "uVar4": "abs_input_1",
                "uVar5": "temp_result_1",
                "uVar6": "temp_result_2",
                "uVar7": "temp_result_3",
                "uVar8": "temp_result_4",
                "iVar3": "difference",
                "max_value": "DAT_08006220",
                "max_value_64": "max_value_64",
                "result": "result"
            },
            "code": "ulonglong calculate_result_08006070(uint param_1, uint param_2, uint param_3, uint param_4)\n{\n  uint abs_param_1 = abs(param_1);\n  uint abs_param_2 = abs(param_2);\n  uint abs_param_3 = abs(param_3);\n  uint abs_param_4 = abs(param_4) & 0x7fffffff;\n  uint max_value = DAT_08006220;\n  ulonglong result = CONCAT44(DAT_08006204,DAT_08006200);\n  ulonglong max_value_64 = CONCAT44(DAT_08006214,DAT_08006210);\n  if ((max_value < (abs_param_4 | (-param_3 | param_3) >> 0x1f)) ||\n     (max_value < (abs_param_2 | (-param_1 | param_1) >> 0x1f))) {\n    result = FUNC_0800016c(param_1, param_2, param_3, param_4, param_4);\n    return result;\n  }\n  if ((param_4 + 0xc0100000 | param_3) == 0) {\n    result = FUNC_08006d68();\n    return result;\n  }\n  uint uVar1 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n  if ((abs_param_1 | abs_param_2) == 0) {\n    if (uVar1 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (uVar1 != 3) {\n      return CONCAT44(param_2,param_1);\n    }\n  }\n  else {\n    if ((abs_param_3 | abs_param_4) != 0) {\n      if (abs_param_4 == max_value) {\n        if (abs_param_2 == abs_param_4) {\n          if (uVar1 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (uVar1 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (uVar1 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (uVar1 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (uVar1 == 3) {\n          return result;\n        }\n        if (uVar1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (abs_param_2 != max_value) {\n        int iVar3 = (int)(abs_param_2 - abs_param_4) >> 0x14;\n        if (iVar3 < 0x3d) {\n          if (((int)param_4 < 0) && (iVar3 + 0x3c < 0 != SCARRY4(iVar3,0x3c))) {\n            max_value_64 = 0;\n          }\n          else {\n            FUNC_08000724(param_1, param_2);\n            do_nothing_0800708c();\n            max_value_64 = FUNC_08006d68();\n          }\n        }\n        iVar3 = (int)(max_value_64 >> 0x20);\n        if (uVar1 != 1) {\n          if (uVar1 == 2) {\n            ulonglong uVar5 = FUNC_08000168((int)max_value_64, iVar3, DAT_08006208, DAT_0800620c);\n            ulonglong uVar6 = CONCAT44(DAT_080061fc, DAT_080061f8);\n            result = FUNC_08000168((int)uVar6, (int)(uVar6 >> 0x20), (int)uVar5, (int)(uVar5 >> 0x20));\n          }\n          else {\n            if (uVar1 == 0) {\n              return max_value_64;\n            }\n            ulonglong uVar7 = FUNC_08000168((int)max_value_64, iVar3, DAT_08006208, DAT_0800620c);\n            ulonglong uVar8 = CONCAT44(DAT_080061fc, DAT_080061f8);\n            result = FUNC_08000168((int)uVar8, (int)(uVar8 >> 0x20), (int)uVar7, (int)(uVar7 >> 0x20));\n          }\n          return result;\n        }\n        result = max_value_64 & 0xffffffff | (ulonglong)(iVar3 + 0x80000000) << 0x20;\n      }\n    }\n    if ((int)param_2 < 0) {\n      result = CONCAT44(DAT_080061dc, DAT_080061d8);\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_08006d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "bitwise_or",
                "uVar2": "masked_second_param",
                "iVar3": "difference",
                "uVar4": "masked_fourth_param",
                "uVar5": "concatenated_1",
                "uVar6": "concatenated_2",
                "uVar7": "concatenated_3",
                "uVar8": "concatenated_4",
                "mask": "0x7fffffff"
            },
            "code": "ulonglong calculate_result_thunk_08006070(uint first_param, uint second_param, uint third_param, uint fourth_param)\n{\n  uint mask = 0x7fffffff;\n  uint uVar1;\n  uint uVar2;\n  int difference;\n  uint uVar4;\n  ulonglong concatenated_1 = CONCAT44(PTR_DAT_08006214, PTR_DAT_08006210);\n  ulonglong concatenated_2 = CONCAT44(PTR_DAT_08006204, PTR_DAT_08006200);\n  if ((PTR_DAT_08006220 < (fourth_param | (-third_param | third_param) >> 0x1f)) ||\n     (uVar2 = second_param & mask, PTR_DAT_08006220 < (uVar2 | (-first_param | first_param) >> 0x1f))) {\n    concatenated_1 = FUNC_0800016c(first_param, second_param, third_param, fourth_param, fourth_param);\n    return concatenated_1;\n  }\n  if ((fourth_param + 0xc0100000 | third_param) == 0) {\n    concatenated_1 = FUNC_08006d68();\n    return concatenated_1;\n  }\n  uVar1 = (int)fourth_param >> 0x1e & 2U | second_param >> 0x1f;\n  if ((first_param | uVar2) == 0) {\n    if (uVar1 == 2) {\n      return CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n    }\n    if (uVar1 != 3) {\n      return CONCAT44(second_param, first_param);\n    }\n  }\n  else {\n    if ((third_param | (uVar4 = fourth_param & mask)) != 0) {\n      if (uVar4 == PTR_DAT_08006220) {\n        if (uVar2 == uVar4) {\n          if (uVar1 == 2) {\n            return CONCAT44(PTR_DAT_080061ec, PTR_DAT_080061e8);\n          }\n          if (uVar1 == 3) {\n            return CONCAT44(PTR_DAT_080061f4, PTR_DAT_080061f0);\n          }\n          if (uVar1 != 1) {\n            return CONCAT44(PTR_DAT_0800621c, PTR_DAT_08006218);\n          }\n          return CONCAT44(PTR_DAT_080061e4, PTR_DAT_080061e0);\n        }\n        if (uVar1 == 2) {\n          return CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n        }\n        if (uVar1 == 3) {\n          return concatenated_1;\n        }\n        if (uVar1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (uVar2 != PTR_DAT_08006220) {\n        difference = (int)(uVar2 - uVar4) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)fourth_param < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n            concatenated_2 = 0;\n          }\n          else {\n            FUNC_08000724(first_param, second_param);\n            do_nothing_0800708c();\n            concatenated_2 = FUNC_08006d68();\n          }\n        }\n        difference = (int)(concatenated_2 >> 0x20);\n        if (uVar1 != 1) {\n          if (uVar1 == 2) {\n            ulonglong concatenated_3 = FUNC_08000168((int)concatenated_2, difference, PTR_DAT_08006208, PTR_DAT_0800620c);\n            ulonglong concatenated_4 = CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n            concatenated_1 = FUNC_08000168((int)concatenated_3,(int)((ulonglong)concatenated_3 >> 0x20),(int)concatenated_4,(int)((ulonglong)concatenated_4 >> 0x20));\n          }\n          else {\n            if (uVar1 == 0) {\n              return concatenated_2;\n            }\n            ulonglong concatenated_3 = FUNC_08000168((int)concatenated_2, difference, PTR_DAT_08006208, PTR_DAT_0800620c);\n            ulonglong concatenated_4 = CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n            concatenated_1 = FUNC_08000168((int)concatenated_3,(int)((ulonglong)concatenated_3 >> 0x20),(int)concatenated_4,(int)((ulonglong)concatenated_4 >> 0x20));\n          }\n          return concatenated_1;\n        }\n        return concatenated_2 & 0xffffffff | (ulonglong)(difference + 0x80000000) << 0x20;\n      }\n    }\n    concatenated_1 = concatenated_2;\n    if ((int)second_param < 0) {\n      concatenated_1 = CONCAT44(PTR_DAT_080061dc, PTR_DAT_080061d8);\n    }\n  }\n  return concatenated_1;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "print_data_at_address_08004cac",
                "param_1": "address",
                "puVar1": "pointer_to_data",
                "PTR_DAT_08004cc4": "data_address_1",
                "FUN_08004ffc": "print_data",
                "PTR_DAT_08004cc8": "data_address_2",
                "FUN_08004c8c": "free_data"
            },
            "code": "void print_data_at_address_08004cac(void* address){\n  void* pointer_to_data = PTR_DAT_08004cc4;\n  print_data(pointer_to_data, PTR_DAT_08004cc8, address);\n  free_data(pointer_to_data);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "print_data_at_address_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "decode_data_08004c18",
                "param_1": "data",
                "puVar1": "data_ptr",
                "iVar2": "loop_count",
                "iVar3": "inner_loop_count",
                "uVar4": "flag",
                "puVar5": "data_array_ptr"
            },
            "code": "int decode_data_08004c18(unsigned char data)\n{\n  unsigned char *data_ptr;\n  int result;\n  int loop_count;\n  int inner_loop_count;\n  unsigned char flag;\n  unsigned short *data_array_ptr;\n  \n  data_array_ptr = (unsigned short *)DATA_ARRAY_START;\n  *DATA_ARRAY_START = data;\n  data_ptr = DATA_ARRAY_START + 1;\n  if ((DATA_ARRAY_START[0x39] == 1) || (DATA_ARRAY_START[0x39] == '\"')) {\n    if (data_array_ptr == (unsigned short *)0x0) {\n      return 1;\n    }\n    if (DATA_ARRAY_START[0x38] != 1) {\n      DATA_ARRAY_START[0x38] = 1;\n      *(int *)(DATA_ARRAY_START + 0x3c) = 0;\n      *(unsigned short *)(DATA_ARRAY_START + 0x24) = 1;\n      if (DATA_ARRAY_START[0x39] == '\"') {\n        flag = 0x32;\n      }\n      else {\n        flag = 0x12;\n      }\n      *(unsigned short *)(DATA_ARRAY_START + 0x26) = 1;\n      DATA_ARRAY_START[0x39] = flag;\nLAB_080027c4:\n      do {\n        if (*(short *)(DATA_ARRAY_START + 0x26) == 0) {\n          loop_count = get_loop_count();\n          do {\n            if (**(int **)DATA_ARRAY_START << 0x19 < 0) {\n              if (DATA_ARRAY_START[0x39] == '2') {\n                flag = 0x22;\n              }\n              else {\n                flag = 1;\n              }\n              DATA_ARRAY_START[0x39] = flag;\n              DATA_ARRAY_START[0x38] = 0;\n              return 0;\n            }\n            inner_loop_count = get_loop_count();\n          } while ((unsigned int)(inner_loop_count - loop_count) < 6);\nLAB_0800281c:\n          result = *(int *)DATA_ARRAY_START;\n          *(unsigned int *)(result + 0xc) = *(unsigned int *)(result + 0xc) & 0xffffff7f;\n          *(unsigned int *)(result + 0xc) = *(unsigned int *)(result + 0xc) & 0xffffffdf;\n          *(unsigned int *)(result + 0xc) = *(unsigned int *)(result + 0xc) & 0xfffffeff;\n          *(unsigned int *)(result + 0x14) = *(unsigned int *)(result + 0x14) & 0xfffffffe;\n          DATA_ARRAY_START[0x39] = 1;\n          DATA_ARRAY_START[0x38] = 0;\n          return 3;\n        }\n        *(short *)(DATA_ARRAY_START + 0x26) = *(short *)(DATA_ARRAY_START + 0x26) + -1;\n        if (*(int *)(DATA_ARRAY_START + 8) == 0x1000) {\n          loop_count = get_loop_count();\n          while (-1 < **(int **)DATA_ARRAY_START << 0x18) {\n            inner_loop_count = get_loop_count();\n            if (5 < (unsigned int)(inner_loop_count - loop_count)) goto LAB_0800281c;\n          }\n          (*(int **)DATA_ARRAY_START)[1] = *data_array_ptr & 0x1ff;\n          if (*(int *)(DATA_ARRAY_START + 0x10) == 0) {\n            data_array_ptr++;\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          loop_count = get_loop_count();\n          while (-1 < **(int **)DATA_ARRAY_START << 0x18) {\n            inner_loop_count = get_loop_count();\n            if (5 < (unsigned int)(inner_loop_count - loop_count)) goto LAB_0800281c;\n          }\n          (*(int **)DATA_ARRAY_START)[1] = (unsigned int)*(unsigned char *)data_array_ptr;\n        }\n        data_array_ptr = (unsigned short *)((int)data_array_ptr + 1);\n      } while( true );\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "decode_data_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "calculate_result_0800483c",
                "param_1": "params",
                "uVar1": "result",
                "iVar3": "flag",
                "iVar4": "flag2",
                "iVar5": "arg3",
                "iVar6": "arg4",
                "DAT_08004964": "flag2",
                "DAT_08004968": "modify",
                "DAT_0800496c": "flag3",
                "DAT_08004970": "flag4",
                "FUN_08001028": "check_flag",
                "FUN_08001064": "check_flag",
                "FUN_08000adc": "calculate",
                "FUN_08000ad8": "calculate",
                "FUN_08000cec": "calculate",
                "FUN_08000c44": "modify_result"
            },
            "code": "void calculate_result_0800483c(int *params)\n{\n  int base = params[0xc];\n  int arg1 = params[7];\n  int arg2 = params[9];\n  int result = calculate(arg1, arg2);\n  int res_with_base = calculate(result, base);\n  params[10] = res_with_base;\n\n  if (*params == 3) {\n    int flag = check_flag(params[10], 0);\n    if (flag == 0) {\n      res_with_base = check_flag(params[10], \"flag1\");\n    }\n    else {\n      res_with_base = check_flag(params[10], \"DAT_08004964\");\n    }\n    if (res_with_base != 0) {\n      int new_res = DAT_08004968_result(params[10], \"DAT_08004968\");\n      params[10] = calculate(base, new_res);\n    }\n  }\n\n  int arg3 = params[1];\n  int arg4 = params[3];\n  int res1 = calculate(arg3, params[10]);\n  params[0xe] = res1;\n  int res2 = calculate(params[10], params[0xf]);\n  params[0xf] = res2;\n\n  int DAT_08004964 = check_flag(params[0xf], \"DAT_0800496c\");\n  if (DAT_08004964 == 0) {\n    DAT_08004964 = check_flag(params[0xf], \"DAT_08004970\");\n    if (DAT_08004964 == 0) {\n      params[0xf] = params[0xf];\n    }\n    else {\n      params[0xf] = DAT_08004964;\n    }\n  }\n  else {\n    params[0xf] = \"DAT_0800496c\";\n  }\n\n  int res3 = calculate(params[0xc], params[0xd]);\n  params[0x10] = res3;\n  int res4 = calculate(arg4, params[0x10]);\n  int final_res = calculate(res1, res4);\n  int arg5 = params[0x13];\n  int DAT_0800496c = check_flag(final_res, \"DAT_0800496c\");\n  if (DAT_0800496c == 0) {\n    DAT_0800496c = check_flag(final_res, \"DAT_08004970\");\n    if (DAT_0800496c == 0) {\n      final_res = final_res;\n    }\n    else {\n      final_res = DAT_0800496c;\n    }\n  }\n  else {\n    final_res = \"DAT_0800496c\";\n  }\n\n  int arg6 = DAT_08004968_result(arg5);\n  params[0x12] = calculate(final_res, arg6);\n  params[0xd] = base;\n  params[0xb] = params[10];\n  params[0x15] = params[0x14];\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_08001064",
                "FUN_08000e54",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "iterate_and_call_function_on_each_element_08004c8c",
                "param_1": "array",
                "uVar1": "distance_to_end",
                "puVar2": "current_element",
                "FUN_08000150": "calculate_distance_to_end",
                "*puVar2": "*current_element",
                "FUN_08004c18": "call_function_on_element"
            },
            "code": "void iterate_and_call_function_on_each_element_08004c8c(char *array) {\n  char *current_element = array;\n  while(true) {\n    uint distance_to_start = current_element - array;\n    uint distance_to_end = calculate_distance_to_end(current_element);\n    if (distance_to_end <= distance_to_start) break;\n    call_function_on_element(*current_element);\n    current_element++;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004cac",
                "FUN_08004300",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "iterate_and_call_function_on_each_element_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "check_data_08001460",
                "param_1": "data_ptr",
                "param_2": "data_length",
                "param_3": "timeout",
                "iVar1": "start_time",
                "puVar4": "data",
                "uVar3": "mask"
            },
            "code": "uint32_t check_data_08001460(uint32_t **data_ptr, uint32_t data_length, uint32_t timeout) {\n    int start_time = get_current_time();\n    do {\n        uint32_t *data = *data_ptr;\n        uint32_t data_offset = (data_length << 8) >> 0x18;\n        uint32_t mask = (data_offset == 1) ? data[5] : data[6];\n        if ((data_length & 0xffff & ~mask) == 0) {\n            return 0;\n        }\n        if ((int)(data[5] << 0x15) < 0) {\n            *data_ptr[0] |= 0x200;\n            data[5] &= 0xfffffbff;\n            data_ptr[14] = (uint32_t *)0x4;\n            data_ptr[0][0x35 / 4] = 0x20;\n            data_ptr[13] = 0;\n            return 1;\n        }\n    } while ((timeout == 0xffffffff) || (timeout != 0 && (get_current_time() - start_time) <= timeout));\n    (*data_ptr)[0x35 / 4] = 0x20;\n    data_ptr[13] = 0;\n    return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_data_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "isEndOfString_08001064",
                "in_CY": "currentChar",
                "FUN_08000ffc": "executePreviousFunction"
            },
            "code": "bool isEndOfString_08001064(void)\n{\n  char currentChar;\n  executePreviousFunction();\n  return currentChar == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "isEndOfString_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_parameter_in_struct_08003fd0",
                "param_1": "parameter_value",
                "PTR_DAT_08003fd8": "ptr_to_struct",
                "offset": "offset"
            },
            "code": "void set_parameter_in_struct_08003fd0(int parameter_value)\n{\n    int* PTR_DAT_08003fd8 = *(int*)PTR_DAT_08003fd8;\n    int offset = 0x3c;\n    *(PTR_DAT_08003fd8 + offset) = parameter_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_parameter_in_struct_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp6",
                "unaff_r4": "temp4",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "bVar4": "condition4",
                "in_r12": "temp5"
            },
            "code": "ulonglong calculate_result_08000892(uint input1, uint input2, uint input3, uint input4)\n{\n  uint temp1 = input4 >> 0x14;\n  uint temp2 = input2;\n  uint temp3 = input1;\n  uint temp4 = input4;\n  bool condition1 = input3 != input1 || temp1 != input1;\n  if (condition1) {\n    if (input3 == input1) {\n      bool condition2 = (input1 | input2 << 0xc) == 0 && temp1 != input1;\n      if (condition2) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp1 == input1) {\n      temp3 = input3;\n      temp4 = input4;\n      bool condition3 = (input3 | input4 << 0xc) == 0;\n      if (condition3) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      bool condition4 = (input1 | input2 << 1) == 0 || (input3 | input4 << 1) == 0;\n      if (!condition4) {\n        if (input3 == 0) {\n          uint temp5 = input2 & 0x80000000;\n          do {\n            uint temp6 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(temp6 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp5;\n          if (temp1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          uint temp7 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp7 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if ((input3 | input4 << 1) != 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n  }\n  return CONCAT44(temp2,temp3) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "copy_data_from_memory_to_local_variables_08004458",
                "puVar1": "local_vars_ptr",
                "puVar2": "var1",
                "puVar3": "local_vars_ptr_copy",
                "puVar4": "memory_ptr_copy",
                "puVar5": "memory_ptr",
                "local_30": "local_variables",
                "local_24": "local_array"
            },
            "code": "void copy_data_from_memory_to_local_variables_08004458(void)\n{\n    undefined4 *local_vars_ptr = local_variables;\n    undefined4 *memory_ptr = (undefined4 *)MEMORY_PTR;\n    do {\n        undefined4 *memory_ptr_copy = memory_ptr;\n        undefined4 *local_vars_ptr_copy = local_vars_ptr;\n        undefined4 var1 = memory_ptr_copy[0];\n        memory_ptr = memory_ptr_copy + 2;\n        *local_vars_ptr_copy = var1;\n        local_vars_ptr_copy[1] = memory_ptr_copy[1];\n        local_vars_ptr = local_vars_ptr_copy + 2;\n    } while (memory_ptr != (undefined4 *)(MEMORY_PTR + 0x18));\n    local_vars_ptr[2] = *memory_ptr;\n    *(undefined2 *)(local_vars_ptr + 3) = *(undefined2 *)(memory_ptr_copy + 3);\n    FUN_08004300(0x70,local_variables,0x1e);\n    return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_data_from_memory_to_local_variables_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08004490",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "concatenate_08000134",
                "param_1": "x",
                "param_2": "y",
                "DAT_08000144": "global_variable",
                "PTR_FUN_0800014c": "ptr_function",
                "PTR_DAT_08000148": "ptr_data",
                "CONCAT44": "concatenate"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t concatenate_08000134(uint64_t x, uint64_t y) {\n  if (DAT_08000144 != 0) {\n    x = PTR_FUN_0800014c;\n    y = PTR_DAT_08000148;\n  }\n  return ((uint64_t)y << 32) | x;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "concatenate_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_param_to_64_bit_08003eb0",
                "param_1": "param",
                "PTR_DAT_08003ec4": "ptr_to_global_var"
            },
            "code": "longlong convert_param_to_64_bit_08003eb0(uint32_t param)\n{\n    if (*PTR_DAT_08003ec4 == 0)\n    {\n        software_interrupt(0x3f);\n        return CONCAT44(param, 1);\n    }\n    return (ulonglong)param << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "convert_param_to_64_bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = FUN_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = FUN_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "validate_and_execute_function_08002ee8",
                "iVar1": "return_value",
                "uVar2": "data_1",
                "PTR_DAT_08002f18": "data_pointer_1",
                "DAT_08002f1c": "parameter_1",
                "DAT_08002f20": "parameter_2",
                "FUNC_08000adc": "execute_function",
                "FUNC_08000ad8": "execute_alternate_function",
                "DAT_08002f24": "alternate_parameter"
            },
            "code": "void validate_and_execute_function_08002ee8(void)\n{\n    int return_value;\n    undefined4 DAT_08002f1c;\n    undefined4 DAT_08002f20;\n    undefined4 data_1 = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n    DAT_08002f1c = DAT_08002f1c;\n    DAT_08002f20 = DAT_08002f20;\n    return_value = FUN_08001050(data_1, DAT_08002f1c);\n    if (return_value != 0)\n    {\n        return_value = FUN_08001028(data_1, DAT_08002f20);\n        if (return_value != 0)\n        {\n            FUNC_08000adc(data_1, DAT_08002f20);\n            return;\n        }\n    }\n    FUNC_08000ad8(data_1, DAT_08002f24);\n    return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08000adc",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "validate_and_execute_function_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "calculate_time_difference_in_seconds_08001104",
                "param_1": "current_time",
                "uVar1": "time_difference_in_milliseconds",
                "FUN_08002214": "get_current_time",
                "FUN_08001214": "print_time_difference_in_seconds",
                "FUN_08001194": "print_message"
            },
            "code": "uint32_t calculate_time_difference_in_seconds_08001104(uint32_t current_time)\n{\n    uint32_t time_difference_in_milliseconds = get_current_time() - current_time;\n    uint32_t time_difference_in_seconds = time_difference_in_milliseconds / 1000;\n    print_message(0xffffffff, current_time, 0);\n    return 0;\n}",
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "calculate_time_difference_in_seconds_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "get_value_from_pointer_thunk_0800115c",
                "PTR_DAT_08001164": "pointer_to_value"
            },
            "code": "int get_value_from_pointer_thunk_0800115c() {\n    int* PTR_DAT_08001164 = (int*)PTR_DAT_08001164;\n    return *PTR_DAT_08001164;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = FUN_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "add_param_to_global_080072b8",
                "param_1": "param",
                "puVar1": "global_ptr"
            },
            "code": "void add_param_to_global_080072b8(int param) {\n  undefined *global_ptr;\n  global_ptr = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)global_ptr = param + *(int *)global_ptr;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "add_param_to_global_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "FUN_0800581c": "checkAndUpdateValue_0800581c",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "puVar1": "dataPtr",
                "iVar2": "result"
            },
            "code": "void checkAndUpdateValue_0800581c(int *outputValue, undefined4 inputValue)\n{\n  undefined *dataPtr;\n  int result;\n  \n  dataPtr = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  result = calculateValue(inputValue);\n  if ((result == -1) && (*(int *)dataPtr != 0)) {\n    *outputValue = *(int *)dataPtr;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "checkAndUpdateValue_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "checkForDataMatch_08004d48",
                "param_1": "dataPtr",
                "local_18": "localVar1",
                "local_14": "localVar2",
                "DAT_08004d80": "DATA_MATCH",
                "DAT_08004d84": "DATA_PTR_1",
                "DAT_08004d88": "DATA_PTR_2"
            },
            "code": "void checkForDataMatch_08004d48(int *dataPtr, undefined4 param_2)\n{\n  undefined4 localVar1;\n  undefined4 localVar2;\n  int DAT_08004d80 = 0x08004d80;\n  int *DAT_08004d84 = 0x08004d84;\n  int *DAT_08004d88 = 0x08004d88;\n  if (*dataPtr == DAT_08004d80) {\n    localVar1 = 0xc0;\n    localVar2 = 0x12;\n    FUN_08001264(DAT_08004d84,&localVar1,*dataPtr,3,dataPtr,param_2);\n    *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n  }\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "checkForDataMatch_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_data_from_pointer_array_080072ac",
                "PTR_PTR_DAT_080072b4": "PTR_PTR_DATA",
                "undefined4": "int",
                "*": "*",
                "return": "return",
                ";": ";"
            },
            "code": "int get_data_from_pointer_array_080072ac() {\n    int* pointer_to_pointer = (int*)PTR_PTR_DAT_080072b4;\n    int data = *pointer_to_pointer;\n    return data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_data_from_pointer_array_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "update_data_08002280",
                "param_1": "data_address",
                "param_2": "data_array",
                "uVar1": "new_value_1",
                "uVar2": "old_value_2",
                "uVar3": "new_value_3",
                "DAT_080022cc": "special_data_address",
                "bitmask_1": "0xfffffffe",
                "bitmask_2": "0xfffffffd",
                "bitmask_3": "0xfffffff7",
                "bitmask_4": "0xfffffffb"
            },
            "code": "void update_data_08002280(int data_address, uint *data_array)\n{\n  uint bitmask_1 = 0xfffffffe;\n  uint bitmask_2 = 0xfffffffd;\n  uint bitmask_3 = 0xfffffff7;\n  uint bitmask_4 = 0xfffffffb;\n  uint new_value_1, new_value_2;\n  uint old_value_1 = *(uint *)(data_address + 0x20);\n  uint old_value_2 = *(uint *)(data_address + 4);\n  uint new_value_3 = *data_array;\n  uint new_value_4 = data_array[1];\n  uint new_value_5 = data_array[2];\n  uint new_value_6 = data_array[3];\n  uint new_value_7 = data_array[4];\n  new_value_1 = (old_value_1 & bitmask_2) | new_value_5;\n  if (data_address == DAT_080022cc) {\n    new_value_1 = (new_value_1 & bitmask_4) | new_value_6;\n    new_value_2 = (old_value_2 & 0xfffffcff) | new_value_7 | data_array[5];\n  }\n  else {\n    new_value_2 = old_value_2;\n  }\n  *(uint *)(data_address + 0x20) = new_value_1;\n  *(uint *)(data_address + 0x18) = (old_value_1 & 0xffffff8c) | new_value_3;\n  *(uint *)(data_address + 0x34) = new_value_4;\n  *(uint *)(data_address + 4) = new_value_2;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "encode_08001194",
                "param_1": "data",
                "param_2": "mask",
                "param_3": "shift",
                "uVar1": "encodedData",
                "uVar2": "shiftCount",
                "uVar3": "shiftAmount",
                "uVar4": "maskCount"
            },
            "code": "void encode_08001194(uint data, uint mask, uint shift) {\n  uint shiftAmount = (uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n  uint shiftCount = 7 - shiftAmount;\n  uint maskCount = shiftAmount + 4;\n  if (shiftCount > 3) {\n    shiftCount = 4;\n  }\n  if (maskCount < 7) {\n    shiftAmount = 0;\n  }\n  shiftCount = (1 << (shiftCount & 0xff)) - 1;\n  if (maskCount > 6) {\n    shiftAmount = shiftAmount - 3;\n  }\n  undefined encode_08001194dData = (undefined)\n          ((shift & (1 << (shiftAmount & 0xff)) - 1U | (mask & shiftCount) << (shiftAmount & 0xff)) << 4);\n  if (-1 < (int)data) {\n    data = data + 0xe000e100;\n  }\n  else {\n    data = data & 0xf;\n    maskCount = DAT_080011f8;\n  }\n  if (-1 < (int)data) {\n    *(undefined *)(data + 0x300) = encode_08001194dData;\n  }\n  else {\n    *(undefined *)(maskCount + data) = encode_08001194dData;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004e7c",
                "FUN_08004ccc",
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "encode_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "calculate_sensor_values_08002cb0",
                "param_1": "pressure",
                "param_2": "temperature",
                "param_3": "humidity",
                "param_4": "sensorData",
                "puVar1": "dataPtr",
                "uVar2": "pressureValue",
                "local_c": "sensorValue",
                "PTR_s____Src_MPU9250_c_08002d80": "sensorSrc",
                "PTR_DAT_08002d84": "dataPtr"
            },
            "code": "void calculate_sensor_values_08002cb0(int pressure, int temperature, int humidity, uint32_t sensorData)\n{\n  uint32_t sensorValue = sensorData;\n  call_sensor_function(0xd0, 0x37, 0x22, 1, pressure, temperature, humidity);\n  uint8_t* PTR_s____Src_MPU9250_c_08002d80 = s____Src_MPU9250_c_08002d80;\n  call_sensor_function(0xd0, 0x6a, 1);\n  call_sensor_function(0x18, 0, PTR_s____Src_MPU9250_c_08002d80, 0xad);\n  call_sensor_function(0x18, 0xb, 1);\n  call_sensor_function(0x18, 10, 0, 1);\n  call_sensor_function(0x18, 10, 0xf, 1);\n  calculate_sensor_data(0x18, 0x10, &sensorValue, 3, PTR_s____Src_MPU9250_c_08002d80, 0xb6);\n  uint8_t* PTR_DAT_08002d84 = PTR_DAT_08002d84;\n  float pressureValue = calculate_pressure((sensorValue & 0xff) - 0x80);\n  pressureValue = calculate_pressure_offset(pressureValue, 0x3b800000);\n  pressureValue = calculate_pressure_scale(pressureValue, 0x3f800000);\n  *(float*)PTR_DAT_08002d84 = pressureValue;\n  float temperatureValue = calculate_temperature((sensorValue >> 8 & 0xff) - 0x80);\n  temperatureValue = calculate_temperature_offset(temperatureValue, 0x3b800000);\n  temperatureValue = calculate_temperature_scale(temperatureValue, 0x3f800000);\n  *(float*)(PTR_DAT_08002d84 + 4) = temperatureValue;\n  float humidityValue = calculate_humidity((sensorValue >> 0x10 & 0xff) - 0x80);\n  humidityValue = calculate_humidity_offset(humidityValue, 0x3b800000);\n  humidityValue = calculate_humidity_scale(humidityValue, 0x3f800000);\n  *(float*)(PTR_DAT_08002d84 + 8) = humidityValue;\n  call_sensor_function(0x18, 10, 0, 1);\n  call_sensor_function(0x18, 10, 0x16, 1);\n}",
            "called": [
                "FUN_08000c44",
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "calculate_sensor_values_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "generate_jump_instruction_and_call_function_08004348",
                "param_1": "instruction_param",
                "param_2": "parameter_2",
                "param_3": "parameter_3",
                "puVar1": "instruction_buffer",
                "local_10": "instruction_address",
                "local_c": "jump_offset",
                "uStack_8": "unused_variable"
            },
            "code": "void generate_jump_instruction_and_call_function_08004348(undefined4 instruction_param, uint parameter_2, undefined4 parameter_3)\n{\n    // Allocate space for the instruction\n    undefined *instruction_buffer = PTR_DAT_08004380;\n    // Write the opcode for a relative jump instruction into the buffer\n    *instruction_buffer = 0xe9;\n    // Write the offset for the jump instruction into the buffer\n    instruction_buffer[1] = 3;\n    instruction_buffer[2] = 0;\n    instruction_buffer[3] = 4;\n    // Store the address of the buffer in a local variable\n    undefined4 instruction_address = *(undefined4 *)instruction_buffer;\n    instruction_buffer[4] = 0;\n    instruction_buffer[5] = 0;\n    instruction_buffer[6] = 0;\n    // Calculate the offset for the jump instruction\n    uint jump_offset = parameter_2 & 0xff000000 | (uint)*(ushort *)(instruction_buffer + 4);\n    // Call the specified function with the instruction address and jump offset as parameters\n    FUN_08004300(100, &instruction_address, 7);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "generate_jump_instruction_and_call_function_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "update_data_08002324",
                "param_1": "data_address",
                "param_2": "data_values",
                "uVar1": "data",
                "iVar2": "value1",
                "iVar3": "value2",
                "iVar4": "constant",
                "DAT_08002364": "constant_address"
            },
            "code": "void update_data_08002324(int data_address, int *data_values)\n{\n    uint mask = 0xffffefff;\n    uint data = *(uint *)(data_address + 0x04);\n    int value1 = *data_values;\n    int value2 = data_values[2];\n    int constant = DAT_08002364;\n    if (data_address == DAT_08002364) {\n        constant = data_values[5];\n        mask = mask & 0xffffbfff;\n    }\n    if (data_address == DAT_08002364) {\n        data = data | (constant << 6);\n    }\n    *(uint *)(data_address + 0x04) = data;\n    *(uint *)(data_address + 0x1c) = (*(uint *)(data_address + 0x1c) & 0xffff8cff) | (value1 << 8);\n    *(int *)(data_address + 0x40) = data_values[1];\n    *(uint *)(data_address + 0x20) = (*(uint *)(data_address + 0x20) & 0xffffdfff) | (value2 << 0xc);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "convert_to_signed_int_08001078",
                "param_1": "unsigned_int_value",
                "uVar1": "shift_amount",
                "uVar2": "shifted_value",
                "uVar3": "shifted_and_signed_value",
                "uVar4": "converted_value"
            },
            "code": "uint convert_to_signed_int_08001078(uint unsigned_int_value)\n{\n  uint shifted_value;\n  uint shift_amount;\n  uint shifted_and_signed_value;\n  uint converted_value;\n\n  if (unsigned_int_value << 1 < 0x7f000000) {\n    return 0;\n  }\n\n  shift_amount = (unsigned_int_value << 1) >> 0x18;\n  shifted_value = 0x9e - shift_amount;\n\n  if (shift_amount < 0x9f && shifted_value != 0) {\n    shifted_and_signed_value = (unsigned_int_value << 8 | 0x80000000) >> (shifted_value & 0xff);\n    if ((unsigned_int_value & 0x80000000) != 0) {\n      converted_value = -shifted_and_signed_value;\n    }\n    else{\n      converted_value = shifted_and_signed_value;\n    }\n    return converted_value;\n  }\n\n  if ((shifted_value == 0xffffff9f) && ((unsigned_int_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n\n  unsigned_int_value = unsigned_int_value & 0x80000000;\n  if (unsigned_int_value == 0) {\n    unsigned_int_value = 0x7fffffff;\n  }\n  return unsigned_int_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "convert_to_signed_int_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "set_value_if_not_one_08002564",
                "param_1": "values",
                "param_2": "params",
                "uVar1": "result",
                "*(char *)(param_1 + 0xe)": "*(char *)(values + 0xe)",
                "*(undefined *)((int)param_1 + 0x39)": "values[0x39]",
                "*(uint *)(*param_1 + 0x44)": "*(uint *)(*values + 0x44)",
                "*param_1": "*values",
                "param_2[1]": "params[1]",
                "param_2[2]": "params[2]",
                "param_2[3]": "params[3]",
                "param_2[4]": "params[4]",
                "param_2[5]": "params[5]",
                "param_2[6]": "params[6]",
                "*(undefined *)(param_1 + 0xe)": "values[0xe]"
            },
            "code": "int set_value_if_not_one_08002564(int *values, uint *params) {\n    int result = 2;\n    if (*(char *)(values + 0xe) != '\\x01') {\n        values[0x39] = 2;\n        uint param_sum = 0;\n        for (int i = 0; i < 7; i++) {\n            param_sum |= params[i];\n        }\n        *(uint *)(*values + 0x44) = param_sum;\n        values[0x39] = 1;\n        result = 0;\n        values[0xe] = 0;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_value_if_not_one_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "initialize_08001754",
                "param_1": "config_data",
                "uVar1": "divisor",
                "uVar2": "quotient",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar6": "quotient_divisor",
                "uVar7": "quotient_remainder"
            },
            "code": "int initialize_08001754(uint **config_data)\n{\n  uint divisor;\n  uint *ptr1;\n  uint *ptr2;\n  uint *ptr3;\n  uint quotient;\n  undefined8 quotient_remainder;\n\n  if (config_data == NULL) {\n    return 1;\n  }\n  if (*(char *)((int)config_data + 0x35) == '\\0') {\n    *(undefined *)(config_data + 0xd) = 0;\n    run_initialization_function();\n  }\n  *(undefined *)((int)config_data + 0x35) = 0x24;\n  ptr1 = PTR_DAT_08001820;\n  **config_data &= 0xfffffffe;\n  quotient_remainder = get_quotient_and_remainder();\n  quotient = (uint)((ulonglong)quotient_remainder >> 0x20);\n  divisor = (uint)quotient_remainder;\n  ptr3 = config_data[1];\n  if (ptr1 < ptr3) {\n    quotient = 300;\n  }\n  ptr2 = *config_data;\n  if (ptr1 < ptr3) {\n    quotient *= divisor / PTR_DAT_08001824;\n  }\n  ptr2[1] = divisor / PTR_DAT_08001824;\n  if (ptr1 < ptr3) {\n    divisor = quotient / 1000;\n  }\n  ptr2[8] = divisor + 1;\n  if (ptr1 < ptr3) {\n    if (config_data[2] == NULL) {\n      quotient = divisor / (uint)((int)ptr3 * 3) | 0x8000;\n    }\n    else {\n      quotient = divisor / (uint)((int)ptr3 * 0x19) | 0xc000;\n    }\n    if ((quotient & 0xfff) == 0) {\n      quotient = 1;\n    }\n  }\n  else {\n    quotient = divisor / (uint)((int)ptr3 << 1);\n    if ((quotient & 0xfff) < 4) {\n      quotient = 4;\n    }\n  }\n  ptr1 = config_data[8];\n  ptr3 = config_data[7];\n  ptr2[7] = quotient;\n  *ptr2 = (uint)ptr3 | (uint)ptr1;\n  ptr2[2] = (uint)config_data[4] | (uint)config_data[3];\n  ptr2[3] = (uint)config_data[5] | (uint)config_data[6];\n  *ptr2 |= 1;\n  config_data[0xe] = NULL;\n  *(undefined *)((int)config_data + 0x35) = 0x20;\n  *(undefined *)((int)config_data + 0x36) = 0;\n  return 0;\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ec0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08002bf0",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "increment_and_store_08003ec8",
                "param_1": "data",
                "param_2": "value",
                "*(short *)(param_1 + 0x804)": "*count",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(data + (*index))",
                "*(ushort *)(param_1 + 0x802)": "*index"
            },
            "code": "int increment_and_store_08003ec8(unsigned char *data, unsigned char value) {\n  unsigned short *count = (unsigned short *)(data + 0x804);\n  unsigned short *index = (unsigned short *)(data + 0x802);\n  *count = *count + 1;\n  *(data + (*index)) = value;\n  *index = (*index + 1) & 0x7ff;\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "increment_and_store_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "check_and_modify_input_08002724",
                "param_1": "input_array",
                "iVar1": "input_array_val",
                "call_function": "call_function",
                "FUN_08004e7c": "call_function",
                "perform_operation": "perform_operation",
                "*param_1": "*input_array",
                "PTR_DAT_08003138": "PTR_DAT_08003138",
                "PTR_FUN_080025e8": "perform_operation",
                "PTR_FUN_08004e7c": "call_function",
                "DAT_0800312c": "DAT_0800312c"
            },
            "code": "int check_and_modify_input_08002724(int *input_array)\n{\n  int input_array_ptr = (int)input_array;\n  if (input_array != NULL) {\n    if (*(char *)(input_array_ptr + 0x39) == '\\0') {\n      *(undefined *)(input_array + 0xe) = 0;\n      PTR_FUN_08004e7c();\n    }\n    *(undefined *)(input_array_ptr + 0x39) = 2;\n    *(uint *)(*input_array + 0xc) &= 0xffffdfff;\n    PTR_FUN_080025e8(input_array);\n    int input_array_val = *input_array;\n    *(uint *)(input_array_val + 0x10) &= 0xffffb7ff;\n    *(uint *)(input_array_val + 0x14) &= 0xffffffd5;\n    *(uint *)(input_array_val + 0xc) |= 0x2000;\n    input_array[0xf] = 0;\n    *(undefined *)(input_array_ptr + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}",
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_and_modify_input_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "set_param_in_ptr_08003fe8",
                "param_1": "param",
                "PTR_DAT_08003ff0": "ptr",
                "*PTR_DAT_08003ff0": "*ptr",
                "offset": "offset",
                "ptr_offset": "ptr_offset"
            },
            "code": "void set_param_in_ptr_08003fe8(int param) {\n    int* PTR_DAT_08003ff0 = (int*) PTR_DAT_08003ff0;\n    int offset = 0x3c;\n    int* PTR_DAT_08003ff0_offset = (int*) (PTR_DAT_08003ff0 + offset);\n    *PTR_DAT_08003ff0_offset = param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_in_ptr_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "out_block_address",
                "param_2": "requested_size",
                "puVar1": "pointer",
                "uVar2": "allocation_result",
                "puVar3": "prev_block",
                "iVar4": "unused_space",
                "puVar5": "curr_block",
                "uVar6": "block_size",
                "puVar7": "prev_block"
            },
            "code": "uint allocate_memory_block_08005714(undefined4 *out_block_address, uint requested_size)\n{\n    uint aligned_size = (requested_size + 3 & 0xfffffffc) + 8;\n    if (aligned_size < 0xc) {\n        aligned_size = 0xc;\n    }\n    if (((int)aligned_size < 0) || (aligned_size < requested_size)) {\n        *out_block_address = 0xc;\n    }\n    else {\n        do_nothing_0800583c();\n        uint *prev_block = *(uint **)PTR_DAT_080057c8;\n        uint *curr_block = *(uint **)PTR_DAT_080057c8;\n        while (curr_block != (uint *)0x0) {\n            uint block_size = *curr_block - aligned_size;\n            if (-1 < (int)block_size) {\n                if (block_size < 0xc) {\n                    if (prev_block == curr_block) {\n                        uint next_block_address = prev_block[1];\n                        *(uint *)PTR_DAT_080057c8 = next_block_address;\n                    }\n                    else {\n                        uint next_block_address = curr_block[1];\n                    }\n                    if (prev_block != curr_block) {\n                        prev_block[1] = next_block_address;\n                        prev_block = curr_block;\n                    }\n                }\n                else {\n                    *curr_block = block_size;\n                    *(uint *)((int)curr_block + block_size) = aligned_size;\n                    prev_block = (uint *)((int)curr_block + block_size);\n                }\n                goto LAB_08005778;\n            }\n            prev_block = curr_block;\n            curr_block = (uint *)curr_block[1];\n        }\n        if (*(int *)PTR_DAT_080057cc == 0) {\n            uint allocation_result = FUN_0800581c(out_block_address);\n            *(undefined4 *)PTR_DAT_080057cc = allocation_result;\n        }\n        curr_block = (uint *)FUN_0800581c(out_block_address, aligned_size);\n        if ((curr_block != (uint *)0xffffffff) &&\n           ((prev_block = (uint *)((int)curr_block + 3U & 0xfffffffc), curr_block == prev_block ||\n            (block_size = FUN_0800581c(out_block_address,(int)prev_block - (int)curr_block), block_size != -1)))) {\n            *prev_block = aligned_size;\nLAB_08005778:\n            do_nothing_0800583e(out_block_address);\n            uint block_end_address = (int)prev_block + 0xbU & 0xfffffff8;\n            int unused_space = block_end_address - (int)(prev_block + 1);\n            if (unused_space != 0) {\n                *(int *)((int)prev_block + unused_space) = -unused_space;\n                return block_end_address;\n            }\n            return block_end_address;\n        }\n        *out_block_address = 0xc;\n        do_nothing_0800583e(out_block_address);\n    }\n    return 0;\n}\n",
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "function_ptr_array",
                "iVar2": "function_ptr_array_size",
                "iVar3": "i"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  void **function_ptr_array = PTR_DAT_08004fec;\n  int function_ptr_array_size = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (int i = 0; i < function_ptr_array_size >> 2; i++) {\n    (**(void (**)(void))(function_ptr_array + i * 4))();\n  }\n  do_nothing_080072d4();\n  function_ptr_array = PTR_DAT_08004ff4;\n  function_ptr_array_size = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (int i = 0; i < function_ptr_array_size >> 2; i++) {\n    (**(void (**)(void))(function_ptr_array + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "send_data_to_server_080043f0",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "server_ptr",
                "local_10": "server_address",
                "uStack_c": "server_port",
                "auStack_8": "data"
            },
            "code": "void send_data_to_server_080043f0(undefined4 data_ptr, undefined4 data_size, undefined4 server_ptr)\n{\n  undefined4 server_address;\n  undefined4 server_port;\n  undefined4 data[2];\n  \n  server_address = *(undefined4 *)PTR_DAT_0800440c;\n  server_port = *(undefined4 *)(PTR_DAT_0800440c + 4);\n  data[0] = server_ptr;\n  send_request_to_server(0x68,&server_address,8,data);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_data_to_server_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "calculate_hash_08000428",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_2",
                "uVar2": "temp_6",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_1",
                "uVar7": "temp_7",
                "iVar6": "leading_zeroes",
                "bVar8": "is_zero_2",
                "bVar9": "is_zero",
                "bVar10": "is_carry",
                "in_r12": "unused"
            },
            "code": "uint64_t calculate_hash_08000428(uint32_t input_1, uint32_t input_2, uint32_t input_3, uint32_t input_4)\\n\\\n                        {\\n\\\n                            uint32_t temp_1 = input_1 << 1;\\n\\\n                            bool is_zero = temp_1 == 0;\\n\\\n                            uint32_t temp_2 = (uint32_t)((input_1 & 0x80000000) != 0) << 31;\\n\\\n                            uint32_t temp_3 = (uint32_t)((int)temp_1 >> 3) >> 1;\\n\\\n                            uint32_t temp_4 = temp_2 | temp_3;\\n\\\n                            input_1 = input_1 << 29;\\n\\\n                            if (!is_zero)\\n\\\n                            {\\n\\\n                                uint32_t temp_5 = temp_1 & 0xff000000;\\n\\\n                                is_zero = temp_5 == 0;\\n\\\n                                if (!is_zero)\\n\\\n                                {\\n\\\n                                    is_zero = temp_5 == 0xff000000;\\n\\\n                                    if (!is_zero)\\n\\\n                                    {\\n\\\n                                        return ((uint64_t)temp_4 << 32) | input_1) ^ 0x3800000000000000;\\n\\\n                                    }\\n\\\n                                }\\n\\\n                            }\\n\\\n                            if (temp_1 == 0 || temp_1 == 0xff000000)\\n\\\n                            {\\n\\\n                                return ((uint64_t)temp_4 << 32) | input_1;\\n\\\n                            }\\n\\\n                            uint32_t temp_6 = input_1;\\n\\\n                            temp_1 = temp_3;\\n\\\n                            if (temp_3 == 0)\\n\\\n                            {\\n\\\n                                temp_6 = 0;\\n\\\n                                temp_1 = input_1;\\n\\\n                            }\\n\\\n                            int32_t leading_zeroes = count_leading_zeroes(temp_1);\\n\\\n                            if (temp_3 == 0)\\n\\\n                            {\\n\\\n                                leading_zeroes += 32;\\n\\\n                            }\\n\\\n                            uint32_t temp_7 = leading_zeroes - 11;\\n\\\n                            bool is_negative = temp_7 < 0;\\n\\\n                            bool is_zero_2 = temp_7 == 0;\\n\\\n                            bool is_carry = is_negative != is_zero_2;\\n\\\n                            uint32_t temp_8 = leading_zeroes - 43;\\n\\\n                            is_negative = (int32_t)temp_8 < 0;\\n\\\n                            is_zero_2 = temp_8 == 0;\\n\\\n                            if (is_negative != is_carry || is_zero_2)\\n\\\n                            {\\n\\\n                                uint32_t temp_9 = 32 - temp_7;\\n\\\n                                temp_6 = temp_1 << (temp_7 & 0xff);\\n\\\n                                temp_1 = temp_1 >> (0xcU - temp_9 & 0xff);\\n\\\n                                goto LABEL_080002f0;\\n\\\n                            }\\n\\\n                            if (is_zero_2 || is_negative != is_carry)\\n\\\n                            {\\n\\\n                                uint32_t temp_10 = 32 - temp_7;\\n\\\n                                temp_1 = temp_1 << (temp_7 & 0xff);\\n\\\n                                temp_1 |= temp_6 >> (32 - temp_10 & 0xff);\\n\\\n                                temp_6 = temp_6 << (temp_7 & 0xff);\\n\\\n                            }\\n\\\n                        LABEL_080002f0:\\n\\\n                            if (temp_7 < 889)\\n\\\n                            {\\n\\\n                                return ((uint64_t)temp_1 + (0x380 - temp_7) * 0x100000 | temp_2) << 32 | temp_6;\\n\\\n                            }\\n\\\n                            uint32_t temp_11 = ~(0x380 - temp_7);\\n\\\n                            if ((int32_t)temp_11 < 31)\\n\\\n                            {\\n\\\n                                int32_t temp_12 = temp_11 - 19;\\n\\\n                                if (temp_12 && (temp_12 < 0) == (temp_11 - 31 < 12))\\n\\\n                                {\\n\\\n                                    return ((uint64_t)temp_4 << 32) | (temp_6 >> (32 - (12 - temp_12) & 0xff) | temp_1 << (12 - temp_12 & 0xff))) & 0x80000000ffffffff;\\n\\\n                                }\\n\\\n                                temp_11++;\\n\\\n                                return ((uint64_t)temp_2 | temp_1 >> (temp_11 & 0xff)) << 32 | temp_6 >> (temp_11 & 0xff) | temp_1 << (32 - temp_11 & 0xff);\\n\\\n                            }\\n\\\n                            return ((uint64_t)temp_4 << 32) | temp_1 >> (temp_11 - 31 & 0xff)) & 0x80000000ffffffff;\\n\\\n                        }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "set_flag_and_call_functions_08004ccc",
                "param_1": "flag",
                "param_2": "param_2",
                "param_3": "param_3",
                "iVar1": "data",
                "uVar2": "updated_flag",
                "uVar3": "current_flag"
            },
            "code": "void set_flag_and_call_functions_08004ccc(int flag, int param_2, int param_3)\n{\n  int data = DAT_08004d44;\n  int updated_flag = *(int *)(DAT_08004d44 + 0x18) | 1;\n  *(int *)(DAT_08004d44 + 0x18) = updated_flag;\n  int current_flag = *(int *)(data + 0x18) & 1;\n  FUN_08001170(3, param_2, updated_flag, current_flag, flag, current_flag, param_3);\n  FUN_08001194(0xfffffff4, 0);\n  FUN_08001194(0xfffffff5, 0);\n  FUN_08001194(0xfffffff6, 0);\n  FUN_08001194(0xfffffffb, 0);\n  FUN_08001194(0xfffffffc, 0);\n  FUN_08001194(0xfffffffe, 0);\n  FUN_08001194(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "calculate_float_08000a30",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "result",
                "uVar2": "shifted_mantissa",
                "uVar3": "biased_exponent",
                "in_r12": "is_rounding_needed",
                "bVar4": "is_negative_zero",
                "bVar5": "is_denormalized"
            },
            "code": "uint calculate_float_08000a30(uint exponent, uint mantissa) {\n  uint sign;\n  uint biased_exponent;\n  uint shifted_mantissa;\n  uint is_denormalized;\n  uint is_nan_or_inf;\n  uint is_negative_zero;\n  uint is_negative;\n  uint is_infinity;\n  uint is_nan;\n  uint is_normalized;\n  uint is_rounding_needed;\n  uint rounding_bits;\n  uint sticky_bit;\n  uint guard_bit;\n  uint round_bit;\n  uint result;\n  \n  sign = mantissa >> 31;\n  biased_exponent = (exponent & 0xff) + ((mantissa >> 23) & 0xff) - 0x7f;\n  shifted_mantissa = (mantissa & 0x7fffff) | 0x800000;\n  is_denormalized = (exponent == 0) && ((mantissa & 0x7fffffff) != 0);\n  is_nan_or_inf = (biased_exponent == 0xff);\n  is_negative_zero = (exponent == 0) && (mantissa == 0x80000000);\n  is_negative = (sign == 1) && !is_nan_or_inf;\n  is_infinity = (is_nan_or_inf) && (mantissa == 0);\n  is_nan = (is_nan_or_inf) && (mantissa != 0);\n  is_normalized = (biased_exponent != 0) && (biased_exponent != 0xff);\n  is_rounding_needed = (shifted_mantissa & 0x1000000) && ((shifted_mantissa & 0x3fffff) || is_normalized);\n  rounding_bits = shifted_mantissa & 0x3fffff;\n  sticky_bit = (rounding_bits != 0) && ((rounding_bits & 0x7ffff) != 0);\n  guard_bit = (rounding_bits >> 0x13) & 1;\n  round_bit = (rounding_bits >> 0x12) & 1;\n  shifted_mantissa = shifted_mantissa >> 0x17;\n  if (is_denormalized) {\n    shifted_mantissa = shifted_mantissa << 1;\n  }\n  if (is_rounding_needed) {\n    shifted_mantissa = shifted_mantissa + guard_bit + (sticky_bit & (round_bit | guard_bit));\n    if ((shifted_mantissa & 0x400000) != 0) {\n      biased_exponent = biased_exponent + 1;\n      if (biased_exponent == 0xff) {\n        is_nan_or_inf = 1;\n        is_nan = 1;\n      }\n    }\n  }\n  if (is_nan_or_inf) {\n    if ((mantissa & 0x40000000) != 0) {\n      result = 0xffc00000;\n    }\n    else {\n      result = 0x7f800000;\n      if (mantissa != 0) {\n        result = result | mantissa;\n      }\n    }\n  }\n  else {\n    result = (sign << 0x1f) | ((biased_exponent & 0xff) << 0x17) | (shifted_mantissa & 0x7fffff);\n  }\n  if (is_negative_zero) {\n    result = 0x80000000;\n  }\n  if (is_negative) {\n    result = result | 0x80000000;\n  }\n  if (is_infinity) {\n    result = result | (sign << 0x1f);\n  }\n  return result;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_float_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "check_input_validity_080023d0",
                "param_1": "input_array",
                "FUN_08004d8c": "call_cleanup_function",
                "FUN_08002368": "perform_operation"
            },
            "code": "int check_input_validity_080023d0(undefined4 *input_array){\n    if (input_array == NULL) {\n        return 1;\n    }\n    if (*(char *)((int)input_array + 0x39) == \"\\0\") {\n        *(undefined *)(input_array + 0xe) = 0;\n        call_cleanup_function();\n    }\n    *(undefined *)((int)input_array + 0x39) = 2;\n    perform_operation(*input_array, input_array + 1);\n    *(undefined *)((int)input_array + 0x39) = 1;\n    return 0;\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_input_validity_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "validate_08004c30",
                "param_1": "input",
                "puVar1": "config_ptr",
                "puVar2": "flag_ptr",
                "uVar3": "flag_value",
                "uVar4": "bit_mask",
                "iVar5": "function_result",
                "PTR_DAT_08004c58": "CONFIG_PTR",
                "DAT_08004c54": "MAGIC_NUMBER",
                "FUN_08003ec8": "init",
                "PTR_DAT_08004c5c": "CONFIG_DATA_PTR",
                "PTR_DAT_08004c60": "FLAG_PTR"
            },
            "code": "int * validate_08004c30(int *input)\n{\n  undefined *config_ptr;\n  undefined *flag_ptr;\n  undefined flag_value;\n  uint32_t bit_mask;\n  int function_result;\n  \n  config_ptr = PTR_DAT_08004c58;\n  if (*input != DAT_08004c54) {\n    return input;\n  }\n  init(PTR_DAT_08004c5c,*PTR_DAT_08004c58);\n  flag_ptr = PTR_DAT_08004c60;\n  flag_value = flag_ptr[0x39];\n  if ((flag_value == '\\x01') || (flag_value == '\\x12')) {\n    if (config_ptr == (undefined *)0x0) {\n      return (int *)0x1;\n    }\n    if (flag_ptr[0x38] != '\\x01') {\n      flag_ptr[0x38] = 1;\n      *(undefined4 *)(flag_ptr + 0x3c) = 0;\n      *(undefined2 *)(flag_ptr + 0x2c) = 1;\n      *(undefined2 *)(flag_ptr + 0x2e) = 1;\n      flag_ptr[0x38] = 0;\n      if (flag_ptr[0x39] == '\\x12') {\n        flag_value = 0x32;\n      }\n      else {\n        flag_value = 0x22;\n      }\n      function_result = *(int *)flag_ptr;\n      flag_ptr[0x39] = flag_value;\n      bit_mask = *(uint32_t *)(function_result + 0xc);\n      *(undefined **)(flag_ptr + 0x28) = config_ptr;\n      *(uint32_t *)(function_result + 0xc) = bit_mask | 0x100;\n      *(uint32_t *)(function_result + 0x14) = *(uint32_t *)(function_result + 0x14) | 1;\n      *(uint32_t *)(function_result + 0xc) = *(uint32_t *)(function_result + 0xc) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "validate_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "set_parameter_to_memory_location_08003fdc",
                "param_1": "value",
                "PTR_DAT_08003fe4": "memory_location"
            },
            "code": "void set_parameter_to_memory_location_08003fdc(int value)\n{\n    int* PTR_DAT_08003fe4 = *(int*)PTR_DAT_08003fe4;\n    int offset = 0x38;\n    int* target_location = PTR_DAT_08003fe4 + offset;\n    *target_location = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_parameter_to_memory_location_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "is_end_of_string_080009f0",
                "in_CY": "current_char",
                "FUN_08000980": "execute_function_08000980"
            },
            "code": "bool is_end_of_string_080009f0(void)\n{\n  char current_char;\n  execute_function_08000980();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "is_end_of_string_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "set_bit_and_clear_mask_08004f10",
                "puVar1": "ptr_array",
                "DAT_08004f50": "array_ptr",
                "DAT_08004f54": "mask1",
                "DAT_08004f58": "data_ptr"
            },
            "code": "void set_bit_and_clear_mask_08004f10(void)\n{\n  uint *ptr_array;\n  ptr_array = DAT_08004f50;\n  *DAT_08004f50 |= 1;\n  ptr_array[1] &= DAT_08004f54;\n  *ptr_array &= mask2;\n  *ptr_array &= mask3;\n  ptr_array[1] &= mask4;\n  ptr_array[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "set_bit_and_clear_mask_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "allocate_memory_08005044",
                "param_1": "output",
                "param_2": "input_array",
                "param_3": "flags",
                "param_4": "size",
                "iVar1": "result",
                "uVar2": "max_size",
                "uVar3": "new_size",
                "iVar4": "diff",
                "uVar5": "current_size"
            },
            "code": "uint32_t allocate_memory_08005044(uint32_t *output, int *input_array, uint32_t flags, uint32_t size)\n{\n    int32_t diff;\n    uint32_t max_size;\n    uint32_t new_size;\n    int32_t result;\n    uint32_t current_size = input_array[2];\n    if ((current_size <= size) && ((*(uint16_t *)(input_array + 3) & 0x480) != 0)) {\n        diff = *input_array - input_array[4];\n        max_size = (input_array[5] * 3) / 2 + size + diff;\n        new_size = (max_size > size) ? max_size : size;\n        if ((int32_t)((uint32_t)*(uint16_t *)(input_array + 3) << 0x15) < 0) {\n            result = allocate_with_zero(output, new_size);\n            if (result == 0) {\n                *output = 0xc;\n                *(uint16_t *)(input_array + 3) |= 0x40;\n                return 0xffffffff;\n            }\n            copy_memory(result, input_array[4], diff);\n            *(uint16_t *)(input_array + 3) &= 0xfb7f;\n            *(uint16_t *)(input_array + 3) |= 0x80;\n        }\n        else {\n            result = allocate_with_flags(output, input_array[4], new_size, flags);\n            if (result == 0) {\n                free_memory(output, input_array[4]);\n                *output = 0xc;\n                *(uint16_t *)(input_array + 3) |= 0x40;\n                return 0xffffffff;\n            }\n        }\n        input_array[4] = result;\n        *input_array = result + diff;\n        input_array[5] = new_size - diff;\n        input_array[2] = new_size - diff;\n        current_size = size;\n    }\n    if (size <= current_size) {\n        current_size = size;\n    }\n    copy_memory(*input_array, flags, current_size);\n    input_array[2] -= current_size;\n    *input_array += current_size;\n    return 0;\n}",
            "called": [
                "FUN_08005630",
                "FUN_080057d0",
                "FUN_0800567c",
                "FUN_08005646",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initialize_values_08004194",
                "puVar1": "pointer1",
                "puVar2": "pointer2",
                "puVar3": "pointer3",
                "puVar4": "pointer4",
                "uVar5": "value1",
                "uVar6": "value2",
                "uVar7": "value3",
                "uVar8": "value4"
            },
            "code": "void initialize_values_08004194(void)\n{\n  undefined *pointer1;\n  undefined *pointer2;\n  undefined *pointer3;\n  undefined *pointer4;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  initialize_first_value();\n  initialize_second_value();\n  initialize_third_value();\n  initialize_fourth_value();\n  pointer3 = DAT_080049f0;\n  pointer2 = DAT_080049ec;\n  pointer1 = DAT_080049e8;\n  *(undefined4 *)(DAT_080049ec + 0x4c) = 1;\n  *(undefined4 *)(pointer1 + 0x4c) = 1;\n  *(undefined4 *)(pointer3 + 0x4c) = 0xffffffff;\n  value1 = DAT_080049f8;\n  pointer4 = DAT_080049f4;\n  *(undefined4 *)(DAT_080049f4 + 0x4c) = 1;\n  value2 = DAT_08004a00;\n  *(undefined4 *)(pointer2 + 0x20) = DAT_080049fc;\n  value3 = DAT_08004a08;\n  *(undefined4 *)(pointer1 + 0x20) = DAT_08004a04;\n  *(undefined4 *)(pointer3 + 0x20) = DAT_08004a0c;\n  *(undefined4 *)(pointer4 + 0x20) = 0;\n  *(undefined4 *)(pointer2 + 4) = value1;\n  value1 = DAT_08004a10;\n  *(undefined4 *)(pointer2 + 8) = DAT_08004a10;\n  *(undefined4 *)(pointer2 + 0xc) = value2;\n  *(undefined4 *)(pointer2 + 0x10) = value3;\n  value3 = DAT_08004a14;\n  *(undefined4 *)(pointer2 + 0x14) = value1;\n  *(undefined4 *)(pointer2 + 0x18) = value3;\n  value4 = DAT_08004a1c;\n  value3 = DAT_08004a18;\n  *(undefined4 *)(pointer1 + 4) = DAT_08004a18;\n  *(undefined4 *)(pointer1 + 8) = value1;\n  *(undefined4 *)(pointer1 + 0xc) = value4;\n  *(undefined4 *)(pointer1 + 0x10) = value3;\n  value3 = DAT_08004a20;\n  *(undefined4 *)(pointer1 + 0x14) = value1;\n  *(undefined4 *)(pointer1 + 0x18) = value3;\n  *(undefined4 *)(pointer3 + 4) = DAT_08004a24;\n  *(undefined4 *)(pointer3 + 8) = DAT_08004a28;\n  *(undefined4 *)(pointer3 + 0xc) = value2;\n  *(undefined4 *)(pointer3 + 0x10) = 0;\n  *(undefined4 *)(pointer3 + 0x14) = 0;\n  *(undefined4 *)(pointer3 + 0x18) = 0;\n  *(undefined4 *)(pointer4 + 4) = DAT_08004a2c;\n  *(undefined4 *)(pointer4 + 8) = 0;\n  *(undefined4 *)(pointer4 + 0xc) = 0;\n  *(undefined4 *)(pointer4 + 0x10) = 0;\n  *(undefined4 *)(pointer4 + 0x14) = 0;\n  *(undefined4 *)(pointer4 + 0x18) = 0;\n  return;\n}",
            "called": [
                "FUN_08004028",
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "initialize_values_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "toggle_bit_08001240",
                "param_1": "bit_position",
                "uVar1": "bitmask",
                "*DAT_08001254": "*data_ptr"
            },
            "code": "void toggle_bit_08001240(int bit_position) {\n  uint32_t bitmask;\n  if (bit_position == 4) {\n    bitmask = *DAT_08001254 | 0x04;\n  }\n  else {\n    bitmask = *DAT_08001254 & 0xfffffffb;\n  }\n  *DAT_08001254 = bitmask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "toggle_bit_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_new_value_08005840",
                "param_1": "previous_value",
                "param_2": "data",
                "iVar1": "new_value",
                "PTR_": "PTR_ (unchanged)",
                "DAT_": "DAT_ (unchanged)"
            },
            "code": "int calculate_new_value_08005840(int previous_value, int *data)\n{\n  int new_value = previous_value - 4;\n  \n  if (previous_value < 0) {\n    new_value += data[new_value];\n  }\n  \n  return new_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_new_value_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "find_last_char_08000150",
                "param_1": "input_string",
                "pcVar2": "current_char_ptr",
                "pcVar3": "current_char_ptr",
                "cVar1": "current_char",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "char* find_last_char_08000150(char* input_string) {\n  char* current_char_ptr = input_string;\n  while (*current_char_ptr != \"\\0\") {\n    current_char_ptr++;\n  }\n  return current_char_ptr - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "find_last_char_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "count_leading_zeroes_and_update_flags_08003f3c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "flag1",
                "uVar2": "count1",
                "DAT_08003f78": "flag1",
                "0x8000": "flag2",
                "0x4000": "flag3",
                "0x2000": "flag4"
            },
            "code": "void count_leading_zeroes_and_update_flags_08003f3c(uint32_t input1, uint32_t input2, uint32_t input3)\n{\n    uint32_t DAT_08003f78 = DAT_08003f78;\n    uint32_t flag2 = 0x8000;\n    uint32_t flag3 = 0x4000;\n    uint32_t flag4 = 0x2000;\n    uint32_t count1 = count_leading_zeroes(input1);\n    uint32_t count2 = count_leading_zeroes(input2);\n    uint32_t count3 = count_leading_zeroes(input3);\n    FUN_08001424(DAT_08003f78, flag2, count1 >> 5);\n    FUN_08001424(DAT_08003f78, flag3, count2 >> 5);\n    FUN_08001424(DAT_08003f78, flag4, count3 >> 5);\n}\n",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "count_leading_zeroes_and_update_flags_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_value_from_pointer_08002214",
                "PTR_DAT_0800221c": "pointer"
            },
            "code": "int get_value_from_pointer_08002214() {\n    int *PTR_DAT_0800221c = (int *)PTR_DAT_0800221c;\n    return *PTR_DAT_0800221c;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "concatenate_uint32_t_08001004",
                "param_1": "first_uint32_t",
                "param_2": "second_uint32_t",
                "CONCAT44": "bitwise_concatenate"
            },
            "code": "uint64_t concatenate_uint32_t_08001004(uint32_t param_1, uint32_t param_2)\n{\n  function_call();\n  return ((uint64_t)param_2 << 32) | param_1;\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001014",
                "FUN_08000ffc",
                "FUN_08001028"
            ],
            "imported": false,
            "current_name": "concatenate_uint32_t_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4",
                "puVar1": "data_ptr",
                "PTR_DAT_0800401c": "data_1_ptr",
                "FUN_08002538": "initialize_memory",
                "PTR_DAT_08004020": "data_2_ptr",
                "PTR_DAT_08004024": "data_3_ptr"
            },
            "code": "void initialize_data_08003ff4(void)\n{\n  undefined *data_ptr;\n  data_ptr = PTR_DAT_0800401c;\n  initialize_memory(PTR_DAT_08004020, 4);\n  initialize_memory(PTR_DAT_08004024, 8);\n  initialize_memory(data_ptr, 8);\n  initialize_memory(data_ptr, 0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "initialize_data_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "run_application_080041ae",
                "FUN_08003eb0": "initialize_application",
                "FUN_08004194": "display_welcome_message",
                "FUN_0800114c": "process_user_input",
                "FUNC_0800411c": "update_display"
            },
            "code": "void run_application_080041ae(void)\n{\n  initialize_application(0);\n  display_welcome_message();\n  do {\n    process_user_input();\n    update_display();\n  } while( true );\n}\n",
            "called": [
                "FUN_08003eb0",
                "FUN_0800411c",
                "FUN_0800114c",
                "FUN_08004194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "run_application_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "set_flag_and_call_functions_08001128",
                "FUN_08001170": "call_function_one",
                "FUN_08001104": "call_function_two",
                "FUN_08004ccc": "call_function_three",
                "DAT_08001148": "data_pointer"
            },
            "code": "int set_flag_and_call_functions_08001128(void)\n{\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  call_function_one(3);\n  call_function_two(0);\n  call_function_three();\n  return 0;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "initialize_peripherals_08004514",
                "iVar1": "error_code",
                "uVar2": "delay_time",
                "uVar3": "peripheral_id",
                "iVar4": "peripheral_count",
                "local_44": "peripheral_count_1",
                "local_40": "peripheral_id_1",
                "local_3c": "peripheral_count_2",
                "local_38": "delay_time_1",
                "local_34": "peripheral_count_3",
                "local_30": "peripherals",
                "local_20": "peripherals_1",
                "local_1c": "peripherals_2",
                "local_14": "peripherals_3",
                "local_10": "peripherals_4"
            },
            "code": "void initialize_peripherals_08004514(void)\n{\n    int error_code;\n    uint32_t delay_time;\n    uint32_t peripheral_id;\n    uint32_t peripheral_count;\n    uint32_t peripherals[4] = {2, 2, 0, 0x380000};\n\n    error_code = initialize_peripheral_array(peripherals);\n    if (error_code == 0) goto END;\n\n    peripheral_id = 0x3c;\n    while (true) {\n        error_code = get_peripheral_info(PERIPHERAL_INFO_ARRAY, peripheral_id);\n        if (error_code == 0) break;\n        peripheral_count = 0xf;\n        delay_time = 0x400;\n        error_code = initialize_peripheral(&peripheral_count, &delay_time, &peripheral_id, &peripheral_count, &peripheral_count);\n        if (error_code == 0) break;\n        peripheral_id = 0x49;\n    }\n\n    delay_time = get_system_time() / 1000;\n    print_message(delay_time);\n    print_message(4);\n    reset_system(0xffffffff, 0, 0);\n\nEND:\n    return;\n}",
            "called": [
                "FUN_0800209c",
                "FUN_08002214",
                "FUN_08001240",
                "FUN_08001b58",
                "FUN_08001194",
                "FUN_08004490",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_peripherals_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "initialize_data_08004a84",
                "puVar1": "first_variable_pointer",
                "puVar2": "second_variable_pointer",
                "puVar3": "third_variable_pointer",
                "puVar4": "fourth_variable_pointer",
                "puVar5": "fifth_variable_pointer",
                "uVar6": "current_value",
                "uVar7": "return_value",
                "iVar8": "check_result",
                "PTR_DAT_08004bf0": "first_pointer",
                "PTR_DAT_08004bf4": "second_pointer",
                "PTR_DAT_08004bf8": "third_pointer",
                "PTR_DAT_08004c04": "fourth_pointer",
                "PTR_DAT_08004c08": "fifth_pointer",
                "PTR_DAT_08004c14": "sixth_pointer",
                "DAT_08004c00": "first_constant",
                "DAT_08004bfc": "second_constant"
            },
            "code": "void initialize_data_08004a84()\n{\n  int first_value;\n  int second_value;\n  int third_value;\n  int fourth_value;\n  int fifth_value;\n  int sixth_value;\n  int seventh_value;\n  int eighth_value;\n  int ninth_value;\n  int tenth_value;\n  int eleventh_value;\n  int twelfth_value;\n  int thirteenth_value;\n  int fourteenth_value;\n  int fifteenth_value;\n  int sixteenth_value;\n  int seventeenth_value;\n  int eighteenth_value;\n  int nineteenth_value;\n  int twentieth_value;\n  first_value = get_first_value();\n  PTR_DAT_08004bf0[0x30] = first_value;\n  second_value = get_second_value();\n  PTR_DAT_08004bf4[0x30] = second_value;\n  third_value = get_third_value();\n  PTR_DAT_08004bf8[0x30] = third_value;\n  if (check_value(PTR_DAT_08004bf0[0x30], 0) == 0) {\n    check_value(PTR_DAT_08004bf0[0x30], DAT_08004c00);\n  }\n  else {\n    check_value(PTR_DAT_08004bf0[0x30], DAT_08004bfc);\n  }\n  if (check_value(PTR_DAT_08004bf4[0x30], 0) == 0) {\n    check_value(PTR_DAT_08004bf4[0x30], DAT_08004c00);\n  }\n  else {\n    check_value(PTR_DAT_08004bf4[0x30], DAT_08004bfc);\n  }\n  if (check_value(PTR_DAT_08004bf0[1], 1) != 0) {\n    print_message(1, 1);\n    print_message(PTR_DAT_08004bf0);\n    print_message(PTR_DAT_08004bf4);\n    print_message(PTR_DAT_08004bf8);\n    if (PTR_DAT_08004c04[1] != 0) {\n      print_message(PTR_DAT_08004c08);\n      twentieth_value = FUNC_08000adc(PTR_DAT_08004c08[0x48], DAT_08004c0c);\n      PTR_DAT_08004c08[0x48] = twentieth_value;\n    }\n    PTR_DAT_08004c08[0x48] = PTR_DAT_08004c04[4];\n    if (PTR_DAT_08004c04[0] == 0) {\n      execute_function1();\n    }\n    else {\n      execute_function2(PTR_DAT_08004c08[0x48], PTR_DAT_08004bf0[0x48], PTR_DAT_08004bf4[0x48], PTR_DAT_08004bf8[0x48]);\n    }\n    execute_function3(PTR_DAT_08004bf0[4], DAT_08004c10);\n    fifteenth_value = get_current_value();\n    PTR_DAT_08004c14[3] = fifteenth_value;\n    execute_function3(PTR_DAT_08004bf0[8], DAT_08004c10);\n    sixteenth_value = get_current_value();\n    PTR_DAT_08004c14[4] = sixteenth_value;\n    execute_function3(PTR_DAT_08004bf4[4], DAT_08004c10);\n    seventeenth_value = get_current_value();\n    PTR_DAT_08004c14[0] = seventeenth_value;\n    execute_function3(PTR_DAT_08004bf4[8], DAT_08004c10);\n    eighteenth_value = get_current_value();\n    PTR_DAT_08004c14[1] = eighteenth_value;\n    execute_function3(PTR_DAT_08004bf4[0xc], DAT_08004c10);\n    nineteenth_value = get_current_value();\n    PTR_DAT_08004c14[2] = nineteenth_value;\n    execute_function3(PTR_DAT_08004bf8[4], DAT_08004c10);\n    twelfth_value = get_current_value();\n    PTR_DAT_08004c14[6] = twelfth_value;\n    execute_function3(PTR_DAT_08004bf8[8], DAT_08004c10);\n    thirteenth_value = get_current_value();\n    PTR_DAT_08004c14[7] = thirteenth_value;\n    execute_function3(PTR_DAT_08004bf8[0xc], DAT_08004c10);\n    fourteenth_value = get_current_value();\n    PTR_DAT_08004c14[8] = fourteenth_value;\n    execute_function3(PTR_DAT_08004c04[4], DAT_08004c10);\n    seventeenth_value = get_current_value();\n    PTR_DAT_08004c14[9] = seventeenth_value;\n    execute_function3(PTR_DAT_08004c04[8], DAT_08004c10);\n    eighteenth_value = get_current_value();\n    PTR_DAT_08004c14[10] = eighteenth_value;\n    execute_function3(PTR_DAT_08004c04[0xc], DAT_08004c10);\n    nineteenth_value = get_current_value();\n    PTR_DAT_08004c14[11] = nineteenth_value;\n    fifteenth_value = get_current_value();\n    PTR_DAT_08004c14[0xb] = fifteenth_value;\n  }\n  else {\n    execute_function1();\n    print_message(0, 1);\n  }\n}\n",
            "called": [
                "FUN_0800483c",
                "FUN_08002ec0",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_08003f3c",
                "FUN_08004a30",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080041c4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_data_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "initialize_data_structures_and_call_function_080041c4",
                "FUN_08003fc4": "initialize_first_data_structure",
                "FUN_08003fd0": "initialize_second_data_structure",
                "FUN_08003fdc": "initialize_third_data_structure",
                "FUN_08003fe8": "call_function_with_parameters",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "extraout_r1": "extraout_return"
            },
            "code": "void initialize_data_structures_and_call_function_080041c4(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 extraout_return;\n  \n  initialize_first_data_structure(0);\n  initialize_second_data_structure(0);\n  initialize_third_data_structure(0);\n  call_function_with_parameters(0, extraout_return, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "initialize_data_structures_and_call_function_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = FUN_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "calculate_080057d0",
                "param_1": "start",
                "param_2": "length",
                "param_3": "size",
                "param_4": "end",
                "uVar1": "result",
                "uVar2": "total_size"
            },
            "code": "uint calculate_080057d0(uint start, uint length, uint size, uint end)\n{\n  uint result;\n  uint total_size;\n  if (length != 0) {\n    if (size == 0) {\n      print_error();\n      result = size;\n    }\n    else {\n      total_size = get_total_size();\n      result = length;\n      if ((total_size < size) && (result = calculate_080057d0_size(start, size), result != 0)) {\n        print_result(result, length, size);\n        print_end(start, length);\n      }\n    }\n    return result;\n  }\n  result = calculate_080057d0_size(start, size, size, end);\n  return result;\n}",
            "called": [
                "FUN_08005630",
                "FUN_08005840",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "calculate_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "insert_into_linked_list_0800567c",
                "param_1": "head",
                "param_2": "size",
                "param_3": "data",
                "param_4": "error_code",
                "puVar1": "pointer_to_linked_list",
                "extraout_r1": "next_node",
                "ppiVar2": "next_node",
                "ppiVar3": "prev_node",
                "piVar4": "node_data",
                "ppiVar5": "current_node",
                "ppiVar6": "prev_node",
                "ppiVar7": "tail"
            },
            "code": "void insert_into_linked_list_0800567c(int **head, int size, int data, int *error_code) {\n  if (size == 0) {\n    return;\n  }\n  int **tail = (int **)(size - 4);\n  if (*(int *)(size - 4) < 0) {\n    tail = (int **)((int)tail + *(int *)(size - 4));\n  }\n  do_nothing_1();\n  int **current_node = *(int ***)PTR_DAT_08005710;\n  if (current_node == (int **)0x0) {\n    tail[1] = (int *)0x0;\n    *(int ***)PTR_DAT_08005710 = tail;\n    int **next_node = extraout_r1;\n    int **prev_node = (int **)PTR_DAT_08005710;\n  }\n  else if (tail < current_node) {\n    int **prev_node = (int **)*tail;\n    int **next_node = (int **)((int)tail + (int)prev_node);\n    if (current_node == next_node) {\n      int *node_data = *current_node;\n      current_node = (int **)current_node[1];\n      next_node = (int **)((int)node_data + (int)prev_node);\n      *tail = (int *)next_node;\n    }\n    tail[1] = (int *)current_node;\n    *(int ***)PTR_DAT_08005710 = tail;\n  }\n  else {\n    do {\n      int **prev_node = current_node;\n      int **next_node = (int **)current_node[1];\n      if (next_node == (int **)0x0) break;\n      current_node = next_node;\n    } while (next_node <= tail);\n    int **prev_node = (int **)*current_node;\n    if ((int **)((int)current_node + (int)prev_node) == tail) {\n      prev_node = (int **)((int)prev_node + (int)*tail);\n      *current_node = (int *)prev_node;\n      if (next_node == (int **)((int)current_node + (int)prev_node)) {\n        int *node_data = *next_node;\n        next_node = (int **)next_node[1];\n        prev_node = (int **)((int)prev_node + (int)node_data);\n        *current_node = (int *)prev_node;\n        current_node[1] = (int *)next_node;\n      }\n    }\n    else if (tail < (int **)((int)current_node + (int)prev_node)) {\n      *error_code = 0xc;\n    }\n    else {\n      int **next_node = (int **)((int)tail + (int)*tail);\n      if (next_node == (int **)current_node[1]) {\n        int *node_data = *next_node;\n        next_node = (int **)next_node[1];\n        prev_node = (int **)((int)node_data + (int)*tail);\n        *tail = (int *)prev_node;\n      }\n      tail[1] = (int *)next_node;\n      current_node[1] = (int *)tail;\n    }\n  }\n  do_nothing_2(error_code, prev_node, next_node, data);\n  return;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "insert_into_linked_list_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  FUN_08001128();\n  FUN_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  FUN_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  FUN_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = FUN_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = FUN_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = FUN_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = FUN_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = FUN_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = FUN_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = FUN_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        FUN_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = FUN_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = FUN_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = FUN_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  FUN_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = FUN_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = FUN_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = FUN_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = FUN_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          FUN_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = FUN_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = FUN_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = FUN_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = FUN_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  FUN_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08001754",
                "FUN_080025a4",
                "FUN_0800245c",
                "FUN_080023d0",
                "FUN_08002564",
                "FUN_08001128",
                "FUN_08004490",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08002724",
                "FUN_08001424"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08004fb4",
                "FUN_08000110",
                "FUN_08000134"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "swap_arguments_and_call_function_08000ffc",
                "param_1": "first_arg",
                "param_2": "second_arg",
                "FUN_08001004": "call_function_with_swapped_arguments"
            },
            "code": "void swap_arguments_and_call_function_08000ffc(undefined4 first_arg, undefined4 second_arg)\n{\n  call_function_with_swapped_arguments(second_arg, first_arg);\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "imported": false,
            "current_name": "swap_arguments_and_call_function_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_if_flag_set_080016f4",
                "param_1": "ptr_param",
                "param_2": "param_size",
                "iVar1": "start_time",
                "iVar2": "ptr_current"
            },
            "code": "int check_if_flag_set_080016f4(int *ptr_param, uint param_size) {\n    int start_time = get_start_time();\n    while (true) {\n        int ptr_current = *ptr_param;\n        if ((*(uint *)(ptr_current + 0x14) & 0x40) != 0) {\n            return 0;\n        }\n        if (*(int *)(ptr_current + 0x14) << 0x1b < 0) {\n            if ((param_size == 0) || (int current_time = get_current_time(), param_size < (uint)(current_time - start_time))) {\n                ptr_param[0xe] |= 0x20;\n                *(undefined *)((int)ptr_param + 0x35) = 0x20;\n                *(undefined *)(ptr_param + 0xd) = 0;\n                return 3;\n            }\n        }\n        else {\n            *(uint *)(ptr_current + 0x14) &= 0xffffffef;\n            ptr_param[0xe] = 0;\n            *(undefined *)(ptr_param + 0xd) = 0;\n            *(undefined *)((int)ptr_param + 0x35) = 0x20;\n            return 1;\n        }\n    }\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_if_flag_set_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "set_values_080025a4",
                "param_1": "values_array",
                "param_2": "parameters_array",
                "uVar1": "parameter_1",
                "uVar2": "return_value",
                "iVar3": "values_array_0",
                "uVar4": "parameter_2"
            },
            "code": "int set_values_080025a4(int *values_array, uint *parameters_array) {\n  uint parameter_1 = parameters_array[0];\n  uint parameter_2 = parameters_array[1];\n  int return_value = 2;\n  if (*(char *)(values_array + 14) != 1) {\n    *(undefined *)((int)values_array + 57) = 2;\n    int values_array_0 = *values_array;\n    *(uint *)(values_array_0 + 4) = *(uint *)(values_array_0 + 4) & 0xffffff8f;\n    *(uint *)(values_array_0 + 4) = *(uint *)(values_array_0 + 4) | parameter_1;\n    *(uint *)(values_array_0 + 8) = *(uint *)(values_array_0 + 8) & 0xffffff7f;\n    *(uint *)(values_array_0 + 8) = *(uint *)(values_array_0 + 8) | parameter_2;\n    *(undefined *)((int)values_array + 57) = 1;\n    return_value = 0;\n    *(undefined *)(values_array + 14) = 0;\n  }\n  return return_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_values_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "get_shifted_value_based_on_leading_zeros_08002220",
                "uVar1": "leading_zeroes_count",
                "PTR_DAT_0800224c": "pointer_data_1",
                "PTR_DAT_08002248": "pointer_data_2",
                "DAT_08002244": "data_1",
                "*(uint *)PTR_DAT_0800224c": "value_to_be_shifted",
                "*(uint *)(DAT_08002244 + 4)": "data_2"
            },
            "code": "uint get_shifted_value_based_on_leading_zeros_08002220(void)\n{\n  uint leading_zeroes_count = count_leading_zeroes(0xe00000);\n  uint shifted_value = *(uint *)PTR_DAT_0800224c >> PTR_DAT_08002248[(*(uint *)(DAT_08002244 + 4) & 0x700) >> (leading_zeroes_count & 0xff)];\n  return shifted_value;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "get_shifted_value_based_on_leading_zeros_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "read_MS5611_08003034",
                "param_1": "spi_handle",
                "param_2": "osr",
                "param_3": "adc_raw",
                "param_4": "num_bytes",
                "local_c": "adc_result",
                "PTR_s____Src_MS5611_c_08003064": "src",
                "DAT_08003068": "src_size"
            },
            "code": "uint read_MS5611_08003034(uint32_t spi_handle, uint8_t osr, uint32_t *adc_raw, uint8_t num_bytes, const uint8_t *PTR_s____Src_MS5611_c_08003064, uint32_t DAT_08003068, uint32_t dest)\n{\n  uint32_t adc_result;\n  adc_result = dest;\n  spi_transfer(spi_handle, 0xee, NULL, 0, &adc_result, num_bytes);\n  memcpy(PTR_s____Src_MS5611_c_08003064, &adc_result, DAT_08003068);\n  return (uint)adc_result;\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "read_MS5611_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "set_flag_if_param_equals_constant_08004e7c",
                "param_1": "param",
                "DAT_08004edc": "constant",
                "*(uint *)(DAT_08004edc + 0xd818)": "flag",
                "local_18": "value1",
                "local_14": "value2",
                "local_10": "value3",
                "local_c": "unused"
            },
            "code": "set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7coset_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c+set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cfset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7cpset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7crset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7cmset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cqset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7cpset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7crset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7cmset_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c{set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cfset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7cpset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7crset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7cmset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c{set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c+set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c+set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c*set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c+set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c|set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7c2set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c2set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c2set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7ciset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c3set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c3set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c,set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c&set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c2set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c3set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c=set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7cDset_flag_if_param_equals_constant_08004e7cAset_flag_if_param_equals_constant_08004e7cTset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c8set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c4set_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c,set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c&set_flag_if_param_equals_constant_08004e7cvset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7clset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c1set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7cmset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7cgset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7c2set_flag_if_param_equals_constant_08004e7c5set_flag_if_param_equals_constant_08004e7c,set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c,set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7cmset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7csset_flag_if_param_equals_constant_08004e7caset_flag_if_param_equals_constant_08004e7cgset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c_set_flag_if_param_equals_constant_08004e7ccset_flag_if_param_equals_constant_08004e7coset_flag_if_param_equals_constant_08004e7cdset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7c(set_flag_if_param_equals_constant_08004e7c0set_flag_if_param_equals_constant_08004e7cxset_flag_if_param_equals_constant_08004e7c2set_flag_if_param_equals_constant_08004e7c5set_flag_if_param_equals_constant_08004e7c)set_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c}set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7c set_flag_if_param_equals_constant_08004e7crset_flag_if_param_equals_constant_08004e7ceset_flag_if_param_equals_constant_08004e7ctset_flag_if_param_equals_constant_08004e7cuset_flag_if_param_equals_constant_08004e7crset_flag_if_param_equals_constant_08004e7cnset_flag_if_param_equals_constant_08004e7c;set_flag_if_param_equals_constant_08004e7c\nset_flag_if_param_equals_constant_08004e7c}set_flag_if_param_equals_constant_08004e7c",
            "called": [
                "FUN_080011fc",
                "FUN_08001194",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "set_flag_if_param_equals_constant_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "update_flags_08001530",
                "param_1": "flag_array",
                "param_2": "flag_value_1",
                "param_3": "flag_value_2",
                "param_4": "flag_check",
                "param_5": "flag_mask",
                "iVar1": "i",
                "iVar2": "j",
                "puVar3": "flag_ptr",
                "ppuVar4": "flag_array_ptr",
                "uVar5": "flag_val_1",
                "uVar6": "flag_val_2",
                "iVar3": "ret_val",
                "flag_masked": "flag_masked"
            },
            "code": "int update_flags_08001530(uint **flag_array, uint flag_value_1, uint flag_value_2, int flag_check, uint flag_mask) {\n  int i = 0;\n  int j = 0;\n  uint *flag_ptr = NULL;\n  uint **flag_array_ptr = flag_array;\n  uint flag_val_1 = flag_value_1;\n  uint flag_val_2 = flag_value_2;\n  int ret_val = 0;\n  uint flag_masked = 0;\n\n  **flag_array = **flag_array | 0x100;\n  i = FUN_0800115c();\n\n  while (1) {\n    flag_ptr = *flag_array_ptr;\n\n    while ((int)(flag_ptr[5] << 0x1f) >= 0) {\n      if (flag_mask == 0xffffffff) {\n        break;\n      }\n      j = FUN_0800115c();\n\n      if (flag_mask < (uint)(j - i)) {\n        *(undefined *)((int)flag_array_ptr + 0x35) = 0x20;\n        *(undefined *)(flag_array_ptr + 0xd) = 0;\n        return 3;\n      }\n    }\n\n    flag_ptr[4] = flag_val_1 & 0xfe;\n    ret_val = FUN_08001460(flag_array, DAT_080015e4, flag_mask, flag_ptr, flag_array_ptr, flag_val_1, flag_val_2);\n\n    if (ret_val == 0) {\n      ret_val = FUN_080014e2(flag_array, flag_mask, (*flag_array)[5], (*flag_array)[6]);\n\n      if (ret_val == 0) {\n        flag_ptr = *flag_array_ptr;\n\n        if (flag_check == 1) {\n          flag_ptr[4] = flag_value_2 & 0xff;\n          return ret_val;\n        }\n\n        flag_ptr[4] = flag_value_2 >> 8;\n        ret_val = FUN_080014e2(flag_array, flag_mask);\n\n        if (ret_val == 0) {\n          flag_ptr = *flag_array_ptr;\n          flag_ptr[4] = flag_value_2 & 0xff;\n          return ret_val;\n        }\n      }\n\n      if ((*flag_array_ptr)[0xe] != (uint *)0x4) {\n        return 3;\n      }\n\n      **flag_array = **flag_array | 0x200;\n    }\n    else {\n      if ((*flag_array_ptr)[0xe] != (uint *)0x4) {\n        return 3;\n      }\n\n      return 1;\n    }\n  }\n}",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "update_flags_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_param_1_in_ptr_dat_08003314",
                "param_1": "param",
                "PTR_DAT_0800331c": "PTR_DAT"
            },
            "code": "void set_param_1_in_ptr_dat_08003314(undefined4 param){\n  *(undefined4 *)PTR_DAT_0800331c_0800331c = param;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "set_param_1_in_ptr_dat_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "FUN_08005854": "process_data_08005854",
                "param_1": "data1",
                "param_2": "data2",
                "puVar1": "flag_ptr",
                "iVar2": "error_code",
                "puVar3": "ptr1",
                "piVar4": "ptr2",
                "uVar5": "return_value",
                "uVar6": "temp_value",
                "local_48": "flag1",
                "local_44": "flag2_ptr",
                "local_40": "data3",
                "uStack_3c": "data4",
                "local_38": "data5",
                "uStack_34": "data6",
                "local_30": "function_return_value",
                "local_28": "result1",
                "PTR_DAT_080058f8": "flag_ptr_080058f8",
                "PTR_DAT_080058f0": "flag2_ptr_080058f0",
                "DAT_080058ec": "flag2_080058ec",
                "PTR_DAT_080058f4": "flag3_080058f4",
                "FUNC_08005c70": "get_return_value_08005c70",
                "FUN_08000a04": "check_data_08000a04",
                "do_nothing_0800708c": "do_nothing_0800708c",
                "FUN_080009f0": "check_error_080009f0",
                "FUN_080070a4": "perform_function_080070a4",
                "FUN_0800709e": "check_error_0800709e",
                "FUN_080072ac": "allocate_memory_080072ac"
            },
            "code": "undefined8 process_data_08005854(undefined4 data1, undefined4 data2)\n{\n  undefined *flag_ptr;\n  int result1;\n  undefined4 *ptr1;\n  int *ptr2;\n  undefined8 return_value;\n  undefined8 temp_value;\n  undefined4 flag1;\n  undefined *flag2_ptr;\n  undefined4 data3;\n  undefined4 data4;\n  undefined4 data5;\n  undefined4 data6;\n  undefined8 function_return_value;\n  int error_code;\n  \n  return_value = get_return_value_08005c70();\n  flag_ptr = PTR_DAT_080058f8;\n  if (*flag_ptr == -1) {\n    return return_value;\n  }\n  result1 = check_data_08000a04(data1, data2, data1, data2);\n  if (result1 != 0) {\n    return return_value;\n  }\n  temp_value = do_nothing_0800708c(data1, data2);\n  error_code = check_error_080009f0((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0,DAT_080058ec);\n  if (error_code == 0) {\n    return return_value;\n  }\n  flag1 = 1;\n  flag2_ptr = PTR_DAT_080058f0;\n  data3 = data1;\n  data4 = data2;\n  data5 = data1;\n  data6 = data2;\n  function_return_value = perform_function_080070a4(PTR_DAT_080058f4);\n  if (*flag_ptr != '\\x02') {\n    error_code = check_error_0800709e(&flag1);\n    if (error_code != 0) {\n      goto LAB_080058d0;\n    }\n  }\n  ptr1 = (undefined4 *)allocate_memory_080072ac();\n  *ptr1 = 0x21;\nLAB_080058d0:\n  if (result1 != 0) {\n    ptr2 = (int *)allocate_memory_080072ac();\n    *ptr2 = result1;\n  }\n  return function_return_value;\n}",
            "called": [
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080070a4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "process_data_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "is_input_null_08001014",
                "in_ZR": "input_char",
                "FUN_08001004": "execute_input_function"
            },
            "code": "bool is_input_null_08001014(void)\\n{\\n  char input_char;\\n  execute_input_function();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "is_input_null_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_result_080071c0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "shifted_second_param",
                "iVar2": "sum",
                "uVar3": "fourth_param_copy",
                "uVar4": "PTR_DAT_08007284_copy",
                "uVar5": "upper_half_of_result",
                "uVar6": "result"
            },
            "code": "ulonglong calculate_result_080071c0(uint32_t first_param, uint32_t second_param, int third_param, uint32_t fourth_param) {\n  uint32_t uVar1;\n  int iVar2;\n  uint32_t uVar3;\n  uint32_t uVar4;\n  uint32_t uVar5;\n  ulonglong result;\n  \n  result = CONCAT44(second_param, first_param);\n  uVar1 = (second_param << 1) >> 0x15;\n  if (uVar1 == 0) {\n    if ((second_param & 0x7fffffff | first_param) == 0) {\n      return result;\n    }\n    result = do_first_calculation(first_param, second_param, 0, fourth_param);\n    uVar3 = fourth_param;\n    uVar4 = PTR_DAT_08007284;\n    if (third_param < PTR_DAT_08007294) {\n      goto LAB_0800722e;\n    }\n    uVar1 = ((uint32_t)((int64_t)(result >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (uVar1 == 0x7ff) {\n    result = do_second_calculation(first_param, second_param, first_param, second_param, fourth_param);\n    return result;\n  }\n  uVar5 = (uint32_t)(result >> 0x20);\n  iVar2 = uVar1 + third_param;\n  if (iVar2 < 0x7ff) {\n    if (0 < iVar2) {\n      return result & 0xffffffff | (ulonglong)(uVar5 & 0x800fffff | iVar2 * 0x100000) << 0x20;\n    }\n    if (iVar2 + 0x35 < 0 == SCARRY4(iVar2,0x35)) {\n      result = result & 0xffffffff | (ulonglong)(uVar5 & 0x800fffff | (iVar2 + 0x36) * 0x100000) << 0x20;\n      uVar3 = 0;\n      uVar4 = PTR_DAT_08007298;\n      goto LAB_0800722e;\n    }\n    if (third_param < 0xc351) {\n      result = do_third_calculation(PTR_DAT_08007280, PTR_DAT_08007284, (int)result, uVar5);\n      uVar3 = PTR_DAT_08007280;\n      uVar4 = PTR_DAT_08007284;\n      goto LAB_0800722e;\n    }\n  }\n  result = do_fourth_calculation(PTR_DAT_08007288, PTR_DAT_0800728c, (int)result, uVar5);\n  uVar3 = PTR_DAT_08007288;\n  uVar4 = PTR_DAT_0800728c;\nLAB_0800722e:\n  result = do_first_calculation((int)result, (int)(result >> 0x20), uVar3, uVar4);\n  return result;\n}\n",
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_result_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_character_in_string_08005614",
                "param_1": "str",
                "param_2": "ch",
                "param_3": "str_length",
                "pcVar1": "current_char",
                "pcVar2": "current_char"
            },
            "code": "char* find_character_in_string_08005614(char* str, char ch, int str_length)\n{\n  char* current_char = str;\n  while (*current_char != ch)\n  {\n    if (current_char == str + str_length)\n    {\n      return (char*)0x0;\n    }\n    current_char++;\n  }\n  return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_character_in_string_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_by_32_bits_080070a4",
                "DAT_080070ac": "global_data"
            },
            "code": "unsigned long long shift_left_by_32_bits_080070a4(void)\n{\n  unsigned long long shifted_value = (unsigned long long)DAT_080070ac << 0x20;\n  return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "shift_left_by_32_bits_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "check_data_validity_and_return_value_0800407c",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "output_param_1",
                "param_4": "output_param_2",
                "iVar1": "function_return_value",
                "local_14": "local_array",
                "PTR_DAT_080040b4": "PTR_DAT_080040b4"
            },
            "code": "int check_data_validity_and_return_value_0800407c(int input_param_1, int input_param_2, int output_param_1, int output_param_2)\n{\n  int function_return_value;\n  int local_array[2] = {0, 0};\n  function_return_value = function_08001938(PTR_DAT_080040b4, input_param_1, input_param_2, 1, local_array, 1, 200);\n  if (function_return_value != 0) {\n    function_08004490(output_param_1, output_param_2);\n  }\n  return local_array[0];\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_080040e8"
            ],
            "imported": false,
            "current_name": "check_data_validity_and_return_value_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = FUN_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = FUN_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = FUN_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = FUN_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = FUN_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = FUN_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": false,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08002f28();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004a84();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = FUN_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = FUN_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = FUN_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = FUN_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = FUN_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    FUN_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = FUN_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    FUN_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = FUN_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000c44",
                "FUN_08005900",
                "FUN_08003034",
                "FUN_08004348",
                "FUN_08002f28",
                "FUN_080043bc",
                "FUN_08004410",
                "thunk_FUN_0800115c",
                "FUN_0800403c",
                "FUN_08000a30",
                "FUN_08001078",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08000428",
                "FUN_08004434",
                "FUN_08000adc",
                "FUN_08004384",
                "FUN_08004a84",
                "FUN_08000168",
                "FUN_08000e54",
                "FUN_08004458"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_data_struct_080022d0",
                "param_1": "struct_address",
                "param_2": "data_array",
                "uVar1": "data1",
                "uVar2": "data2",
                "uVar3": "data3",
                "bitmask1": "0xfffffeff",
                "bitmask2": "0xfffffdff",
                "bitmask3": "0xfffff7ff",
                "bitmask4": "0xfffffbff"
            },
            "code": "void update_data_struct_080022d0(int struct_address, uint *data_array)\n{\n  uint bitmask1 = 0xfffffeff;\n  uint bitmask2 = 0xfffffdff;\n  uint bitmask3 = 0xfffff7ff;\n  uint bitmask4 = 0xfffffbff;\n  uint data1 = *(uint *)(struct_address + 0x20);\n  uint data2 = *(uint *)(struct_address + 4);\n  uint data3 = *data_array;\n  uint data4 = data_array[2] << 8;\n  if (struct_address == PTR_08002320) {\n    data4 |= data_array[3] << 8;\n    data2 = (data2 & 0xffffcfff) | ((data_array[5] | data_array[6]) << 4);\n    data1 = (data1 & bitmask2) | data4;\n    data1 &= bitmask4;\n  }\n  else {\n    data1 &= bitmask2;\n  }\n  *(uint *)(struct_address + 4) = data2;\n  *(uint *)(struct_address + 0x1c) = (*(uint *)(struct_address + 0x1c) & 0xffffff8c) | data3;\n  *(uint *)(struct_address + 0x3c) = data_array[1];\n  *(uint *)(struct_address + 0x20) = data1;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_struct_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "calculate_shifted_value_080010c4",
                "param_1": "input_value",
                "uVar1": "shifted_value"
            },
            "code": "uint calculate_shifted_value_080010c4(uint input_value)\n{\n  uint shifted_value;\n  \n  if (((input_value & 0x80000000) != 0) || (input_value << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shifted_value = 0x9e - ((input_value << 1) >> 0x18);\n  if (-1 < (int)shifted_value) {\n    return (input_value << 8 | 0x80000000) >> (shifted_value & 0xff);\n  }\n  if ((shifted_value == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "process_data_080040b8",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "param_4": "data_4",
                "param_5": "result_1",
                "param_6": "result_2",
                "iVar1": "status",
                "FUNC_08001938": "call_function",
                "PTR_DAT_080040e4": "PTR_DATA_ARRAY",
                "FUN_08004490": "handle_error"
            },
            "code": "void process_data_080040b8(undefined4 data_1, undefined4 data_2, undefined4 data_3, undefined4 data_4, undefined4 result_1, undefined4 result_2)\n{\n  int status = call_function(PTR_DAT_080040e4, data_1, data_2, 1, data_3, data_4, 200, data_4);\n  if (status != 0) {\n    handle_error(result_1, result_2);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "process_data_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "process_data_0800245c",
                "param_1": "data",
                "param_2": "param_2",
                "param_3": "param_3",
                "extraout_r1": "result_1",
                "extraout_r1_00": "result_1",
                "extraout_r1_01": "result_2",
                "extraout_r1_02": "result_1",
                "iVar1": "index_1",
                "uVar2": "result_2",
                "iVar3": "data_address"
            },
            "code": "void process_data_0800245c(int *data, int param_2, int param_3) {\n  int index_1;\n  int index_2;\n  int index_3;\n  int result_1;\n  uint result_2;\n  int data_address = (int)data;\n\n  if (*(char *)(data_address + 0xe) == '\\x01') {\n    return;\n  }\n\n  *(undefined *)(data_address + 0x39) = 2;\n  *(undefined *)(data_address + 0xe) = 1;\n\n  switch(param_3) {\n    case 0:\n      index_1 = *data;\n      FUN_08002280(index_1);\n      result_1 = *(int *)(index_1 + 0x10);\n      *(uint *)(index_1 + 0x18) = (*(uint *)(index_1 + 0x18) | 8) & 0xfffffffb | result_1;\n      break;\n    case 4:\n      index_2 = *data;\n      FUN_08002404(index_2);\n      result_1 = *(int *)(index_2 + 0x10);\n      *(uint *)(index_2 + 0x18) = (*(uint *)(index_2 + 0x18) | 0x800) & 0xfffffbff | (result_1 << 8);\n      break;\n    case 8:\n      index_3 = *data;\n      FUN_080022d0(index_3);\n      result_2 = *(uint *)(index_3 + 0x10);\n      *(uint *)(index_3 + 0x1c) = (*(uint *)(index_3 + 0x1c) | 8) & 0xfffffffb | result_2;\n      goto LAB_080024fa;\n    case 0xc:\n      index_3 = *data;\n      FUN_08002324(index_3);\n      result_1 = *(int *)(index_3 + 0x10);\n      *(uint *)(index_3 + 0x1c) = (*(uint *)(index_3 + 0x1c) | 0x800) & 0xfffffbff | (result_1 << 8);\n      result_2 = *(uint *)(index_3 + 0x1c);\nLAB_080024fa:\n      *(uint *)(index_3 + 0x1c) = result_2;\n      break;\n    default:\n      break;\n  }\n\n  *(undefined *)(data_address + 0x39) = 1;\n  *(undefined *)(data_address + 0xe) = 0;\n}\n",
            "called": [
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "print_error_message_and_wait_08004490",
                "param_1": "error_code",
                "param_2": "line_number",
                "puVar2": "at_line_message",
                "puVar3": "error_message",
                "uVar1": "control_bits",
                "DAT_08004508": "initial_control_bits",
                "PTR_s_Error_with_08004510": "error_message_string",
                "PTR_s__at_line__0800450c": "at_line_message_string",
                "FUN_08001424": "send_control_bits",
                "FUN_0800142e": "send_control_bits_with_delay",
                "FUN_08004c8c": "print_integer",
                "FUN_08004cac": "print_newline",
                "FUN_08004c18": "print_string",
                "thunk_do_nothing_08001168": "wait"
            },
            "code": "void print_error_message_and_wait_08004490(unsigned int error_code, unsigned int line_number)\n{\n  unsigned int control_bits = 0x4000 | 0x8000 | 0x2000;\n  char* error_message = \"Error with\";\n  char* at_line_message = \" at line \";\n  do {\n    send_control_bits(control_bits);\n    print_string(error_message);\n    print_integer(error_code);\n    print_string(at_line_message);\n    print_integer(line_number);\n    print_newline();\n    wait(500);\n  } while( true );\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "FUN_08004c8c",
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_080040b8",
                "FUN_0800403c",
                "FUN_0800407c",
                "FUN_0800458c",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "print_error_message_and_wait_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "set_bit_and_flag_080015e8",
                "param_1": "ptr_param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5",
                "iVar1": "current_iVar1",
                "iVar2": "current_iVar2",
                "puVar3": "current_ptr",
                "ppuVar4": "ptr_ppuVar4",
                "uVar5": "current_uVar5",
                "uVar6": "current_uVar6"
            },
            "code": "int set_bit_and_flag_080015e8(uint **ptr_param_1, uint param_2, uint param_3, int param_4, uint param_5) {\n    int iVar1;\n    int iVar2;\n    uint *current_ptr = *ptr_param_1;\n    current_ptr[0] |= 0x400;\n    current_ptr[0] |= 0x100;\n    uint ** ptr_ppuVar4 = ptr_param_1;\n    uint current_uVar5 = param_2;\n    uint current_uVar6 = param_3;\n    iVar1 = FUN_0800115c();\n\nLAB_0800160e:\n    current_ptr = *ptr_param_1;\n    while (-1 < (int)(current_ptr[5] << 0x1f)) {\n        if (param_5 != 0xffffffff) {\n            goto code_r0x08001658;\n        }\n    }\n    current_ptr[4] = param_2 & 0xfe;\n    iVar1 = FUN_08001460(ptr_param_1, DAT_080016f0, param_5, current_ptr, ptr_ppuVar4, current_uVar5, current_uVar6);\n    if (iVar1 != 0) {\n        goto LAB_080016ba;\n    }\n    iVar1 = FUN_080014e2(ptr_param_1, param_5, (*ptr_param_1)[5], (*ptr_param_1)[6]);\n    if (iVar1 == 0) {\n        current_ptr = *ptr_param_1;\n        if (param_4 != 1) {\n            current_ptr[4] = param_3 >> 8;\n            iVar1 = FUN_080014e2(ptr_param_1, param_5);\n            if (iVar1 != 0) {\n                goto LAB_08001642;\n            }\n            current_ptr = *ptr_param_1;\n        }\n        current_ptr[4] = param_3 & 0xff;\n        iVar1 = FUN_080014e2(ptr_param_1, param_5);\n        if (iVar1 == 0) {\n            **ptr_param_1 = **ptr_param_1 | 0x100;\n            iVar1 = FUN_0800115c();\n            do {\n                do {\n                    if ((int)((*ptr_param_1)[5] << 0x1f) < 0) {\n                        (*ptr_param_1)[4] = param_2 & 0xff | 1;\n                        iVar1 = FUN_08001460(ptr_param_1, DAT_080016f0, param_5);\n                        if (iVar1 == 0) {\n                            return 0;\n                        }\nLAB_080016ba:\n                        if (ptr_param_1[0xe] != (uint *)0x4) {\n                            return 3;\n                        }\n                        return 1;\n                    }\n                } while (param_5 == 0xffffffff);\n            } while ((param_5 != 0) && (iVar2 = FUN_0800115c(), (uint)(iVar2 - iVar1) <= param_5));\nLAB_0800165a:\n            *(undefined *)((int)ptr_param_1 + 0x35) = 0x20;\n            *(undefined *)(ptr_param_1 + 0xd) = 0;\n            return 3;\n        }\n    }\nLAB_08001642:\n    if (ptr_param_1[0xe] == (uint *)0x4) {\n        **ptr_param_1 = **ptr_param_1 | 0x200;\n        return 1;\n    }\n    return 3;\n\ncode_r0x08001658:\n    if ((param_5 == 0) || (iVar2 = FUN_0800115c(), param_5 < (uint)(iVar2 - iVar1))) {\n        goto LAB_0800165a;\n    }\n    goto LAB_0800160e;\n}",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "set_bit_and_flag_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "check_input_and_call_func_08004e14",
                "param_1": "input_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "iVar2": "input_value",
                "uVar1": "func_constant_ptr",
                "local_18": "func_arg",
                "local_14": "unused_var",
                "uStack_10": "unused_var",
                "local_c": "unused_var",
                "DAT_08004e6c": "FUNC_CONSTANT_PTR",
                "DAT_08004e68": "INPUT_CONSTANT_A",
                "0x40000000": "INPUT_CONSTANT_B",
                "DAT_08004e74": "FUNC_CONSTANT_C",
                "DAT_08004e70": "INPUT_CONSTANT_C",
                "DAT_08004e78": "INPUT_CONSTANT_D",
                "FUN_08001264": "call_function"
            },
            "code": "void check_input_and_call_func_08004e14(int *input_ptr, undefined4 param_2, undefined4 param_3) {\n  int input_value = *input_ptr;\n  undefined4 func_arg;\n  undefined4 func_id;\n  if (input_value == DAT_08004e68) {\n    func_arg = 0x800;\n    func_id = FUNC_CONSTANT_A;\n  }\n  else if (input_value == INPUT_CONSTANT_B) {\n    func_arg = 2;\n    func_id = FUNC_CONSTANT_B;\n  }\n  else {\n    func_id = DAT_08004e74;\n    if (input_value == DAT_08004e70) {\n      func_arg = 3;\n    }\n    else if (input_value == DAT_08004e78) {\n      func_arg = 0x300;\n    }\n    else {\n      return;\n    }\n  }\n  undefined4 func_constant_ptr = DAT_08004e6c;\n  undefined4 func_arg_ptr = &func_arg;\n  call_function(func_constant_ptr, func_arg_ptr);\n}\n",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_input_and_call_func_08004e14"
        }
    },
    "used_tokens": 149387,
    "layers": [
        [
            "FUN_080050fc",
            "FUN_08003320",
            "FUN_08004410",
            "FUN_08001264",
            "FUN_08002ea0",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_08001028",
            "FUN_080006ac",
            "FUN_08001828",
            "FUN_08004c64",
            "FUN_08007092",
            "FUN_0800290c",
            "FUN_08002f28",
            "FUN_08004384",
            "FUN_080009a0",
            "FUN_08003298",
            "FUN_08004300",
            "FUN_08005630",
            "FUN_08000980",
            "FUN_08004028",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08005bc8",
            "FUN_08001436",
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_08000904",
            "FUN_0800299a",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_080014e2",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080009b4",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000990",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08004434",
            "FUN_08006c0c",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080040e8",
            "FUN_08004ffc",
            "FUN_0800115c",
            "FUN_08002d88",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_080025e8",
            "FUN_08002b48",
            "FUN_08004f68",
            "FUN_08001170",
            "FUN_08002bf0",
            "FUN_08002ad0",
            "FUN_08001050",
            "FUN_080009c8",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_080043bc",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_0800209c",
            "FUN_0800403c",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08004cac",
            "FUN_08004c18",
            "FUN_0800483c",
            "FUN_08004c8c",
            "FUN_08001460",
            "FUN_08001064",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08004458",
            "FUN_08000134",
            "FUN_08003eb0",
            "FUN_08002ee8",
            "FUN_08001104",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002cb0",
            "FUN_08004348",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08001754",
            "FUN_08003ec8",
            "FUN_08002724",
            "FUN_08003fe8",
            "FUN_08005714",
            "FUN_08004fb4",
            "FUN_080043f0",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_08000a30",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003fdc",
            "FUN_080009f0",
            "FUN_08004f10",
            "FUN_08005044",
            "FUN_08004194",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08003f3c",
            "FUN_08002214",
            "FUN_08001004",
            "FUN_08003ff4",
            "FUN_080041ae",
            "FUN_08001128",
            "FUN_08004514",
            "FUN_08004a84",
            "FUN_080041c4",
            "FUN_080057d0",
            "FUN_0800567c",
            "FUN_08000ffc",
            "FUN_080016f4",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003034",
            "FUN_08004e7c",
            "FUN_08001530",
            "FUN_08003314",
            "FUN_08005854",
            "FUN_08001014",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_0800407c",
            "FUN_080022d0",
            "FUN_080010c4",
            "FUN_080040b8",
            "FUN_0800245c",
            "FUN_08004490",
            "FUN_080015e8",
            "FUN_08004e14"
        ]
    ],
    "locked_functions": []
}