{
    "functions": {
        "FUN_08002470": {
            "renaming": {
                "FUN_08002470": "update_data_08002470",
                "param_1": "data",
                "PTR_DAT_08002490": "ptr",
                "DAT_08002490": "ptr_offset",
                "mask": "mask",
                "new_data": "new_data",
                "old_data": "old_data"
            },
            "code": "void update_data_08002470(uint data) {\n    uint* PTR_DAT_08002490 = (uint*)(DAT_08002490 + 0xc);\n    uint mask = 0x5fa0000;\n    uint new_data = (data & 0x7) << 8;\n    uint old_data = *PTR_DAT_08002490 & 0xf8ff;\n    *PTR_DAT_08002490 = old_data | new_data | mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002470",
            "calling": [
                "FUN_08001c88",
                "FUN_08005f5e"
            ],
            "imported": false,
            "current_name": "update_data_08002470"
        },
        "FUN_08007004": {
            "renaming": {
                "FUN_08007004": "initialize_param_08007004",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "puVar1": "ptr",
                "iVar2": "result"
            },
            "code": "void initialize_param_08007004(int *output, undefined4 input1, undefined4 input2, undefined4 input3)\n{\n    undefined *ptr = PTR_DAT_08007024;\n    *(undefined4 *)PTR_DAT_08007024 = 0;\n    int result = FUN_0800571a(input1, input2, input2, 0, input3);\n    if (result == -1 && *(int *)ptr != 0)\n    {\n        *output = *(int *)ptr;\n    }\n    return;\n}",
            "called": [
                "FUN_0800571a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007004",
            "calling": [
                "FUN_08006dc8"
            ],
            "imported": false,
            "current_name": "initialize_param_08007004"
        },
        "FUN_08006394": {
            "renaming": {
                "FUN_08006394": "FUNC_08006394"
            },
            "code": "\nint FUNC_08006394(int param_1,undefined *param_2,byte *param_3,int *param_4)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  bool bVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  int unaff_r9;\n  int iVar7;\n  int *local_8c;\n  uint local_88;\n  int local_84;\n  undefined4 local_80;\n  int local_7c;\n  int local_74;\n  byte local_70;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_45;\n  undefined4 local_30;\n  \n  local_8c = param_4;\n  if ((param_1 != 0) && (*(int *)(param_1 + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (param_2 == PTR_DAT_080065a0) {\n    param_2 = *(undefined **)(param_1 + 4);\n  }\n  else if (param_2 == PTR_DAT_080065a8) {\n    param_2 = *(undefined **)(param_1 + 8);\n  }\n  else if (param_2 == PTR_DAT_080065ac) {\n    param_2 = *(undefined **)(param_1 + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(param_2 + 0xc) << 0x1c)) || (*(int *)(param_2 + 0x10) == 0)) &&\n     (iVar7 = FUN_080069e4(param_1,param_2), iVar7 != 0)) {\n    return -1;\n  }\n  local_74 = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  pbVar5 = param_3;\nLAB_080063d6:\n  pbVar6 = pbVar5;\n  if (*pbVar6 != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  pbVar5 = pbVar6 + 1;\n  if (*pbVar6 != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  iVar7 = (int)pbVar6 - (int)param_3;\n  if (iVar7 != 0) {\n    iVar2 = FUN_08006370(param_1,param_2,param_3,iVar7);\n    if (iVar2 == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(param_2 + 0xc) << 0x19) < 0) {\n        return -1;\n      }\n      return local_74;\n    }\n    local_74 = local_74 + iVar7;\n  }\n  if (*pbVar6 == 0) goto LAB_08006580;\n  local_88 = 0;\n  local_7c = 0;\n  local_84 = -1;\n  local_80 = 0;\n  local_45 = 0;\n  local_30 = 0;\n  pbVar5 = pbVar6 + 1;\n  while( true ) {\n    iVar7 = FUN_08006e90(PTR_s___0__080065a4,*pbVar5);\n    puVar1 = PTR_DAT_080065b0;\n    param_3 = pbVar5 + 1;\n    if (iVar7 == 0) break;\n    local_88 = 1 << (iVar7 - (int)PTR_s___0__080065a4 & 0xffU) | local_88;\n    pbVar5 = param_3;\n  }\n  if ((int)(local_88 << 0x1b) < 0) {\n    local_45 = 0x20;\n  }\n  if ((int)(local_88 << 0x1c) < 0) {\n    local_45 = 0x2b;\n  }\n  if (*pbVar5 == 0x2a) {\n    piVar3 = local_8c + 1;\n    iVar7 = *local_8c;\n    local_8c = piVar3;\n    if (-1 < iVar7) goto LAB_080064b0;\n    local_7c = -iVar7;\n    local_88 = local_88 | 2;\n  }\n  else {\n    bVar4 = false;\n    iVar7 = local_7c;\n    param_3 = pbVar5;\n    while( true ) {\n      if (9 < *param_3 - 0x30) break;\n      iVar7 = iVar7 * 10 + (*param_3 - 0x30);\n      bVar4 = true;\n      param_3 = param_3 + 1;\n    }\n    if (bVar4) {\nLAB_080064b0:\n      local_7c = iVar7;\n    }\n  }\n  if (*param_3 == 0x2e) {\n    if (param_3[1] == 0x2a) {\n      param_3 = param_3 + 2;\n      piVar3 = local_8c + 1;\n      local_84 = *local_8c;\n      local_8c = piVar3;\n      if (local_84 < 0) {\n        local_84 = -1;\n      }\n    }\n    else {\n      bVar4 = false;\n      iVar7 = 0;\n      local_84 = 0;\n      while( true ) {\n        param_3 = param_3 + 1;\n        if (9 < *param_3 - 0x30) break;\n        iVar7 = iVar7 * 10 + (*param_3 - 0x30);\n        bVar4 = true;\n      }\n      if (bVar4) {\n        local_84 = iVar7;\n      }\n    }\n  }\n  iVar7 = FUN_08006e90(PTR_DAT_080065b0,*param_3,3);\n  if (iVar7 != 0) {\n    param_3 = param_3 + 1;\n    local_88 = local_88 | 0x40 << (iVar7 - (int)puVar1 & 0xffU);\n  }\n  local_70 = *param_3;\n  param_3 = param_3 + 1;\n  iVar7 = FUN_08006e90(PTR_s_efgEFG_080065b4,local_70,6);\n  if (iVar7 == 0) {\n    iVar7 = FUNC_080066b0(param_1,&local_88,param_2,DAT_080065bc,&local_8c);\n  }\n  else {\n    iVar7 = param_1;\n    if (DAT_080065b8 == 0) {\n      local_8c = (int *)(((int)local_8c + 7U & 0xfffffff8) + 8);\n      iVar7 = unaff_r9;\n      goto LAB_08006532;\n    }\n  }\n  if (iVar7 == -1) goto LAB_08006580;\nLAB_08006532:\n  local_74 = local_74 + iVar7;\n  pbVar5 = param_3;\n  unaff_r9 = iVar7;\n  goto LAB_080063d6;\n}\n\n",
            "called": [
                "FUN_08006e90",
                "FUN_080066b0",
                "FUN_080069e4",
                "FUN_08006cb4",
                "FUN_08006370"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006394",
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "imported": false,
            "current_name": "FUNC_08006394"
        },
        "FUN_08005740": {
            "renaming": {
                "FUN_08005740": "set_pointer_value_to_22_08005740",
                "PTR_DAT_0800574c": "ptr"
            },
            "code": "void set_pointer_value_to_22_08005740(void)\n{\n  int* PTR_DAT_0800574c = (int*)PTR_DAT_0800574c;\n  *PTR_DAT_0800574c = 22;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005740",
            "calling": [
                "FUN_08006f00"
            ],
            "imported": false,
            "current_name": "set_pointer_value_to_22_08005740"
        },
        "FUN_08006158": {
            "renaming": {
                "FUN_08006158": "get_result_if_not_initialized_08006158",
                "param_1": "input_value",
                "param_2": "initialized_value"
            },
            "code": "longlong get_result_if_not_initialized_08006158(uint input_value, uint64_t initialized_value) {\n  if (DAT_08006170 != 0) {\n    return CONCAT44(input_value,2);\n  }\n  return (ulonglong)initialized_value << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006158",
            "calling": [
                "FUN_08006112"
            ],
            "imported": false,
            "current_name": "get_result_if_not_initialized_08006158"
        },
        "FUN_08003688": {
            "renaming": {
                "FUN_08003688": "FUNC_08003688"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUNC_08003688(uint *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  bool bVar7;\n  \n  puVar1 = DAT_08003948;\n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08003948[1] & 0xc) == 4) ||\n       (((DAT_08003948[1] & 0xc) == 8 && ((DAT_08003948[1] & 0x10000) != 0)))) {\n      if (((*DAT_08003948 & 0x20000) != 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      uVar6 = param_1[1];\n      if (uVar6 == 0x10000) {\n        *DAT_08003948 = *DAT_08003948 | 0x10000;\n      }\n      else if (uVar6 == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (uVar6 == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        *DAT_08003948 = *DAT_08003948 & 0xfffeffff;\n        *puVar1 = *puVar1 & 0xfffbffff;\n      }\n      if (param_1[1] == 0) {\n        iVar3 = FUN_08001cc4();\n        while ((*DAT_08003948 & 0x20000) != 0) {\n          iVar4 = FUN_08001cc4();\n          if (100 < (uint)(iVar4 - iVar3)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar3 = FUN_08001cc4();\n        while ((*DAT_08003948 & 0x20000) == 0) {\n          iVar4 = FUN_08001cc4();\n          if (100 < (uint)(iVar4 - iVar3)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08003948[1] & 0xc) == 0) ||\n       (((DAT_08003948[1] & 0xc) == 8 && ((DAT_08003948[1] & 0x10000) == 0)))) {\n      if (((*DAT_08003948 & 2) != 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n      *DAT_08003948 = *DAT_08003948 & 0xffffff07 | param_1[5] << 3;\n    }\n    else if (param_1[4] == 0) {\n      *DAT_0800394c = 0;\n      iVar3 = FUN_08001cc4();\n      while ((*DAT_08003948 & 2) != 0) {\n        iVar4 = FUN_08001cc4();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_0800394c = 1;\n      iVar3 = FUN_08001cc4();\n      while ((*DAT_08003948 & 2) == 0) {\n        iVar4 = FUN_08001cc4();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n      *DAT_08003948 = *DAT_08003948 & 0xffffff07 | param_1[5] << 3;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[6] == 0) {\n      *DAT_08003950 = 0;\n      iVar3 = FUN_08001cc4();\n      while ((DAT_08003948[9] & 2) != 0) {\n        iVar4 = FUN_08001cc4();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08003950 = 1;\n      iVar3 = FUN_08001cc4();\n      while ((DAT_08003948[9] & 2) == 0) {\n        iVar4 = FUN_08001cc4();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    bVar7 = (DAT_08003948[7] & 0x10000000) == 0;\n    if (bVar7) {\n      DAT_08003948[7] = DAT_08003948[7] | 0x10000000;\n    }\n    if ((*DAT_08003954 & 0x100) == 0) {\n      *DAT_08003954 = *DAT_08003954 | 0x100;\n      iVar3 = FUN_08001cc4();\n      while ((*DAT_08003954 & 0x100) == 0) {\n        iVar4 = FUN_08001cc4();\n        if (100 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    puVar2 = DAT_08003a60;\n    puVar1 = DAT_08003948;\n    uVar6 = param_1[3];\n    if (uVar6 == 1) {\n      DAT_08003948[8] = DAT_08003948[8] | 1;\n    }\n    else if (uVar6 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (uVar6 == 5) {\n      DAT_08003a60[8] = DAT_08003a60[8] | 4;\n      puVar2[8] = puVar2[8] | 1;\n    }\n    else {\n      DAT_08003948[8] = DAT_08003948[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n    }\n    if (param_1[3] == 0) {\n      iVar3 = FUN_08001cc4();\n      while ((DAT_08003a60[8] & 2) != 0) {\n        iVar4 = FUN_08001cc4();\n        if (5000 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar3 = FUN_08001cc4();\n      while ((DAT_08003948[8] & 2) == 0) {\n        iVar4 = FUN_08001cc4();\n        if (5000 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    if (bVar7) {\n      DAT_08003a60[7] = DAT_08003a60[7] & 0xefffffff;\n    }\n  }\n  if (param_1[7] == 0) {\n    uVar5 = 0;\n  }\n  else if ((DAT_08003a60[1] & 0xc) == 8) {\n    uVar5 = 1;\n  }\n  else if (param_1[7] == 2) {\n    *DAT_08003a64 = 0;\n    iVar3 = FUN_08001cc4();\n    do {\n      if ((*DAT_08003a60 & 0x2000000) == 0) {\n        if (param_1[8] == 0x10000) {\n          DAT_08003a60[1] = DAT_08003a60[1] & 0xfffdffff | param_1[2];\n        }\n        DAT_08003a60[1] = DAT_08003a60[1] & 0xffc2ffff | param_1[8] | param_1[9];\n        *DAT_08003a64 = 1;\n        iVar3 = FUN_08001cc4();\n        do {\n          if ((*DAT_08003a60 & 0x2000000) != 0) {\n            return 0;\n          }\n          iVar4 = FUN_08001cc4();\n        } while ((uint)(iVar4 - iVar3) < 3);\n        return 3;\n      }\n      iVar4 = FUN_08001cc4();\n    } while ((uint)(iVar4 - iVar3) < 3);\n    uVar5 = 3;\n  }\n  else {\n    *DAT_08003a64 = 0;\n    iVar3 = FUN_08001cc4();\n    do {\n      if ((*DAT_08003a60 & 0x2000000) == 0) {\n        return 0;\n      }\n      iVar4 = FUN_08001cc4();\n    } while ((uint)(iVar4 - iVar3) < 3);\n    uVar5 = 3;\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_0800365c",
                "FUN_08001cc4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003688",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "FUNC_08003688"
        },
        "FUN_08004ec4": {
            "renaming": {
                "FUN_08004ec4": "process_input_and_call_function_08004ec4",
                "param_1": "input",
                "iVar1": "func_ptr_address",
                "FUN_08004e70": "get_function_ptr_address",
                "*(code **)(iVar1 + 0x60)": "function_ptr",
                "*(char *)(iVar1 + 0x5c)": "flag",
                "*(char *)(iVar1 + 0x2c)": "input_char",
                "(*function_ptr)": "(*function_ptr)",
                "FUN_08002c10": "process_input"
            },
            "code": "void process_input_and_call_function_08004ec4(undefined4 input) {\n  int func_ptr_address = get_function_ptr_address();\n  code* function_ptr = *(code**)(func_ptr_address + 0x60);\n  char flag = *(char*)(func_ptr_address + 0x5c);\n  char input_char = *(char*)(func_ptr_address + 0x2c);\n  if ((function_ptr != (code*)0x0) && (flag == '\\x01') && (input_char != ' ')) {\n    (*function_ptr)(func_ptr_address + 0x68);\n  }\n  process_input(input);\n  return;\n}",
            "called": [
                "FUN_08002c10",
                "FUN_08004e70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ec4",
            "calling": [
                "FUN_0800316c",
                "FUN_08002d1c",
                "FUN_080032b4"
            ],
            "imported": false,
            "current_name": "process_input_and_call_function_08004ec4"
        },
        "FUN_08000178": {
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "input_str",
                "pcVar2": "current_char",
                "pcVar3": "current_char_ptr",
                "cVar1": "current_char_val"
            },
            "code": "char* find_end_of_string_08000178(char* input_str) {\n    char* current_char = input_str;\n    while (*current_char != \"\\0\") {\n        current_char++;\n    }\n    return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000178",
            "calling": [
                "FUN_08005c96",
                "FUN_08005ce8"
            ],
            "imported": false,
            "current_name": "find_end_of_string_08000178"
        },
        "FUN_08004418": {
            "renaming": {
                "FUN_08004418": "do_nothing_08004418"
            },
            "code": "\nvoid do_nothing_08004418(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004418",
            "calling": [
                "FUN_0800441a"
            ],
            "imported": false,
            "current_name": "do_nothing_08004418"
        },
        "FUN_08006c88": {
            "renaming": {
                "FUN_08006c88": "allocate_memory_08006c88",
                "param_1": "num_blocks",
                "param_2": "block_size",
                "puVar1": "memory_block",
                "iVar2": "total_size",
                "FUN_08006288": "allocate_memory_block",
                "FUN_080061e0": "initialize_memory_block"
            },
            "code": "undefined4* allocate_memory_08006c88(int num_blocks, int block_size)\n{\n  undefined4 *memory_block;\n  int total_size = (num_blocks - 1) * 0x68;\n  memory_block = (undefined4 *)allocate_memory_08006c88_block(block_size, total_size + 0x74);\n  if (memory_block != (undefined4 *)0x0) {\n    *memory_block = 0;\n    memory_block[1] = num_blocks;\n    memory_block[2] = memory_block + 3;\n    initialize_memory_block(memory_block + 3, 0, total_size + 0x68);\n  }\n  return memory_block;\n}",
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c88",
            "calling": [
                "FUN_08006d14"
            ],
            "imported": false,
            "current_name": "allocate_memory_08006c88"
        },
        "FUN_080060e4": {
            "renaming": {
                "FUN_080060e4": "check_if_data_is_zero_080060e4",
                "iVar1": "index",
                "FUN_08005f8c": "get_index",
                "PTR_DAT_08006100": "data_pointer",
                "print_error": "FUN_080060d4"
            },
            "code": "void check_if_data_is_zero_080060e4(void)\n{\n  int index = get_index();\n  if (*(int *)(PTR_DAT_08006100 + index * 0x14 + 0xc) != 0) {\n    print_error();\n  }\n  return;\n}",
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080060e4",
            "calling": [
                "FUN_0800282c"
            ],
            "imported": false,
            "current_name": "check_if_data_is_zero_080060e4"
        },
        "FUN_0800258c": {
            "renaming": {
                "FUN_0800258c": "determine_value_from_pointer_0800258c",
                "param_1": "pointer",
                "uVar1": "value",
                "puVar2": "ptr",
                "DAT_0800261c": "PTR_DAT_0800261c",
                "DAT_08002620": "PTR_DAT_08002620"
            },
            "code": "uint32_t determine_value_from_pointer_0800258c(uint32_t **pointer)\n{\n    uint32_t value;\n    uint32_t *ptr;\n\n    if (*(char *)((int)pointer + 0x21) != '\\x02') {\n        pointer[0xe] = (uint32_t *)0x4;\n        return 1;\n    }\n\n    **pointer &= 0xfffffff1;\n    **pointer &= 0xfffffffe;\n\n    ptr = *pointer;\n\n    if (ptr == DAT_0800261c) {\n        value = 1;\n    }\n    else if (ptr == DAT_0800261c + 5) {\n        value = 0x10;\n    }\n    else if (ptr == DAT_0800261c + 10) {\n        value = 0x100;\n    }\n    else if (ptr == DAT_0800261c + 0xf) {\n        value = 0x1000;\n    }\n    else if (ptr == DAT_0800261c + 0x14) {\n        value = 0x10000;\n    }\n    else if (ptr == DAT_0800261c + 0x19) {\n        value = 0x100000;\n    }\n    else {\n        value = 0x1000000;\n    }\n\n    *(uint32_t *)(DAT_08002620 + 4) = value;\n    *(char *)((int)pointer + 0x21) = 1;\n    *(uint32_t *)(pointer + 8) = 0;\n\n    if (pointer[0xd] != (uint32_t *)0x0) {\n        (*(void (*)())pointer[0xd])();\n        return 0;\n    }\n\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800258c",
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "imported": false,
            "current_name": "determine_value_from_pointer_0800258c"
        },
        "FUN_08004e20": {
            "renaming": {
                "FUN_08004e20": "checkIfPtrDatIsNotNull_08004e20",
                "PTR_DAT_08004e30": "ptrDat",
                "FUN_08003f18": "executeFunction"
            },
            "code": "void checkIfPtrDatIsNotNull_08004e20(void)\n{\n  int* PTR_DAT_08004e30 = *(int*)PTR_DAT_08004e30;\n  if (PTR_DAT_08004e30 != NULL)\n  {\n    executeFunction();\n  }\n  return;\n}",
            "called": [
                "FUN_08003f18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e20",
            "calling": [],
            "imported": false,
            "current_name": "checkIfPtrDatIsNotNull_08004e20"
        },
        "FUN_0800573c": {
            "renaming": {
                "FUN_0800573c": "wait_forever_0800573c"
            },
            "code": "void wait_forever_0800573c(void)\n{\n    while(true)\n    {\n        // Do nothing, just wait forever\n    }\n}",
            "called": [
                "FUN_0800573c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800573c",
            "calling": [
                "FUN_08006ac0",
                "FUN_0800573c"
            ],
            "imported": false,
            "current_name": "wait_forever_0800573c"
        },
        "FUN_080032b4": {
            "renaming": {
                "FUN_080032b4": "process_input_080032b4",
                "param_1": "input",
                "cVar1": "current_char",
                "puVar2": "ptr_input",
                "puVar3": "ptr_input_9"
            },
            "code": "uint32_t process_input_080032b4(uint32_t **input)\n{\n    char current_char = *(char *)((int)input + 0x3d);\n    (*input)[1] &= 0xfffff8ff;\n    **input |= 1;\n    **input &= 0xfffffbff;\n    uint32_t *ptr_input = *input;\n    if ((ptr_input[1] & 0x800) != 0)\n    {\n        if ((*(char *)((int)input + 0x3d) == '\"') || (*(char *)((int)input + 0x3d) == '*'))\n        {\n            *(int16_t *)((int)input + 0x2a) = (int16_t)*(uint32_t *)(*input[0xe] + 4);\n        }\n        else\n        {\n            *(int16_t *)((int)input + 0x2a) = (int16_t)*(uint32_t *)(*input[0xd] + 4);\n        }\n    }\n    if (*(int16_t *)((int)input + 0x2a) != 0)\n    {\n        if ((ptr_input[5] & 4) != 0)\n        {\n            uint8_t *ptr_input_9 = (uint8_t *)input[9];\n            input[9] = (uint32_t *)(ptr_input_9 + 1);\n            *(char *)ptr_input_9 = (char)ptr_input[4];\n            *(int16_t *)((int)input + 0x2a) -= 1;\n        }\n        if (((*input)[5] & 0x40) != 0)\n        {\n            uint8_t *ptr_input_9 = (uint8_t *)input[9];\n            input[9] = (uint32_t *)(ptr_input_9 + 1);\n            *(char *)ptr_input_9 = (char)(*input)[4];\n            *(int16_t *)((int)input + 0x2a) -= 1;\n        }\n        input[0x10] = (uint32_t *)((uint32_t)input[0x10] | 4);\n    }\n    if (input[0x10] == (uint32_t *)0x0)\n    {\n        if (((current_char == '(') || (current_char == '*')) || (current_char == ')'))\n        {\n            input[0xb] = PTR_DAT_080033b4;\n            input[0xc] = (uint32_t *)0x0;\n            *(undefined *)((int)input + 0x3d) = 0x20;\n            *(undefined *)((int)input + 0x3e) = 0;\n            FUN_08004ec4();\n        }\n        else if ((input[0xc] == (uint32_t *)0x22) || (current_char == '\"'))\n        {\n            input[0xc] = (uint32_t *)0x0;\n            *(undefined *)((int)input + 0x3d) = 0x20;\n            *(undefined *)((int)input + 0x3e) = 0;\n            do_nothing_08002ca4();\n        }\n    }\n    else\n    {\n        FUN_0800316c();\n    }\n    return 0;\n}",
            "called": [
                "FUN_0800316c",
                "FUN_08002ca4",
                "FUN_08004ec4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080032b4",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_input_080032b4"
        },
        "FUN_08004d06": {
            "renaming": {
                "FUN_08004d06": "compare_and_return_08004d06",
                "param_1": "value1",
                "param_2": "value2"
            },
            "code": "int compare_and_return_08004d06(int value1, int value2)\n{\n    if (value1 != value2) {\n        if (value1 == 0) {\n            return value2;\n        }\n        if (value2 == 0) {\n            return value1;\n        }\n        value1 = 0;\n    }\n    return value1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d06",
            "calling": [
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "compare_and_return_08004d06"
        },
        "FUN_080056d8": {
            "renaming": {
                "FUN_080056d8": "find_offset_080056d8",
                "param_1": "offset",
                "iVar1": "current_offset",
                "puVar2": "address"
            },
            "code": "int find_offset_080056d8(int offset) {\n  int current_offset = *(int *)PTR_DAT_08005708;\n  if (current_offset == 0) {\n    *(undefined **)PTR_DAT_08005708 = PTR_DAT_0800570c;\n    current_offset = *(int *)PTR_DAT_08005708;\n  }\n  undefined *address = (undefined *)(offset + current_offset);\n  if (address <= &stack0x00000000) {\n    *(undefined **)PTR_DAT_08005708 = address;\n    return current_offset;\n  }\n  *(undefined4 *)PTR_DAT_08005710 = 0xc;\n  return -1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080056d8",
            "calling": [
                "FUN_08006920"
            ],
            "imported": false,
            "current_name": "find_offset_080056d8"
        },
        "FUN_080019f6": {
            "renaming": {
                "FUN_080019f6": "update_variables_080019f6",
                "param_1": "param_address",
                "iVar1": "result",
                "uVar2": "var2",
                "uVar3": "var1",
                "uVar4": "var3",
                "uVar5": "var5"
            },
            "code": "void update_variables_080019f6(int param_address)\n{\n  int result;\n  undefined4 *first_pointer = *(undefined4 **)(param_address + 0x3c);\n  undefined4 *second_pointer = *(undefined4 **)(param_address + 0x38);\n  undefined4 var1 = *first_pointer;\n  undefined4 var2 = first_pointer[1];\n  *(undefined4 *)(param_address + 0x48) = var1;\n  *(undefined4 *)(param_address + 0x4c) = var2;\n  undefined4 var3 = second_pointer[1];\n  *(undefined4 *)(param_address + 0x50) = *second_pointer;\n  *(undefined4 *)(param_address + 0x54) = var3;\n  undefined4 var4 = *(undefined4 *)(param_address + 0x68);\n  undefined4 var5 = *(undefined4 *)(param_address + 0x6c);\n  result = FUN_08000a18(var1, var2, var4, var5);\n  if (result == 0) {\n    undefined4 var6 = *(undefined4 *)(param_address + 0x60);\n    undefined4 var7 = *(undefined4 *)(param_address + 100);\n    result = FUN_080009dc(var1, var2, var6, var7);\n    if (result != 0) {\n      *(undefined4 *)(param_address + 0x48) = var6;\n      *(undefined4 *)(param_address + 0x4c) = var7;\n    }\n    return;\n  }\n  *(undefined4 *)(param_address + 0x48) = var4;\n  *(undefined4 *)(param_address + 0x4c) = var5;\n  return;\n}",
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080019f6",
            "calling": [
                "FUN_08001a44"
            ],
            "imported": false,
            "current_name": "update_variables_080019f6"
        },
        "FUN_08002f9c": {
            "renaming": {
                "FUN_08002f9c": "decode_string_08002f9c",
                "param_1": "ptr_param",
                "puVar1": "current_ptr",
                "DAT_0800203c": "current_char",
                "DAT_08002020": "current_ushort",
                "PTR_DAT_08002038": "ptr_to_char"
            },
            "code": "uint decode_string_08002f9c(uint **ptr_param) {\n  uint *current_ptr = *ptr_param;\n  char DAT_0800203c = *(char *)((int)ptr_param + 0x3d);\n  if (DAT_0800203c == '\"') {\n    ushort DAT_08002020 = *(ushort *)((int)ptr_param + 0x2a);\n    if (DAT_08002020 < 4) {\n      if (DAT_08002020 == 2) {\n        *current_ptr = *current_ptr | 0x400;\n      }\n      else {\n        *current_ptr = *current_ptr & 0xfffffbff;\n        *current_ptr = *current_ptr | 0x800;\n      }\n      (*ptr_param)[1] = (*ptr_param)[1] & 0xfffffbff;\n    }\n    else {\n      uint *PTR_DAT_08002038 = ptr_param[9];\n      ptr_param[9] = (uint *)((int)PTR_DAT_08002038 + 1);\n      *(char *)PTR_DAT_08002038 = (char)(*current_ptr)[4];\n      *(short *)((int)ptr_param + 0x2a) = *(short *)((int)ptr_param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f9c",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "decode_string_08002f9c"
        },
        "FUN_08005510": {
            "renaming": {
                "FUN_08005510": "process_data_08005510",
                "param_1": "data_ptr",
                "param_2": "value",
                "param_3": "data_size",
                "param_4": "param_4",
                "iVar1": "result",
                "uVar2": "index",
                "char_val": "char_val"
            },
            "code": "void process_data_08005510(int data_ptr, int value, int data_size, int param_4)\n{\n    int result = FUN_0800548c();\n    if (data_ptr != 0 && result == 0) {\n        uint index = (uint)*(byte *)(data_ptr + 0x44);\n        *(int *)(PTR_DAT_08005560 + index * 4) = data_ptr;\n        *(int *)(PTR_DAT_0800555c + index * 4) = value;\n        int char_val = (int)*(char *)(data_ptr + 0x5a);\n        FUN_08002494(char_val, 0, 1, index, param_4);\n        FUN_080024f8(char_val);\n        FUN_080045a2(*(int *)(PTR_DAT_08005564 + index * 4), data_ptr + 0x45, 1);\n    }\n}\n",
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005510",
            "calling": [
                "FUN_08005a68"
            ],
            "imported": false,
            "current_name": "process_data_08005510"
        },
        "FUN_08002f9a": {
            "renaming": {
                "FUN_08002f9a": "do_nothing_08002f9a"
            },
            "code": "\nvoid do_nothing_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f9a",
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "imported": false,
            "current_name": "do_nothing_08002f9a"
        },
        "FUN_08005750": {
            "renaming": {
                "FUN_08005750": "return_one_08005750"
            },
            "code": "int return_one_08005750(void)\n{\n  int result = 1;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005750",
            "calling": [
                "thunk_FUN_08005750"
            ],
            "imported": false,
            "current_name": "return_one_08005750"
        },
        "FUN_08002cf2": {
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "data_ptr",
                "param_2": "flag_A",
                "param_3": "flag_B",
                "param_4": "output_val",
                "uVar1": "data_val_2",
                "uVar2": "data_val",
                "*(uint *)(*param_1 + 0x18)": "data_val",
                "*(undefined2 *)(param_1 + 3)": "data_val_2",
                "*(undefined2 *)(param_1 + 6)": "data_val_2",
                "(*(uint *)(*param_1 + 0x18) & 4) == 0": "data_flag",
                "FUN_08004e74": "process_data_helper"
            },
            "code": "int process_data_08002cf2(int *data_ptr, int flag_A, int flag_B, int output_val) {\n  int data_val = *(int *)(*data_ptr + 0x18);\n  int data_offset = (data_val & 0x80) ? 6 : 3;\n  int data_val_2 = *(int *)(data_ptr + data_offset);\n  int data_flag = (data_val & 4) == 0;\n  process_data_08002cf2_helper(data_ptr, data_flag, data_val_2, data_val, output_val);\n  return 0;\n}",
            "called": [
                "FUN_08004e74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cf2",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_data_08002cf2"
        },
        "FUN_08006288": {
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "memory_block",
                "param_2": "size",
                "puVar1": "block_pointer",
                "uVar2": "result",
                "puVar3": "current_block",
                "iVar4": "difference",
                "puVar5": "previous_block",
                "uVar6": "block_size_difference",
                "puVar7": "new_block",
                "uVar8": "adjusted_size"
            },
            "code": "uint allocate_memory_08006288(uint *memory_block, uint size)\n{\n    uint *current_block;\n    uint adjusted_size;\n    uint *previous_block;\n    uint new_block_size;\n    uint *new_block;\n\n    adjusted_size = (size + 3 & 0xfffffffc) + 8;\n    if (adjusted_size < 0xc) {\n        adjusted_size = 0xc;\n    }\n    if (((int)adjusted_size < 0) || (adjusted_size < size)) {\n        *memory_block = 0xc;\n    }\n    else {\n        do_nothing_08006eac();\n        current_block = PTR_DAT_08006340;\n        previous_block = *(uint **)PTR_DAT_0800633c;\n        while (new_block = previous_block, new_block != (uint *)0x0) {\n            new_block_size = *new_block - adjusted_size;\n            if (-1 < (int)new_block_size) {\n                if (new_block_size < 0xc) {\n                    if (previous_block == new_block) {\n                        adjusted_size = previous_block[1];\n                        *(uint *)PTR_DAT_0800633c = adjusted_size;\n                    }\n                    else {\n                        adjusted_size = new_block[1];\n                    }\n                    if (previous_block != new_block) {\n                        previous_block[1] = adjusted_size;\n                        previous_block = new_block;\n                    }\n                }\n                else {\n                    *new_block = new_block_size;\n                    *(uint *)((int)new_block + new_block_size) = adjusted_size;\n                    previous_block = (uint *)((int)new_block + new_block_size);\n                }\n                goto LAB_080062ec;\n            }\n            previous_block = (uint *)new_block[1];\n        }\n        if (*(int *)PTR_DAT_08006340 == 0) {\n            uVar2 = FUN_08006920(memory_block);\n            *(undefined4 *)current_block = uVar2;\n        }\n        new_block = (uint *)FUN_08006920(memory_block, adjusted_size);\n        if ((new_block != (uint *)0xffffffff) &&\n           ((previous_block = (uint *)((int)new_block + 3U & 0xfffffffc), new_block == previous_block ||\n            (adjusted_size = FUN_08006920(memory_block,(int)previous_block - (int)new_block), adjusted_size != -1)))) {\n            *previous_block = adjusted_size;\nLAB_080062ec:\n            do_nothing_08006eae(memory_block);\n            adjusted_size = (int)previous_block + 0xbU & 0xfffffff8;\n            new_block_size = adjusted_size - (int)(previous_block + 1);\n            if (new_block_size != 0) {\n                *(int *)((int)previous_block + new_block_size) = -new_block_size;\n                return adjusted_size;\n            }\n            return adjusted_size;\n        }\n        *memory_block = 0xc;\n        do_nothing_08006eae(memory_block);\n    }\n    return 0;\n}",
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006288",
            "calling": [
                "FUN_08006c88",
                "FUN_08006e10"
            ],
            "imported": false,
            "current_name": "allocate_memory_08006288"
        },
        "FUN_08002004": {
            "renaming": {
                "FUN_08002004": "check_status_of_param_08002004",
                "*param_1": "*param_array",
                "iVar1": "status",
                "puVar2": "current_ptr",
                "DAT_080020e8": "current_data_ptr"
            },
            "code": "int check_status_of_param_08002004(undefined4 *param_array)\n{\n    int status;\n    undefined4 *current_ptr;\n\n    if (*(char *)(param_array + 9) != '\\x01') {\n        *(undefined *)(param_array + 9) = 1;\n        status = check_function();\n        if (status == 0) {\n            param_array[10] = (param_array[10] & 0xfffffcfe) | 0x100;\n            current_ptr = (undefined4 *)*param_array;\n            if ((current_ptr == DAT_080020e8) && ((DAT_080020e8[-0xff] & 0xf0000) != 0)) {\n                param_array[10] |= 0x100000;\n                if ((*(uint *)(DAT_080020e8 + 4) & 0x400) != 0) {\n                    param_array[10] = (param_array[10] & 0xffffcfff) | 0x1000;\n                }\n            }\n            else {\n                param_array[10] &= 0xffefffff;\n                if ((current_ptr[1] & 0x400) != 0) {\n                    param_array[10] = (param_array[10] & 0xffffcfff) | 0x1000;\n                }\n            }\n            if ((param_array[10] & 0x1000) == 0) {\n                param_array[11] = 0;\n            }\n            else {\n                param_array[11] &= 0xfffffff9;\n            }\n            *(undefined *)(param_array + 9) = 0;\n            *current_ptr = 0xfffffffd;\n            param_array = (undefined4 *)*param_array;\n            if (((param_array[2] & 0xe0000) == 0xe0000) && ((param_array != DAT_080020e8 || ((DAT_080020e8[-0xff] & 0xf0000) == 0)))) {\n                param_array[2] |= 0x500000;\n            }\n            else {\n                param_array[2] |= 0x100000;\n            }\n        }\n        else {\n            *(undefined *)(param_array + 9) = 0;\n        }\n        return status;\n    }\n    return 2;\n}",
            "called": [
                "FUN_08001f84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002004",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "check_status_of_param_08002004"
        },
        "FUN_08005754": {
            "renaming": {
                "FUN_08005754": "get_value_08005754",
                "param_1": "input_value",
                "bVar1": "is_valid_range",
                "cVar2": "character_value",
                "uVar3": "result_value",
                "uVar4": "shift_amount"
            },
            "code": "uint get_value_08005754(uint input_value)\n{\n  bool is_valid_range;\n  char character_value;\n  uint result_value;\n  uint shift_amount;\n  \n  if (input_value < 14) {\n    if (input_value + 46 < 60) {\n      is_valid_range = true;\n    }\n    else {\n      is_valid_range = false;\n    }\n  }\n  else {\n    is_valid_range = input_value < 60;\n  }\n  \n  if (is_valid_range) {\n    if (input_value < 14) {\n      input_value = input_value + 46;\n    }\n    character_value = PTR_DAT_080057ac[input_value];\n  }\n  else {\n    character_value = -1;\n  }\n  \n  if (character_value == -1) {\n    result_value = 0;\n  }\n  else {\n    result_value = FUN_08004a4c();\n    shift_amount = *(uint *)PTR_DAT_080057b0;\n    if (shift_amount != 12) {\n      if (shift_amount < 12) {\n        return result_value >> (12 - shift_amount & 0xff);\n      }\n      return result_value << (shift_amount - 12 & 0xff);\n    }\n  }\n  return result_value;\n}",
            "called": [
                "FUN_08004a4c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005754",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "get_value_08005754"
        },
        "FUN_08005fc8": {
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "param_1": "num_params",
                "param_2": "param_value",
                "puVar1": "data_pointer"
            },
            "code": "void initialize_data_08005fc8(int num_params, int param_value, undefined4 param_3, undefined4 param_4)\n{\n  undefined *data_pointer;\n  data_pointer = PTR_DAT_08006068;\n  if (num_params != 1) {\n    return;\n  }\n  if (param_value == 0xffff) {\n    *PTR_DAT_08006068 = 6;\n    *(undefined4 *)(data_pointer + 0xc) = 0;\n    data_pointer[0x14] = 7;\n    *(undefined4 *)(data_pointer + 0x20) = 0;\n    data_pointer[0x28] = 8;\n    *(undefined4 *)(data_pointer + 0x34) = 0;\n    data_pointer[0x3c] = 9;\n    *(undefined4 *)(data_pointer + 0x48) = 0;\n    data_pointer[0x50] = 10;\n    *(undefined4 *)(data_pointer + 0x5c) = 0;\n    data_pointer[100] = 0x17;\n    *(undefined4 *)(data_pointer + 0x70) = 0;\n    data_pointer[0x78] = 0x17;\n    *(undefined4 *)(data_pointer + 0x84) = 0;\n    data_pointer[0x8c] = 0x17;\n    *(undefined4 *)(data_pointer + 0x98) = 0;\n    data_pointer[0xa0] = 0x17;\n    *(undefined4 *)(data_pointer + 0xac) = 0;\n    data_pointer[0xb4] = 0x17;\n    *(undefined4 *)(data_pointer + 0xc0) = 0;\n    data_pointer[200] = 0x28;\n    *(undefined4 *)(data_pointer + 0xd4) = 0;\n    data_pointer[0xdc] = 0x28;\n    *(undefined4 *)(data_pointer + 0xe8) = 0;\n    data_pointer[0xf0] = 0x28;\n    *(undefined4 *)(data_pointer + 0xfc) = 0;\n    data_pointer[0x104] = 0x28;\n    *(undefined4 *)(data_pointer + 0x110) = 0;\n    data_pointer[0x118] = 0x28;\n    *(undefined4 *)(data_pointer + 0x124) = 0;\n    data_pointer[300] = 0x28;\n    *(undefined4 *)(data_pointer + 0x138) = 0;\n    FUN_08006112(0,PTR_LAB_08005fa0_1_08006070,PTR_DAT_0800606c,data_pointer,param_4);\n  }\n  return;\n}",
            "called": [
                "FUN_08006112"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005fc8",
            "calling": [],
            "imported": false,
            "current_name": "initialize_data_08005fc8"
        },
        "FUN_08002ab8": {
            "renaming": {
                "FUN_08002ab8": "read_byte_from_buffer_08002ab8",
                "param_1": "buffer_ptr",
                "pbVar1": "byte_ptr",
                "PTR_": "buffer_",
                "DAT_": "byte_"
            },
            "code": "int read_byte_from_buffer_08002ab8(int *PTR_ptr)\n{\n  int *buffer = PTR_ptr;\n  if (*(short *)(buffer + 0x2a) != 0) {\n    byte *DAT_ptr = (byte *)buffer[9];\n    buffer[9] = (int)(DAT_ptr + 1);\n    uint DAT_value = (uint)*DAT_ptr;\n    *(uint *)(*buffer + 0x10) = DAT_value;\n    *(short *)(buffer + 0x2a) = *(short *)(buffer + 0x2a) - 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ab8",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "read_byte_from_buffer_08002ab8"
        },
        "FUN_080068f0": {
            "renaming": {
                "FUN_080068f0": "process_data_080068f0",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "iVar1": "ptr",
                "uVar2": "param1",
                "uStack_c": "param2",
                "uStack_8": "param3",
                "uStack_4": "param4",
                "PTR_PTR_DAT_0800691c": "PTR_PTR_DAT_0800691c",
                "FUN_08006cb4": "clean_up",
                "FUNC_08006394": "process"
            },
            "code": "void process_data_080068f0(undefined4 data1, undefined4 data2, undefined4 data3, undefined4 data4) {\n  int ptr = *(int *)PTR_PTR_DAT_0800691c;\n  undefined4 param1 = data1;\n  undefined4 param2 = data2;\n  undefined4 param3 = data3;\n  undefined4 param4 = data4;\n  if ((ptr != 0) && (*(int *)(ptr + 0x18) == 0)) {\n    clean_up(ptr);\n  }\n  process(ptr, *(undefined4 *)(ptr + 8), data1, &param2, param1, &param2);\n  return;\n}",
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080068f0",
            "calling": [
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "process_data_080068f0"
        },
        "FUN_080066b0": {
            "renaming": {
                "FUN_080066b0": "FUNC_080066b0"
            },
            "code": "\nuint FUNC_080066b0(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800686a;\n          if (bVar1 != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_080068ec;\nLAB_080067fa:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_08006790:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_080066e0;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08006700;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08006700:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_080068ec;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080067d6;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08006740:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_08006766:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08006774;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08006774:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_080068ec;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_08006790;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_08006726:\n            puVar5 = PTR_s_0123456789abcdef_080068e8;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_08006766;\n          if (bVar1 == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08006740;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08006e90(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_08006856;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_08006856:\n    *puVar3 = uVar6;\n  }\nLAB_0800686a:\n  param_2[4] = 0;\nLAB_080067d6:\n  iVar2 = FUN_080065c0(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_080067ea:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_080067ea;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_08006e90",
                "FUN_080065c0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080066b0",
            "calling": [
                "FUN_08006394"
            ],
            "imported": false,
            "current_name": "FUNC_080066b0"
        },
        "FUN_08002c52": {
            "renaming": {
                "FUN_08002c52": "do_nothing_08002c52"
            },
            "code": "\nvoid do_nothing_08002c52(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c52",
            "calling": [
                "FUN_08002d1c",
                "FUN_08002c54"
            ],
            "imported": false,
            "current_name": "do_nothing_08002c52"
        },
        "FUN_0800138e": {
            "renaming": {
                "FUN_0800138e": "set_flag_0800138e",
                "param_1": "data",
                "param_2": "flag_bit",
                "param_3": "zero",
                "param_4": "param_4",
                "bVar1": "current_flag",
                "FUN_08001310": "set_data"
            },
            "code": "void set_flag_0800138e(int data, int flag_bit, int zero, int param_4)\n{\n  byte current_flag = *(byte *)(data + 0x14);\n  *(byte *)(data + 0x14) = current_flag | flag_bit;\n  set_data(data, current_flag | 0xc, zero, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_08001310"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800138e",
            "calling": [
                "FUN_080013a4"
            ],
            "imported": false,
            "current_name": "set_flag_0800138e"
        },
        "FUN_08002c50": {
            "renaming": {
                "FUN_08002c50": "do_nothing_08002c50"
            },
            "code": "\nvoid do_nothing_08002c50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c50",
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "imported": false,
            "current_name": "do_nothing_08002c50"
        },
        "FUN_0800598a": {
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "data_ptr",
                "iVar1": "status",
                "uVar2": "index",
                "local_9": "data"
            },
            "code": "void update_data_0800598a(int data_ptr)\n{\n  int status;\n  ushort index;\n  undefined data;\n  status = get_data(data_ptr,&data);\n  if ((status == 0) && (index = *(short *)(data_ptr + 0x60) + 1U & 0x3f, index != *(ushort *)(data_ptr + 0x62))) {\n    *(undefined *)(*(int *)(data_ptr + 0x5c) + (uint)*(ushort *)(data_ptr + 0x60)) = data;\n    *(ushort *)(data_ptr + 0x60) = index;\n  }\n  return;\n}",
            "called": [
                "FUN_080054d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800598a",
            "calling": [],
            "imported": false,
            "current_name": "update_data_0800598a"
        },
        "FUN_08001c88": {
            "renaming": {
                "FUN_08001c88": "set_flag_and_call_functions_08001c88",
                "FUN_08002470": "call_function_1",
                "FUN_08001c3c": "call_function_2",
                "do_nothing_08001c3a": "do_nothing",
                "DAT_08001ca8": "data_pointer"
            },
            "code": "int set_flag_and_call_functions_08001c88() {\n  *DAT_08001ca8 = *DAT_08001ca8 | 0x10;\n  call_function_1(3);\n  call_function_2(0xf);\n  do_nothing();\n  return 0;\n}",
            "called": [
                "FUN_08002470",
                "FUN_08001c3a",
                "FUN_08001c3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001c88",
            "calling": [
                "FUN_08004c52"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08001c88"
        },
        "FUN_08001a44": {
            "renaming": {
                "FUN_08001a44": "set_flag_if_param_2_is_1_08001a44",
                "param_1": "memory_address",
                "param_2": "flag_value",
                "uVar1": "flag",
                "*(char *)(param_1 + 0x70)": "*(bool *)(memory_address + 0x70)",
                "FUN_080019f6": "call_function_at_080019f6"
            },
            "code": "void set_flag_if_param_2_is_1_08001a44(int memory_address,int flag_value)\\n{\\n  bool flag;\\n  if (flag_value == 1) {\\n    flag = true;\\n    if (*(char *)(memory_address + 0x70) == \"\\0\") {\\n      call_function_at_080019f6();\\n    }\\n  }\\n  else {\\n    flag = false;\\n  }\\n  *(bool *)(memory_address + 0x70) = flag;\\n  return;\\n}",
            "called": [
                "FUN_080019f6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001a44",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "set_flag_if_param_2_is_1_08001a44"
        },
        "FUN_08002c54": {
            "renaming": {
                "FUN_08002c54": "process_data_08002c54",
                "param_1": "data",
                "pbVar2": "current_byte",
                "cVar1": "current_char"
            },
            "code": "int process_data_08002c54(int *data) {\n  char current_char = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte *current_byte = (byte *)data[9];\n    data[9] = (int)(current_byte + 1);\n    *(uint *)(*data + 0x10) = (uint)*current_byte;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (current_char == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      do_nothing();\n    }\n    return 0;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08002c52"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c54",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_data_08002c54"
        },
        "FUN_080043b4": {
            "renaming": {
                "FUN_080043b4": "check_and_modify_bits_080043b4",
                "param_1": "bits",
                "param_2": "mask",
                "param_3": "expect",
                "param_4": "param",
                "param_5": "max_param_diff",
                "iVar1": "diff"
            },
            "code": "uint32_t check_and_modify_bits_080043b4(uint32_t **bits, uint32_t mask, bool expect, int param, uint32_t max_param_diff){\n  int diff;\n  do {\n    if (((mask & ~**bits) == 0) != expect) {\n      return 0;\n    }\n  } while ((max_param_diff == UINT32_MAX) || ((max_param_diff != 0) && ((diff = (int)FUN_08001cc4() - param) <= max_param_diff)));\n  (*bits)[3] &= 0xfffffe5f;\n  (*bits)[5] &= 0xfffffffe;\n  (*bits)[0xe] = 0;\n  return 3;\n}",
            "called": [
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043b4",
            "calling": [
                "FUN_08004478"
            ],
            "imported": false,
            "current_name": "check_and_modify_bits_080043b4"
        },
        "FUN_0800441a": {
            "renaming": {
                "FUN_0800441a": "check_and_update_0800441a",
                "param_1": "param_array",
                "*(char *)((int)param_1 + 0x39)": "param_array[9]",
                "*(undefined *)(param_1 + 0xe)": "param_array[14]",
                "do_nothing_08004418": "do_nothing",
                "*(uint *)(*param_1 + 0xc)": "*(uint *)(*param_array + 0xc)",
                "FUN_08004204": "update_param",
                "*(uint *)(*param_1 + 0x10)": "*(uint *)(*param_array + 0x10)",
                "*(uint *)(*param_1 + 0x14)": "*(uint *)(*param_array + 0x14)",
                "param_1[0xf]": "param_array[15]",
                "*(undefined *)((int)param_1 + 0x39)": "param_array[9]",
                "*(undefined *)((int)param_1 + 0x3a)": "param_array[10]"
            },
            "code": "int check_and_update_0800441a(int *param_array)\n{\n    if (param_array != NULL)\n    {\n        if (param_array[9] == 0)\n        {\n            param_array[14] = 0;\n            do_nothing();\n        }\n        param_array[9] = 0x24;\n        *(uint *)(*param_array + 0xc) &= 0xffffdfff;\n        update_param(param_array);\n        *(uint *)(*param_array + 0x10) &= 0xffffb7ff;\n        *(uint *)(*param_array + 0x14) &= 0xffffffd5;\n        *(uint *)(*param_array + 0xc) |= 0x2000;\n        param_array[15] = 0;\n        param_array[9] = 0x20;\n        param_array[10] = 0x20;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004418",
                "FUN_08004204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800441a",
            "calling": [
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "check_and_update_0800441a"
        },
        "FUN_08004d18": {
            "renaming": {
                "FUN_08004d18": "execute_code_if_not_null_08004d18",
                "PTR_DAT_08004d28": "CODE_PTR",
                "PTR_DAT_08004d2c": "PARAM_PTR"
            },
            "code": "void execute_code_if_not_null_08004d18(void)\n{\n  code* code_ptr = *(code**)PTR_DAT_08004d28;\n  if (code_ptr != NULL) {\n    (*code_ptr)(*(undefined4*)PTR_DAT_08004d2c);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d18",
            "calling": [
                "FUN_08003ea0"
            ],
            "imported": false,
            "current_name": "execute_code_if_not_null_08004d18"
        },
        "FUN_080006d4": {
            "renaming": {
                "FUN_080006d4": "calculate_result_080006d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "temp_4",
                "uVar2": "carry_bit",
                "uVar3": "temp_2",
                "in_r12": "condition_1",
                "bVar4": "is_condition_2_false"
            },
            "code": "ulonglong calculate_result_080006d4(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint condition_1 = input_4 >> 0x14;\n  uint condition_2 = input_1 | (input_2 << 1);\n  uint condition_3 = input_3 | (input_4 << 1);\n  bool is_condition_2_false = condition_2 == 0;\n  if (input_2 != input_3 && condition_1 != input_3)\n  {\n    if (!is_condition_2_false || !condition_3)\n    {\n      if (is_condition_2_false && condition_3)\n      {\n        temp_2 = input_4;\n        temp_1 = input_3;\n      }\n      else\n      {\n        uint carry_bit = input_2 & 0x80000000;\n        do\n        {\n          uint bit_1 = input_1 & 0x80000000;\n          input_1 = input_1 << 1;\n          input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n        } while ((input_2 & 0x100000) == 0);\n        input_2 = input_2 | carry_bit;\n        if (condition_1 != 0)\n        {\n          return ((ulonglong)input_2 << 0x20) | input_1;\n        }\n      }\n      do\n      {\n        uint carry_bit = input_3 & 0x80000000;\n        input_3 = input_3 << 1;\n        input_4 = input_4 * 2 + (uint)(carry_bit != 0);\n      } while ((input_4 & 0x100000) == 0);\n      return ((ulonglong)input_2 << 0x20) | input_1;\n    }\n    else\n    {\n      return ((ulonglong)(input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n    }\n  }\n  temp_3 = input_3 | (input_4 << 0x1c);\n  temp_4 = input_1 | (input_2 << 0xc);\n  bool is_condition_4_false = temp_3 == 0;\n  if (is_condition_2_false)\n  {\n    temp_2 = input_4;\n    temp_1 = input_3;\n  }\n  else\n  {\n    if (!is_condition_4_false || !temp_4)\n    {\n      if (is_condition_4_false && temp_4)\n      {\n        temp_2 = input_2;\n        temp_1 = input_1;\n      }\n      else\n      {\n        return ((ulonglong)(input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else\n    {\n      temp_2 = input_4;\n      temp_1 = input_3;\n    }\n  }\n  return ((ulonglong)temp_2 << 0x20) | temp_1 | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006d4",
            "calling": [
                "FUN_080004f8"
            ],
            "imported": false,
            "current_name": "calculate_result_080006d4"
        },
        "FUN_08000190": {
            "renaming": {
                "FUN_08000190": "FUNC_08000190"
            },
            "code": "\nulonglong FUNC_08000190(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_080002a0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08000318:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000190",
            "calling": [
                "FUN_08001a66",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "FUNC_08000190"
        },
        "FUN_08006174": {
            "renaming": {
                "FUN_08006174": "process_data_and_call_function_08006174",
                "param_1": "data_buffer",
                "param_2": "data_size",
                "param_3": "output_1",
                "param_4": "output_2",
                "uStack_8": "input_3",
                "uStack_4": "output_2",
                "PTR_PTR_DAT_08006194": "buffer_pointer",
                "FUNC_08006394": "call_function"
            },
            "code": "void process_data_and_call_function_08006174(void* data_buffer, int data_size, int* output_1, int* output_2) {\n  int input_1 = data_size;\n  int input_2 = *output_1;\n  int input_3 = *output_2;\n  call_function(*(int **)PTR_PTR_DAT_PTR_PTR_DAT_08006194, input_1, input_2, &input_3, input_1, &input_3);\n  return;\n}",
            "called": [
                "FUN_08006394"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006174",
            "calling": [
                "FUN_0800611c"
            ],
            "imported": false,
            "current_name": "process_data_and_call_function_08006174"
        },
        "FUN_08007028": {
            "renaming": {
                "<original_function_name>": "FUN_08007028",
                "param_1": "result",
                "param_2": "value",
                "puVar1": "ptr",
                "iVar2": "func_result",
                "FUN_08007028": "initialize_param1_if_param2_invalid_08007028"
            },
            "code": "void initialize_param1_if_param2_invalid_08007028(int *result, undefined4 value){\n                      undefined *ptr = PTR_DAT_08007044;\n                      *(undefined4 *)PTR_DAT_08007044 = 0;\n                      int func_result = check_validity_of_param2(value);\n                      if ((func_result == -1) && (*(int *)ptr != 0)) {\n                        *result = *(int *)ptr;\n                      }\n                    }",
            "called": [
                "FUN_08005724"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007028",
            "calling": [
                "FUN_08006e10"
            ],
            "imported": false,
            "current_name": "initialize_param1_if_param2_invalid_08007028"
        },
        "FUN_08000194": {
            "renaming": {
                "FUN_08000194": "FUNC_08000194"
            },
            "code": "\nulonglong FUNC_08000194(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_080002a0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08000318:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000194",
            "calling": [
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "FUNC_08000194"
        },
        "FUN_08002494": {
            "renaming": {
                "FUN_08002494": "set_bits_08002494",
                "param_1": "bit_offset",
                "param_2": "num_bits",
                "param_3": "value",
                "uVar1": "shift_amount",
                "uVar2": "bits_to_set",
                "DAT_080024f0": "PTR_CONSTANT_1",
                "DAT_080024f4": "PTR_CONSTANT_2"
            },
            "code": "void set_bits_08002494(uint bit_offset, uint num_bits, uint value) {\n  uint shift_amount = (uint)(*(int *)(DAT_080024f0 + 0xc) << 0x15) >> 0x1d;\n  uint bits_to_set = 7 - shift_amount;\n  if (bits_to_set > 3) {\n    bits_to_set = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  uint shifted_value = (value & (1 << (bits_to_set & 0xff)) - 1U) << (shift_amount & 0xff) | (1 << (shift_amount & 0xff)) - 1U & value;\n  if ((int)bit_offset < 0) {\n    *(char *)(DAT_080024f4 + (bit_offset & 0xf)) = (char)(shifted_value << 4);\n  }\n  else {\n    *(char *)(bit_offset + 0xe000e400) = (char)(shifted_value << 4);\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002494",
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005510",
                "FUN_08005568"
            ],
            "imported": false,
            "current_name": "set_bits_08002494"
        },
        "FUN_08002c4e": {
            "renaming": {
                "FUN_08002c4e": "do_nothing_08002c4e"
            },
            "code": "\nvoid do_nothing_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c4e",
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "imported": false,
            "current_name": "do_nothing_08002c4e"
        },
        "FUN_08004f4c": {
            "renaming": {
                "FUN_08004f4c": "FUNC_08004f4c"
            },
            "code": "\nvoid FUNC_08004f4c(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  uint local_20;\n  uint local_1c;\n  uint local_18;\n  undefined4 local_14;\n  \n  if (param_1 != (int *)0x0) {\n    iVar2 = FUN_08004c78((int)*(char *)(param_1 + 0x16),PTR_DAT_08005204);\n    iVar3 = FUN_08004c78((int)*(char *)((int)param_1 + 0x59),PTR_DAT_08005208);\n    if ((iVar3 == 0) || (iVar2 == 0)) {\n      FUN_080068f0(PTR_s_ERROR__at_least_one_UART_pin_has_0800521c,iVar3);\n    }\n    else {\n      iVar4 = FUN_08004d06(iVar2);\n      *param_1 = iVar4;\n      iVar1 = DAT_08005214;\n      iVar3 = DAT_08005210;\n      iVar2 = DAT_0800520c;\n      if (iVar4 == 0) {\n        FUN_080068f0(PTR_s_ERROR__U_S_ART_pins_mismatch_08005220);\n      }\n      else {\n        if (iVar4 == DAT_0800520c) {\n          *(uint *)(DAT_0800520c + 0xd80c) = *(uint *)(DAT_0800520c + 0xd80c) | 0x4000;\n          *(uint *)(iVar2 + 0xd80c) = *(uint *)(iVar2 + 0xd80c) & 0xffffbfff;\n          *(uint *)(iVar2 + 0xd818) = *(uint *)(iVar2 + 0xd818) | 0x4000;\n          *(undefined *)(param_1 + 0x11) = 0;\n          *(undefined *)((int)param_1 + 0x5a) = 0x25;\n        }\n        else if (iVar4 == DAT_08005210) {\n          *(uint *)(DAT_08005210 + 0x1cc10) = *(uint *)(DAT_08005210 + 0x1cc10) | 0x20000;\n          *(uint *)(iVar3 + 0x1cc10) = *(uint *)(iVar3 + 0x1cc10) & 0xfffdffff;\n          *(uint *)(iVar3 + 0x1cc1c) = *(uint *)(iVar3 + 0x1cc1c) | 0x20000;\n          *(undefined *)(param_1 + 0x11) = 1;\n          *(undefined *)((int)param_1 + 0x5a) = 0x26;\n        }\n        else if (iVar4 == DAT_08005214) {\n          *(uint *)(DAT_08005214 + 0x1c810) = *(uint *)(DAT_08005214 + 0x1c810) | 0x40000;\n          *(uint *)(iVar1 + 0x1c810) = *(uint *)(iVar1 + 0x1c810) & 0xfffbffff;\n          *(uint *)(iVar1 + 0x1c81c) = *(uint *)(iVar1 + 0x1c81c) | 0x40000;\n          *(undefined *)(param_1 + 0x11) = 2;\n          *(undefined *)((int)param_1 + 0x5a) = 0x27;\n        }\n        uVar5 = FUN_08004884((uint)((int)*(char *)((int)param_1 + 0x59) << 0x18) >> 0x1c);\n        uVar6 = FUN_08004cce((int)*(char *)((int)param_1 + 0x59),PTR_DAT_08005208);\n        local_20 = 1 << (*(byte *)((int)param_1 + 0x59) & 0xf) & 0xffff;\n        local_1c = (uVar6 >> 3 & 1) << 4 | uVar6 & 7;\n        local_18 = (uVar6 << 0x1a) >> 0x1e;\n        *(uint *)(DAT_08005218 + 0x18) = *(uint *)(DAT_08005218 + 0x18) | 1;\n        switch((uVar6 << 0x11) >> 0x19) {\n        case 1:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) | 0x7000001;\n          break;\n        case 2:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) | 0x7000002;\n          break;\n        case 4:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) | 0x7000004;\n          break;\n        case 6:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) | 0x7000008;\n          break;\n        case 8:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          *(uint *)(DAT_08005224 + 4) = *(uint *)(DAT_08005224 + 4) | 0x7000030;\n          break;\n        case 10:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) | 0x70000c0;\n          break;\n        case 0xd:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) | 0x7000300;\n          break;\n        case 0x10:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) | 0x7000c00;\n          break;\n        case 0x14:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) | 0x7001000;\n          break;\n        case 0x17:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) | 0x7008000;\n          break;\n        case 0x1c:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xf8ffffff;\n          break;\n        case 0x22:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          *(uint *)(DAT_08005380 + 4) = *(uint *)(DAT_08005380 + 4) & 0xf8ffffff | 0x4000000;\n        }\n        local_14 = 3;\n        FUN_08002624(uVar5,&local_20);\n        uVar5 = FUN_08004884((uint)((int)*(char *)(param_1 + 0x16) << 0x18) >> 0x1c);\n        uVar6 = FUN_08004cce((int)*(char *)(param_1 + 0x16),PTR_DAT_08005204);\n        local_20 = 1 << (*(byte *)(param_1 + 0x16) & 0xf) & 0xffff;\n        local_1c = (uVar6 >> 3 & 1) << 4 | uVar6 & 7;\n        local_18 = (uVar6 << 0x1a) >> 0x1e;\n        FUN_08002624(uVar5,&local_20);\n        *(int **)(PTR_DAT_08005228 + (uint)*(byte *)(param_1 + 0x11) * 4) = param_1 + 1;\n        param_1[1] = *param_1;\n        param_1[2] = param_1[0x12];\n        param_1[3] = param_1[0x13];\n        param_1[4] = param_1[0x14];\n        param_1[5] = param_1[0x15];\n        param_1[6] = 0xc;\n        param_1[7] = 0;\n        param_1[8] = 0;\n        FUN_0800441a(param_1 + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800441a",
                "FUN_08004884",
                "FUN_08004d06",
                "FUN_080068f0",
                "FUN_08002624",
                "FUN_08004cce",
                "FUN_08004c78"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004f4c",
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "imported": false,
            "current_name": "FUNC_08004f4c"
        },
        "FUN_080055bc": {
            "renaming": {
                "FUN_080055bc": "find_index_080055bc",
                "param_1": "search_value",
                "uVar1": "index"
            },
            "code": "uint find_index_080055bc(int search_value)\n{\n  uint index;\n  if (search_value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while (index <= 4) {\n      if (search_value == *(int *)(PTR_DAT_080055dc + index * 4)) {\n        return index;\n      }\n      index++;\n    }\n  }\n  return index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080055bc",
            "calling": [
                "FUN_080055e0",
                "FUN_08005604"
            ],
            "imported": false,
            "current_name": "find_index_080055bc"
        },
        "FUN_08001960": {
            "renaming": {
                "FUN_08001960": "set_params_08001960",
                "param_1": "target",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "param4",
                "param_6": "param5",
                "iVar1": "result",
                "puVar2": "ptr",
                "uVar3": "ptr1",
                "uVar4": "ptr3",
                "uVar5": "ptr2",
                "uVar6": "ptr4",
                "FUN_08000a04": "get_result",
                "*(undefined4 *)(param_1 + 0x60)": "*(int *)(target + 0x60)",
                "*(undefined4 *)(param_1 + 100)": "*(int *)(target + 100)",
                "*(undefined4 *)(param_1 + 0x68)": "*(int *)(target + 0x68)",
                "*(undefined4 *)(param_1 + 0x6c)": "*(int *)(target + 0x6c)",
                "*(char *)(param_1 + 0x70)": "*(char *)(target + 0x70)",
                "*(undefined4 **)(param_1 + 0x3c)": "*(int **)(target + 0x3c)",
                "FUN_080009dc": "check_params",
                "FUN_08000a18": "update_params",
                "*puVar2": "*ptr",
                "puVar2[1]": "ptr[1]",
                "*(undefined4 *)(param_1 + 0x48)": "*(int *)(target + 0x48)",
                "*(undefined4 *)(param_1 + 0x4c)": "*(int *)(target + 0x4c)"
            },
            "code": "void set_params_08001960(int target, int param1, int param2, int param3, int param4, int param5)\n{\n  int result = FUN_08000a04(param2, param3, param4, param5, param3);\n  if (result == 0) {\n    *(int *)(target + 0x60) = param2;\n    *(int *)(target + 100) = param3;\n    *(int *)(target + 0x68) = param4;\n    *(int *)(target + 0x6c) = param5;\n    if (*(char *)(target + 0x70) != '\\0') {\n      int *ptr = *(int **)(target + 0x3c);\n      int ptr1 = *ptr;\n      int ptr2 = ptr[1];\n      int result1 = FUN_080009dc(param4, param5, ptr1, ptr2);\n      if (result1 == 0) {\n        int result2 = FUN_08000a18(param2, param3, ptr1, ptr2);\n        if (result2 != 0) {\n          *ptr = param2;\n          ptr[1] = param3;\n        }\n      }\n      else {\n        *ptr = param4;\n        ptr[1] = param5;\n      }\n      int ptr3 = *(int *)(target + 0x48);\n      int ptr4 = *(int *)(target + 0x4c);\n      int ptr5 = *(int *)(target + 0x68);\n      int ptr6 = *(int *)(target + 0x6c);\n      int result3 = FUN_08000a18(ptr3, ptr4, ptr5, ptr6);\n      if (result3 != 0) {\n        *(int *)(target + 0x48) = ptr5;\n        *(int *)(target + 0x4c) = ptr6;\n        return;\n      }\n      ptr1 = *(int *)(target + 0x60);\n      ptr2 = *(int *)(target + 100);\n      int result4 = FUN_080009dc(ptr3, ptr4, ptr1, ptr2);\n      if (result4 != 0) {\n        *(int *)(target + 0x48) = ptr1;\n        *(int *)(target + 0x4c) = ptr2;\n      }\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08000a04",
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001960",
            "calling": [
                "FUN_08001ab0",
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "set_params_08001960"
        },
        "FUN_08004ca2": {
            "renaming": {
                "FUN_08004ca2": "check_param_not_zero_08004ca2",
                "param_1": "param",
                "uVar1": "result",
                "FUN_08004c8a": "call_some_function"
            },
            "code": "int check_param_not_zero_08004ca2(int param) {\n  int result = 0xffffffff;\n  if (param != 0) {\n    result = call_some_function();\n  }\n  return result;\n}",
            "called": [
                "FUN_08004c8a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ca2",
            "calling": [
                "FUN_08005384",
                "FUN_08005b54"
            ],
            "imported": false,
            "current_name": "check_param_not_zero_08004ca2"
        },
        "FUN_08002810": {
            "renaming": {
                "FUN_08002810": "is_param2_bit_set_in_param1_08002810",
                "param_1": "param1",
                "param_2": "param2",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "int is_param2_bit_set_in_param1_08002810(uint32_t param1, uint32_t param2) {\n    uint32_t* PTR_param1_plus_8 = (uint32_t*)(param1 + 8);\n    if((param2 & *PTR_param1_plus_8) == 0) {\n        return 0;\n    }\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002810",
            "calling": [
                "FUN_08004c48"
            ],
            "imported": false,
            "current_name": "is_param2_bit_set_in_param1_08002810"
        },
        "FUN_0800224c": {
            "renaming": {
                "FUN_0800224c": "clear_bits_and_set_field_0800224c",
                "param_1": "param_array",
                "iVar1": "result",
                "DAT_08002340": "DAT_mask_1",
                "DAT_08002344": "DAT_mask_2"
            },
            "code": "int clear_bits_and_set_field_0800224c(int *param_array)\n{\n    int result;\n\n    if (param_array == NULL) {\n        result = 1;\n    }\n    else {\n        param_array[10] |= 2;\n        result = FUN_080020f0();\n        if (result == 0) {\n            *(int *)(*param_array) = -32;\n            *(unsigned int *)(*param_array + 4) &= DAT_08002340;\n            *(unsigned int *)(*param_array + 8) &= DAT_08002344;\n            *(unsigned int *)(*param_array + 12) &= 0xFF000000;\n            *(unsigned int *)(*param_array + 16) &= 0xC0000000;\n            *(unsigned int *)(*param_array + 20) &= 0xFFFFF000;\n            *(unsigned int *)(*param_array + 24) &= 0xFFFFF000;\n            *(unsigned int *)(*param_array + 28) &= 0xFFFFF000;\n            *(unsigned int *)(*param_array + 32) &= 0xFFFFF000;\n            *(unsigned int *)(*param_array + 36) &= 0xFFFFF000;\n            *(unsigned int *)(*param_array + 40) &= 0xFFFFF000;\n            *(unsigned int *)(*param_array + 44) &= 0xFF000000;\n            *(unsigned int *)(*param_array + 48) &= 0xFF000000;\n            *(unsigned int *)(*param_array + 52) &= 0xC0000000;\n            *(unsigned int *)(*param_array + 56) &= 0xC0000000;\n            *(unsigned int *)(*param_array + 60) &= 0xFFC00000;\n            *(unsigned int *)(*param_array + 64) &= 0xFFC00000;\n            FUN_080049f0(param_array);\n            param_array[11] = 0;\n            param_array[10] = 0;\n        }\n        *(char *)(param_array + 9) = 0;\n    }\n    return result;\n}",
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800224c",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "clear_bits_and_set_field_0800224c"
        },
        "FUN_080054b0": {
            "renaming": {
                "FUN_080054b0": "is_valid_080054b0",
                "param_1": "input",
                "uVar1": "val"
            },
            "code": "bool is_valid_080054b0(int input)\n{\n  uint32_t ptr_val = *(uint32_t*)(PTR_DAT_080054d0 + (uint32_t)*(uint8_t*)(input + 0x44) * 4);\n  uint32_t val = FUN_080047e8(ptr_val);\n  bool is_valid_080054b0 = (val & 0x21) == 0x21;\n  return is_valid_080054b0;\n}",
            "called": [
                "FUN_080047e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080054b0",
            "calling": [],
            "imported": false,
            "current_name": "is_valid_080054b0"
        },
        "FUN_08006f00": {
            "renaming": {
                "FUN_08006f00": "process_input_08006f00",
                "param_1": "input_size",
                "puVar1": "function_table_ptr",
                "uVar2": "function_table_size",
                "piVar3": "function_table",
                "iVar4": "result",
                "pcVar5": "function",
                "unaff_r4": "register4",
                "unaff_r5": "register5",
                "in_lr": "link_register"
            },
            "code": "int process_input_08006f00(uint input_size)\n{\n  int *function_table = *(int **)function_table_ptr_ptr;\n  if (input_size > 31) {\n    *function_table = 22;\n    return -1;\n  }\n  int function_ptr = function_table[17];\n  if ((function_ptr != 0) && (*(code **)(function_ptr + input_size * 4) != NULL)) {\n    code *function = *(code **)(function_ptr + input_size * 4);\n    if (function != (code *)0x1) {\n      if (function == (code *)-1) {\n        *function_table = 22;\n        return 1;\n      }\n      *(undefined4 *)(function_ptr + input_size * 4) = 0;\n      (*function)(input_size);\n    }\n    return 0;\n  }\n  undefined *function_table_ptr = function_table_ptr_ptr;\n  undefined4 function_table_size = thunk_get_function_table_size(function_table);\n  undefined *error_ptr = error_ptr_ptr;\n  *(undefined4 *)error_ptr_ptr = 0;\n  int result = process_input_08006f00_internal(function_table_size, input_size, input_size, 0, function_table_ptr, register4, register5, link_register);\n  if ((result == -1) && (*(int *)error_ptr != 0)) {\n    *function_table = *(int *)error_ptr;\n  }\n  return result;\n}",
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006f00",
            "calling": [
                "FUN_08006ac0"
            ],
            "imported": false,
            "current_name": "process_input_08006f00"
        },
        "FUN_080016b4": {
            "renaming": {
                "FUN_080016b4": "process_input_080016b4",
                "param_1": "input_address",
                "cVar1": "input_char",
                "iVar2": "var1",
                "iVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "uVar8": "var8",
                "uVar9": "var9",
                "uVar10": "var10",
                "cVar11": "var11",
                "uVar12": "var13",
                "uVar13": "var14",
                "uVar14": "var15",
                "uVar15": "var16",
                "uVar16": "var17",
                "uVar17": "var24",
                "uVar18": "var21",
                "local_38": "var23",
                "uStack_34": "var22"
            },
            "code": "char process_input_080016b4(int input_address)\n{\n  char input_char = *(char *)(input_address + 0x70);\n  if (input_char != '\\0') {\n    int var1 = calculate_var1();\n    int var2 = *(int *)(input_address + 0x44);\n    int var3 = *(int *)(input_address + 0x58);\n    if ((uint)(var1 - var2) < var3) {\n      input_char = '\\0';\n    }\n    else {\n      undefined4 var4 = **(undefined4 **)(input_address + 0x38);\n      undefined4 var5 = (*(undefined4 **)(input_address + 0x38))[1];\n      undefined8 var6 = FUNC_08000190(**(undefined4 **)(input_address + 0x40),(*(undefined4 **)(input_address + 0x40))[1]);\n      undefined4 var7 = (undefined4)((ulonglong)var6 >> 0x20);\n      undefined8 var8 = FUNC_08000190(var4,var5,*(undefined4 *)(input_address + 0x50),*(undefined4 *)(input_address + 0x54));\n      undefined4 var9 = (undefined4)((ulonglong)var8 >> 0x20);\n      undefined8 var10 = FUNC_080004f8((int)var6,var7,*(undefined4 *)(input_address + 0x20),*(undefined4 *)(input_address + 0x24));\n      var10 = FUNC_08000194((int)var10,(int)((ulonglong)var10 >> 0x20),*(undefined4 *)(input_address + 0x48),*(undefined4 *)(input_address + 0x4c));\n      *(undefined8 *)(input_address + 0x48) = var10;\n      char var11 = *(char *)(input_address + 0x71);\n      if (var11 == '\\0') {\n        undefined8 var12 = FUNC_080004f8((int)var8,var9,*(undefined4 *)(input_address + 0x18),*(undefined4 *)(input_address + 0x1c));\n        var10 = FUNC_08000190((int)var10,(int)((ulonglong)var10 >> 0x20),(int)var12,(int)((ulonglong)var12 >> 0x20));\n        *(undefined8 *)(input_address + 0x48) = var10;\n      }\n      undefined4 var13 = *(undefined4 *)(input_address + 0x48);\n      undefined4 var14 = *(undefined4 *)(input_address + 0x4c);\n      undefined4 var15 = *(undefined4 *)(undefined8 *)(input_address + 0x68);\n      undefined4 var16 = *(undefined4 *)(input_address + 0x6c);\n      undefined8 var17 = *(undefined8 *)(input_address + 0x68);\n      int var18 = check_input(var13,var14,var15,var16);\n      if (var18 == 0) {\n        undefined4 var19 = *(undefined4 *)(input_address + 0x60);\n        undefined4 var20 = *(undefined4 *)(input_address + 100);\n        int var21 = check_input(var13,var14);\n        if (var21 != 0) {\n          *(undefined4 *)(input_address + 0x48) = var19;\n          *(undefined4 *)(input_address + 0x4c) = var20;\n        }\n      }\n      else {\n        *(undefined4 *)(input_address + 0x48) = var15;\n        *(undefined4 *)(input_address + 0x4c) = var16;\n      }\n      if (var11 == '\\0') {\n        var6 = 0;\n      }\n      else {\n        var6 = FUNC_080004f8((int)var6,var7,*(undefined4 *)(input_address + 0x18),*(undefined4 *)(input_address + 0x1c));\n      }\n      undefined4 var22 = (undefined4)((ulonglong)var6 >> 0x20);\n      undefined4 var23 = (undefined4)var6;\n      undefined8 var24 = FUNC_080004f8((int)var8,var9,*(undefined4 *)(input_address + 0x28),*(undefined4 *)(input_address + 0x2c));\n      var24 = FUNC_08000190(var13,var14,(int)var24,(int)((ulonglong)var24 >> 0x20));\n      var24 = FUNC_08000194(var23,var22,(int)var24,(int)((ulonglong)var24 >> 0x20));\n      var13 = (undefined4)((ulonglong)var24 >> 0x20);\n      var18 = check_input(var15,var16,(int)var24,var13);\n      if (var18 == 0) {\n        var17 = *(undefined8 *)(input_address + 0x60);\n        var18 = check_input((int)var24,var13,*(undefined4 *)(undefined8 *)(input_address + 0x60),*(undefined4 *)(input_address + 100));\n        if (var18 == 0) {\n          var17 = var24;\n        }\n      }\n      **(undefined8 **)(input_address + 0x3c) = var17;\n      *(undefined4 *)(input_address + 0x50) = var4;\n      *(undefined4 *)(input_address + 0x54) = var5;\n      *(int *)(input_address + 0x44) = var1;\n    }\n  }\n  return input_char;\n}",
            "called": [
                "FUN_08000194",
                "FUN_08000a18",
                "FUN_080004f8",
                "FUN_080058e0",
                "FUN_08000190",
                "FUN_080009dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016b4",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "process_input_080016b4"
        },
        "FUN_0800074c": {
            "renaming": {
                "FUN_0800074c": "FUNC_0800074c"
            },
            "code": "\nulonglong FUNC_0800074c(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_080008ba();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_0800086a;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_0800086a:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_080008ba"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800074c",
            "calling": [
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "FUNC_0800074c"
        },
        "FUN_080018f8": {
            "renaming": {
                "FUN_080018f8": "execute_function_080018f8",
                "FUN_08001814": "call_another_function"
            },
            "code": "void execute_function_080018f8(void)\n{\n  call_another_function();\n  return;\n}",
            "called": [
                "FUN_08001814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018f8",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "execute_function_080018f8"
        },
        "FUN_08005890": {
            "renaming": {
                "FUN_08005890": "get_character_from_data_08005890",
                "param_1": "index",
                "cVar1": "character",
                "iVar2": "value",
                "uVar3": "unknown_value",
                "uVar4": "data_index",
                "PTR_DAT_080058d8": "DATA_POINTER_1",
                "PTR_DAT_080058dc": "DATA_POINTER_2",
                "FUN_080047f4": "FUNCTION_1",
                "FUN_08004848": "FUNCTION_2",
                "FUN_08004c48": "FUNCTION_3"
            },
            "code": "char get_character_from_data_08005890(uint index) {\n  char character;\n  int value;\n  undefined4 unknown_value;\n  uint data_index;\n  if (index < 60) {\n    data_index = (uint)(char)PTR_DAT_080058d8[index];\n  }\n  else {\n    data_index = 0xffffffff;\n  }\n  if (data_index == 0xffffffff) {\n    character = '\\0';\n  }\n  else {\n    value = FUNCTION_1(data_index, PTR_DAT_080058dc);\n    if (value == 0) {\n      character = '\\0';\n    }\n    else {\n      unknown_value = FUNCTION_2((data_index << 24) >> 28);\n      character = FUNCTION_3(unknown_value, 1 << (data_index & 0xf) & 0xffff);\n    }\n  }\n  if (character != '\\0') {\n    character = '\\x01';\n  }\n  return character;\n}\n",
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005890",
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "imported": false,
            "current_name": "get_character_from_data_08005890"
        },
        "FUN_08005da0": {
            "renaming": {
                "FUN_08005da0": "call_helper_function_08005da0",
                "FUN_08005d8a": "helper_function"
            },
            "code": "void call_helper_function_08005da0(void)\n{\n  helper_function();\n  return;\n}",
            "called": [
                "FUN_08005d8a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005da0",
            "calling": [],
            "imported": false,
            "current_name": "call_helper_function_08005da0"
        },
        "FUN_08004cb2": {
            "renaming": {
                "FUN_08004cb2": "find_character_in_string_08004cb2",
                "param_1": "character",
                "param_2": "string",
                "*param_2": "*string",
                "0xc": "12",
                "*(undefined4 *)(param_2 + 8)": "*(unsigned int *)(string + 8)"
            },
            "code": "unsigned int find_character_in_string_08004cb2(int character, char *string)\n{\n  while(true)\n  {\n    if (*string == -1)\n    {\n      return 0xffffffff;\n    }\n    if (*string == character)\n    {\n      break;\n    }\n    string = string + 12;\n  }\n  return *(unsigned int *)(string + 8);\n}",
            "called": [
                "FUN_08004cb2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cb2",
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "imported": false,
            "current_name": "find_character_in_string_08004cb2"
        },
        "FUN_08004ef4": {
            "renaming": {
                "FUN_08004ef4": "validate_and_call_function_08004ef4",
                "param_1": "input",
                "iVar1": "function_result",
                "FUN_08004e70": "get_function_result",
                "FUN_08002c10": "call_function"
            },
            "code": "void validate_and_call_function_08004ef4(undefined4 input)\\n{\\n  int function_result;\\n  function_result = get_function_result();\\n  if (*(char *)(function_result + 0x5d) == \"\\0\") {\\n    call_function(input);\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002c10",
                "FUN_08004e70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ef4",
            "calling": [
                "FUN_0800316c"
            ],
            "imported": false,
            "current_name": "validate_and_call_function_08004ef4"
        },
        "FUN_08001294": {
            "renaming": {
                "FUN_08001294": "set_params_08001294",
                "param_1": "obj_ptr",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "param4"
            },
            "code": "void set_params_08001294(int obj_ptr, undefined param1, undefined param2, undefined param3, undefined param4) {\n  *(undefined *)(obj_ptr + 0x18) = param1;\n  *(undefined *)(obj_ptr + 0x19) = param2;\n  *(undefined *)(obj_ptr + 0x1a) = param3;\n  *(undefined *)(obj_ptr + 0x1b) = param4;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001294",
            "calling": [
                "FUN_080013a4"
            ],
            "imported": false,
            "current_name": "set_params_08001294"
        },
        "FUN_08002384": {
            "renaming": {
                "FUN_08002384": "process_data_08002384",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "divisor",
                "iVar3": "start_time",
                "iVar4": "current_time",
                "uVar5": "time_difference",
                "local_14": "is_processing_complete",
                "PTR_DAT_0800246c": "PTR_DAT_divisor",
                "FUN_080020f0": "initialize",
                "FUN_08003da4": "calculate_divisor",
                "FUN_08001f84": "perform_operation",
                "FUN_08001cc4": "get_current_time"
            },
            "code": "int process_data_08002384(int *data)\n{\n  int result;\n  uint divisor;\n  int start_time;\n  int current_time;\n  uint time_difference;\n  int is_processing_complete = *(char *)(data + 9);\n  if (is_processing_complete == 1)\n  {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = initialize();\n  if (result == 0)\n  {\n    data[10] = (data[10] & 0xffffeefdU) | 2;\n    divisor = *(uint *)PTR_DAT_0800246c;\n    divisor = calculate_divisor(2);\n    for (start_time = divisor / divisor << 1; start_time != 0; start_time = start_time + -1) {}\n    perform_operation(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    start_time = get_current_time();\n    while ((*(uint *)(*data + 8) & 8) != 0)\n    {\n      current_time = get_current_time();\n      if (10 < (uint)(current_time - start_time))\n      {\n        data[10] = (data[10] & 0xffffffedU) | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n    start_time = get_current_time();\n    while ((*(uint *)(*data + 8) & 4) != 0)\n    {\n      current_time = get_current_time();\n      if (10 < (uint)(current_time - start_time))\n      {\n        data[10] = (data[10] & 0xffffffedU) | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = (data[10] & 0xfffffffcU) | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}",
            "called": [
                "FUN_080020f0",
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002384",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "process_data_08002384"
        },
        "FUN_08005650": {
            "renaming": {
                "FUN_08005650": "do_nothing_08005650"
            },
            "code": "\nvoid do_nothing_08005650(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005650",
            "calling": [
                "FUN_080046b8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005650"
        },
        "FUN_08002ad8": {
            "renaming": {
                "FUN_08002ad8": "process_data_08002ad8",
                "param_1": "data",
                "puVar1": "char_ptr",
                "PTR_": "data_",
                "DAT_": "data_"
            },
            "code": "int process_data_08002ad8(int *data)\n{\n  int *PTR_ptr = data;\n  short *short_ptr = (short *)(data + 10);\n  if (*short_ptr != 0) {\n    unsigned char *char_ptr = (unsigned char *)(PTR_ptr + 9);\n    *char_ptr++ = (unsigned char)(*PTR_ptr + 16);\n    *short_ptr -= 1;\n    }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad8",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_data_08002ad8"
        },
        "FUN_08004204": {
            "renaming": {
                "FUN_08004204": "calculate_value_08004204",
                "param_1": "input_array",
                "uVar1": "factor_value",
                "uVar2": "mask_value",
                "iVar3": "result1",
                "iVar4": "result2",
                "iVar5": "result3",
                "iVar6": "result4",
                "iVar7": "result5",
                "iVar8": "result6",
                "iVar9": "result7",
                "iVar10": "value1",
                "iVar11": "value2",
                "iVar12": "ptr",
                "DAT_080043ac": "PTR_DAT_080043ac",
                "DAT_080043b0": "PTR_DAT_080043b0",
                "mask1": "0xffffcfff",
                "mask2": "0xffffe9f3",
                "mask3": "0xfffffcff",
                "factor1": "0x19",
                "factor2": "0x10",
                "factor3": "0x32",
                "factor4": "0x25",
                "factor5": "0x17"
            },
            "code": "void calculate_value_08004204(int *input_array)\n{\n  uint32_t mask1 = 0xffffcfff;\n  uint32_t mask2 = 0xffffe9f3;\n  uint32_t mask3 = 0xfffffcff;\n  uint32_t factor1 = 0x19;\n  uint32_t factor2 = 0x10;\n  uint32_t factor3 = 0x32;\n  uint32_t factor4 = 0x25;\n  uint32_t factor5 = 0x17;\n  uint32_t value1 = input_array[3];\n  uint32_t value2 = input_array[2] | input_array[4] | input_array[5];\n  uint32_t value3 = input_array[6];\n  uint32_t* ptr = (uint32_t*)input_array;\n  if (*ptr != DAT_080043ac) {\n    uint32_t result1 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result2 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result3 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result4 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result5 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result6 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result7 = calculate_factor(input_array[1], factor1, factor5);\n    *ptr += ((result2 / (input_array[1] << 2) + (result5 * DAT_080043b0 >> factor4) * -100) * factor2 + factor3) >> factor5 << factor3 & factor1 << factor2 | (result1 / (input_array[1] << 2) + (result4 / (input_array[1] << 2) + (result6 / (input_array[1] << 2) + (result7 * DAT_080043b0 >> factor4) * -100) * factor2) * factor2 + factor3) >> factor4 & 0xf0 | DAT_080043b0 * (result3 / (input_array[1] << 2)) >> factor4 * factor2;\n  }\n  else {\n    uint32_t result1 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result2 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result3 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result4 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result5 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result6 = calculate_factor(input_array[1], factor1, factor5);\n    uint32_t result7 = calculate_factor(input_array[1], factor1, factor5);\n    *ptr += ((result2 / (input_array[1] << 2) + (result5 * DAT_080043b0 >> factor4) * -100) * factor2 + factor3) >> factor5 << factor3 & factor1 << factor2 | (result1 / (input_array[1] << 2) + (result4 / (input_array[1] << 2) + (result6 / (input_array[1] << 2) + (result7 * DAT_080043b0 >> factor4) * -100) * factor2) * factor2 + factor3) >> factor4 & 0xf0 | DAT_080043b0 * (result3 / (input_array[1] << 2)) >> factor4 * factor2;\n  }\n}\n\nuint32_t calculate_factor(uint32_t value, uint32_t factor1, uint32_t factor2)\n{\n  return (uint32_t)((ulonglong)DAT_080043b0 * (ulonglong)(uint32_t)((int)((ulonglong)value * (ulonglong)factor1 >> factor2) & 0xffffffff) >> factor2);\n}",
            "called": [
                "FUN_08003c70",
                "FUN_08003c50"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004204",
            "calling": [
                "FUN_0800441a"
            ],
            "imported": false,
            "current_name": "calculate_value_08004204"
        },
        "FUN_08005da8": {
            "renaming": {
                "FUN_08005da8": "process_data_08005da8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "data5",
                "iVar1": "result",
                "iVar3": "temp_result",
                "temp_data4": "temp_data4",
                "temp_data3": "temp_data3",
                "temp_data4_without_sign_bit": "temp_data4_without_sign_bit",
                "temp_data3_with_high_bits": "temp_data3_with_high_bits",
                "bVar4": "temp_byte",
                "lVar5": "temp_long",
                "uVar2": "temp_undefined4",
                "uVar6": "temp_undefined8_1",
                "uVar7": "temp_undefined8_2"
            },
            "code": "int process_data_08005da8(undefined4 data1, undefined4 data2, undefined4 data3, uint data4, byte data5)\n{\n    int result = 0;\n    int temp_result = 0;\n    int temp_data4 = data4;\n    int temp_data3 = data3;\n    int temp_data4_without_sign_bit = data4 & 0x7fffffff;\n    int temp_data3_with_high_bits = 0xe0000000 | data3;\n    byte temp_byte = 0;\n    longlong temp_long = (longlong)DAT_08005f14 << 0x20;\n    undefined4 temp_undefined4;\n    undefined8 temp_undefined8_1;\n    undefined8 temp_undefined8_2;\n\n    temp_result = FUN_08000a2c(temp_data3, temp_data4, temp_data3, temp_data4);\n    if (temp_result == 0) {\n        temp_result = FUN_08000a2c(temp_data3, temp_data4_without_sign_bit, 0xffffffff, DAT_08005f08);\n        if ((temp_result == 0) && (temp_result = FUN_080009f0(temp_data3, temp_data4_without_sign_bit, 0xffffffff, DAT_08005f08), temp_result == 0)) {\n            result = FUN_08005c96(data1, PTR_DAT_08005f20);\n        }\n        else {\n            temp_result = FUN_08000a18(temp_data3, temp_data4, temp_data3_with_high_bits, DAT_08005f0c);\n            if (temp_result == 0) {\n                temp_result = FUN_080009dc(temp_data3, temp_data4, temp_data3_with_high_bits, DAT_08005f10);\n                if (temp_result == 0) {\n                    temp_result = FUN_080009dc(temp_data3, temp_data4, 0, 0);\n                    if (temp_result != 0) {\n                        result = FUN_08005cb6(data1, 0x2d);\n                        temp_data4 += 0x80000000;\n                    }\n                }\n                else {\n                    result = FUN_08005c96(data1, PTR_DAT_08005f24);\n                }\n            }\n            else {\n                result = FUN_08005c96(data1, PTR_DAT_08005f24);\n            }\n        }\n    }\n    else {\n        result = FUN_08005c96(data1, PTR_DAT_08005f1c);\n    }\n\n    if (result == 0) {\n        temp_long = (ulonglong)DAT_08005f14 << 0x20;\n        for (temp_byte = 0; temp_byte < data5; temp_byte++) {\n            temp_long = FUNC_0800074c((int)temp_long, (undefined4)((ulonglong)temp_long >> 0x20), 0, DAT_08005f18);\n        }\n        temp_undefined8_1 = FUNC_08000194(temp_data3, temp_data4, (int)temp_long, (undefined4)((ulonglong)temp_long >> 0x20));\n        temp_undefined4 = FUN_08000aa8();\n        temp_undefined8_2 = FUN_0800040c();\n        temp_undefined8_1 = FUNC_08000190((int)temp_undefined8_1, (int)((ulonglong)temp_undefined8_1 >> 0x20), (int)temp_undefined8_2, (int)((ulonglong)temp_undefined8_2 >> 0x20));\n        temp_result = FUN_08005d8a(data1, temp_undefined4, 10);\n        result += temp_result;\n\n        if (data5 != 0) {\n            temp_result = FUN_08005c96(data1, PTR_DAT_08005f28);\n            result += temp_result;\n        }\n\n        while (data5 != 0) {\n            temp_undefined8_1 = FUNC_080004f8((int)temp_undefined8_1, (int)((ulonglong)temp_undefined8_1 >> 0x20), 0, DAT_08005f18);\n            temp_undefined4 = FUN_08000a58();\n            temp_result = FUN_08005d82(data1, temp_undefined4, 10);\n            result += temp_result;\n            temp_undefined8_2 = FUN_0800042c(temp_undefined4);\n            temp_undefined8_1 = FUNC_08000190((int)temp_undefined8_1, (int)((ulonglong)temp_undefined8_1 >> 0x20), (int)temp_undefined8_2, (int)((ulonglong)temp_undefined8_2 >> 0x20));\n            data5--;\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_080009f0",
                "FUN_08000a18",
                "FUN_08000a58",
                "FUN_08000a2c",
                "FUN_0800074c",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_08005cb6",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_08005d82",
                "FUN_0800042c",
                "FUN_08000aa8",
                "FUN_08005d8a",
                "FUN_08000190"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005da8",
            "calling": [
                "FUN_08005f2c"
            ],
            "imported": false,
            "current_name": "process_data_08005da8"
        },
        "FUN_080045fe": {
            "renaming": {
                "FUN_080045fe": "set_flag_and_call_function_080045fe",
                "param_1": "flag_ptr",
                "*(uint *)(*param_1 + 0xc)": "flag",
                "*(undefined *)((int)param_1 + 0x39)": "char_ptr",
                "FUN_08005604": "call_function"
            },
            "code": "int set_flag_and_call_function_080045fe(int *flag_ptr)\n{\n    uint *flag = (uint *)(*flag_ptr + 0xc);\n    *flag &= 0xffffffbf;\n    char *char_ptr = (char *)flag_ptr + 0x39;\n    *char_ptr = 0x20;\n    call_function();\n    return 0;\n}",
            "called": [
                "FUN_08005604"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080045fe",
            "calling": [
                "FUN_080046b8"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_function_080045fe"
        },
        "FUN_08005f2c": {
            "renaming": {
                "FUN_08005f2c": "initialize_system_08005f2c",
                "FUN_08005da8": "initialize_network"
            },
            "code": "void initialize_system_08005f2c(void)\n{\n  initialize_network();\n  return;\n}",
            "called": [
                "FUN_08005da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005f2c",
            "calling": [
                "FUN_08005f40",
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "initialize_system_08005f2c"
        },
        "FUN_080055e0": {
            "renaming": {
                "FUN_080055e0": "execute_function_based_on_value_080055e0",
                "uVar1": "value",
                "PTR_DAT_080055fc": "function_pointer_array",
                "PTR_DAT_08005600": "parameter_array",
                "**(code **)(PTR_DAT_080055fc + uVar1 * 4))": "*(void (**)(uint32_t))(function_pointer_array + value * 4)",
                "*(undefined4 *)(PTR_DAT_08005600 + uVar1 * 4)": "*(uint32_t *)(parameter_array + value * 4)"
            },
            "code": "void execute_function_based_on_value_080055e0(void)\n{\n  uint8_t value;\n  value = get_value();\n  if (value < 5) {\n    void (*function_pointer)(uint32_t);\n    function_pointer = *(void (**)(uint32_t))(PTR_DAT_080055fc + value * 4);\n    uint32_t parameter = *(uint32_t *)(PTR_DAT_08005600 + value * 4);\n    function_pointer(parameter);\n  }\n  return;\n}",
            "called": [
                "FUN_080055bc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080055e0",
            "calling": [
                "FUN_08004618"
            ],
            "imported": false,
            "current_name": "execute_function_based_on_value_080055e0"
        },
        "FUN_08005f40": {
            "renaming": {
                "FUN_08005f40": "calculate_sum_of_two_values_08005f40",
                "param_1": "input_value",
                "iVar1": "value_1",
                "iVar2": "value_2",
                "FUN_08005f2c": "retrieve_value_1",
                "FUN_08005cc0": "calculate_value_2"
            },
            "code": "int calculate_sum_of_two_values_08005f40(undefined4 input_value)\n{\n  int value_1 = retrieve_value_1();\n  int value_2 = calculate_value_2(input_value);\n  return value_1 + value_2;\n}",
            "called": [
                "FUN_08005cc0",
                "FUN_08005f2c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005f40",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "calculate_sum_of_two_values_08005f40"
        },
        "FUN_0800213c": {
            "renaming": {
                "FUN_0800213c": "check_parameters_0800213c",
                "param_1": "params",
                "iVar1": "status",
                "uVar2": "mask",
                "uVar3": "flags"
            },
            "code": "int check_parameters_0800213c(int *params) {\n    int status;\n    uint32_t flags, mask;\n\n    if (params == NULL) {\n        return 1;\n    }\n\n    if (params[10] == 0) {\n        params[11] = 0;\n        *(uint8_t *)(params + 9) = 0;\n        do_something();\n    }\n\n    status = check_params(params);\n    flags = params[10] & 0x10;\n    if ((flags == 0) && (status == 0)) {\n        params[10] = params[10] & 0xffffeefd | 2;\n\n        mask = params[1] | params[7] | params[3] << 1;\n        if (params[2] == 0x100 || params[2] == 1) {\n            flags = 0x100;\n        }\n\n        if (params[5] == 1) {\n            if (params[3] == 0) {\n                flags |= (params[6] - 1) * 0x2000 | 0x800;\n            }\n            else {\n                params[10] |= 0x20;\n                params[11] |= 1;\n            }\n        }\n\n        *(uint32_t *)(*params + 4) = flags | (*(uint32_t *)(*params + 4) & 0xffff16ff);\n        *(uint32_t *)(*params + 8) = DAT_08002244 & (*(uint32_t *)(*params + 8)) | mask;\n\n        if (params[2] == 0x100 || params[2] == 1) {\n            flags = (params[4] - 1) * 0x100000;\n        }\n        else {\n            flags = 0;\n        }\n\n        *(uint32_t *)(*params + 0x2c) = flags | (*(uint32_t *)(*params + 0x2c) & 0xff0fffff);\n\n        if (mask != (DAT_08002248 & (*(uint32_t *)(*params + 8))))) {\n            params[10] = params[10] & 0xffffffed | 0x10;\n            params[11] |= 1;\n            return 1;\n        }\n        params[11] = 0;\n        params[10] = params[10] & 0xfffffffc | 1;\n        return 0;\n    }\n    params[10] |= 0x10;\n    return 1;\n}",
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800213c",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "check_parameters_0800213c"
        },
        "FUN_0800455a": {
            "renaming": {
                "FUN_0800455a": "check_params_0800455a",
                "param_1": "params",
                "param_2": "param_2",
                "param_3": "param_3",
                "*(char *)((int)param_1 + 0x39)": "*(char *)((int)params + 0x39)",
                "*(char *)(param_1 + 0xe)": "*(char *)(params + 0xe)",
                "param_1[8]": "params[8]",
                "*(short *)(param_1 + 9)": "*(short *)(params + 9)",
                "*(short *)((int)param_1 + 0x26)": "*(short *)((int)params + 0x26)",
                "params[0xf]": "params[0xf]",
                "*(undefined *)((int)param_1 + 0x39)": "*(undefined *)((int)params + 0x39)",
                "*(undefined *)(param_1 + 0xe)": "*(undefined *)(params + 0xe)",
                "*(uint *)(*param_1 + 0xc)": "*(uint *)(*params + 0xc)"
            },
            "code": "int check_params_0800455a(int *params, int param_2, int param_3) {\n  if (*(char *)((int)params + 0x39) != ' ') {\n    return 2;\n  }\n  if (param_2 == 0) {\n    return 1;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  if (*(char *)(params + 0xe) != '\\x01') {\n    params[8] = param_2;\n    *(short *)(params + 9) = (short)param_3;\n    *(short *)((int)params + 0x26) = (short)param_3;\n    params[0xf] = 0;\n    *(undefined *)((int)params + 0x39) = 0x21;\n    *(undefined *)(params + 0xe) = 0;\n    *(uint *)(*params + 0xc) = *(uint *)(*params + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800455a",
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "imported": false,
            "current_name": "check_params_0800455a"
        },
        "FUN_08001a66": {
            "renaming": {
                "FUN_08001a66": "update_data_if_changed_08001a66",
                "param_1": "data_ptr",
                "param_2": "new_data",
                "param_3": "unk1",
                "param_4": "unk2",
                "uVar1": "updated_data"
            },
            "code": "void update_data_if_changed_08001a66(int data_ptr, int new_data, undefined4 unk1, undefined4 unk2)\n{\n    if (*(char *)(data_ptr + 0x70) != '\\0' && *(int *)(data_ptr + 0x30) != new_data)\n    {\n        undefined8 updated_data = FUNC_08000190(0, 0, *(undefined4 *)(data_ptr + 0x18), *(undefined4 *)(data_ptr + 0x1c), unk2);\n        *(undefined8 *)(data_ptr + 0x18) = updated_data;\n        updated_data = FUNC_08000190(0, 0, *(undefined4 *)(data_ptr + 0x20), *(undefined4 *)(data_ptr + 0x24));\n        *(undefined8 *)(data_ptr + 0x20) = updated_data;\n        updated_data = FUNC_08000190(0, 0, *(undefined4 *)(data_ptr + 0x28), *(undefined4 *)(data_ptr + 0x2c));\n        *(undefined8 *)(data_ptr + 0x28) = updated_data;\n    }\n    *(int *)(data_ptr + 0x30) = new_data;\n    return;\n}",
            "called": [
                "FUN_08000190"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001a66",
            "calling": [
                "FUN_08001ab0"
            ],
            "imported": false,
            "current_name": "update_data_if_changed_08001a66"
        },
        "FUN_08003c44": {
            "renaming": {
                "FUN_08003c44": "get_value_from_pointer_08003c44",
                "PTR_DAT_08003c4c": "value_pointer",
                "*": "value",
                "undefined4": "int"
            },
            "code": "int get_value_from_pointer_08003c44() {\n    int *PTR_DAT_08003c4c = PTR_DAT_08003c4c;\n    int value = *PTR_DAT_08003c4c;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c44",
            "calling": [
                "FUN_08003c70",
                "FUN_08001b48",
                "FUN_08003c50"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08003c44"
        },
        "FUN_080028d2": {
            "renaming": {
                "FUN_080028d2": "set_param_value_080028d2",
                "param_1": "param_array",
                "*param_1": "*param_array",
                "*(uint *)(*param_1 + 0x10)": "*ptr",
                "param_1[0x11]": "param_array[index]",
                "0xff": "0xff",
                "uint": "uint",
                "undefined4": "int",
                "return 0;": "return 0;"
            },
            "code": "int set_param_value_080028d2(int *param_array)\n{\n    int index = 0x11;\n    int value = param_array[index] & 0xff;\n    uint *ptr = (uint *)(param_array + 0x10);\n    *ptr = value;\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028d2",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "set_param_value_080028d2"
        },
        "FUN_08000a18": {
            "renaming": {
                "FUN_08000a18": "is_end_of_input_08000a18",
                "in_CY": "current_char",
                "FUN_080009a8": "execute_input_processing"
            },
            "code": "bool is_end_of_input_08000a18(void)\n{\n  char current_char;\n  execute_input_processing();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_080009a8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a18",
            "calling": [
                "FUN_080019f6",
                "FUN_08001960",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "is_end_of_input_08000a18"
        },
        "FUN_08005384": {
            "renaming": {
                "FUN_08005384": "update_settings_08005384",
                "cVar1": "selected_option",
                "puVar2": "settings_ptr",
                "uVar3": "updated_value",
                "iVar4": "option_index",
                "uVar5": "option_value",
                "PTR_DAT_080053c4": "option_list",
                "PTR_DAT_080053c8": "setting_list",
                "PTR_DAT_080053cc": "value_list",
                "PTR_DAT_080053d0": "settings_list_ptr",
                "FUNC_08004f4c": "save_settings",
                "FUN_08004c78": "find_option_index",
                "FUN_08004ca2": "apply_settings"
            },
            "code": "void update_settings_08005384(void)\n{\n  char selected_option;\n  undefined *settings_ptr;\n  undefined updated_value;\n  int option_index;\n  undefined4 option_value;\n  \n  selected_option = PTR_DAT_080053c4[1];\n  option_index = find_option_index((int)selected_option, PTR_DAT_080053c4);\n  if (option_index != 0) {\n    option_value = find_option_value((int)selected_option, PTR_DAT_080053c4);\n    updated_value = apply_settings(option_value, PTR_DAT_080053c8);\n    settings_ptr = PTR_DAT_080053d0;\n    settings_ptr[0x59] = updated_value;\n    settings_ptr[0x58] = selected_option;\n    *(undefined4 *)(settings_ptr + 0x48) = 0x2580;\n    *(undefined4 *)(settings_ptr + 0x54) = 0;\n    *(undefined4 *)(settings_ptr + 0x4c) = 0;\n    *(undefined4 *)(settings_ptr + 0x50) = 0;\n    save_settings(settings_ptr);\n  }\n  return;\n}",
            "called": [
                "FUN_08004f4c",
                "FUN_08004ca2",
                "FUN_08004c78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005384",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "update_settings_08005384"
        },
        "FUN_08005b3c": {
            "renaming": {
                "FUN_08005b3c": "set_byte_at_offset_08005b3c",
                "param_1": "offset",
                "param_2": "value",
                "uVar1": "byte_value"
            },
            "code": "void set_byte_at_offset_08005b3c(int offset, uint8_t value) {\n  uint8_t byte_value = (value < 0x3c) ? PTR_DAT_08005b50[value] : 0xff;\n  *(uint8_t *)(offset + 300) = byte_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b3c",
            "calling": [
                "FUN_08005b54"
            ],
            "imported": false,
            "current_name": "set_byte_at_offset_08005b3c"
        },
        "FUN_080046b8": {
            "renaming": {
                "FUN_080046b8": "process_data_080046b8",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "third_val",
                "puVar3": "data_ptr",
                "uVar4": "bit_check",
                "uVar5": "first_val",
                "FUN_08004618": "process_data_case1",
                "FUN_08004198": "process_data_case2",
                "FUN_080045fe": "process_data_case3",
                "do_nothing_08005650": "do_nothing",
                "PTR_LAB_080047d8_1_080047d4": "SOME_CONSTANT"
            },
            "code": "void process_data_080046b8(uint **data){\n  uint *data_ptr = *data;\n  uint first_val = *data_ptr;\n  uint third_val = data_ptr[3];\n  \n  if ((first_val & 0xf) == 0 && (first_val & 0x20) && (third_val & 0x20)){\n    process_data_080046b8_case1(data);\n    return;\n  }\n  \n  if ((first_val & 0xf) == 0 || ((data_ptr[5] & 1) == 0 && (third_val & 0x120) == 0)){\n    if ((first_val & 0x80) && (third_val & 0x80)){\n      process_data_080046b8_case2(data);\n      return;\n    }\n    \n    if ((first_val & 0x40) && (third_val & 0x40)){\n      process_data_080046b8_case3(data);\n    }\n  }\n  else {\n    if ((first_val & 1) && (third_val & 0x100)){\n      data[15] = (uint *)((uint)data[15] | 1);\n    }\n    \n    if ((first_val & 4) && (data_ptr[5] & 1)){\n      data[15] = (uint *)((uint)data[15] | 2);\n    }\n    \n    if ((first_val & 2) && (data_ptr[5] & 1)){\n      data[15] = (uint *)((uint)data[15] | 4);\n    }\n    \n    if ((first_val & 8) && (data_ptr[5] & 1)){\n      data[15] = (uint *)((uint)data[15] | 8);\n    }\n    \n    if (data[15] != (uint *)0x0){\n      if ((first_val & 0x20) && (third_val & 0x20)){\n        process_data_080046b8_case1(data);\n      }\n      \n      if (((uint)data[15] & 8) == 0 && ((**data)[5] & 0x40) == 0){\n        do_nothing(data);\n        data[15] = (uint *)0x0;\n        return;\n      }\n      \n      process_data_080046b8_case4(data);\n      data_ptr = *data;\n      \n      if ((data_ptr[5] & 0x40) == 0){\n        do_nothing(data);\n        return;\n      }\n      \n      data_ptr[5] = data_ptr[5] & 0xffffffbf;\n      \n      if (data[13] == (uint *)0x0){\n        do_nothing(data);\n        return;\n      }\n      \n      data[13][13] = (uint)PTR_LAB_080047d8_1_080047d4;\n      int result = do_something(data[13]);\n      if (result != 0){\n        (*(code *)data[13][13])();\n        return;\n      }\n    }\n  }\n}\n",
            "called": [
                "FUN_08004198",
                "FUN_0800417c",
                "FUN_08004618",
                "FUN_080045fe",
                "FUN_08005650",
                "FUN_0800258c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046b8",
            "calling": [],
            "imported": false,
            "current_name": "process_data_080046b8"
        },
        "FUN_08004c8a": {
            "renaming": {
                "FUN_08004c8a": "find_param_value_08004c8a",
                "param_1": "target_param",
                "param_2": "param_list",
                "*param_2": "*target_param_ptr"
            },
            "code": "int find_param_value_08004c8a(int target_param, char *param_list) {\n  while (true) {\n    int current_param = *(int *)(param_list + 4);\n    if (current_param == 0) {\n      return -1;\n    }\n    if (current_param == target_param) {\n      char *target_param_ptr = param_list;\n      return (int)*target_param_ptr;\n    }\n    param_list = param_list + 0xc;\n  }\n}",
            "called": [
                "FUN_08004c8a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8a",
            "calling": [
                "FUN_08004c8a",
                "FUN_08004ca2"
            ],
            "imported": false,
            "current_name": "find_param_value_08004c8a"
        },
        "FUN_08001cd0": {
            "renaming": {
                "FUN_08001cd0": "check_parameters_08001cd0",
                "param_1": "params",
                "param_2": "param_count",
                "iVar1": "start_time",
                "uVar2": "random_number",
                "iVar3": "loop_counter",
                "puVar5": "param_ptr",
                "uVar6": "random_dividend",
                "local_1c": "local_counter"
            },
            "code": "uint32_t check_parameters_08001cd0(uint32_t **params, uint32_t param_count) {\n    uint32_t local_counter = 0;\n    int32_t start_time = get_current_time();\n    uint32_t *param_ptr = *params;\n    if ((param_ptr[2] & 0x100) == 0) {\n        if (((param_ptr[1] & 0x100) == 0) && ((param_ptr[0xb] & 0xf00000) == 0)) {\n            do {\n                if ((**params & 2) != 0) {\n                    goto fail;\n                }\n            } while ((param_count == 0xffffffff) || ((param_count != 0) && (get_current_time() - start_time <= param_count)));\n            params[10] = (uint32_t *)((uint32_t)params[10] | 4);\n            *(undefined *)(params + 9) = 0;\n            return 3;\n        }\n        else {\n            uint32_t uVar6 = *(uint32_t *)PTR_DAT_08001e2c;\n            uint32_t uVar2 = get_random_number(2);\n            param_ptr = *params;\n            if (((param_ptr[4] & DAT_08001e30) == 0) && ((param_ptr[3] & DAT_08001e30 + 0xdc000000) == 0)) {\n                if ((param_ptr[4] & DAT_08001e34) == 0) {\n                    if ((param_ptr[3] & DAT_08001e38) == 0) {\n                        iVar3 = 0x14;\n                    }\n                    else {\n                        iVar3 = 0x29;\n                    }\n                }\n                else {\n                    iVar3 = 0x29;\n                }\n            }\n            else if (((param_ptr[4] & DAT_08001e34) == 0) && ((param_ptr[3] & DAT_08001e34 + 0xee000000) == 0)) {\n                iVar3 = 0x54;\n            }\n            else if ((DAT_08001e3c & param_ptr[4]) == 0) {\n                if ((DAT_08001e3c & param_ptr[3]) == 0) {\n                    iVar3 = 0x54;\n                }\n                else {\n                    iVar3 = 0xfc;\n                }\n            }\n            else {\n                iVar3 = 0xfc;\n            }\n            uVar2 = (uVar6 / uVar2) * iVar3;\n            for (; local_counter <= uVar2 && uVar2 - local_counter != 0; local_counter = local_counter + 1) {\n                if ((param_count != 0xffffffff) && ((param_count == 0) || (get_current_time() - start_time > param_count))) {\n                    params[10] = (uint32_t *)((uint32_t)params[10] | 4);\n                    *(undefined *)(params + 9) = 0;\n                    return 3;\n                }\n            }\n        }\n    }\n    else {\n        params[10] = (uint32_t *)((uint32_t)params[10] | 0x20);\n        *(undefined *)(params + 9) = 0;\n        return 1;\n    }\nfail:\n    **params = 0xffffffed;\n    params[10] = (uint32_t *)((uint32_t)params[10] | 0x200);\n    if (((*params)[2] & 0xe0000) == 0xe0000) {\n        if (params[3] == (uint32_t *)0x0) {\n            params[10] = (uint32_t *)((uint32_t)params[10] & 0xfffffeff);\n            if (((uint32_t)params[10] & 0x1000) == 0) {\n                params[10] = (uint32_t *)((uint32_t)params[10] | 1);\n                return 0;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}",
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001cd0",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "check_parameters_08001cd0"
        },
        "FUN_08004178": {
            "renaming": {
                "FUN_08004178": "do_nothing_08004178"
            },
            "code": "\nvoid do_nothing_08004178(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004178",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "do_nothing_08004178"
        },
        "FUN_08004a4c": {
            "renaming": {
                "FUN_08004a4c": "create_my_struct_08004a4c",
                "param_1": "param",
                "local_46": "result",
                "local_44": "length",
                "local_40": "first_flag",
                "local_3c": "second_flag",
                "local_38": "error_code",
                "local_34": "unused_1",
                "local_30": "unused_2",
                "local_2c": "unused_3",
                "local_28": "unused_4",
                "local_24": "unused_5",
                "local_20": "unused_6",
                "local_1c": "unused_7",
                "local_10": "unused_8",
                "PTR_DAT_08004b2c": "ptr",
                "PTR_DAT_08004b30": "ptr_value",
                "FUN_080061e0": "initialize_struct",
                "FUN_08004c78": "some_function",
                "FUN_0800213c": "get_length",
                "FUN_0800492c": "get_error_code",
                "FUN_08001e48": "some_other_function",
                "FUN_08002384": "yet_another_function",
                "FUN_08002004": "function_1",
                "FUN_08001cd0": "function_2",
                "FUN_08001f80": "is_flag_set",
                "FUN_08001e40": "get_value",
                "FUN_08002348": "function_3",
                "FUN_0800224c": "function_4"
            },
            "code": "typedef unsigned short uint16_t;\n\ntypedef struct {\n    uint16_t first;\n    uint16_t second;\n    uint16_t third;\n} my_struct;\n\nmy_struct create_my_struct_08004a4c(uint16_t param) {\n    int error_code = 0;\n    my_struct result = {0};\n    char* PTR_DAT_08004b2c = (char*)&param;\n    error_code = some_function(PTR_DAT_08004b2c);\n    if (error_code != 0) {\n        return result;\n    }\n    uint16_t length = get_length(PTR_DAT_08004b2c);\n    if (length < 0x12) {\n        result.first = 1;\n        result.second = 2;\n        error_code = some_other_function(PTR_DAT_08004b2c, &length);\n        if (error_code != 0) {\n            return result;\n        }\n        if (is_flag_set(PTR_DAT_08004b2c)) {\n            result.third = get_value(PTR_DAT_08004b2c);\n        }\n        error_code = yet_another_function(PTR_DAT_08004b2c);\n        if (error_code != 0) {\n            return result;\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_08001e40",
                "FUN_08001f80",
                "FUN_08001cd0",
                "FUN_0800492c",
                "FUN_0800224c",
                "FUN_08002348",
                "FUN_0800213c",
                "FUN_08002004",
                "FUN_08002384",
                "FUN_08001e48",
                "FUN_080061e0",
                "FUN_08004c78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a4c",
            "calling": [
                "FUN_08005754"
            ],
            "imported": false,
            "current_name": "create_my_struct_08004a4c"
        },
        "FUN_08006112": {
            "renaming": {
                "FUN_08006112": "copy_string_08006112",
                "param_1": "destination",
                "param_2": "source"
            },
            "code": "void copy_string_08006112(char* destination, char* source)\\n{\\n  while(*source != \\\"\\0\\\")\\n  {\\n    *destination = *source;\\n    source++;\\n    destination++;\\n  }\\n  *destination = \\\"\\0\\\";\\n  return;\\n}",
            "called": [
                "FUN_08006158"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006112",
            "calling": [
                "FUN_08005fc8"
            ],
            "imported": false,
            "current_name": "copy_string_08006112"
        },
        "FUN_08004974": {
            "renaming": {
                "FUN_08004974": "process_data_08004974",
                "param_1": "data_ptr",
                "param_2": "param",
                "iVar2": "DATA_PTR",
                "uVar3": "result",
                "uVar4": "mask",
                "uVar5": "data",
                "local_18": "bit_shift",
                "local_14": "value",
                "local_10": "unused",
                "puVar1": "PTR_DATA"
            },
            "code": "void process_data_08004974(uint *data_ptr, undefined4 param){\n  uint data = *data_ptr;\n  uint flag = 0;\n  uint mask = 0;\n  if(data == DATA_1){\n    mask = (FLAG_1 | 0x200);\n    *(uint *)(DATA_PTR + 0x18) = mask;\n    flag = *(uint *)(DATA_PTR + 0x18) & 0x200;\n  }\n  else if(data == DATA_2){\n    mask = (FLAG_2 | 0x400);\n    *(uint *)(DATA_PTR + 0x18) = mask;\n    flag = *(uint *)(DATA_PTR + 0x18) & 0x400;\n  }\n  undefined *data_ptr_2 = PTR_DATA;\n  uint shift = ((int)(char)*data_ptr_2 << 0x18) >> 0x1c;\n  uint result = FUN_PROCESS(shift, param, mask, flag);\n  uint bit_shift = 1 << ((byte)*data_ptr_2 & 0xf) & 0xffff;\n  uint value = 3;\n  FUN_UPDATE(result, &bit_shift, &value);\n}\n",
            "called": [
                "FUN_08004884",
                "FUN_08002624"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004974",
            "calling": [
                "FUN_0800213c"
            ],
            "imported": false,
            "current_name": "process_data_08004974"
        },
        "FUN_08003520": {
            "renaming": {
                "FUN_08003520": "process_data_08003520",
                "param_1": "data",
                "puVar2": "data_ptr",
                "uVar3": "flags",
                "uVar4": "status",
                "DAT_080035f8": "STATUS_FLAG_1",
                "0x100": "STATUS_FLAG_2",
                "0x10200": "STATUS_FLAG_3",
                "0x10400": "STATUS_FLAG_4",
                "0x10800": "STATUS_FLAG_5",
                "cVar1": "c"
            },
            "code": "void process_data_08003520(uint **data)\n{\n    uint *data_ptr = *data;\n    uint flags = data_ptr[5];\n    uint status = data_ptr[1];\n\n    if ((flags & DAT_080035f8) && (status & STATUS_FLAG_2)) {\n        data[16] = (uint *)((uint)data[16] | 1);\n        data_ptr[5] = 0xfffffeff;\n        **data = **data | 0x8000;\n    }\n\n    if ((flags & STATUS_FLAG_3) && (status & STATUS_FLAG_2)) {\n        data[16] = (uint *)((uint)data[16] | 2);\n        (*data)[5] = 0xfffffdff;\n    }\n\n    if ((flags & STATUS_FLAG_4) && (status & STATUS_FLAG_2)) {\n        char c = *(char *)((int)data + 0x3d);\n        if ((*(char *)((int)data + 0x3e) == ' ') && (*(short *)((int)data + 0x2a) == 0) && ((c == '!' || (c == ')')) || ((c == '(' && (data[12] == (uint *)0x21)))) {\n            process_sub_data(data);\n        }\n        else {\n            data[16] = (uint *)((uint)data[16] | 4);\n            if (*(char *)((int)data + 0x3e) == '\\x10') {\n                **data = **data | 0x200;\n            }\n            (*data)[5] = 0xfffffbff;\n        }\n    }\n\n    if ((flags & STATUS_FLAG_5) && (status & STATUS_FLAG_2)) {\n        data[16] = (uint *)((uint)data[16] | 8);\n        (*data)[5] = 0xfffff7ff;\n    }\n\n    if (data[16] != (uint *)0x0) {\n        process_sub_data(data);\n    }\n}\n",
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003520",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08003520"
        },
        "FUN_08002ca6": {
            "renaming": {
                "FUN_08002ca6": "process_data_08002ca6",
                "param_1": "data",
                "puVar2": "buffer",
                "cVar1": "last_char"
            },
            "code": "int process_data_08002ca6(int *data)\n{\n  char last_char = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    undefined *buffer = (undefined *)data[9];\n    data[9] = (int)(buffer + 1);\n    *buffer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (last_char == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      do_nothing();\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_08002ca4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ca6",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_data_08002ca6"
        },
        "FUN_08002ca4": {
            "renaming": {
                "FUN_08002ca4": "do_nothing_08002ca4"
            },
            "code": "\nvoid do_nothing_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ca4",
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08002ca4"
        },
        "FUN_08007328": {
            "renaming": {
                "FUN_08007328": "do_nothing_08007328"
            },
            "code": "\nvoid do_nothing_08007328(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007328",
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "imported": false,
            "current_name": "do_nothing_08007328"
        },
        "FUN_08005b54": {
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "data_array",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "PTR_PTR_LAB_080059c8_1_08005ba0": "PTR_PTR_LAB_080059c8_1_08005ba0",
                "PTR_DAT_08005ba4": "PTR_DAT_08005ba4",
                "FUN_08005b24": "initialize_data",
                "FUN_08005b3c": "set_data_flag",
                "FUN_08004ca2": "get_data_value",
                "PTR_DAT_08005ba8": "PTR_DAT_08005ba8",
                "PTR_DAT_08005bac": "PTR_DAT_08005bac",
                "finalize_data": "finalize_data"
            },
            "code": "undefined4 *initialize_data_08005b54(undefined4 *data_array, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined uVar1;\n  data_array[1] = 0;\n  data_array[2] = 1000;\n  *data_array = PTR_PTR_LAB_080059c8_1_08005ba0;\n  if (data_array == (undefined4 *)PTR_DAT_08005ba4) {\n    initialize_data_08005b54(data_array, 0, param_3, PTR_DAT_08005ba4, param_4);\n    set_data_flag(data_array, 1);\n  }\n  else {\n    uVar1 = get_data_value(param_2, PTR_DAT_08005ba8);\n    *(undefined *)((int)data_array + 0x12d) = uVar1;\n    uVar1 = get_data_value(param_2, PTR_DAT_08005bac);\n    *(undefined *)(data_array + 0x4b) = uVar1;\n  }\n  finalize_data(data_array);\n  return data_array;\n}",
            "called": [
                "FUN_08005b3c",
                "FUN_08005a44",
                "FUN_08005b24",
                "FUN_08004ca2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b54",
            "calling": [
                "FUN_08005bb0"
            ],
            "imported": false,
            "current_name": "initialize_data_08005b54"
        },
        "FUN_08004618": {
            "renaming": {
                "FUN_08004618": "process_data_08004618",
                "param_1": "data",
                "pbVar1": "data_ptr",
                "sVar2": "count",
                "puVar3": "data_ptr"
            },
            "code": "int process_data_08004618(int *data)\n{\n  char *data_ptr = (char *)(data + 0x3a);\n  if (*data_ptr != '\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(unsigned short *)data[10] = (unsigned short)((*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] += 2;\n    }\n    else {\n      *(unsigned short *)data[10] = (unsigned short)*(unsigned int *)(*data + 4) & 0xff;\n      data[10] += 1;\n    }\n  }\n  else if (data[4] == 0) {\n    unsigned char *data_ptr = (unsigned char *)data[10];\n    data[10] = (int)(data_ptr + 1);\n    *data_ptr = (char)*(unsigned int *)(*data + 4);\n  }\n  else {\n    unsigned char *data_ptr = (unsigned char *)data[10];\n    data[10] = (int)(data_ptr + 1);\n    *data_ptr = (unsigned char)*(unsigned int *)(*data + 4) & 0x7f;\n  }\n  short count = *(short *)(data + 0x2e) - 1;\n  *(short *)(data + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(unsigned int *)(*data + 0xc) &= 0xffffffdf;\n  *(unsigned int *)(*data + 0xc) &= 0xfffffeff;\n  *(unsigned int *)(*data + 0x14) &= 0xfffffffe;\n  *data_ptr = 0x20;\n  do_something_else();\n  return 0;\n}",
            "called": [
                "FUN_080055e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004618",
            "calling": [
                "FUN_080046b8"
            ],
            "imported": false,
            "current_name": "process_data_08004618"
        },
        "FUN_08006c40": {
            "renaming": {
                "FUN_08006c40": "initialize_data_08006c40",
                "param_1": "data_array",
                "param_2": "initial_value1",
                "param_3": "initial_value2",
                "FUN_080061e0": "initialize_memory"
            },
            "code": "void initialize_data_08006c40(undefined4 *data_array, undefined2 initial_value1, undefined2 initial_value2){\n    data_array[0] = 0;\n    data_array[1] = 0;\n    data_array[2] = 0;\n    *(undefined2 *)(data_array + 3) = initial_value1;\n    data_array[0x19] = 0;\n    *(undefined2 *)((int)data_array + 0xe) = initial_value2;\n    data_array[4] = 0;\n    data_array[5] = 0;\n    data_array[6] = 0;\n    initialize_memory(data_array + 0x17, 0, 8);\n    data_array[8] = data_array;\n    data_array[9] = DAT_08006c78;\n    data_array[10] = PTR_FUN_08006f5a_1_08006c7c;\n    data_array[0xb] = PTR_FUN_08006f92_1_08006c80;\n    data_array[0xc] = PTR_LAB_08006fb6_1_08006c84;\n    return;\n}",
            "called": [
                "FUN_080061e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c40",
            "calling": [
                "FUN_08006cb4"
            ],
            "imported": false,
            "current_name": "initialize_data_08006c40"
        },
        "FUN_0800157c": {
            "renaming": {
                "FUN_0800157c": "write_data_0800157c",
                "param_1": "buffer",
                "param_2": "data",
                "param_3": "c1",
                "param_4": "c2",
                "FUN_080057b4": "write_to_device",
                "FUN_08005848": "some_other_function"
            },
            "code": "char* write_data_0800157c(char* buffer, int data, char c1, char c2) {\n    *buffer = (char)data;\n    buffer[1] = c1;\n    buffer[2] = c2;\n    write_to_device(data, 0);\n    write_to_device(c1, 1);\n    write_to_device(c2, 1);\n    write_to_device(c1, 1);\n    write_to_device(c2, 0);\n    return buffer;\n}",
            "called": [
                "FUN_080057b4",
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800157c",
            "calling": [
                "FUN_08000b08"
            ],
            "imported": false,
            "current_name": "write_data_0800157c"
        },
        "FUN_080045a2": {
            "renaming": {
                "FUN_080045a2": "validate_input_080045a2",
                "param_1": "input_array",
                "param_2": "array_length",
                "param_3": "param_3",
                "*(char *)((int)param_1 + 0x3a)": "first_char",
                "*(char *)(param_1 + 0xe)": "second_char"
            },
            "code": "int validate_input_080045a2(int *input_array, int array_length, int param_3)\n{\n  char first_char = *(char *)((int)input_array + 0x3a);\n  if (first_char != ' ') {\n    return 2;\n  }\n  if (array_length == 0) {\n    return 1;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  char second_char = *(char *)(input_array + 0xe);\n  if (second_char != '\\x01') {\n    input_array[10] = array_length;\n    *(short *)(input_array + 0xb) = (short)param_3;\n    *(short *)((int)input_array + 0x2e) = (short)param_3;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080045a2",
            "calling": [
                "FUN_080054d4",
                "FUN_08005510"
            ],
            "imported": false,
            "current_name": "validate_input_080045a2"
        },
        "FUN_08001c32": {
            "renaming": {
                "FUN_08001c32": "execute_startup_routine_08001c32",
                "FUN_08004c52": "initialize_system"
            },
            "code": "void execute_startup_routine_08001c32(void)\n{\n  initialize_system();\n  return;\n}",
            "called": [
                "FUN_08004c52"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001c32",
            "calling": [
                "FUN_08005f5e"
            ],
            "imported": false,
            "current_name": "execute_startup_routine_08001c32"
        },
        "FUN_080047e8": {
            "renaming": {
                "FUN_080047e8": "combine_bytes_at_offsets_080047e8",
                "param_1": "param_offset1",
                "* (byte *) (param_1 + 0x3a)": "byte1",
                "* (byte *) (param_1 + 0x39)": "byte2"
            },
            "code": "byte combine_bytes_at_offsets_080047e8(int param_offset1, int param_offset2)\n{\n    byte byte1 = *(byte *)(param_offset1 + 0x3a);\n    byte byte2 = *(byte *)(param_offset2 + 0x39);\n    return byte1 | byte2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080047e8",
            "calling": [
                "FUN_0800548c",
                "FUN_080054b0"
            ],
            "imported": false,
            "current_name": "combine_bytes_at_offsets_080047e8"
        },
        "FUN_080057b4": {
            "renaming": {
                "FUN_080057b4": "analyze_data_080057b4",
                "param_1": "index",
                "param_2": "command_type",
                "param_3": "data_type",
                "param_4": "data_buffer",
                "iVar1": "result",
                "puVar2": "data_ptr",
                "iVar3": "data_index",
                "PTR_DAT_08005838": "command_lookup_table",
                "PTR_DAT_0800583c": "command_check_table",
                "PTR_DAT_08005840": "data_check_table",
                "PTR_DAT_08005844": "data_finish_table"
            },
            "code": "void analyze_data_080057b4(uint8_t index, uint8_t command_type, uint8_t data_type, uint8_t *data_buffer){\n  int data_index;\n  uint8_t *data_ptr;\n  int data_length;\n  if (index < 60){\n    data_index = (int)(char)PTR_DAT_08005838[index];\n    data_ptr = PTR_DAT_08005838;\n  }\n  else {\n    data_index = -1;\n    data_ptr = data_buffer;\n  }\n  if (data_index != -1){\n    int result = process_data(data_index, data_type, data_ptr, data_buffer);\n    if (result != 0){\n      int check = check_data(data_index, PTR_DAT_0800583c);\n      if (check != 0){\n        free_data(data_index);\n      }\n      process_data(data_index, data_type, data_ptr, data_buffer);\n    }\n    switch(command_type){\n      case 0:\n        set_data(data_index, 0);\n        break;\n      case 1:\n        set_data(data_index, 1, 0);\n        break;\n      case 2:\n        set_data(data_index, 0, 1);\n        break;\n      case 3:\n        set_data(data_index, 0, 2);\n    }\n    finalize_data(data_index, PTR_DAT_08005844);\n  }\n  return;\n}",
            "called": [
                "FUN_08004b3c",
                "FUN_080047f4",
                "FUN_08004bb0",
                "FUN_08004828",
                "FUN_0800480a",
                "FUN_08004ce2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057b4",
            "calling": [
                "FUN_0800157c",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "imported": false,
            "current_name": "analyze_data_080057b4"
        },
        "FUN_08007334": {
            "renaming": {
                "FUN_08007334": "do_nothing_08007334"
            },
            "code": "\nvoid do_nothing_08007334(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007334",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08007334"
        },
        "FUN_08001b18": {
            "renaming": {
                "FUN_08001b18": "execute_function_08001b18",
                "param_1": "input_parameter",
                "FUN_08001ab0": "call_setup_function"
            },
            "code": "undefined4 execute_function_08001b18(undefined4 input_parameter)\n{\n    call_setup_function();\n    return input_parameter;\n}",
            "called": [
                "FUN_08001ab0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001b18",
            "calling": [
                "FUN_08000b08"
            ],
            "imported": false,
            "current_name": "execute_function_08001b18"
        },
        "thunk_FUN_08005750": {
            "renaming": {
                "thunk_FUN_08005750": "get_default_value_thunk_08005750"
            },
            "code": "int get_default_value_thunk_08005750(void)\n{\n  return 1;\n}",
            "called": [
                "FUN_08005750"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006f34",
            "calling": [
                "FUN_08006f00"
            ],
            "imported": false,
            "current_name": "get_default_value_thunk_08005750"
        },
        "FUN_0800092c": {
            "renaming": {
                "FUN_0800092c": "check_parameters_0800092c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "temp_result",
                "bVar2": "is_zero",
                "bVar3": "is_param4_less_than_param2",
                "result": "output",
                "is_param2_negative": "is_param2_negative",
                "is_param4_negative": "is_param4_negative",
                "is_param1_param2_zero": "is_param1_param2_zero",
                "is_param3_param4_zero": "is_param3_param4_zero",
                "are_param2_param4_equal": "are_param2_param4_equal",
                "are_param1_param3_equal": "are_param1_param3_equal",
                "is_param2_param4_xor_zero": "is_param2_param4_xor_zero",
                "is_param4_less_than_or_equal_to_param2": "is_param4_less_than_or_equal_to_param2",
                "is_param3_less_than_or_equal_to_param1": "is_param3_less_than_or_equal_to_param1"
            },
            "code": "uint check_parameters_0800092c(uint param1, uint param2, uint param3, uint param4)\n{\n  uint result;\n  bool is_param2_negative;\n  bool is_param4_negative;\n  bool is_param1_param2_zero;\n  bool is_param3_param4_zero;\n  bool are_param2_param4_equal;\n  bool are_param1_param3_equal;\n  bool is_param2_param4_xor_zero;\n  bool is_param4_less_than_or_equal_to_param2;\n  bool is_param3_less_than_or_equal_to_param1;\n  \n  is_param2_negative = ((int)(param2 << 1) >> 0x15 == -1);\n  is_param4_negative = ((int)(param4 << 1) >> 0x15 == -1);\n  is_param1_param2_zero = ((param1 | param2 << 0xc) == 0);\n  is_param3_param4_zero = ((param3 | param4 << 0xc) == 0);\n  are_param2_param4_equal = (param2 == param4);\n  are_param1_param3_equal = (param1 == param3);\n  is_param2_param4_xor_zero = ((param2 ^ param4) == 0);\n  is_param4_less_than_or_equal_to_param2 = ((int)param4 <= (int)param2);\n  is_param3_less_than_or_equal_to_param1 = ((int)param3 <= (int)param1);\n  \n  if ((is_param2_negative || is_param4_negative) && ((is_param2_negative && !is_param1_param2_zero) || (is_param4_negative && !is_param3_param4_zero)))\n  {\n    result = 1;\n  }\n  else if (is_param1_param2_zero && is_param3_param4_zero)\n  {\n    result = 0;\n  }\n  else if (are_param2_param4_equal && are_param1_param3_equal)\n  {\n    result = 1;\n  }\n  else if (is_param2_param4_xor_zero && (is_param4_less_than_or_equal_to_param2 || are_param1_param3_equal))\n  {\n    result = 1;\n  }\n  else if (are_param2_param4_equal && is_param3_less_than_or_equal_to_param1)\n  {\n    result = 1;\n  }\n  else\n  {\n    result = ~((int)param4 >> 0x1f) | 1;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800092c",
            "calling": [
                "FUN_080009b8"
            ],
            "imported": false,
            "current_name": "check_parameters_0800092c"
        },
        "FUN_08005d8a": {
            "renaming": {
                "FUN_08005d8a": "process_data_08005d8a",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "flag",
                "param_4": "param_4",
                "FUN_08005ce8": "process_data_helper"
            },
            "code": "void process_data_08005d8a(uint32_t *data_ptr, uint32_t data_size, uint32_t flag, uint32_t param_4) {\n  if (data_size != 0) {\n    process_data_08005d8a_helper(data_ptr, data_size, flag & 0xff);\n    return;\n  }\n  (**(function_ptr **)*data_ptr)(data_ptr, data_size & 0xff, 0, *(function_ptr **)*data_ptr, param_4);\n  return;\n}",
            "called": [
                "FUN_08005ce8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d8a",
            "calling": [
                "FUN_08005da0",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "process_data_08005d8a"
        },
        "FUN_08002560": {
            "renaming": {
                "FUN_08002560": "set_flag_08002560",
                "param_1": "flag_value",
                "*DAT_0800257c": "*flag_ptr"
            },
            "code": "void set_flag_08002560(int flag_value)\n{\n    if (flag_value != 4) {\n        *DAT_0800257c = *DAT_0800257c & 0xfffffffb;\n        return;\n    }\n    *DAT_0800257c = *DAT_0800257c | 4;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002560",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "set_flag_08002560"
        },
        "FUN_08006e90": {
            "renaming": {
                "FUN_08006e90": "find_char_in_string_08006e90",
                "param_1": "input_string",
                "param_2": "target_char",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "code": "char* find_char_in_string_08006e90(char* input_string, char target_char, int string_length) {\n  char* current_char = input_string;\n  do {\n    char* next_char = current_char;\n    if (next_char == input_string + string_length) {\n      return (char*)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != target_char);\n  return next_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e90",
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "imported": false,
            "current_name": "find_char_in_string_08006e90"
        },
        "FUN_0800417a": {
            "renaming": {
                "FUN_0800417a": "do_nothing_0800417a"
            },
            "code": "\nvoid do_nothing_0800417a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800417a",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "do_nothing_0800417a"
        },
        "FUN_08006920": {
            "renaming": {
                "FUN_08006920": "initialize_param_08006920",
                "*param_1": "*result",
                "param_2": "input_param",
                "puVar1": "ptr_data",
                "iVar2": "function_result"
            },
            "code": "void initialize_param_08006920(int *result, undefined4 input_param)\n{\n  undefined *ptr_data = PTR_DAT_0800693c;\n  *(undefined4 *)PTR_DAT_0800693c = 0;\n  int function_result = calculate_value(input_param);\n  if ((function_result == -1) && (*(int *)ptr_data != 0)) {\n    *result = *(int *)ptr_data;\n  }\n  return;\n}",
            "called": [
                "FUN_080056d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006920",
            "calling": [
                "FUN_08006288"
            ],
            "imported": false,
            "current_name": "initialize_param_08006920"
        },
        "FUN_080008ba": {
            "renaming": {
                "FUN_080008ba": "calculate_result_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp3",
                "unaff_r4": "temp4",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "temp5",
                "bVar4": "condition1",
                "condition1": "condition2"
            },
            "code": "ulonglong calculate_result_080008ba(uint input1, uint input2, uint input3, uint input4) {\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool condition1;\n  bool condition2;\n  temp1 = input4 >> 0x14;\n  temp2 = input2;\n  if (input3 != temp4 || temp1 != temp4) {\n    if (input3 == temp4) {\n      condition1 = ((input1 | input2 << 0xc) == 0);\n      if (condition1 && temp1 != temp4) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp1 == temp4) {\n      input1 = input3;\n      temp2 = input4;\n      condition2 = ((input3 | input4 << 0xc) == 0);\n      if (condition2) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      condition1 = ((input1 | input2 << 1) == 0);\n      if (!condition1) {\n        condition1 = ((input3 | input4 << 1) == 0);\n      }\n      if (!condition1) {\n        if (temp4 == 0) {\n          temp2 = input2 & 0x80000000;\n          do {\n            temp3 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(temp3 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp2;\n          if (temp1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(temp2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if ((input3 | input4 << 1) != 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n  }\n  return CONCAT44(temp2,input1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080008ba",
            "calling": [
                "FUN_0800074c"
            ],
            "imported": false,
            "current_name": "calculate_result_080008ba"
        },
        "FUN_08002d1c": {
            "renaming": {
                "FUN_08002d1c": "set_param_values_08002d1c",
                "param_1": "params",
                "DAT_08002dac": "DEFAULT_PARAM",
                "uint": "uint32_t",
                "do_nothing_08002c52": "call_function_1",
                "*(char *)((int)param_1 + 0x3d)": "*(char *)((int)params + 0x3d)",
                "*(undefined *)((int)param_1 + 0x3d)": "*(undefined *)((int)params + 0x3d)",
                "*(undefined *)((int)param_1 + 0x3e)": "*(undefined *)((int)params + 0x3e)",
                "(uint *)0x4": "(uint32_t *)0x4",
                "(uint *)0x8": "(uint32_t *)0x8",
                "(uint *)0x0": "NULL",
                "0x20": "SPACE_CHAR",
                "0": "NULL_CHAR",
                "(*(char *)((int)param_1 + 0x3d) == '(')": "is_open_bracket",
                "(*(char *)((int)param_1 + 0x3d) == '!')": "is_exclamation_mark",
                "(*param_1)[1]": "(*params)[1]",
                "(*param_1)[5]": "(*params)[5]",
                "**param_1": "**params",
                "param_1[0xb]": "params[0xb]",
                "param_1[0xc]": "params[0xc]"
            },
            "code": "uint32_t set_param_values_08002d1c(uint32_t **params)\n{\n    bool is_open_bracket = (*(char *)((int)params + 0x3d) == '(');\n    bool is_exclamation_mark = (*(char *)((int)params + 0x3d) == '!');\n    \n    if ((params[0xb] == (uint32_t *)0x4 || params[0xb] == (uint32_t *)0x8) && is_open_bracket) {\n        params[0xb] = DAT_08002dac;\n        (*params)[1] &= 0xfffff8ff;\n        (*params)[5] = 0xfffffbff;\n        **params &= 0xfffffbff;\n        params[0xc] = NULL;\n        *(undefined *)((int)params + 0x3d) = SPACE_CHAR;\n        *(undefined *)((int)params + 0x3e) = NULL_CHAR;\n        call_function_1();\n    }\n    else if (is_exclamation_mark) {\n        params[0xb] = DAT_08002dac;\n        params[0xc] = (uint32_t *)EXCLAMATION_MARK;\n        *(undefined *)((int)params + 0x3d) = SPACE_CHAR;\n        *(undefined *)((int)params + 0x3e) = NULL_CHAR;\n        (*params)[1] &= 0xfffff8ff;\n        (*params)[5] = 0xfffffbff;\n        **params &= 0xfffffbff;\n        call_function_2();\n    }\n    else {\n        (*params)[5] = 0xfffffbff;\n    }\n    return 0;\n}",
            "called": [
                "FUN_08002c52",
                "FUN_08004ec4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d1c",
            "calling": [
                "FUN_08003520"
            ],
            "imported": false,
            "current_name": "set_param_values_08002d1c"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "return_max_integer_08005714"
            },
            "code": "int32_t return_max_integer_08005714(void)\n{\n   return INT32_MAX;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [],
            "imported": false,
            "current_name": "return_max_integer_08005714"
        },
        "FUN_08003da4": {
            "renaming": {
                "FUN_08003da4": "calculate_value_08003da4",
                "param_1": "input",
                "uVar1": "result",
                "local_24": "local_variable_1",
                "abStack_20": "stack_array",
                "uStack_1c": "variable_1",
                "uStack_18": "variable_2",
                "uStack_14": "variable_3",
                "DAT_08003e8c": "PTR_DAT_08003e8c",
                "DAT_08003e90": "DAT_08003e90",
                "DAT_08003e94": "DAT_08003e94",
                "DAT_08003e98": "DAT_08003e98",
                "DAT_08003e9c": "DAT_08003e9c"
            },
            "code": "uint calculate_value_08003da4(int input)\n{\n  uint result;\n  undefined2 local_variable_1;\n  byte stack_array[4];\n  undefined4 variable_1;\n  undefined4 variable_2;\n  undefined4 variable_3;\n  variable_3 = *(undefined4 *)(DAT_08003e8c + 8);\n  variable_2 = *(undefined4 *)(DAT_08003e8c + 4);\n  variable_1 = *(undefined4 *)DAT_08003e8c;\n  local_variable_1 = *(undefined2 *)(DAT_08003e8c + 0x10);\n  if (input == 2) {\n    result = divide_by_two_times(((DAT_08003e90[1] << 0x10) >> 0x1e) + 1);\n  }\n  else if (input == 16) {\n    if ((*DAT_08003e90 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      result = DAT_08003e9c;\n      if ((DAT_08003e90[1] & 0x10000) != 0) {\n        result = DAT_08003e94 / get_byte_value_from_address((int)&local_variable_1 - ((int)(DAT_08003e90[1] << 0xe) >> 0x1f));\n      }\n      result = result * stack_array[(DAT_08003e90[1] << 10) >> 0x1c];\n      if ((DAT_08003e90[1] & 0x400000) == 0) {\n        result = multiply_by_two_and_divide_by_2_to_33(DAT_08003e98, result);\n      }\n    }\n  }\n  else if (input == 1) {\n    if ((DAT_08003e90[8] & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else {\n      uint variable_4 = DAT_08003e90[8] & 0x300;\n      if ((variable_4 == 0x200) && ((DAT_08003e90[9] & 2) != 0)) {\n        result = 32000;\n      }\n      else if (variable_4 == 0x300) {\n        if ((*DAT_08003e90 & 0x20000) == 0) {\n          result = 0;\n        }\n        else {\n          result = 62436;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n",
            "called": [
                "FUN_08003c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003da4",
            "calling": [
                "FUN_08001cd0",
                "FUN_08002384"
            ],
            "imported": false,
            "current_name": "calculate_value_08003da4"
        },
        "FUN_08005a44": {
            "renaming": {
                "FUN_08005a44": "initialize_data_structures_08005a44",
                "param_1": "data_structure_ptr",
                "*(int *)(param_1 + 0x130)": "*ptr_to_130",
                "*(undefined2 *)(param_1 + 0x134)": "*ptr_to_134",
                "*(undefined2 *)(param_1 + 0x136)": "*ptr_to_136",
                "*(int *)(param_1 + 0x138)": "*ptr_to_138",
                "*(undefined2 *)(param_1 + 0x13c)": "*ptr_to_13c",
                "*(undefined2 *)(param_1 + 0x13e)": "*ptr_to_13e"
            },
            "code": "void initialize_data_structures_08005a44(int data_structure_ptr){\n    int* ptr_to_130 = (int*)(data_structure_ptr + 0x130);\n    *ptr_to_130 = data_structure_ptr + 0x11;\n    short* ptr_to_134 = (short*)(data_structure_ptr + 0x134);\n    *ptr_to_134 = 0;\n    short* ptr_to_136 = (short*)(data_structure_ptr + 0x136);\n    *ptr_to_136 = 0;\n    int* ptr_to_138 = (int*)(data_structure_ptr + 0x138);\n    *ptr_to_138 = data_structure_ptr + 0x51;\n    short* ptr_to_13c = (short*)(data_structure_ptr + 0x13c);\n    *ptr_to_13c = 0;\n    short* ptr_to_13e = (short*)(data_structure_ptr + 0x13e);\n    *ptr_to_13e = 0;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a44",
            "calling": [
                "FUN_08005b54"
            ],
            "imported": false,
            "current_name": "initialize_data_structures_08005a44"
        },
        "FUN_080009dc": {
            "renaming": {
                "FUN_080009dc": "isEndOfString_080009dc",
                "in_CY": "currentChar"
            },
            "code": "bool isEndOfString_080009dc(void)\n{\n  char currentChar;\n  FUN_080009b8();\n  return currentChar == '\\0';\n}",
            "called": [
                "FUN_080009b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009dc",
            "calling": [
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_08001960",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "isEndOfString_080009dc"
        },
        "FUN_0800417c": {
            "renaming": {
                "FUN_0800417c": "clearFlags_0800417c",
                "param_1": "memoryAddress",
                "*param_1": "*memoryAddress",
                "uint": "uint32_t",
                "*(uint *)(*param_1 + 0xc)": "*flag1",
                "*(uint *)(*param_1 + 0x14)": "*flag2",
                "(int)param_1 + 0x3a": "(int)memoryAddress + 0x3a",
                "undefined": "char"
            },
            "code": "void clearFlags_0800417c(int *memoryAddress)\n{\n    uint32_t *flag1 = (uint32_t *)(*memoryAddress + 0xc);\n    uint32_t *flag2 = (uint32_t *)(*memoryAddress + 0x14);\n    *flag1 &= 0xfffffedf;\n    *flag2 &= 0xfffffffe;\n    *(char *)((int)memoryAddress + 0x3a) = 0x20;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800417c",
            "calling": [
                "FUN_080046b8"
            ],
            "imported": false,
            "current_name": "clearFlags_0800417c"
        },
        "FUN_08004b94": {
            "renaming": {
                "FUN_08004b94": "initialize_application_08004b94",
                "FUN_08001cc4": "initialize_system"
            },
            "code": "void initialize_application_08004b94(void)\n{\n  initialize_system();\n  return;\n}",
            "called": [
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b94",
            "calling": [
                "FUN_080058e0"
            ],
            "imported": false,
            "current_name": "initialize_application_08004b94"
        },
        "FUN_080058e0": {
            "renaming": {
                "FUN_080058e0": "execute_main_function_080058e0",
                "FUN_08004b94": "initialize_program"
            },
            "code": "void execute_main_function_080058e0(void)\n{\n  initialize_program();\n  return;\n}",
            "called": [
                "FUN_08004b94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058e0",
            "calling": [
                "FUN_08001ab0",
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080016b4"
            ],
            "imported": false,
            "current_name": "execute_main_function_080058e0"
        },
        "FUN_08001918": {
            "renaming": {
                "FUN_08001918": "process_data_08001918",
                "param_1": "data_buffer",
                "param_2": "data_length",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "result_upper",
                "uVar2": "buffer",
                "uVar3": "data",
                "FUN_0800042c": "allocate_memory",
                "FUN_0800040c": "get_data",
                "FUNC_0800074c": "process_data_internal",
                "FUNC_080004f8": "process_data_external"
            },
            "code": "void process_data_08001918(int data_buffer, int data_length, undefined4 arg3, undefined4 arg4)\n{\n    if (data_length > 0) {\n        void* buffer = FUN_0800042c(data_length);\n        void* data = FUN_0800040c(*(undefined4 *)(data_buffer + 0x58));\n        void* result = FUNC_0800074c((int)buffer, (int)((ulonglong)buffer >> 0x20), (int)data, (int)((ulonglong)data >> 0x20), arg4);\n        undefined4 result_upper = (undefined4)((ulonglong)result >> 0x20);\n        void* processed_data = FUNC_080004f8((int)result, result_upper, *(undefined4 *)(data_buffer + 0x20), *(undefined4 *)(data_buffer + 0x24));\n        *(void**)(data_buffer + 0x20) = processed_data;\n        void* result2 = FUNC_0800074c(*(undefined4 *)(data_buffer + 0x28), *(undefined4 *)(data_buffer + 0x2c), (int)result, result_upper);\n        *(void**)(data_buffer + 0x28) = result2;\n        *(int *)(data_buffer + 0x58) = data_length;\n    }\n    return;\n}",
            "called": [
                "FUN_0800040c",
                "FUN_080004f8",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001918",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "process_data_08001918"
        },
        "FUN_0800611c": {
            "renaming": {
                "FUN_0800611c": "assertionFailed_0800611c",
                "param_1": "lineNumber",
                "param_2": "fileName",
                "param_3": "assertion",
                "param_4": "message",
                "uVar1": "errorCode",
                "puVar2": "formatString",
                "uVar3": "returnValue",
                "uVar4": "errorCodeCopy"
            },
            "code": "void assertionFailed_0800611c(int lineNumber, char* fileName, char* assertion, char* message){\n  int errorCode = *(int *)(*(int *)assertionErrorMessage + 0xc);\n  char* formatString = assertionErrorMessageString;\n  if (message != NULL) {\n    formatString = assertionErrorMessageStringWithMessage;\n  }\n  do {\n    printAssertionError(errorCode, formatString, lineNumber, fileName, assertion, message);\n    sleep(1);\n  } while (true);\n}",
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800611c",
            "calling": [
                "FUN_08005a68"
            ],
            "imported": false,
            "current_name": "assertionFailed_0800611c"
        },
        "FUN_080047f4": {
            "renaming": {
                "FUN_080047f4": "get_bit_at_position_080047f4",
                "param_1": "number",
                "param_2": "position",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "uint get_bit_at_position_080047f4(uint number, int position){\n    uint mask = 1 << position;\n    uint masked_number = number & mask;\n    return masked_number >> position;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080047f4",
            "calling": [
                "FUN_08005890",
                "FUN_080057b4",
                "FUN_08005848"
            ],
            "imported": false,
            "current_name": "get_bit_at_position_080047f4"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "is_CY_false_or_ZR_true_080009f0",
                "in_CY": "is_CY_set",
                "in_ZR": "is_ZR_set"
            },
            "code": "bool is_CY_false_or_ZR_true_080009f0(void)\n{\n  bool is_CY_false = !is_CY_set();\n  bool is_ZR_true = is_ZR_set();\n  return is_CY_false || is_ZR_true;\n}\n",
            "called": [
                "FUN_080009b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08000cd0",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "is_CY_false_or_ZR_true_080009f0"
        },
        "FUN_0800134e": {
            "renaming": {
                "FUN_0800134e": "initialize_0800134e",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "FUN_08001310": "call_function"
            },
            "code": "int initialize_0800134e(int arg1, int arg2, int arg3, int arg4)\n{\n  call_function(arg1, arg2, 1, arg4, arg4);\n  return 1;\n}",
            "called": [
                "FUN_08001310"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800134e",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "initialize_0800134e"
        },
        "FUN_08002c10": {
            "renaming": {
                "FUN_08002c10": "set_bits_of_uint_08002c10",
                "param_1": "ptr_to_uint",
                "puVar1": "uint_ptr"
            },
            "code": "int set_bits_of_uint_08002c10(uint **ptr_to_uint)\n{\n  uint *uint_ptr = *ptr_to_uint;\n  if (*(char *)((int)ptr_to_uint + 0x3d) != ' ') {\n    return 2;\n  }\n  *(char *)((int)ptr_to_uint + 0x3d) = '(';\n  if ((*uint_ptr & 1) == 0) {\n    *uint_ptr |= 1;\n  }\n  **ptr_to_uint |= 0x400;\n  (*ptr_to_uint)[1] |= 0x300;\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c10",
            "calling": [
                "FUN_08004ef4",
                "FUN_08004ec4"
            ],
            "imported": false,
            "current_name": "set_bits_of_uint_08002c10"
        },
        "FUN_08006be0": {
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "data",
                "param_2": "params",
                "uVar1": "result",
                "iVar2": "loop_counter",
                "piVar3": "callback_data",
                "uVar4": "loop_counter_value",
                "uVar5": "flags",
                "iVar6": "loop_step",
                "unaff_r4": "is_loop",
                "unaff_r5": "is_error",
                "pcVar7": "callback_function",
                "iVar8": "callback_result",
                "uVar9": "original_data_value",
                "UNRECOVERED_JUMPTABLE_00": "unrecovered_jump_table",
                "bVar10": "is_negative_loop"
            },
            "code": "uint32_t process_data_08006be0(uint32_t *data, int *params) {\n  uint32_t result;\n  int *current_param;\n  uint32_t current_param_value;\n  uint16_t flags;\n  uint32_t loop_counter;\n  uint32_t loop_step;\n  uint32_t loop_start;\n  uint32_t loop_end;\n  int *callback_function;\n  uint32_t callback_result;\n  bool is_loop;\n  bool is_error;\n  if (params[4] == 0) {\n    return 0;\n  }\n  if (data == NULL || data[6] != 0) {\n    return 0;\n  }\n  if (params == (int *)PTR_DAT_08006c28) {\n    current_param = (int *)data[1];\n  }\n  else if (params == (int *)PTR_DAT_08006c2c) {\n    current_param = (int *)data[2];\n  }\n  else if (params == (int *)PTR_DAT_08006c30) {\n    current_param = (int *)data[3];\n  }\n  else {\n    current_param = params;\n  }\n  flags = *(uint16_t *)(current_param + 3);\n  if (flags == 0) {\n    return 0;\n  }\n  if (flags & 0x8000) {\n    loop_counter = current_param[1];\n    loop_step = current_param[0x10];\n    loop_start = current_param[4];\n    loop_end = current_param[5];\n    callback_function = (int *)current_param[0xb];\n    is_loop = true;\n    is_error = false;\n    if (loop_step == 0) {\n      return 0;\n    }\n    if (loop_end < loop_start) {\n      loop_step = -loop_step;\n    }\n    for (result = loop_start; result <= loop_end; result += loop_step) {\n      current_param_value = flags & 0x1000 ? current_param[0x15] : result << 0x1e >> 0x1c;\n      callback_result = (*callback_function)(data, current_param[8], current_param_value, is_loop);\n      if (callback_result < 1) {\n        flags |= 0x40;\n        is_error = true;\n        break;\n      }\n    }\n    if (!is_error) {\n      current_param[1] = 0;\n      current_param[4] = loop_end;\n      current_param[5] = loop_step;\n      if (flags & 0x2000 && callback_result != -1) {\n        current_param[0x15] = callback_result;\n      }\n    }\n  }\n  else {\n    callback_function = (int *)current_param[0xb];\n    is_loop = false;\n    is_error = false;\n    current_param_value = flags << 0x1d >> 0x1f;\n    if (current_param_value == 1) {\n      result = 0;\n    }\n    else if (current_param_value == 0) {\n      callback_result = (*callback_function)(data, current_param[8], 0, is_loop);\n      if (callback_result == -1) {\n        flags |= 0x40;\n        is_error = true;\n      }\n      result = callback_result;\n    }\n    else {\n      callback_result = (*callback_function)(data, current_param[8], flags & 0x1000, 1);\n      if (callback_result == -1) {\n        current_param_value = *data;\n        if (current_param_value != 0 && current_param_value != 0x1d && current_param_value != 0x16) {\n          flags |= 0x40;\n          is_error = true;\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = callback_result;\n      }\n    }\n    if (!is_error) {\n      current_param[1] = 0;\n      current_param[4] = current_param[0x10];\n      current_param[5] = current_param[0x10];\n      if (flags & 0x2000 && callback_result != -1) {\n        current_param[0x15] = callback_result - current_param[1];\n        if (current_param[0xd] != NULL) {\n          if (current_param[0xd] != current_param + 0x11) {\n            FUN_080061f0(data);\n          }\n          current_param[0xd] = NULL;\n        }\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08006cb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006be0",
            "calling": [
                "FUN_08006344"
            ],
            "imported": false,
            "current_name": "process_data_08006be0"
        },
        "FUN_080012e8": {
            "renaming": {
                "FUN_080012e8": "process_bits_and_call_func_080012e8",
                "param_1": "data_ptr",
                "param_2": "bit_mask",
                "uVar1": "bit_index",
                "FUN_08005848": "call_func_with_bit_value",
                "FUN_080012a2": "call_func"
            },
            "code": "void process_bits_and_call_func_080012e8(int data_ptr,int bit_mask)\n{\n  uint bit_index;\n  for (bit_index = 0; bit_index < 8; bit_index++) {\n    call_func_with_bit_value(*(undefined *)(data_ptr + bit_index + 0xb), bit_mask >> (bit_index & 0xff) & 1);\n  }\n  call_func(data_ptr);\n  return;\n}",
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080012e8",
            "calling": [
                "FUN_08001310"
            ],
            "imported": false,
            "current_name": "process_bits_and_call_func_080012e8"
        },
        "FUN_080058e8": {
            "renaming": {
                "FUN_080058e8": "do_nothing_080058e8"
            },
            "code": "\nvoid do_nothing_080058e8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058e8",
            "calling": [
                "FUN_08000bcc"
            ],
            "imported": false,
            "current_name": "do_nothing_080058e8"
        },
        "FUN_08006370": {
            "renaming": {
                "FUN_08006370": "process_data_08006370",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "data",
                "param_4": "data_len",
                "puVar2": "end_ptr",
                "iVar3": "index"
            },
            "code": "int process_data_08006370(undefined4 param1, undefined4 param2, undefined* data, int data_len) {\n  int index = 0;\n  undefined* end_ptr = data + data_len;\n  while (data != end_ptr) {\n    if (index == 0) {\n      index = FUN_08006344(param1, *data, param2, data_len, index);\n    }\n    else {\n      index = FUN_08006344(param1, *data, param2, data_len, index + 1);\n    }\n    data++;\n  }\n  return index;\n}",
            "called": [
                "FUN_08006344"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006370",
            "calling": [
                "FUN_08006394"
            ],
            "imported": false,
            "current_name": "process_data_08006370"
        },
        "FUN_080024f8": {
            "renaming": {
                "FUN_080024f8": "set_bit_in_array_080024f8",
                "param_1": "bit_index",
                "PTR_DAT_08002510": "array_start_ptr",
                "DAT_08002510": "array_start"
            },
            "code": "void set_bit_in_array_080024f8(uint bit_index)\n{\n  if (bit_index >= 0) {\n    uint array_index = bit_index >> 5;\n    uint bit_offset = bit_index & 0x1f;\n    uint* array_ptr = (uint*)(DAT_08002510 + array_index * 4);\n    uint bit_mask = 1 << bit_offset;\n    *array_ptr = bit_mask;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024f8",
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080024f8"
        },
        "FUN_08001ab0": {
            "renaming": {
                "FUN_08001ab0": "update_params_08001ab0",
                "param_1": "obj_ptr",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "calculated_value",
                "PTR_08001b10": "default_value_1",
                "PTR_08001b14": "default_value_2",
                "DAT_08001b10": "default_value_1",
                "DAT_08001b14": "default_value_2",
                "FUN_08001960": "set_default_values",
                "FUN_08001a66": "calculate_value",
                "FUN_08001814": "update_object",
                "FUN_080058e0": "get_calculated_value"
            },
            "code": "int update_params_08001ab0(int obj_ptr, int param1, int param2, int param3, int param4, int param5, int param6, int param7, int param8, int param9, int param10, int param11)\n{\n  int result;\n  int calculated_value;\n  *(int *)(obj_ptr + 60) = param3;\n  *(int *)(obj_ptr + 56) = param2;\n  *(int *)(obj_ptr + 64) = param4;\n  *(char *)(obj_ptr + 112) = 0;\n  set_default_values(obj_ptr, param2, DAT_08001b10, DAT_08001b14);\n  *(int *)(obj_ptr + 88) = 100;\n  calculate_value(obj_ptr, param11);\n  result = update_object(obj_ptr, param5, param6, param7, param8, param9, param10);\n  calculated_value = get_calculated_value();\n  *(int *)(obj_ptr + 68) = calculated_value - *(int *)(obj_ptr + 88);\n  return obj_ptr;\n}",
            "called": [
                "FUN_08001a66",
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ab0",
            "calling": [
                "FUN_08001b18"
            ],
            "imported": false,
            "current_name": "update_params_08001ab0"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "puVar1": "data_pointer",
                "iVar2": "return_value",
                "piVar3": "data_array",
                "piVar4": "data_array2",
                "uVar5": "data_value",
                "uVar6": "data_short",
                "iVar7": "data_int",
                "pcVar8": "function_pointer",
                "iVar9": "data_int2",
                "uVar10": "data_uint",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "bool_value",
                "uVar12": "undefined_value"
            },
            "code": "void process_data_08006ac0(void)\n{\n  uint *data_pointer;\n  int return_value;\n  int *data_array;\n  int *data_array2;\n  uint data_value;\n  ushort data_short;\n  int data_int;\n  code *function_pointer;\n  int data_int2;\n  uint data_uint;\n  code *jump_table;\n  bool bool_value;\n  undefined8 undefined_value;\n  initialize(6);\n  jump_table = (code *)0x8006acf;\n  undefined_value = allocate_memory(1);\n  data_array = (int *)((ulonglong)undefined_value >> 0x20);\n  data_pointer = (uint *)undefined_value;\n  data_short = *(ushort *)(data_array + 3);\n  data_value = (uint)data_short;\n  if ((int)(data_value << 0x1c) < 0) {\n    data_int = data_array[4];\n    if (data_int != 0) {\n      data_int2 = data_value << 0x1e;\n      bool_value = data_int2 != 0;\n      if (bool_value) {\n        data_int2 = 0;\n      }\n      data_int = *data_array;\n      if (!bool_value) {\n        data_int2 = data_array[5];\n      }\n      *data_array = data_int;\n      data_array[2] = data_int2;\n      for (data_int = data_int - data_int; 0 < data_int; data_int = data_int - data_int2) {\n        data_int2 = (*(code *)data_array[10])(data_pointer,data_array[8],data_int,data_int);\n        if (data_int2 < 1) {\n          data_short = *(ushort *)(data_array + 3);\n          goto LAB_08006bc6;\n        }\n        data_int = data_int + data_int2;\n      }\n    }\n  }\n  else if (((0 < data_array[1]) || (0 < data_array[0x10])) &&\n          (function_pointer = (code *)data_array[0xb], function_pointer != (code *)0x0)) {\n    data_uint = *data_pointer;\n    *data_pointer = 0;\n    if ((data_short & 0x1000) == 0) {\n      data_int = (*function_pointer)(data_pointer,data_array[8],data_value & 0x1000,1);\n      if ((data_int == -1) && (data_value = *data_pointer, data_value != 0)) {\n        if ((data_value != 0x1d) && (data_value != 0x16)) {\n          *(ushort *)(data_array + 3) = *(ushort *)(data_array + 3) | 0x40;\n          jump_table();\n          return;\n        }\n        *data_pointer = data_uint;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      data_int = data_array[0x15];\n    }\n    if (((int)((uint)*(ushort *)(data_array + 3) << 0x1d) < 0) &&\n       (data_int = data_int - data_array[1], data_array[0xd] != 0)) {\n      data_int = data_int - data_array[0x10];\n    }\n    data_int = (*(code *)data_array[0xb])(data_pointer,data_array[8],data_int,0);\n    data_short = *(ushort *)(data_array + 3);\n    if ((data_int == -1) &&\n       ((0x1d < *data_pointer || (-1 < (int)((DAT_08006bdc >> (*data_pointer & 0xff)) << 0x1f))))) {\n      *(ushort *)(data_array + 3) = data_short | 0x40;\n      jump_table(0xffffffff);\n      return;\n    }\n    data_array[1] = 0;\n    *data_array = data_array[4];\n    if (((int)((uint)data_short << 0x13) < 0) && ((data_int != -1 || (*data_pointer == 0)))) {\n      data_array[0x15] = data_int;\n    }\n    data_array2 = (int *)data_array[0xd];\n    *data_pointer = data_uint;\n    if (data_array2 != (int *)0x0) {\n      if (data_array2 != data_array + 0x11) {\n        free_memory(data_pointer);\n      }\n      data_array[0xd] = 0;\n      jump_table();\n      return;\n    }\n  }\nLAB_08006aea:\n  jump_table(0);\n  return;\n}",
            "called": [
                "FUN_080061f0",
                "FUN_08006f00",
                "FUN_0800573c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "imported": false,
            "current_name": "process_data_08006ac0"
        },
        "FUN_08004198": {
            "renaming": {
                "FUN_08004198": "process_data_08004198",
                "param_1": "data",
                "is_valid": "is_data_valid",
                "data_type": "data_type",
                "output": "output",
                "input": "input",
                "value": "value",
                "count": "count"
            },
            "code": "int process_data_08004198(int *data)\n{\n  int is_valid = (*(char *)(data + 0x39) == '!');\n  if (!is_valid) {\n    return 2;\n  }\n  int data_type = data[2];\n  int *output = (int *)*data;\n  if (data_type == 0x1000) {\n    uint16_t *input = (uint16_t *)data[8];\n    uint16_t value = *input & 0x1ff;\n    data[8] += (data[4] == 0) ? 2 : 1;\n    *(uint *)(output + 1) = value;\n  }\n  else {\n    uint8_t *input = (uint8_t *)data[8];\n    uint8_t value = *input;\n    data[8] += 1;\n    *(uint *)(output + 1) = value;\n  }\n  int count = *(short *)(data + 0x26) - 1;\n  *(short *)(data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(output + 3) &= 0xffffff7f;\n    *(uint *)(output + 3) |= 0x40;\n    return 0;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004198",
            "calling": [
                "FUN_080046b8"
            ],
            "imported": false,
            "current_name": "process_data_08004198"
        },
        "FUN_08001c3c": {
            "renaming": {
                "FUN_08001c3c": "check_param_and_set_08001c3c",
                "param_1": "param",
                "iVar1": "result",
                "divisor": "divisor",
                "FUN_08002514": "check_divisor",
                "PTR_DAT_08001c80": "PTR_DAT_08001c80",
                "byte": "byte",
                "PTR_DAT_08001c7c": "PTR_DAT_08001c7c",
                "0xf": "MAX_PARAM_VALUE",
                "FUN_08002494": "set_param",
                "PTR_DAT_08001c84": "PTR_DAT_08001c84"
            },
            "code": "int check_param_and_set_08001c3c(uint param)\n{\n    int result = 0;\n    uint divisor = *(uint *)PTR_DAT_08001c80 / (1000 / (byte)*PTR_DAT_08001c7c);\n    int func_result = FUN_08002514(divisor);\n    if (func_result != 0) {\n        result = 1;\n    }\n    if (param > 0xf) {\n        result = 1;\n    }\n    FUN_08002494(0xffffffff, param, 0);\n    *(uint *)PTR_DAT_08001c84 = param;\n    return result;\n}",
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001c3c",
            "calling": [
                "FUN_08001c88",
                "FUN_08003afa"
            ],
            "imported": false,
            "current_name": "check_param_and_set_08001c3c"
        },
        "FUN_08001c3a": {
            "renaming": {
                "FUN_08001c3a": "do_nothing_08001c3a"
            },
            "code": "\nvoid do_nothing_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001c3a",
            "calling": [
                "FUN_08001c88"
            ],
            "imported": false,
            "current_name": "do_nothing_08001c3a"
        },
        "FUN_08000a2c": {
            "renaming": {
                "FUN_08000a2c": "is_valid_input_08000a2c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "shifted_input_2": "shifted_input_2",
                "shifted_input_4": "shifted_input_4",
                "mask": "mask"
            },
            "code": "int is_valid_input_08000a2c(uint32_t input_1, int input_2, uint32_t input_3, int input_4)\n{\n    int shifted_input_2 = input_2 << 1;\n    int shifted_input_4 = input_4 << 1;\n    int mask = (1 << 0x15) - 1;\n    \n    if (((shifted_input_2 >> 0x15) != mask || (input_1 | (shifted_input_2 << 0xc)) == 0) && ((shifted_input_4 >> 0x15) != mask || (input_3 | (shifted_input_4 << 0xc)) == 0)) {\n        return 0;\n    }\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a2c",
            "calling": [
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a2c"
        },
        "FUN_08001366": {
            "renaming": {
                "FUN_08001366": "read_character_and_print_08001366",
                "param_1": "buffer_address",
                "param_2": "character",
                "param_3": "buffer_length",
                "param_4": "param_4",
                "cVar1": "current_character",
                "max_length": "max_length",
                "buffer_length_byte": "buffer_length_byte"
            },
            "code": "void read_character_and_print_08001366(int buffer_address, char character, uint buffer_length, undefined4 param_4)\n{\n  char current_character;\n  uint max_length = 3;\n  if (max_length < buffer_length) {\n    buffer_length = max_length;\n  }\n  uint buffer_length_byte = (uint)*(byte *)(buffer_address + 0x17);\n  if ((int)buffer_length_byte <= (int)buffer_length) {\n    buffer_length = buffer_length_byte - 1 & 0xff;\n  }\n  current_character = *(char *)(buffer_length + buffer_address + 0x18);\n  FUN_08001310(buffer_address, character + current_character | 0x80, 0, current_character, param_4);\n  return;\n}",
            "called": [
                "FUN_08001310"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001366",
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "imported": false,
            "current_name": "read_character_and_print_08001366"
        },
        "FUN_08005848": {
            "renaming": {
                "FUN_08005848": "process_data_08005848",
                "param_1": "data_index",
                "param_2": "data_bitmask",
                "param_3": "data_value",
                "param_4": "data_array",
                "uVar4": "data_value_index",
                "puVar3": "array_ptr",
                "iVar1": "status",
                "uVar2": "bitmask"
            },
            "code": "void process_data_08005848(uint data_index, undefined4 data_bitmask, undefined4 data_value, undefined* data_array){\n                        int status;\n                        undefined4 bitmask;\n                        undefined* array_ptr;\n                        uint data_value_index;\n                        \n                        if (data_index < 0x3c) {\n                            data_value_index = (uint)(char)PTR_DAT_08005888[data_index];\n                            array_ptr = PTR_DAT_08005888;\n                        }\n                        else {\n                            data_value_index = 0xffffffff;\n                            array_ptr = data_array;\n                        }\n                        if ((data_value_index != 0xffffffff) &&\n                            (status = FUN_080047f4(data_value_index,PTR_DAT_0800588c,data_value,array_ptr,data_array), status != 0)) {\n                            bitmask = FUN_08004848((data_value_index << 0x18) >> 0x1c);\n                            FUN_08004c30(bitmask,1 << (data_value_index & 0xf) & 0xffff,data_bitmask);\n                        }\n                        return;\n                    }",
            "called": [
                "FUN_08004c30",
                "FUN_080047f4",
                "FUN_08004848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005848",
            "calling": [
                "FUN_080012c0",
                "FUN_080012a2",
                "FUN_0800157c",
                "FUN_08000cd0",
                "FUN_080012e8",
                "FUN_08001310",
                "FUN_08000bcc",
                "FUN_080013a4",
                "FUN_080015b2"
            ],
            "imported": false,
            "current_name": "process_data_08005848"
        },
        "FUN_08000ae8": {
            "renaming": {
                "FUN_08000ae8": "trigger_software_interrupt_08000ae8",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void trigger_software_interrupt_08000ae8(void)\n{\n  software_interrupt(SOFTWARE_INTERRUPT_CODE);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ae8",
            "calling": [
                "FUN_08000aec"
            ],
            "imported": false,
            "current_name": "trigger_software_interrupt_08000ae8"
        },
        "FUN_08003ed8": {
            "renaming": {
                "FUN_08003ed8": "check_and_modify_flags_08003ed8",
                "param_1": "data",
                "puVar1": "ptr_data"
            },
            "code": "void check_and_modify_flags_08003ed8(uint **data)\n{\n  uint *ptr_data = *data;\n  *(undefined *)((int)data + 0x3d) = 2;\n  if ((ptr_data[8] & 0x1111) == 0) {\n    if ((ptr_data[8] & 0x444) == 0) {\n      *ptr_data = *ptr_data & 0xfffffffe;\n    }\n  }\n  call_another_function(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}",
            "called": [
                "FUN_08004b34"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ed8",
            "calling": [
                "FUN_08004b3c"
            ],
            "imported": false,
            "current_name": "check_and_modify_flags_08003ed8"
        },
        "FUN_080061e0": {
            "renaming": {
                "FUN_080061e0": "fill_memory_with_value_080061e0",
                "param_1": "memory_start_address",
                "param_2": "value_to_fill",
                "param_3": "memory_size",
                "puVar1": "memory_end_address",
                "*param_1": "*memory_start_address"
            },
            "code": "void fill_memory_with_value_080061e0(char *memory_start_address, char value_to_fill, int memory_size) {\n  char *memory_end_address;\n  memory_end_address = memory_start_address + memory_size;\n  for (; memory_start_address != memory_end_address; memory_start_address = memory_start_address + 1) {\n    *memory_start_address = value_to_fill;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080061e0",
            "calling": [
                "FUN_08006c88",
                "FUN_08006d14",
                "FUN_08006c40",
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "fill_memory_with_value_080061e0"
        },
        "FUN_08005604": {
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "random_index",
                "iVar2": "arg2",
                "iVar3": "function_address",
                "PTR_DAT_08005644": "PTR_FUNCTION_ADDRESS",
                "PTR_DAT_08005648": "PTR_COMMAND_ADDRESS",
                "PTR_DAT_0800564c": "PTR_ARG1_ADDRESS"
            },
            "code": "void execute_function_08005604(void)\n{\n  uint32_t random_index = get_random_index();\n  int32_t function_address = *(int32_t *)(PTR_DAT_08005644 + random_index * 4);\n  if ((random_index < 5) && (function_address != -1)) {\n    uint32_t arg1 = *(uint32_t *)(PTR_DAT_0800564c + (uint32_t)*(uint8_t *)(function_address + 0x44) * 4);\n    int32_t arg2 = *(int32_t *)(function_address + 100) + (uint32_t)*(uint16_t *)(function_address + 0x6a);\n    execute_command(arg1, arg2, 1);\n  }\n  return;\n}",
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005604",
            "calling": [
                "FUN_080045fe"
            ],
            "imported": false,
            "current_name": "execute_function_08005604"
        },
        "FUN_08005724": {
            "renaming": {
                "FUN_08005724": "get_one_08005724"
            },
            "code": "int get_one_08005724(void) {\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005724",
            "calling": [
                "FUN_08007028"
            ],
            "imported": false,
            "current_name": "get_one_08005724"
        },
        "FUN_08005728": {
            "renaming": {
                "FUN_08005728": "return_zero_08005728"
            },
            "code": "int return_zero_08005728() {\n    int result = 0;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005728",
            "calling": [
                "FUN_08007048"
            ],
            "imported": false,
            "current_name": "return_zero_08005728"
        },
        "FUN_0800135a": {
            "renaming": {
                "FUN_0800135a": "execute_function_with_params_0800135a",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "unused_param",
                "param_4": "output_param",
                "FUN_08001310": "call_function_with_params"
            },
            "code": "void execute_function_with_params_0800135a(undefined4 param_1, undefined4 param_4)\n{\n  call_function_with_params(param_1, 1, 0, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_08001310"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800135a",
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "imported": false,
            "current_name": "execute_function_with_params_0800135a"
        },
        "FUN_08005c96": {
            "renaming": {
                "FUN_08005c96": "perform_operation_on_data_08005c96",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "operation_type",
                "param_4": "additional_param",
                "uVar1": "result"
            },
            "code": "int perform_operation_on_data_08005c96(int *data_ptr, int data_size, int operation_type, int additional_param) {\n  if (data_size != 0) {\n    int result = allocate_memory(data_size);\n    result = (**(operation_func **)(*data_ptr + 4))(data_ptr, data_size, result, *(operation_func **)(*data_ptr + 4), additional_param);\n    return result;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08000178"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c96",
            "calling": [
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "perform_operation_on_data_08005c96"
        },
        "FUN_0800571a": {
            "renaming": {
                "FUN_0800571a": "set_memory_flag_0800571a",
                "param_1": "address",
                "param_2": "flag",
                "PTR_": "address",
                "DAT_": "flag"
            },
            "code": "void set_memory_flag_0800571a(void* PTR_, int DAT_) {\n    *(int*)(PTR_ + 4) = DAT_;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800571a",
            "calling": [
                "FUN_08007004"
            ],
            "imported": false,
            "current_name": "set_memory_flag_0800571a"
        },
        "FUN_08002efc": {
            "renaming": {
                "FUN_08002efc": "process_input_08002efc",
                "param_1": "input_array",
                "puVar1": "status"
            },
            "code": "uint32_t process_input_08002efc(uint32_t **input_array)\n{\n  uint32_t *status = input_array[0xb];\n  if (*(char *)((int)input_array + 0x3d) == '!') {\n    if (*(uint16_t *)((int)input_array + 0x2a) == 0) {\n      if (((status == (uint32_t *)0x4) || (status == (uint32_t *)0x8)) || (status == (uint32_t *)0xffff0000)) {\n        (*input_array)[1] = (*input_array)[1] & 0xfffff8ff;\n        **input_array = **input_array | 0x200;\n        input_array[0xc] = (uint32_t *)0x0;\n        *(char *)((int)input_array + 0x3d) = 0x20;\n        if (*(char *)((int)input_array + 0x3e) == '@') {\n          *(char *)((int)input_array + 0x3e) = 0;\n          do_nothing_08002db0();\n        }\n        else {\n          *(char *)((int)input_array + 0x3e) = 0;\n          do_nothing_08002c4e();\n        }\n      }\n      else {\n        (*input_array)[1] = (*input_array)[1] & 0xfffff8ff;\n        input_array[0xc] = (uint32_t *)0x11;\n        *(char *)((int)input_array + 0x3e) = 0;\n        *(char *)((int)input_array + 0x3d) = 0x20;\n        do_nothing_08002c4e();\n      }\n    }\n    else {\n      status = input_array[9];\n      input_array[9] = (uint32_t *)((int)status + 1);\n      (*input_array)[4] = (uint32_t)*(char *)status;\n      *(uint16_t *)((int)input_array + 0x2a) = *(uint16_t *)((int)input_array + 0x2a) + -1;\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_08002c4e",
                "FUN_08002db0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002efc",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_input_08002efc"
        },
        "FUN_0800365c": {
            "renaming": {
                "FUN_0800365c": "count_down_0800365c",
                "param_1": "num",
                "local_4": "countdown",
                "DAT_08003684": "constant_1",
                "PTR_DAT_08003680": "pointer_1"
            },
            "code": "void count_down_0800365c(int num)\n{\n  int countdown = num * (uint)((ulonglong)DAT_08003684 * (ulonglong)*(uint *)PTR_DAT_08003680 >> 0x29);\n  do {\n    countdown--;\n  } while (countdown != 0);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800365c",
            "calling": [
                "FUN_08003688"
            ],
            "imported": false,
            "current_name": "count_down_0800365c"
        },
        "FUN_080033b8": {
            "renaming": {
                "FUN_080033b8": "processInput_080033b8",
                "param_1": "input",
                "iVar1": "inputPointer",
                "uVar2": "value1",
                "uVar3": "value3",
                "uVar4": "value2"
            },
            "code": "void processInput_080033b8(int *input)\n{\n    int inputPointer = *input;\n    uint value1 = *(uint *)(inputPointer + 0x18);\n    uint value2 = *(uint *)(inputPointer + 0x14);\n    uint value3 = *(uint *)(inputPointer + 4);\n    if ((*(char *)((int)input + 0x3e) == '\\x10') || (*(char *)((int)input + 0x3e) == '@')) {\n        if (((value2 & 0x10001) == 0) || ((value3 & 0x200) == 0)) {\n            if (((PTR_DAT_08003518 & value2) == 0) || ((value3 & 0x200) == 0)) {\n                if (((PTR_DAT_08003504 & value2) != 0) && ((value3 & 0x200) != 0)) {\n                    FUN_080028de(input);\n                }\n            }\n            else {\n                FUN_080028d2(input);\n            }\n        }\n        else {\n            FUN_08002848(input);\n        }\n        if ((PTR_DAT_0800350c & value1) == 0) {\n            if ((((PTR_DAT_0800351c & value2) != 0) && ((value3 & 0x400) != 0)) && ((PTR_DAT_08003514 & value2) == 0)) {\n                FUN_08002f9c(input);\n                return;\n            }\n            if (((PTR_DAT_08003514 & value2) != 0) && ((value3 & 0x200) != 0)) {\n                FUN_0800306c(input);\n                return;\n            }\n        }\n        else {\n            if ((((PTR_DAT_08003510 & value2) != 0) && ((value3 & 0x400) != 0)) && ((PTR_DAT_08003514 & value2) == 0)) {\n                FUN_08002db2(input);\n                return;\n            }\n            if (((PTR_DAT_08003514 & value2) != 0) && ((value3 & 0x200) != 0)) {\n                FUN_08002efc(input);\n                return;\n            }\n        }\n    }\n    else {\n        if (((PTR_DAT_08003504 & value2) != 0) && ((value3 & 0x200) != 0)) {\n            FUN_08002cf2();\n            return;\n        }\n        if (((PTR_DAT_08003508 & value2) != 0) && ((value3 & 0x200) != 0)) {\n            FUN_080032b4(input);\n            return;\n        }\n        if ((PTR_DAT_0800350c & value1) == 0) {\n            if ((((PTR_DAT_0800351c & value2) != 0) && ((value3 & 0x400) != 0)) && ((PTR_DAT_08003514 & value2) == 0)) {\n                FUN_08002ca6(input);\n                return;\n            }\n            if (((PTR_DAT_08003514 & value2) != 0) && ((value3 & 0x200) != 0)) {\n                FUN_08002ad8(input);\n            }\n        }\n        else {\n            if ((((PTR_DAT_08003510 & value2) != 0) && ((value3 & 0x400) != 0)) && ((PTR_DAT_08003514 & value2) == 0)) {\n                FUN_08002c54(input);\n                return;\n            }\n            if (((PTR_DAT_08003514 & value2) != 0) && ((value3 & 0x200) != 0)) {\n                FUN_08002ab8(input);\n                return;\n            }\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08002db2",
                "FUN_080028d2",
                "FUN_080028de",
                "FUN_08002ca6",
                "FUN_08002ab8",
                "FUN_0800306c",
                "FUN_080032b4",
                "FUN_08002f9c",
                "FUN_08002cf2",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_08002848",
                "FUN_08002c54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080033b8",
            "calling": [],
            "imported": false,
            "current_name": "processInput_080033b8"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "calculate_result_080069e4",
                "param_1": "output",
                "param_2": "input",
                "uVar1": "result",
                "uVar2": "input_value",
                "iVar3": "ptr_value",
                "PTR_PTR_DAT_08006ab0": "PTR_PTR_DATA",
                "PTR_DAT_08006ab4": "PTR_DATA_1",
                "PTR_DAT_08006ab8": "PTR_DATA_2",
                "PTR_DAT_08006abc": "PTR_DATA_3"
            },
            "code": "uint calculate_result_080069e4(uint *output, uint *input)\n{\n  uint result;\n  ushort input_value;\n  int ptr_value;\n  \n  ptr_value = *(int *)PTR_PTR_DAT_08006ab0;\n  if ((ptr_value != 0) && (*(int *)(ptr_value + 0x18) == 0)) {\n    reset_ptr_value(ptr_value);\n  }\n  if (input == (uint *)PTR_DAT_08006ab4) {\n    input = *(uint **)(ptr_value + 4);\n  }\n  else if (input == (uint *)PTR_DAT_08006ab8) {\n    input = *(uint **)(ptr_value + 8);\n  }\n  else if (input == (uint *)PTR_DAT_08006abc) {\n    input = *(uint **)(ptr_value + 0xc);\n  }\n  input_value = *(ushort *)(input + 3);\n  result = (uint)input_value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08006a14;\n    }\n    if ((uint)(result << 0x1d) < 0) {\n      if ((uint *)input[0xd] != (uint *)0x0) {\n        if ((uint *)input[0xd] != input + 0x11) {\n          calculate_result_080069e4(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    calculate_result_080069e4(output, input);\n  }\n  input_value = *(ushort *)(input + 3);\n  result = input_value & 1;\n  if ((input_value & 1) == 0) {\n    if (-1 < (int)((uint)input_value << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    input_value = *(ushort *)(input + 3);\n    result = (int)(short)input_value & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input + 3) = input_value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}",
            "called": [
                "FUN_080061f0",
                "FUN_08006cb4",
                "FUN_08006e10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "imported": false,
            "current_name": "calculate_result_080069e4"
        },
        "FUN_08002580": {
            "renaming": {
                "FUN_08002580": "do_nothing_08002580"
            },
            "code": "\nvoid do_nothing_08002580(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002580",
            "calling": [
                "FUN_08002582"
            ],
            "imported": false,
            "current_name": "do_nothing_08002580"
        },
        "FUN_08004b9e": {
            "renaming": {
                "FUN_08004b9e": "perform_tasks_08004b9e",
                "FUN_08001cac": "execute_first_task",
                "FUN_08002582": "execute_second_task",
                "do_nothing_08004b9c": "do_nothing"
            },
            "code": "void perform_tasks_08004b9e(void)\n{\n  execute_first_task();\n  execute_second_task();\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08002582",
                "FUN_08004b9c",
                "FUN_08001cac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b9e",
            "calling": [],
            "imported": false,
            "current_name": "perform_tasks_08004b9e"
        },
        "FUN_08004b9c": {
            "renaming": {
                "FUN_08004b9c": "do_nothing_08004b9c"
            },
            "code": "\nvoid do_nothing_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b9c",
            "calling": [
                "FUN_08004b9e"
            ],
            "imported": false,
            "current_name": "do_nothing_08004b9c"
        },
        "FUN_08005730": {
            "renaming": {
                "FUN_08005730": "process_data_08005730",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "FUN_080053d4": "call_data_processor"
            },
            "code": "void process_data_08005730(undefined4 data1, undefined4 data2, undefined4 data3, undefined4 data4)\n{\n  call_data_processor(data2, data3, data3, data4, data4);\n  return;\n}",
            "called": [
                "FUN_080053d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005730",
            "calling": [
                "FUN_08006f5a"
            ],
            "imported": false,
            "current_name": "process_data_08005730"
        },
        "FUN_08002582": {
            "renaming": {
                "FUN_08002582": "do_nothing_and_return_08002582_08002582",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void do_nothing_and_return_08002582_08002582(void)\n{\n  do_nothing_08002580();\n  return;\n}",
            "called": [
                "FUN_08002580"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002582",
            "calling": [
                "FUN_08004b9e"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08002582_08002582"
        },
        "FUN_08004884": {
            "renaming": {
                "FUN_08004884": "set_flag_08004884",
                "param_1": "flag",
                "uVar1": "result",
                "DAT_08004914": "data_ptr",
                "DAT_08004918": "result_0",
                "DAT_0800491c": "result_1",
                "DAT_08004920": "result_2",
                "DAT_08004924": "result_3",
                "DAT_08004928": "result_4"
            },
            "code": "uint32_t set_flag_08004884(uint32_t flag)\n{\n  uint32_t* DAT_08004914 = (uint32_t*)DAT_08004914;\n  switch(flag) {\n    case 0:\n      DAT_08004914[6] |= 0x4;\n      return DAT_08004918;\n    case 1:\n      DAT_08004914[6] |= 0x8;\n      return DAT_0800491c;\n    case 2:\n      DAT_08004914[6] |= 0x10;\n      return DAT_08004920;\n    case 3:\n      DAT_08004914[6] |= 0x20;\n      return DAT_08004924;\n    case 4:\n      DAT_08004914[6] |= 0x40;\n      return DAT_08004928;\n    default:\n      return 0;\n  }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004884",
            "calling": [
                "FUN_08004974",
                "FUN_08004bb0",
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "set_flag_08004884"
        },
        "FUN_08001be8": {
            "renaming": {
                "FUN_08001be8": "copy_data_and_clear_memory_08001be8",
                "iVar1": "i",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table_ptr"
            },
            "code": "void copy_data_and_clear_memory_08001be8(void)\n{\n  int i = 0;\n  undefined4 *data_ptr = (undefined4 *)PTR_DAT_08001c28;\n  code *jump_table_ptr;\n  \n  for (i = 0; PTR_DAT_08001c20 + i < DAT_08001c24; i += 4) {\n    *(undefined4 *)(PTR_DAT_08001c20 + i) = *(undefined4 *)(DAT_08001c1c + i);\n  }\n  \n  for (; data_ptr < PTR_DAT_08001c2c; data_ptr++) {\n    *data_ptr = 0;\n  }\n  \n  FUN_08004d44();\n  FUN_08006198();\n  \n  jump_table_ptr = (code *)0x8001c1a;\n  FUN_08005f6c();\n  \n  (*jump_table_ptr)();\n  return;\n}\n",
            "called": [
                "FUN_08004d44",
                "FUN_08005f6c",
                "FUN_08006198"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001be8",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_clear_memory_08001be8"
        },
        "FUN_080061f0": {
            "renaming": {
                "FUN_080061f0": "insert_into_linked_list_080061f0",
                "param_1": "head",
                "param_2": "size",
                "param_3": "new_element",
                "param_4": "unused",
                "puVar1": "ptr",
                "extraout_r1": "next",
                "ppiVar2": "current",
                "ppiVar3": "tail",
                "piVar4": "element_size",
                "ppiVar5": "current",
                "ppiVar6": "next",
                "ppiVar7": "tail"
            },
            "code": "void insert_into_linked_list_080061f0(int **head, int size, int *new_element, int unused) {\n  if (size == 0) {\n    return;\n  }\n  int **tail = (int **)(size - 4);\n  if (*tail < 0) {\n    tail = (int **)((int)tail + **tail);\n  }\n  do_nothing_08006eac();\n  int **current = *(int ***)PTR_DAT_08006284;\n  if (current == NULL) {\n    *head = new_element;\n    *(int ***)PTR_DAT_08006284 = head;\n    return;\n  }\n  while (current <= tail) {\n    int **next = (int **)current[1];\n    if (next == NULL) {\n      *current = new_element;\n      *(int ***)PTR_DAT_08006284 = head;\n      return;\n    }\n    if (next > tail) {\n      *head = NULL;\n      return;\n    }\n    current = next;\n  }\n  int **next = (int **)current[1];\n  if (next != NULL && next == tail + **tail) {\n    *current += **tail;\n    if (next[1] != NULL) {\n      *current += *next[1];\n      current[1] = next[1];\n    }\n  } else {\n    *head = new_element;\n    tail[1] = next;\n    current[1] = tail;\n  }\n  do_nothing_08006eae(NULL, NULL, NULL, unused);\n}\n",
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080061f0",
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "imported": false,
            "current_name": "insert_into_linked_list_080061f0"
        },
        "FUN_08002348": {
            "renaming": {
                "FUN_08002348": "check_status_08002348",
                "param_1": "status",
                "iVar1": "result",
                "*(char *)(param_1 + 0x24)": "*status_ptr",
                "*(undefined *)(param_1 + 0x24)": "*status_ptr",
                "FUN_080020f0": "check_function",
                "iVar1 == 0": "func_result == 0",
                "*(uint *)(param_1 + 0x28)": "*flag_ptr",
                "0xffffeefe": "0xffffeefe",
                "1": "1"
            },
            "code": "int check_status_08002348(int status)\n{\n  int result;\n  char* status_ptr = (char*)(status + 0x24);\n  uint* flag_ptr = (uint*)(status + 0x28);\n  if (*status_ptr == 1)\n  {\n    result = 2;\n  }\n  else\n  {\n    *status_ptr = 1;\n    int func_result = check_function();\n    if (func_result == 0)\n    {\n      *flag_ptr = (*flag_ptr & 0xffffeefe) | 1;\n    }\n    *status_ptr = 0;\n    result = func_result;\n  }\n  return result;\n}",
            "called": [
                "FUN_080020f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002348",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "check_status_08002348"
        },
        "FUN_080060d4": {
            "renaming": {
                "FUN_080060d4": "execute_function_080060d4",
                "param_1": "function_pointer",
                "iVar1": "index",
                "FUN_08007090": "initialize",
                "FUN_08005f8c": "get_result_index"
            },
            "code": "void execute_function_080060d4(int function_pointer){\n  int index = *(int *)(function_pointer + 8);\n  if (index != 0) {\n    (**(code **)(function_pointer + 0xc))();\n    return;\n  }\n  initialize();\n  int result_index = get_result_index();\n  if (*(int *)(PTR_DAT_08006100 + result_index * 0x14 + 0xc) != 0) {\n    execute_function_080060d4();\n  }\n  return;\n}",
            "called": [
                "FUN_08007090"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080060d4",
            "calling": [
                "FUN_080060e4"
            ],
            "imported": false,
            "current_name": "execute_function_080060d4"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "configure_device_08005a68",
                "param_1": "device_id",
                "param_2": "device_config",
                "param_3": "config_bits",
                "bVar1": "config_mask",
                "iVar2": "num_bits_set",
                "pbVar3": "device_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_08005b38": "PTR_DAT_08005b38"
            },
            "code": "void configure_device_08005a68(int device_id, int device_config, byte config_bits){\n  uint extraout_r1;\n  byte config_mask;\n  int num_bits_set = 0;\n  byte *device_ptr;\n  undefined unaff_r4;\n  int unaff_r6;\n  code *jump_table;\n  *(int *)(device_id + 0x11c) = device_config;\n  *(byte *)(device_id + 0x140) = config_bits;\n  config_mask = config_bits & 7;\n  if (config_mask == 4) {\n    num_bits_set = 7;\n  }\n  else if (config_mask == 6) {\n    num_bits_set = 8;\n  }\n  else if (config_mask == 2) {\n    num_bits_set = 6;\n  }\n  if ((config_bits & 0x30) == 0x30) {\n    *(int *)(device_id + 0x128) = 0x600;\n    num_bits_set++;\n  }\n  else if ((config_bits & 0x20) == 0) {\n    *(int *)(device_id + 0x128) = 0;\n  }\n  else {\n    *(int *)(device_id + 0x128) = 0x400;\n    num_bits_set++;\n  }\n  if ((config_bits & 8) == 0) {\n    *(int *)(device_id + 0x124) = 0;\n  }\n  else {\n    *(int *)(device_id + 0x124) = 0x2000;\n  }\n  if (num_bits_set == 8) {\n    *(int *)(device_id + 0x120) = 0;\n  }\n  else if (num_bits_set == 9) {\n    *(int *)(device_id + 0x120) = 0x1000;\n  }\n  else {\n    num_bits_set = 0;\n  }\n  if (num_bits_set != 0) {\n    configure_device_08005a68(device_id + 0xd4);\n    set_device_config(device_id + 0xd4,uRam08005b14);\n    return;\n  }\n  jump_table = (code *)0x8005b12;\n  int device_config_size = iRam08005b1c;\n  set_device_config(uRam08005b20,299,iRam08005b1c,uRam08005b18);\n  device_ptr = *(byte **)(extraout_r1 + unaff_r6);\n  *(undefined *)(device_config_size + 0x1e) = unaff_r4;\n  *(undefined *)(*device_ptr + 0x1e) = 0;\n  if (extraout_r1 < 0x3c) {\n    uRam0000012d = PTR_DAT_08005b38[extraout_r1];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_0800611c",
                "FUN_08004f4c",
                "FUN_08005510"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08000bcc"
            ],
            "imported": false,
            "current_name": "configure_device_08005a68"
        },
        "FUN_08001814": {
            "renaming": {
                "FUN_08001814": "process_input_data_08001814",
                "param_1": "data",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "param_5": "input4",
                "param_6": "input5",
                "param_7": "input6",
                "param_8": "input7",
                "param_9": "input8",
                "iVar1": "result1",
                "uVar2": "uVar1",
                "uVar3": "uVar2",
                "bVar4": "is_input8_not_one",
                "uVar5": "uVar3",
                "uVar6": "uVar4",
                "uVar7": "uVar5"
            },
            "code": "void process_input_data_08001814(undefined4 *data, undefined4 input1, undefined4 input2, undefined4 input3, undefined4 input4, undefined4 input5, undefined4 input6, undefined4 input7, int input8)\n{\n    int result1 = FUN_080009dc(input3, input4, 0, 0);\n    int result2 = FUN_080009dc(input5, input6, 0, 0);\n    int result3 = FUN_080009dc(input7, input8, 0, 0);\n    if (result1 == 0 && result2 == 0 && result3 == 0)\n    {\n        data[13] = input8;\n        bool is_input8_not_one = input8 != 1;\n        if (is_input8_not_one) {\n            input8 = 0;\n        }\n        *(undefined *)((int)data + 0x71) = (undefined)input8;\n        data[0] = input3;\n        data[1] = input4;\n        data[2] = input5;\n        data[3] = input6;\n        data[4] = input7;\n        data[5] = input8;\n        undefined8 uVar1 = FUN_0800040c(data[22]);\n        uVar1 = FUNC_0800074c((int)uVar1, (int)((ulonglong)uVar1 >> 0x20), 0, DAT_080018f4);\n        undefined4 uVar2 = (undefined4)((ulonglong)uVar1 >> 0x20);\n        data[6] = input3;\n        data[7] = input4;\n        undefined8 uVar3 = FUNC_080004f8(input5, input6, (int)uVar1, uVar2);\n        *(undefined8 *)(data + 8) = uVar3;\n        undefined8 uVar4 = FUNC_0800074c(input7, input8, (int)uVar1, uVar2);\n        *(undefined8 *)(data + 10) = uVar4;\n        if (data[12] == 1) {\n            undefined8 uVar5 = FUNC_08000190(0, 0, input3, input4);\n            *(undefined8 *)(data + 6) = uVar5;\n            uVar3 = FUNC_08000190(0, 0, (int)uVar3, (int)((ulonglong)uVar3 >> 0x20));\n            *(undefined8 *)(data + 8) = uVar3;\n            uVar4 = FUNC_08000190(0, 0, (int)uVar4, (int)((ulonglong)uVar4 >> 0x20));\n            *(undefined8 *)(data + 10) = uVar4;\n        }\n    }\n}\n",
            "called": [
                "FUN_0800040c",
                "FUN_080004f8",
                "FUN_0800074c",
                "FUN_080009dc",
                "FUN_08000190"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001814",
            "calling": [
                "FUN_08001ab0",
                "FUN_080018f8"
            ],
            "imported": false,
            "current_name": "process_input_data_08001814"
        },
        "FUN_08000aec": {
            "renaming": {
                "FUN_08000aec": "check_for_zero_08000aec",
                "param_1": "param1",
                "param_2": "",
                "param_3": "",
                "param_4": "param4",
                "uVar1": "return_value"
            },
            "code": "int check_for_zero_08000aec(int param1, int param4) {\n  int return_value;\n  if (*(int *)PTR_DAT_08000b04 != 0) {\n    return_value = 0;\n  }\n  else {\n    return_value = FUN_08000ae8(1, param1, 0, 0, param4);\n  }\n  return return_value;\n}",
            "called": [
                "FUN_08000ae8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000aec",
            "calling": [
                "FUN_08000bcc"
            ],
            "imported": false,
            "current_name": "check_for_zero_08000aec"
        },
        "FUN_0800572c": {
            "renaming": {
                "FUN_0800572c": "return_zero_0800572c"
            },
            "code": "int return_zero_0800572c(void) { \n    int result = 0; \n    return result; \n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800572c",
            "calling": [
                "FUN_0800706c"
            ],
            "imported": false,
            "current_name": "return_zero_0800572c"
        },
        "FUN_08004e12": {
            "renaming": {
                "FUN_08004e12": "execute_function_if_not_null_08004e12",
                "iVar1": "function_ptr_address",
                "FUN_08004df4": "get_function_ptr_address",
                "PTR_": "",
                "DAT_": ""
            },
            "code": "void execute_function_if_not_null_08004e12(void)\n{\n  int function_ptr_address = get_function_ptr_address();\n  if (*(code **)(function_ptr_address + 0x48) != (code *)0x0) {\n    (**(code **)(function_ptr_address + 0x48))();\n  }\n  return;\n}",
            "called": [
                "FUN_08004df4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e12",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "execute_function_if_not_null_08004e12"
        },
        "FUN_08000a58": {
            "renaming": {
                "FUN_08000a58": "convert_to_signed_int_08000a58",
                "param_1": "unsigned_int",
                "param_2": "sign_bit",
                "uVar1": "sign_bit_abs",
                "iVar2": "shifted_sign_bit",
                "uVar3": "shift_amount"
            },
            "code": "uint convert_to_signed_int_08000a58(uint unsigned_int, uint sign_bit) {\n    uint signed_int;\n    int shifted_sign_bit = sign_bit * 2 + 0x200000;\n    if (sign_bit * 2 < 0xffe00000) {\n        if (shifted_sign_bit >= 0) {\n            return 0;\n        }\n        uint sign_bit_abs = -shifted_sign_bit >> 0x15;\n        uint shift_amount = -sign_bit_abs - 0x3e1;\n        if (sign_bit_abs < 0xfffffc20 && shift_amount != 0) {\n            signed_int = (unsigned_int << 0xb | 0x80000000 | sign_bit >> 0x15) >> (shift_amount & 0xff);\n            if ((sign_bit & 0x80000000) != 0) {\n                signed_int = -signed_int;\n            }\n            return signed_int;\n        }\n    }\n    else if ((unsigned_int | sign_bit << 0xc) != 0) {\n        return 0;\n    }\n    sign_bit = sign_bit & 0x80000000;\n    if (sign_bit == 0) {\n        sign_bit = 0x7fffffff;\n    }\n    return sign_bit;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a58",
            "calling": [
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "convert_to_signed_int_08000a58"
        },
        "FUN_08001b48": {
            "renaming": {
                "FUN_08001b48": "initialize_08001b48",
                "iVar1": "result1",
                "uVar2": "result2",
                "local_30": "local_array2",
                "local_20": "local_var7",
                "local_1c": "local_var8",
                "local_14": "local_var9",
                "local_10": "local_var10",
                "local_c": "local_var11",
                "FUNC_08003688": "check",
                "PTR_s__home_bo__arduino15_packages_STM_08001be4": "error_message",
                "local_44": "local_var2",
                "local_40": "local_var3",
                "local_3c": "local_var4",
                "local_38": "local_var5",
                "local_34": "local_var6",
                "FUN_08003ad4": "calculate",
                "FUN_08003c90": "compute",
                "FUN_08003c44": "get_value",
                "FUN_08002514": "print_result",
                "FUN_08002560": "print_value",
                "FUN_08002494": "print_info"
            },
            "code": "void initialize_08001b48() {\n    int result1;\n    uint result2;\n    undefined4 local_array1 [2];\n    undefined4 local_var1;\n    undefined4 local_var2;\n    undefined4 local_var3;\n    undefined4 local_var4;\n    undefined4 local_var5;\n    undefined4 local_var6;\n    undefined4 local_array2 [4];\n    undefined4 local_var7;\n    undefined4 local_var8;\n    undefined4 local_var9;\n    undefined4 local_var10;\n    undefined4 local_var11;\n    local_array2[0] = 2;\n    local_var7 = 1;\n    local_var8 = 0x10;\n    local_var9 = 2;\n    local_var10 = 0;\n    local_var11 = 0x380000;\n    result1 = check(local_array2);\n    if (result1 != 0) {\n        print_error(PTR_s__home_bo__arduino15_packages_STM_08001be4, 0x88);\n    }\n    local_var2 = 0xf;\n    local_var3 = 2;\n    local_var4 = 0;\n    local_var5 = 0x400;\n    local_var6 = 0;\n    result1 = calculate(&local_var2);\n    if (result1 != 0) {\n        print_error(PTR_s__home_bo__arduino15_packages_STM_08001be4, 0x95);\n    }\n    local_array1[0] = 2;\n    local_var1 = 0x8000;\n    result1 = compute(local_array1);\n    if (result1 != 0) {\n        print_error(PTR_s__home_bo__arduino15_packages_STM_08001be4, 0x9c);\n    }\n    result2 = get_value();\n    print_result((uint)((ulonglong)DAT_08001be0 * (ulonglong)result2 >> 0x26));\n    print_value(4);\n    print_info(0xffffffff, 0);\n}\n",
            "called": [
                "FUN_08003688",
                "FUN_08003ad4",
                "FUN_08002560",
                "FUN_08002494",
                "FUN_08004d40",
                "FUN_08002514",
                "FUN_08003c90",
                "FUN_08003c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001b48",
            "calling": [
                "FUN_08004c52"
            ],
            "imported": false,
            "current_name": "initialize_08001b48"
        },
        "FUN_08004092": {
            "renaming": {
                "FUN_08004092": "set_bit_in_uint_array_08004092",
                "param_1": "array",
                "param_2": "bit_index",
                "param_3": "bit_value",
                "*(uint *)(param_1 + 0x20)": "array[0x20]",
                "1 << (param_2 & 0xff)": "mask",
                "param_3 << (param_2 & 0xff)": "value"
            },
            "code": "void set_bit_in_uint_array_08004092(uint* array, uint bit_index, uint bit_value) {\n    uint mask = ~(1 << (bit_index & 0xff));\n    uint value = bit_value << (bit_index & 0xff);\n    array[0x20] = (array[0x20] & mask) | value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004092",
            "calling": [
                "FUN_080040b0"
            ],
            "imported": false,
            "current_name": "set_bit_in_uint_array_08004092"
        },
        "FUN_08005cd4": {
            "renaming": {
                "FUN_08005cd4": "sum_of_functions_results_08005cd4",
                "param_1": "arg1",
                "iVar1": "result1",
                "iVar2": "result2",
                "FUN_08005c96": "get_result_from_function1",
                "FUN_08005cc0": "get_result_from_function2"
            },
            "code": "int sum_of_functions_results_08005cd4(undefined4 arg1)\n{\n  int result1;\n  int result2;\n  result1 = get_result_from_function1();\n  result2 = get_result_from_function2(arg1);\n  return result2 + result1;\n}",
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005cd4",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "sum_of_functions_results_08005cd4"
        },
        "FUN_08005bb0": {
            "renaming": {
                "FUN_08005bb0": "process_input_08005bb0",
                "param_1": "input",
                "param_2": "value",
                "FUN_08005b54": "process_data"
            },
            "code": "void process_input_08005bb0(int input, int value, undefined4 param_3, undefined4 param_4) {\n  if (input != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    process_data(PTR_DAT_08005bd0, DAT_08005bcc, param_3, 0xffff, param_4);\n  }\n  return;\n}",
            "called": [
                "FUN_08005b54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bb0",
            "calling": [],
            "imported": false,
            "current_name": "process_input_08005bb0"
        },
        "FUN_080014ba": {
            "renaming": {
                "FUN_080014ba": "set_data_at_address_080014ba",
                "param_1": "address",
                "param_2": "is_zero",
                "param_3": "data_1",
                "param_4": "data_2",
                "param_5": "data_3",
                "param_6": "data_4",
                "param_7": "data_5",
                "param_8": "data_6",
                "param_9": "data_7",
                "param_10": "data_8",
                "param_11": "data_9",
                "param_12": "data_10",
                "param_13": "data_11",
                "*(undefined *)(param_1 + 8)": "*(undefined *)(address + 8)",
                "*(char *)(param_1 + 9)": "*(char *)(address + 9)",
                "*(undefined *)(param_1 + 10)": "*(undefined *)(address + 10)",
                "*(undefined *)(param_1 + 0xb)": "*(undefined *)(address + 0xb)",
                "*(undefined *)(param_1 + 0xc)": "*(undefined *)(address + 0xc)",
                "*(undefined *)(param_1 + 0xd)": "*(undefined *)(address + 0xd)",
                "*(undefined *)(param_1 + 0xe)": "*(undefined *)(address + 0xe)",
                "*(undefined *)(param_1 + 0xf)": "*(undefined *)(address + 0xf)",
                "*(undefined *)(param_1 + 0x10)": "*(undefined *)(address + 0x10)",
                "*(undefined *)(param_1 + 0x11)": "*(undefined *)(address + 0x11)",
                "*(undefined *)(param_1 + 0x12)": "*(undefined *)(address + 0x12)",
                "*(undefined *)(param_1 + 0x13)": "*(undefined *)(address + 0x13)",
                "FUN_080013a4": "set_data_at_address"
            },
            "code": "void set_data_at_address_080014ba(int address, int is_zero, undefined data_1, undefined4 data_2, undefined data_3, undefined data_4, undefined data_5, undefined data_6, undefined data_7, undefined data_8, undefined data_9, undefined data_10, undefined data_11){\n    *(undefined *)(address + 8) = data_1;\n    *(char *)(address + 9) = (char)data_2;\n    *(undefined *)(address + 10) = data_3;\n    *(undefined *)(address + 0xb) = data_4;\n    *(undefined *)(address + 0xc) = data_5;\n    *(undefined *)(address + 0xd) = data_6;\n    *(undefined *)(address + 0xe) = data_7;\n    *(undefined *)(address + 0xf) = data_8;\n    *(undefined *)(address + 0x10) = data_9;\n    *(undefined *)(address + 0x11) = data_10;\n    *(undefined *)(address + 0x12) = data_11;\n    if (is_zero == 0) {\n        *(undefined *)(address + 0x13) = 0x10;\n    }\n    else {\n        *(undefined *)(address + 0x13) = 0;\n    }\n    set_data_at_address_080014ba(address, 0x10, 1, 0, data_2);\n    return;\n}",
            "called": [
                "FUN_080013a4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014ba",
            "calling": [
                "FUN_08001510"
            ],
            "imported": false,
            "current_name": "set_data_at_address_080014ba"
        },
        "FUN_08003c90": {
            "renaming": {
                "FUN_08003c90": "set_flags_08003c90",
                "*param_1": "*flags",
                "bool bVar5": "bool is_bit_set",
                "int iVar2": "int var",
                "int iVar3": "int current_time",
                "uint uVar4": "uint uVar4",
                "undefined4 *puVar1": "uint *ptr",
                "DAT_08003d98": "PTR_DAT_08003d98",
                "DAT_08003d9c": "PTR_DAT_08003d9c",
                "DAT_08003da0": "PTR_DAT_08003da0"
            },
            "code": "int set_flags_08003c90(uint *flags)\n{\n    bool is_flag_set = (*flags & 1) != 0;\n\n    if (is_flag_set) {\n        bool is_bit_set = (*(uint *)(DAT_08003d98 + 0x1c) & 0x10000000) == 0;\n        if (is_bit_set) {\n            *(uint *)(DAT_08003d98 + 0x1c) |= 0x10000000;\n        }\n        if ((*DAT_08003d9c & 0x100) == 0) {\n            *DAT_08003d9c |= 0x100;\n            int start_time = FUN_08001cc4();\n            while ((*DAT_08003d9c & 0x100) == 0) {\n                int current_time = FUN_08001cc4();\n                if (100 < (uint)(current_time - start_time)) {\n                    return 3;\n                }\n            }\n        }\n        uint *ptr = DAT_08003da0;\n        int var = DAT_08003d98;\n        uint uVar4 = *(uint *)(DAT_08003d98 + 0x20) & 0x300;\n        if (uVar4 != 0 && uVar4 != (flags[1] & 0x300)) {\n            uVar4 = *(uint *)(DAT_08003d98 + 0x20);\n            *ptr = 1;\n            *ptr = 0;\n            *(uint *)(var + 0x20) = uVar4 & 0xfffffcff;\n            if ((uVar4 & 1) != 0) {\n                int start_time = FUN_08001cc4();\n                while ((*(uint *)(DAT_08003d98 + 0x20) & 2) == 0) {\n                    int current_time = FUN_08001cc4();\n                    if (5000 < (uint)(current_time - start_time)) {\n                        return 3;\n                    }\n                }\n            }\n        }\n        int var2 = DAT_08003d98;\n        *(uint *)(DAT_08003d98 + 0x20) = *(uint *)(DAT_08003d98 + 0x20) & 0xfffffcff | flags[1];\n        if (is_bit_set) {\n            *(uint *)(var2 + 0x1c) &= 0xefffffff;\n        }\n    }\n    if ((*flags & 2) != 0) {\n        *(uint *)(DAT_08003d98 + 4) &= 0xffff3fff | flags[2];\n    }\n    if ((*flags & 0x10) != 0) {\n        *(uint *)(DAT_08003d98 + 4) &= 0xffbfffff | flags[3];\n    }\n    return 0;\n}",
            "called": [
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c90",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "set_flags_08003c90"
        },
        "FUN_08002514": {
            "renaming": {
                "FUN_08002514": "validate_input_08002514",
                "param_1": "input",
                "puVar1": "data_ptr"
            },
            "code": "int validate_input_08002514(unsigned int input) {\n    unsigned int* data_ptr = DAT_08002538;\n    if (input - 1U < 0x1000000) {\n        data_ptr[1] = input - 1U;\n        *(unsigned char*)(DAT_0800253c + 0x23) = 0xf0;\n        data_ptr[2] = 0;\n        *data_ptr = 7;\n        return 0;\n    }\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002514",
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "imported": false,
            "current_name": "validate_input_08002514"
        },
        "FUN_08005c1c": {
            "renaming": {
                "FUN_08005c1c": "initialize_params_08005c1c",
                "param_1": "param_array",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5"
            },
            "code": "void initialize_params_08005c1c(undefined4 *param_array, undefined param_2, undefined param_3, undefined param_4, undefined param_5) {\n  *param_array = PTR_PTR_LAB_08005be2_1_08005c34;\n  *(undefined *)(param_array + 1) = param_2;\n  *(undefined *)(param_array + 5) = param_3;\n  *(undefined *)(param_array + 6) = param_4;\n  *(undefined *)(param_array + 7) = param_5;\n  return;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c1c",
            "calling": [
                "FUN_08005c38"
            ],
            "imported": false,
            "current_name": "initialize_params_08005c1c"
        },
        "FUN_08006dc8": {
            "renaming": {
                "FUN_08006dc8": "check_permissions_and_set_flag_08006dc8",
                "param_1": "permission_code",
                "param_2": "permission_value",
                "param_3": "flag_ptr",
                "param_4": "result_ptr",
                "iVar1": "check_result",
                "uVar2": "flag_value",
                "auStack_4c": "stack_variable",
                "local_48": "check_result_mask"
            },
            "code": "int check_permissions_and_set_flag_08006dc8(int permission_code, int permission_value, int* flag_ptr, uint* result_ptr)\n{\n  int file_permission = *(short *)(permission_value + 0xe);\n  int check_result = check_permissions(permission_code, file_permission);\n  if (check_result < 0 || file_permission < 0)\n  {\n    *result_ptr = 0;\n    if ((int)((uint)*(ushort *)(permission_value + 0xc) << 0x18) < 0)\n    {\n      *flag_ptr = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else\n  {\n    *result_ptr = (uint)((check_result & 0xf000) == 0x2000);\n  }\n  *flag_ptr = 0x400;\nLAB_08006e08:\n  return 0;\n}",
            "called": [
                "FUN_08007004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc8",
            "calling": [
                "FUN_08006e10"
            ],
            "imported": false,
            "current_name": "check_permissions_and_set_flag_08006dc8"
        },
        "FUN_0800412c": {
            "renaming": {
                "FUN_0800412c": "clear_flags_if_zero_0800412c",
                "param_1": "data",
                "param_2": "flag",
                "puVar1": "ptr"
            },
            "code": "uint32_t clear_flags_if_zero_0800412c(uint32_t **data, uint32_t flag) {\n    uint32_t *ptr = *data;\n    if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n        ptr[17] &= 0xffff7fff;\n    }\n    ptr = *data;\n    if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n        *ptr &= 0xfffffffe;\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004110"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800412c",
            "calling": [
                "FUN_08004b3c"
            ],
            "imported": false,
            "current_name": "clear_flags_if_zero_0800412c"
        },
        "FUN_08007090": {
            "renaming": {
                "FUN_08007090": "set_pointers_to_one_08007090",
                "UNRECOVERED_JUMPTABLE": "jump_table_ptr",
                "PTR_DAT_0800712c": "ptr_1",
                "PTR_DAT_08007130": "ptr_2",
                "PTR_DAT_08007134": "ptr_3",
                "PTR_DAT_08007138": "ptr_4",
                "PTR_DAT_0800713c": "ptr_5",
                "PTR_DAT_08007140": "ptr_6",
                "PTR_DAT_08007144": "ptr_7",
                "PTR_DAT_08007148": "ptr_8",
                "PTR_DAT_0800714c": "ptr_9",
                "PTR_DAT_08007150": "ptr_10",
                "PTR_DAT_08007154": "ptr_11",
                "PTR_DAT_08007158": "ptr_12",
                "FUN_08006ac0": "unrelated_function",
                "set_pointer_to_one": "set_pointer_to_one"
            },
            "code": "void set_pointers_to_one_08007090(void)\n{\n  code *jump_table_ptr = set_pointers_to_one_08007090;\n  set_pointer_to_one(PTR_DAT_0800712c);\n  set_pointer_to_one(PTR_DAT_08007130);\n  set_pointer_to_one(PTR_DAT_08007134);\n  set_pointer_to_one(PTR_DAT_08007138);\n  set_pointer_to_one(PTR_DAT_0800713c);\n  set_pointer_to_one(PTR_DAT_08007140);\n  set_pointer_to_one(PTR_DAT_08007144);\n  set_pointer_to_one(PTR_DAT_08007148);\n  set_pointer_to_one(PTR_DAT_0800714c);\n  set_pointer_to_one(PTR_DAT_08007150);\n  set_pointer_to_one(PTR_DAT_08007154);\n  set_pointer_to_one(PTR_DAT_08007158);\n  (*jump_table_ptr)();\n}\n\nvoid set_pointer_to_one(int* ptr)\n{\n  if (*ptr < 0)\n  {\n    *ptr = 1;\n  }\n}\n",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007090",
            "calling": [
                "FUN_080060d4"
            ],
            "imported": false,
            "current_name": "set_pointers_to_one_08007090"
        },
        "FUN_0800492c": {
            "renaming": {
                "FUN_0800492c": "calculate_shifted_value_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "unsigned_shifted_result"
            },
            "code": "uint calculate_shifted_value_0800492c(int input1, int input3, int input4) {\n  int result = FUN_08004cce(input1, PTR_DAT_08004944, input3, input4, input4);\n  int shifted_result = result << 12;\n  uint unsigned_shifted_result = (uint)shifted_result >> 27;\n  if (unsigned_shifted_result > 16) {\n    unsigned_shifted_result = 0;\n  }\n  return unsigned_shifted_result;\n}",
            "called": [
                "FUN_08004cce"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800492c",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_0800492c"
        },
        "FUN_0800480a": {
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "bit_index",
                "param_2": "array",
                "uVar1": "array_index",
                "PTR_": "array",
                "DAT_": "bit_mask"
            },
            "code": "void set_bit_in_array_0800480a(uint bit_index, uint* PTR_, int PTR__size) {\n  uint PTR__index = (bit_index << 0x18) >> 0x1c;\n  uint* target_element = &PTR_[PTR__index];\n  uint DAT_ = 1 << (bit_index & 0xf);\n  *target_element |= DAT_;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800480a",
            "calling": [
                "FUN_080057b4"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_0800480a"
        },
        "FUN_080015f8": {
            "renaming": {
                "FUN_080015f8": "calculate_result_080015f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "FUN_080015b2": "get_result1",
                "FUN_0800040c": "calculate_result3",
                "FUNC_08000194": "calculate_result4",
                "FUNC_080004f8": "calculate_result5",
                "FUN_0800074c": "calculate_result6",
                "DAT_0800169c": "result2_upper",
                "DAT_08001698": "result2_lower",
                "DAT_080016a0": "calculate_result4_input",
                "DAT_080016a4": "calculate_result5_input",
                "DAT_080016a8": "calculate_result6_input",
                "DAT_080016ac": "calculate_result7_input",
                "DAT_080016b0": "calculate_result8_input"
            },
            "code": "unsigned long long calculate_result_080015f8(unsigned int input1, int input2, unsigned int input3, unsigned int input4)\n{\n  uint32_t result1 = get_result1();\n  unsigned long long result2 = (unsigned long long)DAT_0800169c << 32 | DAT_08001698;\n  \n  if ((result1 & 0x10000) == 0) {\n    result1 = result1 >> 0x12;\n    unsigned long long result3 = calculate_result_080015f83(result1 & 0x1fff);\n    \n    if ((result1 & 0x2000) != 0) {\n      unsigned int result4 = ~result1 & 0x1fff;\n      result3 = calculate_result_080015f83(result4);\n      result2 = calculate_result_080015f84(result3, input4);\n    }\n    \n    result2 = calculate_result_080015f85(result2);\n    \n    if (input2 == 1) {\n      result2 = calculate_result_080015f86(result2);\n      result2 = calculate_result_080015f87(result2);\n      result2 = calculate_result_080015f88(result2);\n      result2 = calculate_result_080015f84(result2, DAT_080016b0);\n      return result2;\n    }\n  }\n  else {\n    result1 = result1 & 7;\n    if (result1 == 2) {\n      return (unsigned long long)DAT_0800168c << 32 | DAT_08001688;\n    }\n    if (result1 == 4) {\n      return (unsigned long long)DAT_08001694 << 32 | DAT_08001690;\n    }\n    if (result1 != 1) {\n      return 0;\n    }\n  }\n  return result2;\n}",
            "called": [
                "FUN_0800040c",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_0800074c",
                "FUN_080015b2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015f8",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "calculate_result_080015f8"
        },
        "FUN_08005c38": {
            "renaming": {
                "FUN_08005c38": "check_params_and_call_function_08005c38",
                "param_1": "num",
                "param_2": "val",
                "FUN_08005c1c": "call_function",
                "PTR_DAT_08005c60": "PTR_FUNCTION_ADDRESS"
            },
            "code": "void check_params_and_call_function_08005c38(int num, int val) {\n  if ((num == 1) && (val == 0xffff)) {\n    call_function(PTR_DAT_08005c60,0,0,0,0);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08005c1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c38",
            "calling": [],
            "imported": false,
            "current_name": "check_params_and_call_function_08005c38"
        },
        "FUN_08005f8c": {
            "renaming": {
                "FUN_08005f8c": "count_bits_set_08005f8c",
                "param_1": "num",
                "cVar1": "bit_count"
            },
            "code": "char count_bits_set_08005f8c(uint num)\n{\n  char bit_count = 0;\n  while (num != 1)\n  {\n    bit_count++;\n    num = num >> 1;\n  }\n  return bit_count;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005f8c",
            "calling": [
                "FUN_080060e4"
            ],
            "imported": false,
            "current_name": "count_bits_set_08005f8c"
        },
        "FUN_08006f5a": {
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "result",
                "param_2": "data",
                "param_3": "arg1",
                "param_4": "arg2",
                "sVar1": "data_value",
                "puVar2": "flag",
                "iVar3": "status"
            },
            "code": "void process_data_08006f5a(int *result, int data, undefined4 arg1, undefined4 arg2)\n{\n    short data_value = *(short *)(data + 0xe);\n    ushort *flag = (ushort *)(data + 0xc);\n    *flag &= 0xefff;\n    int status = process_value((int)data_value, arg1, arg2, arg2, arg2);\n    if (status == -1 && *PTR_DAT_08006fe0 != 0)\n    {\n        *result = *PTR_DAT_08006fe0;\n    }\n    else if ((int)((uint)*flag << 0x17) < 0)\n    {\n        FUN_08007048(result, (int)data_value, 0, 2);\n    }\n    return;\n}",
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006f5a",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08006f5a"
        },
        "FUN_08000b08": {
            "renaming": {
                "FUN_08000b08": "initialize_08000b08",
                "param_1": "count",
                "param_2": "value",
                "PTR_DAT_08000b9c": "array1",
                "PTR_DAT_08000b98": "array2",
                "PTR_DAT_08000b94": "array3",
                "PTR_DAT_08000b90": "array4",
                "PTR_DAT_08000b8c": "pointer1",
                "PTR_DAT_08000b88": "pointer2",
                "PTR_DAT_08000b84": "pointer3",
                "PTR_DAT_08000ba0": "pointer6",
                "PTR_DAT_08000ba4": "pointer7",
                "PTR_DAT_08000ba8": "pointer8",
                "PTR_DAT_08000bac": "pointer9",
                "PTR_DAT_08000bb0": "pointer10",
                "PTR_DAT_08000bb4": "pointer11",
                "PTR_DAT_08000bb8": "pointer5",
                "PTR_DAT_08000bc8": "pointer12",
                "PTR_DAT_08000bc4": "pointer13",
                "PTR_DAT_08000bc0": "pointer14",
                "PTR_DAT_08000bbc": "pointer15"
            },
            "code": "void initialize_08000b08(int count, int value)\n{\n    if ((count == 1) && (value == 0xffff)) {\n        initialize_08000b08_data_structure(PTR_DAT_08000b9c, PTR_DAT_08000b98, PTR_DAT_08000b94, PTR_DAT_08000b90,\n            *PTR_DAT_08000b8c, *(PTR_DAT_08000b8c + 4),\n            *PTR_DAT_08000b88, *(PTR_DAT_08000b88 + 4),\n            *PTR_DAT_08000b84, *(PTR_DAT_08000b84 + 4),\n            0);\n        initialize_08000b08_function1(PTR_DAT_08000bb8, *PTR_DAT_08000ba0, *PTR_DAT_08000ba4, *PTR_DAT_08000ba8,\n            *PTR_DAT_08000bac, *PTR_DAT_08000bb0, *PTR_DAT_08000bb4);\n        initialize_08000b08_function2(PTR_DAT_08000bc8, *PTR_DAT_08000bc4, *PTR_DAT_08000bc0, *PTR_DAT_08000bbc);\n        return;\n    }\n    return;\n}",
            "called": [
                "FUN_0800157c",
                "FUN_08001510",
                "FUN_08001b18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000b08",
            "calling": [],
            "imported": false,
            "current_name": "initialize_08000b08"
        },
        "FUN_08006cb4": {
            "renaming": {
                "FUN_08006cb4": "initialize_data_structure_08006cb4",
                "param_1": "data_structure",
                "uVar1": "result",
                "iVar2": "compare_data_structure",
                "bVar3": "is_data_structure_same"
            },
            "code": "void initialize_data_structure_08006cb4(int data_structure)\n{\n    if (*(int *)(data_structure + 0x18) == 0) {\n        *(int *)(data_structure + 0x48) = 0;\n        *(int *)(data_structure + 0x4c) = 0;\n        *(int *)(data_structure + 0x50) = 0;\n        int compare_data_structure = *(int *)PTR_PTR_DAT_08006d0c;\n        *(void **)(data_structure + 0x28) = PTR_LAB_08006c34_1_08006d10;\n        bool is_data_structure_same = data_structure == compare_data_structure;\n        if (is_data_structure_same) {\n            compare_data_structure = 1;\n        }\n        if (is_data_structure_same) {\n            *(int *)(data_structure + 0x18) = compare_data_structure;\n        }\n        int result = FUN_08006d14();\n        *(int *)(data_structure + 4) = result;\n        result = FUN_08006d14(data_structure);\n        *(int *)(data_structure + 8) = result;\n        result = FUN_08006d14(data_structure);\n        *(int *)(data_structure + 0xc) = result;\n        FUN_08006c40(*(int *)(data_structure + 4), 4, 0);\n        FUN_08006c40(*(int *)(data_structure + 8), 9, 1);\n        FUN_08006c40(*(int *)(data_structure + 0xc), 0x12, 2);\n        *(int *)(data_structure + 0x18) = 1;\n    }\n    return;\n}",
            "called": [
                "FUN_08006d14",
                "FUN_08006c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cb4",
            "calling": [
                "FUN_08006be0",
                "FUN_08006d14",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394"
            ],
            "imported": false,
            "current_name": "initialize_data_structure_08006cb4"
        },
        "FUN_08004c5e": {
            "renaming": {
                "FUN_08004c5e": "find_param_in_string_08004c5e",
                "param_1": "param_to_find",
                "param_2": "string",
                "*param_2": "*string",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "int find_param_in_string_08004c5e(int param_to_find, char *string)\n{\n  while (*string != -1) {\n    if (*string == param_to_find) {\n      return *(int *)(string + 4);\n    }\n    string += 12;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004c5e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c5e",
            "calling": [
                "FUN_08004c5e",
                "FUN_08004c78"
            ],
            "imported": false,
            "current_name": "find_param_in_string_08004c5e"
        },
        "FUN_08004b3c": {
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "data",
                "local_50": "result",
                "FUN_08004c78": "calculate_result",
                "PTR_DAT_08004b90": "DATA_PTR_08004b90",
                "FUN_08004948": "get_flag",
                "FUN_08004cce": "process_other_result",
                "FUN_080040b0": "process_result",
                "FUN_0800412c": "process_other_result",
                "FUN_08003ed8": "clean_up"
            },
            "code": "void process_data_08004b3c(int data){\n    int result = calculate_result(data, PTR_DAT_08004b90);\n    if (result != 0 && (result == 4 || result == 8 || result == 12 || result == 24)){\n        uint flag = get_flag(data, PTR_DAT_08004b90);\n        if ((flag & 0x100000) == 0){\n            process_result(result, flag);\n        }\n        else{\n            process_other_result(result, flag);\n        }\n        clean_up(result);\n    }\n    return;\n}",
            "called": [
                "FUN_08004948",
                "FUN_0800412c",
                "FUN_080040b0",
                "FUN_08004cce",
                "FUN_08003ed8",
                "FUN_08004c78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b3c",
            "calling": [
                "FUN_080057b4"
            ],
            "imported": false,
            "current_name": "process_data_08004b3c"
        },
        "FUN_08001550": {
            "renaming": {
                "FUN_08001550": "print_bytes_in_memory_08001550",
                "param_1": "memory",
                "param_2": "size",
                "param_3": "offset",
                "iVar1": "i",
                "FUN_08001310": "printf",
                "*(undefined *)(param_3 + iVar1)": "*byte_ptr",
                "**(code **)*param_1": "dereferenced_byte_ptr"
            },
            "code": "void print_bytes_in_memory_08001550(uint8_t *memory, uint size, int offset) {\n  uint8_t *byte_ptr;\n  uint i;\n  // Set the print format to hexadecimal with leading zeroes\n  printf(\"%#02x \", 0);\n  // Print each byte in memory\n  for (i = 0; i < size; i++) {\n    byte_ptr = memory + offset + i;\n    printf(\"%#02x \", *byte_ptr);\n  }\n  printf(\"\\n\");\n}",
            "called": [
                "FUN_08001310"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001550",
            "calling": [
                "FUN_08000bcc"
            ],
            "imported": false,
            "current_name": "print_bytes_in_memory_08001550"
        },
        "FUN_08000cd0": {
            "renaming": {
                "FUN_08000cd0": "FUNC_08000cd0"
            },
            "code": "\nvoid FUNC_08000cd0(void)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  int iVar7;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined4 uVar8;\n  undefined8 uVar9;\n  \n  uVar5 = FUN_080058e0();\n  if (*(uint *)PTR_DAT_08000f50 < uVar5) {\n    *(uint *)PTR_DAT_08000f50 = *(uint *)PTR_DAT_08000f50 + 1000;\n    uVar9 = FUN_080015f8(PTR_DAT_08000f74,0);\n    uVar8 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    *(undefined8 *)PTR_DAT_08000f6c = uVar9;\n    iVar7 = FUN_080009c8(uVar6,uVar8,DAT_08000f18,DAT_08000f1c);\n    if (((iVar7 != 0) || (iVar7 = FUN_080009c8(uVar6,uVar8,DAT_08000f20,DAT_08000f24), iVar7 != 0))\n       || (iVar7 = FUN_080009c8(uVar6,uVar8,DAT_08000f28,DAT_08000f2c), iVar7 != 0)) {\n      *PTR_DAT_08000f64 = 7;\n      *PTR_DAT_08000f58 = 0;\n    }\n  }\n  uVar5 = FUN_080058e0();\n  if (*(uint *)PTR_DAT_08000f54 < uVar5) {\n    *(uint *)PTR_DAT_08000f54 = *(uint *)PTR_DAT_08000f54 + 1000;\n    if (*PTR_DAT_08000f58 == '\\x01') {\n      uVar8 = *(undefined4 *)PTR_DAT_08000f5c;\n      uVar6 = FUN_08005890(uVar8);\n      uVar5 = count_leading_zeroes(uVar6);\n      FUN_08005848(uVar8,uVar5 >> 5);\n      iVar7 = *(int *)PTR_DAT_08000f78;\n      *(int *)PTR_DAT_08000f78 = iVar7 + 1;\n      puVar2 = PTR_DAT_08000f7c;\n      FUN_08005d82(PTR_DAT_08000f7c,iVar7 + 1,10);\n      puVar3 = PTR_DAT_08000f80;\n      FUN_08005c96(puVar2,PTR_DAT_08000f80);\n      FUN_08005f2c(puVar2,extraout_r1,*(undefined4 *)PTR_DAT_08000f84,\n                   *(undefined4 *)(PTR_DAT_08000f84 + 4),2);\n      FUN_08005c96(puVar2,puVar3);\n      FUN_08005f2c(puVar2,extraout_r1_00,*(undefined4 *)PTR_DAT_08000f6c,\n                   *(undefined4 *)(PTR_DAT_08000f6c + 4),2);\n      FUN_08005c96(puVar2,puVar3);\n      FUN_08005f40(puVar2,extraout_r1_01,*(undefined4 *)PTR_DAT_08000f88,\n                   *(undefined4 *)(PTR_DAT_08000f88 + 4),2);\n    }\n    else {\n      FUN_08005848(*(undefined4 *)PTR_DAT_08000f5c,1);\n    }\n    puVar2 = PTR_DAT_08000f60;\n    FUN_0800135a(PTR_DAT_08000f60);\n    puVar4 = PTR_DAT_08000f64;\n    FUN_08005c96(puVar2,*(undefined4 *)\n                         (PTR_PTR_s_Ready_08000f68 + (uint)(byte)*PTR_DAT_08000f64 * 4));\n    FUN_08001366(puVar2,0,1);\n    puVar3 = PTR_DAT_08000f60;\n    if (*puVar4 == '\\a') {\n      FUN_08005c96(puVar2,PTR_s_TC_Error__08000f8c);\n    }\n    else {\n      FUN_08005f2c(PTR_DAT_08000f60,2,*(undefined4 *)PTR_DAT_08000f6c,\n                   *(undefined4 *)(PTR_DAT_08000f6c + 4),2);\n      FUN_0800134e(puVar3,0);\n      FUN_08005c96(puVar3,PTR_DAT_08000f70);\n    }\n  }\n  if ((byte)*PTR_DAT_08000f64 < 8) {\n                    /* WARNING: Could not recover jumptable at 0x08000d5c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)(&switchD_08000d5c::switchdataD_08000d60 +\n              (&switchD_08000d5c::switchdataD_08000d60)[(byte)*PTR_DAT_08000f64]))();\n    return;\n  }\n  if ((*PTR_DAT_08001274 == '\\x01') && (*PTR_DAT_0800126c == '\\x01')) {\n    *PTR_DAT_0800126c = 0;\n    *PTR_DAT_08001258 = 0;\n  }\n  cVar1 = *PTR_DAT_08001278;\n  if (cVar1 == '\\x01') {\n    iVar7 = FUN_08005754(*(undefined4 *)PTR_DAT_08001280);\n    if (iVar7 == 0) {\n      iVar7 = FUN_080058e0();\n      if (0x32 < (uint)(iVar7 - *(int *)PTR_DAT_08001284)) {\n        *PTR_DAT_08001278 = 2;\n      }\n    }\n    else {\n      *PTR_DAT_08001278 = 0;\n    }\n  }\n  else if (cVar1 == '\\0') {\n    *PTR_DAT_08001274 = 0;\n    iVar7 = FUN_08005754(*(undefined4 *)PTR_DAT_08001280);\n    if (iVar7 == 0) {\n      uVar6 = FUN_080058e0();\n      *(undefined4 *)PTR_DAT_08001284 = uVar6;\n      *PTR_DAT_08001278 = 1;\n    }\n  }\n  else if ((cVar1 == '\\x02') && (iVar7 = FUN_08005754(*(undefined4 *)PTR_DAT_08001280), iVar7 != 0))\n  {\n    *PTR_DAT_08001274 = 1;\n    *PTR_DAT_08001278 = 0;\n  }\n  if (*PTR_DAT_0800126c == '\\x01') {\n    iVar7 = FUN_080058e0();\n    FUN_080016b4(PTR_DAT_08001250);\n    if (*(uint *)PTR_DAT_0800128c < (uint)(iVar7 - *(int *)PTR_DAT_08001288)) {\n      *(uint *)PTR_DAT_08001288 = *(int *)PTR_DAT_08001288 + *(uint *)PTR_DAT_0800128c;\n    }\n    uVar9 = FUN_0800040c(iVar7 - *(int *)PTR_DAT_08001288);\n    iVar7 = FUN_080009dc((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),*(undefined4 *)PTR_DAT_08001290,\n                         *(undefined4 *)(PTR_DAT_08001290 + 4));\n    if (iVar7 == 0) {\n      FUN_08005848(*(undefined4 *)PTR_DAT_0800127c,0);\n    }\n    else {\n      FUN_08005848(*(undefined4 *)PTR_DAT_0800127c,1);\n    }\n  }\n  else {\n    FUN_08005848(*(undefined4 *)PTR_DAT_0800127c,0);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005f2c",
                "FUN_08000a04",
                "FUN_08000a18",
                "FUN_08005f40",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_08005890",
                "FUN_08005d82",
                "FUN_08001960",
                "FUN_0800042c",
                "FUN_080058e0",
                "FUN_08005cd4",
                "FUN_08001a44",
                "FUN_08001918",
                "FUN_080018f8",
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080015f8",
                "FUN_08005754",
                "FUN_08001366",
                "FUN_080009dc",
                "FUN_080016b4",
                "FUN_08000194",
                "FUN_08005848"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cd0",
            "calling": [
                "FUN_08005f6c"
            ],
            "imported": false,
            "current_name": "FUNC_08000cd0"
        },
        "FUN_08001310": {
            "renaming": {
                "FUN_08001310": "process_data_08001310",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "FUN_08005848": "send_data",
                "param_3": "param_3",
                "param_4": "param_4",
                "PTR_": "data_ptr",
                "DAT_": "data_size"
            },
            "code": "void process_data_08001310(int PTR_, uint DAT_, undefined4 param_3, undefined4 param_4)\n{\n  send_data(*(undefined *)(PTR_ + 8), param_3, param_3, param_4, param_4);\n  if (*(char *)(PTR_ + 9) != -1) {\n    send_data(*(char *)(PTR_ + 9), 0);\n  }\n  if ((*(byte *)(PTR_ + 0x13) & 0x10) == 0) {\n    process_data_08001310_chunk(PTR_, DAT_ >> 4);\n    process_data_08001310_chunk(PTR_, DAT_);\n    return;\n  }\n  process_data_08001310_block(PTR_, DAT_);\n  return;\n}",
            "called": [
                "FUN_080012c0",
                "FUN_080012e8",
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001310",
            "calling": [
                "FUN_0800138e",
                "FUN_08001550",
                "FUN_0800134e",
                "FUN_08001366",
                "FUN_0800135a",
                "FUN_080013a4"
            ],
            "imported": false,
            "current_name": "process_data_08001310"
        },
        "FUN_080009a8": {
            "renaming": {
                "FUN_080009a8": "transfer_data_between_arrays_080009a8",
                "param_1": "source_array",
                "param_2": "destination_array",
                "param_3": "source_array_length",
                "param_4": "destination_array_length",
                "FUN_080009b8": "transfer_data"
            },
            "code": "void transfer_data_between_arrays_080009a8(int* source_array, int* destination_array, int source_array_length, int destination_array_length)\n{\n  transfer_data(destination_array, destination_array_length, source_array, source_array_length);\n  return;\n}",
            "called": [
                "FUN_080009b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a8",
            "calling": [
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "imported": false,
            "current_name": "transfer_data_between_arrays_080009a8"
        },
        "FUN_08004d90": {
            "renaming": {
                "FUN_08004d90": "update_permissions_08004d90",
                "*param_1": "*permission_value",
                "DAT_08004de4": "READ_ONLY_PERMISSION",
                "DAT_08004df0": "PERMISSIONS_BASE_ADDRESS",
                "DAT_08004df4": "READ_WRITE_PERMISSION_OFFSET",
                "DAT_08004df8": "EXECUTE_PERMISSION_OFFSET",
                "DAT_08004dfc": "READ_EXECUTE_PERMISSION_OFFSET",
                "0x40000000": "READ_WRITE_PERMISSION",
                "DAT_08004de8": "EXECUTE_PERMISSION",
                "DAT_08004dec": "READ_EXECUTE_PERMISSION",
                "uint": "unsigned int",
                "&": "*",
                "&0xfffff7ff": "READ_ONLY_PERMISSION_MASK",
                "&0xfffffffe": "READ_WRITE_PERMISSION_MASK",
                "&0xfffffffd": "EXECUTE_PERMISSION_MASK",
                "&0xfffffffb": "READ_EXECUTE_PERMISSION_MASK"
            },
            "code": "void update_permissions_08004d90(int *permission_value)\n{\n  if (*permission_value == DAT_08004de4) {\n    *(uint *)(DAT_08004df0 + DAT_08004df4) = *(uint *)(DAT_08004df0 + DAT_08004df4) & DAT_08004de4_MASK;\n  }\n  if (*permission_value == READ_WRITE_PERMISSION) {\n    *(uint *)(DAT_08004df0 + DAT_08004df4) = *(uint *)(DAT_08004df0 + DAT_08004df4) & READ_WRITE_PERMISSION_MASK;\n  }\n  if (*permission_value == DAT_08004de8) {\n    *(uint *)(DAT_08004df0 + DAT_08004df4) = *(uint *)(DAT_08004df0 + DAT_08004df4) & DAT_08004de8_MASK;\n  }\n  if (*permission_value == DAT_08004dec) {\n    *(uint *)(DAT_08004df0 + DAT_08004dfc) = *(uint *)(DAT_08004df0 + DAT_08004dfc) & DAT_08004dec_MASK;\n  }\n  return;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d90",
            "calling": [
                "FUN_08004b34"
            ],
            "imported": false,
            "current_name": "update_permissions_08004d90"
        },
        "FUN_08005ce8": {
            "renaming": {
                "FUN_08005ce8": "convert_to_base_08005ce8",
                "param_1": "output",
                "param_2": "number",
                "param_3": "base",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "buffer",
                "local_15": "reversed_buffer",
                "cVar1": "digit"
            },
            "code": "uint32_t convert_to_base_08005ce8(int *output, uint32_t number, uint32_t base)\n{\n  char digit;\n  uint32_t quotient;\n  uint32_t remainder;\n  char *buffer;\n  char reversed_buffer[9];\n  reversed_buffer[0] = '\\0';\n  if (base < 2) {\n    base = 10;\n  }\n  buffer = reversed_buffer + 8;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    buffer--;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit += '0';\n    }\n    else {\n      digit += '7';\n    }\n    *buffer = digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (buffer == reversed_buffer + 8) {\n    return 0;\n  }\n  else {\n    uint32_t buffer_length = strlen(buffer);\n    uint32_t result = (**(code **)(*output + 4))(output, buffer, buffer_length);\n    return result;\n  }\n}",
            "called": [
                "FUN_08000178"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005ce8",
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "imported": false,
            "current_name": "convert_to_base_08005ce8"
        },
        "FUN_0800316c": {
            "renaming": {
                "FUN_0800316c": "process_param_0800316c",
                "param_1": "param",
                "iVar1": "status",
                "puVar2": "p1",
                "puVar3": "p2",
                "do_nothing_0800316a": "do_nothing",
                "FUN_08004ef4": "process_param_2",
                "PTR_LAB_080035fc_1_080032ac": "PTR_LAB",
                "FUN_0800258c": "process_param_4",
                "DAT_080032b0": "DAT"
            },
            "code": "void process_param_0800316c(uint **param)\n{\n  int status;\n  uint *p1;\n  uint *p2;\n  char c = *(char *)((int)param + 0x3d);\n  if (c - 0x29 < 2) {\n    param[0xc] = (uint *)0x0;\n    *(char *)((int)param + 0x3d) = 0x28;\n  }\n  else {\n    if ((c != '`') && (((*param)[1] & 0x800) == 0)) {\n      *(char *)((int)param + 0x3d) = 0x20;\n    }\n    param[0xc] = (uint *)0x0;\n    *(char *)((int)param + 0x3e) = 0;\n  }\n  **param &= 0xfffff7ff;\n  p2 = *param;\n  if ((p2[1] & 0x800) == 0) {\n    if (c == '`') {\n      *(char *)((int)param + 0x3d) = 0x20;\n      param[0x10] = (uint *)0x0;\n      if ((p2[5] & 0x40) != 0) {\n        p1 = param[9];\n        param[9] = (uint *)((int)p1 + 1);\n        *(char *)p1 = (char)p2[4];\n      }\n      **param &= 0xfffffffe;\n      do_nothing(param);\n    }\n    else {\n      if ((p2[5] & 0x40) != 0) {\n        p1 = param[9];\n        param[9] = (uint *)((int)p1 + 1);\n        *(char *)p1 = (char)p2[4];\n      }\n      process_param_0800316c_2(param);\n    }\n  }\n  else {\n    p2[1] &= 0xfffff7ff;\n    if (*(char *)((int)param[0xd] + 0x21) == '\\x01') {\n      param[0xe][0xd] = (uint)PTR_LAB_080035fc_1_080032ac_080035fc_1_080032ac;\n      status = FUN_0800258c(param[0xe]);\n      if (status != 0) {\n        if (((*param)[5] & 0x40) != 0) {\n          p2 = param[9];\n          param[9] = (uint *)((int)p2 + 1);\n          *(char *)p2 = (char)(*param)[4];\n        }\n        **param &= 0xfffffffe;\n        *(char *)((int)param + 0x3d) = 0x20;\n        (*(code *)param[0xe][0xd])();\n      }\n    }\n    else {\n      param[0xd][0xd] = (uint)PTR_LAB_080035fc_1_080032ac_080035fc_1_080032ac;\n      status = FUN_0800258c(param[0xd]);\n      if (status != 0) {\n        **param &= 0xfffffffe;\n        *(char *)((int)param + 0x3d) = 0x20;\n        (*(code *)param[0xd][0xd])();\n      }\n    }\n  }\n  if ((c == '(') && (((uint)param[0x10] & 4) != 0)) {\n    param[0xb] = DAT_080032b0_080032b0;\n    param[0xc] = (uint *)0x0;\n    *(char *)((int)param + 0x3d) = 0x20;\n    *(char *)((int)param + 0x3e) = 0;\n    process_param_0800316c_3(param);\n  }\n  return;\n}",
            "called": [
                "FUN_08004ef4",
                "FUN_0800316a",
                "FUN_0800258c",
                "FUN_08004ec4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800316c",
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "imported": false,
            "current_name": "process_param_0800316c"
        },
        "FUN_08004828": {
            "renaming": {
                "FUN_08004828": "update_bit_08004828",
                "param_1": "bit_position",
                "param_2": "bit_array",
                "uVar1": "index",
                "PTR_": "array_ptr",
                "DAT_": "mask"
            },
            "code": "void update_bit_08004828(uint bit_position, int* bit_array) {\n  uint index = (bit_position << 0x18) >> 0x1c;\n  uint* PTR_ = bit_array + (index * 4);\n  uint DAT_ = ~(1 << (bit_position & 0xf));\n  *PTR_ = *PTR_ & DAT_;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004828",
            "calling": [
                "FUN_080057b4"
            ],
            "imported": false,
            "current_name": "update_bit_08004828"
        },
        "FUN_08003afa": {
            "renaming": {
                "FUN_08003afa": "process_input_08003afa",
                "param_1": "input_flags",
                "param_2": "input_value",
                "puVar1": "dat_pointer",
                "iVar2": "start_time",
                "iVar3": "time_elapsed",
                "uVar4": "input_value2",
                "DAT_08003c38": "dat_pointer2"
            },
            "code": "int process_input_08003afa(uint *input_flags, uint input_value) {\n  uint *dat_pointer = DAT_08003c34;\n  uint *DAT_08003c38 = DAT_08003c38;\n  uint input_value2;\n  int time_elapsed;\n  if ((*input_flags & 0x2) != 0) {\n    DAT_08003c38[1] = (DAT_08003c38[1] & 0xfffffff0) | input_flags[2];\n  }\n  if ((*input_flags & 0x1) != 0) {\n    input_value2 = input_flags[1];\n    if (input_value2 == 1) {\n      if ((*DAT_08003c38 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((input_value2 != 2) && ((*DAT_08003c38 & 2) == 0)) {\n      return 1;\n    }\n    DAT_08003c38[1] = input_value2 | (DAT_08003c38[1] & 0xfffffffc);\n    int start_time = FUN_08001cc4();\n    if (input_flags[1] == 1) {\n      while ((DAT_08003c38[1] & 0xc) != 4) {\n        time_elapsed = FUN_08001cc4();\n        if (5000 < (uint)(time_elapsed - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (input_flags[1] == 2) {\n      while ((DAT_08003c38[1] & 0xc) != 8) {\n        time_elapsed = FUN_08001cc4();\n        if (5000 < (uint)(time_elapsed - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((DAT_08003c38[1] & 0xc) != 0) {\n        time_elapsed = FUN_08001cc4();\n        if (5000 < (uint)(time_elapsed - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((input_value < (*dat_pointer & 0x7)) && (*dat_pointer = (*dat_pointer & 0xfffffff8) | input_value, input_value != (*dat_pointer & 0x7))) {\n    return 1;\n  }\n  if ((*input_flags & 0x4) != 0) {\n    DAT_08003c38[1] = (DAT_08003c38[1] & 0xfffff8ff) | input_flags[3];\n  }\n  if ((*input_flags & 0x8) != 0) {\n    DAT_08003c38[1] = (DAT_08003c38[1] & 0xffffc7ff) | (input_flags[4] << 3);\n  }\n  input_value2 = FUN_08003a68();\n  *(uint *)PTR_DAT_08003c40 = input_value2 >> PTR_DAT_08003c3c[(DAT_08003c38[1] << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}",
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003afa",
            "calling": [
                "FUN_08003ad4"
            ],
            "imported": false,
            "current_name": "process_input_08003afa"
        },
        "FUN_08004948": {
            "renaming": {
                "FUN_08004948": "determine_value_08004948",
                "param_1": "input1",
                "param_2": "unused",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "code": "uint8_t determine_value_08004948(uint32_t input1, uint32_t input3, uint32_t input4) {\n  int result = perform_calculation(input1, PTR_DATA, input3, input4, input4);\n  uint8_t shifted_result = (uint8_t)(result << 12) >> 27;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 12;\n}",
            "called": [
                "FUN_08004cce"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004948",
            "calling": [
                "FUN_08004b3c"
            ],
            "imported": false,
            "current_name": "determine_value_08004948"
        },
        "FUN_0800316a": {
            "renaming": {
                "FUN_0800316a": "do_nothing_0800316a"
            },
            "code": "\nvoid do_nothing_0800316a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800316a",
            "calling": [
                "FUN_0800316c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800316a"
        },
        "FUN_08005b24": {
            "renaming": {
                "FUN_08005b24": "set_value_at_offset_08005b24",
                "param_1": "base_address",
                "param_2": "offset",
                "uVar1": "value",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void set_value_at_offset_08005b24(int base_address, uint offset) {\n  undefined value;\n  code *jump_table;\n  if (offset < 0x3c) {\n    value = PTR_DAT_08005b38[offset];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(base_address + 0x12d) = value;\n  (*jump_table)();\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b24",
            "calling": [
                "FUN_08005b54"
            ],
            "imported": false,
            "current_name": "set_value_at_offset_08005b24"
        },
        "FUN_080049f0": {
            "renaming": {
                "FUN_080049f0": "check_status_of_param_080049f0",
                "param_1": "param_value",
                "DAT_08004a48": "current_var",
                "DAT_08004a40": "param_status_1",
                "DAT_08004a44": "param_status_2"
            },
            "code": "void check_status_of_param_080049f0(int *param_value){\n  int DAT_08004a48 = DAT_08004a48;\n  \n  if (*param_value != DAT_08004a40) {\n    if (*param_value == DAT_08004a44) {\n      *(uint *)(DAT_08004a48 + 0xc) |= 0x400;\n      *(uint *)(DAT_08004a48 + 0xc) &= 0xfffffbff;\n      *(uint *)(DAT_08004a48 + 0x18) &= 0xfffffbff;\n      *(uint *)(DAT_08004a48 + 0x18) &= 0xfffffbff;\n    }\n    return;\n  }\n  *(uint *)(DAT_08004a48 + 0xc) |= 0x200;\n  *(uint *)(DAT_08004a48 + 0xc) &= 0xfffffdff;\n  *(uint *)(DAT_08004a48 + 0x18) &= 0xfffffdff;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080049f0",
            "calling": [
                "FUN_0800224c"
            ],
            "imported": false,
            "current_name": "check_status_of_param_080049f0"
        },
        "FUN_08001e40": {
            "renaming": {
                "FUN_08001e40": "get_value_at_offset_0x4c_from_ptr_08001e40",
                "param_1": "ptr",
                "*param_1": "ptr",
                "undefined4": "int",
                "*(undefined4 *)(*param_1 + 0x4c)": "value_at_offset"
            },
            "code": "int get_value_at_offset_0x4c_from_ptr_08001e40(int *ptr) {\n    int offset = 0x4c;\n    int *ptr_to_offset = ptr + offset;\n    int value_at_offset = *ptr_to_offset;\n    return value_at_offset;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e40",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "get_value_at_offset_0x4c_from_ptr_08001e40"
        },
        "FUN_08003a68": {
            "renaming": {
                "FUN_08003a68": "calculate_result_08003a68",
                "uVar1": "result",
                "uVar2": "flags",
                "local_1c": "value",
                "abStack_18": "stack_array",
                "uStack_14": "stack_value_1",
                "uStack_10": "stack_value_2",
                "uStack_c": "stack_value_3"
            },
            "code": "uint calculate_result_08003a68(void)\n{\n  uint result;\n  uint flags;\n  undefined2 value;\n  byte stack_array[4];\n  undefined4 stack_value_1;\n  undefined4 stack_value_2;\n  undefined4 stack_value_3;\n  \n  stack_value_3 = *(undefined4 *)(PTR_DAT_08003ac4 + 8);\n  stack_value_2 = *(undefined4 *)(PTR_DAT_08003ac4 + 4);\n  stack_value_1 = *(undefined4 *)PTR_DAT_08003ac4;\n  value = *(undefined2 *)(PTR_DAT_08003ac4 + 0x10);\n  flags = *(uint *)(DAT_08003ac8 + 4);\n  result = DAT_08003ad0;\n  if ((flags & 0xc) == 8) {\n    if ((flags & 0x10000) == 0) {\n      result = DAT_08003acc * (uint)stack_array[(flags << 10) >> 0x1c];\n    }\n    else {\n      result = (DAT_08003ad0 * stack_array[(flags << 10) >> 0x1c]) / (uint)*(byte *)((int)&value - ((*(int *)(DAT_08003ac8 + 4) << 0xe) >> 0x1f));\n    }\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a68",
            "calling": [
                "FUN_08003afa"
            ],
            "imported": false,
            "current_name": "calculate_result_08003a68"
        },
        "FUN_080012a2": {
            "renaming": {
                "FUN_080012a2": "print_twice_080012a2",
                "param_1": "ptr_data",
                "*(undefined *)(param_1 + 10)": "*(ptr_data + index)",
                "FUN_08005848": "print_data"
            },
            "code": "void print_twice_080012a2(int* ptr_data)\n{\n    int index = 10;\n    int data = *(ptr_data + index);\n    print_data(data);\n    print_data(data);\n    print_data(data);\n}\n",
            "called": [
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080012a2",
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "imported": false,
            "current_name": "print_twice_080012a2"
        },
        "FUN_08004c78": {
            "renaming": {
                "FUN_08004c78": "check_param_validity_08004c78",
                "param_1": "param",
                "uVar1": "result",
                "FUN_08004c5e": "get_result"
            },
            "code": "int check_param_validity_08004c78(int param)\n{\n  int result;\n  if (param != -1) {\n    result = get_result();\n    return result;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004c5e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c78",
            "calling": [
                "FUN_08004b3c",
                "FUN_080053d4",
                "FUN_08005384",
                "FUN_08004a4c",
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "check_param_validity_08004c78"
        },
        "FUN_08001e48": {
            "renaming": {
                "FUN_08001e48": "set_data_08001e48",
                "param_1": "data_ptr",
                "param_2": "data_values",
                "uVar1": "result",
                "uVar2": "index",
                "iVar3": "data_ptr_value",
                "local_c": "local_counter"
            },
            "code": "int set_data_08001e48(int *data_ptr, uint *data_values)\n{\n    int result;\n    uint index;\n    int data_ptr_value;\n    int local_counter;\n    if (*(char *)(data_ptr + 9) == 1) {\n        result = 2;\n    }\n    else {\n        *(undefined *)(data_ptr + 9) = 1;\n        index = data_values[1];\n        if (index < 7) {\n            index = index * 5 - 5;\n            *(uint *)(*data_ptr + 52) = *data_values << (index & 0xff) | *(uint *)(*data_ptr + 52) & ~(0x1f << (index & 0xff));\n        }\n        else if (index < 13) {\n            index = index * 5 - 35;\n            *(uint *)(*data_ptr + 48) = *data_values << (index & 0xff) | *(uint *)(*data_ptr + 48) & ~(0x1f << (index & 0xff));\n        }\n        else {\n            index = index * 5 - 65;\n            *(uint *)(*data_ptr + 44) = *data_values << (index & 0xff) | *(uint *)(*data_ptr + 44) & ~(0x1f << (index & 0xff));\n        }\n        index = *data_values;\n        if (index < 10) {\n            *(uint *)(*data_ptr + 16) = data_values[2] << (index * 3 & 0xff) | *(uint *)(*data_ptr + 16) & ~(7 << (index * 3 & 0xff));\n        }\n        else {\n            index = index * 3 - 30;\n            *(uint *)(*data_ptr + 12) = data_values[2] << (index & 0xff) | *(uint *)(*data_ptr + 12) & ~(7 << (index & 0xff));\n        }\n        if (*data_values - 16 < 2) {\n            data_ptr_value = *data_ptr;\n            if (data_ptr_value == DAT_08001f74) {\n                if ((*(uint *)(data_ptr_value + 8) & 0x800000) == 0) {\n                    *(uint *)(data_ptr_value + 8) = *(uint *)(data_ptr_value + 8) | 0x800000;\n                    if (*data_values == 16) {\n                        for (local_counter = (uint)((ulonglong)DAT_08001f7c * (ulonglong)*(uint *)PTR_DAT_08001f78 >> 0x32) * 10; local_counter != 0; local_counter = local_counter + -1) {\n                        }\n                        result = 0;\n                    }\n                    else {\n                        result = 0;\n                    }\n                }\n                else {\n                    result = 0;\n                }\n            }\n            else {\n                data_ptr[10] = data_ptr[10] | 0x20;\n                result = 1;\n            }\n        }\n        else {\n            result = 0;\n        }\n        *(undefined *)(data_ptr + 9) = 0;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e48",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "set_data_08001e48"
        },
        "FUN_080009b8": {
            "renaming": {
                "FUN_080009b8": "run_function_and_return_input_080009b8",
                "param_1": "input_param",
                "FUN_0800092c": "run_pre_function"
            },
            "code": "undefined4 run_function_and_return_input_080009b8(undefined4 input_param)\n{\n  run_pre_function();\n  return input_param;\n}",
            "called": [
                "FUN_0800092c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b8",
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009a8",
                "FUN_080009dc"
            ],
            "imported": false,
            "current_name": "run_function_and_return_input_080009b8"
        },
        "FUN_08000aa8": {
            "renaming": {
                "FUN_08000aa8": "calculate_shifted_value_08000aa8",
                "param_1": "value",
                "param_2": "shift_amount",
                "iVar1": "intermediate_value",
                "uVar2": "shifted_value"
            },
            "code": "uint calculate_shifted_value_08000aa8(uint value, uint shift_amount) {\n  int intermediate_value;\n  uint shifted_value;\n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  intermediate_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < intermediate_value) {\n      return 0;\n    }\n    shifted_value = -(intermediate_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shifted_value) {\n      return (shift_amount << 0xb | 0x80000000 | value >> 0x15) >> (shifted_value & 0xff);\n    }\n  }\n  else if ((value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000aa8",
            "calling": [
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08000aa8"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_CY_false_or_ZR_true_08000a04",
                "in_ZR": "zero_register",
                "in_CY": "carry_flag"
            },
            "code": "bool is_CY_false_or_ZR_true_08000a04() {\n  undefined zero_register;\n  undefined carry_flag;\n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_register;\n}",
            "called": [
                "FUN_080009a8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "is_CY_false_or_ZR_true_08000a04"
        },
        "FUN_0800010c": {
            "renaming": {
                "FUN_0800010c": "check_and_return_0800010c",
                "*param_1": "*input_ptr",
                "*PTR_DAT_08000124": "*flag_ptr",
                "DAT_08000128": "count",
                "PTR_FUN_0800012c": "function_ptr"
            },
            "code": "int *check_and_return_0800010c(int *input_ptr) {\\n    if (*PTR_DAT_08000124 == \"\\0\") {\\n        if (DAT_08000128 != 0) {\\n            input_ptr = PTR_FUN_0800012c;\\n        }\\n        *PTR_DAT_08000124 = 1;\\n    }\\n    return input_ptr;\\n}",
            "called": [
                "FUN_08007328"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800010c",
            "calling": [],
            "imported": false,
            "current_name": "check_and_return_0800010c"
        },
        "FUN_08003f14": {
            "renaming": {
                "FUN_08003f14": "do_nothing_08003f14"
            },
            "code": "\nvoid do_nothing_08003f14(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f14",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "do_nothing_08003f14"
        },
        "FUN_08001cac": {
            "renaming": {
                "FUN_08001cac": "calculateSum_08001cac",
                "PTR_DAT_08001cbc": "dataPointer1",
                "PTR_DAT_08001cc0": "dataPointer2"
            },
            "code": "void calculateSum_08001cac() {\n    uint8_t byteValue = *PTR_DAT_08001cc0;\n    uint32_t* intPointer = (uint32_t*)PTR_DAT_08001cbc;\n    uint32_t sum = *intPointer + byteValue;\n    *intPointer = sum;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001cac",
            "calling": [
                "FUN_08004b9e"
            ],
            "imported": false,
            "current_name": "calculateSum_08001cac"
        },
        "FUN_08003f12": {
            "renaming": {
                "FUN_08003f12": "do_nothing_08003f12"
            },
            "code": "\nvoid do_nothing_08003f12(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f12",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "do_nothing_08003f12"
        },
        "FUN_08005a18": {
            "renaming": {
                "FUN_08005a18": "checkDataAndExecuteFunction_08005a18",
                "DAT_08005a3c": "dataAvailableFlag",
                "FUN_0800591e": "executeFunction",
                "PTR_DAT_08005a40": "dataPointer"
            },
            "code": "void checkDataAndExecuteFunction_08005a18(void)\n{\n  if (DAT_08005a3c != 0) {\n    executeFunction(PTR_DAT_08005a40);\n  }\n  return;\n}",
            "called": [
                "FUN_0800591e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a18",
            "calling": [
                "FUN_08005f6c"
            ],
            "imported": false,
            "current_name": "checkDataAndExecuteFunction_08005a18"
        },
        "FUN_08003f18": {
            "renaming": {
                "FUN_08003f18": "check_conditions_08003f18",
                "param_1": "param",
                "iVar1": "ptr",
                "ptr1": "value1",
                "ptr2": "value2",
                "do_nothing_08003f14": "do_nothing",
                "do_nothing_08003f12": "do_nothing2",
                "FUN_08004df8": "execute_func1",
                "FUN_08004e12": "execute_func3",
                "do_nothing_0800417a": "do_nothing4",
                "do_nothing_08003f16": "do_nothing5",
                "do_nothing_08004178": "do_nothing6"
            },
            "code": "void check_conditions_08003f18(int *param)\n{\n    int ptr = *param;\n    int ptr1 = *(uint *)(ptr + 0x10);\n    int ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 2) && (ptr2 & 2)) {\n        *(undefined4 *)(ptr + 0x10) = 0xfffffffd;\n        *(undefined *)(param + 7) = 1;\n        if ((*(uint *)(*param + 0x18) & 3) == 0) {\n            execute_func1();\n            do_nothing(param);\n        }\n        else {\n            do_nothing2();\n        }\n        *(undefined *)(param + 7) = 0;\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 4) && (ptr2 & 4)) {\n        *(undefined4 *)(ptr + 0x10) = 0xfffffffb;\n        *(undefined *)(param + 7) = 2;\n        if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n            execute_func1(param);\n            do_nothing(param);\n        }\n        else {\n            do_nothing2(param);\n        }\n        *(undefined *)(param + 7) = 0;\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 8) && (ptr2 & 8)) {\n        *(undefined4 *)(ptr + 0x10) = 0xfffffff7;\n        *(undefined *)(param + 7) = 4;\n        if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n            execute_func1(param);\n            do_nothing(param);\n        }\n        else {\n            do_nothing2(param);\n        }\n        *(undefined *)(param + 7) = 0;\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 0x10) && (ptr2 & 0x10)) {\n        *(undefined4 *)(ptr + 0x10) = 0xffffffef;\n        *(undefined *)(param + 7) = 8;\n        if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n            execute_func1(param);\n            do_nothing(param);\n        }\n        else {\n            do_nothing2(param);\n        }\n        *(undefined *)(param + 7) = 0;\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 1) && (ptr2 & 1)) {\n        *(undefined4 *)(ptr + 0x10) = 0xfffffffe;\n        execute_func3(param);\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 0x80) && (ptr2 & 0x80)) {\n        *(undefined4 *)(ptr + 0x10) = 0xffffff7f;\n        do_nothing4(param);\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 0x40) && (ptr2 & 0x40)) {\n        *(undefined4 *)(ptr + 0x10) = 0xffffffbf;\n        do_nothing5(param);\n    }\n    ptr1 = *(uint *)(ptr + 0x10);\n    ptr2 = *(uint *)(ptr + 0xc);\n    if ((ptr1 & 0x20) && (ptr2 & 0x20)) {\n        *(undefined4 *)(ptr + 0x10) = 0xffffffdf;\n        do_nothing6(param);\n    }\n}",
            "called": [
                "FUN_08003f12",
                "FUN_08004178",
                "FUN_08004df8",
                "FUN_08004e12",
                "FUN_08003f14",
                "FUN_08003f16",
                "FUN_0800417a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f18",
            "calling": [
                "FUN_08004e20"
            ],
            "imported": false,
            "current_name": "check_conditions_08003f18"
        },
        "FUN_08003f16": {
            "renaming": {
                "FUN_08003f16": "do_nothing_08003f16"
            },
            "code": "\nvoid do_nothing_08003f16(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f16",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "do_nothing_08003f16"
        },
        "FUN_0800591e": {
            "renaming": {
                "FUN_0800591e": "calculate_value_at_offset_0800591e",
                "param_1": "base_address",
                "*(short *)(param_1 + 0x134)": "value_at_offset_1",
                "*(short *)(param_1 + 0x136)": "value_at_offset_2",
                "result": "result"
            },
            "code": "ushort calculate_value_at_offset_0800591e(int base_address)\n{\n    ushort value_at_offset_1 = *(ushort *)(base_address + 0x134);\n    ushort value_at_offset_2 = *(ushort *)(base_address + 0x136);\n    ushort result = (value_at_offset_1 + 0x40) - value_at_offset_2;\n    return result & 0x3f;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800591e",
            "calling": [
                "FUN_08005a18"
            ],
            "imported": false,
            "current_name": "calculate_value_at_offset_0800591e"
        },
        "FUN_08002540": {
            "renaming": {
                "FUN_08002540": "set_bit_at_index_08002540",
                "param_1": "index",
                "DAT_0800255c": "data_start"
            },
            "code": "void set_bit_at_index_08002540(uint index) {\n  if (index >= 0) {\n    uint* data = (uint*)(DAT_0800255c + ((index >> 5) + 0x60) * 4);\n    uint bit_position = 1 << (index & 0x1f);\n    *data = bit_position;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002540",
            "calling": [],
            "imported": false,
            "current_name": "set_bit_at_index_08002540"
        },
        "FUN_08006344": {
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "input_length",
                "param_2": "input_byte",
                "param_3": "input_array",
                "iVar1": "array_length",
                "pbVar2": "current_ptr",
                "pbVar3": "array_start",
                "uVar4": "return_val",
                "PTR_DAT_080069d8": "ptr_d1",
                "PTR_DAT_080069dc": "ptr_d2",
                "PTR_DAT_080069e0": "ptr_d3"
            },
            "code": "uint process_input_08006344(int input_length, byte input_byte, byte **input_array) {\n  int array_length = (int)input_array[2] - 1;\n  input_array[2] = (byte *)array_length;\n  if (array_length >= -1 || ((int)input_array[6] <= array_length && input_byte != 10)) {\n    byte *current_ptr = *input_array;\n    *input_array = current_ptr + 1;\n    *current_ptr = input_byte;\n    return (uint)input_byte;\n  }\n  if (input_length != 0 && *(int *)(input_length + 0x18) == 0) {\n    handle_error();\n  }\n  if (input_array == (byte **)PTR_DAT_080069d8) {\n    input_array = *(byte ***)(input_length + 4);\n  }\n  else if (input_array == (byte **)PTR_DAT_080069dc) {\n    input_array = *(byte ***)(input_length + 8);\n  }\n  else if (input_array == (byte **)PTR_DAT_080069e0) {\n    input_array = *(byte ***)(input_length + 0xc);\n  }\n  input_array[2] = input_array[6];\n  byte *array_start = (byte *)(uint)*(ushort *)(input_array + 3);\n  int shift_amount = (int)array_start << 0x1c;\n  byte *array_end = input_array[4];\n  if ((shift_amount < 0 && array_end != (byte *)0x0) || (shift_amount = handle_array(input_length, input_array, shift_amount, array_end, current_ptr), shift_amount == 0)) {\n    uint return_val = (uint)input_byte;\n    int array_diff = (int)*input_array - (int)input_array[4];\n    if (array_diff < (int)input_array[5] || (array_diff = handle_array(input_length, input_array), array_diff == 0)) {\n      input_array[2] = (byte *)((int)input_array[2] - 1);\n      byte *current_ptr = *input_array;\n      *input_array = current_ptr + 1;\n      *current_ptr = input_byte;\n      if ((byte *)(array_diff + 1) != input_array[5]) {\n        if (-2147483648u < (uint)*(ushort *)(input_array + 3) << 0x1f) {\n          return return_val;\n        }\n        if (return_val != 10) {\n          return return_val;\n        }\n      }\n      array_diff = handle_array(input_length, input_array);\n      if (array_diff == 0) {\n        return return_val;\n      }\n    }\n  }\n  return 0xffffffff;\n}",
            "called": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006cb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006344",
            "calling": [
                "FUN_08006370"
            ],
            "imported": false,
            "current_name": "process_input_08006344"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "is_character_null_080009c8",
                "in_ZR": "input_character",
                "FUN_080009b8": "execute_function"
            },
            "code": "bool is_character_null_080009c8(void)\n{\n  char input_character;\n  execute_function();\n  return input_character != '\\0';\n}",
            "called": [
                "FUN_080009b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08000cd0"
            ],
            "imported": false,
            "current_name": "is_character_null_080009c8"
        },
        "FUN_08002db2": {
            "renaming": {
                "FUN_08002db2": "process_input_08002db2",
                "param_1": "input",
                "cVar1": "c",
                "puVar2": "ptr"
            },
            "code": "uint32_t process_input_08002db2(uint32_t **input)\n{\n    char c = *(char *)((int)input + 0x3d);\n    uint32_t *ptr = input[0xb];\n    if ((*(short *)(input + 10) == 0) && (c == '!')) {\n        if ((ptr == (uint32_t *)0x4) || ((ptr == (uint32_t *)0x8 || (ptr == (uint32_t *)0xffff0000)))) {\n            (*input)[1] = (*input)[1] & 0xfffff8ff;\n            **input = **input | 0x200;\n            input[0xc] = (uint32_t *)0x0;\n            *(undefined *)((int)input + 0x3d) = 0x20;\n            if (*(char *)((int)input + 0x3e) == '@') {\n                *(undefined *)((int)input + 0x3e) = 0;\n                do_nothing_08002db0();\n            }\n            else {\n                *(undefined *)((int)input + 0x3e) = 0;\n                do_nothing_08002c4e();\n            }\n        }\n        else {\n            (*input)[1] = (*input)[1] & 0xfffff8ff;\n            input[0xc] = (uint32_t *)0x11;\n            *(undefined *)((int)input + 0x3e) = 0;\n            *(undefined *)((int)input + 0x3d) = 0x20;\n            do_nothing_08002c4e();\n        }\n    }\n    else if ((c == '!') || ((*(char *)((int)input + 0x3e) == '@' && (c == '\"')))) {\n        if (*(short *)((int)input + 0x2a) == 0) {\n            (*input)[1] = (*input)[1] & 0xfffffbff;\n        }\n        else if (*(char *)((int)input + 0x3e) == '@') {\n            if (input[0x14] == (uint32_t *)0x0) {\n                if (input[0x13] == (uint32_t *)0x1) {\n                    (*input)[4] = (uint32_t)input[0x12] & 0xff;\n                    input[0x14] = (uint32_t *)((int)input[0x14] + 2);\n                }\n                else {\n                    (*input)[4] = (uint32_t)((int)input[0x12] << 0x10) >> 0x18;\n                    input[0x14] = (uint32_t *)((int)input[0x14] + 1);\n                }\n            }\n            else if (input[0x14] == (uint32_t *)0x1) {\n                (*input)[4] = (uint32_t)input[0x12] & 0xff;\n                input[0x14] = (uint32_t *)((int)input[0x14] + 1);\n            }\n            else if (input[0x14] == (uint32_t *)0x2) {\n                if (*(char *)((int)input + 0x3d) == '\"') {\n                    **input = **input | 0x100;\n                }\n                else if (*(char *)((int)input + 0x3d) == '!') {\n                    ptr = input[9];\n                    input[9] = (uint32_t *)((int)ptr + 1);\n                    (*input)[4] = (uint32_t)*(uint8_t *)ptr;\n                    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n                }\n            }\n        }\n        else {\n            ptr = input[9];\n            input[9] = (uint32_t *)((int)ptr + 1);\n            (*input)[4] = (uint32_t)*(uint8_t *)ptr;\n            *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n        }\n    }\n    return 0;\n}",
            "called": [
                "FUN_08002c4e",
                "FUN_08002db0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002db2",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_input_08002db2"
        },
        "FUN_08001cc4": {
            "renaming": {
                "FUN_08001cc4": "get_value_from_pointer_08001cc4",
                "PTR_DAT_08001ccc": "pointer_to_value"
            },
            "code": "int get_value_from_pointer_08001cc4() {\n  int* PTR_DAT_08001ccc = (int*) PTR_DAT_08001ccc;\n  int value = *PTR_DAT_08001ccc;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001cc4",
            "calling": [
                "FUN_080043b4",
                "FUN_080053d4",
                "FUN_08001cd0",
                "FUN_08003688",
                "FUN_08003afa",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08004478",
                "FUN_08002384",
                "FUN_08003c90",
                "FUN_08001f84"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08001cc4"
        },
        "FUN_08002db0": {
            "renaming": {
                "FUN_08002db0": "do_nothing_08002db0"
            },
            "code": "\nvoid do_nothing_08002db0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002db0",
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "imported": false,
            "current_name": "do_nothing_08002db0"
        },
        "FUN_08003ea0": {
            "renaming": {
                "FUN_08003ea0": "check_and_set_flag_08003ea0",
                "param_1": "flag_ptr",
                "**param_1": "flag",
                "(*param_1)[1]": "second_flag",
                "FUN_08004d18": "set_flag_value"
            },
            "code": "void check_and_set_flag_08003ea0(uint **flag_ptr)\n{\n    uint flag = **flag_ptr;\n    uint second_flag = (*flag_ptr)[1];\n    if ((flag & 2) && (second_flag & 2))\n    {\n        set_flag_value();\n        (*flag_ptr)[1] = 0xfffffffd;\n    }\n    *(uint *)(DAT_08003ed4 + 0x14) = 0x20000;\n    *(uchar *)((int)flag_ptr + 0x11) = 1;\n    return;\n}",
            "called": [
                "FUN_08004d18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ea0",
            "calling": [],
            "imported": false,
            "current_name": "check_and_set_flag_08003ea0"
        },
        "FUN_0800306c": {
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "data",
                "puVar1": "ptr1"
            },
            "code": "uint32_t process_data_0800306c(uint32_t **data)\n{\n    uint32_t *ptr1;\n    ptr1 = data[0xb];\n    if (*(int16_t *)((int)data + 0x2a) == 3)\n    {\n        if (((ptr1 == (uint32_t *)0x4) || (ptr1 == (uint32_t *)0x8)) || (ptr1 == (uint32_t *)0xffff0000))\n        {\n            **data = **data & 0xfffffbff;\n        }\n        ptr1 = data[9];\n        data[9] = (uint32_t *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)(*data)[4];\n        *(int16_t *)((int)data + 0x2a) = *(int16_t *)((int)data + 0x2a) - 1;\n    }\n    else if (*(int16_t *)((int)data + 0x2a) == 2)\n    {\n        if (((ptr1 == (uint32_t *)0x4) || (ptr1 == (uint32_t *)0x8)) || (ptr1 == (uint32_t *)0xffff0000))\n        {\n            (*data)[1] = (*data)[1] & 0xfffffcff;\n            **data = **data | 0x200;\n        }\n        else\n        {\n            if (ptr1 == (uint32_t *)0x2)\n            {\n                **data = **data | 0x400;\n            }\n            else\n            {\n                **data = **data & 0xfffffbff;\n            }\n            (*data)[1] = (*data)[1] & 0xfffffcff;\n        }\n        ptr1 = data[9];\n        data[9] = (uint32_t *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)(*data)[4];\n        *(int16_t *)((int)data + 0x2a) = *(int16_t *)((int)data + 0x2a) - 1;\n        ptr1 = data[9];\n        data[9] = (uint32_t *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)(*data)[4];\n        *(int16_t *)((int)data + 0x2a) = *(int16_t *)((int)data + 0x2a) - 1;\n        *(uint8_t *)((int)data + 0x3d) = 0x20;\n        data[0xc] = (uint32_t *)0x0;\n        if (*(char *)((int)data + 0x3e) == '@')\n        {\n            *(uint8_t *)((int)data + 0x3e) = 0;\n            do_nothing_08002f9a();\n        }\n        else\n        {\n            *(uint8_t *)((int)data + 0x3e) = 0;\n            do_nothing_08002c50();\n        }\n    }\n    else\n    {\n        ptr1 = data[9];\n        data[9] = (uint32_t *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)(*data)[4];\n        *(int16_t *)((int)data + 0x2a) = *(int16_t *)((int)data + 0x2a) - 1;\n    }\n    return 0;\n}",
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800306c",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_data_0800306c"
        },
        "FUN_0800548c": {
            "renaming": {
                "FUN_0800548c": "is_flagged_as_valid_0800548c",
                "param_1": "record_index",
                "uVar1": "record_value",
                "PTR_DAT_080054ac": "record_ptr"
            },
            "code": "bool is_flagged_as_valid_0800548c(int record_index) {\n    uint32_t* PTR_DAT_080054ac = PTR_DAT_080054ac + (*(uint8_t*)(record_index + 0x44) * 4);\n    uint32_t record_value = FUN_080047e8(*PTR_DAT_080054ac);\n    bool is_valid = (record_value & 0x22) == 0x22;\n    return is_valid;\n}",
            "called": [
                "FUN_080047e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800548c",
            "calling": [
                "FUN_080054d4",
                "FUN_08005510"
            ],
            "imported": false,
            "current_name": "is_flagged_as_valid_0800548c"
        },
        "FUN_08004848": {
            "renaming": {
                "FUN_08004848": "get_data_by_index_08004848",
                "param_1": "index",
                "DAT_08004870": "data_0",
                "DAT_08004880": "data_1",
                "DAT_08004874": "data_2",
                "DAT_08004878": "data_3",
                "DAT_0800487c": "data_4"
            },
            "code": "undefined4 get_data_by_index_08004848(int index) {\n  switch(index) {\n    case 0:\n      return DAT_08004870;\n    case 1:\n      return DAT_08004880;\n    case 2:\n      return DAT_08004874;\n    case 3:\n      return DAT_08004878;\n    case 4:\n      return DAT_0800487c;\n    default:\n      return 0;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004848",
            "calling": [
                "FUN_08005890",
                "FUN_08005848"
            ],
            "imported": false,
            "current_name": "get_data_by_index_08004848"
        },
        "FUN_08005d82": {
            "renaming": {
                "FUN_08005d82": "execute_function_08005d82",
                "FUN_08005d42": "call_helper_function"
            },
            "code": "void execute_function_08005d82(void)\n{\n  call_helper_function();\n  return;\n}",
            "called": [
                "FUN_08005d42"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d82",
            "calling": [
                "FUN_08000cd0",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "execute_function_08005d82"
        },
        "FUN_08006f92": {
            "renaming": {
                "FUN_08006f92": "process_data_08006f92",
                "param_1": "data",
                "param_2": "data_info",
                "iVar1": "result",
                "uVar2": "flags",
                "bVar3": "is_error"
            },
            "code": "void process_data_08006f92(undefined4 data, int data_info)\n{\n    int result;\n    ushort flags;\n    bool is_error;\n    \n    result = get_data_info(data, (int)*(short *)(data_info + 0xe));\n    is_error = result == -1;\n    \n    if (is_error) {\n        flags = *(ushort *)(data_info + 0xc) & 0xefff;\n    }\n    else {\n        *(int *)(data_info + 0x54) = result;\n        flags = *(ushort *)(data_info + 0xc) | 0x1000;\n    }\n    \n    *(ushort *)(data_info + 0xc) = flags;\n}",
            "called": [
                "FUN_08007048"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006f92",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08006f92"
        },
        "FUN_080012c0": {
            "renaming": {
                "FUN_080012c0": "process_bits_and_call_function_080012c0",
                "param_1": "data_address",
                "param_2": "bit_data",
                "uVar1": "bit_index",
                "FUN_08005848": "call_function_with_bit_and_data",
                "FUN_080012a2": "call_cleanup_function"
            },
            "code": "void process_bits_and_call_function_080012c0(int data_address,int bit_data)\n{\n  uint32_t bit_index;\n  \n  for (bit_index = 0; bit_index < 4; bit_index++) {\n    call_function_with_bit_and_data(*(uint8_t *)(data_address + bit_index + 0xb),bit_data >> (bit_index & 0xff) & 1);\n  }\n  call_cleanup_function(data_address);\n  return;\n}",
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080012c0",
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "imported": false,
            "current_name": "process_bits_and_call_function_080012c0"
        },
        "FUN_08001f80": {
            "renaming": {
                "FUN_08001f80": "get_value_at_offset_08001f80",
                "param_1": "base_address",
                "*(undefined4 *)(param_1 + 0x28)": "*(int *)(base_address + offset)"
            },
            "code": "int get_value_at_offset_08001f80(int base_address, int offset) {\n    return *(int *)(base_address + offset);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001f80",
            "calling": [
                "FUN_08004a4c"
            ],
            "imported": false,
            "current_name": "get_value_at_offset_08001f80"
        },
        "FUN_08001f84": {
            "renaming": {
                "FUN_08001f84": "set_flag_if_not_set_08001f84",
                "param_1": "data",
                "param_2": "flag",
                "iVar1": "new_result",
                "iVar3": "data_ptr",
                "local_14": "i",
                "DATA_CONSTANT": "DAT_08002000",
                "DATA_PTR": "PTR_DAT_08001ffc"
            },
            "code": "int set_flag_if_not_set_08001f84(int *data, int flag){\n    int data_ptr = *data;\n    if ((*(uint *)(data_ptr + 8) & 1) == 0) {\n        *(uint *)(data_ptr + 8) = *(uint *)(data_ptr + 8) | 1;\n        for (uint i = 0; i < (uint)((ulonglong)DATA_CONSTANT * (ulonglong)*(uint *)DATA_PTR >> 0x32); i++){\n        }\n        int result = call_function(data, flag, (int)((ulonglong)DATA_CONSTANT * (ulonglong)*(uint *)DATA_PTR));\n        do {\n            if ((*(uint *)(*data + 8) & 1) != 0) {\n                return 0;\n            }\n            int new_result = call_function(data, flag, (int)((ulonglong)DATA_CONSTANT * (ulonglong)*(uint *)DATA_PTR));\n        } while ((uint)(new_result - result) < 3);\n        data[10] |= 0x10;\n        data[0xb] |= 1;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
            "called": [
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001f84",
            "calling": [
                "FUN_08002004",
                "FUN_08002384"
            ],
            "imported": false,
            "current_name": "set_flag_if_not_set_08001f84"
        },
        "FUN_08000bcc": {
            "renaming": {
                "FUN_08000bcc": "runReflowOvenProcess_08000bcc",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "uVar4": "processTime"
            },
            "code": "void runReflowOvenProcess_08000bcc(void)\n{\n    undefined *ptr1;\n    undefined *ptr2;\n    undefined *ptr3;\n    undefined4 uVar4;\n    \n    ptr1 = PTR_DAT_08000c90;\n    startProcess(*(undefined4 *)PTR_DAT_08000c90, 0);\n    setProcessState(*(undefined4 *)ptr1, 1);\n    ptr1 = PTR_DAT_08000c94;\n    startProcess(*(undefined4 *)PTR_DAT_08000c94, 0);\n    setProcessState(*(undefined4 *)ptr1, 1);\n    ptr2 = PTR_DAT_08000c98;\n    startProcess(*(undefined4 *)PTR_DAT_08000c98, 0);\n    setProcessState(*(undefined4 *)ptr2, 1);\n    startProcess(*(undefined4 *)ptr1, 1);\n    ptr3 = PTR_DAT_08000c9c;\n    setTemperature(PTR_DAT_08000c9c, 8, 2, 0);\n    setTemperatureRamp(ptr3, 0, PTR_DAT_08000ca0);\n    setProcessState(ptr3, 0);\n    setProcessProfile(ptr3, PTR_s_Reflow_08000ca4);\n    setProcessState(ptr3, 1);\n    setProcessProfile(ptr3, PTR_s_Oven_1_2_08000ca8);\n    startProcess(*(undefined4 *)ptr1, 0);\n    wait(0x9c4);\n    setProcessState(ptr3, 0);\n    setProcessProfile(PTR_DAT_08000cac, 0xe100, 6);\n    setProcessState(*(undefined4 *)ptr2, 1);\n    *(undefined4 *)PTR_DAT_08000cb0 = 2000;\n    uVar4 = getProcessTime();\n    *(undefined4 *)PTR_DAT_08000cb4 = uVar4;\n    uVar4 = getProcessTime();\n    *(undefined4 *)PTR_DAT_08000cb8 = uVar4;\n    endProcess(0);\n    return;\n}",
            "called": [
                "FUN_08005c96",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_080058e8",
                "FUN_080057b4",
                "FUN_080058e0",
                "FUN_08001366",
                "FUN_08005848",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08000aec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000bcc",
            "calling": [
                "FUN_08005f6c"
            ],
            "imported": false,
            "current_name": "runReflowOvenProcess_08000bcc"
        },
        "FUN_0800281e": {
            "renaming": {
                "FUN_0800281e": "set_value_at_address_0800281e",
                "param_1": "address",
                "param_2": "value",
                "param_3": "shift",
                "*(int *)(param_1 + 0x10)": "value_at_address"
            },
            "code": "void set_value_at_address_0800281e(int address, int value, int shift) {\n    if (shift == 0) {\n        *(int *)(address + 0x10) = value << 0x10;\n    } else {\n        *(int *)(address + 0x10) = value;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800281e",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "set_value_at_address_0800281e"
        },
        "FUN_08006198": {
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "puVar1": "function_list_2",
                "iVar2": "num_functions_2",
                "iVar3": "i",
                "function_list_1": "function_list_1",
                "PTR_DAT_080061d0": "PTR_DAT_080061d0",
                "PTR_DAT_080061d4": "PTR_DAT_080061d4",
                "do_nothing_08007328": "do_nothing_08007328",
                "function_list_2": "function_list_2",
                "PTR_DAT_080061d8": "PTR_DAT_080061d8",
                "PTR_DAT_080061dc": "PTR_DAT_080061dc"
            },
            "code": "void execute_functions_08006198(void)\n{\n  void **function_list_1 = PTR_DAT_080061d0;\n  int num_functions_1 = (int)PTR_DAT_080061d4 - (int)PTR_DAT_080061d0;\n  for (int i = 0; i < num_functions_1 >> 2; i++) {\n    (**(void (**)(void))(function_list_1 + i * 4))();\n  }\n  do_nothing_08007328();\n  void **function_list_2 = PTR_DAT_080061d8;\n  int num_functions_2 = (int)PTR_DAT_080061dc - (int)PTR_DAT_080061d8;\n  for (int i = 0; i < num_functions_2 >> 2; i++) {\n    (**(void (**)(void))(function_list_2 + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006198",
            "calling": [
                "FUN_08001be8"
            ],
            "imported": false,
            "current_name": "execute_functions_08006198"
        },
        "FUN_08007048": {
            "renaming": {
                "FUN_08007048": "process_data_08007048",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "puVar1": "ptr_data",
                "iVar2": "result"
            },
            "code": "void process_data_08007048(int *output, undefined4 input1, undefined4 input2, undefined4 input3)\n{\n  undefined *ptr_data = PTR_DAT_08007068;\n  *(undefined4 *)PTR_DAT_08007068 = 0;\n  int result = calculate_data(input1, input2, input3, input3, input3);\n  if ((result == -1) && (*(int *)ptr_data != 0)) {\n    *output = *(int *)ptr_data;\n  }\n  return;\n}",
            "called": [
                "FUN_08005728"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007048",
            "calling": [
                "FUN_08006f92",
                "FUN_08006f5a"
            ],
            "imported": false,
            "current_name": "process_data_08007048"
        },
        "FUN_08003c50": {
            "renaming": {
                "FUN_08003c50": "calculate_shifted_value_08003c50",
                "uVar1": "shifted_value",
                "FUN_08003c44": "get_initial_value",
                "PTR_DAT_08003c6c": "pointer_array",
                "DAT_08003c68": "data_array"
            },
            "code": "unsigned int calculate_shifted_value_08003c50(void)\n{\n  unsigned int shifted_value;\n  shifted_value = get_initial_value();\n  unsigned int index = (unsigned int)(*(int *)(DAT_08003c68 + 4) << 0x15) >> 0x1d;\n  shifted_value = shifted_value >> PTR_DAT_08003c6c[index];\n  return shifted_value;\n}",
            "called": [
                "FUN_08003c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c50",
            "calling": [
                "FUN_08004204"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08003c50"
        },
        "FUN_080065c0": {
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "data",
                "param_2": "min_size",
                "param_3": "out_size",
                "param_4": "flags",
                "param_5": "callback",
                "iVar1": "status",
                "uVar2": "max_size",
                "uVar3": "size",
                "bVar4": "is_valid",
                "i": "i",
                "remaining_size": "remaining_size",
                "diff": "diff",
                "*param_3": "*out_size",
                "*param_2": "*min_size"
            },
            "code": "uint32_t process_data_080065c0(uint32_t data, uint32_t* min_size, uint32_t* out_size, uint32_t flags, code* callback) {\\n  int status = 0;\\n  uint32_t max_size = param_2[4];\\n  if ((int)param_2[4] < (int)param_2[2]) {\\n    max_size = param_2[2];\\n  }\\n  *out_size = max_size;\\n  if (*(char *)((int)param_2 + 0x43) != \"\\0\") {\\n    *out_size = max_size + 1;\\n  }\\n  if ((int)(data << 0x1a) < 0) {\\n    *out_size = *out_size + 2;\\n  }\\n  uint32_t i = data & 6;\\n  if (i == 0) {\\n    for (; (int)i < (int)(param_2[3] - *out_size); i++) {\\n      status = (*callback)(param_1, flags, (int)param_2 + 0x19, 1);\\n      if (status == -1) {\\n        return 0xffffffff;\\n      }\\n    }\\n  }\\n  uint32_t size = (uint32_t)*(byte *)((int)param_2 + 0x43);\\n  if (size != 0) {\\n    size = 1;\\n  }\\n  uint32_t offset = size;\\n  if ((int)(data << 0x1a) < 0) {\\n    *(undefined *)((int)param_2 + size + 0x43) = 0x30;\\n    offset = size + 2;\\n    *(undefined *)((int)param_2 + size + 0x44) = *(undefined *)((int)param_2 + 0x45);\\n  }\\n  status = (*callback)(param_1, flags, (int)param_2 + 0x43, offset);\\n  if (status != -1) {\\n    uint32_t remaining_size = param_2[3];\\n    bool is_valid = (data & 6) != 4;\\n    if (is_valid) {\\n      remaining_size = 0;\\n    }\\n    uint32_t diff = 0;\\n    if (!is_valid) {\\n      remaining_size = remaining_size - *out_size;\\n      remaining_size = remaining_size & ~((int)remaining_size >> 0x1f);\\n    }\\n    if ((int)param_2[4] < (int)param_2[2]) {\\n      diff = remaining_size + (param_2[2] - param_2[4]);\\n    }\\n    while (diff != size) {\\n      status = (*callback)(param_1, flags, (int)param_2 + 0x1a, 1);\\n      if (status == -1) {\\n        return 0xffffffff;\\n      }\\n      diff++;\\n    }\\n    return 0;\\n  }\\n  return 0xffffffff;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080065c0",
            "calling": [
                "FUN_080066b0"
            ],
            "imported": false,
            "current_name": "process_data_080065c0"
        },
        "FUN_080054d4": {
            "renaming": {
                "FUN_080054d4": "get_value_from_param_080054d4",
                "param_1": "param_value",
                "param_2": "output_buffer",
                "param_3": "buffer_size",
                "param_4": "default_value",
                "iVar1": "value",
                "FUN_0800548c": "get_value_from_function"
            },
            "code": "int get_value_from_param_080054d4(int param_value, char* output_buffer, int buffer_size, int default_value)\\n\\\n    {\\n\\\n        if (param_value == 0)\\n\\\n        {\\n\\\n            return -1;\\n\\\n        }\\n\\\n        int value = get_value_from_function();\\n\\\n        if (value == 0)\\n\\\n        {\\n\\\n            *output_buffer = *(char *)(param_value + 0x45);\\n\\\n            set_value_in_function(*(int *)(PTR_DAT_0800550c + (uint)*(unsigned char *)(param_value + 0x44) * 4),\\n\\\n                                 param_value + 0x45,1,PTR_DAT_0800550c,default_value);\\n\\\n            return 0;\\n\\\n        }\\n\\\n        return -1;\\n\\\n    }",
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080054d4",
            "calling": [
                "FUN_0800598a"
            ],
            "imported": false,
            "current_name": "get_value_from_param_080054d4"
        },
        "FUN_08004d40": {
            "renaming": {
                "FUN_08004d40": "infiniteLoop_08004d40"
            },
            "code": "void infiniteLoop_08004d40(void)\n{\n  while( true )\n  {\n    // Do nothing\n  }\n}",
            "called": [
                "FUN_08004d40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d40",
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "imported": false,
            "current_name": "infiniteLoop_08004d40"
        },
        "FUN_08004d44": {
            "renaming": {
                "FUN_08004d44": "set_bit_and_clear_mask_08004d44",
                "puVar1": "ptr",
                "*DAT_08004d84": "*data_ptr",
                "DAT_08004d88": "mask"
            },
            "code": "void set_bit_and_clear_mask_08004d44(uint *DAT_08004d84)\n{\n    uint *ptr = data_ptr;\n    *ptr |= 1;\n    ptr[1] &= DAT_08004d88;\n    *ptr &= 0xfef6ffff;\n    *ptr &= 0xfffbffff;\n    ptr[1] &= 0xff80ffff;\n    ptr[2] = 0x9f0000;\n    *(uint *)(DAT_08004d8c + 8) = 0x8000000;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d44",
            "calling": [
                "FUN_08001be8"
            ],
            "imported": false,
            "current_name": "set_bit_and_clear_mask_08004d44"
        },
        "FUN_0800282c": {
            "renaming": {
                "FUN_0800282c": "update_param_0800282c",
                "param_1": "new_param",
                "DAT_08002844": "data_address",
                "PTR_080060e4": "execute_function",
                "*PTR_080060e4": "*execute_function",
                "*(uint *)(DAT_08002844 + 0x14)": "*data_ptr",
                "data_ptr": "data_ptr"
            },
            "code": "void update_param_0800282c(uint new_param) {\n  uint* data_ptr = (uint *)(DAT_08002844 + 0x14);\n  if ((*(uint *)(DAT_08002844 + 0x14) & new_param) != 0) {\n    *(uint *)(DAT_08002844 + 0x14) = new_param;\n    PTR_080060e4();\n  }\n  return;\n}",
            "called": [
                "FUN_080060e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800282c",
            "calling": [],
            "imported": false,
            "current_name": "update_param_0800282c"
        },
        "FUN_080015b2": {
            "renaming": {
                "FUN_080015b2": "binary_flag_set_080015b2",
                "param_1": "input_array",
                "uVar2": "bit_index",
                "uVar3": "flag",
                "FUN_08005848": "set_bit",
                "param_1[1]": "input_array[1]",
                "param_1[2]": "input_array[2]",
                "FUN_08005890": "check_bit",
                "iVar1": "bit_value"
            },
            "code": "uint binary_flag_set_080015b2(int *input_array)\n{\n  int bit_index;\n  uint flag = 0;\n  set_bit(input_array[1],0);\n  for (bit_index = 31; bit_index >= 0; bit_index--) {\n    set_bit(input_array[2],1);\n    int bit_value = check_bit(*input_array);\n    if (bit_value != 0) {\n      flag = flag | 1 << (bit_index & 0xff);\n    }\n    set_bit(input_array[2],0);\n  }\n  set_bit(input_array[1],1);\n  return flag;\n}",
            "called": [
                "FUN_08005890",
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015b2",
            "calling": [
                "FUN_080015f8"
            ],
            "imported": false,
            "current_name": "binary_flag_set_080015b2"
        },
        "FUN_0800040c": {
            "renaming": {
                "FUN_0800040c": "calculate_shifted_value_0800040c",
                "param_1": "input",
                "uVar1": "output_high",
                "uVar2": "shift_amount",
                "iVar3": "leading_zeroes",
                "uVar4": "shift_amount_plus_21",
                "in_r12": "mask",
                "bVar5": "is_shift_amount_negative",
                "bVar6": "is_shift_amount_zero",
                "bVar7": "is_shift_amount_overflowed",
                "LAB_08000318": "shift_input",
                "CONCAT44": "combine_64_bit",
                "SCARRY4": "signed_int_overflow",
                "SBORROW4": "signed_int_underflow"
            },
            "code": "unsigned long long calculate_shifted_value_0800040c(uint input)\n{\n  uint leading_zeroes = count_leading_zeroes(input);\n  uint shift_amount = leading_zeroes + 21;\n  bool is_shift_amount_negative = shift_amount < 32;\n  uint shifted_input = input << (shift_amount & 0xff);\n  if (!is_shift_amount_negative) {\n    uint mask = 0xffffffff << (32 - shift_amount);\n    shifted_input |= 0U >> (shift_amount - 32 & 0xff);\n    shifted_input &= mask;\n  }\n  if (shift_amount >= 1075) {\n    uint shift_amount_complement = ~(shift_amount - 1075);\n    if (shift_amount_complement > 30) {\n      return (unsigned long long)(input >> (shift_amount_complement - 31 & 0xff));\n    }\n    else {\n      int shift_amount_2 = shift_amount_complement - 19;\n      if (shift_amount_2 == 0 || shift_amount_2 < 0 != (shift_amount_complement - 31 < 12)) {\n        shift_amount_complement++;\n        return ((unsigned long long)input >> (shift_amount_complement & 0xff)) | (unsigned long long)input << (32 - shift_amount_complement & 0xff);\n      }\n      else {\n        return (unsigned long long)((unsigned int)(input << (12 - shift_amount_2 & 0xff)) >> (32 - (12 - shift_amount_2) & 0xff) | input >> (12 - shift_amount_2 & 0xff));\n      }\n    }\n  }\n  else {\n    return ((unsigned long long)shifted_input + (1075 - shift_amount) * 0x100000) | (unsigned long long)input << (shift_amount & 0xff);\n  }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800040c",
            "calling": [
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08000cd0",
                "FUN_08001918",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_0800040c"
        },
        "FUN_08004df4": {
            "renaming": {
                "FUN_08004df4": "subtract_four_from_input_08004df4",
                "param_1": "input"
            },
            "code": "int subtract_four_from_input_08004df4(int input) {\n  return input - 4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004df4",
            "calling": [
                "FUN_08004df8",
                "FUN_08004e12"
            ],
            "imported": false,
            "current_name": "subtract_four_from_input_08004df4"
        },
        "FUN_08004bb0": {
            "renaming": {
                "FUN_08004bb0": "process_input_08004bb0",
                "param_1": "input_value",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar1": "function_parameter",
                "local_20": "bit_mask",
                "local_1c": "param_2",
                "local_18": "param_3",
                "local_14": "register_offset",
                "DAT_08004c28": "register_address_1",
                "DAT_08004c2c": "register_address_2"
            },
            "code": "void process_input_08004bb0(uint input_value, undefined4 param_2, undefined4 param_3)\n{\n  uint bit_mask;\n  uint flag_value;\n  uint control_register_value;\n  uint input_offset = input_value & 0xf;\n  uint input_type = (input_value - 0xd) & 0xff;\n  uint register_offset = 0x18;\n  uint register_value = 1 << input_offset & 0xffff;\n  uint function_parameter = get_parameter((input_value << 0x18) >> 0x1c);\n\n  set_bit_in_register(register_offset, register_value);\n\n  if (input_type < 2) {\n    control_register_value = *(uint *)(DAT_08004c2c + 4) & 0xf8ffffff;\n    set_bit_in_register(DAT_08004c2c + 4, control_register_value | 0x4000000);\n  }\n\n  if (input_value == 0xf || input_value == 0x13 || input_value == 0x14) {\n    control_register_value = *(uint *)(DAT_08004c2c + 4) & 0xf8ffffff;\n    set_bit_in_register(DAT_08004c2c + 4, control_register_value | 0x2000000);\n  }\n\n  call_function(function_parameter, &bit_mask);\n}\n",
            "called": [
                "FUN_08004884",
                "FUN_08002624"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bb0",
            "calling": [
                "FUN_080057b4"
            ],
            "imported": false,
            "current_name": "process_input_08004bb0"
        },
        "FUN_08004df8": {
            "renaming": {
                "FUN_08004df8": "execute_callback_08004df8",
                "param_1": "param",
                "iVar1": "callback_ptr"
            },
            "code": "void execute_callback_08004df8(int param)\n{\n  int callback_ptr = get_callback_ptr();\n  if ((*(code **)(callback_ptr + 0x4c) != (code *)0x0) && (*(char *)(param + 0x1c) == '\\x01')) {\n    (**(code **)(callback_ptr + 0x4c))(callback_ptr,0);\n  }\n  return;\n}",
            "called": [
                "FUN_08004df4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004df8",
            "calling": [
                "FUN_08003f18"
            ],
            "imported": false,
            "current_name": "execute_callback_08004df8"
        },
        "FUN_08001510": {
            "renaming": {
                "FUN_08001510": "initialize_function_pointer_08001510",
                "param_1": "func_pointer",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5",
                "param_6": "param_6",
                "param_7": "param_7"
            },
            "code": "undefined4* initialize_function_pointer_08001510(undefined4 *func_pointer, undefined4 param_2, undefined4 param_3, undefined4 param_4, undefined param_5, undefined param_6, undefined param_7)\n{\n    func_pointer[1] = 0;\n    *func_pointer = PTR_PTR_FUN_0800134e_1_0800154c;\n    FUN_080014ba(func_pointer, 1, param_2, 0xff, param_3, param_4, param_5, param_6, param_7, 0, 0, 0, 0);\n    return func_pointer;\n}",
            "called": [
                "FUN_080014ba"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001510",
            "calling": [
                "FUN_08000b08"
            ],
            "imported": false,
            "current_name": "initialize_function_pointer_08001510"
        },
        "FUN_08002af8": {
            "renaming": {
                "FUN_08002af8": "validate_input_08002af8",
                "param_1": "input_ptr",
                "param_2": "input_data",
                "param_3": "input_len",
                "param_4": "input_flags",
                "uVar1": "result",
                "puVar2": "data_ptr"
            },
            "code": "int validate_input_08002af8(uint **input_ptr, uint *input_data, int input_len, uint *input_flags) {\n  int result;\n  uint *data_ptr;\n  if (*(char *)((int)input_ptr + 0x3d) == '(') {\n    if (input_data == (uint *)0x0) {\n      result = 1;\n    }\n    else if (input_len == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_ptr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_ptr + 0xf) = 1;\n      data_ptr = *input_ptr;\n      if ((*data_ptr & 1) == 0) {\n        *data_ptr = *data_ptr | 1;\n      }\n      **input_ptr = **input_ptr & 0xfffff7ff;\n      *(undefined *)((int)input_ptr + 0x3d) = 0x29;\n      *(undefined *)((int)input_ptr + 0x3e) = 0x20;\n      result = 0;\n      input_ptr[0x10] = (uint *)0x0;\n      input_ptr[9] = input_data;\n      *(short *)((int)input_ptr + 0x2a) = (short)input_len;\n      input_ptr[0xb] = input_flags;\n      *(undefined2 *)(input_ptr + 10) = *(undefined2 *)((int)input_ptr + 0x2a);\n      *(undefined *)(input_ptr + 0xf) = 0;\n      (*input_ptr)[1] = (*input_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002af8",
            "calling": [
                "FUN_08004e74"
            ],
            "imported": false,
            "current_name": "validate_input_08002af8"
        },
        "FUN_080028de": {
            "renaming": {
                "FUN_080028de": "process_input_080028de",
                "param_1": "input",
                "puVar1": "pu_var_1",
                "PTR_DAT_0000002c": "quote_char",
                "PTR_DAT_0000002d": "at_char",
                "PTR_DAT_0000003c": "ptr",
                "PTR_DAT_00000050": "ptr14",
                "PTR_DAT_00000010": "ptr4",
                "PTR_DAT_00000030": "ptrc",
                "PTR_DAT_0000002a": "short_val"
            },
            "code": "uint32_t process_input_080028de(uint32_t **input)\n{\n    uint32_t *flag = input[11];\n    uint32_t PTR_DAT_0000002c = *(char *)((int)input + 0x3d);\n    uint32_t PTR_DAT_0000002d = *(char *)((int)input + 0x3e);\n    uint32_t *PTR_DAT_0000003c = *input;\n    uint32_t *PTR_DAT_00000050 = input[20];\n    uint32_t *PTR_DAT_00000010 = input[4];\n    uint32_t *PTR_DAT_00000030 = input[12];\n    uint32_t PTR_DAT_0000002a = *(short *)((int)input + 0x2a);\n    if (PTR_DAT_0000002c == '\"' && (PTR_DAT_00000050 != NULL || PTR_DAT_0000002d != '@')) {\n        if (PTR_DAT_00000050 == NULL && PTR_DAT_00000010 == (uint32_t *)0xc000) {\n            *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x100;\n            input[20] = (uint32_t *)((int)input[20] + 1);\n        }\n        else {\n            if (PTR_DAT_0000002a == 0) {\n                *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x200;\n            }\n            else if (PTR_DAT_0000002a == 1) {\n                if (flag == (uint32_t *)0xffff0000) {\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c & 0xfffffbff;\n                    uint32_t *puVar1 = *input;\n                    if ((puVar1[1] & 0x800) == 0) {\n                        *puVar1 = *puVar1 | 0x200;\n                    }\n                    else {\n                        *puVar1 = *puVar1 & 0xfffffbff;\n                    }\n                }\n                else if (flag == (uint32_t *)0x4 || flag == (uint32_t *)0x8 || PTR_DAT_00000030 == (uint32_t *)0x12) {\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c & 0xfffffbff;\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x200;\n                }\n                else if (input[11] == (uint32_t *)0x2) {\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x400;\n                }\n                else {\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c & 0xfffffbff;\n                }\n            }\n            else if (PTR_DAT_0000002a == 2) {\n                if (input[11] == (uint32_t *)0x2) {\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x400;\n                }\n                else {\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x800;\n                    *PTR_DAT_0000003c = *PTR_DAT_0000003c & 0xfffffbff;\n                }\n                uint32_t *puVar1 = *input;\n                if ((puVar1[1] & 0x800) != 0) {\n                    puVar1[1] = puVar1[1] | 0x1000;\n                }\n            }\n            else {\n                *PTR_DAT_0000003c = *PTR_DAT_0000003c | 0x400;\n                uint32_t *puVar1 = *input;\n                if ((puVar1[1] & 0x800) != 0) {\n                    puVar1[1] = puVar1[1] | 0x1000;\n                }\n            }\n            input[20] = NULL;\n        }\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028de",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_input_080028de"
        },
        "FUN_08002848": {
            "renaming": {
                "FUN_08002848": "process_input_08002848",
                "param_1": "input_array",
                "*(char *)((int)param_1 + 0x3e)": "flag_char",
                "param_1[0x14]": "flag_val",
                "*(uint *)(*param_1 + 0x10)": "output_ptr",
                "*(uint *)(*param_1 + 0x10) = param_1[0x11] & 0xfe;": "*output_ptr = flag_val & 0xfe;",
                "*(uint *)(*param_1 + 0x10) = param_1[0x11] & 0xffU | 1;": "*output_ptr = flag_val & 0xffU | 1;",
                "*(uint *)(*param_1 + 0x10) = (uint)(param_1[0x11] << 0x10) >> 0x17 & 6 | 0xf0;": "*output_ptr = (flag_val << 0x10) >> 0x17 & 6 | 0xf0;",
                "*(uint *)(*param_1 + 0x10) = (uint)(param_1[0x11] << 0x10) >> 0x17 & 6 | 0xf1;": "*output_ptr = (flag_val << 0x10) >> 0x17 & 6 | 0xf1;",
                "uint": "unsigned int",
                "int *": "int *",
                "int": "int"
            },
            "code": "int process_input_08002848(int *input_array) {\n    int flag_char = *(char *)((int)input_array + 0x3e);\n    int flag_val = input_array[0x11];\n    int *output_ptr = (int *)*input_array + 0x10;\n    \n    if (flag_char == '@') {\n        if (input_array[0x14] == 0) {\n            *output_ptr = flag_val & 0xfe;\n        }\n        else {\n            *output_ptr = flag_val & 0xffU | 1;\n        }\n    }\n    else if (input_array[4] == 0x4000) {\n        if (*(char *)((int)input_array + 0x3d) == '!') {\n            *output_ptr = flag_val & 0xfe;\n        }\n        else {\n            *output_ptr = flag_val & 0xffU | 1;\n        }\n    }\n    else if (input_array[0x14] == 0) {\n        *output_ptr = (flag_val << 0x10) >> 0x17 & 6 | 0xf0;\n    }\n    else if (input_array[0x14] == 1) {\n        *output_ptr = (flag_val << 0x10) >> 0x17 & 6 | 0xf1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002848",
            "calling": [
                "FUN_080033b8"
            ],
            "imported": false,
            "current_name": "process_input_08002848"
        },
        "FUN_08004e70": {
            "renaming": {
                "FUN_08004e70": "decrease_value_08004e70",
                "param_1": "value"
            },
            "code": "int decrease_value_08004e70(int value){\n    return value - 4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e70",
            "calling": [
                "FUN_08004ef4",
                "FUN_08004e74",
                "FUN_08004ec4"
            ],
            "imported": false,
            "current_name": "decrease_value_08004e70"
        },
        "FUN_080020f0": {
            "renaming": {
                "FUN_080020f0": "check_and_update_flags_080020f0",
                "param_1": "ptr_input",
                "iVar1": "current_time",
                "iVar2": "input_ptr"
            },
            "code": "int check_and_update_flags_080020f0(int *ptr_input)\n{\n  int input_ptr = *ptr_input;\n  if ((*(unsigned int *)(input_ptr + 8) & 1) == 0) {\n    return 0;\n  }\n  *(unsigned int *)(input_ptr + 8) = *(unsigned int *)(input_ptr + 8) & 0xfffffffe;\n  int start_time = get_current_time();\n  do {\n    if ((*(unsigned int *)(*ptr_input + 8) & 1) == 0) {\n      return 0;\n    }\n    int current_time = get_current_time();\n  } while ((unsigned int)(current_time - start_time) < 3);\n  ptr_input[10] = ptr_input[10] | 0x10;\n  ptr_input[0xb] = ptr_input[0xb] | 1;\n  return 1;\n}",
            "called": [
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080020f0",
            "calling": [
                "FUN_0800224c",
                "FUN_08002348",
                "FUN_0800213c",
                "FUN_08002384"
            ],
            "imported": false,
            "current_name": "check_and_update_flags_080020f0"
        },
        "FUN_08006e10": {
            "renaming": {
                "FUN_08006e10": "validate_params_08006e10",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "flag",
                "iVar2": "result",
                "local_18": "local_var1",
                "local_14": "local_var2"
            },
            "code": "void validate_params_08006e10(int param1, int *param2) {\n    ushort flag;\n    int local_var1;\n    int *local_var2;\n\n    if (-1 < (int)((uint)*(ushort *)(param2 + 3) << 0x1e)) {\n        local_var1 = param1;\n        local_var2 = param2;\n        flag = get_flag(param1, param2, &local_var1, &local_var2);\n        int result = validate_input(param1, local_var1);\n        if (result != 0) {\n            *(undefined **)(param1 + 0x28) = PTR_LAB_08006c34_1_08006e8c;\n            *param2 = result;\n            *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) | 0x80;\n            param2[4] = result;\n            param2[5] = local_var1;\n            if ((local_var2 != (int *)0x0) && (result = FUN_08007028(param1, (int)*(short *)((int)param2 + 0xe)), result != 0)) {\n                *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) & 0xfffc | 1;\n            }\n            *(ushort *)(param2 + 3) = flag | *(ushort *)(param2 + 3);\n            return;\n        }\n        if ((int)(short)*(ushort *)(param2 + 3) << 0x16 < 0) {\n            return;\n        }\n        *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) & 0xfffc | 2;\n    }\n    *param2 = (int)param2 + 0x47;\n    param2[4] = (int)param2 + 0x47;\n    param2[5] = 1;\n    return;\n}\n",
            "called": [
                "FUN_08006288",
                "FUN_08006dc8",
                "FUN_08007028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e10",
            "calling": [
                "FUN_080069e4"
            ],
            "imported": false,
            "current_name": "validate_params_08006e10"
        },
        "FUN_08004e74": {
            "renaming": {
                "FUN_08004e74": "process_data_08004e74",
                "param_1": "data_ptr",
                "param_2": "flag",
                "param_3": "data_len",
                "param_4": "param_4",
                "iVar1": "new_data_ptr"
            },
            "code": "void process_data_08004e74(int data_ptr, int flag, int data_len, undefined4 param_4) {\n  int new_data_ptr = FUN_08004e70();\n  if (data_len == *(int *)(data_ptr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(new_data_ptr + 0x88) = 0;\n      *(undefined *)(new_data_ptr + 0x5c) = 0;\n      if (*(code **)(new_data_ptr + 100) != (code *)0x0) {\n        (**(code **)(new_data_ptr + 100))();\n      }\n      FUN_08002af8(data_ptr, new_data_ptr + 0x68, *(undefined *)(new_data_ptr + 0x88), 8);\n      return;\n    }\n    *(undefined *)(new_data_ptr + 0x5c) = 1;\n    FUN_08002b84(data_ptr, new_data_ptr + 0x68, 0x20, 8, param_4);\n  }\n  return;\n}",
            "called": [
                "FUN_08004e70",
                "FUN_08002af8",
                "FUN_08002b84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e74",
            "calling": [
                "FUN_08002cf2"
            ],
            "imported": false,
            "current_name": "process_data_08004e74"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "check_param_08004c30",
                "param_1": "value",
                "param_2": "str",
                "param_3": "flag",
                "param_4": "param",
                "FUN_0800281e": "do_something"
            },
            "code": "void check_param_08004c30(int value, char* str, int flag, int param) {\n    if (value == 0) {\n        do_something(str, flag, param, param);\n        return;\n    }\n    do_something(str, flag, 1, param, param);\n    return;\n}",
            "called": [
                "FUN_0800281e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_08005848"
            ],
            "imported": false,
            "current_name": "check_param_08004c30"
        },
        "FUN_08006f38": {
            "renaming": {
                "FUN_08006f38": "calculate_value_and_update_08006f38",
                "param_1": "input_value",
                "param_2": "input_data",
                "iVar1": "calculated_value",
                "uVar2": "updated_value",
                "bVar3": "is_calculated_value_positive"
            },
            "code": "void calculate_value_and_update_08006f38(uint32_t param_1, int32_t param_2)\n{\n  int32_t calculated_value = calculate_offset(param_1, *(int16_t *)(param_2 + 0xe));\n  bool is_calculated_value_positive = calculated_value >= 0;\n  uint32_t updated_value;\n  if (is_calculated_value_positive)\n  {\n    updated_value = *(uint32_t *)(param_2 + 0x54) + calculated_value;\n  }\n  else\n  {\n    updated_value = *(uint16_t *)(param_2 + 0xc) & 0xffffefff;\n  }\n  if (is_calculated_value_positive)\n  {\n    *(uint32_t *)(param_2 + 0x54) = updated_value;\n  }\n  if (!is_calculated_value_positive)\n  {\n    *(int16_t *)(param_2 + 0xc) = (int16_t)updated_value;\n  }\n  return;\n}\n",
            "called": [
                "FUN_0800706c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006f38",
            "calling": [],
            "imported": false,
            "current_name": "calculate_value_and_update_08006f38"
        },
        "FUN_08004cce": {
            "renaming": {
                "FUN_08004cce": "get_result_08004cce",
                "param_1": "input_value",
                "uVar1": "result",
                "FUN_08004cb2": "calculate_result"
            },
            "code": "int get_result_08004cce(int input_value) {\n  int result = -1;\n  if (input_value != -1) {\n    result = calculate_result();\n  }\n  return result;\n}",
            "called": [
                "FUN_08004cb2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cce",
            "calling": [
                "FUN_08004b3c",
                "FUN_08004948",
                "FUN_0800492c",
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "get_result_08004cce"
        },
        "FUN_08006eac": {
            "renaming": {
                "FUN_08006eac": "do_nothing_08006eac"
            },
            "code": "\nvoid do_nothing_08006eac(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006eac",
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "imported": false,
            "current_name": "do_nothing_08006eac"
        },
        "FUN_08006eae": {
            "renaming": {
                "FUN_08006eae": "do_nothing_08006eae"
            },
            "code": "\nvoid do_nothing_08006eae(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006eae",
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "imported": false,
            "current_name": "do_nothing_08006eae"
        },
        "FUN_08005f5c": {
            "renaming": {
                "FUN_08005f5c": "do_nothing_08005f5c"
            },
            "code": "\nvoid do_nothing_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005f5c",
            "calling": [
                "FUN_08005f6c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005f5c"
        },
        "FUN_08003ad4": {
            "renaming": {
                "FUN_08003ad4": "execute_command_08003ad4",
                "param_1": "command",
                "param_2": "command_length",
                "puVar1": "command_buffer",
                "iVar2": "start_time",
                "iVar3": "current_time",
                "uVar4": "result",
                "DAT_08003c34": "command_buffer_global",
                "DAT_08003c38": "command_result_global",
                "PTR_DAT_08003c3c": "command_result_shift",
                "PTR_DAT_08003c40": "command_result_global"
            },
            "code": "uint32_t execute_command_08003ad4(uint32_t *command, uint32_t command_length) {\n  uint32_t *command_buffer = DAT_08003c34;\n  uint32_t command_length_masked = (*command_buffer & 0xfffffff8) | command_length;\n  if (((*command_buffer & 7) < command_length) && (command_length_masked != (*command_buffer & 7))) {\n    return 1;\n  }\n  if ((*command & 2) != 0) {\n    command_buffer[1] = (command_buffer[1] & 0xffffff0f) | command[2];\n  }\n  if ((*command & 1) != 0) {\n    uint32_t command_type = command[1];\n    if (command_type == 1) {\n      if ((*command_buffer & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((command_type != 2) && ((*command_buffer & 2) == 0)) {\n      return 1;\n    }\n    command_buffer[1] = (command_buffer[1] & 0xfffffffc) | command_type;\n    int32_t start_time = get_current_time();\n    if (command[1] == 1) {\n      while ((command_buffer[1] & 0xc) != 4) {\n        int32_t current_time = get_current_time();\n        if (5000 < (uint32_t)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (command[1] == 2) {\n      while ((command_buffer[1] & 0xc) != 8) {\n        int32_t current_time = get_current_time();\n        if (5000 < (uint32_t)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((command_buffer[1] & 0xc) != 0) {\n        int32_t current_time = get_current_time();\n        if (5000 < (uint32_t)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  command_buffer = DAT_08003c34;\n  if ((command_length < (*command_buffer & 7)) && (command_length_masked != (*command_buffer & 7))) {\n    return 1;\n  }\n  if ((*command & 4) != 0) {\n    command_buffer[1] = (command_buffer[1] & 0xfffff8ff) | command[3];\n  }\n  if ((*command & 8) != 0) {\n    command_buffer[1] = (command_buffer[1] & 0xffffc7ff) | (command[4] << 3);\n  }\n  uint32_t result = execute_buffer();\n  *(uint32_t *)DAT_08003c38 = result >> PTR_DAT_08003c3c[command_buffer[1] >> 0x1c];\n  set_status(0xf);\n  return 0;\n}",
            "called": [
                "FUN_08003afa"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ad4",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "execute_command_08003ad4"
        },
        "FUN_08004110": {
            "renaming": {
                "FUN_08004110": "update_register_08004110",
                "param_1": "register_ptr",
                "param_2": "bit_offset",
                "param_3": "new_value",
                "uint": "uint32_t",
                "*(uint *)": "*uint32_t *",
                "&": "&",
                "+": "+",
                "<<": "<<",
                "|": "|",
                "~": "~"
            },
            "code": "void update_register_08004110(uint32_t *register_ptr, uint8_t bit_offset, uint32_t new_value) {\n  uint32_t mask = ~(4 << (bit_offset & 0xff));\n  *register_ptr = (*register_ptr & mask) | (new_value << (bit_offset & 0xff));\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004110",
            "calling": [
                "FUN_0800412c"
            ],
            "imported": false,
            "current_name": "update_register_08004110"
        },
        "FUN_08004ce2": {
            "renaming": {
                "FUN_08004ce2": "is_value_present_08004ce2",
                "param_1": "value",
                "param_2": "values_array",
                "*param_2": "*values_array"
            },
            "code": "int is_value_present_08004ce2(int value, char *values_array) {\n  if (value == -1) {\n    return 0;\n  }\n  while (*values_array != -1) {\n    if (value == *values_array) {\n      return 1;\n    }\n    values_array += 12;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ce2",
            "calling": [
                "FUN_080057b4"
            ],
            "imported": false,
            "current_name": "is_value_present_08004ce2"
        },
        "FUN_08005568": {
            "renaming": {
                "FUN_08005568": "process_data_08005568",
                "param_1": "data_ptr",
                "param_2": "data_value",
                "bVar1": "data_index",
                "PTR_DAT_080055b0": "data_values",
                "PTR_DAT_080055b4": "data_ptrs",
                "PTR_DAT_080055b8": "data_callbacks",
                "FUN_08002494": "process_subdata",
                "FUN_080024f8": "process_subdata_callback",
                "FUN_0800455a": "process_data_callback",
                "DATA_INDEX_OFFSET": "0x44",
                "SUBDATA_OFFSET": "0x5a",
                "DATA_OFFSET": "100"
            },
            "code": "void process_data_08005568(int data_ptr, int data_value) {\n  if (data_ptr != 0) {\n    int data_index = *(char *)(data_ptr + DATA_INDEX_OFFSET);\n    PTR_DAT_080055b0[data_index] = data_value;\n    PTR_DAT_080055b4[data_index] = data_ptr;\n    process_subdata(*(char *)(data_ptr + SUBDATA_OFFSET), 0, 2);\n    process_subdata(*(char *)(data_ptr + SUBDATA_OFFSET));\n    process_data_08005568_callback(PTR_DAT_080055b8[data_index], *(int *)(data_ptr + DATA_OFFSET) + *(ushort *)(data_ptr + SUBDATA_OFFSET), 1);\n  }\n}",
            "called": [
                "FUN_0800455a",
                "FUN_08002494",
                "FUN_080024f8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005568",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08005568"
        },
        "FUN_08004478": {
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "data_ptr",
                "param_2": "ushort_ptr",
                "param_3": "ushort_count",
                "uVar1": "data_value",
                "iVar2": "result"
            },
            "code": "int process_data_08004478(int *data_ptr, ushort *ushort_ptr, int ushort_count, undefined4 param_4)\n{\n  undefined4 uVar1;\n  int result;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (ushort_ptr == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (ushort_count == 0) {\n      result = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      uVar1 = get_data(param_4);\n      *(short *)(data_ptr + 9) = (short)ushort_count;\n      *(short *)((int)data_ptr + 0x26) = (short)ushort_count;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = process_data_08004478_internal(data_ptr,0x80,0,uVar1,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *ushort_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            ushort_ptr = ushort_ptr + 1;\n          }\n          else {\n            ushort_ptr = (ushort *)((int)ushort_ptr + 1);\n          }\n        }\n        else {\n          result = process_data_08004478_internal(data_ptr,0x80,0,uVar1,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)ushort_ptr;\n          ushort_ptr = (ushort *)((int)ushort_ptr + 1);\n        }\n      }\n      result = process_data_08004478_internal(data_ptr,0x40,0,uVar1,param_4);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}",
            "called": [
                "FUN_080043b4",
                "FUN_08001cc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004478",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "process_data_08004478"
        },
        "FUN_08005f5e": {
            "renaming": {
                "FUN_08005f5e": "initialize_game_08005f5e",
                "FUN_08002470": "initialize_players",
                "FUN_08001c32": "setup_game_board"
            },
            "code": "void initialize_game_08005f5e(void)\n{\n  initialize_players(3);\n  setup_game_board();\n  return;\n}",
            "called": [
                "FUN_08002470",
                "FUN_08001c32"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005f5e",
            "calling": [
                "FUN_08006198"
            ],
            "imported": false,
            "current_name": "initialize_game_08005f5e"
        },
        "FUN_08005cb6": {
            "renaming": {
                "FUN_08005cb6": "execute_code_at_address_08005cb6",
                "param_1": "address",
                "*param_1": "*(void **)address"
            },
            "code": "void execute_code_at_address_08005cb6(void *address){\n  (**(void (**)(void))address)();\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005cb6",
            "calling": [
                "FUN_08005d42",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "execute_code_at_address_08005cb6"
        },
        "FUN_08003c70": {
            "renaming": {
                "FUN_08003c70": "calculateShiftedResult_08003c70",
                "uVar1": "result",
                "FUN_08003c44": "calculateFunctionResult",
                "PTR_DAT_08003c8c": "shiftArray",
                "DAT_08003c88": "dataPointer"
            },
            "code": "uint calculateShiftedResult_08003c70(void)\n{\n  uint result;\n  uint functionResult = calculateFunctionResult();\n  uint index = (uint)(*(int *)(DAT_08003c88 + 4) << 0x12) >> 0x1d;\n  uint shiftAmount = PTR_DAT_08003c8c[index];\n  result = functionResult >> shiftAmount;\n  return result;\n}",
            "called": [
                "FUN_08003c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c70",
            "calling": [
                "FUN_08004204",
                "FUN_08003da4"
            ],
            "imported": false,
            "current_name": "calculateShiftedResult_08003c70"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "check_data_080053d4",
                "param_1": "data",
                "param_2": "limit",
                "iVar2": "start_time",
                "cVar1": "data_char",
                "iVar3": "data_index",
                "uVar4": "index",
                "PTR_DAT_0800547c": "data_array",
                "FUN_08001cc4": "get_current_time",
                "FUN_08004c78": "find_data_index",
                "PTR_DAT_08005480": "data_array",
                "PTR_DAT_08005484": "data_array_index",
                "*(int *)(PTR_DAT_08005484 + uVar4 * 4)": "*(int *)(data_array_index + index * 4)",
                "4": "0x04",
                "(byte)PTR_DAT_08005488[0x44]": "(byte)data_array[0x44]",
                "FUN_08005384": "print_error",
                "*(undefined4 *)(PTR_DAT_08005484 + uVar4 * 4)": "*(undefined4 *)(data_array_index + index * 4)",
                "FUN_08004478": "process_data"
            },
            "code": "uint check_data_080053d4(uint data, uint limit)\n{\n  int start_time = get_current_time();\n  char data_char = PTR_DAT_0800547c[1];\n  int data_index = find_data_index((int)data_char, PTR_DAT_0800547c);\n  if (data_index == 0) {\n    return 0;\n  }\n  uint index = 0;\n  while ((index < 5 && ((PTR_DAT_08005484[index] == 0 || (data_index = find_data_index((int)data_char, PTR_DAT_0800547c), *(int *)(PTR_DAT_08005484 + uVar4 * 4) != data_index))))) {\n    index = index + 1 & 0xff;\n  }\n  if (4 < index) {\n    if ((4 < (byte)PTR_DAT_08005488[0x44]) && (print_error(), 4 < (byte)PTR_DAT_08005488[0x44])) {\n      return 0;\n    }\n    index = (uint)(byte)PTR_DAT_08005488[0x44];\n  }\n  do {\n    data_index = process_data(*(undefined4 *)(PTR_DAT_08005484 + uVar4 * 4), data, limit & 0xffff, 1000);\n    if (data_index == 0) {\n      return limit;\n    }\n    data_index = get_current_time();\n  } while ((uint)(data_index - start_time) < 1000);\n  return 0;\n}",
            "called": [
                "FUN_08005384",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08004c78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_08005730"
            ],
            "imported": false,
            "current_name": "check_data_080053d4"
        },
        "FUN_08002b84": {
            "renaming": {
                "FUN_08002b84": "initialize_08002b84",
                "param_1": "ptr_param1",
                "param_2": "ptr_param2",
                "param_3": "param3",
                "param_4": "ptr_param4",
                "uVar1": "status",
                "puVar2": "ptr_var1"
            },
            "code": "uint32_t initialize_08002b84(uint32_t **ptr_param1, uint32_t *ptr_param2, int param3, uint32_t *ptr_param4)\n{\n  uint32_t status;\n  uint32_t *ptr_var1;\n  \n  if (*(char *)((int)ptr_param1 + 0x3d) == '(') {\n    if (ptr_param2 == NULL) {\n      status = 1;\n    }\n    else if (param3 == 0) {\n      status = 1;\n    }\n    else if (*(char *)(ptr_param1 + 0xf) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(ptr_param1 + 0xf) = 1;\n      ptr_var1 = *ptr_param1;\n      if ((*ptr_var1 & 1) == 0) {\n        *ptr_var1 = *ptr_var1 | 1;\n      }\n      **ptr_param1 = **ptr_param1 & 0xfffff7ff;\n      *(undefined *)((int)ptr_param1 + 0x3d) = 0x2a;\n      *(undefined *)((int)ptr_param1 + 0x3e) = 0x20;\n      status = 0;\n      ptr_param1[0x10] = NULL;\n      ptr_param1[9] = ptr_param2;\n      *(short *)((int)ptr_param1 + 0x2a) = (short)param3;\n      ptr_param1[0xb] = ptr_param4;\n      *(undefined2 *)(ptr_param1 + 10) = *(undefined2 *)((int)ptr_param1 + 0x2a);\n      *(undefined *)(ptr_param1 + 0xf) = 0;\n      (*ptr_param1)[1] = (*ptr_param1)[1] | 0x700;\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b84",
            "calling": [
                "FUN_08004e74"
            ],
            "imported": false,
            "current_name": "initialize_08002b84"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "call_function_with_params_08004c48",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "FUN_08002810": "call_function_with_5_params"
            },
            "code": "void call_function_with_params_08004c48(undefined4 input_param1, undefined2 input_param2, undefined4 input_param3, undefined4 input_param4)\n{\n  call_function_with_5_params(input_param1, input_param2, input_param3, input_param4, input_param4);\n  return;\n}",
            "called": [
                "FUN_08002810"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_08005890"
            ],
            "imported": false,
            "current_name": "call_function_with_params_08004c48"
        },
        "FUN_0800042c": {
            "renaming": {
                "FUN_0800042c": "improved_function_0800042c",
                "param_1": "input",
                "uVar1": "temp_1",
                "uVar2": "magnitude",
                "uVar3": "shift_amount",
                "iVar4": "count",
                "uVar5": "shift_amount_2",
                "uVar6": "sign_bit",
                "in_r12": "unused",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "overflow",
                "SBORROW4": "subtract_overflow",
                "SCARRY4": "add_overflow"
            },
            "code": "ulonglong improved_function_0800042c(uint x) {\n  if (x == 0) {\n    return 32;\n  }\n  uint n = 0;\n  if (x <= 0x0000FFFF) {\n    n = n + 16;\n    x = x << 16;\n  }\n  if (x <= 0x00FFFFFF) {\n    n = n + 8;\n    x = x << 8;\n  }\n  if (x <= 0x0FFFFFFF) {\n    n = n + 4;\n    x = x << 4;\n  }\n  if (x <= 0x3FFFFFFF) {\n    n = n + 2;\n    x = x << 2;\n  }\n  if (x <= 0x7FFFFFFF) {\n    n = n + 1;\n  }\n  return n;\n}\n\nulonglong improved_function_0800042c(uint input) {\n  if (input == 0) {\n    return 0;\n  }\n  uint sign_bit = input & 0x80000000;\n  uint magnitude = input;\n  if ((int)sign_bit < 0) {\n    magnitude = -input;\n  }\n  uint n = improved_function_0800042c(magnitude);\n  uint shift_amount = n + 0x15;\n  if (shift_amount < 0x20) {\n    uint shift_amount_2 = n - 0xb;\n    if (shift_amount_2 < 0) {\n      shift_amount_2 = 0;\n    }\n    uint shifted_magnitude = magnitude << (shift_amount & 0xff);\n    uint shifted_magnitude_2 = magnitude >> ((0x1f - shift_amount_2) & 0xff);\n    return CONCAT44(shifted_magnitude_2 | sign_bit, shifted_magnitude);\n  }\n  else if (shift_amount < 0x433) {\n    uint shift_amount_3 = 0x20 - n;\n    uint shifted_magnitude_3 = magnitude << (n & 0xff);\n    shifted_magnitude_3 |= 0U >> (shift_amount_3 & 0xff);\n    return CONCAT44(shifted_magnitude_3 | sign_bit, 0);\n  }\n  else {\n    uint shift_amount_4 = ~(0x432 - shift_amount);\n    if (shift_amount_4 > 0x1e) {\n      uint shifted_magnitude_4 = magnitude >> ((shift_amount_4 - 0x1f) & 0xff);\n      return CONCAT44(shifted_magnitude_4 | sign_bit, 0) & 0x80000000ffffffff;\n    }\n    else {\n      uint shift_amount_5 = shift_amount_4 - 0x13;\n      if (shift_amount_5 == 0 || (shift_amount_4 - 0x1f < 0) != (shift_amount_5 < 0)) {\n        shift_amount_4 = shift_amount_4 + 1;\n        uint shifted_magnitude_5 = magnitude >> (shift_amount_4 & 0xff);\n        uint shifted_magnitude_6 = magnitude << ((0x20 - shift_amount_4) & 0xff);\n        return CONCAT44(shifted_magnitude_5 | sign_bit, shifted_magnitude_6);\n      }\n      else {\n        uint shifted_magnitude_7 = magnitude << ((0xc - shift_amount_5) & 0xff);\n        uint shifted_magnitude_8 = magnitude >> ((0x20 - (0xc - shift_amount_5)) & 0xff);\n        return CONCAT44(shifted_magnitude_8 | sign_bit, shifted_magnitude_7) & 0x80000000ffffffff;\n      }\n    }\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800042c",
            "calling": [
                "FUN_08000cd0",
                "FUN_08001918",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "improved_function_0800042c"
        },
        "FUN_08005f6c": {
            "renaming": {
                "FUN_08005f6c": "process_data_08005f6c",
                "FUN_08000bcc": "initialize",
                "FUNC_08000cd0": "read_data",
                "FUN_08005a18": "process_data",
                "DAT_08005f88": "data_available",
                "do_nothing_08005f5c": "do_nothing"
            },
            "code": "void process_data_08005f6c(void)\n{\n  do_nothing();\n  initialize();\n  do {\n    do {\n      read_data();\n    } while (DAT_08005f88 == 0);\n    process_data_08005f6c();\n  } while (true);\n}",
            "called": [
                "FUN_08005f5c",
                "FUN_08005a18",
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005f6c",
            "calling": [
                "FUN_08001be8"
            ],
            "imported": false,
            "current_name": "process_data_08005f6c"
        },
        "FUN_08005cc0": {
            "renaming": {
                "FUN_08005cc0": "execute_function_at_address_08005cc0",
                "param_1": "function_address",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "code": "void execute_function_at_address_08005cc0(int *function_address, int arg1, int arg2, int arg3)\n{\n  (**(void (**)(int*, int, int, void*, int))(*function_address + 4))(function_address, PTR_DAT_08005cd0, 2, **(void (**)(int*, int, int, void*, int))(*function_address + 4), arg3);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005cc0",
            "calling": [
                "FUN_08005f40",
                "FUN_08005cd4"
            ],
            "imported": false,
            "current_name": "execute_function_at_address_08005cc0"
        },
        "FUN_0800706c": {
            "renaming": {
                "FUN_0800706c": "processReturnValue_0800706c",
                "param_1": "outputValue",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "puVar1": "ptrToData",
                "iVar2": "returnValue"
            },
            "code": "void processReturnValue_0800706c(int *outputValue, undefined4 input1, undefined4 input2, undefined4 input3) {\n  undefined *ptrToData = PTR_DAT_0800708c;\n  *(undefined4 *)PTR_DAT_0800708c = 0;\n  int returnValue = FUN_0800572c(input1, input2, input3, input3, input3);\n  if ((returnValue == -1) && (*(int *)ptrToData != 0)) {\n    *outputValue = *(int *)ptrToData;\n  }\n  return;\n}",
            "called": [
                "FUN_0800572c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800706c",
            "calling": [
                "FUN_08006f38"
            ],
            "imported": false,
            "current_name": "processReturnValue_0800706c"
        },
        "FUN_08002624": {
            "renaming": {
                "FUN_08002624": "process_bits_08002624",
                "param_1": "bits",
                "param_2": "flags",
                "puVar1": "bits_ptr",
                "uVar2": "flag_type",
                "uVar3": "bit_mask",
                "uVar4": "flag_value",
                "uVar5": "bit_index",
                "uVar6": "flag_offset",
                "uVar7": "unused",
                "iVar8": "flag_index",
                "iVar10": "unused"
            },
            "code": "void process_bits_08002624(uint *bits, uint *flags) {\n  uint *bits_ptr;\n  uint bit_mask;\n  uint flag_value;\n  uint flag_type;\n  uint flag_offset;\n  uint bit_index = 0;\n  while (bit_index <= 0xf) {\n    if (bit_index > 0xf) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    flag_value = *flags & bit_mask;\n    if (bit_mask == flag_value) {\n      flag_type = flags[1];\n      if (flag_type == 0x12) {\n        flag_offset = flags[3] + 0xc;\n      }\n      else if (flag_type < 0x13) {\n        if (flag_type == 2) {\n          flag_offset = flags[3] + 8;\n        }\n        else if (flag_type < 3) {\n          if (flag_type == 0) goto LAB_08002776;\n          if (flag_type == 1) {\n            flag_offset = flags[3];\n          }\n        }\n        else if (flag_type == 3) {\n          flag_offset = 0;\n        }\n        else if (flag_type == 0x11) {\n          flag_offset = flags[3] + 4;\n        }\n      }\n      else {\n        if (flag_type != PTR_DAT_08002804) {\n          if (PTR_DAT_08002804 < flag_type) {\n            if (flag_type == PTR_DAT_08002808) goto LAB_08002776;\n            uint upper_bound = PTR_DAT_08002808 + 0x10000;\n            uint lower_bound = PTR_DAT_08002808;\n          }\n          else {\n            uint upper_bound = PTR_DAT_08002804 - 0x100000;\n            uint lower_bound = PTR_DAT_08002804;\n          }\n          if ((flag_type != upper_bound) && (flag_type != lower_bound - 0xf0000)) goto LAB_0800263a;\n        }\nLAB_08002776:\n        if (flags[2] == 0) {\n          flag_offset = 4;\n        }\n        else if (flags[2] == 1) {\n          bits[4] = bit_mask;\n          flag_offset = 8;\n        }\n        else {\n          bits[5] = bit_mask;\n          flag_offset = 8;\n        }\n      }\nLAB_0800263a:\n      uint bit_offset = bit_index;\n      bits_ptr = bits;\n      if (0xff < flag_value) {\n        bit_offset = bit_index - 8;\n        bits_ptr = bits + 1;\n      }\n      *bits_ptr = *bits_ptr & ~(0xf << (bit_offset << 2 & 0xff)) | flag_offset << (bit_offset << 2 & 0xff);\n      if ((flags[1] & 0x10000000) != 0) {\n        *(uint *)(PTR_DAT_080027f8 + 0x18) = *(uint *)(PTR_DAT_080027f8 + 0x18) | 1;\n        uint flag_index = (bit_index & 3) << 2;\n        if (bits_ptr == PTR_DAT_0800280c) {\n          flag_index = 0;\n        }\n        else if (bits_ptr == PTR_DAT_0800280c + 0x100) {\n          flag_index = 1;\n        }\n        else if (bits_ptr == PTR_DAT_0800280c + 0x200) {\n          flag_index = 2;\n        }\n        else if (bits_ptr == PTR_DAT_0800280c + 0x300) {\n          flag_index = 3;\n        }\n        else {\n          flag_index = 4;\n        }\n        *(uint *)(PTR_DAT_080027fc + ((bit_index >> 2) + 2) * 4) = *(uint *)(PTR_DAT_080027fc + ((bit_index >> 2) + 2) * 4) & ~(0xf << flag_index) | flag_index << flag_index;\n        if ((flags[1] & 0x10000) == 0) {\n          *PTR_DAT_08002800 = *PTR_DAT_08002800 & ~flag_value;\n        }\n        else {\n          *PTR_DAT_08002800 = *PTR_DAT_08002800 | flag_value;\n        }\n        if ((flags[1] & 0x20000) == 0) {\n          PTR_DAT_08002800[1] = PTR_DAT_08002800[1] & ~flag_value;\n        }\n        else {\n          PTR_DAT_08002800[1] = PTR_DAT_08002800[1] | flag_value;\n        }\n        if ((flags[1] & 0x100000) == 0) {\n          PTR_DAT_08002800[2] = PTR_DAT_08002800[2] & ~flag_value;\n        }\n        else {\n          PTR_DAT_08002800[2] = PTR_DAT_08002800[2] | flag_value;\n        }\n        if ((flags[1] & 0x200000) == 0) {\n          PTR_DAT_08002800[3] = PTR_DAT_08002800[3] & ~flag_value;\n        }\n        else {\n          PTR_DAT_08002800[3] = flag_value | PTR_DAT_08002800[3];\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002624",
            "calling": [
                "FUN_08004974",
                "FUN_08004bb0",
                "FUN_08004f4c"
            ],
            "imported": false,
            "current_name": "process_bits_08002624"
        },
        "FUN_080040b0": {
            "renaming": {
                "FUN_080040b0": "disable_feature_if_allowed_080040b0",
                "param_1": "feature",
                "param_2": "param",
                "puVar1": "feature_ptr",
                "DAT_0800410c": "PTR_DAT_0800410c"
            },
            "code": "uint32_t disable_feature_if_allowed_080040b0(uint32_t **feature, uint32_t param) {\n  uint32_t *feature_ptr = *feature;\n  FUN_08004092(*feature, param, 0);\n  if (((feature_ptr == DAT_0800410c) && ((feature_ptr[8] & 0x1111) == 0)) && ((feature_ptr[8] & 0x444) == 0)) {\n    feature_ptr[17] = feature_ptr[17] & 0xffff7fff;\n  }\n  feature_ptr = *feature;\n  if (((feature_ptr[8] & 0x1111) == 0) && ((feature_ptr[8] & 0x444) == 0)) {\n    *feature_ptr = *feature_ptr & 0xfffffffe;\n  }\n  *(uint8_t *)((int)feature + 0x3d) = 1;\n  return 0;\n}",
            "called": [
                "FUN_08004092"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b0",
            "calling": [
                "FUN_08004b3c"
            ],
            "imported": false,
            "current_name": "disable_feature_if_allowed_080040b0"
        },
        "FUN_08005d42": {
            "renaming": {
                "FUN_08005d42": "calculate_result_08005d42",
                "param_1": "function_pointer",
                "param_2": "input_1",
                "param_3": "input_2",
                "iVar1": "result",
                "iVar2": "negative_flag",
                "FUN_08005ce8": "calculate_intermediate_result",
                "FUN_08005cb6": "print_negative_sign"
            },
            "code": "int calculate_result_08005d42(undefined4 *function_pointer, uint input_1, uint input_2)\n{\n  int result;\n  int negative_flag = 0x2d;\n  int base = 10;\n  \n  if (input_2 == 0) {\n    result = (**(code **)*function_pointer)(function_pointer, input_1 & 0xff);\n    return result;\n  }\n  if (input_2 != base) {\n    result = calculate_intermediate_result(function_pointer, input_1, input_2 & 0xff);\n    return result;\n  }\n  if (-1 < (int)input_1) {\n    result = calculate_intermediate_result(function_pointer, input_1, base);\n    return result;\n  }\n  result = print_negative_sign(function_pointer, negative_flag);\n  result += calculate_intermediate_result(function_pointer, -input_1, base);\n  return result;\n}",
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d42",
            "calling": [
                "FUN_08005d82"
            ],
            "imported": false,
            "current_name": "calculate_result_08005d42"
        },
        "FUN_08004b34": {
            "renaming": {
                "FUN_08004b34": "initialize_program_08004b34",
                "FUN_08004d90": "initialize_database"
            },
            "code": "void initialize_program_08004b34(void)\n{\n  initialize_database();\n  return;\n}",
            "called": [
                "FUN_08004d90"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b34",
            "calling": [
                "FUN_08003ed8"
            ],
            "imported": false,
            "current_name": "initialize_program_08004b34"
        },
        "FUN_08004c52": {
            "renaming": {
                "FUN_08004c52": "execute_application_08004c52",
                "FUN_08001c88": "initialize_application",
                "FUN_08001b48": "start_application"
            },
            "code": "void execute_application_08004c52(void)\n{\n  initialize_application();\n  start_application();\n  return;\n}",
            "called": [
                "FUN_08001c88",
                "FUN_08001b48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c52",
            "calling": [
                "FUN_08001c32"
            ],
            "imported": false,
            "current_name": "execute_application_08004c52"
        },
        "FUN_080013a4": {
            "renaming": {
                "FUN_080013a4": "configure_device_080013a4",
                "param_1": "device_config",
                "param_2": "device_type",
                "param_3": "num_devices",
                "param_4": "device_flags",
                "iVar1": "activation_flags",
                "iVar2": "device_index",
                "FUN_08001294": "configure_device_type",
                "FUN_080057b4": "activate_device",
                "FUN_08005848": "deactivate_device",
                "FUN_080012c0": "configure_device_type_extended",
                "FUN_08001310": "configure_device_type_extended",
                "*(byte *)(param_1 + 0x13)": "device_config->flags",
                "*(char *)(param_1 + 0x17)": "device_config->num_devices",
                "*(undefined *)(param_1 + 8)": "device_config->device_1",
                "*(char *)(param_1 + 9)": "device_config->device_2",
                "*(undefined *)(param_1 + 10)": "device_config->device_3",
                "*(undefined *)(param_1 + iVar2 + 0xb)": "device_config->device_array[i]",
                "*(undefined *)(param_1 + 0x14)": "device_config->completion_status",
                "*(undefined *)(param_1 + 0x15)": "device_config->reset_status"
            },
            "code": "void configure_device_080013a4(int device_config, int device_type, int num_devices, int device_flags) {\n  int device_index = 0;\n  if (num_devices > 1) {\n    *(byte *)(device_config + 0x13) |= 8;\n  }\n  *(char *)(device_config + 0x17) = (char)num_devices;\n  configure_device_080013a4_type(device_config, 0, 0x40, device_type, device_type + 0x40);\n  if ((device_flags != 0) && (num_devices == 1)) {\n    *(byte *)(device_config + 0x13) |= 4;\n  }\n  activate_device(*(undefined *)(device_config + 8), 1);\n  if (*(char *)(device_config + 9) != -1) {\n    activate_device(*(char *)(device_config + 9), 1);\n  }\n  activate_device(*(undefined *)(device_config + 10), 1);\n  while (device_index < 4) {\n    int activation_flags = 4;\n    if ((*(byte *)(device_config + 0x13) & 0x10) != 0) {\n      activation_flags = 8;\n    }\n    if (activation_flags <= device_index) break;\n    activate_device(*(undefined *)(device_config + device_index + 0xb), 1);\n    device_index++;\n  }\n  deactivate_device(*(undefined *)(device_config + 8), 0);\n  deactivate_device(*(undefined *)(device_config + 10), 0);\n  if (*(char *)(device_config + 9) != -1) {\n    deactivate_device(*(char *)(device_config + 9), 0);\n  }\n  if ((*(byte *)(device_config + 0x13) & 0x10) == 0) {\n    configure_device_080013a4_type(device_config, 3);\n    configure_device_080013a4_type(device_config, 3);\n    configure_device_080013a4_type(device_config, 3);\n    configure_device_080013a4_type(device_config, 2);\n  }\n  else {\n    configure_device_080013a4_type_extended(device_config, *(byte *)(device_config + 0x13) | 0x20, 0);\n    configure_device_080013a4_type_extended(device_config, *(byte *)(device_config + 0x13) | 0x20, 0);\n    configure_device_080013a4_type_extended(device_config, *(byte *)(device_config + 0x13) | 0x20, 0);\n  }\n  configure_device_080013a4_type_extended(device_config, *(byte *)(device_config + 0x13) | 0x20, 0);\n  *(undefined *)(device_config + 0x14) = 4;\n  configure_device_080013a4_completion(device_config);\n  configure_device_080013a4_reset(device_config);\n  *(undefined *)(device_config + 0x15) = 2;\n  configure_device_080013a4_type_extended(device_config, 6, 0);\n  return;\n}",
            "called": [
                "FUN_0800138e",
                "FUN_080012c0",
                "FUN_08001294",
                "FUN_080057b4",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080013a4",
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "imported": false,
            "current_name": "configure_device_080013a4"
        },
        "FUN_08006d14": {
            "renaming": {
                "FUN_08006d14": "find_and_initialize_08006d14",
                "param_1": "error_code_ptr",
                "param_2": "num",
                "param_3": "unused_param",
                "param_4": "num2",
                "piVar1": "current_ptr",
                "piVar2": "found_ptr",
                "iVar3": "data_offset",
                "ppiVar4": "current_ptr_ptr"
            },
            "code": "int * find_and_initialize_08006d14(int *error_code_ptr, int num)\n{\n  int *found_ptr;\n  int *current_ptr;\n  int data_offset = *(int *)PTR_PTR_DAT_08006d88;\n  if (*(int *)(data_offset + 0x18) == 0) {\n    initialize_data(data_offset);\n  }\n  current_ptr = (int *)(data_offset + 0x48);\n  do {\n    found_ptr = current_ptr[2];\n    current_ptr = current_ptr[1];\n    while (found_ptr = (int *)((int)found_ptr + -1), -1 < (int)found_ptr) {\n      if (*(short *)(found_ptr + 3) == 0) {\n        *(undefined2 *)((int)found_ptr + 0xe) = 0xffff;\n        found_ptr[0x19] = 0;\n        *(undefined2 *)(found_ptr + 3) = 1;\n        *found_ptr = 0;\n        found_ptr[2] = 0;\n        found_ptr[1] = 0;\n        found_ptr[4] = 0;\n        found_ptr[5] = 0;\n        found_ptr[6] = 0;\n        initialize_data(found_ptr + 0x17,0,8,1,num);\n        found_ptr[0xd] = 0;\n        found_ptr[0xe] = 0;\n        found_ptr[0x12] = 0;\n        found_ptr[0x13] = 0;\n        return found_ptr;\n      }\n      found_ptr = found_ptr + 0x1a;\n    }\n    if (*current_ptr == (int *)0x0) {\n      found_ptr = (int *)allocate_memory(error_code_ptr,4);\n      *current_ptr = found_ptr;\n      if (found_ptr == (int *)0x0) {\n        *error_code_ptr = 0xc;\n        return (int *)0x0;\n      }\n    }\n    current_ptr = (int **)*current_ptr;\n  } while( true );\n}",
            "called": [
                "FUN_08006c88",
                "FUN_08006cb4",
                "FUN_080061e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d14",
            "calling": [
                "FUN_08006cb4"
            ],
            "imported": false,
            "current_name": "find_and_initialize_08006d14"
        },
        "FUN_080004f8": {
            "renaming": {
                "FUN_080004f8": "FUNC_080004f8"
            },
            "code": "\nulonglong FUNC_080004f8(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006d4();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006d4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004f8",
            "calling": [
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4",
                "FUN_08005da8"
            ],
            "imported": false,
            "current_name": "FUNC_080004f8"
        }
    },
    "used_tokens": 223731,
    "layers": [
        [
            "FUN_08002470",
            "FUN_08007004",
            "FUN_08005740",
            "FUN_08006158",
            "FUN_08004ec4",
            "FUN_08000178",
            "FUN_08006c88",
            "FUN_080060e4",
            "FUN_0800258c",
            "FUN_08004e20",
            "FUN_0800573c",
            "FUN_080032b4",
            "FUN_08004d06",
            "FUN_080056d8",
            "FUN_080019f6",
            "FUN_08002f9c",
            "FUN_08005510",
            "FUN_08005750",
            "FUN_08002cf2",
            "FUN_08006288",
            "FUN_08002004",
            "FUN_08005754",
            "FUN_08005fc8",
            "FUN_08002ab8",
            "FUN_080068f0",
            "FUN_0800138e",
            "FUN_0800598a",
            "FUN_08001c88",
            "FUN_08001a44",
            "FUN_08002c54",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004d18",
            "FUN_080006d4",
            "FUN_08006174",
            "FUN_08007028",
            "FUN_08002494",
            "FUN_080055bc",
            "FUN_08001960",
            "FUN_08004ca2",
            "FUN_08002810",
            "FUN_0800224c",
            "FUN_080054b0",
            "FUN_08006f00",
            "FUN_080016b4",
            "FUN_080018f8",
            "FUN_08005890",
            "FUN_08005da0",
            "FUN_08004cb2",
            "FUN_08004ef4",
            "FUN_08001294",
            "FUN_08002384",
            "FUN_08002ad8",
            "FUN_08004204",
            "FUN_08005da8",
            "FUN_080045fe",
            "FUN_08005f2c",
            "FUN_080055e0",
            "FUN_08005f40",
            "FUN_0800213c",
            "FUN_0800455a",
            "FUN_08001a66",
            "FUN_08003c44",
            "FUN_080028d2",
            "FUN_08000a18",
            "FUN_08005384",
            "FUN_08005b3c",
            "FUN_080046b8",
            "FUN_08004c8a",
            "FUN_08001cd0",
            "FUN_08004a4c",
            "FUN_08006112",
            "FUN_08004974",
            "FUN_08003520",
            "FUN_08002ca6",
            "FUN_08005b54",
            "FUN_08004618",
            "FUN_08006c40",
            "FUN_0800157c",
            "FUN_080045a2",
            "FUN_08001c32",
            "FUN_080047e8",
            "FUN_080057b4",
            "FUN_08001b18",
            "thunk_FUN_08005750",
            "FUN_0800092c",
            "FUN_08005d8a",
            "FUN_08002560",
            "FUN_08006e90",
            "FUN_08006920",
            "FUN_080008ba",
            "FUN_08002d1c",
            "FUN_08005714",
            "FUN_08003da4",
            "FUN_08005a44",
            "FUN_080009dc",
            "FUN_0800417c",
            "FUN_08004b94",
            "FUN_080058e0",
            "FUN_08001918",
            "FUN_0800611c",
            "FUN_080047f4",
            "FUN_080009f0",
            "FUN_0800134e",
            "FUN_08002c10",
            "FUN_08006be0",
            "FUN_080012e8",
            "FUN_08006370",
            "FUN_080024f8",
            "FUN_08001ab0",
            "FUN_08006ac0",
            "FUN_08004198",
            "FUN_08001c3c",
            "FUN_08000a2c",
            "FUN_08001366",
            "FUN_08005848",
            "FUN_08000ae8",
            "FUN_08003ed8",
            "FUN_080061e0",
            "FUN_08005604",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800135a",
            "FUN_08005c96",
            "FUN_0800571a",
            "FUN_08002efc",
            "FUN_0800365c",
            "FUN_080033b8",
            "FUN_080069e4",
            "FUN_08004b9e",
            "FUN_08005730",
            "FUN_08002582",
            "FUN_08004884",
            "FUN_08001be8",
            "FUN_080061f0",
            "FUN_08002348",
            "FUN_080060d4",
            "FUN_08005a68",
            "FUN_08001814",
            "FUN_08000aec",
            "FUN_0800572c",
            "FUN_08004e12",
            "FUN_08000a58",
            "FUN_08001b48",
            "FUN_08004092",
            "FUN_08005cd4",
            "FUN_08005bb0",
            "FUN_080014ba",
            "FUN_08003c90",
            "FUN_08002514",
            "FUN_08005c1c",
            "FUN_08006dc8",
            "FUN_0800412c",
            "FUN_08007090",
            "FUN_0800492c",
            "FUN_0800480a",
            "FUN_080015f8",
            "FUN_08005c38",
            "FUN_08005f8c",
            "FUN_08006f5a",
            "FUN_08000b08",
            "FUN_08006cb4",
            "FUN_08004c5e",
            "FUN_08004b3c",
            "FUN_08001550",
            "FUN_08001310",
            "FUN_080009a8",
            "FUN_08004d90",
            "FUN_08005ce8",
            "FUN_0800316c",
            "FUN_08004828",
            "FUN_08003afa",
            "FUN_08004948",
            "FUN_08005b24",
            "FUN_080049f0",
            "FUN_08001e40",
            "FUN_08003a68",
            "FUN_080012a2",
            "FUN_08004c78",
            "FUN_08001e48",
            "FUN_080009b8",
            "FUN_08000aa8",
            "FUN_08000a04",
            "FUN_0800010c",
            "FUN_08001cac",
            "FUN_08005a18",
            "FUN_08003f18",
            "FUN_0800591e",
            "FUN_08002540",
            "FUN_08006344",
            "FUN_080009c8",
            "FUN_08002db2",
            "FUN_08001cc4",
            "FUN_08003ea0",
            "FUN_0800306c",
            "FUN_0800548c",
            "FUN_08004848",
            "FUN_08005d82",
            "FUN_08006f92",
            "FUN_080012c0",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08000bcc",
            "FUN_0800281e",
            "FUN_08006198",
            "FUN_08007048",
            "FUN_08003c50",
            "FUN_080065c0",
            "FUN_080054d4",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_0800282c",
            "FUN_080015b2",
            "FUN_0800040c",
            "FUN_08004df4",
            "FUN_08004bb0",
            "FUN_08004df8",
            "FUN_08001510",
            "FUN_08002af8",
            "FUN_080028de",
            "FUN_08002848",
            "FUN_08004e70",
            "FUN_080020f0",
            "FUN_08006e10",
            "FUN_08004e74",
            "FUN_08004c30",
            "FUN_08006f38",
            "FUN_08004cce",
            "FUN_08003ad4",
            "FUN_08004110",
            "FUN_08004ce2",
            "FUN_08005568",
            "FUN_08004478",
            "FUN_08005f5e",
            "FUN_08005cb6",
            "FUN_08003c70",
            "FUN_080053d4",
            "FUN_08002b84",
            "FUN_08004c48",
            "FUN_0800042c",
            "FUN_08005f6c",
            "FUN_08005cc0",
            "FUN_0800706c",
            "FUN_08002624",
            "FUN_080040b0",
            "FUN_08005d42",
            "FUN_08004b34",
            "FUN_08004c52",
            "FUN_080013a4",
            "FUN_08006d14"
        ]
    ],
    "locked_functions": []
}