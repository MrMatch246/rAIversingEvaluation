{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_null_terminated_string_08000178",
            "code": "\nchar * find_null_terminated_string_08000178(char *input_string)\n\n{\n  char current_character;\n  char *next_character;\n  char *current_position;\n  \n  current_position = input_string;\n  do {\n    next_character = current_position + 1;\n    current_character = *current_position;\n    current_position = next_character;\n  } while (current_character != '\\0');\n  return next_character + (-1 - (int)input_string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_null_terminated_string_08000178",
                "param_1": "input_string",
                "cVar1": "current_character",
                "pcVar2": "next_character",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_result_08000190",
            "code": "\nulonglong calculateResult_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shiftedInput2;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int shiftedInput4;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp4 = input4 ^ 0x80000000;\n  temp6 = input2 << 1;\n  input4 = input4 << 1;\n  condition1 = ((input2 ^ temp4) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (temp6 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  shiftedInput4 = (int)temp6 >> 0x15;\n  if (!condition2) {\n    condition2 = shiftedInput4 == -1;\n  }\n  shiftedInput2 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shiftedInput2 == -1;\n  }\n  if (condition2) {\n    if (shiftedInput4 == -1 || shiftedInput2 == -1) {\n      temp6 = temp4;\n      temp8 = input3;\n      if (shiftedInput4 == -1) {\n        temp6 = input2;\n        temp8 = input1;\n      }\n      if (shiftedInput4 != -1 || shiftedInput2 != -1) {\n        input3 = temp8;\n        temp4 = temp6;\n      }\n      condition2 = (temp8 | temp6 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | temp4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = temp6 == temp4;\n      }\n      if (!condition2) {\n        temp6 = temp6 | 0x80000;\n      }\n      return CONCAT44(temp6,temp8);\n    }\n    if (((input2 ^ temp4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp6 | input1) == 0) {\n        input1 = input3;\n        input2 = temp4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp4) {\n      return 0;\n    }\n    if (temp6 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      temp4 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input1 << 1);\n    }\n    if (temp6 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp6 = temp6 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp8 = input4 - temp6;\n  condition2 = temp8 != 0;\n  if (input4 < temp6) {\n    temp8 = -temp8;\n  }\n  temp7 = input1;\n  temp5 = input2;\n  if (condition2 && temp6 <= input4) {\n    temp6 = temp6 + temp8;\n    temp7 = input3;\n    temp5 = temp4;\n    input3 = input1;\n    temp4 = input2;\n  }\n  if (0x36 < temp8) {\n    return CONCAT44(temp5,temp7);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    condition2 = temp7 != 0;\n    temp7 = -temp7;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    temp5 = -temp5 - (uint)condition2;\n  }\n  if (temp6 == temp8) {\n    temp5 = temp5 ^ 0x100000;\n    if (temp6 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      temp6 = 1;\n    }\n    else {\n      temp8 = temp8 - 1;\n    }\n  }\n  temp4 = -temp8 + 0x20;\n  if ((int)temp8 < 0x21) {\n    temp9 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (temp8 & 0xff);\n    temp1 = temp7 + input3;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp7,input3) + ((int)temp5 >> (temp8 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp9 = temp5 << (-temp8 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp9 = temp9 | 2;\n    }\n    temp5 = (int)temp5 >> (temp8 - 0x20 & 0xff);\n    temp4 = temp7 + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)CARRY4(temp7,temp5);\n  }\n  input2 = temp2 & 0x80000000;\n  temp8 = temp2;\n  if ((int)temp2 < 0) {\n    condition2 = temp9 == 0;\n    temp9 = -temp9;\n    temp8 = -temp4;\n    temp4 = -(uint)!condition2 - temp4;\n    temp8 = -(uint)(condition2 <= temp8) - temp2;\n  }\n  if (0xfffff < temp8) {\n    temp7 = temp6 - 1;\n    if (0x1fffff < temp8) {\n      temp7 = temp8 & 1;\n      temp8 = temp8 >> 1;\n      carry = (byte)temp4;\n      temp4 = (uint)(temp7 != 0) << 0x1f | temp4 >> 1;\n      temp9 = (uint)(carry & 1) << 0x1f | temp9 >> 1;\n      temp7 = temp6;\n      if (0xffbfffff < temp6 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition2 = 0x7fffffff < temp9;\n    if (temp9 == 0x80000000) {\n      condition2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(temp8 + temp7 * 0x100000 + (uint)CARRY4(temp4,(uint)condition2) | input2,\n                    temp4 + condition2);\n  }\n  condition1 = (temp9 & 0x80000000) != 0;\n  temp9 = temp9 << 1;\n  temp7 = temp4 * 2;\n  condition2 = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)condition1;\n  temp8 = temp8 * 2 + (uint)(condition2 || CARRY4(temp7,(uint)condition1));\n  temp7 = temp6 - 2;\n  if ((temp8 & 0x100000) != 0) goto LAB_080002a0;\n  temp5 = temp4;\n  temp6 = temp8;\n  if (temp8 == 0) {\n    temp5 = 0;\n    temp6 = temp4;\n  }\n  shiftedInput4 = LZCOUNT(temp6);\n  if (temp8 == 0) {\n    shiftedInput4 = shiftedInput4 + 0x20;\n  }\n  temp8 = shiftedInput4 - 0xb;\n  condition3 = SBORROW4(temp8,0x20);\n  temp4 = shiftedInput4 - 0x2b;\n  condition2 = (int)temp4 < 0;\n  condition1 = temp4 == 0;\n  if ((int)temp8 < 0x20) {\n    condition3 = SCARRY4(temp4,0xc);\n    shiftedInput4 = shiftedInput4 + -0x1f;\n    condition2 = shiftedInput4 < 0;\n    condition1 = shiftedInput4 == 0;\n    temp4 = temp8;\n    if (!condition1 && condition2 == condition3) {\n      temp5 = temp6 << (temp8 & 0xff);\n      temp6 = temp6 >> (0xcU - shiftedInput4 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp9 = 0x20 - temp4;\n  }\n  temp6 = temp6 << (temp4 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp6 = temp6 | temp5 >> (temp9 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp8 <= (int)temp7) {\n    return CONCAT44(temp6 + (temp7 - temp8) * 0x100000 | input2,temp5);\n  }\n  temp4 = ~(temp7 - temp8);\n  if ((int)temp4 < 0x1f) {\n    shiftedInput4 = temp4 - 0x13;\n    if (shiftedInput4 != 0 && shiftedInput4 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - shiftedInput4) & 0xff) | temp6 << (0xcU - shiftedInput4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input2 | temp6 >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | temp6 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,temp6 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_result_08000190",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftedInput2",
                "bVar2": "carry",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "iVar8": "shiftedInput4",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "uVar11": "temp8",
                "uVar12": "temp9",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_bitwise_operation_08000194",
            "code": "\nulonglong calculate_bitwise_operation_08000194(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int shift_counter_1;\n  byte carry_flag;\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  int shift_counter_2;\n  uint shifted_input_2;\n  uint temp_4;\n  uint shifted_input_4;\n  uint difference;\n  uint temp_5;\n  uint temp_6;\n  bool comparison_flag_1;\n  bool comparison_flag_2;\n  bool sign_flag;\n  \n  shifted_input_2 = input_2 << 1;\n  shifted_input_4 = input_4 << 1;\n  comparison_flag_1 = ((input_2 ^ input_4) & 0x7fffffff) == 0;\n  comparison_flag_2 = comparison_flag_1 && input_1 == input_3;\n  if (!comparison_flag_1 || input_1 != input_3) {\n    comparison_flag_2 = (shifted_input_2 | input_1) == 0;\n  }\n  if (!comparison_flag_2) {\n    comparison_flag_2 = (shifted_input_4 | input_3) == 0;\n  }\n  shift_counter_2 = (int)shifted_input_2 >> 0x15;\n  if (!comparison_flag_2) {\n    comparison_flag_2 = shift_counter_2 == -1;\n  }\n  shift_counter_1 = (int)shifted_input_4 >> 0x15;\n  if (!comparison_flag_2) {\n    comparison_flag_2 = shift_counter_1 == -1;\n  }\n  if (comparison_flag_2) {\n    if (shift_counter_2 == -1 || shift_counter_1 == -1) {\n      shifted_input_4 = input_4;\n      shifted_input_2 = input_3;\n      if (shift_counter_2 == -1) {\n        shifted_input_4 = input_2;\n        shifted_input_2 = input_1;\n      }\n      if (shift_counter_2 != -1 || shift_counter_1 != -1) {\n        input_3 = shifted_input_2;\n        input_4 = shifted_input_4;\n      }\n      comparison_flag_2 = (shifted_input_2 | shifted_input_4 << 0xc) == 0;\n      if (comparison_flag_2) {\n        comparison_flag_2 = (input_3 | input_4 << 0xc) == 0;\n      }\n      if (comparison_flag_2) {\n        comparison_flag_2 = shifted_input_4 == input_4;\n      }\n      if (!comparison_flag_2) {\n        shifted_input_4 = shifted_input_4 | 0x80000;\n      }\n      return CONCAT44(shifted_input_4,shifted_input_2);\n    }\n    if (((input_2 ^ input_4) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((shifted_input_2 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = input_4;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != input_4) {\n      return 0;\n    }\n    if (shifted_input_2 >> 0x15 == 0) {\n      comparison_flag_2 = (input_1 & 0x80000000) != 0;\n      shifted_input_4 = input_2 * 2 + (uint)comparison_flag_2;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)comparison_flag_2)) {\n        shifted_input_4 = shifted_input_4 | 0x80000000;\n      }\n      return CONCAT44(shifted_input_4,input_1 << 1);\n    }\n    if (shifted_input_2 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input_2 = shifted_input_2 >> 0x15;\n  shifted_input_4 = shifted_input_4 >> 0x15;\n  difference = shifted_input_4 - shifted_input_2;\n  comparison_flag_2 = difference != 0;\n  if (shifted_input_4 < shifted_input_2) {\n    difference = -difference;\n  }\n  temp_4 = input_1;\n  temp_3 = input_2;\n  if (comparison_flag_2 && shifted_input_2 <= shifted_input_4) {\n    shifted_input_2 = shifted_input_2 + difference;\n    temp_4 = input_3;\n    temp_3 = input_4;\n    input_3 = input_1;\n    input_4 = input_2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(temp_3,temp_4);\n  }\n  shifted_input_4 = temp_3 & 0xfffff | 0x100000;\n  if ((temp_3 & 0x80000000) != 0) {\n    comparison_flag_2 = temp_4 != 0;\n    temp_4 = -temp_4;\n    shifted_input_4 = -shifted_input_4 - (uint)comparison_flag_2;\n  }\n  temp_3 = input_4 & 0xfffff | 0x100000;\n  if ((input_4 & 0x80000000) != 0) {\n    comparison_flag_2 = input_3 != 0;\n    input_3 = -input_3;\n    temp_3 = -temp_3 - (uint)comparison_flag_2;\n  }\n  if (shifted_input_2 == difference) {\n    temp_3 = temp_3 ^ 0x100000;\n    if (shifted_input_2 == 0) {\n      shifted_input_4 = shifted_input_4 ^ 0x100000;\n      shifted_input_2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp_6 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    temp_5 = input_3 << (temp_6 & 0xff);\n    input_3 = input_3 >> (difference & 0xff);\n    temp_1 = temp_4 + input_3;\n    temp_2 = temp_3 << (temp_6 & 0xff);\n    temp_6 = temp_1 + temp_2;\n    shifted_input_4 = shifted_input_4 + CARRY4(temp_4,input_3) + ((int)temp_3 >> (difference & 0xff)) +\n            (uint)CARRY4(temp_1,temp_2);\n  }\n  else {\n    temp_5 = temp_3 << (-difference + 0x40 & 0xff);\n    if (input_3 != 0) {\n      temp_5 = temp_5 | 2;\n    }\n    temp_3 = (int)temp_3 >> (difference - 0x20 & 0xff);\n    temp_6 = temp_4 + temp_3;\n    shifted_input_4 = shifted_input_4 + ((int)temp_3 >> 0x1f) + (uint)CARRY4(temp_4,temp_3);\n  }\n  input_2 = shifted_input_4 & 0x80000000;\n  difference = shifted_input_4;\n  if ((int)shifted_input_4 < 0) {\n    comparison_flag_2 = temp_5 == 0;\n    temp_5 = -temp_5;\n    difference = -temp_6;\n    temp_6 = -(uint)!comparison_flag_2 - temp_6;\n    difference = -(uint)(comparison_flag_2 <= difference) - shifted_input_4;\n  }\n  if (0xfffff < difference) {\n    temp_4 = shifted_input_2 - 1;\n    if (0x1fffff < difference) {\n      shifted_input_4 = difference & 1;\n      difference = difference >> 1;\n      carry_flag = (byte)temp_6;\n      temp_6 = (uint)(shifted_input_4 != 0) << 0x1f | temp_6 >> 1;\n      temp_5 = (uint)(carry_flag & 1) << 0x1f | temp_5 >> 1;\n      temp_4 = shifted_input_2;\n      if (0xffbfffff < shifted_input_2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    comparison_flag_2 = 0x7fffffff < temp_5;\n    if (temp_5 == 0x80000000) {\n      comparison_flag_2 = (temp_6 & 1) != 0;\n    }\n    return CONCAT44(difference + temp_4 * 0x100000 + (uint)CARRY4(temp_6,(uint)comparison_flag_2) | input_2,\n                    temp_6 + comparison_flag_2);\n  }\n  comparison_flag_1 = (temp_5 & 0x80000000) != 0;\n  temp_5 = temp_5 << 1;\n  temp_4 = temp_6 * 2;\n  comparison_flag_2 = CARRY4(temp_6,temp_6);\n  temp_6 = temp_6 * 2 + (uint)comparison_flag_1;\n  difference = difference * 2 + (uint)(comparison_flag_2 || CARRY4(temp_4,(uint)comparison_flag_1));\n  temp_4 = shifted_input_2 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_080002a0;\n  temp_3 = temp_6;\n  shifted_input_2 = difference;\n  if (difference == 0) {\n    temp_3 = 0;\n    shifted_input_2 = temp_6;\n  }\n  shift_counter_2 = LZCOUNT(shifted_input_2);\n  if (difference == 0) {\n    shift_counter_2 = shift_counter_2 + 0x20;\n  }\n  temp_6 = shift_counter_2 - 0xb;\n  sign_flag = SBORROW4(temp_6,0x20);\n  difference = shift_counter_2 - 0x2b;\n  comparison_flag_2 = (int)difference < 0;\n  comparison_flag_1 = difference == 0;\n  if ((int)temp_6 < 0x20) {\n    sign_flag = SCARRY4(difference,0xc);\n    shift_counter_2 = shift_counter_2 + -0x1f;\n    comparison_flag_2 = shift_counter_2 < 0;\n    comparison_flag_1 = shift_counter_2 == 0;\n    difference = temp_6;\n    if (!comparison_flag_1 && comparison_flag_2 == sign_flag) {\n      temp_3 = shifted_input_2 << (temp_6 & 0xff);\n      shifted_input_2 = shifted_input_2 >> (0xcU - shift_counter_2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (comparison_flag_1 || comparison_flag_2 != sign_flag) {\n    temp_5 = 0x20 - difference;\n  }\n  shifted_input_2 = shifted_input_2 << (difference & 0xff);\n  if (comparison_flag_1 || comparison_flag_2 != sign_flag) {\n    shifted_input_2 = shifted_input_2 | temp_3 >> (temp_5 & 0xff);\n  }\n  if (comparison_flag_1 || comparison_flag_2 != sign_flag) {\n    temp_3 = temp_3 << (difference & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp_6 <= (int)temp_4) {\n    return CONCAT44(shifted_input_2 + (temp_4 - temp_6) * 0x100000 | input_2,temp_3);\n  }\n  difference = ~(temp_4 - temp_6);\n  if ((int)difference < 0x1f) {\n    shift_counter_2 = difference - 0x13;\n    if (shift_counter_2 != 0 && shift_counter_2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(shifted_input_4,temp_3 >> (0x20 - (0xcU - shift_counter_2) & 0xff) | shifted_input_2 << (0xcU - shift_counter_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input_2 | shifted_input_2 >> (difference & 0xff),\n                    temp_3 >> (difference & 0xff) | shifted_input_2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(shifted_input_4,shifted_input_2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_bitwise_operation_08000194",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shift_counter_1",
                "bVar2": "carry_flag",
                "uVar3": "temp_1",
                "uVar4": "temp_2",
                "uVar5": "temp_3",
                "iVar6": "shift_counter_2",
                "uVar7": "shifted_input_2",
                "uVar8": "temp_4",
                "uVar9": "shifted_input_4",
                "uVar10": "difference",
                "uVar11": "temp_5",
                "uVar12": "temp_6",
                "bVar13": "comparison_flag_1",
                "bVar14": "comparison_flag_2",
                "bVar15": "sign_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "convert_to64_bit_0800040c",
            "code": "\nulonglong convertTo64Bit_0800040c(uint input)\n\n{\n  uint result;\n  uint shiftAmount;\n  int count;\n  uint adjustedCount;\n  uint shiftValue;\n  bool isNegative;\n  bool isZero;\n  bool isSubtraction;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  count = LZCOUNT(input);\n  adjustedCount = count + 0x15;\n  isSubtraction = SBORROW4(adjustedCount,0x20);\n  shiftAmount = count - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (adjustedCount < 0x20) {\n    isSubtraction = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = count + 1 == 0;\n    shiftAmount = adjustedCount;\n    if (!isZero && isSubtraction == false) {\n      result = input << adjustedCount;\n      input = input >> (0xcU - (count + 1) & 0xff);\n      goto endOfShiftLabel;\n    }\n  }\n  if (isZero || isNegative != isSubtraction) {\n    shiftValue = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isZero || isNegative != isSubtraction) {\n    input = input | 0U >> (shiftValue & 0xff);\n  }\n  if (isZero || isNegative != isSubtraction) {\n    result = 0 << (shiftAmount & 0xff);\n  }\nendOfShiftLabel:\n  if (adjustedCount < 0x433) {\n    return CONCAT44(input + (0x432 - adjustedCount) * 0x100000,result);\n  }\n  shiftAmount = ~(0x432 - adjustedCount);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  count = shiftAmount - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    result >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - count) & 0xff) | input << (0xcU - count & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "convert_to64_bit_0800040c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shiftAmount",
                "iVar3": "count",
                "uVar4": "adjustedCount",
                "in_r12": "shiftValue",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isSubtraction",
                "LAB_08000318": "endOfShiftLabel"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "bit_shift_and_concat_0800042c",
            "code": "\nulonglong bitShiftAndConcat_0800042c(uint input)\n\n{\n  uint counter1;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint temp1;\n  uint signBit;\n  uint mask;\n  bool shiftFlag;\n  bool zeroFlag;\n  bool carryFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  counter1 = 0;\n  leadingZeros = LZCOUNT(absInput);\n  temp1 = leadingZeros + 0x15;\n  carryFlag = SBORROW4(temp1,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  shiftFlag = (int)shiftAmount < 0;\n  zeroFlag = shiftAmount == 0;\n  if (temp1 < 0x20) {\n    carryFlag = SCARRY4(shiftAmount,0xc);\n    shiftFlag = false;\n    zeroFlag = leadingZeros + 1 == 0;\n    shiftAmount = temp1;\n    if (!zeroFlag && carryFlag == false) {\n      counter1 = absInput << temp1;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (zeroFlag || shiftFlag != carryFlag) {\n    mask = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (zeroFlag || shiftFlag != carryFlag) {\n    absInput = absInput | 0U >> (mask & 0xff);\n  }\n  if (zeroFlag || shiftFlag != carryFlag) {\n    counter1 = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (temp1 < 0x433) {\n    return CONCAT44(absInput + (0x432 - temp1) * 0x100000 | signBit,counter1);\n  }\n  shiftAmount = ~(0x432 - temp1);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absInput >> (shiftAmount & 0xff),\n                    counter1 >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,counter1 >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "bit_shift_and_concat_0800042c",
                "param_1": "input",
                "uVar1": "counter1",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "temp1",
                "uVar6": "signBit",
                "in_r12": "mask",
                "bVar7": "shiftFlag",
                "bVar8": "zeroFlag",
                "bVar9": "carryFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong product;\n  longlong temp;\n  uint result1;\n  uint result2;\n  int result3;\n  uint result4;\n  uint result5;\n  uint result6;\n  uint result7;\n  bool check1;\n  bool check2;\n  bool check3;\n  ulonglong concatenated;\n  \n  concatenated = CONCAT44(input2,input1);\n  result6 = 0x7ff;\n  result2 = input2 >> 0x14 & 0x7ff;\n  check1 = result2 == 0;\n  if (!check1) {\n    result5 = input4 >> 0x14 & 0x7ff;\n    check1 = result5 == 0;\n  }\n  if (!check1) {\n    check1 = result2 == 0x7ff;\n  }\n  if (!check1) {\n    check1 = result5 == 0x7ff;\n  }\n  if (check1) {\n    concatenated = FUN_080006d4();\n  }\n  result1 = (uint)(concatenated >> 0x20);\n  result3 = result2 + result5;\n  result2 = result1 ^ input4;\n  result1 = result1 & ~(result6 << 0x15);\n  input4 = input4 & ~(result6 << 0x15);\n  check1 = ((uint)concatenated | result1 << 0xc) == 0;\n  if (!check1) {\n    check1 = (input3 | input4 << 0xc) == 0;\n  }\n  result1 = result1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (check1) {\n    input3 = (uint)concatenated | input3;\n    input4 = (result2 & 0x80000000 | result1) ^ input4;\n    result2 = result6 >> 1;\n    check3 = SBORROW4(result3,result2);\n    result4 = result3 - result2;\n    check1 = result4 == 0;\n    result1 = result4;\n    if (!check1 && (int)result2 <= result3) {\n      check3 = SBORROW4(result6,result4);\n      result1 = result6 - result4;\n      check1 = result6 == result4;\n    }\n    if (!check1 && (int)result1 < 0 == check3) {\n      input4 = input4 | result4 * 0x100000;\n    }\n    if (!check1 && (int)result1 < 0 == check3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    result6 = 0;\n    check3 = SBORROW4(result4,1);\n    result4 = result4 - 1;\n    check1 = result4 == 0;\n    result2 = result4;\n  }\n  else {\n    product = (concatenated & 0xffffffff) * (ulonglong)input3;\n    concatenated = (concatenated & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)result1 * (ulonglong)input3 + (product >> 0x20);\n    result7 = (uint)concatenated;\n    temp = (ulonglong)result1 * (ulonglong)input4 + (concatenated >> 0x20);\n    result6 = (uint)temp;\n    result1 = (uint)((ulonglong)temp >> 0x20);\n    if ((int)product != 0) {\n      result7 = result7 | 1;\n    }\n    result4 = (result3 + -0x3ff) - (uint)(result1 < 0x200);\n    if (result1 < 0x200) {\n      check1 = (result7 & 0x80000000) != 0;\n      result7 = result7 << 1;\n      temp = CONCAT44(result1 * 2 + (uint)(CARRY4(result6,result6) || CARRY4(result6 * 2,(uint)check1)),\n                       result6 * 2 + (uint)check1);\n    }\n    input4 = result2 & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    input3 = (uint)temp << 0xb | result7 >> 0x15;\n    result6 = result7 * 0x800;\n    check2 = 0xfc < result4;\n    check3 = SBORROW4(result4,0xfd);\n    result1 = result4 - 0xfd;\n    check1 = result1 == 0;\n    result2 = result1;\n    if (check2 && !check1) {\n      check2 = 0x6ff < result1;\n      check3 = SBORROW4(result1,0x700);\n      result2 = result4 - 0x7fd;\n      check1 = result1 == 0x700;\n    }\n    if (!check2 || check1) {\n      check1 = 0x7fffffff < result6;\n      if (result6 == 0x80000000) {\n        check1 = (result7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + result4 * 0x100000 + (uint)CARRY4(input3,(uint)check1),input3 + check1\n                     );\n    }\n  }\n  if (!check1 && (int)result2 < 0 == check3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  check2 = SCARRY4(result4,0x36);\n  check1 = (int)(result4 + 0x36) < 0;\n  check3 = result4 == 0xffffffca;\n  if (check3 || check1 != check2) {\n    input3 = 0;\n  }\n  if (check3 || check1 != check2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (check3 || check1 != check2) {\n    return CONCAT44(input4,input3);\n  }\n  result2 = -result4;\n  result1 = result2 - 0x20;\n  if (0x1f < (int)result2) {\n    result4 = input3 >> (result1 & 0xff) | input4 << (0x20 - result1 & 0xff);\n    result2 = (input4 >> (result1 & 0xff) & ~((input4 & 0x80000000) >> (result1 & 0xff))) -\n            ((int)result4 >> 0x1f);\n    if ((result6 | input3 << (0x20 - result1 & 0xff) | result4 << 1) == 0) {\n      result2 = result2 & ~(result4 >> 0x1f);\n    }\n    return CONCAT44(input4,result2) & 0x80000000ffffffff;\n  }\n  result3 = result2 - 0x14;\n  if (result3 == 0 || result3 < 0 != SCARRY4(result1,0xc)) {\n    result7 = input3 << (result4 + 0x20 & 0xff);\n    result1 = input3 >> (result2 & 0xff) | input4 << (result4 + 0x20 & 0xff);\n    result4 = result1 + -((int)result7 >> 0x1f);\n    if ((result6 | result7 << 1) == 0) {\n      result4 = result4 & ~(result7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (result2 & 0xff)) +\n                    (uint)CARRY4(result1,-((int)result7 >> 0x1f)),result4);\n  }\n  result2 = 0xc - result3;\n  result4 = input3 << (result2 & 0xff);\n  result2 = input3 >> (0x20 - result2 & 0xff) | input4 << (result2 & 0xff);\n  result1 = result2 + -((int)result4 >> 0x1f);\n  if ((result6 | result4 << 1) == 0) {\n    result1 = result1 & ~(result4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(result2,-((int)result4 >> 0x1f)),result1);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "product",
                "lVar2": "temp",
                "uVar3": "result1",
                "uVar4": "result2",
                "iVar5": "result3",
                "uVar6": "result4",
                "unaff_r5": "result5",
                "uVar7": "result6",
                "uVar8": "result7",
                "bVar9": "check1",
                "bVar10": "check2",
                "bVar11": "check3",
                "uVar12": "concatenated"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "reverse_and_improve_080006d4",
            "code": "\nulonglong reverse_and_improve_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint result2;\n  uint result1;\n  uint bit5;\n  bool is_zero;\n  \n  result2 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && result2 != bit5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      result1 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | result1;\n      if (result2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      result2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(result2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  result1 = input2;\n  if (((!is_zero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((result2 != bit5 || (input1 = input3, result1 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(result1,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "reverse_and_improve_080006d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "result2",
                "uVar3": "result1",
                "in_r12": "bit5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 exponentBits,uint combinedBits,uint fractionalBits,uint signBit)\n\n{\n  uint mantissa;\n  uint exponent;\n  uint fractional;\n  uint difference;\n  uint shiftedDifference;\n  uint temp1;\n  uint result;\n  int differenceSign;\n  uint shiftedExponent;\n  uint unaff_r5;\n  uint shiftedMantissa;\n  uint newExponent;\n  uint comparison;\n  uint carryFlag;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 combinedResult;\n  \n  combinedResult = CONCAT44(combinedBits,exponentBits);\n  carryFlag = 0x7ff;\n  result = combinedBits >> 0x14 & 0x7ff;\n  flag1 = result == 0;\n  if (!flag1) {\n    unaff_r5 = signBit >> 0x14 & 0x7ff;\n    flag1 = unaff_r5 == 0;\n  }\n  if (!flag1) {\n    flag1 = result == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = unaff_r5 == 0x7ff;\n  }\n  if (flag1) {\n    combinedResult = FUN_080008ba();\n  }\n  shiftedExponent = (uint)((ulonglong)combinedResult >> 0x20);\n  newExponent = (uint)combinedResult;\n  differenceSign = result - unaff_r5;\n  if ((fractionalBits | signBit << 0xc) == 0) {\n    result = (shiftedExponent ^ signBit) & 0x80000000 | shiftedExponent & 0xfffff;\n    flag3 = SCARRY4(differenceSign,carryFlag >> 1);\n    shiftedExponent = differenceSign + (carryFlag >> 1);\n    flag1 = (int)shiftedExponent < 0;\n    flag2 = shiftedExponent == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(carryFlag,shiftedExponent);\n      flag1 = (int)(carryFlag - shiftedExponent) < 0;\n      flag2 = carryFlag == shiftedExponent;\n    }\n    if (!flag2 && flag1 == flag3) {\n      result = result | shiftedExponent * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(result,newExponent);\n    }\n    result = result | 0x100000;\n    carryFlag = 0;\n    flag2 = SBORROW4(shiftedExponent,1);\n    shiftedExponent = shiftedExponent - 1;\n    flag1 = shiftedExponent == 0;\n    fractional = shiftedExponent;\n  }\n  else {\n    fractional = (signBit << 0xc) >> 4 | 0x10000000 | fractionalBits >> 0x18;\n    carryFlag = fractionalBits << 8;\n    shiftedMantissa = (shiftedExponent << 0xc) >> 4 | 0x10000000 | newExponent >> 0x18;\n    newExponent = newExponent * 0x100;\n    result = (shiftedExponent ^ signBit) & 0x80000000;\n    flag1 = fractional <= shiftedMantissa;\n    if (shiftedMantissa == fractional) {\n      flag1 = carryFlag <= newExponent;\n    }\n    differenceSign = differenceSign + (uint)flag1;\n    shiftedExponent = differenceSign + 0x3fd;\n    if (flag1 == false) {\n      fractional = fractional >> 1;\n      carryFlag = (uint)((fractionalBits >> 0x18 & 1) != 0) << 0x1f | carryFlag >> 1;\n    }\n    comparison = newExponent - carryFlag;\n    shiftedMantissa = (shiftedMantissa - fractional) - (uint)(newExponent < carryFlag);\n    difference = fractional >> 1;\n    mantissa = (uint)((fractional & 1) != 0) << 0x1f | carryFlag >> 1;\n    newExponent = 0x100000;\n    fractional = 0x80000;\n    while( true ) {\n      flag1 = mantissa <= comparison;\n      if (difference < shiftedMantissa || shiftedMantissa - difference < (uint)flag1) {\n        comparison = comparison - mantissa;\n        newExponent = newExponent | fractional;\n        shiftedMantissa = (shiftedMantissa - difference) - (uint)!flag1;\n      }\n      shiftedDifference = difference >> 1;\n      mantissa = (uint)((difference & 1) != 0) << 0x1f | mantissa >> 1;\n      flag2 = mantissa <= comparison;\n      flag1 = shiftedMantissa - shiftedDifference < (uint)flag2;\n      carryFlag = shiftedMantissa;\n      if (shiftedDifference < shiftedMantissa || flag1) {\n        comparison = comparison - mantissa;\n        carryFlag = (shiftedMantissa - shiftedDifference) - (uint)!flag2;\n      }\n      if (shiftedDifference < shiftedMantissa || flag1) {\n        newExponent = newExponent | fractional >> 1;\n      }\n      shiftedMantissa = difference >> 2;\n      exponent = (uint)((shiftedDifference & 1) != 0) << 0x1f | mantissa >> 1;\n      flag2 = exponent <= comparison;\n      flag1 = carryFlag - shiftedMantissa < (uint)flag2;\n      shiftedDifference = carryFlag;\n      if (shiftedMantissa < carryFlag || flag1) {\n        comparison = comparison - exponent;\n        shiftedDifference = (carryFlag - shiftedMantissa) - (uint)!flag2;\n      }\n      if (shiftedMantissa < carryFlag || flag1) {\n        newExponent = newExponent | fractional >> 2;\n      }\n      temp1 = difference >> 3;\n      mantissa = (uint)((shiftedMantissa & 1) != 0) << 0x1f | exponent >> 1;\n      flag2 = mantissa <= comparison;\n      flag1 = shiftedDifference - temp1 < (uint)flag2;\n      shiftedMantissa = shiftedDifference;\n      if (temp1 < shiftedDifference || flag1) {\n        comparison = comparison - mantissa;\n        shiftedMantissa = (shiftedDifference - temp1) - (uint)!flag2;\n      }\n      if (temp1 < shiftedDifference || flag1) {\n        newExponent = newExponent | fractional >> 3;\n      }\n      carryFlag = shiftedMantissa | comparison;\n      if (carryFlag == 0) break;\n      shiftedMantissa = shiftedMantissa << 4 | comparison >> 0x1c;\n      comparison = comparison << 4;\n      difference = difference & 0xfffffff8 | mantissa >> 0x1d;\n      mantissa = (exponent >> 1) << 3;\n      fractional = fractional >> 4;\n      if (fractional == 0) {\n        temp1 = difference;\n        if ((result & 0x100000) != 0) goto LAB_0800086a;\n        result = result | newExponent;\n        newExponent = 0;\n        fractional = 0x80000000;\n      }\n    }\n    if ((result & 0x100000) == 0) {\n      result = result | newExponent;\n      newExponent = 0;\n    }\nLAB_0800086a:\n    flag3 = 0xfc < shiftedExponent;\n    flag2 = SBORROW4(shiftedExponent,0xfd);\n    difference = differenceSign + 0x300;\n    flag1 = difference == 0;\n    fractional = difference;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < difference;\n      flag2 = SBORROW4(difference,0x700);\n      fractional = differenceSign - 0x400;\n      flag1 = difference == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp1 <= shiftedMantissa;\n      if (shiftedMantissa == temp1) {\n        flag1 = mantissa <= comparison;\n      }\n      if (shiftedMantissa == temp1 && comparison == mantissa) {\n        flag1 = (newExponent & 1) != 0;\n      }\n      return CONCAT44(result + shiftedExponent * 0x100000 + (uint)CARRY4(newExponent,(uint)flag1),newExponent + flag1);\n    }\n  }\n  if (!flag1 && (int)fractional < 0 == flag2) {\n    return (ulonglong)(result & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(shiftedExponent,0x36);\n  flag1 = (int)(shiftedExponent + 0x36) < 0;\n  flag2 = shiftedExponent == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    newExponent = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    result = result & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(result,newExponent);\n  }\n  fractional = -shiftedExponent;\n  shiftedMantissa = fractional - 0x20;\n  if (0x1f < (int)fractional) {\n    fractional = newExponent >> (shiftedMantissa & 0xff) | result << (0x20 - shiftedMantissa & 0xff);\n    shiftedExponent = (result >> (shiftedMantissa & 0xff) & ~((result & 0x80000000) >> (shiftedMantissa & 0xff))) -\n            ((int)fractional >> 0x1f);\n    if ((carryFlag | newExponent << (0x20 - shiftedMantissa & 0xff) | fractional << 1) == 0) {\n      shiftedExponent = shiftedExponent & ~(fractional >> 0x1f);\n    }\n    return CONCAT44(result,shiftedExponent) & 0x80000000ffffffff;\n  }\n  differenceSign = fractional - 0x14;\n  if (differenceSign != 0 && differenceSign < 0 == SCARRY4(shiftedMantissa,0xc)) {\n    shiftedExponent = 0xc - differenceSign;\n    fractional = newExponent << (shiftedExponent & 0xff);\n    newExponent = newExponent >> (0x20 - shiftedExponent & 0xff) | result << (shiftedExponent & 0xff);\n    shiftedExponent = newExponent + -((int)fractional >> 0x1f);\n    if ((carryFlag | fractional << 1) == 0) {\n      shiftedExponent = shiftedExponent & ~(fractional >> 0x1f);\n    }\n    return CONCAT44((result & 0x80000000) + (uint)CARRY4(newExponent,-((int)fractional >> 0x1f)),shiftedExponent);\n  }\n  shiftedMantissa = newExponent << (shiftedExponent + 0x20 & 0xff);\n  newExponent = newExponent >> (fractional & 0xff) | result << (shiftedExponent + 0x20 & 0xff);\n  shiftedExponent = newExponent + -((int)shiftedMantissa >> 0x1f);\n  if ((carryFlag | shiftedMantissa << 1) == 0) {\n    shiftedExponent = shiftedExponent & ~(shiftedMantissa >> 0x1f);\n  }\n  return CONCAT44((result & 0x80000000) +\n                  ((result & 0x7fffffff) >> (fractional & 0xff)) +\n                  (uint)CARRY4(newExponent,-((int)shiftedMantissa >> 0x1f)),shiftedExponent);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "exponentBits",
                "param_2": "combinedBits",
                "param_3": "fractionalBits",
                "param_4": "signBit",
                "uVar1": "mantissa",
                "uVar2": "exponent",
                "uVar3": "fractional",
                "uVar4": "difference",
                "uVar5": "shiftedDifference",
                "uVar6": "temp1",
                "uVar7": "result",
                "iVar8": "differenceSign",
                "uVar9": "shiftedExponent",
                "uVar10": "shiftedMantissa",
                "uVar11": "newExponent",
                "uVar12": "comparison",
                "uVar13": "carryFlag",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "uVar17": "combinedResult"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "calculate_double_precision_080008ba",
            "code": "\nulonglong calculateDoublePrecision_080008ba(uint firstOperand,uint secondOperand,uint thirdOperand,uint fourthOperand)\n\n{\n  uint firstBit;\n  uint r4;\n  uint in_r12AndOperand4;\n  uint tempSecondOperand;\n  uint in_r12;\n  bool isZero;\n  \n  in_r12AndOperand4 = in_r12 & fourthOperand >> 0x14;\n  tempSecondOperand = secondOperand;\n  if (r4 != in_r12 || in_r12AndOperand4 != in_r12) {\n    if (r4 == in_r12) {\n      if (((firstOperand | secondOperand << 0xc) == 0) && (firstOperand = thirdOperand, tempSecondOperand = fourthOperand, in_r12AndOperand4 != in_r12)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((secondOperand ^ fourthOperand) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (in_r12AndOperand4 == in_r12) {\n      firstOperand = thirdOperand;\n      tempSecondOperand = fourthOperand;\n      if ((thirdOperand | fourthOperand << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((secondOperand ^ fourthOperand) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (firstOperand | secondOperand << 1) == 0;\n      if (!isZero) {\n        isZero = (thirdOperand | fourthOperand << 1) == 0;\n      }\n      if (!isZero) {\n        if (r4 == 0) {\n          tempSecondOperand = secondOperand & 0x80000000;\n          do {\n            firstBit = firstOperand & 0x80000000;\n            firstOperand = firstOperand << 1;\n            secondOperand = secondOperand * 2 + (uint)(firstBit != 0);\n          } while ((secondOperand & 0x100000) == 0);\n          secondOperand = secondOperand | tempSecondOperand;\n          if (in_r12AndOperand4 != 0) {\n            return CONCAT44(secondOperand,firstOperand);\n          }\n        }\n        do {\n          tempSecondOperand = thirdOperand & 0x80000000;\n          thirdOperand = thirdOperand << 1;\n          fourthOperand = fourthOperand * 2 + (uint)(tempSecondOperand != 0);\n        } while ((fourthOperand & 0x100000) == 0);\n        return CONCAT44(secondOperand,firstOperand);\n      }\n      if ((firstOperand | secondOperand << 1) != 0) goto LAB_0800072c;\n      if ((thirdOperand | fourthOperand << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(tempSecondOperand,firstOperand) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "calculate_double_precision_080008ba",
                "param_1": "firstOperand",
                "param_2": "secondOperand",
                "param_3": "thirdOperand",
                "param_4": "fourthOperand",
                "uVar1": "firstBit",
                "unaff_r4": "r4",
                "uVar2": "in_r12AndOperand4",
                "uVar3": "tempSecondOperand",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_equality_and_comparison_0800092c",
            "code": "\nuint checkEqualityAndComparison_0800092c(uint num1,uint num2,uint num3,uint num4)\n\n{\n  uint result;\n  bool isZero;\n  bool isNegative;\n  \n  if (((int)(num2 << 1) >> 0x15 == -1 || (int)(num4 << 1) >> 0x15 == -1) &&\n     ((((int)(num2 << 1) >> 0x15 == -1 && ((num1 | num2 << 0xc) != 0)) ||\n      (((int)(num4 << 1) >> 0x15 == -1 && ((num3 | num4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (num1 | num2 << 1) == 0;\n  if (isZero) {\n    isZero = (num3 | num4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = num2 == num4;\n  }\n  if (isZero) {\n    isZero = num1 == num3;\n  }\n  if (!isZero) {\n    result = num2 ^ num4;\n    isZero = result == 0;\n    if (-1 < (int)result) {\n      isZero = num2 == num4;\n    }\n    isNegative = -1 < (int)result && num4 <= num2;\n    if (isZero) {\n      isNegative = num3 <= num1;\n    }\n    num4 = (int)num4 >> 0x1f;\n    if (!isNegative) {\n      num4 = ~num4;\n    }\n    return num4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_equality_and_comparison_0800092c",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "result",
                "bVar2": "isZero",
                "bVar3": "isNegative"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid executeFunction_080009a8(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080009b8(param3,param4,param1,param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_function_080009b8",
            "code": "\nundefined4 initializeFunction_080009b8(undefined4 inputParameter)\n\n{\n  FUN_0800092c();\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_function_080009b8",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_zero_080009c8",
            "code": "\nbool checkZero_080009c8(void)\n\n{\n  char inputCharacter;\n  \n  FUN_080009b8();\n  return inputCharacter != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_zero_080009c8",
                "in_ZR": "inputCharacter"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_end_of_string_080009dc",
            "code": "\nbool isEndOfString_080009dc(void)\n\n{\n  char currentCharacter;\n  \n  FUN_080009b8();\n  return currentCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_end_of_string_080009dc",
                "in_CY": "currentCharacter"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_condition_080009f0",
            "code": "\nbool checkCondition_080009f0(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_080009b8();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_condition_080009f0",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_condition_and_return_08000a04",
            "code": "\nbool checkConditionAndReturn_08000a04(void)\n\n{\n  undefined isZeroResult;\n  undefined isCarry;\n  \n  FUN_080009a8();\n  return !(bool)isCarry || (bool)isZeroResult;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_condition_and_return_08000a04",
                "in_ZR": "isZeroResult",
                "in_CY": "isCarry"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "is_null_terminated_string_08000a18",
            "code": "\nbool is_null_terminated_string_08000a18(void)\n\n{\n  char character;\n  \n  FUN_080009a8();\n  return character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "is_null_terminated_string_08000a18",
                "in_CY": "character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_conditions_08000a2c",
            "code": "\nundefined4 check_conditions_08000a2c(uint input_1,int input_2,uint input_3,int input_4)\n\n{\n  if ((((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0)) &&\n     (((input_4 << 1) >> 0x15 != -1 || ((input_3 | input_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_conditions_08000a2c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "convert_to_fixed_point_08000a58",
            "code": "\nuint convertToFixedPoint_08000a58(uint input_value,uint scaling_factor)\n\n{\n  uint shifted_scaling_factor;\n  int adjusted_scaling_factor;\n  uint threshold;\n  \n  adjusted_scaling_factor = scaling_factor * 2 + 0x200000;\n  if (scaling_factor * 2 < 0xffe00000) {\n    if (-1 < adjusted_scaling_factor) {\n      return 0;\n    }\n    shifted_scaling_factor = adjusted_scaling_factor >> 0x15;\n    threshold = -shifted_scaling_factor - 0x3e1;\n    if (shifted_scaling_factor < 0xfffffc20 && threshold != 0) {\n      shifted_scaling_factor = (scaling_factor << 0xb | 0x80000000 | input_value >> 0x15) >> (threshold & 0xff);\n      if ((scaling_factor & 0x80000000) != 0) {\n        shifted_scaling_factor = -shifted_scaling_factor;\n      }\n      return shifted_scaling_factor;\n    }\n  }\n  else if ((input_value | scaling_factor << 0xc) != 0) {\n    return 0;\n  }\n  scaling_factor = scaling_factor & 0x80000000;\n  if (scaling_factor == 0) {\n    scaling_factor = 0x7fffffff;\n  }\n  return scaling_factor;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "convert_to_fixed_point_08000a58",
                "param_1": "input_value",
                "param_2": "scaling_factor",
                "uVar1": "shifted_scaling_factor",
                "iVar2": "adjusted_scaling_factor",
                "uVar3": "threshold"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "validate_division_result_08000aa8",
            "code": "\nuint validate_division_result_08000aa8(uint dividend,uint divisor)\n\n{\n  int product;\n  uint shifted_result;\n  \n  if ((divisor & 0x80000000) != 0) {\n    return 0;\n  }\n  product = divisor * 2 + 0x200000;\n  if (divisor * 2 < 0xffe00000) {\n    if (-1 < product) {\n      return 0;\n    }\n    shifted_result = -(product >> 0x15) - 0x3e1;\n    if (-1 < (int)shifted_result) {\n      return (divisor << 0xb | 0x80000000 | dividend >> 0x15) >> (shifted_result & 0xff);\n    }\n  }\n  else if ((dividend | divisor << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "validate_division_result_08000aa8",
                "param_1": "dividend",
                "param_2": "divisor",
                "iVar1": "product",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "initiate_software_interrupt_08000ae8",
            "code": "\nvoid initiateSoftwareInterrupt_08000ae8(void)\n\n{\n  performSoftwareInterrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "initiate_software_interrupt_08000ae8",
                "software_interrupt": "performSoftwareInterrupt"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_function_08000aec",
            "code": "\nundefined4 executeFunction_08000aec(undefined4 inputParam,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 userParam)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,inputParam,0,0,userParam);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "inputParam",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "userParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "perform_operation_08000b08",
            "code": "\nvoid performOperation_08000b08(int inputCondition,int inputValue)\n\n{\n  if ((inputCondition == 1) && (inputValue == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "perform_operation_08000b08",
                "param_1": "inputCondition",
                "param_2": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_08000bcc",
            "code": "\nvoid initializeOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "process_data_08000cd0",
            "code": "\nvoid processData_08000cd0(void)\n\n{\n  uint result1;\n  undefined4 value1;\n  int status;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined8 result2;\n  \n  result1 = FUN_080058e0();\n  if (DAT_200001b4 < result1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    result2 = FUN_080015f8(&DAT_2000024c,0);\n    value2 = (undefined4)((ulonglong)result2 >> 0x20);\n    value1 = (undefined4)result2;\n    DAT_20000188 = value1;\n    DAT_2000018c = value2;\n    status = FUN_080009c8(value1,value2,0,0x40c38800);\n    if (((status != 0) || (status = FUN_080009c8(value1,value2,0,0x40c38880), status != 0)) ||\n       (status = FUN_080009c8(value1,value2,0,0x40c38900), status != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  result1 = FUN_080058e0();\n  value1 = DAT_20000060;\n  if (DAT_200001b0 < result1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      status = FUN_08005890(DAT_20000060);\n      FUN_08005848(value1,status == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,value3,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,value4,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,value5,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  value2 = DAT_2000018c;\n  value1 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    status = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (status == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        result2 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)result2 >> 0x20),0,0,result2);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    status = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (status != 0) {\n      result2 = FUN_080058e0();\n      DAT_20000254 = (int)result2 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)result2 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    result1 = FUN_080058e0();\n    if (DAT_20000254 < result1) {\n      status = FUN_080058e0();\n      DAT_20000254 = status + 9000;\n      result2 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)result2 >> 0x20);\n      DAT_20000240 = (undefined4)result2;\n      result2 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)result2 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)result2 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    result2 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)result2 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)result2 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    status = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (status != 0) {\n      status = FUN_080058e0();\n      DAT_20000180 = status + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    result1 = FUN_080058e0();\n    if (DAT_20000180 < result1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    status = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (status != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    status = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((status == 0) && (status = FUN_080009c8(value1,value2,0,0x40c38880), status == 0)) &&\n       (status = FUN_080009c8(value1,value2,0,0x40c38900), status == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    status = FUN_08005754(DAT_20000068);\n    if (status == 0) {\n      status = FUN_080058e0();\n      if (0x32 < (uint)(status - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    status = FUN_08005754(DAT_20000068);\n    if (status == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (status = FUN_08005754(DAT_20000068), status != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    status = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(status - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    result2 = FUN_0800040c(status - DAT_2000025c);\n    status = FUN_080009dc((int)result2,(int)((ulonglong)result2 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (status == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "process_data_08000cd0",
                "uVar1": "result1",
                "uVar2": "value1",
                "iVar3": "status",
                "uVar4": "value2",
                "extraout_r1": "value3",
                "extraout_r1_00": "value4",
                "extraout_r1_01": "value5",
                "uVar5": "result2"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_params_08001294",
            "code": "\nvoid setParams_08001294(int objPtr,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(objPtr + 0x18) = value1;\n  *(undefined *)(objPtr + 0x19) = value2;\n  *(undefined *)(objPtr + 0x1a) = value3;\n  *(undefined *)(objPtr + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_params_08001294",
                "param_1": "objPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_operations_080012a2",
            "code": "\nvoid executeOperations_080012a2(int baseAddress)\n\n{\n  FUN_08005848(*(undefined *)(baseAddress + 10),0);\n  FUN_08005848(*(undefined *)(baseAddress + 10),1);\n  FUN_08005848(*(undefined *)(baseAddress + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_operations_080012a2",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid processData_080012c0(int dataPointer,int inputValue)\n\n{\n  uint counter;\n  \n  for (counter = 0; (int)counter < 4; counter = counter + 1) {\n    FUN_08005848(*(undefined *)(dataPointer + counter + 0xb),inputValue >> (counter & 0xff) & 1);\n  }\n  FUN_080012a2(dataPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "dataPointer",
                "param_2": "inputValue",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid process_data_080012e8(int data_ptr,int bitmask)\n\n{\n  uint i;\n  \n  for (i = 0; (int)i < 8; i = i + 1) {\n    FUN_08005848(*(undefined *)(data_ptr + i + 0xb),bitmask >> (i & 0xff) & 1);\n  }\n  FUN_080012a2(data_ptr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "data_ptr",
                "param_2": "bitmask",
                "uVar1": "i"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "process_data_08001310",
            "code": "\nvoid process_data_08001310(int data_ptr,uint data_size,undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08005848(*(undefined *)(data_ptr + 8),arg1,arg1,arg2,arg2);\n  if (*(char *)(data_ptr + 9) != -1) {\n    FUN_08005848(*(char *)(data_ptr + 9),0);\n  }\n  if ((*(byte *)(data_ptr + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data_ptr,data_size >> 4);\n    FUN_080012c0(data_ptr,data_size);\n    return;\n  }\n  FUN_080012e8(data_ptr,data_size);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "process_data_08001310",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_and_return_one_0800134e",
            "code": "\nundefined4 initializeAndReturnOne_0800134e(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08001310(input1,input2,1,input4,input4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_and_return_one_0800134e",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_function_0800135a",
            "code": "\nvoid initializeFunction_0800135a(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08001310(inputParam1,1,0,inputParam4,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "update_function_08001366",
            "code": "\nvoid updateFunction_08001366(int inputParam,char charParam,uint sizeParam,undefined4 undefinedParam)\n\n{\n  char firstChar;\n  \n  if (3 < sizeParam) {\n    sizeParam = 3;\n  }\n  if ((int)(uint)*(byte *)(inputParam + 0x17) <= (int)sizeParam) {\n    sizeParam = *(byte *)(inputParam + 0x17) - 1 & 0xff;\n  }\n  firstChar = *(char *)(sizeParam + inputParam + 0x18);\n  FUN_08001310(inputParam,charParam + firstChar | 0x80,0,firstChar,undefinedParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "update_function_08001366",
                "param_1": "inputParam",
                "param_2": "charParam",
                "param_3": "sizeParam",
                "param_4": "undefinedParam",
                "cVar1": "firstChar"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "set_flag_and_call_function_0800138e",
            "code": "\nvoid setFlagAndCallFunction_0800138e(int dataPointer,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 unusedParam3)\n\n{\n  byte currentFlagValue;\n  \n  currentFlagValue = *(byte *)(dataPointer + 0x14);\n  *(byte *)(dataPointer + 0x14) = currentFlagValue | 4;\n  FUN_08001310(dataPointer,currentFlagValue | 0xc,0,unusedParam3,unusedParam3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "set_flag_and_call_function_0800138e",
                "param_1": "dataPointer",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "unusedParam3",
                "bVar1": "currentFlagValue"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "perform_action_080013a4",
            "code": "\nvoid performAction_080013a4(int state,int value1,int value2,int value3)\n\n{\n  int loopCounter1;\n  int loopCounter2;\n  \n  if (1 < value2) {\n    *(byte *)(state + 0x13) = *(byte *)(state + 0x13) | 8;\n  }\n  *(char *)(state + 0x17) = (char)value2;\n  FUN_08001294(state,0,0x40,value1,value1 + 0x40);\n  if ((value3 != 0) && (value2 == 1)) {\n    *(byte *)(state + 0x13) = *(byte *)(state + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(state + 8),1);\n  if (*(char *)(state + 9) != -1) {\n    FUN_080057b4(*(char *)(state + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(state + 10),1);\n  loopCounter2 = 0;\n  while( true ) {\n    if ((*(byte *)(state + 0x13) & 0x10) == 0) {\n      loopCounter1 = 4;\n    }\n    else {\n      loopCounter1 = 8;\n    }\n    if (loopCounter1 <= loopCounter2) break;\n    FUN_080057b4(*(undefined *)(state + loopCounter2 + 0xb),1);\n    loopCounter2 = loopCounter2 + 1;\n  }\n  FUN_08005848(*(undefined *)(state + 8),0);\n  FUN_08005848(*(undefined *)(state + 10),0);\n  if (*(char *)(state + 9) != -1) {\n    FUN_08005848(*(char *)(state + 9),0);\n  }\n  if ((*(byte *)(state + 0x13) & 0x10) == 0) {\n    FUN_080012c0(state,3);\n    FUN_080012c0(state,3);\n    FUN_080012c0(state,3);\n    FUN_080012c0(state,2);\n  }\n  else {\n    FUN_08001310(state,*(byte *)(state + 0x13) | 0x20,0);\n    FUN_08001310(state,*(byte *)(state + 0x13) | 0x20,0);\n    FUN_08001310(state,*(byte *)(state + 0x13) | 0x20,0);\n  }\n  FUN_08001310(state,*(byte *)(state + 0x13) | 0x20,0);\n  *(undefined *)(state + 0x14) = 4;\n  FUN_0800138e(state);\n  FUN_0800135a(state);\n  *(undefined *)(state + 0x15) = 2;\n  FUN_08001310(state,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "perform_action_080013a4",
                "param_1": "state",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "loopCounter1",
                "iVar2": "loopCounter2"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "set_function_params_080014ba",
            "code": "\nvoid setFunctionParams_080014ba(int functionPtr,int flag,undefined undefined1,undefined4 undefined4_1,undefined undefined1_1,\n                 undefined undefined1_2,undefined undefined1_3,undefined undefined1_4,undefined undefined1_5,\n                 undefined undefined1_6,undefined undefined1_7,undefined undefined1_8,undefined undefined1_9)\n\n{\n  *(undefined *)(functionPtr + 8) = undefined1;\n  *(char *)(functionPtr + 9) = (char)undefined4_1;\n  *(undefined *)(functionPtr + 10) = undefined1_1;\n  *(undefined *)(functionPtr + 0xb) = undefined1_2;\n  *(undefined *)(functionPtr + 0xc) = undefined1_3;\n  *(undefined *)(functionPtr + 0xd) = undefined1_4;\n  *(undefined *)(functionPtr + 0xe) = undefined1_5;\n  *(undefined *)(functionPtr + 0xf) = undefined1_6;\n  *(undefined *)(functionPtr + 0x10) = undefined1_7;\n  *(undefined *)(functionPtr + 0x11) = undefined1_8;\n  *(undefined *)(functionPtr + 0x12) = undefined1_9;\n  if (flag == 0) {\n    *(undefined *)(functionPtr + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(functionPtr + 0x13) = 0;\n  }\n  FUN_080013a4(functionPtr,0x10,1,0,undefined4_1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "set_function_params_080014ba",
                "param_1": "functionPtr",
                "param_2": "flag",
                "param_3": "undefined1",
                "param_4": "undefined4_1",
                "param_5": "undefined1_1",
                "param_6": "undefined1_2",
                "param_7": "undefined1_3",
                "param_8": "undefined1_4",
                "param_9": "undefined1_5",
                "param_10": "undefined1_6",
                "param_11": "undefined1_7",
                "param_12": "undefined1_8",
                "param_13": "undefined1_9"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *outputArray,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3,\n            undefined inputValue4,undefined inputValue5,undefined inputValue6)\n\n{\n  outputArray[1] = 0;\n  *outputArray = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(outputArray,1,inputValue1,0xff,inputValue2,inputValue3,inputValue4,inputValue5,inputValue6,0,0,0,0);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "outputArray",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "param_5": "inputValue4",
                "param_6": "inputValue5",
                "param_7": "inputValue6"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "execute_data_processing_08001550",
            "code": "\nvoid executeDataProcessing_08001550(undefined4 *dataPointer,uint flag,int dataArray)\n\n{\n  int index;\n  \n  FUN_08001310(dataPointer,(flag & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*dataPointer)(dataPointer,*(undefined *)(dataArray + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "execute_data_processing_08001550",
                "param_1": "dataPointer",
                "param_2": "flag",
                "param_3": "dataArray",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "initialize_data_0800157c",
            "code": "\nundefined * initializeData_0800157c(undefined *data,undefined4 value1,undefined value2,undefined value3)\n\n{\n  *data = (char)value1;\n  data[1] = value2;\n  data[2] = value3;\n  FUN_080057b4(value1,0);\n  FUN_080057b4(data[1],1);\n  FUN_080057b4(data[2],1);\n  FUN_08005848(data[1],1);\n  FUN_08005848(data[2],0);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "initialize_data_0800157c",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "calculate_bit_mask_080015b2",
            "code": "\nuint calculateBitMask_080015b2(undefined *inputArray)\n\n{\n  int result;\n  uint bitIndex;\n  uint bitMask;\n  \n  FUN_08005848(inputArray[1],0);\n  bitMask = 0;\n  for (bitIndex = 0x1f; -1 < (int)bitIndex; bitIndex = bitIndex - 1) {\n    FUN_08005848(inputArray[2],1);\n    result = FUN_08005890(*inputArray);\n    if (result != 0) {\n      bitMask = bitMask | 1 << (bitIndex & 0xff);\n    }\n    FUN_08005848(inputArray[2],0);\n  }\n  FUN_08005848(inputArray[1],1);\n  return bitMask;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "calculate_bit_mask_080015b2",
                "param_1": "inputArray",
                "iVar1": "result",
                "uVar2": "bitIndex",
                "uVar3": "bitMask"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "convert_number_080015f8",
            "code": "\nundefined8 convertNumber_080015f8(undefined4 input1,int input2,undefined4 input3,undefined4 input4)\n\n{\n  uint number;\n  undefined8 result;\n  \n  number = FUN_080015b2();\n  if ((number & 0x10000) == 0) {\n    number = number >> 0x12;\n    result = FUN_0800040c(number & 0x1fff);\n    if ((number & 0x2000) != 0) {\n      result = FUN_0800040c(~number & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,input4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (input2 == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    number = number & 7;\n    if (number == 2) {\n      return 0x40c3888000000000;\n    }\n    if (number == 4) {\n      return 0x40c3890000000000;\n    }\n    if (number != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "convert_number_080015f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "number",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int inputData)\n\n{\n  char isFlagSet;\n  int result;\n  int checkResult;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 tempValue1;\n  undefined4 tempValue2;\n  undefined4 tempValue3;\n  undefined4 tempValue4;\n  char isFlagSet1;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 highBits1;\n  undefined8 highBits2;\n  undefined8 operationResult;\n  undefined8 finalResult;\n  undefined8 tempResult1;\n  undefined4 tempResult2;\n  undefined4 tempResult3;\n  \n  isFlagSet1 = *(char *)(inputData + 0x70);\n  if (isFlagSet1 != '\\0') {\n    result = FUN_080058e0();\n    if ((uint)(result - *(int *)(inputData + 0x44)) < *(uint *)(inputData + 0x58)) {\n      isFlagSet1 = '\\0';\n    }\n    else {\n      value2 = **(undefined4 **)(inputData + 0x38);\n      tempValue2 = (*(undefined4 **)(inputData + 0x38))[1];\n      highBits2 = FUN_08000190(**(undefined4 **)(inputData + 0x40),(*(undefined4 **)(inputData + 0x40))[1])\n      ;\n      highBits1 = (undefined4)((ulonglong)highBits2 >> 0x20);\n      operationResult = FUN_08000190(value2,tempValue2,*(undefined4 *)(inputData + 0x50),\n                            *(undefined4 *)(inputData + 0x54));\n      value1 = (undefined4)((ulonglong)operationResult >> 0x20);\n      finalResult = FUN_080004f8((int)highBits2,highBits1,*(undefined4 *)(inputData + 0x20),\n                            *(undefined4 *)(inputData + 0x24));\n      finalResult = FUN_08000194((int)finalResult,(int)((ulonglong)finalResult >> 0x20),\n                            *(undefined4 *)(inputData + 0x48),*(undefined4 *)(inputData + 0x4c));\n      *(undefined8 *)(inputData + 0x48) = finalResult;\n      isFlagSet = *(char *)(inputData + 0x71);\n      if (isFlagSet == '\\0') {\n        tempResult1 = FUN_080004f8((int)operationResult,value1,*(undefined4 *)(inputData + 0x18),\n                              *(undefined4 *)(inputData + 0x1c));\n        finalResult = FUN_08000190((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult1,\n                              (int)((ulonglong)tempResult1 >> 0x20));\n        *(undefined8 *)(inputData + 0x48) = finalResult;\n      }\n      value3 = *(undefined4 *)(inputData + 0x48);\n      tempValue3 = *(undefined4 *)(inputData + 0x4c);\n      param1 = *(undefined4 *)(undefined8 *)(inputData + 0x68);\n      param2 = *(undefined4 *)(inputData + 0x6c);\n      finalResult = *(undefined8 *)(inputData + 0x68);\n      checkResult = FUN_08000a18(value3,tempValue3,param1,param2);\n      if (checkResult == 0) {\n        tempValue1 = *(undefined4 *)(inputData + 0x60);\n        tempValue4 = *(undefined4 *)(inputData + 100);\n        checkResult = FUN_080009dc(value3,tempValue3);\n        if (checkResult != 0) {\n          *(undefined4 *)(inputData + 0x48) = tempValue1;\n          *(undefined4 *)(inputData + 0x4c) = tempValue4;\n        }\n      }\n      else {\n        *(undefined4 *)(inputData + 0x48) = param1;\n        *(undefined4 *)(inputData + 0x4c) = param2;\n      }\n      if (isFlagSet == '\\0') {\n        highBits2 = 0;\n      }\n      else {\n        highBits2 = FUN_080004f8((int)highBits2,highBits1,*(undefined4 *)(inputData + 0x18),\n                              *(undefined4 *)(inputData + 0x1c));\n      }\n      tempResult3 = (undefined4)((ulonglong)highBits2 >> 0x20);\n      tempResult2 = (undefined4)highBits2;\n      highBits1 = *(undefined4 *)(inputData + 0x48);\n      value3 = *(undefined4 *)(inputData + 0x4c);\n      highBits2 = FUN_080004f8((int)operationResult,value1,*(undefined4 *)(inputData + 0x28),\n                            *(undefined4 *)(inputData + 0x2c));\n      highBits2 = FUN_08000190(highBits1,value3,(int)highBits2,(int)((ulonglong)highBits2 >> 0x20));\n      highBits2 = FUN_08000194(tempResult2,tempResult3,(int)highBits2,(int)((ulonglong)highBits2 >> 0x20));\n      highBits1 = (undefined4)((ulonglong)highBits2 >> 0x20);\n      checkResult = FUN_080009dc(param1,param2,(int)highBits2,highBits1);\n      if (checkResult == 0) {\n        finalResult = *(undefined8 *)(inputData + 0x60);\n        checkResult = FUN_080009dc((int)highBits2,highBits1,*(undefined4 *)(undefined8 *)(inputData + 0x60),\n                             *(undefined4 *)(inputData + 100));\n        if (checkResult == 0) {\n          finalResult = highBits2;\n        }\n      }\n      **(undefined8 **)(inputData + 0x3c) = finalResult;\n      *(undefined4 *)(inputData + 0x50) = value2;\n      *(undefined4 *)(inputData + 0x54) = tempValue2;\n      *(int *)(inputData + 0x44) = result;\n    }\n  }\n  return isFlagSet1;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "inputData",
                "cVar1": "isFlagSet",
                "iVar2": "result",
                "iVar3": "checkResult",
                "uVar4": "value1",
                "uVar5": "value2",
                "uVar6": "value3",
                "uVar7": "tempValue1",
                "uVar8": "tempValue2",
                "uVar9": "tempValue3",
                "uVar10": "tempValue4",
                "uVar12": "param1",
                "uVar13": "param2",
                "uVar14": "highBits1",
                "uVar15": "highBits2",
                "uVar16": "operationResult",
                "uVar17": "finalResult",
                "uVar18": "tempResult1",
                "local_38": "tempResult2",
                "uStack_34": "tempResult3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "process_input_data_08001814",
            "code": "\nvoid processInputData_08001814(undefined4 *outputBuffer,undefined4 unusedParam,undefined4 inputParam1,undefined4 inputParam2,\n                 undefined4 inputParam3,undefined4 inputParam4,undefined4 inputParam5,undefined4 inputParam6,\n                 int inputFlag)\n\n{\n  int result;\n  undefined4 tempVar;\n  undefined tempFlag;\n  bool isFlagTrue;\n  undefined8 funcResult1;\n  undefined8 funcResult2;\n  undefined8 funcResult3;\n  \n  result = FUN_080009dc(inputParam1,inputParam2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(inputParam3,inputParam4,0,0), result == 0)) &&\n     (result = FUN_080009dc(inputParam5,inputParam6,0,0), result == 0)) {\n    outputBuffer[0xd] = inputFlag;\n    isFlagTrue = inputFlag != 1;\n    if (isFlagTrue) {\n      inputFlag = 0;\n    }\n    tempFlag = (undefined)inputFlag;\n    if (!isFlagTrue) {\n      tempFlag = 1;\n    }\n    *(undefined *)((int)outputBuffer + 0x71) = tempFlag;\n    *outputBuffer = inputParam1;\n    outputBuffer[1] = inputParam2;\n    outputBuffer[2] = inputParam3;\n    outputBuffer[3] = inputParam4;\n    outputBuffer[4] = inputParam5;\n    outputBuffer[5] = inputParam6;\n    funcResult1 = FUN_0800040c(outputBuffer[0x16]);\n    funcResult1 = FUN_0800074c((int)funcResult1,(int)((ulonglong)funcResult1 >> 0x20),0,0x408f4000);\n    tempVar = (undefined4)((ulonglong)funcResult1 >> 0x20);\n    outputBuffer[6] = inputParam1;\n    outputBuffer[7] = inputParam2;\n    funcResult2 = FUN_080004f8(inputParam3,inputParam4,(int)funcResult1,tempVar);\n    *(undefined8 *)(outputBuffer + 8) = funcResult2;\n    funcResult1 = FUN_0800074c(inputParam5,inputParam6,(int)funcResult1,tempVar);\n    *(undefined8 *)(outputBuffer + 10) = funcResult1;\n    if (outputBuffer[0xc] == 1) {\n      funcResult3 = FUN_08000190(0,0,inputParam1,inputParam2);\n      *(undefined8 *)(outputBuffer + 6) = funcResult3;\n      funcResult2 = FUN_08000190(0,0,(int)funcResult2,(int)((ulonglong)funcResult2 >> 0x20));\n      *(undefined8 *)(outputBuffer + 8) = funcResult2;\n      funcResult1 = FUN_08000190(0,0,(int)funcResult1,(int)((ulonglong)funcResult1 >> 0x20));\n      *(undefined8 *)(outputBuffer + 10) = funcResult1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "process_input_data_08001814",
                "param_1": "outputBuffer",
                "param_2": "unusedParam",
                "param_3": "inputParam1",
                "param_4": "inputParam2",
                "param_5": "inputParam3",
                "param_6": "inputParam4",
                "param_7": "inputParam5",
                "param_8": "inputParam6",
                "param_9": "inputFlag",
                "iVar1": "result",
                "uVar2": "tempVar",
                "uVar3": "tempFlag",
                "bVar4": "isFlagTrue",
                "uVar5": "funcResult1",
                "uVar6": "funcResult2",
                "uVar7": "funcResult3"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_program_080018f8",
            "code": "\nvoid initialize_program_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_program_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "process_data_08001918",
            "code": "\nvoid processData_08001918(int inputPointer,int inputSize,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  undefined8 result3;\n  \n  if (0 < inputSize) {\n    result2 = FUN_0800042c(inputSize);\n    result3 = FUN_0800040c(*(undefined4 *)(inputPointer + 0x58));\n    result2 = FUN_0800074c((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                         (int)((ulonglong)result3 >> 0x20),param4);\n    result1 = (undefined4)((ulonglong)result2 >> 0x20);\n    result3 = FUN_080004f8((int)result2,result1,*(undefined4 *)(inputPointer + 0x20),\n                         *(undefined4 *)(inputPointer + 0x24));\n    *(undefined8 *)(inputPointer + 0x20) = result3;\n    result2 = FUN_0800074c(*(undefined4 *)(inputPointer + 0x28),*(undefined4 *)(inputPointer + 0x2c),(int)result2,\n                         result1);\n    *(undefined8 *)(inputPointer + 0x28) = result2;\n    *(int *)(inputPointer + 0x58) = inputSize;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "process_data_08001918",
                "param_1": "inputPointer",
                "param_2": "inputSize",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_data_08001960",
            "code": "\nvoid updateData_08001960(int baseAddress,undefined4 param2,undefined4 newParam1,undefined4 newParam2,\n                 undefined4 newParam3,undefined4 newParam4)\n\n{\n  int result;\n  undefined4 *ptr;\n  undefined4 val1;\n  undefined4 val2;\n  undefined4 val3;\n  undefined4 val4;\n  \n  result = FUN_08000a04(newParam1,newParam2,newParam3,newParam4,newParam2);\n  if (result == 0) {\n    *(undefined4 *)(baseAddress + 0x60) = newParam1;\n    *(undefined4 *)(baseAddress + 100) = newParam2;\n    *(undefined4 *)(baseAddress + 0x68) = newParam3;\n    *(undefined4 *)(baseAddress + 0x6c) = newParam4;\n    if (*(char *)(baseAddress + 0x70) != '\\0') {\n      ptr = *(undefined4 **)(baseAddress + 0x3c);\n      val1 = *ptr;\n      val3 = ptr[1];\n      result = FUN_080009dc(newParam3,newParam4,val1,val3);\n      if (result == 0) {\n        result = FUN_08000a18(newParam1,newParam2,val1,val3);\n        if (result != 0) {\n          *ptr = newParam1;\n          ptr[1] = newParam2;\n        }\n      }\n      else {\n        *ptr = newParam3;\n        ptr[1] = newParam4;\n      }\n      val1 = *(undefined4 *)(baseAddress + 0x48);\n      val3 = *(undefined4 *)(baseAddress + 0x4c);\n      val2 = *(undefined4 *)(baseAddress + 0x68);\n      val4 = *(undefined4 *)(baseAddress + 0x6c);\n      result = FUN_08000a18(val1,val3,val2,val4);\n      if (result != 0) {\n        *(undefined4 *)(baseAddress + 0x48) = val2;\n        *(undefined4 *)(baseAddress + 0x4c) = val4;\n        return;\n      }\n      val2 = *(undefined4 *)(baseAddress + 0x60);\n      val4 = *(undefined4 *)(baseAddress + 100);\n      result = FUN_080009dc(val1,val3,val2,val4);\n      if (result != 0) {\n        *(undefined4 *)(baseAddress + 0x48) = val2;\n        *(undefined4 *)(baseAddress + 0x4c) = val4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_data_08001960",
                "param_1": "baseAddress",
                "param_2": "param2",
                "param_3": "newParam1",
                "param_4": "newParam2",
                "param_5": "newParam3",
                "param_6": "newParam4",
                "iVar1": "result",
                "puVar2": "ptr",
                "uVar3": "val1",
                "uVar4": "val2",
                "uVar5": "val3",
                "uVar6": "val4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_data_080019f6",
            "code": "\nvoid updateData_080019f6(int data)\n\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  var2 = **(undefined4 **)(data + 0x3c);\n  var3 = (*(undefined4 **)(data + 0x3c))[1];\n  *(undefined4 *)(data + 0x48) = var2;\n  *(undefined4 *)(data + 0x4c) = var3;\n  var1 = (*(undefined4 **)(data + 0x38))[1];\n  *(undefined4 *)(data + 0x50) = **(undefined4 **)(data + 0x38);\n  *(undefined4 *)(data + 0x54) = var1;\n  var1 = *(undefined4 *)(data + 0x68);\n  var4 = *(undefined4 *)(data + 0x6c);\n  result = FUN_08000a18(var2,var3,var1,var4);\n  if (result == 0) {\n    var1 = *(undefined4 *)(data + 0x60);\n    var4 = *(undefined4 *)(data + 100);\n    result = FUN_080009dc(var2,var3,var1,var4);\n    if (result != 0) {\n      *(undefined4 *)(data + 0x48) = var1;\n      *(undefined4 *)(data + 0x4c) = var4;\n    }\n    return;\n  }\n  *(undefined4 *)(data + 0x48) = var1;\n  *(undefined4 *)(data + 0x4c) = var4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_data_080019f6",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2",
                "uVar4": "var3",
                "uVar5": "var4"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_if_condition_08001a44",
            "code": "\nvoid setFlagIfCondition_08001a44(int address,int condition)\n\n{\n  undefined flag;\n  \n  if (condition == 1) {\n    flag = 1;\n    if (*(char *)(address + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    flag = 0;\n  }\n  *(undefined *)(address + 0x70) = flag;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_if_condition_08001a44",
                "param_1": "address",
                "param_2": "condition",
                "uVar1": "flag"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_data_08001a66",
            "code": "\nvoid updateData_08001a66(int ptr1,int param2,undefined4 ptr3,undefined4 ptr4)\n\n{\n  undefined8 returnValue;\n  \n  if ((*(char *)(ptr1 + 0x70) != '\\0') && (*(int *)(ptr1 + 0x30) != param2)) {\n    returnValue = FUN_08000190(0,0,*(undefined4 *)(ptr1 + 0x18),*(undefined4 *)(ptr1 + 0x1c),ptr4\n                        );\n    *(undefined8 *)(ptr1 + 0x18) = returnValue;\n    returnValue = FUN_08000190(0,0,*(undefined4 *)(ptr1 + 0x20),*(undefined4 *)(ptr1 + 0x24));\n    *(undefined8 *)(ptr1 + 0x20) = returnValue;\n    returnValue = FUN_08000190(0,0,*(undefined4 *)(ptr1 + 0x28),*(undefined4 *)(ptr1 + 0x2c));\n    *(undefined8 *)(ptr1 + 0x28) = returnValue;\n  }\n  *(int *)(ptr1 + 0x30) = param2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_data_08001a66",
                "param_1": "ptr1",
                "param_2": "param2",
                "param_3": "ptr3",
                "param_4": "ptr4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_function_08001ab0",
            "code": "\nint initializeFunction_08001ab0(int functionPointer,undefined4 param1,undefined4 param2,undefined4 param3,\n                undefined4 param4,undefined4 param5,undefined4 param6,undefined4 param7,\n                undefined4 param8,undefined4 param9,undefined4 param10,undefined4 param11)\n\n{\n  int result;\n  undefined4 result1;\n  \n  *(undefined4 *)(functionPointer + 0x3c) = param2;\n  *(undefined4 *)(functionPointer + 0x38) = param1;\n  *(undefined4 *)(functionPointer + 0x40) = param3;\n  *(undefined *)(functionPointer + 0x70) = 0;\n  FUN_08001960(functionPointer,param1,0,0,0,0x406fe000);\n  *(undefined4 *)(functionPointer + 0x58) = 100;\n  FUN_08001a66(functionPointer,param11);\n  FUN_08001814(functionPointer,result1,param4,param5,param6,param7,param8,param9,param10);\n  result = FUN_080058e0();\n  *(int *)(functionPointer + 0x44) = result - *(int *)(functionPointer + 0x58);\n  return functionPointer;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_function_08001ab0",
                "param_1": "functionPointer",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "param4",
                "param_6": "param5",
                "param_7": "param6",
                "param_8": "param7",
                "param_9": "param8",
                "param_10": "param9",
                "param_11": "param10",
                "param_12": "param11",
                "iVar1": "result",
                "extraout_r1": "result1"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_08001b18",
            "code": "\nundefined4 initialize_08001b18(undefined4 value)\n\n{\n  FUN_08001ab0();\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_08001b18",
                "param_1": "value"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_stm32_08001b48",
            "code": "\nvoid initializeSTM32_08001b48(void)\n\n{\n  int result;\n  uint uVar2;\n  undefined4 data [2];\n  undefined4 value11;\n  undefined4 value6;\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 buffer [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  buffer[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08003688(buffer);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  value6 = 0xf;\n  value7 = 2;\n  value8 = 0;\n  value9 = 0x400;\n  value10 = 0;\n  result = FUN_08003ad4(&value6);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  data[0] = 2;\n  value11 = 0x8000;\n  result = FUN_08003c90(data);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  uVar2 = FUN_08003c44();\n  FUN_08002514(uVar2 / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_stm32_08001b48",
                "local_30": "buffer",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5",
                "iVar1": "result",
                "local_44": "value6",
                "local_40": "value7",
                "local_3c": "value8",
                "local_38": "value9",
                "local_34": "value10",
                "local_54": "data",
                "local_4c": "value11"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_08001c32",
            "code": "\nvoid initialize_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "initialize_data_08001c3c",
            "code": "\nundefined4 initializeData_08001c3c(uint data)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < data) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,data,0);\n  DAT_2000007c = data;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "initialize_data_08001c3c",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_device_08001c88",
            "code": "\n\n\nundefined4 initializeDevice_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_device_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "addition_operation_08001cac",
            "code": "\nvoid additionOperation_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "addition_operation_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_data_pointer_08001cc4",
            "code": "\nundefined4 get_data_pointer_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_data_pointer_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "check_and_process_data_08001cd0",
            "code": "\nundefined4 checkAndProcessData_08001cd0(uint **data,uint size)\n\n{\n  int initialValue;\n  uint factor;\n  int threshold;\n  undefined4 result;\n  uint *ptrData;\n  uint calculation;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08001cc4();\n  calculation = DAT_20000084;\n  ptrData = *data;\n  if ((ptrData[2] & 0x100) == 0) {\n    if (((ptrData[1] & 0x100) == 0) && ((ptrData[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**data & 2) != 0) goto LAB_08001de2;\n      } while ((size == 0xffffffff) ||\n              ((size != 0 && (threshold = FUN_08001cc4(), (uint)(threshold - initialValue) <= size))));\n      data[10] = (uint *)((uint)data[10] | 4);\n      *(undefined *)(data + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      ptrData = *data;\n      if (((ptrData[4] & 0x24924924) == 0) && ((ptrData[3] & 0x924924) == 0)) {\n        if ((ptrData[4] & 0x12492492) == 0) {\n          if ((ptrData[3] & 0x492492) == 0) {\n            threshold = 0x14;\n          }\n          else {\n            threshold = 0x29;\n          }\n        }\n        else {\n          threshold = 0x29;\n        }\n      }\n      else if (((ptrData[4] & 0x12492492) == 0) && ((ptrData[3] & 0x492492) == 0)) {\n        threshold = 0x54;\n      }\n      else if ((ptrData[4] & 0x249249) == 0) {\n        if ((ptrData[3] & 0x249249) == 0) {\n          threshold = 0x54;\n        }\n        else {\n          threshold = 0xfc;\n        }\n      }\n      else {\n        threshold = 0xfc;\n      }\n      calculation = (calculation / factor) * threshold;\n      for (; counter <= calculation && calculation - counter != 0; counter = counter + 1) {\n        if ((size != 0xffffffff) &&\n           ((size == 0 || (threshold = FUN_08001cc4(), size < (uint)(threshold - initialValue))))) {\n          data[10] = (uint *)((uint)data[10] | 4);\n          *(undefined *)(data + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **data = 0xffffffed;\n      data[10] = (uint *)((uint)data[10] | 0x200);\n      if (((*data)[2] & 0xe0000) == 0xe0000) {\n        if (data[3] == (uint *)0x0) {\n          data[10] = (uint *)((uint)data[10] & 0xfffffeff);\n          if (((uint)data[10] & 0x1000) == 0) {\n            data[10] = (uint *)((uint)data[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    data[10] = (uint *)((uint)data[10] | 0x20);\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "check_and_process_data_08001cd0",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "initialValue",
                "uVar2": "factor",
                "iVar3": "threshold",
                "uVar4": "result",
                "puVar5": "ptrData",
                "uVar6": "calculation",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 getOffsetValue_08001e40(int *offsetPointer)\n\n{\n  return *(undefined4 *)(*offsetPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "offsetPointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_configuration_08001e48",
            "code": "\nundefined4 updateConfiguration_08001e48(int *configArray,uint *settingsArray)\n\n{\n  undefined4 updateStatus;\n  uint index;\n  int counter;\n  \n  if (*(char *)(configArray + 9) == '\\x01') {\n    updateStatus = 2;\n  }\n  else {\n    *(undefined *)(configArray + 9) = 1;\n    index = settingsArray[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*configArray + 0x34) =\n           *settingsArray << (index & 0xff) | *(uint *)(*configArray + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*configArray + 0x30) =\n           *settingsArray << (index & 0xff) | *(uint *)(*configArray + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*configArray + 0x2c) =\n           *settingsArray << (index & 0xff) | *(uint *)(*configArray + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *settingsArray;\n    if (index < 10) {\n      *(uint *)(*configArray + 0x10) =\n           settingsArray[2] << (index * 3 & 0xff) |\n           *(uint *)(*configArray + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*configArray + 0xc) =\n           settingsArray[2] << (index & 0xff) | *(uint *)(*configArray + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*settingsArray - 0x10 < 2) {\n      if (*configArray == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*settingsArray == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            updateStatus = 0;\n          }\n          else {\n            updateStatus = 0;\n          }\n        }\n        else {\n          updateStatus = 0;\n        }\n      }\n      else {\n        configArray[10] = configArray[10] | 0x20;\n        updateStatus = 1;\n      }\n    }\n    else {\n      updateStatus = 0;\n    }\n    *(undefined *)(configArray + 9) = 0;\n  }\n  return updateStatus;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_configuration_08001e48",
                "param_1": "configArray",
                "param_2": "settingsArray",
                "uVar1": "updateStatus",
                "uVar2": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_param_value_08001f80",
            "code": "\nundefined4 get_param_value_08001f80(int input_address)\n\n{\n  return *(undefined4 *)(input_address + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_param_value_08001f80",
                "param_1": "input_address"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "set_flag_and_check_08001f84",
            "code": "\nundefined4 setFlagAndCheck_08001f84(int *data,undefined4 value)\n\n{\n  int tmpVar1;\n  undefined4 result;\n  int ptrData;\n  uint loopCount;\n  \n  ptrData = *data;\n  if ((*(uint *)(ptrData + 8) & 1) == 0) {\n    *(uint *)(ptrData + 8) = *(uint *)(ptrData + 8) | 1;\n    for (loopCount = DAT_20000084 / 1000000; loopCount != 0; loopCount = loopCount - 1) {\n    }\n    ptrData = FUN_08001cc4(data,value,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      tmpVar1 = FUN_08001cc4();\n    } while ((uint)(tmpVar1 - ptrData) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "set_flag_and_check_08001f84",
                "param_1": "data",
                "param_2": "value",
                "iVar1": "tmpVar1",
                "uVar2": "result",
                "iVar3": "ptrData",
                "local_14": "loopCount"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_params_08002004",
            "code": "\n\n\nint initializeParams_08002004(int *params)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(params + 9) != '\\x01') {\n    *(undefined *)(params + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      params[10] = params[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*params;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        params[10] = params[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          params[10] = params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        params[10] = params[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          params[10] = params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((params[10] & 0x1000U) == 0) {\n        params[0xb] = 0;\n      }\n      else {\n        params[0xb] = params[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(params + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *params;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(params + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_params_08002004",
                "param_1": "params",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_flags_and_return_080020f0",
            "code": "\nundefined4 updateFlagsAndReturn_080020f0(int *array)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *array;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*array + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08001cc4();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  array[10] = array[10] | 0x10;\n  array[0xb] = array[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_flags_and_return_080020f0",
                "param_1": "array",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "verify_and_update_settings_0800213c",
            "code": "\nundefined4 verify_and_update_settings_0800213c(int *settings)\n\n{\n  int result;\n  uint combined_flags;\n  uint additional_flags;\n  \n  if (settings == (int *)0x0) {\n    return 1;\n  }\n  if (settings[10] == 0) {\n    settings[0xb] = 0;\n    *(undefined *)(settings + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(settings);\n  if (((settings[10] & 0x10U) == 0) && (result == 0)) {\n    settings[10] = settings[10] & 0xffffeefdU | 2;\n    combined_flags = settings[1] | settings[7] | settings[3] << 1;\n    if (settings[2] == 0x100) {\n      additional_flags = 0x100;\n    }\n    else {\n      additional_flags = 0;\n      if (settings[2] == 1) {\n        additional_flags = 0x100;\n      }\n    }\n    if (settings[5] == 1) {\n      if (settings[3] == 0) {\n        additional_flags = additional_flags | (settings[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        settings[10] = settings[10] | 0x20;\n        settings[0xb] = settings[0xb] | 1;\n      }\n    }\n    *(uint *)(*settings + 4) = additional_flags | *(uint *)(*settings + 4) & 0xffff16ff;\n    *(uint *)(*settings + 8) = *(uint *)(*settings + 8) & 0xffe1f7fd | combined_flags;\n    if ((settings[2] == 0x100) || (settings[2] == 1)) {\n      additional_flags = (settings[4] + -1) * 0x100000;\n    }\n    else {\n      additional_flags = 0;\n    }\n    *(uint *)(*settings + 0x2c) = additional_flags | *(uint *)(*settings + 0x2c) & 0xff0fffff;\n    if (combined_flags != (*(uint *)(*settings + 8) & 0xff1f0efe)) {\n      settings[10] = settings[10] & 0xffffffedU | 0x10;\n      settings[0xb] = settings[0xb] | 1;\n      return 1;\n    }\n    settings[0xb] = 0;\n    settings[10] = settings[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  settings[10] = settings[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "verify_and_update_settings_0800213c",
                "param_1": "settings",
                "iVar1": "result",
                "uVar2": "combined_flags",
                "uVar3": "additional_flags"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "update_parameter_0800224c",
            "code": "\nint updateParameter_0800224c(int *parameter)\n\n{\n  int result;\n  \n  if (parameter == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    parameter[10] = parameter[10] | 2;\n    result = FUN_080020f0();\n    if (result == 0) {\n      *(undefined4 *)*parameter = 0xffffffe0;\n      *(uint *)(*parameter + 4) = *(uint *)(*parameter + 4) & 0xff3f0000;\n      *(uint *)(*parameter + 8) = *(uint *)(*parameter + 8) & 0xff0106f0;\n      *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) & 0xff000000;\n      *(uint *)(*parameter + 0x10) = *(uint *)(*parameter + 0x10) & 0xc0000000;\n      *(uint *)(*parameter + 0x14) = *(uint *)(*parameter + 0x14) & 0xfffff000;\n      *(uint *)(*parameter + 0x18) = *(uint *)(*parameter + 0x18) & 0xfffff000;\n      *(uint *)(*parameter + 0x1c) = *(uint *)(*parameter + 0x1c) & 0xfffff000;\n      *(uint *)(*parameter + 0x20) = *(uint *)(*parameter + 0x20) & 0xfffff000;\n      *(uint *)(*parameter + 0x24) = *(uint *)(*parameter + 0x24) & 0xfffff000;\n      *(uint *)(*parameter + 0x28) = *(uint *)(*parameter + 0x28) & 0xfffff000;\n      *(uint *)(*parameter + 0x2c) = *(uint *)(*parameter + 0x2c) & 0xff000000;\n      *(uint *)(*parameter + 0x2c) = *(uint *)(*parameter + 0x2c) & 0xff000000;\n      *(uint *)(*parameter + 0x30) = *(uint *)(*parameter + 0x30) & 0xc0000000;\n      *(uint *)(*parameter + 0x34) = *(uint *)(*parameter + 0x34) & 0xc0000000;\n      *(uint *)(*parameter + 0x38) = *(uint *)(*parameter + 0x38) & 0xffc00000;\n      *(uint *)(*parameter + 0x38) = *(uint *)(*parameter + 0x38) & 0xffc00000;\n      FUN_080049f0(parameter);\n      parameter[0xb] = 0;\n      parameter[10] = 0;\n    }\n    *(undefined *)(parameter + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "update_parameter_0800224c",
                "param_1": "parameter",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_status_08002348",
            "code": "\nint checkAndUpdateStatus_08002348(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_status_08002348",
                "param_1": "status",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_process_status_08002384",
            "code": "\nint check_process_status_08002384(int *process_info)\n\n{\n  uint dat1;\n  int status;\n  uint dat2;\n  int loop_var1;\n  int loop_var2;\n  int loop_var3;\n  \n  if (*(char *)(process_info + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(process_info + 9) = 1;\n  status = FUN_080020f0();\n  if (status == 0) {\n    process_info[10] = process_info[10] & 0xffffeefdU | 2;\n    dat1 = DAT_20000084;\n    dat2 = FUN_08003da4(2);\n    for (loop_var3 = dat1 / dat2 << 1; loop_var3 != 0; loop_var3 = loop_var3 + -1) {\n    }\n    FUN_08001f84(process_info);\n    *(uint *)(*process_info + 8) = *(uint *)(*process_info + 8) | 8;\n    loop_var1 = FUN_08001cc4();\n    while (loop_var2 = *process_info, (*(uint *)(loop_var2 + 8) & 8) != 0) {\n      loop_var2 = FUN_08001cc4();\n      if (10 < (uint)(loop_var2 - loop_var1)) {\n        process_info[10] = process_info[10] & 0xffffffedU | 0x10;\n        *(undefined *)(process_info + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(loop_var2 + 8) = *(uint *)(loop_var2 + 8) | 4;\n    loop_var1 = FUN_08001cc4();\n    while ((*(uint *)(*process_info + 8) & 4) != 0) {\n      loop_var2 = FUN_08001cc4();\n      if (10 < (uint)(loop_var2 - loop_var1)) {\n        process_info[10] = process_info[10] & 0xffffffedU | 0x10;\n        *(undefined *)(process_info + 9) = 0;\n        return 1;\n      }\n    }\n    process_info[10] = process_info[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(process_info + 9) = 0;\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_process_status_08002384",
                "param_1": "process_info",
                "uVar1": "dat1",
                "iVar2": "status",
                "uVar3": "dat2",
                "iVar4": "loop_var1",
                "iVar5": "loop_var2",
                "local_14": "loop_var3"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_configuration_08002470",
            "code": "\n\n\nvoid updateConfiguration_08002470(uint configFlags)\n\n{\n  _DAT_e000ed0c = (configFlags & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_configuration_08002470",
                "param_1": "configFlags"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_memory_08002494",
            "code": "\n\n\nvoid updateMemory_08002494(uint address,uint value,uint mask)\n\n{\n  uint shiftValue;\n  uint remainingBits;\n  \n  shiftValue = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftValue;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftValue + 4 < 7) {\n    shiftValue = 0;\n  }\n  else {\n    shiftValue = shiftValue - 3;\n  }\n  shiftValue = (value & (1 << (remainingBits & 0xff)) - 1U) << (shiftValue & 0xff) |\n          (1 << (shiftValue & 0xff)) - 1U & mask;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftValue << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftValue << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_memory_08002494",
                "param_1": "address",
                "param_2": "value",
                "param_3": "mask",
                "uVar1": "shiftValue",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_080024f8",
            "code": "\nvoid setBit_080024f8(uint value)\n\n{\n  if (-1 < (int)value) {\n    *(int *)((value >> 5) * 4 + -0x1fff1f00) = 1 << (value & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_080024f8",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "validate_input_08002514",
            "code": "\n\n\nundefined4 validate_input_08002514(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "validate_input_08002514",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_08002540",
            "code": "\nvoid setBit_08002540(uint value)\n\n{\n  if (-1 < (int)value) {\n    *(int *)(((value >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (value & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_08002540",
                "param_1": "value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_control_register_08002560",
            "code": "\n\n\nvoid updateControlRegister_08002560(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_control_register_08002560",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "execute_initial_setup_08002582",
            "code": "\nvoid executeInitialSetup_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "execute_initial_setup_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_flags_0800258c",
            "code": "\n\n\nundefined4 initializeFlags_0800258c(uint **flags)\n\n{\n  uint *currentFlag;\n  \n  if (*(char *)((int)flags + 0x21) != '\\x02') {\n    flags[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **flags = **flags & 0xfffffff1;\n  **flags = **flags & 0xfffffffe;\n  currentFlag = *flags;\n  if (currentFlag == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentFlag == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentFlag == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentFlag == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentFlag == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentFlag == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)flags + 0x21) = 1;\n  *(undefined *)(flags + 8) = 0;\n  if (callbackFunction != (uint *)0x0) {\n    (*(code *)callbackFunction)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_flags_0800258c",
                "param_1": "flags",
                "puVar1": "currentFlag",
                "param_1[0xd]": "callbackFunction"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_register_values_08002624",
            "code": "\n\n\nvoid update_register_values_08002624(uint *register_values,uint *input_data)\n\n{\n  uint *output_data;\n  uint bit_mask;\n  uint bit_value;\n  uint bit_position;\n  uint opcode;\n  uint offset;\n  int shift_value_1;\n  int shift_value_2;\n  \n  offset = 0;\n  bit_position = 0;\n  do {\n    if (0xf < bit_position) {\n      return;\n    }\n    bit_mask = 1 << (bit_position & 0xff);\n    bit_value = *input_data & bit_mask;\n    if (bit_mask == bit_value) {\n      opcode = input_data[1];\n      if (opcode == 0x12) {\n        offset = input_data[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          offset = input_data[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            offset = input_data[3];\n          }\n        }\n        else if (opcode == 3) {\n          offset = 0;\n        }\n        else if (opcode == 0x11) {\n          offset = input_data[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (input_data[2] == 0) {\n          offset = 4;\n        }\n        else if (input_data[2] == 1) {\n          register_values[4] = bit_mask;\n          offset = 8;\n        }\n        else {\n          register_values[5] = bit_mask;\n          offset = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bit_mask = bit_position;\n      output_data = register_values;\n      if (0xff < bit_value) {\n        bit_mask = bit_position - 8;\n        output_data = register_values + 1;\n      }\n      *output_data = *output_data & ~(0xf << (bit_mask << 2 & 0xff)) | offset << (bit_mask << 2 & 0xff);\n      if ((input_data[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shift_value_1 = (bit_position & 3) << 2;\n        if (register_values == (uint *)0x40010800) {\n          shift_value_2 = 0;\n        }\n        else if (register_values == (uint *)0x40010c00) {\n          shift_value_2 = 1;\n        }\n        else if (register_values == (uint *)0x40011000) {\n          shift_value_2 = 2;\n        }\n        else if (register_values == (uint *)0x40011400) {\n          shift_value_2 = 3;\n        }\n        else {\n          shift_value_2 = 4;\n        }\n        *(uint *)(((bit_position >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_position >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shift_value_1) | shift_value_2 << shift_value_1;\n        if ((input_data[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_value;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_value;\n        }\n        if ((input_data[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_value;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_value;\n        }\n        if ((input_data[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_value;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_value;\n        }\n        if ((input_data[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_value;\n        }\n        else {\n          _DAT_4001040c = bit_value | _DAT_4001040c;\n        }\n      }\n    }\n    bit_position = bit_position + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_register_values_08002624",
                "param_1": "register_values",
                "param_2": "input_data",
                "puVar1": "output_data",
                "uVar2": "bit_mask",
                "uVar3": "bit_value",
                "uVar4": "bit_position",
                "uVar5": "opcode",
                "uVar6": "offset",
                "iVar7": "shift_value_1",
                "iVar8": "shift_value_2"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int address,uint flags)\n\n{\n  if ((flags & *(uint *)(address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "address",
                "param_2": "flags"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_param_value_0800281e",
            "code": "\nvoid setParamValue_0800281e(int objectAddress,int newValue,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "objectAddress",
                "param_2": "newValue",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_and_invoke_function_0800282c",
            "code": "\n\n\nvoid updateDataAndInvokeFunction_0800282c(uint inputValue)\n\n{\n  if ((_DAT_40010414 & inputValue) != 0) {\n    _DAT_40010414 = inputValue;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_and_invoke_function_0800282c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_status_08002848",
            "code": "\nundefined4 updateStatus_08002848(int *statusData)\n\n{\n  if (*(char *)((int)statusData + 0x3e) == '@') {\n    if (statusData[20] == 0) {\n      *(uint *)(*statusData + 0x10) = statusData[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*statusData + 0x10) = statusData[17] & 0xffU | 1;\n    }\n  }\n  else if (statusData[4] == 0x4000) {\n    if (*(char *)((int)statusData + 0x3d) == '!') {\n      *(uint *)(*statusData + 0x10) = statusData[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*statusData + 0x10) = statusData[17] & 0xffU | 1;\n    }\n  }\n  else if (statusData[20] == 0) {\n    *(uint *)(*statusData + 0x10) = (uint)(statusData[17] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (statusData[20] == 1) {\n    *(uint *)(*statusData + 0x10) = (uint)(statusData[17] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_status_08002848",
                "param_1": "statusData",
                "param_1[0x14]": "statusData[20]",
                "param_1[0x11]": "statusData[17]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "update_value_080028d2",
            "code": "\nundefined4 updateValue_080028d2(int *ptr)\n\n{\n  *(uint *)(*ptr + 0x10) = ptr[17] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "update_value_080028d2",
                "param_1": "ptr",
                "param_1[0x11]": "ptr[17]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "set_flags_080028de",
            "code": "\nundefined4 setFlags_080028de(uint **parameters)\n\n{\n  uint *var1;\n  \n  var1 = ptrB;\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((ptr14 != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((ptr14 == (uint *)0x0) && (ptr4 == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      ptr14 = (uint *)((int)ptr14 + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (var1 == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          var1 = *parameters;\n          if ((var1Ptr1 & 0x800) == 0) {\n            *var1 = *var1 | 0x200;\n          }\n          else {\n            *var1 = *var1 & 0xfffffbff;\n          }\n        }\n        else if (((var1 == (uint *)0x4) || (var1 == (uint *)0x8)) ||\n                (ptrC == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (ptrB == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (ptrB == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        var1 = *parameters;\n        if ((var1Ptr1 & 0x800) != 0) {\n          var1Ptr1 = var1Ptr1 | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        var1 = *parameters;\n        if ((var1Ptr1 & 0x800) != 0) {\n          var1Ptr1 = var1Ptr1 | 0x1000;\n        }\n      }\n      ptr14 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "set_flags_080028de",
                "param_1": "parameters",
                "puVar1": "var1",
                "param_1[0x14]": "ptr14",
                "param_1[4]": "ptr4",
                "puVar1[1]": "var1Ptr1",
                "param_1[0xc]": "ptrC",
                "param_1[0xb]": "ptrB"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_pointer_08002ab8",
            "code": "\nundefined4 updatePointer_08002ab8(int *pointer)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)pointer + 0x2a) != 0) {\n    bytePointer = (byte *)pointer[9];\n    pointer[9] = (int)(bytePointer + 1);\n    *(uint *)(*pointer + 0x10) = (uint)*bytePointer;\n    *(short *)((int)pointer + 0x2a) = *(short *)((int)pointer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_pointer_08002ab8",
                "param_1": "pointer",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_data_08002ad8",
            "code": "\nundefined4 updateData_08002ad8(int *data)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_data_08002ad8",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "validate_and_initialize_08002af8",
            "code": "\nundefined4 validate_and_initialize_08002af8(uint **array_ptr,uint *data_ptr,int data_size,uint *additional_data_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)array_ptr + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (data_size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(array_ptr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(array_ptr + 0xf) = 1;\n      ptr = *array_ptr;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **array_ptr = **array_ptr & 0xfffff7ff;\n      *(undefined *)((int)array_ptr + 0x3d) = 0x29;\n      *(undefined *)((int)array_ptr + 0x3e) = 0x20;\n      result = 0;\n      array_ptr_index_0x10 = (uint *)0x0;\n      array_ptr_index_9 = data_ptr;\n      *(short *)((int)array_ptr + 0x2a) = (short)data_size;\n      array_ptr_index_0xb = additional_data_ptr;\n      *(undefined2 *)(array_ptr + 10) = *(undefined2 *)((int)array_ptr + 0x2a);\n      *(undefined *)(array_ptr + 0xf) = 0;\n      (*array_ptr)[1] = (*array_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "validate_and_initialize_08002af8",
                "param_1": "array_ptr",
                "param_2": "data_ptr",
                "param_3": "data_size",
                "param_4": "additional_data_ptr",
                "uVar1": "result",
                "puVar2": "ptr",
                "param_1[0x10]": "array_ptr_index_0x10",
                "param_1[9]": "array_ptr_index_9",
                "param_1[0xb]": "array_ptr_index_0xb"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "process_input_08002b84",
            "code": "\nundefined4 processInput_08002b84(uint **inputData,uint *dataPtr,int size,uint *result)\n\n{\n  undefined4 returnValue;\n  uint *tempPtr;\n  \n  if (*(char *)((int)inputData + 0x3d) == '(') {\n    if (dataPtr == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (size == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(inputData + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(inputData + 0xf) = 1;\n      tempPtr = *inputData;\n      if ((*tempPtr & 1) == 0) {\n        *tempPtr = *tempPtr | 1;\n      }\n      **inputData = **inputData & 0xfffff7ff;\n      *(undefined *)((int)inputData + 0x3d) = 0x2a;\n      *(undefined *)((int)inputData + 0x3e) = 0x20;\n      returnValue = 0;\n      inputData[0x10] = (uint *)0x0;\n      inputData[9] = dataPtr;\n      *(short *)((int)inputData + 0x2a) = (short)size;\n      inputData[0xb] = result;\n      *(undefined2 *)(inputData + 10) = *(undefined2 *)((int)inputData + 0x2a);\n      *(undefined *)(inputData + 0xf) = 0;\n      (*inputData)[1] = (*inputData)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "process_input_08002b84",
                "param_1": "inputData",
                "param_2": "dataPtr",
                "param_3": "size",
                "param_4": "result",
                "uVar1": "returnValue",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_parameters_08002c10",
            "code": "\nundefined4 initializeParameters_08002c10(uint **parameters)\n\n{\n  uint *currentParam;\n  \n  if (*(char *)((int)parameters + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x28;\n  currentParam = *parameters;\n  if ((*currentParam & 1) == 0) {\n    *currentParam = *currentParam | 1;\n  }\n  **parameters = **parameters | 0x400;\n  (*parameters)[1] = (*parameters)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_parameters_08002c10",
                "param_1": "parameters",
                "puVar1": "currentParam"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "update_data_08002c54",
            "code": "\nundefined4 updateData_08002c54(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)byteArray;\n    byteArray = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[12] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "update_data_08002c54",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer",
                "param_1[9]": "byteArray",
                "param_1[0xc]": "data[12]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_param_08002ca6",
            "code": "\nundefined4 updateParam_08002ca6(int *param)\n\n{\n  char charVar;\n  undefined *ptrVar;\n  \n  charVar = *(char *)((int)param + 0x3d);\n  if (*(short *)((int)param + 0x2a) != 0) {\n    ptrVar = (undefined *)ptrArray;\n    ptrArray = (int)(ptrVar + 1);\n    *ptrVar = (char)*(undefined4 *)(*param + 0x10);\n    *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    if ((*(short *)((int)param + 0x2a) == 0) && (charVar == '*')) {\n      *(uint *)(*param + 4) = *(uint *)(*param + 4) & 0xfffffbff;\n      intVar = 0x22;\n      *(undefined *)((int)param + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_param_08002ca6",
                "param_1": "param",
                "cVar1": "charVar",
                "puVar2": "ptrVar",
                "param_1[9]": "ptrArray",
                "param_1[0xc]": "intVar"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_data_08002cf2",
            "code": "\nundefined4 processData_08002cf2(int *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 valueToUse;\n  uint dataFlag;\n  \n  dataFlag = *(uint *)(*data + 0x18);\n  if ((dataFlag & 0x80) == 0) {\n    valueToUse = *(undefined2 *)(data + 3);\n  }\n  else {\n    valueToUse = *(undefined2 *)(data + 6);\n  }\n  FUN_08004e74(data,(*(uint *)(*data + 0x18) & 4) == 0,valueToUse,dataFlag,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "valueToUse",
                "uVar2": "dataFlag"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "set_access_permissions_08002d1c",
            "code": "\nundefined4 setAccessPermissions_08002d1c(uint **arguments)\n\n{\n  if (((arguments[11] == (uint *)0x4) || (arguments[11] == (uint *)0x8)) &&\n     (*(char *)((int)arguments + 0x3d) == '(')) {\n    arguments[11] = (uint *)0xffff0000;\n    (*arguments)[1] = (*arguments)[1] & 0xfffff8ff;\n    (*arguments)[5] = 0xfffffbff;\n    **arguments = **arguments & 0xfffffbff;\n    arguments[12] = (uint *)0x0;\n    *(undefined *)((int)arguments + 0x3d) = 0x20;\n    *(undefined *)((int)arguments + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)arguments + 0x3d) == '!') {\n    arguments[11] = (uint *)0xffff0000;\n    arguments[12] = (uint *)0x21;\n    *(undefined *)((int)arguments + 0x3d) = 0x20;\n    *(undefined *)((int)arguments + 0x3e) = 0;\n    (*arguments)[1] = (*arguments)[1] & 0xfffff8ff;\n    (*arguments)[5] = 0xfffffbff;\n    **arguments = **arguments & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*arguments)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "set_access_permissions_08002d1c",
                "param_1": "arguments",
                "param_1[0xb]": "arguments[11]",
                "param_1[0xc]": "arguments[12]"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_data_08002db2",
            "code": "\nundefined4 processData_08002db2(uint **inputArray)\n\n{\n  char charValue;\n  uint *ptrValue;\n  \n  charValue = *(char *)((int)inputArray + 0x3d);\n  ptrValue = inputArray[0xb];\n  if ((*(short *)(inputArray + 10) == 0) && (charValue == '!')) {\n    if ((ptrValue == (uint *)0x4) || ((ptrValue == (uint *)0x8 || (ptrValue == (uint *)0xffff0000)))) {\n      (*inputArray)[1] = (*inputArray)[1] & 0xfffff8ff;\n      **inputArray = **inputArray | 0x200;\n      inputArray[12] = (uint *)0x0;\n      *(undefined *)((int)inputArray + 0x3d) = 0x20;\n      if (*(char *)((int)inputArray + 0x3e) == '@') {\n        *(undefined *)((int)inputArray + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)inputArray + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*inputArray)[1] = (*inputArray)[1] & 0xfffff8ff;\n      inputArray[12] = (uint *)0x11;\n      *(undefined *)((int)inputArray + 0x3e) = 0;\n      *(undefined *)((int)inputArray + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)inputArray + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)inputArray + 0x2a) == 0) {\n      (*inputArray)[1] = (*inputArray)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)inputArray + 0x3e) == '@') {\n      if (inputArray[0x14] == (uint *)0x0) {\n        if (inputArray[0x13] == (uint *)0x1) {\n          (*inputArray)[4] = (uint)inputArray[0x12] & 0xff;\n          inputArray[0x14] = (uint *)((int)inputArray[0x14] + 2);\n        }\n        else {\n          (*inputArray)[4] = (uint)((int)inputArray[0x12] << 0x10) >> 0x18;\n          inputArray[0x14] = (uint *)((int)inputArray[0x14] + 1);\n        }\n      }\n      else if (inputArray[0x14] == (uint *)0x1) {\n        (*inputArray)[4] = (uint)inputArray[0x12] & 0xff;\n        inputArray[0x14] = (uint *)((int)inputArray[0x14] + 1);\n      }\n      else if (inputArray[0x14] == (uint *)0x2) {\n        if (*(char *)((int)inputArray + 0x3d) == '\\\"') {\n          **inputArray = **inputArray | 0x100;\n        }\n        else if (*(char *)((int)inputArray + 0x3d) == '!') {\n          ptrValue = inputArray[9];\n          inputArray[9] = (uint *)((int)ptrValue + 1);\n          (*inputArray)[4] = (uint)*(byte *)ptrValue;\n          *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrValue = inputArray[9];\n      inputArray[9] = (uint *)((int)ptrValue + 1);\n      (*inputArray)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_data_08002db2",
                "param_1": "inputArray",
                "cVar1": "charValue",
                "puVar2": "ptrValue",
                "param_1[0xc]": "inputArray[12]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_param_08002efc",
            "code": "\nundefined4 processParam_08002efc(uint **paramList)\n\n{\n  uint *currentParam;\n  \n  currentParam = paramList[0xb];\n  if (*(char *)((int)paramList + 0x3d) == '!') {\n    if (*(short *)((int)paramList + 0x2a) == 0) {\n      if (((currentParam == (uint *)0x4) || (currentParam == (uint *)0x8)) || (currentParam == (uint *)0xffff0000)) {\n        (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n        **paramList = **paramList | 0x200;\n        paramList[0xc] = (uint *)0x0;\n        *(undefined *)((int)paramList + 0x3d) = 0x20;\n        if (*(char *)((int)paramList + 0x3e) == '@') {\n          *(undefined *)((int)paramList + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)paramList + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n        paramList[0xc] = (uint *)0x11;\n        *(undefined *)((int)paramList + 0x3e) = 0;\n        *(undefined *)((int)paramList + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      currentParam = paramList[9];\n      paramList[9] = (uint *)((int)currentParam + 1);\n      (*paramList)[4] = (uint)*(byte *)currentParam;\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_param_08002efc",
                "param_1": "paramList",
                "puVar1": "currentParam"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "update_flags_and_values_08002f9c",
            "code": "\nundefined4 updateFlagsAndValues_08002f9c(uint **parameters)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        tempPointer = parameters[9];\n        parameters[9] = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      tempPointer = parameters[9];\n      parameters[9] = (uint *)((int)tempPointer + 1);\n      *(char *)tempPointer = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "update_flags_and_values_08002f9c",
                "param_1": "parameters",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_data_0800306c",
            "code": "\nundefined4 processData_0800306c(uint **dataArray)\n\n{\n  uint *value;\n  \n  value = dataArray[0xb];\n  if (*(short *)((int)dataArray + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **dataArray = **dataArray & 0xfffffbff;\n    }\n    value = dataArray[9];\n    dataArray[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*dataArray)[4];\n    *(short *)((int)dataArray + 0x2a) = *(short *)((int)dataArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)dataArray + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*dataArray)[1] = (*dataArray)[1] & 0xfffffcff;\n      **dataArray = **dataArray | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **dataArray = **dataArray | 0x400;\n      }\n      else {\n        **dataArray = **dataArray & 0xfffffbff;\n      }\n      (*dataArray)[1] = (*dataArray)[1] & 0xfffffcff;\n    }\n    value = dataArray[9];\n    dataArray[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*dataArray)[4];\n    *(short *)((int)dataArray + 0x2a) = *(short *)((int)dataArray + 0x2a) + -1;\n    value = dataArray[9];\n    dataArray[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*dataArray)[4];\n    *(short *)((int)dataArray + 0x2a) = *(short *)((int)dataArray + 0x2a) + -1;\n    *(undefined *)((int)dataArray + 0x3d) = 0x20;\n    dataArray[0xc] = (uint *)0x0;\n    if (*(char *)((int)dataArray + 0x3e) == '@') {\n      *(undefined *)((int)dataArray + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)dataArray + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    value = dataArray[9];\n    dataArray[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*dataArray)[4];\n    *(short *)((int)dataArray + 0x2a) = *(short *)((int)dataArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "dataArray",
                "puVar1": "value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_parameter_0800316c",
            "code": "\nvoid processParameter_0800316c(uint **parameters)\n\n{\n  int tempVar1;\n  uint *pointerVar2;\n  uint *pointerVar3;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  pointerVar3 = *parameters;\n  if ((pointerVar3[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((pointerVar3[5] & 0x40) != 0) {\n        pointerVar2 = parameters[9];\n        parameters[9] = (uint *)((int)pointerVar2 + 1);\n        *(char *)pointerVar2 = (char)pointerVar3[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_0800316a(parameters);\n    }\n    else {\n      if ((pointerVar3[5] & 0x40) != 0) {\n        pointerVar2 = parameters[9];\n        parameters[9] = (uint *)((int)pointerVar2 + 1);\n        *(char *)pointerVar2 = (char)pointerVar3[4];\n      }\n      FUN_08004ef4(parameters);\n    }\n  }\n  else {\n    pointerVar3[1] = pointerVar3[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&LAB_080035fc_1;\n      tempVar1 = FUN_0800258c(parameters[0xe]);\n      if (tempVar1 != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          pointerVar3 = parameters[9];\n          parameters[9] = (uint *)((int)pointerVar3 + 1);\n          *(char *)pointerVar3 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&LAB_080035fc_1;\n      tempVar1 = FUN_0800258c(parameters[0xd]);\n      if (tempVar1 != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08004ec4(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_parameter_0800316c",
                "param_1": "parameters",
                "iVar1": "tempVar1",
                "puVar2": "pointerVar2",
                "puVar3": "pointerVar3"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_parameter_080032b4",
            "code": "\nundefined4 processParameter_080032b4(uint **parameter)\n\n{\n  char charValue;\n  uint *pointer1;\n  uint *pointer2;\n  \n  charValue = *(char *)((int)parameter + 0x3d);\n  (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n  **parameter = **parameter | 1;\n  **parameter = **parameter & 0xfffffbff;\n  pointer1 = *parameter;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameter + 0x3d) == '\\\"') || (*(char *)((int)parameter + 0x3d) == '*')) {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = parameter[9];\n      parameter[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    if (((*parameter)[5] & 0x40) != 0) {\n      pointer1 = parameter[9];\n      parameter[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 4);\n  }\n  if (parameter[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      parameter[0xb] = (uint *)0xffff0000;\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((parameter[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_parameter_080032b4",
                "param_1": "parameter",
                "cVar1": "charValue",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_data_080033b8",
            "code": "\nvoid processData_080033b8(int *data)\n\n{\n  int ptrData;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  ptrData = *data;\n  flag3 = *(uint *)(ptrData + 0x18);\n  flag1 = *(uint *)(ptrData + 0x14);\n  flag2 = *(uint *)(ptrData + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080028de(data);\n        }\n      }\n      else {\n        FUN_080028d2(data);\n      }\n    }\n    else {\n      FUN_08002848(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002f9c(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800306c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002db2(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002efc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_080032b4(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002ca6(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002ad8(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002c54(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002ab8(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_data_080033b8",
                "param_1": "data",
                "iVar1": "ptrData",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "check_and_modify_flags_08003520",
            "code": "\nvoid checkAndModifyFlags_08003520(uint **params)\n\n{\n  char character;\n  uint *pointerVar;\n  uint flag1;\n  uint flag2;\n  \n  pointerVar = *params;\n  flag1 = pointerVar[5];\n  flag2 = pointerVar[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    params[0x10] = (uint *)((uint)params[0x10] | 1);\n    pointerVar[5] = 0xfffffeff;\n    **params = **params | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    params[0x10] = (uint *)((uint)params[0x10] | 2);\n    (*params)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)params + 0x3d);\n    if (((*(char *)((int)params + 0x3e) == ' ') && (*(short *)((int)params + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (params[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(params);\n    }\n    else {\n      params[0x10] = (uint *)((uint)params[0x10] | 4);\n      if (*(char *)((int)params + 0x3e) == '\\x10') {\n        **params = **params | 0x200;\n      }\n      (*params)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    params[0x10] = (uint *)((uint)params[0x10] | 8);\n    (*params)[5] = 0xfffff7ff;\n  }\n  if (params[0x10] != (uint *)0x0) {\n    FUN_0800316c(params);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "check_and_modify_flags_08003520",
                "param_1": "params",
                "cVar1": "character",
                "puVar2": "pointerVar",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "delay_function_0800365c",
            "code": "\nvoid delayFunction_0800365c(int inputValue)\n\n{\n  bool isDelayOver;\n  int delayCounter;\n  \n  delayCounter = inputValue * (DAT_20000084 / 8000);\n  do {\n    isDelayOver = delayCounter != 0;\n    delayCounter = delayCounter + -1;\n  } while (isDelayOver);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "delay_function_0800365c",
                "param_1": "inputValue",
                "local_4": "delayCounter",
                "bVar1": "isDelayOver"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_status_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkStatus_08003688(uint *status_flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint param_value;\n  bool isRestarted;\n  \n  if ((*status_flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (status_flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      param_value = status_flags[1];\n      if (param_value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (param_value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (param_value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (status_flags[1] == 0) {\n        start_time = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = FUN_08001cc4();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = FUN_08001cc4();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*status_flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (status_flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | status_flags[5] << 3;\n    }\n    else if (status_flags[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | status_flags[5] << 3;\n    }\n  }\n  if ((*status_flags & 8) != 0) {\n    if (status_flags[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*status_flags & 4) != 0) {\n    isRestarted = (_DAT_4002101c & 0x10000000) == 0;\n    if (isRestarted) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08001cc4();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    param_value = status_flags[3];\n    if (param_value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (param_value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (param_value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (status_flags[3] == 0) {\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (isRestarted) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (status_flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (status_flags[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (status_flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | status_flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | status_flags[8] | status_flags[9];\n        _DAT_42420060 = 1;\n        start_time = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08001cc4();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08001cc4();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08001cc4();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_status_08003688",
                "param_1": "status_flags",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "result",
                "uVar4": "param_value",
                "bVar5": "isRestarted"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_delay_08003a68",
            "code": "\n\n\nuint calculateDelay_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  value5 = 0x10100f0e;\n  value4 = 0xd0c0b0a;\n  value3 = 0x9080706;\n  value2 = 0x5040302;\n  value1 = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&value2 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&value1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_delay_08003a68",
                "local_1c": "value1",
                "uStack_18": "value2",
                "uStack_14": "value3",
                "uStack_10": "value4",
                "uStack_c": "value5"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "initialize_system_08003ad4",
            "code": "\n\n\nundefined4 initializeSystem_08003ad4(uint *systemConfig,uint memorySize)\n\n{\n  int iVar1;\n  int iVar2;\n  uint tempVariable;\n  \n  if ((_DAT_40022000 & 7) < memorySize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | memorySize;\n    if (memorySize != (memorySize & 7)) {\n      return 1;\n    }\n  }\n  if ((*systemConfig & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | systemConfig[2];\n  }\n  if ((*systemConfig & 1) != 0) {\n    tempVariable = systemConfig[1];\n    if (tempVariable == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVariable != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVariable | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08001cc4();\n    if (systemConfig[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (systemConfig[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (memorySize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | memorySize;\n    if (memorySize != (memorySize & 7)) {\n      return 1;\n    }\n  }\n  if ((*systemConfig & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | systemConfig[3];\n  }\n  if ((*systemConfig & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | systemConfig[4] << 3;\n  }\n  tempVariable = FUN_08003a68();\n  DAT_20000084 = tempVariable >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "initialize_system_08003ad4",
                "param_1": "systemConfig",
                "param_2": "memorySize",
                "uVar3": "tempVariable"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "initialize_hardware_08003afa",
            "code": "\n\n\nundefined4 initializeHardware_08003afa(uint *hardwareConfiguration,uint numOfConfigurations)\n\n{\n  int startTime;\n  int currentTime;\n  uint configurationValue;\n  \n  if ((*hardwareConfiguration & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | hardwareConfiguration[2];\n  }\n  if ((*hardwareConfiguration & 1) != 0) {\n    configurationValue = hardwareConfiguration[1];\n    if (configurationValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((configurationValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = configurationValue | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08001cc4();\n    if (hardwareConfiguration[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (hardwareConfiguration[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numOfConfigurations < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numOfConfigurations;\n    if (numOfConfigurations != (numOfConfigurations & 7)) {\n      return 1;\n    }\n  }\n  if ((*hardwareConfiguration & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | hardwareConfiguration[3];\n  }\n  if ((*hardwareConfiguration & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | hardwareConfiguration[4] << 3;\n  }\n  configurationValue = FUN_08003a68();\n  DAT_20000084 = configurationValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "initialize_hardware_08003afa",
                "param_1": "hardwareConfiguration",
                "param_2": "numOfConfigurations",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "configurationValue"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_variable_value_08003c44",
            "code": "\nundefined4 getGlobalVariableValue_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_variable_value_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shifted_value_08003c50",
            "code": "\n\n\nuint shiftedValue_08003c50(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_08003c44();\n  return uVar1 >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shifted_value_08003c50"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "calculate_shifted_value_08003c70",
            "code": "\n\n\nuint calculateShiftedValue_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "calculate_shifted_value_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_settings_08003c90",
            "code": "\n\n\nundefined4 updateSettings_08003c90(uint *settings)\n\n{\n  uint flag1;\n  uint flag2;\n  int initialValue;\n  int currentValue;\n  bool flag5;\n  \n  if ((*settings & 1) != 0) {\n    flag5 = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag5) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = FUN_08001cc4();\n        if (100 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settings[1] & 0x300))) {\n      flag2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      flag1 = _DAT_40021020 & 1;\n      _DAT_40021020 = flag2;\n      if (flag1 != 0) {\n        initialValue = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentValue = FUN_08001cc4();\n          if (5000 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settings[1];\n    if (flag5) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | settings[2];\n  }\n  if ((*settings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | settings[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_settings_08003c90",
                "param_1": "settings",
                "uVar1": "flag1",
                "uVar2": "flag2",
                "iVar3": "initialValue",
                "iVar4": "currentValue",
                "bVar5": "flag5"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_frequency_08003da4",
            "code": "\n\n\nuint calculateFrequency_08003da4(int inputValue)\n\n{\n  uint frequency;\n  undefined2 constant_1;\n  undefined4 constant_2;\n  undefined4 constant_3;\n  undefined4 constant_4;\n  undefined4 constant_5;\n  \n  constant_5 = 0x10100f0e;\n  constant_4 = 0xd0c0b0a;\n  constant_3 = 0x9080706;\n  constant_2 = 0x5040302;\n  constant_1 = 0x201;\n  if (inputValue == 2) {\n    frequency = FUN_08003c70();\n    frequency = frequency / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      frequency = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        frequency = 4000000;\n      }\n      else {\n        frequency = 8000000 / *(byte *)((int)&constant_1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      frequency = frequency * *(byte *)((int)&constant_2 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        frequency = (frequency * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      frequency = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      frequency = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        frequency = 0;\n      }\n      else {\n        frequency = 0xf424;\n      }\n    }\n    else {\n      frequency = 0;\n    }\n  }\n  else {\n    frequency = 0;\n  }\n  return frequency;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_frequency_08003da4",
                "param_1": "inputValue",
                "uVar1": "frequency",
                "local_24": "constant_1",
                "uStack_20": "constant_2",
                "uStack_1c": "constant_3",
                "uStack_18": "constant_4",
                "uStack_14": "constant_5"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_flags_08003ea0",
            "code": "\n\n\nvoid initializeFlags_08003ea0(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_flags_08003ea0",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "update_values_08003ed8",
            "code": "\nvoid updateValues_08003ed8(uint **param)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  ptr = *param;\n  if ((ptrValue & 0x1111) == 0) {\n    if ((ptrValue & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "update_values_08003ed8",
                "param_1": "param",
                "puVar1": "ptr",
                "puVar1[8]": "ptrValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_function_08003f18",
            "code": "\nvoid processFunction_08003f18(int *data)\n\n{\n  int value;\n  \n  value = *data;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(data + 7) = 1;\n    if ((*(uint *)(*data + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(data + 7) = 2;\n    if ((*(uint *)(*data + 0x18) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(data + 7) = 4;\n    if ((*(uint *)(*data + 0x1c) & 3) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(data + 7) = 8;\n    if ((*(uint *)(*data + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_function_08003f18",
                "param_1": "data",
                "iVar1": "value"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "set_bit_in_memory_08004092",
            "code": "\nvoid setBitInMemory_08004092(int memoryAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "set_bit_in_memory_08004092",
                "param_1": "memoryAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "initialize_memory_080040b0",
            "code": "\nundefined4 initializeMemory_080040b0(uint **memoryPointer,undefined4 value)\n\n{\n  uint *currentPointer;\n  \n  FUN_08004092(*memoryPointer,value,0);\n  if (((*memoryPointer == (uint *)0x40012c00) && ((checkCondition2 & 0x1111) == 0)) &&\n     ((checkCondition2 & 0x444) == 0)) {\n    modifiedValue = modifiedValue & 0xffff7fff;\n  }\n  currentPointer = *memoryPointer;\n  if (((currentPointer[8] & 0x1111) == 0) && ((currentPointer[8] & 0x444) == 0)) {\n    *currentPointer = *currentPointer & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryPointer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "initialize_memory_080040b0",
                "param_1": "memoryPointer",
                "param_2": "value",
                "puVar1": "currentPointer",
                "uRam40012c20": "checkCondition2",
                "uRam40012c44": "modifiedValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_bits_08004110",
            "code": "\nvoid updateBits_08004110(int dataPointer,uint bitPosition,int newValue)\n\n{\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_bits_08004110",
                "param_1": "dataPointer",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_flags_and_values_on_condition_0800412c",
            "code": "\nundefined4 updateFlagsAndValuesOnCondition_0800412c(uint **inputArray,undefined4 value)\n\n{\n  uint *currentValue;\n  \n  FUN_08004110(*inputArray,value,0);\n  currentValue = *inputArray;\n  if (((currentValue[8] & 0x1111) == 0) && ((currentValue[8] & 0x444) == 0)) {\n    currentValue[0x11] = currentValue[0x11] & 0xffff7fff;\n  }\n  currentValue = *inputArray;\n  if (((currentValue[8] & 0x1111) == 0) && ((currentValue[8] & 0x444) == 0)) {\n    *currentValue = *currentValue & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_flags_and_values_on_condition_0800412c",
                "param_1": "inputArray",
                "param_2": "value",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "update_flags_and_set_character_0800417c",
            "code": "\nvoid updateFlagsAndSetCharacter_0800417c(int *pointerToCharacter)\n\n{\n  *(uint *)(*pointerToCharacter + 0xc) = *(uint *)(*pointerToCharacter + 0xc) & 0xfffffedf;\n  *(uint *)(*pointerToCharacter + 0x14) = *(uint *)(*pointerToCharacter + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pointerToCharacter + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "update_flags_and_set_character_0800417c",
                "param_1": "pointerToCharacter"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "parse_data_08004198",
            "code": "\nundefined4 parse_data_08004198(int *data)\n\n{\n  short counter;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  counter = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = counter;\n  if (counter == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "parse_data_08004198",
                "param_1": "data",
                "sVar1": "counter",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "update_configuration_08004204",
            "code": "\nvoid updateConfiguration_08004204(int *config)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*config + 0x10) = *(uint *)(*config + 0x10) & 0xffffcfff | config[3];\n  *(uint *)(*config + 0xc) =\n       config[2] | config[4] | config[5] | *(uint *)(*config + 0xc) & 0xffffe9f3;\n  *(uint *)(*config + 0x14) = *(uint *)(*config + 0x14) & 0xfffffcff | config[6];\n  result10 = *config;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = config[1];\n    result2 = FUN_08003c50();\n    result7 = config[1];\n    result3 = FUN_08003c50();\n    result8 = config[1];\n    result4 = FUN_08003c50();\n    result9 = config[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(config[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = config[1];\n  result1 = FUN_08003c70();\n  result6 = config[1];\n  result2 = FUN_08003c70();\n  result7 = config[1];\n  result3 = FUN_08003c70();\n  result8 = config[1];\n  result4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(config[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "update_configuration_08004204",
                "param_1": "config",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_and_modify_values_080043b4",
            "code": "\nundefined4 check_and_modify_values_080043b4(uint **pointer_array,uint value_1,uint boolean_flag,int value_2,uint value_3)\n\n{\n  int result;\n  \n  do {\n    if (((value_1 & ~**pointer_array) == 0) != boolean_flag) {\n      return 0;\n    }\n  } while ((value_3 == 0xffffffff) ||\n          ((value_3 != 0 && (result = FUN_08001cc4(), (uint)(result - value_2) <= value_3))));\n  (*pointer_array)[3] = (*pointer_array)[3] & 0xfffffe5f;\n  (*pointer_array)[5] = (*pointer_array)[5] & 0xfffffffe;\n  *(undefined *)((int)pointer_array + 0x39) = 0x20;\n  *(undefined *)((int)pointer_array + 0x3a) = 0x20;\n  *(undefined *)(pointer_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_and_modify_values_080043b4",
                "param_1": "pointer_array",
                "param_2": "value_1",
                "param_3": "boolean_flag",
                "param_4": "value_2",
                "param_5": "value_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "validate_and_update_param_0800441a",
            "code": "\nundefined4 validate_and_update_param_0800441a(int *param)\n\n{\n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)param + 0x39) = 0x24;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffdfff;\n    FUN_08004204(param);\n    *(uint *)(*param + 0x10) = *(uint *)(*param + 0x10) & 0xffffb7ff;\n    *(uint *)(*param + 0x14) = *(uint *)(*param + 0x14) & 0xffffffd5;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)param + 0x39) = 0x20;\n    *(undefined *)((int)param + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "validate_and_update_param_0800441a",
                "param_1": "param",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *data_ptr,ushort *ushort_ptr,int size,undefined4 result)\n\n{\n  int temp_var;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (ushort_ptr == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (size == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      return_value = FUN_08001cc4();\n      *(short *)(data_ptr + 9) = (short)size;\n      *(short *)((int)data_ptr + 0x26) = (short)size;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          temp_var = FUN_080043b4(data_ptr,0x80,0,return_value,result);\n          if (temp_var != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *ushort_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            ushort_ptr = ushort_ptr + 1;\n          }\n          else {\n            ushort_ptr = (ushort *)((int)ushort_ptr + 1);\n          }\n        }\n        else {\n          temp_var = FUN_080043b4(data_ptr,0x80,0,return_value,result);\n          if (temp_var != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)ushort_ptr;\n          ushort_ptr = (ushort *)((int)ushort_ptr + 1);\n        }\n      }\n      temp_var = FUN_080043b4(data_ptr,0x40,0,return_value,result);\n      if (temp_var == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "data_ptr",
                "param_2": "ushort_ptr",
                "param_3": "size",
                "param_4": "result",
                "iVar1": "temp_var",
                "uVar2": "return_value"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "check_and_update_values_0800455a",
            "code": "\nundefined4 check_and_update_values_0800455a(int *data_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)data_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data_array + 0xe) != '\\x01') {\n    data_array[8] = value_1;\n    *(short *)(data_array + 9) = (short)value_2;\n    *(short *)((int)data_array + 0x26) = (short)value_2;\n    data_array[0xf] = 0;\n    *(undefined *)((int)data_array + 0x39) = 0x21;\n    *(undefined *)(data_array + 0xe) = 0;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "check_and_update_values_0800455a",
                "param_1": "data_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[8]": "data_array[8]",
                "param_1[0xf]": "data_array[0xf]"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "check_and_modify_data_080045a2",
            "code": "\nundefined4 checkAndModifyData_080045a2(int *dataPointer,int value1,int value2)\n\n{\n  if (*(char *)((int)dataPointer + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(dataPointer + 0xe) != '\\x01') {\n    modifiedValue1 = value1;\n    *(short *)(dataPointer + 0xb) = (short)value2;\n    *(short *)((int)dataPointer + 0x2e) = (short)value2;\n    modifiedValue4 = 0;\n    *(undefined *)((int)dataPointer + 0x3a) = 0x22;\n    *(undefined *)(dataPointer + 0xe) = 0;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x100;\n    *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) | 1;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "check_and_modify_data_080045a2",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "modifiedValue1",
                "param_1[0xf]": "modifiedValue4"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "set_flag_and_invoke_function_080045fe",
            "code": "\nundefined4 setFlagAndInvokeFunction_080045fe(int *flagPtr)\n\n{\n  *(uint *)(*flagPtr + 0xc) = *(uint *)(*flagPtr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)flagPtr + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "set_flag_and_invoke_function_080045fe",
                "param_1": "flagPtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_string_08004618",
            "code": "\nundefined4 processString_08004618(int *input)\n\n{\n  byte *bytePointer;\n  short counter;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)input + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input[2] == 0x1000) {\n    if (input[4] == 0) {\n      *(ushort *)input[10] = (ushort)((uint)(*(int *)(*input + 4) << 0x17) >> 0x17);\n      input[10] = input[10] + 2;\n    }\n    else {\n      *(ushort *)input[10] = (ushort)*(undefined4 *)(*input + 4) & 0xff;\n      input[10] = input[10] + 1;\n    }\n  }\n  else if (input[4] == 0) {\n    undefinedPointer = (undefined *)input[10];\n    input[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*input + 4);\n  }\n  else {\n    bytePointer = (byte *)input[10];\n    input[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*input + 4) & 0x7f;\n  }\n  counter = *(short *)((int)input + 0x2e) + -1;\n  *(short *)((int)input + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffdf;\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xfffffeff;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_string_08004618",
                "param_1": "input",
                "pbVar1": "bytePointer",
                "sVar2": "counter",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_flags_080046b8",
            "code": "\nvoid processFlags_080046b8(uint **flags)\n\n{\n  int result;\n  uint flagVar2;\n  uint *flagsPointer;\n  uint flagVar4;\n  uint flagVar5;\n  \n  flagsPointer = *flags;\n  flagVar5 = *flagsPointer;\n  flagVar2 = flagsPointer[3];\n  if ((((flagVar5 & 0xf) == 0) && ((flagVar5 & 0x20) != 0)) && ((flagVar2 & 0x20) != 0)) {\n    FUN_08004618(flags);\n    return;\n  }\n  if (((flagVar5 & 0xf) == 0) || ((flagVar4 = flagsPointer[5] & 1, flagVar4 == 0 && ((flagVar2 & 0x120) == 0)))) {\n    if (((flagVar5 & 0x80) != 0) && ((flagVar2 & 0x80) != 0)) {\n      FUN_08004198(flags);\n      return;\n    }\n    if (((flagVar5 & 0x40) != 0) && ((flagVar2 & 0x40) != 0)) {\n      FUN_080045fe(flags);\n    }\n  }\n  else {\n    if (((flagVar5 & 1) != 0) && ((flagVar2 & 0x100) != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 1);\n    }\n    if (((flagVar5 & 4) != 0) && (flagVar4 != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 2);\n    }\n    if (((flagVar5 & 2) != 0) && (flagVar4 != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 4);\n    }\n    if (((flagVar5 & 8) != 0) && (flagVar4 != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 8);\n    }\n    if (flags[0xf] != (uint *)0x0) {\n      if (((flagVar5 & 0x20) != 0) && ((flagVar2 & 0x20) != 0)) {\n        FUN_08004618(flags);\n      }\n      if ((((uint)flags[0xf] & 8) == 0) && (((*flags)[5] & 0x40) == 0)) {\n        FUNC_08005650(flags);\n        flags[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(flags);\n      flagsPointer = *flags;\n      if ((flagsPointer[5] & 0x40) == 0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      flagsPointer[5] = flagsPointer[5] & 0xffffffbf;\n      if (flags[0xd] == (uint *)0x0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      flags[0xd][0xd] = (uint)&LAB_080047d8_1;\n      result = FUN_0800258c(flags[0xd]);\n      if (result != 0) {\n        (*(code *)flags[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_flags_080046b8",
                "param_1": "flags",
                "iVar1": "result",
                "uVar2": "flagVar2",
                "puVar3": "flagsPointer",
                "uVar4": "flagVar4",
                "uVar5": "flagVar5"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "extracted_bit_080047f4",
            "code": "\nuint extractedBit_080047f4(uint inputNumber,int baseAddress)\n\n{\n  return *(uint *)(baseAddress + ((inputNumber << 0x18) >> 0x1c) * 4) >> (inputNumber & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "extracted_bit_080047f4",
                "param_1": "inputNumber",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_in_memory_0800480a",
            "code": "\nvoid setBitInMemory_0800480a(uint data,int memory)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (data << 0x18) >> 0x1c;\n  *(uint *)(memory + shiftedIndex * 4) = *(uint *)(memory + shiftedIndex * 4) | 1 << (data & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_in_memory_0800480a",
                "param_1": "data",
                "param_2": "memory",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_bit_value_08004828",
            "code": "\nvoid updateBitValue_08004828(uint bitIndex,int arrayAddress)\n\n{\n  uint bitIndexShifted;\n  \n  bitIndexShifted = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + bitIndexShifted * 4) = *(uint *)(arrayAddress + bitIndexShifted * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_bit_value_08004828",
                "param_1": "bitIndex",
                "param_2": "arrayAddress",
                "uVar1": "bitIndexShifted"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "map_param_to_address_08004848",
            "code": "\nundefined4 mapParamToAddress_08004848(undefined4 param)\n\n{\n  switch(param) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "map_param_to_address_08004848",
                "param_1": "param"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_register_base_address_08004884",
            "code": "\n\n\nundefined4 setRegisterBaseAddress_08004884(undefined4 registerIndex)\n\n{\n  undefined4 baseAddress;\n  \n  switch(registerIndex) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    baseAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    baseAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    baseAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    baseAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    baseAddress = 0x40011800;\n    break;\n  default:\n    baseAddress = 0;\n  }\n  return baseAddress;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_register_base_address_08004884",
                "param_1": "registerIndex",
                "uVar1": "baseAddress"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "process_function_0800492c",
            "code": "\nuint processFunction_0800492c(undefined4 inputParameter,undefined4 unusedParameter1,undefined4 dataParameter,undefined4 unusedParameter2)\n\n{\n  int result;\n  uint processedResult;\n  \n  result = FUN_08004cce(inputParameter,&DAT_08007400,dataParameter,unusedParameter2,unusedParameter2);\n  processedResult = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < processedResult - 1) {\n    processedResult = 0;\n  }\n  return processedResult;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "process_function_0800492c",
                "param_1": "inputParameter",
                "param_2": "unusedParameter1",
                "param_3": "dataParameter",
                "param_4": "unusedParameter2",
                "iVar1": "result",
                "uVar2": "processedResult"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "process_input_08004948",
            "code": "\nundefined4 process_input_08004948(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08004cce(input_1,&DAT_080074b4,input_3,input_4,input_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "process_input_08004948",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_flag_and_call_function_08004974",
            "code": "\n\n\nvoid update_flag_and_call_function_08004974(int *flag_ptr,undefined4 param)\n\n{\n  undefined4 result;\n  uint flag;\n  int flag_value;\n  uint bitmask;\n  undefined4 constant_3;\n  undefined4 constant_0;\n  \n  flag_value = *flag_ptr;\n  if (flag_value == 0x40012400) {\n    flag = _DAT_40021018 | 0x200;\n    flag_value = 0x200;\n    _DAT_40021018 = flag;\n  }\n  else {\n    flag = 0x40012800;\n    if (flag_value == 0x40012800) {\n      flag = _DAT_40021018 | 0x400;\n      flag_value = 0x400;\n      _DAT_40021018 = flag;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,param,flag,flag_value);\n  bitmask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  constant_3 = 3;\n  constant_0 = 0;\n  FUN_08002624(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_flag_and_call_function_08004974",
                "param_1": "flag_ptr",
                "param_2": "param",
                "uVar1": "result",
                "uVar2": "flag",
                "iVar3": "flag_value",
                "local_18": "bitmask",
                "local_14": "constant_3",
                "local_10": "constant_0"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "apply_settings_080049f0",
            "code": "\n\n\nvoid applySettings_080049f0(int *settings)\n\n{\n  if (*settings != 0x40012400) {\n    if (*settings == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "apply_settings_080049f0",
                "param_1": "settings"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "validate_and_process_data_08004a4c",
            "code": "\nundefined2 validate_and_process_data_08004a4c(undefined4 input_data)\n\n{\n  int status;\n  uint flags;\n  undefined2 result;\n  uint data_length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var9;\n  undefined4 varA;\n  undefined4 varB;\n  undefined4 varC;\n  undefined4 varD;\n  undefined4 varE;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  data_length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  buffer = FUN_08004c78(input_data,&DAT_08007400);\n  if (buffer == 0) {\n    result = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var9 = 0;\n    varB = 0;\n    varD = 0xe0000;\n    varE = 0;\n    varA = 1;\n    varC = 0;\n    DAT_20000080 = (undefined)input_data;\n    status = FUN_0800213c(&buffer);\n    if (status == 0) {\n      data_length = FUN_0800492c(input_data);\n      if (data_length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        status = FUN_08001e48(&buffer,&data_length);\n        if (status == 0) {\n          status = FUN_08002384(&buffer);\n          if (status == 0) {\n            status = FUN_08002004(&buffer);\n            if (status == 0) {\n              status = FUN_08001cd0(&buffer,10);\n              if (status == 0) {\n                flags = FUN_08001f80(&buffer);\n                if ((flags & 0x200) != 0) {\n                  result = FUN_08001e40(&buffer);\n                }\n                status = FUN_08002348(&buffer);\n                if (status == 0) {\n                  status = FUN_0800224c(&buffer);\n                  if (status != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "validate_and_process_data_08004a4c",
                "param_1": "input_data",
                "iVar1": "status",
                "uVar2": "flags",
                "local_46": "result",
                "local_44": "data_length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var9",
                "local_28": "varA",
                "local_24": "varB",
                "local_20": "varC",
                "local_1c": "varD",
                "local_10": "varE"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_system_08004b34",
            "code": "\nvoid initialize_system_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_system_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "check_and_process_data_08004b3c",
            "code": "\nvoid check_and_process_data_08004b3c(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  int data_array [17];\n  \n  data_array[0] = FUN_08004c78(input_data,&DAT_080074b4);\n  if ((data_array[0] != 0) &&\n     ((((result = FUN_08004948(input_data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(input_data,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(data_array,result);\n    }\n    else {\n      FUN_0800412c(data_array,result);\n    }\n    FUN_08003ed8(data_array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "check_and_process_data_08004b3c",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "data_array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_application_08004b94",
            "code": "\nvoid initialize_application_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_application_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_application_08004b9e",
            "code": "\nvoid initialize_application_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_application_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "initialize_device_08004bb0",
            "code": "\n\n\nvoid initializeDevice_08004bb0(uint deviceId,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 deviceConfig;\n  uint bitmask;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  \n  deviceConfig = FUN_08004884((deviceId << 0x18) >> 0x1c);\n  bitmask = 1 << (deviceId & 0xf) & 0xffff;\n  localVar3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceId - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceId == 0xf) || (deviceId == 0x13)) || (deviceId == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localVar1 = param2;\n  localVar2 = param3;\n  FUN_08002624(deviceConfig,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "initialize_device_08004bb0",
                "param_1": "deviceId",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "deviceConfig",
                "local_20": "bitmask",
                "local_1c": "localVar1",
                "local_18": "localVar2",
                "local_14": "localVar3"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "execute_based_on_condition_08004c30",
            "code": "\nvoid executeBasedOnCondition_08004c30(undefined4 input1,undefined2 input2,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    FUN_0800281e(input1,input2,0,data,data);\n    return;\n  }\n  FUN_0800281e(input1,input2,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "execute_based_on_condition_08004c30",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition",
                "param_4": "data"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "execute_function_08004c48",
            "code": "\nvoid executeFunction_08004c48(undefined4 data1,undefined2 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_08002810(data1,data2,data3,data4,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "execute_function_08004c48",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_application_08004c52",
            "code": "\nvoid initialize_application_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_application_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_in_array_08004c5e",
            "code": "\nundefined4 find_value_in_array_08004c5e(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_in_array_08004c5e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_parameter_08004c78",
            "code": "\nundefined4 checkParameter_08004c78(int input)\n\n{\n  undefined4 returnValue;\n  \n  if (input != -1) {\n    returnValue = FUN_08004c5e();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_parameter_08004c78",
                "param_1": "input",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_character_index_08004c8a",
            "code": "\nint find_character_index_08004c8a(int target_character,char *character_array)\n\n{\n  while( true ) {\n    if (*(int *)(character_array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(character_array + 4) == target_character) break;\n    character_array = character_array + 0xc;\n  }\n  return (int)*character_array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_character_index_08004c8a",
                "param_1": "target_character",
                "param_2": "character_array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_parameter_and_call_function_08004ca2",
            "code": "\nundefined4 checkParameterAndCallFunction_08004ca2(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam != 0) {\n    returnValue = FUN_08004c8a();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_parameter_and_call_function_08004ca2",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_index_08004cb2",
            "code": "\nundefined4 find_value_index_08004cb2(int value_to_find,char *array_to_search)\n\n{\n  while( true ) {\n    if (*array_to_search == -1) {\n      return 0xffffffff;\n    }\n    if (*array_to_search == value_to_find) break;\n    array_to_search = array_to_search + 0xc;\n  }\n  return *(undefined4 *)(array_to_search + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_index_08004cb2",
                "param_1": "value_to_find",
                "param_2": "array_to_search"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "check_return_value_08004cce",
            "code": "\nundefined4 checkReturnValue_08004cce(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_08004cb2();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "check_return_value_08004cce",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_in_array_08004ce2",
            "code": "\nundefined4 find_value_in_array_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_in_array_08004ce2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_smaller_08004d06",
            "code": "\nint compareAndReturnSmaller_08004d06(int num1,int num2)\n\n{\n  if (num1 != num2) {\n    if (num1 == 0) {\n      return num2;\n    }\n    if (num2 == 0) {\n      return num1;\n    }\n    num1 = 0;\n  }\n  return num1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_smaller_08004d06",
                "param_1": "num1",
                "param_2": "num2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_if_not_null_08004d18",
            "code": "\nvoid executeCallbackIfNotNull_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_if_not_null_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_peripheral_registers_08004d44",
            "code": "\n\n\nvoid initializePeripheralRegisters_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_peripheral_registers_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_memory_config_08004d90",
            "code": "\n\n\nvoid updateMemoryConfig_08004d90(int *memoryConfig)\n\n{\n  if (*memoryConfig == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memoryConfig == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memoryConfig == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memoryConfig == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_memory_config_08004d90",
                "param_1": "memoryConfig"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtract_four_08004df4(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackParameter)\n\n{\n  int callbackResult;\n  \n  callbackResult = FUN_08004df4();\n  if ((*(code **)(callbackResult + 0x4c) != (code *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(code **)(callbackResult + 0x4c))(callbackResult,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackParameter",
                "iVar1": "callbackResult"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_callback_function_08004e12",
            "code": "\nvoid executeCallbackFunction_08004e12(void)\n\n{\n  int result;\n  \n  result = FUN_08004df4();\n  if (*(functionPointer **)(result + 0x48) != (functionPointer *)0x0) {\n    (**(functionPointer **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_callback_function_08004e12",
                "iVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_execute_08004e20",
            "code": "\nvoid check_and_execute_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_execute_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_4_08004e70",
            "code": "\nint subtract_4_08004e70(int input_num)\n\n{\n  return input_num + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_4_08004e70",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "process_data_08004e74",
            "code": "\nvoid processData_08004e74(int dataPtr,int flag,int value,undefined4 param)\n\n{\n  int tempVar;\n  \n  tempVar = FUN_08004e70();\n  if (value == *(int *)(dataPtr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(tempVar + 0x88) = 0;\n      *(undefined *)(tempVar + 0x5c) = 0;\n      if (*(code **)(tempVar + 100) != (code *)0x0) {\n        (**(code **)(tempVar + 100))();\n      }\n      FUN_08002af8(dataPtr,tempVar + 0x68,*(undefined *)(tempVar + 0x88),8);\n      return;\n    }\n    *(undefined *)(tempVar + 0x5c) = 1;\n    FUN_08002b84(dataPtr,tempVar + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "process_data_08004e74",
                "param_1": "dataPtr",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param",
                "iVar1": "tempVar"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_callback_if_enabled_08004ec4",
            "code": "\nvoid executeCallbackIfEnabled_08004ec4(undefined4 callbackParameter)\n\n{\n  int callbackContext;\n  \n  callbackContext = FUN_08004e70();\n  if (((*(callbackFunctionType **)(callbackContext + 0x60) != (callbackFunctionType *)0x0) && (*(char *)(callbackContext + 0x5c) == '\\x01')) &&\n     (*(char *)(callbackContext + 0x2c) != ' ')) {\n    (**(callbackFunctionType **)(callbackContext + 0x60))(callbackContext + 0x68);\n  }\n  FUN_08002c10(callbackParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_callback_if_enabled_08004ec4",
                "param_1": "callbackParameter",
                "iVar1": "callbackContext",
                "code": "callbackFunctionType"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_execute_function_08004ef4",
            "code": "\nvoid checkAndExecuteFunction_08004ef4(undefined4 input)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004e70();\n  if (*(char *)(functionPointer + 0x5d) == '\\0') {\n    FUN_08002c10(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_execute_function_08004ef4",
                "param_1": "input",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "configure_uart_pins_08004f4c",
            "code": "\n\n\nvoid configure_uart_pins_08004f4c(int *pin_config)\n\n{\n  int uart_pin_config;\n  int peripheral_pin_config;\n  undefined4 gpio_mode;\n  uint gpio_config;\n  uint uart_pin_mask;\n  uint gpio_pin_config;\n  uint gpio_mode_config;\n  undefined4 uart_mode_config;\n  \n  if (pin_config != (int *)0x0) {\n    uart_pin_config = FUN_08004c78((int)*(char *)(pin_config + 0x16),&DAT_0800764c);\n    peripheral_pin_config = FUN_08004c78((int)*(char *)((int)pin_config + 0x59),&DAT_08007604);\n    if ((peripheral_pin_config == 0) || (uart_pin_config == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral_pin_config);\n    }\n    else {\n      uart_pin_config = FUN_08004d06(uart_pin_config);\n      *pin_config = uart_pin_config;\n      if (uart_pin_config == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin_config == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pin_config + 0x11) = 0;\n          *(undefined *)((int)pin_config + 0x5a) = 0x25;\n        }\n        else if (uart_pin_config == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pin_config + 0x11) = 1;\n          *(undefined *)((int)pin_config + 0x5a) = 0x26;\n        }\n        else if (uart_pin_config == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pin_config + 0x11) = 2;\n          *(undefined *)((int)pin_config + 0x5a) = 0x27;\n        }\n        gpio_mode = FUN_08004884((uint)((int)*(char *)((int)pin_config + 0x59) << 0x18) >> 0x1c);\n        gpio_config = FUN_08004cce((int)*(char *)((int)pin_config + 0x59),&DAT_08007604);\n        uart_pin_mask = 1 << (*(byte *)((int)pin_config + 0x59) & 0xf) & 0xffff;\n        gpio_pin_config = (gpio_config >> 3 & 1) << 4 | gpio_config & 7;\n        gpio_mode_config = (gpio_config << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((gpio_config << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uart_mode_config = 3;\n        FUN_08002624(gpio_mode,&uart_pin_mask);\n        gpio_mode = FUN_08004884((uint)((int)*(char *)(pin_config + 0x16) << 0x18) >> 0x1c);\n        gpio_config = FUN_08004cce((int)*(char *)(pin_config + 0x16),&DAT_0800764c);\n        uart_pin_mask = 1 << (*(byte *)(pin_config + 0x16) & 0xf) & 0xffff;\n        gpio_pin_config = (gpio_config >> 3 & 1) << 4 | gpio_config & 7;\n        gpio_mode_config = (gpio_config << 0x1a) >> 0x1e;\n        FUN_08002624(gpio_mode,&uart_pin_mask);\n        (&DAT_2000032c)[*(byte *)(pin_config + 0x11)] = pin_config + 1;\n        pin_config[1] = *pin_config;\n        pin_config[2] = pin_config[0x12];\n        pin_config[3] = pin_config[0x13];\n        pin_config[4] = pin_config[0x14];\n        pin_config[5] = pin_config[0x15];\n        pin_config[6] = 0xc;\n        pin_config[7] = 0;\n        pin_config[8] = 0;\n        FUN_0800441a(pin_config + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "param_1": "pin_config",
                "iVar1": "uart_pin_config",
                "iVar2": "peripheral_pin_config",
                "uVar3": "gpio_mode",
                "uVar4": "gpio_config",
                "local_20": "uart_pin_mask",
                "local_1c": "gpio_pin_config",
                "local_18": "gpio_mode_config",
                "local_14": "uart_mode_config"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int errorCode;\n  undefined4 data;\n  \n  errorCode = FUN_08004c78(2,&DAT_0800764c);\n  if (errorCode != 0) {\n    data = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(data,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "errorCode",
                "uVar2": "data"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "process_data_080053d4",
            "code": "\nuint process_data_080053d4(undefined4 input_value,uint flags)\n\n{\n  int value1;\n  int value2;\n  uint index;\n  \n  value1 = FUN_08001cc4();\n  value2 = FUN_08004c78(2,&DAT_0800764c);\n  if (value2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (value2 = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != value2))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    value2 = FUN_08004478((&DAT_2000032c)[index],input_value,flags & 0xffff,1000);\n    if (value2 == 0) {\n      return flags;\n    }\n    value2 = FUN_08001cc4();\n  } while ((uint)(value2 - value1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "process_data_080053d4",
                "param_1": "input_value",
                "param_2": "flags",
                "iVar1": "value1",
                "iVar2": "value2",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "check_flag_0800548c",
            "code": "\nbool checkFlag_0800548c(int input)\n\n{\n  uint flagValue;\n  \n  flagValue = FUN_080047e8((&DAT_2000032c)[*(byte *)(input + 0x44)]);\n  return (flagValue & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "check_flag_0800548c",
                "param_1": "input",
                "uVar1": "flagValue"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "check_flag_status_080054b0",
            "code": "\nbool checkFlagStatus_080054b0(int flagIndex)\n\n{\n  uint bitMask;\n  \n  bitMask = FUN_080047e8((&DAT_2000032c)[*(byte *)(flagIndex + 0x44)]);\n  return (bitMask & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "check_flag_status_080054b0",
                "param_1": "flagIndex",
                "uVar1": "bitMask"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_data_080054d4",
            "code": "\nundefined4 extractData_080054d4(int input,undefined *output,undefined4 size,undefined4 extraParam)\n\n{\n  int result;\n  \n  if (input == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *output = *(undefined *)(input + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(input + 0x44)],input + 0x45,1,&DAT_2000032c,extraParam);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_data_080054d4",
                "param_1": "input",
                "param_2": "output",
                "param_3": "size",
                "param_4": "extraParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int dataPtr,undefined4 newValue,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPtr != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPtr + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newValue;\n      *(int *)(&DAT_200002f0 + index * 4) = dataPtr;\n      FUN_08002494((int)*(char *)(dataPtr + 0x5a),0,1,index,unused2);\n      FUN_080024f8((int)*(char *)(dataPtr + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],dataPtr + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "process_data_08005568",
            "code": "\nvoid processData_08005568(int dataPointer,undefined4 paramValue)\n\n{\n  byte byteValue;\n  \n  if (dataPointer != 0) {\n    byteValue = *(byte *)(dataPointer + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = paramValue;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = dataPointer;\n    FUN_08002494((int)*(char *)(dataPointer + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(dataPointer + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "process_data_08005568",
                "param_1": "dataPointer",
                "param_2": "paramValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_index_080055bc",
            "code": "\nuint find_index_080055bc(int input_value)\n\n{\n  uint index;\n  \n  if (input_value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (input_value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_index_080055bc",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_code_080055e0",
            "code": "\nvoid executeCode_080055e0(void)\n\n{\n  uint codeIndex;\n  \n  codeIndex = FUN_080055bc();\n  if (codeIndex < 5) {\n    (**(code **)(&DAT_200002dc + codeIndex * 4))(*(undefined4 *)(&DAT_200002f0 + codeIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_code_080055e0",
                "uVar1": "codeIndex"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_selected_function_08005604",
            "code": "\nvoid executeSelectedFunction_08005604(void)\n\n{\n  uint randomValue;\n  int result;\n  int functionPointer;\n  \n  randomValue = FUN_080055bc();\n  functionPointer = *(int *)(&DAT_20000318 + randomValue * 4);\n  if ((randomValue < 5) && (result = (**(code **)(&DAT_20000304 + randomValue * 4))(functionPointer), result != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(functionPointer + 0x44)],\n                 *(int *)(functionPointer + 100) + (uint)*(ushort *)(functionPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_selected_function_08005604",
                "uVar1": "randomValue",
                "iVar2": "result",
                "iVar3": "functionPointer"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= &stackPointer) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "stack0x00000000": "stackPointer"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_default_value_08005714",
            "code": "\nundefined4 get_default_value_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_default_value_08005714"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "set_memory_flag_0800571a",
            "code": "\nundefined4 setMemoryFlag_0800571a(undefined4 param1,int param2)\n\n{\n  *(undefined4 *)(param2 + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "set_memory_flag_0800571a",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_flag_08005724",
            "code": "\nundefined4 initializeFlag_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_flag_08005724"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_08005728",
            "code": "\nundefined4 initialize_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_08005728"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "initialize_program_0800572c",
            "code": "\nundefined4 initializeProgram_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "initialize_program_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_function_08005730",
            "code": "\nvoid initializeFunction_08005730(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080053d4(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_function_08005730",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "check_return_value_08005750",
            "code": "\nundefined4 check_return_value_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "check_return_value_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "map_characters_08005754",
            "code": "\nuint mapCharacters_08005754(uint inputValue)\n\n{\n  bool isInRange;\n  char mappedCharacter;\n  uint result;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = inputValue < 0x3c;\n  }\n  if (isInRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    mappedCharacter = (&DAT_080076f0)[inputValue];\n  }\n  else {\n    mappedCharacter = -1;\n  }\n  if (mappedCharacter == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "map_characters_08005754",
                "param_1": "inputValue",
                "bVar1": "isInRange",
                "cVar2": "mappedCharacter",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "execute_process_080057b4",
            "code": "\nvoid executeProcess_080057b4(uint index,undefined4 mode,undefined4 param,undefined *data)\n\n{\n  int result;\n  undefined *pointer;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_080076f0)[index];\n    pointer = &DAT_080076f0;\n  }\n  else {\n    value = -1;\n    pointer = data;\n  }\n  if (value != -1) {\n    result = FUN_080047f4(value,&DAT_20000344,param,pointer,data);\n    if (result != 0) {\n      result = FUN_08004ce2(value,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(value);\n      }\n      FUN_08004828(value,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(value,0);\n      break;\n    case 1:\n      FUN_08004bb0(value,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(value,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(value,0,2);\n    }\n    FUN_0800480a(value,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "execute_process_080057b4",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "param",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "pointer",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "process_data_08005848",
            "code": "\nvoid processData_08005848(uint index,undefined4 value1,undefined4 value2,undefined *data)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *pointer;\n  uint charValue;\n  \n  if (index < 0x3c) {\n    charValue = (uint)(char)(&DAT_080076f0)[index];\n    pointer = &DAT_080076f0;\n  }\n  else {\n    charValue = 0xffffffff;\n    pointer = data;\n  }\n  if ((charValue != 0xffffffff) &&\n     (result = FUN_080047f4(charValue,&DAT_20000358,value2,pointer,data), result != 0)) {\n    shiftedValue = FUN_08004848((charValue << 0x18) >> 0x1c);\n    FUN_08004c30(shiftedValue,1 << (charValue & 0xf) & 0xffff,value1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "process_data_08005848",
                "param_1": "index",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "data",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "pointer",
                "uVar4": "charValue"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_value_08005890",
            "code": "\nchar check_value_08005890(uint value)\n\n{\n  char result;\n  int function_result;\n  undefined4 shifted_value;\n  uint modified_value;\n  \n  if (value < 0x3c) {\n    modified_value = (uint)(char)(&DAT_080076f0)[value];\n  }\n  else {\n    modified_value = 0xffffffff;\n  }\n  if (modified_value == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    function_result = FUN_080047f4(modified_value,&DAT_20000358);\n    if (function_result == 0) {\n      result = '\\0';\n    }\n    else {\n      shifted_value = FUN_08004848((modified_value << 0x18) >> 0x1c);\n      result = FUN_08004c48(shifted_value,1 << (modified_value & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_value_08005890",
                "param_1": "value",
                "cVar1": "result",
                "iVar2": "function_result",
                "uVar3": "shifted_value",
                "uVar4": "modified_value"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_system_080058e0",
            "code": "\nvoid initialize_system_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_system_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_checksum_0800591e",
            "code": "\nushort calculate_checksum_0800591e(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_data_0800598a",
            "code": "\nvoid updateData_0800598a(int dataPointer)\n\n{\n  int result;\n  ushort updatedValue;\n  undefined newValue;\n  \n  result = FUN_080054d4(dataPointer,&newValue);\n  if ((result == 0) &&\n     (updatedValue = *(short *)(dataPointer + 0x60) + 1U & 0x3f, updatedValue != *(ushort *)(dataPointer + 0x62))) {\n    *(undefined *)(*(int *)(dataPointer + 0x5c) + (uint)*(ushort *)(dataPointer + 0x60)) = newValue;\n    *(ushort *)(dataPointer + 0x60) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "dataPointer",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_parameters_08005a44",
            "code": "\nvoid initializeParameters_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_parameters_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "configure_serial_port_08005a68",
            "code": "\nvoid configureSerialPort_08005a68(int serialPortAddress,undefined4 baudRate,byte serialOptions)\n\n{\n  uint offset;\n  char *errorString;\n  byte serialOptionsMask;\n  int configValue;\n  byte *bytePointer;\n  char unaff_r4;\n  int unaff_r6;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x140) = serialOptions;\n  serialOptionsMask = serialOptions & 7;\n  if (serialOptionsMask == 4) {\n    configValue = 7;\n  }\n  else if (serialOptionsMask == 6) {\n    configValue = 8;\n  }\n  else if (serialOptionsMask == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((serialOptions & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((serialOptions & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((serialOptions & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08004f4c(serialPortAddress + 0xd4);\n    FUN_08005510(serialPortAddress + 0xd4,0x800598b);\n    return;\n  }\n  errorString = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTable = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(offset + unaff_r6);\n  errorString[0x1e] = unaff_r4;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (offset < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[offset];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "configure_serial_port_08005a68",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "serialOptions",
                "extraout_r1": "offset",
                "pcVar1": "errorString",
                "bVar2": "serialOptionsMask",
                "iVar3": "configValue",
                "pbVar4": "bytePointer",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "decode_param_08005b24",
            "code": "\nvoid decode_param_08005b24(int destination_address,uint input_value)\n\n{\n  undefined decoded_value;\n  code *jump_table;\n  \n  if (input_value < 0x3c) {\n    decoded_value = (&DAT_080076f0)[input_value];\n  }\n  else {\n    decoded_value = 0xff;\n  }\n  *(undefined *)(destination_address + 0x12d) = decoded_value;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "decode_param_08005b24",
                "param_1": "destination_address",
                "param_2": "input_value",
                "uVar1": "decoded_value",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_default_value_08005b3c",
            "code": "\nvoid setDefaultValue_08005b3c(int address,uint index)\n\n{\n  undefined defaultValue;\n  \n  if (index < 0x3c) {\n    defaultValue = (&DAT_080076f0)[index];\n  }\n  else {\n    defaultValue = 0xff;\n  }\n  *(undefined *)(address + 300) = defaultValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_default_value_08005b3c",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "defaultValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_08005b54",
            "code": "\nundefined4 *\ninitializeData_08005b54(undefined4 *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_080059c8_1_08007804;\n  if (data == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,param3,&DAT_2000036c,param4);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    result = FUN_08004ca2(param2,&DAT_08007604);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_08004ca2(param2,&DAT_0800764c);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08005a44(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_valid_param_08005bb0",
            "code": "\nvoid check_valid_param_08005bb0(int value1,int value2,undefined4 address1,undefined4 address2)\n\n{\n  if (value1 != 1) {\n    return;\n  }\n  if (value2 == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,address1,0xffff,address2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_valid_param_08005bb0",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "address1",
                "param_4": "address2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *outputPtr,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *outputPtr = &DAT_08007858;\n  *(undefined *)(outputPtr + 1) = value1;\n  *(undefined *)((int)outputPtr + 5) = value2;\n  *(undefined *)((int)outputPtr + 6) = value3;\n  *(undefined *)((int)outputPtr + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "outputPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_parameters_08005c38",
            "code": "\nvoid checkParameters_08005c38(int value1,int value2)\n\n{\n  if ((value1 == 1) && (value2 == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_parameters_08005c38",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPointer,int argument,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result;\n  \n  if (argument != 0) {\n    result = FUN_08000178(argument);\n    result = (**(code **)(*functionPointer + 4))(functionPointer,argument,result,*(code **)(*functionPointer + 4),param4);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPointer",
                "param_2": "argument",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_pointer_function_08005cb6",
            "code": "\nvoid executePointerFunction_08005cb6(undefined4 *functionParam)\n\n{\n  (**(code **)*functionParam)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_pointer_function_08005cb6",
                "param_1": "functionParam"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_callback_08005cc0",
            "code": "\nvoid executeCallback_08005cc0(int *callbackFunction,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(code **)(*callbackFunction + 4))(callbackFunction,&DAT_0800786c,2,*(code **)(*callbackFunction + 4),arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_callback_08005cc0",
                "param_1": "callbackFunction",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_sum_08005cd4",
            "code": "\nint calculateSum_08005cd4(undefined4 inputParam)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(inputParam);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_sum_08005cd4",
                "param_1": "inputParam",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_to_base_08005ce8",
            "code": "\nundefined4 convertToBase_08005ce8(int *input,uint number,uint base)\n\n{\n  char convertedDigit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *output;\n  char temp [9];\n  \n  temp[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  output = temp + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    output = output + -1;\n    convertedDigit = (char)remainder;\n    if (remainder < 10) {\n      convertedDigit = convertedDigit + '0';\n    }\n    else {\n      convertedDigit = convertedDigit + '7';\n    }\n    *output = convertedDigit;\n    number = quotient;\n  } while (quotient != 0);\n  if (output == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(output);\n    result = (**(code **)(*input + 4))(input,output,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_to_base_08005ce8",
                "param_1": "input",
                "param_2": "number",
                "param_3": "base",
                "cVar1": "convertedDigit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "output",
                "local_15": "temp"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_parameters_08005d42",
            "code": "\nint processParameters_08005d42(undefined4 *functionPointer,uint value1,uint value2)\n\n{\n  int result1;\n  int result2;\n  \n  if (value2 == 0) {\n    result1 = (**(code **)*functionPointer)(functionPointer,value1 & 0xff);\n    return result1;\n  }\n  if (value2 != 10) {\n    result1 = FUN_08005ce8(functionPointer,value1,value2 & 0xff);\n    return result1;\n  }\n  if (-1 < (int)value1) {\n    result1 = FUN_08005ce8(functionPointer,value1,10);\n    return result1;\n  }\n  result1 = FUN_08005cb6(functionPointer,0x2d);\n  result2 = FUN_08005ce8(functionPointer,-value1,10);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_parameters_08005d42",
                "param_1": "functionPointer",
                "param_2": "value1",
                "param_3": "value2",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "initialize_application_08005d82",
            "code": "\nvoid initializeApplication_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "initialize_application_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "process_data_08005d8a",
            "code": "\nvoid processData_08005d8a(undefined4 *dataPointer,uint length,uint condition,undefined4 additionalParam)\n\n{\n  if (condition != 0) {\n    FUN_08005ce8(dataPointer,length,condition & 0xff);\n    return;\n  }\n  (**(code **)*dataPointer)(dataPointer,length & 0xff,0,*(code **)*dataPointer,additionalParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "process_data_08005d8a",
                "param_1": "dataPointer",
                "param_2": "length",
                "param_3": "condition",
                "param_4": "additionalParam"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "calculate_result_08005da8",
            "code": "\nint calculateResult_08005da8(undefined4 input1,undefined4 input2,undefined4 input3,uint input4,byte input5)\n\n{\n  int result;\n  undefined4 var1;\n  int var2;\n  byte var3;\n  undefined8 var4;\n  undefined8 var5;\n  \n  result = FUN_08000a2c(input3,input4,input3,input4);\n  if (result == 0) {\n    result = FUN_08000a2c(input3,input4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(input3,input4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(input1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(input3,input4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(input3,input4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(input3,input4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(input1,0x2d);\n            input4 = input4 + 0x80000000;\n          }\n          var4 = 0x3fe0000000000000;\n          for (var3 = 0; var1 = (undefined4)((ulonglong)var4 >> 0x20), var3 < input5;\n              var3 = var3 + 1) {\n            var4 = FUN_0800074c((int)var4,var1,0,0x40240000);\n          }\n          var4 = FUN_08000194(input3,input4,(int)var4,var1);\n          var1 = FUN_08000aa8();\n          var5 = FUN_0800040c();\n          var4 = FUN_08000190((int)var4,(int)((ulonglong)var4 >> 0x20),(int)var5,\n                               (int)((ulonglong)var5 >> 0x20));\n          var2 = FUN_08005d8a(input1,var1,10);\n          result = result + var2;\n          if (input5 != 0) {\n            var2 = FUN_08005c96(input1,&DAT_08007868);\n            result = result + var2;\n          }\n          while (input5 != 0) {\n            var4 = FUN_080004f8((int)var4,(int)((ulonglong)var4 >> 0x20),0,0x40240000);\n            var1 = FUN_08000a58();\n            var2 = FUN_08005d82(input1,var1,10);\n            result = result + var2;\n            var5 = FUN_0800042c(var1);\n            var4 = FUN_08000190((int)var4,(int)((ulonglong)var4 >> 0x20),(int)var5,\n                                 (int)((ulonglong)var5 >> 0x20));\n            input5 = input5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(input1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(input1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(input1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "calculate_result_08005da8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "iVar1": "result",
                "uVar2": "var1",
                "iVar3": "var2",
                "bVar4": "var3",
                "uVar5": "var4",
                "uVar6": "var5"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initializeApplication_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_system_08005f5e",
            "code": "\nvoid initializeSystem_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_system_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "execute_function_until_exit_08005f6c",
            "code": "\nvoid executeFunctionUntilExit_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "execute_function_until_exit_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint inputNumber)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; inputNumber != 1; inputNumber = inputNumber >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "inputNumber",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_settings_08005fc8",
            "code": "\nvoid initializeSettings_08005fc8(int flag,int value,undefined4 paramA,undefined4 paramB)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label1,&DAT_20000000,&DAT_200004b8,paramB);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_settings_08005fc8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "paramA",
                "param_4": "paramB",
                "LAB_08005fa0_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "execute_or_check_condition_080060d4",
            "code": "\nvoid executeOrCheckCondition_080060d4(int input)\n\n{\n  int index;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    executeOrCheckCondition_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "execute_or_check_condition_080060d4",
                "param_1": "input",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_call_function_080060e4",
            "code": "\nvoid checkAndCallFunction_080060e4(void)\n\n{\n  int result;\n  \n  result = FUN_08005f8c();\n  if ((&DAT_200004c4)[result * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_call_function_080060e4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "call_function_with_swapped_params_08006112",
            "code": "\nvoid callFunctionWithSwappedParams_08006112(undefined4 param1,undefined4 param2)\n\n{\n  FUN_08006158(param2,param1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "call_function_with_swapped_params_08006112",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 file,undefined4 line,char *assertionMessage,undefined4 function)\n\n{\n  undefined4 uVar1;\n  char *functionText;\n  undefined8 result;\n  undefined4 param_4_copy;\n  \n  uVar1 = *(undefined4 *)(DAT_200000f8 + 0xc);\n  param_4_copy = function;\n  if (assertionMessage == (char *)0x0) goto LAB_08006140;\n  functionText = \", function: \";\n  do {\n    FUN_08006174(uVar1,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,functionText,assertionMessage,param_4_copy);\n    result = FUN_08006ac0();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    uVar1 = (undefined4)result;\nLAB_08006140:\n    assertionMessage = \"\";\n    functionText = assertionMessage;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertionMessage",
                "param_4": "function",
                "pcVar2": "functionText",
                "uVar3": "result",
                "uVar4": "param_4_copy"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_left_by32_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftLeftBy32_08006158(undefined4 input,uint value)\n\n{\n  return (ulonglong)value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_left_by32_08006158",
                "param_1": "input",
                "param_2": "value"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "copy_parameters_and_call_function_08006174",
            "code": "\nvoid copyParametersAndCallFunction_08006174(undefined4 sourceParam,undefined4 destinationParam,undefined4 paramToCopy1,undefined4 paramToCopy2)\n\n{\n  undefined4 copiedParam1;\n  undefined4 copiedParam2;\n  \n  copiedParam1 = paramToCopy1;\n  copiedParam2 = paramToCopy2;\n  FUN_08006394(DAT_200000f8,sourceParam,destinationParam,&copiedParam1,sourceParam,&copiedParam1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "copy_parameters_and_call_function_08006174",
                "param_1": "sourceParam",
                "param_2": "destinationParam",
                "param_3": "paramToCopy1",
                "param_4": "paramToCopy2",
                "uStack_8": "copiedParam1",
                "uStack_4": "copiedParam2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_with_value_080061e0",
            "code": "\nvoid fillMemoryWithValue_080061e0(undefined *destination,undefined value,int length)\n\n{\n  undefined *endAddress;\n  \n  endAddress = destination + length;\n  for (; destination != endAddress; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_with_value_080061e0",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "process_data_080061f0",
            "code": "\nvoid processData_080061f0(undefined4 *output,int size,undefined4 param1,undefined4 param2)\n\n{\n  int **returnVal;\n  int **temp1;\n  int **temp2;\n  int *temp3;\n  int **temp4;\n  int **inputData;\n  \n  if (size == 0) {\n    return;\n  }\n  inputData = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    inputData = (int **)((int)inputData + *(int *)(size + -4));\n  }\n  FUNC_08006eac();\n  temp2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    inputData[1] = (int *)0x0;\n    temp1 = returnVal;\n    DAT_200005f8 = inputData;\n  }\n  else {\n    temp2 = DAT_200005f8;\n    if (inputData < DAT_200005f8) {\n      temp1 = (int **)*inputData;\n      temp2 = (int **)((int)inputData + (int)temp1);\n      if (DAT_200005f8 == temp2) {\n        temp3 = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        temp2 = (int **)((int)temp3 + (int)temp1);\n        *inputData = (int *)temp2;\n      }\n      inputData[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = inputData;\n    }\n    else {\n      do {\n        temp4 = temp2;\n        temp2 = (int **)temp4[1];\n        if (temp2 == (int **)0x0) break;\n      } while (temp2 <= inputData);\n      temp1 = (int **)*temp4;\n      if ((int **)((int)temp4 + (int)temp1) == inputData) {\n        temp1 = (int **)((int)temp1 + (int)*inputData);\n        *temp4 = (int *)temp1;\n        if (temp2 == (int **)((int)temp4 + (int)temp1)) {\n          temp3 = *temp2;\n          temp2 = (int **)temp2[1];\n          temp1 = (int **)((int)temp1 + (int)temp3);\n          *temp4 = (int *)temp1;\n          temp4[1] = (int *)temp2;\n        }\n      }\n      else if (inputData < (int **)((int)temp4 + (int)temp1)) {\n        *output = 0xc;\n      }\n      else {\n        temp1 = (int **)((int)inputData + (int)*inputData);\n        if (temp2 == temp1) {\n          temp3 = *temp2;\n          temp2 = (int **)temp2[1];\n          temp1 = (int **)((int)temp3 + (int)*inputData);\n          *inputData = (int *)temp1;\n        }\n        inputData[1] = (int *)temp2;\n        temp4[1] = (int *)inputData;\n      }\n    }\n  }\n  FUNC_08006eae(output,temp1,temp2,param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "process_data_080061f0",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param1",
                "param_4": "param2",
                "extraout_r1": "returnVal",
                "ppiVar1": "temp1",
                "ppiVar2": "temp2",
                "piVar3": "temp3",
                "ppiVar4": "temp4",
                "ppiVar5": "inputData"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_08006288",
            "code": "\nuint allocate_memory_08006288(undefined4 *result,uint size)\n\n{\n  uint *current_ptr;\n  int offset;\n  uint *ptr;\n  uint difference;\n  uint *prev_ptr;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_ptr = DAT_200005f8;\n    prev_ptr = DAT_200005f8;\n    while (ptr = current_ptr, ptr != (uint *)0x0) {\n      difference = *ptr - aligned_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (prev_ptr == ptr) {\n            current_ptr = (uint *)prev_ptr[1];\n            DAT_200005f8 = current_ptr;\n          }\n          else {\n            current_ptr = (uint *)ptr[1];\n          }\n          if (prev_ptr != ptr) {\n            prev_ptr[1] = (uint)current_ptr;\n            prev_ptr = ptr;\n          }\n        }\n        else {\n          *ptr = difference;\n          *(uint *)((int)ptr + difference) = aligned_size;\n          prev_ptr = (uint *)((int)ptr + difference);\n        }\n        goto LAB_080062ec;\n      }\n      prev_ptr = ptr;\n      current_ptr = (uint *)ptr[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(result);\n    }\n    current_ptr = (uint *)FUN_08006920(result,aligned_size);\n    if ((current_ptr != (uint *)0xffffffff) &&\n       ((prev_ptr = (uint *)((int)current_ptr + 3U & 0xfffffffc), current_ptr == prev_ptr ||\n        (offset = FUN_08006920(result,(int)prev_ptr - (int)current_ptr), offset != -1)))) {\n      *prev_ptr = aligned_size;\nLAB_080062ec:\n      FUNC_08006eae(result);\n      aligned_size = (int)prev_ptr + 0xbU & 0xfffffff8;\n      offset = aligned_size - (int)(prev_ptr + 1);\n      if (offset != 0) {\n        *(int *)((int)prev_ptr + offset) = -offset;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *result = 0xc;\n    FUNC_08006eae(result);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_ptr",
                "iVar2": "offset",
                "puVar3": "ptr",
                "uVar4": "difference",
                "puVar5": "prev_ptr",
                "uVar6": "aligned_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int ptr_input_data,byte input_byte,byte **ptr_byte_array)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = ptr_byte_array[2] + -1;\n  ptr_byte_array[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)ptr_byte_array[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *ptr_byte_array;\n    *ptr_byte_array = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((ptr_input_data != 0) && (*(int *)(ptr_input_data + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (ptr_byte_array == (byte **)&DAT_08007904) {\n    ptr_byte_array = *(byte ***)(ptr_input_data + 4);\n  }\n  else if (ptr_byte_array == (byte **)&DAT_08007924) {\n    ptr_byte_array = *(byte ***)(ptr_input_data + 8);\n  }\n  else if (ptr_byte_array == (byte **)&DAT_080078e4) {\n    ptr_byte_array = *(byte ***)(ptr_input_data + 0xc);\n  }\n  ptr_byte_array[2] = ptr_byte_array[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(ptr_byte_array + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = ptr_byte_array[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080069e4(ptr_input_data,ptr_byte_array,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)input_byte;\n    temp_var1 = (int)*ptr_byte_array - (int)ptr_byte_array[4];\n    if ((temp_var1 < (int)ptr_byte_array[5]) || (temp_var1 = FUN_08006be0(ptr_input_data,ptr_byte_array), temp_var1 == 0)) {\n      ptr_byte_array[2] = ptr_byte_array[2] + -1;\n      temp_var2 = *ptr_byte_array;\n      *ptr_byte_array = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != ptr_byte_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(ptr_byte_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08006be0(ptr_input_data,ptr_byte_array);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "ptr_input_data",
                "param_2": "input_byte",
                "param_3": "ptr_byte_array",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_data_08006370",
            "code": "\nint process_data_08006370(undefined4 arg1,undefined4 arg2,undefined *data,int length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int start_index;\n  \n  end_ptr = data + length;\n  start_index = length;\n  do {\n    if (data == end_ptr) {\n      return 0;\n    }\n    result = FUN_08006344(arg1,*data,arg2,length,start_index);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_data_08006370",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "end_ptr",
                "iVar3": "start_index"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "process_data_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint processData_08006394(int input,undefined4 *flags,byte *string,int *output)\n\n{\n  int result;\n  int *ptr;\n  bool status;\n  byte *currentChar;\n  byte *nextChar;\n  int tempVar;\n  int tempVar2;\n  int *outputPtr;\n  uint modifiers;\n  int precision;\n  undefined4 tempVar3;\n  int width;\n  int processedBytes;\n  byte formatSpecifier;\n  undefined charSpace;\n  undefined charPlus;\n  undefined charFlags;\n  undefined4 tempVar4;\n  \n  outputPtr = output;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (flags == &DAT_08007904) {\n    flags = *(undefined4 **)(input + 4);\n  }\n  else if (flags == (undefined4 *)&DAT_08007924) {\n    flags = *(undefined4 **)(input + 8);\n  }\n  else if (flags == (undefined4 *)&DAT_080078e4) {\n    flags = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(flags + 3) << 0x1c)) || (flags[4] == 0)) &&\n     (tempVar2 = FUN_080069e4(input,flags), tempVar2 != 0)) {\n    return -1;\n  }\n  processedBytes = 0;\n  charSpace = 0x20;\n  charPlus = 0x30;\n  currentChar = string;\nLAB_080063d6:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  tempVar2 = (int)nextChar - (int)string;\n  if (tempVar2 != 0) {\n    result = FUN_08006370(input,flags,string,tempVar2);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(flags + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return processedBytes;\n    }\n    processedBytes = processedBytes + tempVar2;\n  }\n  if (*nextChar == 0) goto LAB_08006580;\n  modifiers = 0;\n  width = 0;\n  precision = -1;\n  tempVar3 = 0;\n  charFlags = 0;\n  tempVar4 = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    tempVar2 = FUN_08006e90(\"#-0+ \",*currentChar);\n    string = currentChar + 1;\n    if (tempVar2 == 0) break;\n    modifiers = 1 << (tempVar2 + 0xf7ff8750U & 0xff) | modifiers;\n    currentChar = string;\n  }\n  if ((int)(modifiers << 0x1b) < 0) {\n    charFlags = 0x20;\n  }\n  if ((int)(modifiers << 0x1c) < 0) {\n    charFlags = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    ptr = outputPtr + 1;\n    tempVar2 = *outputPtr;\n    outputPtr = ptr;\n    if (tempVar2 < 0) {\n      width = -tempVar2;\n      modifiers = modifiers | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    status = false;\n    tempVar2 = width;\n    string = currentChar;\n    while( true ) {\n      if (9 < *string - 0x30) break;\n      tempVar2 = tempVar2 * 10 + (*string - 0x30);\n      status = true;\n      string = string + 1;\n    }\n    if (!status) goto LAB_080064be;\n  }\n  width = tempVar2;\nLAB_080064be:\n  if (*string == 0x2e) {\n    if (string[1] == 0x2a) {\n      string = string + 2;\n      ptr = outputPtr + 1;\n      precision = *outputPtr;\n      outputPtr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      status = false;\n      tempVar2 = 0;\n      precision = 0;\n      while( true ) {\n        string = string + 1;\n        if (9 < *string - 0x30) break;\n        tempVar2 = tempVar2 * 10 + (*string - 0x30);\n        status = true;\n      }\n      if (status) {\n        precision = tempVar2;\n      }\n    }\n  }\n  tempVar2 = FUN_08006e90(&DAT_080078b6,*string,3);\n  if (tempVar2 != 0) {\n    string = string + 1;\n    modifiers = modifiers | 0x40 << (tempVar2 + 0xf7ff874aU & 0xff);\n  }\n  formatSpecifier = *string;\n  string = string + 1;\n  tempVar2 = FUN_08006e90(\"efgEFG\",formatSpecifier,6);\n  if (tempVar2 == 0) {\n    tempVar = FUN_080066b0(input,&modifiers,flags,0x8006371,&outputPtr);\n    if (tempVar == -1) goto LAB_08006580;\n  }\n  else {\n    outputPtr = (int *)(((int)outputPtr + 7U & 0xfffffff8) + 8);\n  }\n  processedBytes = processedBytes + tempVar;\n  currentChar = string;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "process_data_08006394",
                "param_1": "input",
                "param_2": "flags",
                "param_3": "string",
                "param_4": "output",
                "iVar1": "result",
                "piVar2": "ptr",
                "bVar3": "status",
                "pbVar4": "currentChar",
                "pbVar5": "nextChar",
                "unaff_r9": "tempVar",
                "iVar6": "tempVar2",
                "local_8c": "outputPtr",
                "local_88": "modifiers",
                "local_84": "precision",
                "local_80": "tempVar3",
                "local_7c": "width",
                "local_74": "processedBytes",
                "local_70": "formatSpecifier",
                "local_6f": "charSpace",
                "local_6e": "charPlus",
                "local_45": "charFlags",
                "local_30": "tempVar4"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "calculate_data_size_080065c0",
            "code": "\nundefined4\ncalculateDataSize_080065c0(undefined4 input,uint *data,uint *dataSize,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint maxSize;\n  uint offset;\n  bool flag;\n  \n  maxSize = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxSize = data[2];\n  }\n  *dataSize = maxSize;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *dataSize = maxSize + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *dataSize = *dataSize + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *dataSize); index = index + 1) {\n      result = (*callback)(input,param,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxSize = (uint)*(byte *)((int)data + 0x43);\n  if (maxSize != 0) {\n    maxSize = 1;\n  }\n  offset = maxSize;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxSize + 0x43) = 0x30;\n    offset = maxSize + 2;\n    *(undefined *)((int)data + maxSize + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param,(int)data + 0x43,offset);\n  if (index != -1) {\n    maxSize = data[3];\n    flag = (*data & 6) != 4;\n    if (flag) {\n      maxSize = 0;\n    }\n    offset = 0;\n    if (!flag) {\n      maxSize = maxSize - *dataSize;\n    }\n    if (!flag) {\n      maxSize = maxSize & ~((int)maxSize >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxSize = maxSize + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (maxSize == offset) {\n        return 0;\n      }\n      index = (*callback)(input,param,(int)data + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "calculate_data_size_080065c0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "dataSize",
                "param_4": "param",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "maxSize",
                "uVar4": "offset",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "parse_and_convert_080066b0",
            "code": "\nuint parse_and_convert_080066b0(undefined4 param1,uint *buffer,undefined4 param3,code *conversion_function,uint **output_buffer)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int loop_index;\n  char *hex_digits;\n  uint conversion_base;\n  uint **ptr_ptr;\n  char **string_ptr;\n  uint result;\n  uint temp;\n  char *output_ptr;\n  char *input_ptr;\n  uint temp_buffer [2];\n  \n  byte_value = *(byte *)(buffer + 6);\n  input_ptr = (char *)((int)buffer + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800686a;\n          if (byte_value != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)buffer + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          conversion_base = *buffer;\n          ptr = *output_buffer;\n          *output_buffer = ptr + 1;\n          if (((conversion_base & 0x80) == 0) && ((int)(conversion_base << 0x19) < 0)) {\n            result = (uint)*(ushort *)ptr;\n          }\n          else {\n            result = *ptr;\n          }\n          if ((int)(conversion_base << 0x1f) < 0) {\n            *buffer = conversion_base | 0x20;\n          }\n          if (result == 0) {\n            *buffer = *buffer & 0xffffffdf;\n          }\n          conversion_base = 0x10;\nLAB_08006790:\n          *(undefined *)((int)buffer + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080066e0;\n          result = *buffer;\n          ptr = *output_buffer;\n          if ((result & 0x80) == 0) {\n            *output_buffer = ptr + 1;\n            if ((result & 0x40) == 0) goto LAB_08006700;\n            result = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output_buffer = ptr + 1;\nLAB_08006700:\n            result = *ptr;\n          }\n          if ((int)result < 0) {\n            result = -result;\n            *(undefined *)((int)buffer + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          conversion_base = 10;\n        }\n        temp = buffer[1];\n        buffer[2] = temp;\n        output_ptr = input_ptr;\n        if ((int)temp < 0) {\n          if (result != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)buffer + 0x42) = *hex_digits;\n          output_ptr = (char *)((int)buffer + 0x42);\n        }\n        else {\n          *buffer = *buffer & 0xfffffffb;\n          if (result == 0) {\n            if (temp != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              temp = result / conversion_base;\n              output_ptr = output_ptr + -1;\n              *output_ptr = hex_digits[result - conversion_base * temp];\n              result = temp;\n            } while (temp != 0);\n          }\n        }\n        if (((conversion_base == 8) && ((int)(*buffer << 0x1f) < 0)) && ((int)buffer[1] <= (int)buffer[4]))\n        {\n          output_ptr[-1] = '0';\n          output_ptr = output_ptr + -1;\n        }\n        buffer[4] = (int)input_ptr - (int)output_ptr;\n        input_ptr = output_ptr;\n        goto LAB_080067d6;\n      }\n      ptr = *output_buffer;\n      *output_buffer = ptr + 1;\n      *(char *)((int)buffer + 0x42) = (char)*ptr;\nLAB_08006740:\n      input_ptr = (char *)((int)buffer + 0x42);\n      result = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08006766:\n            result = *buffer;\n            ptr = *output_buffer;\n            if ((result & 0x80) == 0) {\n              *output_buffer = ptr + 1;\n              if ((result & 0x40) == 0) goto LAB_08006774;\n              result = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output_buffer = ptr + 1;\nLAB_08006774:\n              result = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              conversion_base = 8;\n            }\n            else {\n              conversion_base = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_value == 0x70) {\n            *buffer = *buffer | 0x20;\nLAB_08006726:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)buffer + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08006766;\n          if (byte_value == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)buffer + 0x42) = byte_value;\n        goto LAB_08006740;\n      }\n      string_ptr = (char **)*output_buffer;\n      *output_buffer = (uint *)(string_ptr + 1);\n      input_ptr = *string_ptr;\n      index = FUN_08006e90(input_ptr,0,buffer[1]);\n      if (index != 0) {\n        buffer[1] = index - (int)input_ptr;\n      }\n      result = buffer[1];\n    }\n    buffer[4] = result;\n    *(undefined *)((int)buffer + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  result = *buffer;\n  ptr_ptr = (uint **)*output_buffer;\n  conversion_base = buffer[5];\n  if ((result & 0x80) == 0) {\n    *output_buffer = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\n    if ((result & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)conversion_base;\n  }\n  else {\n    *output_buffer = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\nLAB_08006856:\n    *ptr = conversion_base;\n  }\nLAB_0800686a:\n  buffer[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(param1,buffer,temp_buffer,param3,conversion_function);\n  if ((index == -1) || (index = (*conversion_function)(param1,param3,input_ptr,buffer[4]), index == -1)) {\nLAB_080067ea:\n    result = 0xffffffff;\n  }\n  else {\n    if ((int)(*buffer << 0x1e) < 0) {\n      for (index = 0; index < (int)(buffer[3] - temp_buffer[0]); index = index + 1) {\n        loop_index = (*conversion_function)(param1,param3,(int)buffer + 0x19,1);\n        if (loop_index == -1) goto LAB_080067ea;\n      }\n    }\n    result = buffer[3];\n    if ((int)buffer[3] < (int)temp_buffer[0]) {\n      result = temp_buffer[0];\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "parse_and_convert_080066b0",
                "param_1": "param1",
                "param_2": "buffer",
                "param_3": "param3",
                "param_4": "conversion_function",
                "param_5": "output_buffer",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "loop_index",
                "pcVar5": "hex_digits",
                "uVar6": "conversion_base",
                "ppuVar7": "ptr_ptr",
                "ppcVar8": "string_ptr",
                "uVar9": "result",
                "uVar10": "temp",
                "pcVar11": "output_ptr",
                "pcVar12": "input_ptr",
                "local_24": "temp_buffer"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 var1,undefined4 var2,undefined4 var3,undefined4 var4)\n\n{\n  int iVar1;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  iVar1 = DAT_200000f8;\n  var5 = var1;\n  var6 = var2;\n  var7 = var3;\n  var8 = var4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(iVar1,*(undefined4 *)(iVar1 + 8),var1,&var6,var5,&var6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "var1",
                "param_2": "var2",
                "param_3": "var3",
                "param_4": "var4",
                "uVar2": "var5",
                "uStack_c": "var6",
                "uStack_8": "var7",
                "uStack_4": "var8"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "update_result_if_error_08006920",
            "code": "\nvoid updateResultIfError_08006920(int *resultPointer,undefined4 inputValue)\n\n{\n  int functionResult;\n  \n  DAT_200006a4 = 0;\n  functionResult = FUN_080056d8(inputValue);\n  if ((functionResult == -1) && (DAT_200006a4 != 0)) {\n    *resultPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "update_result_if_error_08006920",
                "param_1": "resultPointer",
                "param_2": "inputValue",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "process_data_080069e4",
            "code": "\nuint processData_080069e4(undefined4 *outputParam,undefined4 *inputParam)\n\n{\n  int dataPtr;\n  uint result;\n  ushort flags;\n  \n  dataPtr = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (inputParam == &DAT_08007904) {\n    inputParam = *(undefined4 **)(dataPtr + 4);\n  }\n  else if (inputParam == (undefined4 *)&DAT_08007924) {\n    inputParam = *(undefined4 **)(dataPtr + 8);\n  }\n  else if (inputParam == (undefined4 *)&DAT_080078e4) {\n    inputParam = *(undefined4 **)(dataPtr + 0xc);\n  }\n  flags = *(ushort *)(inputParam + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *outputParam = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)inputParam[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputParam[0xd] != inputParam + 0x11) {\n          FUN_080061f0(outputParam);\n        }\n        inputParam[0xd] = 0;\n      }\n      *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) & 0xffdb;\n      inputParam[1] = 0;\n      *inputParam = inputParam[4];\n    }\n    *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) | 8;\n  }\n  if ((inputParam[4] == 0) && ((*(ushort *)(inputParam + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(outputParam,inputParam);\n  }\n  flags = *(ushort *)(inputParam + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = inputParam[5];\n    }\n    inputParam[2] = result;\n  }\n  else {\n    inputParam[2] = 0;\n    inputParam[6] = -inputParam[5];\n  }\n  if (inputParam[4] == 0) {\n    flags = *(ushort *)(inputParam + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(inputParam + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "process_data_080069e4",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "dataPtr",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_binary_function_08006ac0",
            "code": "\nvoid processBinaryFunction_08006ac0(void)\n\n{\n  uint *dataPointer;\n  int tempVariable;\n  int *intPointer;\n  int *anotherIntPointer;\n  uint ushortValue;\n  ushort originalUshortValue;\n  int loopCounter;\n  code *functionPointer;\n  int loopVariable;\n  uint originalUintValue;\n  code *jumpTable;\n  bool isZero;\n  undefined8 returnValue;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  returnValue = FUN_0800573c(1);\n  intPointer = (int *)((ulonglong)returnValue >> 0x20);\n  dataPointer = (uint *)returnValue;\n  originalUshortValue = *(ushort *)(intPointer + 3);\n  ushortValue = (uint)originalUshortValue;\n  if ((int)(ushortValue << 0x1c) < 0) {\n    tempVariable = intPointer[4];\n    if (tempVariable != 0) {\n      loopCounter = ushortValue << 0x1e;\n      isZero = loopCounter != 0;\n      if (isZero) {\n        loopCounter = 0;\n      }\n      loopVariable = *intPointer;\n      if (!isZero) {\n        loopCounter = intPointer[5];\n      }\n      *intPointer = tempVariable;\n      intPointer[2] = loopCounter;\n      for (loopVariable = loopVariable - tempVariable; 0 < loopVariable; loopVariable = loopVariable - loopCounter) {\n        loopCounter = (*(code *)intPointer[10])(dataPointer,intPointer[8],tempVariable,loopVariable);\n        if (loopCounter < 1) {\n          originalUshortValue = *(ushort *)(intPointer + 3);\n          goto LAB_08006bc6;\n        }\n        tempVariable = tempVariable + loopCounter;\n      }\n    }\n  }\n  else if (((0 < intPointer[1]) || (0 < intPointer[0x10])) &&\n          (functionPointer = (code *)intPointer[0xb], functionPointer != (code *)0x0)) {\n    originalUintValue = *dataPointer;\n    *dataPointer = 0;\n    if ((originalUshortValue & 0x1000) == 0) {\n      tempVariable = (*functionPointer)(dataPointer,intPointer[8],ushortValue & 0x1000,1);\n      if ((tempVariable == -1) && (ushortValue = *dataPointer, ushortValue != 0)) {\n        if ((ushortValue != 0x1d) && (ushortValue != 0x16)) {\n          *(ushort *)(intPointer + 3) = *(ushort *)(intPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *dataPointer = originalUintValue;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      tempVariable = intPointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(intPointer + 3) << 0x1d) < 0) &&\n       (tempVariable = tempVariable - intPointer[1], intPointer[0xd] != 0)) {\n      tempVariable = tempVariable - intPointer[0x10];\n    }\n    tempVariable = (*(code *)intPointer[0xb])(dataPointer,intPointer[8],tempVariable,0);\n    originalUshortValue = *(ushort *)(intPointer + 3);\n    if ((tempVariable == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(intPointer + 3) = originalUshortValue | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    intPointer[1] = 0;\n    *intPointer = intPointer[4];\n    if (((int)((uint)originalUshortValue << 0x13) < 0) && ((tempVariable != -1 || (*dataPointer == 0)))) {\n      intPointer[0x15] = tempVariable;\n    }\n    anotherIntPointer = (int *)intPointer[0xd];\n    *dataPointer = originalUintValue;\n    if (anotherIntPointer != (int *)0x0) {\n      if (anotherIntPointer != intPointer + 0x11) {\n        FUN_080061f0(dataPointer);\n      }\n      intPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_binary_function_08006ac0",
                "puVar1": "dataPointer",
                "iVar2": "tempVariable",
                "piVar3": "intPointer",
                "piVar4": "anotherIntPointer",
                "uVar5": "ushortValue",
                "uVar6": "originalUshortValue",
                "iVar7": "loopCounter",
                "pcVar8": "functionPointer",
                "iVar9": "loopVariable",
                "uVar10": "originalUintValue",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "isZero",
                "uVar12": "returnValue"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "execute_function_08006be0",
            "code": "\nundefined4 execute_function_08006be0(uint *param_array,int *param_pointer)\n\n{\n  undefined4 result;\n  int index;\n  int *temp_pointer;\n  uint temp_var;\n  ushort temp_var_2;\n  int temp_var_3;\n  undefined4 unaff_var_1;\n  undefined4 unaff_var_2;\n  code *function_pointer;\n  int temp_var_4;\n  uint temp_var_5;\n  code *jump_table;\n  bool bVar10;\n  \n  if (param_pointer[4] != 0) {\n    if ((param_array != (uint *)0x0) && (param_array[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (param_pointer == &DAT_08007904) {\n      param_pointer = (int *)param_array[1];\n    }\n    else if (param_pointer == (int *)&DAT_08007924) {\n      param_pointer = (int *)param_array[2];\n    }\n    else if (param_pointer == (int *)&DAT_080078e4) {\n      param_pointer = (int *)param_array[3];\n    }\n    if (*(short *)(param_pointer + 3) != 0) {\n      temp_var_2 = *(ushort *)(param_pointer + 3);\n      temp_var = (uint)temp_var_2;\n      if ((int)(temp_var << 0x1c) < 0) {\n        index = param_pointer[4];\n        if (index != 0) {\n          temp_var_3 = temp_var << 0x1e;\n          bVar10 = temp_var_3 != 0;\n          if (bVar10) {\n            temp_var_3 = 0;\n          }\n          temp_var_4 = *param_pointer;\n          if (!bVar10) {\n            temp_var_3 = param_pointer[5];\n          }\n          *param_pointer = index;\n          param_pointer[2] = temp_var_3;\n          for (temp_var_4 = temp_var_4 - index; 0 < temp_var_4; temp_var_4 = temp_var_4 - temp_var_3) {\n            temp_var_3 = (*(code *)param_pointer[10])(param_array,param_pointer[8],index,temp_var_4,unaff_var_1,unaff_var_2);\n            if (temp_var_3 < 1) {\n              temp_var_2 = *(ushort *)(param_pointer + 3);\n              goto LAB_08006bc6;\n            }\n            index = index + temp_var_3;\n          }\n        }\n      }\n      else if (((0 < param_pointer[1]) || (0 < param_pointer[0x10])) &&\n              (function_pointer = (code *)param_pointer[0xb], function_pointer != (code *)0x0)) {\n        temp_var_5 = *param_array;\n        *param_array = 0;\n        if ((temp_var_2 & 0x1000) == 0) {\n          index = (*function_pointer)(param_array,param_pointer[8],temp_var & 0x1000,1);\n          if ((index == -1) && (temp_var = *param_array, temp_var != 0)) {\n            if ((temp_var != 0x1d) && (temp_var != 0x16)) {\n              *(ushort *)(param_pointer + 3) = *(ushort *)(param_pointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jump_table)();\n              return result;\n            }\n            *param_array = temp_var_5;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          index = param_pointer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_pointer + 3) << 0x1d) < 0) &&\n           (index = index - param_pointer[1], param_pointer[0xd] != 0)) {\n          index = index - param_pointer[0x10];\n        }\n        index = (*(code *)param_pointer[0xb])(param_array,param_pointer[8],index,0);\n        temp_var_2 = *(ushort *)(param_pointer + 3);\n        if ((index == -1) &&\n           ((0x1d < *param_array || (-1 < (int)((0x20400001U >> (*param_array & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(param_pointer + 3) = temp_var_2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)(0xffffffff);\n          return result;\n        }\n        param_pointer[1] = 0;\n        *param_pointer = param_pointer[4];\n        if (((int)((uint)temp_var_2 << 0x13) < 0) && ((index != -1 || (*param_array == 0)))) {\n          param_pointer[0x15] = index;\n        }\n        temp_pointer = (int *)param_pointer[0xd];\n        *param_array = temp_var_5;\n        if (temp_pointer != (int *)0x0) {\n          if (temp_pointer != param_pointer + 0x11) {\n            FUN_080061f0(param_array);\n          }\n          param_pointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jump_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "execute_function_08006be0",
                "param_1": "param_array",
                "param_2": "param_pointer",
                "uVar1": "result",
                "iVar2": "index",
                "piVar3": "temp_pointer",
                "uVar4": "temp_var",
                "uVar5": "temp_var_2",
                "iVar6": "temp_var_3",
                "unaff_r4": "unaff_var_1",
                "unaff_r5": "unaff_var_2",
                "pcVar7": "function_pointer",
                "iVar8": "temp_var_4",
                "uVar9": "temp_var_5",
                "UNRECOVERED_JUMPTABLE_00": "jump_table"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_structure_08006c40",
            "code": "\nvoid initializeDataStructure_08006c40(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[0x19] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080061e0(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x8006f39;\n  dataStructure[10] = 0x8006f5b;\n  dataStructure[0xb] = 0x8006f93;\n  dataStructure[0xc] = &LAB_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_array_08006c88",
            "code": "\nundefined4 * initializeArray_08006c88(undefined4 array,int size)\n\n{\n  undefined4 *result;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  result = (undefined4 *)FUN_08006288(array,offset + 0x74);\n  if (result != (undefined4 *)0x0) {\n    *result = 0;\n    result[1] = size;\n    result[2] = result + 3;\n    FUN_080061e0(result + 3,0,offset + 0x68);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_array_08006c88",
                "param_1": "array",
                "param_2": "size",
                "puVar1": "result",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *dataPointer)\n\n{\n  undefined4 result;\n  undefined4 *tempPointer;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    tempPointer = &DAT_200000fc;\n    dataPointer[10] = &LAB_08006c34_1;\n    if (dataPointer == &DAT_200000fc) {\n      tempPointer = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_200000fc) {\n      dataPointer[6] = tempPointer;\n    }\n    result = FUN_08006d14();\n    dataPointer[1] = result;\n    result = FUN_08006d14(dataPointer);\n    dataPointer[2] = result;\n    result = FUN_08006d14(dataPointer);\n    dataPointer[3] = result;\n    FUN_08006c40(dataPointer[1],4,0);\n    FUN_08006c40(dataPointer[2],9,1);\n    FUN_08006c40(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "dataPointer",
                "uVar1": "result",
                "puVar2": "tempPointer"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_structure_08006d14",
            "code": "\nint * initialize_data_structure_08006d14(undefined4 *error_code,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *current_element;\n  int *nested_element;\n  int **nested_structure;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  nested_structure = (int **)&DAT_20000144;\n  do {\n    nested_element = nested_structure[2];\n    current_element = nested_structure[1];\n    while (current_element = (int *)((int)current_element + -1), -1 < (int)current_element) {\n      if (*(short *)(nested_element + 3) == 0) {\n        *(undefined2 *)((int)nested_element + 0xe) = 0xffff;\n        nested_element[0x19] = 0;\n        *(undefined2 *)(nested_element + 3) = 1;\n        *nested_element = 0;\n        nested_element[2] = 0;\n        nested_element[1] = 0;\n        nested_element[4] = 0;\n        nested_element[5] = 0;\n        nested_element[6] = 0;\n        FUN_080061e0(nested_element + 0x17,0,8,1,param_4);\n        nested_element[0xd] = 0;\n        nested_element[0xe] = 0;\n        nested_element[0x12] = 0;\n        nested_element[0x13] = 0;\n        return nested_element;\n      }\n      nested_element = nested_element + 0x1a;\n    }\n    if (*nested_structure == (int *)0x0) {\n      current_element = (int *)FUN_08006c88(error_code,4);\n      *nested_structure = current_element;\n      if (current_element == (int *)0x0) {\n        *error_code = 0xc;\n        return (int *)0x0;\n      }\n    }\n    nested_structure = (int **)*nested_structure;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_structure_08006d14",
                "param_1": "error_code",
                "piVar1": "current_element",
                "piVar2": "nested_element",
                "ppiVar3": "nested_structure"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_file_permissions_08006dc8",
            "code": "\nundefined4 checkFilePermissions_08006dc8(undefined4 param1,int fileData,undefined4 *flags,uint *result)\n\n{\n  int status;\n  undefined4 accessRights;\n  undefined temporaryArray [4];\n  uint filePermissions;\n  \n  if ((*(short *)(fileData + 0xe) < 0) ||\n     (status = FUN_08007004(param1,(int)*(short *)(fileData + 0xe),temporaryArray), status < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(fileData + 0xc) << 0x18) < 0) {\n      accessRights = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *result = (uint)((filePermissions & 0xf000) == 0x2000);\n  }\n  accessRights = 0x400;\nLAB_08006e08:\n  *flags = accessRights;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_file_permissions_08006dc8",
                "param_1": "param1",
                "param_2": "fileData",
                "param_3": "flags",
                "param_4": "result",
                "iVar1": "status",
                "uVar2": "accessRights",
                "auStack_4c": "temporaryArray",
                "local_48": "filePermissions"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_binary_data_08006e10",
            "code": "\nvoid processBinaryData_08006e10(int binaryDataAddress,int *binaryDataPointer)\n\n{\n  ushort tempVariable1;\n  int tempVariable2;\n  int localVariable1;\n  int *localVariable2;\n  \n  if (-1 < (int)((uint)*(ushort *)(binaryDataPointer + 3) << 0x1e)) {\n    localVariable1 = binaryDataAddress;\n    localVariable2 = binaryDataPointer;\n    tempVariable1 = FUN_08006dc8(binaryDataAddress,binaryDataPointer,&localVariable1,&localVariable2);\n    tempVariable2 = FUN_08006288(binaryDataAddress,localVariable1);\n    if (tempVariable2 != 0) {\n      *(undefined **)(binaryDataAddress + 0x28) = &LAB_08006c34_1;\n      *binaryDataPointer = tempVariable2;\n      *(ushort *)(binaryDataPointer + 3) = *(ushort *)(binaryDataPointer + 3) | 0x80;\n      binaryDataPointer[4] = tempVariable2;\n      binaryDataPointer[5] = localVariable1;\n      if ((localVariable2 != (int *)0x0) &&\n         (tempVariable2 = FUN_08007028(binaryDataAddress,(int)*(short *)((int)binaryDataPointer + 0xe)), tempVariable2 != 0)) {\n        *(ushort *)(binaryDataPointer + 3) = *(ushort *)(binaryDataPointer + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(binaryDataPointer + 3) = tempVariable1 | *(ushort *)(binaryDataPointer + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(binaryDataPointer + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(binaryDataPointer + 3) = *(ushort *)(binaryDataPointer + 3) & 0xfffc | 2;\n  }\n  *binaryDataPointer = (int)binaryDataPointer + 0x47;\n  binaryDataPointer[4] = (int)binaryDataPointer + 0x47;\n  binaryDataPointer[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_binary_data_08006e10",
                "param_1": "binaryDataAddress",
                "param_2": "binaryDataPointer",
                "uVar1": "tempVariable1",
                "iVar2": "tempVariable2",
                "local_18": "localVariable1",
                "local_14": "localVariable2"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_first_character_position_08006e90",
            "code": "\nchar * findFirstCharacterPosition_08006e90(char *string,char targetChar,int length)\n\n{\n  char *currentCharacter;\n  char *nextCharacter;\n  \n  currentCharacter = string;\n  do {\n    nextCharacter = currentCharacter;\n    if (nextCharacter == string + length) {\n      return (char *)0x0;\n    }\n    currentCharacter = nextCharacter + 1;\n  } while (*nextCharacter != targetChar);\n  return nextCharacter;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_first_character_position_08006e90",
                "param_1": "string",
                "param_2": "targetChar",
                "param_3": "length",
                "pcVar1": "currentCharacter",
                "pcVar2": "nextCharacter"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "process_parameter_08006f00",
            "code": "\nint processParameter_08006f00(uint parameter)\n\n{\n  int *pointerToVar1;\n  undefined4 returnValue;\n  int iVar3;\n  code *functionPointer;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *pointerToVar5;\n  \n  pointerToVar1 = DAT_200000f8;\n  pointerToVar5 = &DAT_200000f8;\n  if (0x1f < parameter) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  iVar3 = DAT_200000f8[0x11];\n  if ((iVar3 != 0) && (functionPointer = *(code **)(iVar3 + parameter * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(iVar3 + parameter * 4) = 0;\n      (*functionPointer)(parameter);\n    }\n    return 0;\n  }\n  returnValue = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  iVar3 = FUN_08005740(returnValue,parameter,parameter,0,pointerToVar5,unaff_r4,unaff_r5,in_lr);\n  if ((iVar3 == -1) && (DAT_200006a4 != 0)) {\n    *pointerToVar1 = DAT_200006a4;\n  }\n  return iVar3;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "process_parameter_08006f00",
                "param_1": "parameter",
                "piVar1": "pointerToVar1",
                "uVar2": "returnValue",
                "pcVar4": "functionPointer",
                "puVar5": "pointerToVar5"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_return_value_thunk_08005750",
            "code": "\nundefined4 getReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 input1,int input2)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(input1,(int)*(short *)(input2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(input2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(input2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(input2 + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(input2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "process_data_08006f5a",
            "code": "\nvoid processData_08006f5a(int *resultArray,int inputPointer,undefined4 paramA,undefined4 paramB)\n\n{\n  int returnValue;\n  undefined4 unaffectedR4;\n  undefined4 unaffectedR5;\n  undefined4 returnAddress;\n  \n  if ((int)((uint)*(ushort *)(inputPointer + 0xc) << 0x17) < 0) {\n    FUN_08007048(resultArray,(int)*(short *)(inputPointer + 0xe),0,2);\n  }\n  *(ushort *)(inputPointer + 0xc) = *(ushort *)(inputPointer + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  returnValue = FUN_08005730((int)*(short *)(inputPointer + 0xe),paramA,paramB,paramB,paramB,unaffectedR4,\n                       unaffectedR5,returnAddress);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *resultArray = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "resultArray",
                "param_2": "inputPointer",
                "param_3": "paramA",
                "param_4": "paramB",
                "unaff_r4": "unaffectedR4",
                "unaff_r5": "unaffectedR5",
                "in_lr": "returnAddress",
                "iVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_parameter_08006f92",
            "code": "\nvoid updateParameter_08006f92(undefined4 address,int data)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isInvalidResult;\n  \n  result = FUN_08007048(address,(int)*(short *)(data + 0xe));\n  isInvalidResult = result == -1;\n  if (isInvalidResult) {\n    updatedValue = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updatedValue = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isInvalidResult) {\n    *(ushort *)(data + 0xc) = updatedValue;\n  }\n  if (!isInvalidResult) {\n    *(ushort *)(data + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_parameter_08006f92",
                "param_1": "address",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isInvalidResult"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "extract_and_update_value_08007004",
            "code": "\nvoid extract_and_update_value_08007004(int *output_ptr,undefined4 input_value_1,undefined4 input_value_2,undefined4 input_value_3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800571a(input_value_1,input_value_2,input_value_2,0,input_value_3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output_ptr = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "extract_and_update_value_08007004",
                "param_1": "output_ptr",
                "param_2": "input_value_1",
                "param_3": "input_value_2",
                "param_4": "input_value_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "check_and_update_parameter_08007028",
            "code": "\nvoid checkAndUpdateParameter_08007028(int *result,undefined4 input)\n\n{\n  int functionResult;\n  \n  DAT_200006a4 = 0;\n  functionResult = FUN_08005724(input);\n  if ((functionResult == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "check_and_update_parameter_08007028",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "extract_value_from_binary_08007048",
            "code": "\nvoid extractValueFromBinary_08007048(int *outputValue,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005728(inputParam1,inputParam2,inputParam3,inputParam3,inputParam3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputValue = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "extract_value_from_binary_08007048",
                "param_1": "outputValue",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "process_data_0800706c",
            "code": "\nvoid processData_0800706c(int *output,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800572c(input_1,input_2,input_3,input_3,input_3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "process_data_0800706c",
                "param_1": "output",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initializeData_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeData_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 176777,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}