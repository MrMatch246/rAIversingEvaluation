{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_data_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeDataFlag_0800010c(undefined4 inputParameter)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_data_flag_0800010c",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "get_terminating_null_position_08000178",
            "code": "\nchar * get_terminating_null_position_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_position;\n  \n  current_position = string;\n  do {\n    next_char = current_position + 1;\n    current_char = *current_position;\n    current_position = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "get_terminating_null_position_08000178",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08005c96",
                "FUN_08005ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "perform_calculation_08000190",
            "code": "\nulonglong performCalculation_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int result1;\n  byte byteVar;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int result2;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  bool boolVar1;\n  bool boolVar2;\n  bool boolVar3;\n  \n  temp4 = input4 ^ 0x80000000;\n  temp6 = input2 << 1;\n  input4 = input4 << 1;\n  boolVar1 = ((input2 ^ temp4) & 0x7fffffff) == 0;\n  boolVar2 = boolVar1 && input1 == input3;\n  if (!boolVar1 || input1 != input3) {\n    boolVar2 = (temp6 | input1) == 0;\n  }\n  if (!boolVar2) {\n    boolVar2 = (input4 | input3) == 0;\n  }\n  result2 = (int)temp6 >> 0x15;\n  if (!boolVar2) {\n    boolVar2 = result2 == -1;\n  }\n  result1 = (int)input4 >> 0x15;\n  if (!boolVar2) {\n    boolVar2 = result1 == -1;\n  }\n  if (boolVar2) {\n    if (result2 == -1 || result1 == -1) {\n      temp6 = temp4;\n      temp8 = input3;\n      if (result2 == -1) {\n        temp6 = input2;\n        temp8 = input1;\n      }\n      if (result2 != -1 || result1 != -1) {\n        input3 = temp8;\n        temp4 = temp6;\n      }\n      boolVar2 = (temp8 | temp6 << 0xc) == 0;\n      if (boolVar2) {\n        boolVar2 = (input3 | temp4 << 0xc) == 0;\n      }\n      if (boolVar2) {\n        boolVar2 = temp6 == temp4;\n      }\n      if (!boolVar2) {\n        temp6 = temp6 | 0x80000;\n      }\n      return CONCAT44(temp6,temp8);\n    }\n    if (((input2 ^ temp4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp6 | input1) == 0) {\n        input1 = input3;\n        input2 = temp4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp4) {\n      return 0;\n    }\n    if (temp6 >> 0x15 == 0) {\n      boolVar2 = (input1 & 0x80000000) != 0;\n      temp4 = input2 * 2 + (uint)boolVar2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)boolVar2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input1 << 1);\n    }\n    if (temp6 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp6 = temp6 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp8 = input4 - temp6;\n  boolVar2 = temp8 != 0;\n  if (input4 < temp6) {\n    temp8 = -temp8;\n  }\n  temp7 = input1;\n  temp5 = input2;\n  if (boolVar2 && temp6 <= input4) {\n    temp6 = temp6 + temp8;\n    temp7 = input3;\n    temp5 = temp4;\n    input3 = input1;\n    temp4 = input2;\n  }\n  if (0x36 < temp8) {\n    return CONCAT44(temp5,temp7);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    boolVar2 = temp7 != 0;\n    temp7 = -temp7;\n    temp2 = -temp2 - (uint)boolVar2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    boolVar2 = input3 != 0;\n    input3 = -input3;\n    temp5 = -temp5 - (uint)boolVar2;\n  }\n  if (temp6 == temp8) {\n    temp5 = temp5 ^ 0x100000;\n    if (temp6 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      temp6 = 1;\n    }\n    else {\n      temp8 = temp8 - 1;\n    }\n  }\n  temp4 = -temp8 + 0x20;\n  if ((int)temp8 < 0x21) {\n    temp9 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (temp8 & 0xff);\n    temp1 = temp7 + input3;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp7,input3) + ((int)temp5 >> (temp8 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp9 = temp5 << (-temp8 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp9 = temp9 | 2;\n    }\n    temp5 = (int)temp5 >> (temp8 - 0x20 & 0xff);\n    temp4 = temp7 + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)CARRY4(temp7,temp5);\n  }\n  input2 = temp2 & 0x80000000;\n  temp8 = temp2;\n  if ((int)temp2 < 0) {\n    boolVar2 = temp9 == 0;\n    temp9 = -temp9;\n    temp8 = -temp4;\n    temp4 = -(uint)!boolVar2 - temp4;\n    temp8 = -(uint)(boolVar2 <= temp8) - temp2;\n  }\n  if (0xfffff < temp8) {\n    temp7 = temp6 - 1;\n    if (0x1fffff < temp8) {\n      temp7 = temp8 & 1;\n      temp8 = temp8 >> 1;\n      byteVar = (byte)temp4;\n      temp4 = (uint)(temp7 != 0) << 0x1f | temp4 >> 1;\n      temp9 = (uint)(byteVar & 1) << 0x1f | temp9 >> 1;\n      temp7 = temp6;\n      if (0xffbfffff < temp6 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    boolVar2 = 0x7fffffff < temp9;\n    if (temp9 == 0x80000000) {\n      boolVar2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(temp8 + temp7 * 0x100000 + (uint)CARRY4(temp4,(uint)boolVar2) | input2,\n                    temp4 + boolVar2);\n  }\n  boolVar1 = (temp9 & 0x80000000) != 0;\n  temp9 = temp9 << 1;\n  temp7 = temp4 * 2;\n  boolVar2 = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)boolVar1;\n  temp8 = temp8 * 2 + (uint)(boolVar2 || CARRY4(temp7,(uint)boolVar1));\n  temp7 = temp6 - 2;\n  if ((temp8 & 0x100000) != 0) goto LAB_080002a0;\n  temp5 = temp4;\n  temp6 = temp8;\n  if (temp8 == 0) {\n    temp5 = 0;\n    temp6 = temp4;\n  }\n  result2 = LZCOUNT(temp6);\n  if (temp8 == 0) {\n    result2 = result2 + 0x20;\n  }\n  temp8 = result2 - 0xb;\n  boolVar3 = SBORROW4(temp8,0x20);\n  temp4 = result2 - 0x2b;\n  boolVar2 = (int)temp4 < 0;\n  boolVar1 = temp4 == 0;\n  if ((int)temp8 < 0x20) {\n    boolVar3 = SCARRY4(temp4,0xc);\n    result2 = result2 + -0x1f;\n    boolVar2 = result2 < 0;\n    boolVar1 = result2 == 0;\n    temp4 = temp8;\n    if (!boolVar1 && boolVar2 == boolVar3) {\n      temp5 = temp6 << (temp8 & 0xff);\n      temp6 = temp6 >> (0xcU - result2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (boolVar1 || boolVar2 != boolVar3) {\n    temp9 = 0x20 - temp4;\n  }\n  temp6 = temp6 << (temp4 & 0xff);\n  if (boolVar1 || boolVar2 != boolVar3) {\n    temp6 = temp6 | temp5 >> (temp9 & 0xff);\n  }\n  if (boolVar1 || boolVar2 != boolVar3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp8 <= (int)temp7) {\n    return CONCAT44(temp6 + (temp7 - temp8) * 0x100000 | input2,temp5);\n  }\n  temp4 = ~(temp7 - temp8);\n  if ((int)temp4 < 0x1f) {\n    result2 = temp4 - 0x13;\n    if (result2 != 0 && result2 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - result2) & 0xff) | temp6 << (0xcU - result2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input2 | temp6 >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | temp6 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,temp6 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "perform_calculation_08000190",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result1",
                "bVar2": "byteVar",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "iVar8": "result2",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "uVar11": "temp8",
                "uVar12": "temp9",
                "bVar13": "boolVar1",
                "bVar14": "boolVar2",
                "bVar15": "boolVar3"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_sum_08000194",
            "code": "\nulonglong calculate_sum_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shifted_input2;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shifted_input4;\n  uint shifted_input2;\n  uint result_high;\n  uint shifted_input4;\n  uint shifted_input2;\n  uint carry_shifted;\n  uint result_low;\n  bool is_equal;\n  bool temp_bool;\n  bool is_negative;\n  \n  shifted_input2 = input2 << 1;\n  shifted_input4 = input4 << 1;\n  is_equal = ((input2 ^ input4) & 0x7fffffff) == 0;\n  temp_bool = is_equal && input1 == input3;\n  if (!is_equal || input1 != input3) {\n    temp_bool = (shifted_input2 | input1) == 0;\n  }\n  if (!temp_bool) {\n    temp_bool = (shifted_input4 | input3) == 0;\n  }\n  shifted_input4 = (int)shifted_input2 >> 0x15;\n  if (!temp_bool) {\n    temp_bool = shifted_input4 == -1;\n  }\n  shifted_input2 = (int)shifted_input4 >> 0x15;\n  if (!temp_bool) {\n    temp_bool = shifted_input2 == -1;\n  }\n  if (temp_bool) {\n    if (shifted_input4 == -1 || shifted_input2 == -1) {\n      shifted_input4 = input4;\n      shifted_input2 = input3;\n      if (shifted_input4 == -1) {\n        shifted_input4 = input2;\n        shifted_input2 = input1;\n      }\n      if (shifted_input4 != -1 || shifted_input2 != -1) {\n        input3 = shifted_input2;\n        input4 = shifted_input4;\n      }\n      temp_bool = (shifted_input2 | shifted_input4 << 0xc) == 0;\n      if (temp_bool) {\n        temp_bool = (input3 | input4 << 0xc) == 0;\n      }\n      if (temp_bool) {\n        temp_bool = shifted_input4 == input4;\n      }\n      if (!temp_bool) {\n        shifted_input4 = shifted_input4 | 0x80000;\n      }\n      return CONCAT44(shifted_input4,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      temp_bool = (input1 & 0x80000000) != 0;\n      shifted_input4 = input2 * 2 + (uint)temp_bool;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)temp_bool)) {\n        shifted_input4 = shifted_input4 | 0x80000000;\n      }\n      return CONCAT44(shifted_input4,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  shifted_input4 = shifted_input4 >> 0x15;\n  shifted_input2 = shifted_input4 - shifted_input2;\n  temp_bool = shifted_input2 != 0;\n  if (shifted_input4 < shifted_input2) {\n    shifted_input2 = -shifted_input2;\n  }\n  result_high = input1;\n  temp3 = input2;\n  if (temp_bool && shifted_input2 <= shifted_input4) {\n    shifted_input2 = shifted_input2 + shifted_input2;\n    result_high = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < shifted_input2) {\n    return CONCAT44(temp3,result_high);\n  }\n  shifted_input4 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    temp_bool = result_high != 0;\n    result_high = -result_high;\n    shifted_input4 = -shifted_input4 - (uint)temp_bool;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    temp_bool = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)temp_bool;\n  }\n  if (shifted_input2 == shifted_input2) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      shifted_input4 = shifted_input4 ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      shifted_input2 = shifted_input2 - 1;\n    }\n  }\n  result_low = -shifted_input2 + 0x20;\n  if ((int)shifted_input2 < 0x21) {\n    carry_shifted = input3 << (result_low & 0xff);\n    input3 = input3 >> (shifted_input2 & 0xff);\n    temp1 = result_high + input3;\n    temp2 = temp3 << (result_low & 0xff);\n    result_low = temp1 + temp2;\n    shifted_input4 = shifted_input4 + CARRY4(result_high,input3) + ((int)temp3 >> (shifted_input2 & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    carry_shifted = temp3 << (-shifted_input2 + 0x40 & 0xff);\n    if (input3 != 0) {\n      carry_shifted = carry_shifted | 2;\n    }\n    temp3 = (int)temp3 >> (shifted_input2 - 0x20 & 0xff);\n    result_low = result_high + temp3;\n    shifted_input4 = shifted_input4 + ((int)temp3 >> 0x1f) + (uint)CARRY4(result_high,temp3);\n  }\n  input2 = shifted_input4 & 0x80000000;\n  shifted_input2 = shifted_input4;\n  if ((int)shifted_input4 < 0) {\n    temp_bool = carry_shifted == 0;\n    carry_shifted = -carry_shifted;\n    shifted_input2 = -result_low;\n    result_low = -(uint)!temp_bool - result_low;\n    shifted_input2 = -(uint)(temp_bool <= shifted_input2) - shifted_input4;\n  }\n  if (0xfffff < shifted_input2) {\n    result_high = shifted_input2 - 1;\n    if (0x1fffff < shifted_input2) {\n      shifted_input4 = shifted_input2 & 1;\n      shifted_input2 = shifted_input2 >> 1;\n      carry = (byte)result_low;\n      result_low = (uint)(shifted_input4 != 0) << 0x1f | result_low >> 1;\n      carry_shifted = (uint)(carry & 1) << 0x1f | carry_shifted >> 1;\n      result_high = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    temp_bool = 0x7fffffff < carry_shifted;\n    if (carry_shifted == 0x80000000) {\n      temp_bool = (result_low & 1) != 0;\n    }\n    return CONCAT44(shifted_input2 + result_high * 0x100000 + (uint)CARRY4(result_low,(uint)temp_bool) | input2,\n                    result_low + temp_bool);\n  }\n  is_equal = (carry_shifted & 0x80000000) != 0;\n  carry_shifted = carry_shifted << 1;\n  result_high = result_low * 2;\n  temp_bool = CARRY4(result_low,result_low);\n  result_low = result_low * 2 + (uint)is_equal;\n  shifted_input2 = shifted_input2 * 2 + (uint)(temp_bool || CARRY4(result_high,(uint)is_equal));\n  result_high = shifted_input2 - 2;\n  if ((shifted_input2 & 0x100000) != 0) goto LAB_080002a0;\n  temp3 = result_low;\n  shifted_input2 = shifted_input2;\n  if (shifted_input2 == 0) {\n    temp3 = 0;\n    shifted_input2 = result_low;\n  }\n  shifted_input4 = LZCOUNT(shifted_input2);\n  if (shifted_input2 == 0) {\n    shifted_input4 = shifted_input4 + 0x20;\n  }\n  result_low = shifted_input4 - 0xb;\n  is_negative = SBORROW4(result_low,0x20);\n  shifted_input2 = shifted_input4 - 0x2b;\n  temp_bool = (int)shifted_input2 < 0;\n  is_equal = shifted_input2 == 0;\n  if ((int)result_low < 0x20) {\n    is_negative = SCARRY4(shifted_input2,0xc);\n    shifted_input4 = shifted_input4 + -0x1f;\n    temp_bool = shifted_input4 < 0;\n    is_equal = shifted_input4 == 0;\n    shifted_input2 = result_low;\n    if (!is_equal && temp_bool == is_negative) {\n      temp3 = shifted_input2 << (result_low & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shifted_input4 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_equal || temp_bool != is_negative) {\n    carry_shifted = 0x20 - shifted_input2;\n  }\n  shifted_input2 = shifted_input2 << (shifted_input2 & 0xff);\n  if (is_equal || temp_bool != is_negative) {\n    shifted_input2 = shifted_input2 | temp3 >> (carry_shifted & 0xff);\n  }\n  if (is_equal || temp_bool != is_negative) {\n    temp3 = temp3 << (shifted_input2 & 0xff);\n  }\nLAB_08000318:\n  if ((int)result_low <= (int)result_high) {\n    return CONCAT44(shifted_input2 + (result_high - result_low) * 0x100000 | input2,temp3);\n  }\n  shifted_input2 = ~(result_high - result_low);\n  if ((int)shifted_input2 < 0x1f) {\n    shifted_input4 = shifted_input2 - 0x13;\n    if (shifted_input4 != 0 && shifted_input4 < 0 == SCARRY4(shifted_input2 - 0x1f,0xc)) {\n      return CONCAT44(shifted_input4,temp3 >> (0x20 - (0xcU - shifted_input4) & 0xff) | shifted_input2 << (0xcU - shifted_input4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shifted_input2 = shifted_input2 + 1;\n    return CONCAT44(input2 | shifted_input2 >> (shifted_input2 & 0xff),\n                    temp3 >> (shifted_input2 & 0xff) | shifted_input2 << (0x20 - shifted_input2 & 0xff));\n  }\n  return CONCAT44(shifted_input4,shifted_input2 >> (shifted_input2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_sum_08000194",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shifted_input2",
                "bVar2": "carry",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "shifted_input4",
                "uVar7": "shifted_input2",
                "uVar8": "result_high",
                "uVar9": "shifted_input4",
                "uVar10": "shifted_input2",
                "uVar11": "carry_shifted",
                "uVar12": "result_low",
                "bVar13": "is_equal",
                "bVar14": "temp_bool",
                "bVar15": "is_negative"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080015f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "bitwise_shift_and_concatenate_0800040c",
            "code": "\nulonglong bitwiseShiftAndConcatenate_0800040c(uint input)\n\n{\n  uint result1;\n  uint result2;\n  int shiftAmount;\n  uint temp1;\n  uint temp2;\n  bool isNegative;\n  bool isZero;\n  bool overflowCheck;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result1 = 0;\n  shiftAmount = LZCOUNT(input);\n  temp1 = shiftAmount + 0x15;\n  overflowCheck = SBORROW4(temp1,0x20);\n  result2 = shiftAmount - 0xb;\n  isNegative = (int)result2 < 0;\n  isZero = result2 == 0;\n  if (temp1 < 0x20) {\n    overflowCheck = SCARRY4(result2,0xc);\n    isNegative = false;\n    isZero = shiftAmount + 1 == 0;\n    result2 = temp1;\n    if (!isZero && overflowCheck == false) {\n      result1 = input << temp1;\n      input = input >> (0xcU - (shiftAmount + 1) & 0xff);\n      goto shiftOperations;\n    }\n  }\n  if (isZero || isNegative != overflowCheck) {\n    temp2 = 0x20 - result2;\n  }\n  input = input << (result2 & 0xff);\n  if (isZero || isNegative != overflowCheck) {\n    input = input | 0U >> (temp2 & 0xff);\n  }\n  if (isZero || isNegative != overflowCheck) {\n    result1 = 0 << (result2 & 0xff);\n  }\nshiftOperations:\n  if (temp1 < 0x433) {\n    return combineResults(input + (0x432 - temp1) * 0x100000,result1);\n  }\n  result2 = ~(0x432 - temp1);\n  if (0x1e < (int)result2) {\n    return (ulonglong)(input >> (result2 - 0x1f & 0xff));\n  }\n  shiftAmount = result2 - 0x13;\n  if (shiftAmount == 0 || shiftAmount < 0 != SCARRY4(result2 - 0x1f,0xc)) {\n    result2 = result2 + 1;\n    return combineResults(input >> (result2 & 0xff),\n                    result1 >> (result2 & 0xff) | input << (0x20 - result2 & 0xff));\n  }\n  return (ulonglong)(result1 >> (0x20 - (0xcU - shiftAmount) & 0xff) | input << (0xcU - shiftAmount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "bitwise_shift_and_concatenate_0800040c",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "shiftAmount",
                "uVar4": "temp1",
                "in_r12": "temp2",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "overflowCheck",
                "LAB_08000318": "shiftOperations",
                "CONCAT44": "combineResults"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08000cd0",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "shift_and_concat_0800042c",
            "code": "\nulonglong shiftAndConcat_0800042c(uint input)\n\n{\n  uint shiftCount;\n  uint positiveInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint finalShiftCount;\n  uint negativeFlag;\n  uint rightShiftAmount;\n  bool isNegative;\n  bool isZero;\n  bool overflowFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  negativeFlag = input & 0x80000000;\n  positiveInput = input;\n  if ((int)negativeFlag < 0) {\n    positiveInput = -input;\n  }\n  shiftCount = 0;\n  leadingZeros = LZCOUNT(positiveInput);\n  finalShiftCount = leadingZeros + 0x15;\n  overflowFlag = SBORROW4(finalShiftCount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (finalShiftCount < 0x20) {\n    overflowFlag = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = finalShiftCount;\n    if (!isZero && overflowFlag == false) {\n      shiftCount = positiveInput << finalShiftCount;\n      positiveInput = positiveInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != overflowFlag) {\n    rightShiftAmount = 0x20 - shiftAmount;\n  }\n  positiveInput = positiveInput << (shiftAmount & 0xff);\n  if (isZero || isNegative != overflowFlag) {\n    positiveInput = positiveInput | 0U >> (rightShiftAmount & 0xff);\n  }\n  if (isZero || isNegative != overflowFlag) {\n    shiftCount = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (finalShiftCount < 0x433) {\n    return CONCAT44(positiveInput + (0x432 - finalShiftCount) * 0x100000 | negativeFlag,shiftCount);\n  }\n  shiftAmount = ~(0x432 - finalShiftCount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,positiveInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(negativeFlag | positiveInput >> (shiftAmount & 0xff),\n                    shiftCount >> (shiftAmount & 0xff) | positiveInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,shiftCount >> (0x20 - (0xcU - leadingZeros) & 0xff) | positiveInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "shift_and_concat_0800042c",
                "param_1": "input",
                "uVar1": "shiftCount",
                "uVar2": "positiveInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "finalShiftCount",
                "uVar6": "negativeFlag",
                "in_r12": "rightShiftAmount",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "overflowFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 param1,uint num1,uint num2,uint num3)\n\n{\n  ulonglong result;\n  longlong temp;\n  uint mask1;\n  uint mask2;\n  int sum;\n  uint operand1;\n  uint unaff_r5;\n  uint operand2;\n  uint carry;\n  bool isZero;\n  bool overflow1;\n  bool overflow2;\n  ulonglong combinedParams;\n  \n  combinedParams = CONCAT44(num1,param1);\n  operand2 = 0x7ff;\n  mask2 = num1 >> 0x14 & 0x7ff;\n  isZero = mask2 == 0;\n  if (!isZero) {\n    unaff_r5 = num3 >> 0x14 & 0x7ff;\n    isZero = unaff_r5 == 0;\n  }\n  if (!isZero) {\n    isZero = mask2 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = unaff_r5 == 0x7ff;\n  }\n  if (isZero) {\n    combinedParams = reverse_and_shift_080006d4();\n  }\n  mask1 = (uint)(combinedParams >> 0x20);\n  sum = mask2 + unaff_r5;\n  mask2 = mask1 ^ num3;\n  mask1 = mask1 & ~(operand2 << 0x15);\n  num3 = num3 & ~(operand2 << 0x15);\n  isZero = ((uint)combinedParams | mask1 << 0xc) == 0;\n  if (!isZero) {\n    isZero = (num2 | num3 << 0xc) == 0;\n  }\n  mask1 = mask1 | 0x100000;\n  num3 = num3 | 0x100000;\n  if (isZero) {\n    num2 = (uint)combinedParams | num2;\n    num3 = (mask2 & 0x80000000 | mask1) ^ num3;\n    mask2 = operand2 >> 1;\n    overflow2 = SBORROW4(sum,mask2);\n    operand1 = sum - mask2;\n    isZero = operand1 == 0;\n    mask1 = operand1;\n    if (!isZero && (int)mask2 <= sum) {\n      overflow2 = SBORROW4(operand2,operand1);\n      mask1 = operand2 - operand1;\n      isZero = operand2 == operand1;\n    }\n    if (!isZero && (int)mask1 < 0 == overflow2) {\n      num3 = num3 | operand1 * 0x100000;\n    }\n    if (!isZero && (int)mask1 < 0 == overflow2) {\n      return CONCAT44(num3,num2);\n    }\n    num3 = num3 | 0x100000;\n    operand2 = 0;\n    overflow2 = SBORROW4(operand1,1);\n    operand1 = operand1 - 1;\n    isZero = operand1 == 0;\n    mask2 = operand1;\n  }\n  else {\n    result = (combinedParams & 0xffffffff) * (ulonglong)num2;\n    combinedParams = (combinedParams & 0xffffffff) * (ulonglong)num3 +\n             (ulonglong)mask1 * (ulonglong)num2 + (result >> 0x20);\n    carry = (uint)combinedParams;\n    temp = (ulonglong)mask1 * (ulonglong)num3 + (combinedParams >> 0x20);\n    operand2 = (uint)temp;\n    mask1 = (uint)((ulonglong)temp >> 0x20);\n    if ((int)result != 0) {\n      carry = carry | 1;\n    }\n    operand1 = (sum + -0x3ff) - (uint)(mask1 < 0x200);\n    if (mask1 < 0x200) {\n      isZero = (carry & 0x80000000) != 0;\n      carry = carry << 1;\n      temp = CONCAT44(mask1 * 2 + (uint)(CARRY4(operand2,operand2) || CARRY4(operand2 * 2,(uint)isZero)),\n                       operand2 * 2 + (uint)isZero);\n    }\n    num3 = mask2 & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    num2 = (uint)temp << 0xb | carry >> 0x15;\n    operand2 = carry * 0x800;\n    overflow1 = 0xfc < operand1;\n    overflow2 = SBORROW4(operand1,0xfd);\n    mask1 = operand1 - 0xfd;\n    isZero = mask1 == 0;\n    mask2 = mask1;\n    if (overflow1 && !isZero) {\n      overflow1 = 0x6ff < mask1;\n      overflow2 = SBORROW4(mask1,0x700);\n      mask2 = operand1 - 0x7fd;\n      isZero = mask1 == 0x700;\n    }\n    if (!overflow1 || isZero) {\n      isZero = 0x7fffffff < operand2;\n      if (operand2 == 0x80000000) {\n        isZero = (carry >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(num3 + operand1 * 0x100000 + (uint)CARRY4(num2,(uint)isZero),num2 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)mask2 < 0 == overflow2) {\n    return (ulonglong)(num3 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  overflow1 = SCARRY4(operand1,0x36);\n  isZero = (int)(operand1 + 0x36) < 0;\n  overflow2 = operand1 == 0xffffffca;\n  if (overflow2 || isZero != overflow1) {\n    num2 = 0;\n  }\n  if (overflow2 || isZero != overflow1) {\n    num3 = num3 & 0x80000000;\n  }\n  if (overflow2 || isZero != overflow1) {\n    return CONCAT44(num3,num2);\n  }\n  mask2 = -operand1;\n  mask1 = mask2 - 0x20;\n  if (0x1f < (int)mask2) {\n    operand1 = num2 >> (mask1 & 0xff) | num3 << (0x20 - mask1 & 0xff);\n    mask2 = (num3 >> (mask1 & 0xff) & ~((num3 & 0x80000000) >> (mask1 & 0xff))) -\n            ((int)operand1 >> 0x1f);\n    if ((operand2 | num2 << (0x20 - mask1 & 0xff) | operand1 << 1) == 0) {\n      mask2 = mask2 & ~(operand1 >> 0x1f);\n    }\n    return CONCAT44(num3,mask2) & 0x80000000ffffffff;\n  }\n  sum = mask2 - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(mask1,0xc)) {\n    carry = num2 << (operand1 + 0x20 & 0xff);\n    mask1 = num2 >> (mask2 & 0xff) | num3 << (operand1 + 0x20 & 0xff);\n    operand1 = mask1 + -((int)carry >> 0x1f);\n    if ((operand2 | carry << 1) == 0) {\n      operand1 = operand1 & ~(carry >> 0x1f);\n    }\n    return CONCAT44((num3 & 0x80000000) +\n                    ((num3 & 0x7fffffff) >> (mask2 & 0xff)) +\n                    (uint)CARRY4(mask1,-((int)carry >> 0x1f)),operand1);\n  }\n  mask2 = 0xc - sum;\n  operand1 = num2 << (mask2 & 0xff);\n  mask2 = num2 >> (0x20 - mask2 & 0xff) | num3 << (mask2 & 0xff);\n  mask1 = mask2 + -((int)operand1 >> 0x1f);\n  if ((operand2 | operand1 << 1) == 0) {\n    mask1 = mask1 & ~(operand1 >> 0x1f);\n  }\n  return CONCAT44((num3 & 0x80000000) + (uint)CARRY4(mask2,-((int)operand1 >> 0x1f)),mask1);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "param1",
                "param_2": "num1",
                "param_3": "num2",
                "param_4": "num3",
                "uVar1": "result",
                "lVar2": "temp",
                "uVar3": "mask1",
                "uVar4": "mask2",
                "iVar5": "sum",
                "uVar6": "operand1",
                "uVar7": "operand2",
                "uVar8": "carry",
                "bVar9": "isZero",
                "bVar10": "overflow1",
                "bVar11": "overflow2",
                "uVar12": "combinedParams"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "reverse_and_shift_080006d4",
            "code": "\nulonglong reverseAndShift_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint unaffected_r4;\n  uint bit2;\n  uint bit3;\n  uint input12;\n  bool isZero;\n  \n  bit2 = input12 & input4 >> 0x14;\n  if (unaffected_r4 != input12 && bit2 != input12) {\n    isZero = (input1 | input2 << 1) == 0;\n    if (!isZero) {\n      isZero = (input3 | input4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (unaffected_r4 == 0) {\n      bit3 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit3;\n      if (bit2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  bit3 = input2;\n  if (((!isZero) && ((unaffected_r4 != input12 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit2 != input12 || (input1 = input3, bit3 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit3,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "reverse_and_shift_080006d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "unaffected_r4",
                "uVar2": "bit2",
                "uVar3": "bit3",
                "in_r12": "input12",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_double_0800074c",
            "code": "\nulonglong calculate_double_0800074c(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint mask1;\n  uint mask2;\n  uint mask3;\n  uint mask4;\n  uint mask5;\n  uint mask6;\n  uint flag1;\n  int difference;\n  uint addition;\n  uint flag2;\n  uint masked_input2;\n  uint masked_input1;\n  uint subtraction;\n  uint remainder;\n  bool condition1;\n  bool condition2;\n  bool carry;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  remainder = 0x7ff;\n  flag1 = input2 >> 0x14 & 0x7ff;\n  condition1 = flag1 == 0;\n  if (!condition1) {\n    flag2 = input4 >> 0x14 & 0x7ff;\n    condition1 = flag2 == 0;\n  }\n  if (!condition1) {\n    condition1 = flag1 == 0x7ff;\n  }\n  if (!condition1) {\n    condition1 = flag2 == 0x7ff;\n  }\n  if (condition1) {\n    result = calculate_double_0800074c_080008ba();\n  }\n  addition = (uint)((ulonglong)result >> 0x20);\n  masked_input1 = (uint)result;\n  difference = flag1 - flag2;\n  if ((input3 | input4 << 0xc) == 0) {\n    flag1 = (addition ^ input4) & 0x80000000 | addition & 0xfffff;\n    carry = SCARRY4(difference,remainder >> 1);\n    addition = difference + (remainder >> 1);\n    condition1 = (int)addition < 0;\n    condition2 = addition == 0;\n    if (!condition2 && condition1 == carry) {\n      carry = SBORROW4(remainder,addition);\n      condition1 = (int)(remainder - addition) < 0;\n      condition2 = remainder == addition;\n    }\n    if (!condition2 && condition1 == carry) {\n      flag1 = flag1 | addition * 0x100000;\n    }\n    if (!condition2 && condition1 == carry) {\n      return CONCAT44(flag1,masked_input1);\n    }\n    flag1 = flag1 | 0x100000;\n    remainder = 0;\n    condition2 = SBORROW4(addition,1);\n    addition = addition - 1;\n    condition1 = addition == 0;\n    mask3 = addition;\n  }\n  else {\n    mask3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    remainder = input3 << 8;\n    masked_input2 = (addition << 0xc) >> 4 | 0x10000000 | masked_input1 >> 0x18;\n    masked_input1 = masked_input1 * 0x100;\n    flag1 = (addition ^ input4) & 0x80000000;\n    condition1 = mask3 <= masked_input2;\n    if (masked_input2 == mask3) {\n      condition1 = remainder <= masked_input1;\n    }\n    difference = difference + (uint)condition1;\n    addition = difference + 0x3fd;\n    if (condition1 == false) {\n      mask3 = mask3 >> 1;\n      remainder = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | remainder >> 1;\n    }\n    subtraction = masked_input1 - remainder;\n    masked_input2 = (masked_input2 - mask3) - (uint)(masked_input1 < remainder);\n    mask4 = mask3 >> 1;\n    mask1 = (uint)((mask3 & 1) != 0) << 0x1f | remainder >> 1;\n    masked_input1 = 0x100000;\n    mask3 = 0x80000;\n    while( true ) {\n      condition1 = mask1 <= subtraction;\n      if (mask4 < masked_input2 || masked_input2 - mask4 < (uint)condition1) {\n        subtraction = subtraction - mask1;\n        masked_input1 = masked_input1 | mask3;\n        masked_input2 = (masked_input2 - mask4) - (uint)!condition1;\n      }\n      mask5 = mask4 >> 1;\n      mask1 = (uint)((mask4 & 1) != 0) << 0x1f | mask1 >> 1;\n      condition2 = mask1 <= subtraction;\n      condition1 = masked_input2 - mask5 < (uint)condition2;\n      remainder = masked_input2;\n      if (mask5 < masked_input2 || condition1) {\n        subtraction = subtraction - mask1;\n        remainder = (masked_input2 - mask5) - (uint)!condition2;\n      }\n      if (mask5 < masked_input2 || condition1) {\n        masked_input1 = masked_input1 | mask3 >> 1;\n      }\n      masked_input2 = mask4 >> 2;\n      mask2 = (uint)((mask5 & 1) != 0) << 0x1f | mask1 >> 1;\n      condition2 = mask2 <= subtraction;\n      condition1 = remainder - masked_input2 < (uint)condition2;\n      mask5 = remainder;\n      if (masked_input2 < remainder || condition1) {\n        subtraction = subtraction - mask2;\n        mask5 = (remainder - masked_input2) - (uint)!condition2;\n      }\n      if (masked_input2 < remainder || condition1) {\n        masked_input1 = masked_input1 | mask3 >> 2;\n      }\n      mask6 = mask4 >> 3;\n      mask1 = (uint)((masked_input2 & 1) != 0) << 0x1f | mask2 >> 1;\n      condition2 = mask1 <= subtraction;\n      condition1 = mask5 - mask6 < (uint)condition2;\n      masked_input2 = mask5;\n      if (mask6 < mask5 || condition1) {\n        subtraction = subtraction - mask1;\n        masked_input2 = (mask5 - mask6) - (uint)!condition2;\n      }\n      if (mask6 < mask5 || condition1) {\n        masked_input1 = masked_input1 | mask3 >> 3;\n      }\n      remainder = masked_input2 | subtraction;\n      if (remainder == 0) break;\n      masked_input2 = masked_input2 << 4 | subtraction >> 0x1c;\n      subtraction = subtraction << 4;\n      mask4 = mask4 & 0xfffffff8 | mask1 >> 0x1d;\n      mask1 = (mask2 >> 1) << 3;\n      mask3 = mask3 >> 4;\n      if (mask3 == 0) {\n        mask6 = mask4;\n        if ((flag1 & 0x100000) != 0) goto LAB_0800086a;\n        flag1 = flag1 | masked_input1;\n        masked_input1 = 0;\n        mask3 = 0x80000000;\n      }\n    }\n    if ((flag1 & 0x100000) == 0) {\n      flag1 = flag1 | masked_input1;\n      masked_input1 = 0;\n    }\nLAB_0800086a:\n    carry = 0xfc < addition;\n    condition2 = SBORROW4(addition,0xfd);\n    mask4 = difference + 0x300;\n    condition1 = mask4 == 0;\n    mask3 = mask4;\n    if (carry && !condition1) {\n      carry = 0x6ff < mask4;\n      condition2 = SBORROW4(mask4,0x700);\n      mask3 = difference - 0x400;\n      condition1 = mask4 == 0x700;\n    }\n    if (!carry || condition1) {\n      condition1 = mask6 <= masked_input2;\n      if (masked_input2 == mask6) {\n        condition1 = mask1 <= subtraction;\n      }\n      if (masked_input2 == mask6 && subtraction == mask1) {\n        condition1 = (masked_input1 & 1) != 0;\n      }\n      return CONCAT44(flag1 + addition * 0x100000 + (uint)CARRY4(masked_input1,(uint)condition1),masked_input1 + condition1);\n    }\n  }\n  if (!condition1 && (int)mask3 < 0 == condition2) {\n    return (ulonglong)(flag1 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  carry = SCARRY4(addition,0x36);\n  condition1 = (int)(addition + 0x36) < 0;\n  condition2 = addition == 0xffffffca;\n  if (condition2 || condition1 != carry) {\n    masked_input1 = 0;\n  }\n  if (condition2 || condition1 != carry) {\n    flag1 = flag1 & 0x80000000;\n  }\n  if (condition2 || condition1 != carry) {\n    return CONCAT44(flag1,masked_input1);\n  }\n  mask3 = -addition;\n  masked_input2 = mask3 - 0x20;\n  if (0x1f < (int)mask3) {\n    mask3 = masked_input1 >> (masked_input2 & 0xff) | flag1 << (0x20 - masked_input2 & 0xff);\n    addition = (flag1 >> (masked_input2 & 0xff) & ~((flag1 & 0x80000000) >> (masked_input2 & 0xff))) -\n            ((int)mask3 >> 0x1f);\n    if ((remainder | masked_input1 << (0x20 - masked_input2 & 0xff) | mask3 << 1) == 0) {\n      addition = addition & ~(mask3 >> 0x1f);\n    }\n    return CONCAT44(flag1,addition) & 0x80000000ffffffff;\n  }\n  difference = mask3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(masked_input2,0xc)) {\n    addition = 0xc - difference;\n    mask3 = masked_input1 << (addition & 0xff);\n    masked_input1 = masked_input1 >> (0x20 - addition & 0xff) | flag1 << (addition & 0xff);\n    addition = masked_input1 + -((int)mask3 >> 0x1f);\n    if ((remainder | mask3 << 1) == 0) {\n      addition = addition & ~(mask3 >> 0x1f);\n    }\n    return CONCAT44((flag1 & 0x80000000) + (uint)CARRY4(masked_input1,-((int)mask3 >> 0x1f)),addition);\n  }\n  masked_input2 = masked_input1 << (addition + 0x20 & 0xff);\n  masked_input1 = masked_input1 >> (mask3 & 0xff) | flag1 << (addition + 0x20 & 0xff);\n  addition = masked_input1 + -((int)masked_input2 >> 0x1f);\n  if ((remainder | masked_input2 << 1) == 0) {\n    addition = addition & ~(masked_input2 >> 0x1f);\n  }\n  return CONCAT44((flag1 & 0x80000000) +\n                  ((flag1 & 0x7fffffff) >> (mask3 & 0xff)) +\n                  (uint)CARRY4(masked_input1,-((int)masked_input2 >> 0x1f)),addition);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_double_0800074c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "mask1",
                "uVar2": "mask2",
                "uVar3": "mask3",
                "uVar4": "mask4",
                "uVar5": "mask5",
                "uVar6": "mask6",
                "uVar7": "flag1",
                "iVar8": "difference",
                "uVar9": "addition",
                "unaff_r5": "flag2",
                "uVar10": "masked_input2",
                "uVar11": "masked_input1",
                "uVar12": "subtraction",
                "uVar13": "remainder",
                "bVar14": "condition1",
                "bVar15": "condition2",
                "bVar16": "carry",
                "uVar17": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "calculate_double_080008ba",
            "code": "\nulonglong calculate_double_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool is_zero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  bit4 = input2;\n  if (bit2 != bit5 || bit3 != bit5) {\n    if (bit2 == bit5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit3 != bit5)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == bit5) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (bit2 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "calculate_double_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_data_equality_0800092c",
            "code": "\nuint check_data_equality_0800092c(uint data1,uint data2,uint data3,uint shifted_bitwise_equal_data)\n\n{\n  uint bitwise_xor_result;\n  bool are_data1_data2_equal;\n  bool is_data1_less_than_data3;\n  \n  if (((int)(data2 << 1) >> 0x15 == -1 || (int)(shifted_bitwise_equal_data << 1) >> 0x15 == -1) &&\n     ((((int)(data2 << 1) >> 0x15 == -1 && ((data1 | data2 << 0xc) != 0)) ||\n      (((int)(shifted_bitwise_equal_data << 1) >> 0x15 == -1 && ((data3 | shifted_bitwise_equal_data << 0xc) != 0)))))) {\n    return 1;\n  }\n  are_data1_data2_equal = (data1 | data2 << 1) == 0;\n  if (are_data1_data2_equal) {\n    are_data1_data2_equal = (data3 | shifted_bitwise_equal_data << 1) == 0;\n  }\n  if (!are_data1_data2_equal) {\n    are_data1_data2_equal = data2 == shifted_bitwise_equal_data;\n  }\n  if (are_data1_data2_equal) {\n    are_data1_data2_equal = data1 == data3;\n  }\n  if (!are_data1_data2_equal) {\n    bitwise_xor_result = data2 ^ shifted_bitwise_equal_data;\n    are_data1_data2_equal = bitwise_xor_result == 0;\n    if (-1 < (int)bitwise_xor_result) {\n      are_data1_data2_equal = data2 == shifted_bitwise_equal_data;\n    }\n    is_data1_less_than_data3 = -1 < (int)bitwise_xor_result && shifted_bitwise_equal_data <= data2;\n    if (are_data1_data2_equal) {\n      is_data1_less_than_data3 = data3 <= data1;\n    }\n    shifted_bitwise_equal_data = (int)shifted_bitwise_equal_data >> 0x1f;\n    if (!is_data1_less_than_data3) {\n      shifted_bitwise_equal_data = ~shifted_bitwise_equal_data;\n    }\n    return shifted_bitwise_equal_data | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_data_equality_0800092c",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "shifted_bitwise_equal_data",
                "uVar1": "bitwise_xor_result",
                "bVar2": "are_data1_data2_equal",
                "bVar3": "is_data1_less_than_data3"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "validate_data_080009a8",
            "code": "\nvoid validate_data_080009a8(undefined4 input_param_1,undefined4 input_param_2,undefined4 data_param_1,undefined4 data_param_2)\n\n{\n  validate_data_080009a8_080009b8(data_param_1,data_param_2,input_param_1,input_param_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "validate_data_080009a8",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "data_param_1",
                "param_4": "data_param_2"
            },
            "calling": [
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "validate_data_080009b8",
            "code": "\nundefined4 validate_data_080009b8(undefined4 data)\n\n{\n  check_data_equality();\n  return data;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "validate_data_080009b8",
                "param_1": "data",
                "check_data_equality_0800092c": "check_data_equality"
            },
            "calling": [
                "FUN_080009dc",
                "FUN_080009c8",
                "FUN_080009a8",
                "FUN_080009f0"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "validate_data_and_check_result_080009c8",
            "code": "\nbool validate_data_and_check_result_080009c8(void)\n\n{\n  char data_validated;\n  \n  validate_data_080009b8();\n  return data_validated != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "validate_data_and_check_result_080009c8",
                "in_ZR": "data_validated"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_data_valid_080009dc",
            "code": "\nbool isDataValid_080009dc(void)\n\n{\n  char inputChar;\n  \n  validate_data_080009b8();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_data_valid_080009dc",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08001960",
                "FUN_08001814",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "is_data_valid_080009f0",
            "code": "\nbool is_data_valid_080009f0(void)\n\n{\n  undefined is_zero_reason;\n  undefined is_carry_set;\n  \n  validate_data_080009b8();\n  return !(bool)is_carry_set || (bool)is_zero_reason;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "is_data_valid_080009f0",
                "in_ZR": "is_zero_reason",
                "in_CY": "is_carry_set"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "validate_data_and_check_results_08000a04",
            "code": "\nbool validate_data_and_check_results_08000a04(void)\n\n{\n  undefined is_zero_result;\n  undefined is_carry;\n  \n  validate_data_080009a8();\n  return !(bool)is_carry || (bool)is_zero_result;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "validate_data_and_check_results_08000a04",
                "in_ZR": "is_zero_result",
                "in_CY": "is_carry"
            },
            "calling": [
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_data_valid_08000a18",
            "code": "\nbool check_if_data_valid_08000a18(void)\n\n{\n  char input_character;\n  \n  validate_data_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_data_valid_08000a18",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_params_08000a2c",
            "code": "\nundefined4 check_params_08000a2c(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_params_08000a2c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_unsigned_value_08000a58",
            "code": "\nuint calculateUnsignedValue_08000a58(uint value1,uint value2)\n\n{\n  uint result;\n  int tempVar1;\n  uint shiftAmount;\n  \n  tempVar1 = value2 * 2 + 0x200000;\n  if (value2 * 2 < 0xffe00000) {\n    if (-1 < tempVar1) {\n      return 0;\n    }\n    result = tempVar1 >> 0x15;\n    shiftAmount = -result - 0x3e1;\n    if (result < 0xfffffc20 && shiftAmount != 0) {\n      result = (value2 << 0xb | 0x80000000 | value1 >> 0x15) >> (shiftAmount & 0xff);\n      if ((value2 & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((value1 | value2 << 0xc) != 0) {\n    return 0;\n  }\n  value2 = value2 & 0x80000000;\n  if (value2 == 0) {\n    value2 = 0x7fffffff;\n  }\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_unsigned_value_08000a58",
                "param_1": "value1",
                "param_2": "value2",
                "iVar2": "tempVar1",
                "uVar1": "result",
                "uVar3": "shiftAmount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shift_amount_08000aa8",
            "code": "\nuint calculateShiftAmount_08000aa8(uint inputValue,uint shiftValue)\n\n{\n  int shiftedValue;\n  uint shiftAmount;\n  \n  if ((shiftValue & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = shiftValue * 2 + 0x200000;\n  if (shiftValue * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    shiftAmount = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftAmount) {\n      return (shiftValue << 0xb | 0x80000000 | inputValue >> 0x15) >> (shiftAmount & 0xff);\n    }\n  }\n  else if ((inputValue | shiftValue << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shift_amount_08000aa8",
                "param_1": "inputValue",
                "param_2": "shiftValue",
                "iVar1": "shiftedValue",
                "uVar2": "shiftAmount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "execute_software_interrupt_08000ae8",
            "code": "\nvoid executeSoftwareInterrupt_08000ae8(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "execute_software_interrupt_08000ae8"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_interrupt_1_08000aec",
            "code": "\nundefined4 execute_interrupt_1_08000aec(undefined4 input_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = execute_software_interrupt_08000ae8(1,input_param,0,0,param_4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_interrupt_1_08000aec",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "initialize_and_process_binary_data_08000b08",
            "code": "\nvoid initialize_and_process_binary_data_08000b08(int status_code,int magic_number)\n\n{\n  if ((status_code == 1) && (magic_number == 0xffff)) {\n    initialize_data_and_return(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    initialize_and_process_params_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    update_binary_data(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "initialize_and_process_binary_data_08000b08",
                "param_1": "status_code",
                "param_2": "magic_number",
                "initialize_and_return_08001b18": "initialize_data_and_return",
                "update_binary_data_0800157c": "update_binary_data"
            },
            "calling": [],
            "called": [
                "FUN_0800157c",
                "FUN_08001510",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_system_08000bcc",
            "code": "\nvoid initializeOvenSystem_08000bcc(void)\n\n{\n  processParameter(DAT_20000064,0);\n  processBinaryData(DAT_20000064,1);\n  processParameter(DAT_20000004,0);\n  processBinaryData(DAT_20000004,1);\n  processParameter(DAT_20000060,0);\n  processBinaryData(DAT_20000060,1);\n  processParameter(DAT_20000004,1);\n  initializeParamsAndInitialize(&DAT_20000194,8,2,0);\n  executeParamsAndExecute(&DAT_20000194,0,&DAT_20000008);\n  initializeParams(&DAT_20000194);\n  processData(&DAT_20000194,\"Reflow\");\n  processParams(&DAT_20000194,0,1);\n  processData(&DAT_20000194,\"Oven 1.2\");\n  processParameter(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  initializeParams(&DAT_20000194);\n  configureSerialPort(&DAT_2000036c,0xe100,6);\n  processParameter(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = initializeGlobalVariable();\n  DAT_200001b4 = initializeGlobalVariable();\n  executeInterrupt(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_system_08000bcc",
                "process_param_08005848": "processParameter",
                "process_binary_data_080057b4": "processBinaryData",
                "process_params_and_initialize_080013a4": "initializeParamsAndInitialize",
                "process_params_and_execute_08001550": "executeParamsAndExecute",
                "initialize_params_0800135a": "initializeParams",
                "process_data_08005c96": "processData",
                "process_params_08001366": "processParams",
                "configure_serial_port_08005a68": "configureSerialPort",
                "initialize_global_variable_080058e0": "initializeGlobalVariable",
                "execute_interrupt_1_08000aec": "executeInterrupt"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08000aec",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_080057b4",
                "FUN_080058e8",
                "FUN_080058e0",
                "FUN_080013a4",
                "FUN_08005c96",
                "FUN_0800135a",
                "FUN_08001366"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "update_system_08000cd0",
            "code": "\nvoid updateSystem_08000cd0(void)\n\n{\n  uint globalVar1;\n  undefined4 globalVar2;\n  int result;\n  undefined4 globalVar4;\n  undefined4 extraResult1;\n  undefined4 extraResult2;\n  undefined4 extraResult3;\n  undefined8 calculationResult;\n  \n  globalVar1 = initialize_global_variable_080058e0();\n  if (DAT_200001b4 < globalVar1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    calculationResult = calculate_result_080015f8(&DAT_2000024c,0);\n    globalVar4 = (undefined4)((ulonglong)calculationResult >> 0x20);\n    globalVar2 = (undefined4)calculationResult;\n    DAT_20000188 = globalVar2;\n    DAT_2000018c = globalVar4;\n    result = validate_data_and_check_result_080009c8(globalVar2,globalVar4,0,0x40c38800);\n    if (((result != 0) || (result = validate_data_and_check_result_080009c8(globalVar2,globalVar4,0,0x40c38880), result != 0)) ||\n       (result = validate_data_and_check_result_080009c8(globalVar2,globalVar4,0,0x40c38900), result != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  globalVar1 = initialize_global_variable_080058e0();\n  globalVar2 = DAT_20000060;\n  if (DAT_200001b0 < globalVar1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      result = check_parameter_value_08005890(DAT_20000060);\n      process_param_08005848(globalVar2,result == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      convert_number_base_08005d82(&DAT_2000036c,DAT_20000250,10);\n      process_data_08005c96(&DAT_2000036c,&DAT_08007368);\n      process_data_08005f2c(&DAT_2000036c,extraResult1,DAT_20000240,DAT_20000244,2);\n      process_data_08005c96(&DAT_2000036c,&DAT_08007368);\n      process_data_08005f2c(&DAT_2000036c,extraResult2,DAT_20000188,DAT_2000018c,2);\n      process_data_08005c96(&DAT_2000036c,&DAT_08007368);\n      calculate_and_add_08005f40(&DAT_2000036c,extraResult3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      process_param_08005848(DAT_20000060,1);\n    }\n    initialize_params_0800135a(&DAT_20000194);\n    process_data_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    process_params_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      process_data_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      process_data_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      initialize_and_process_params_0800134e(&DAT_20000194,0);\n      process_data_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  globalVar4 = DAT_2000018c;\n  globalVar2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    result = validate_data_and_check_results_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result == 0) {\n      if (DAT_20000248 == '\\x01') {\n        calculate_sum_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = initialize_global_variable_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        calculationResult = shift_and_concat_0800042c(DAT_20000258);\n        update_data_08001960(&DAT_200001c0,(int)((ulonglong)calculationResult >> 0x20),0,0,calculationResult);\n        perform_calculation_08001918(&DAT_200001c0,1000);\n        set_flag_based_on_condition_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    result = validate_data_and_check_results_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (result != 0) {\n      calculationResult = initialize_global_variable_080058e0();\n      DAT_20000254 = (int)calculationResult + 9000;\n      initialize_data_080018f8(&DAT_200001c0,(int)((ulonglong)calculationResult >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    globalVar1 = initialize_global_variable_080058e0();\n    if (DAT_20000254 < globalVar1) {\n      result = initialize_global_variable_080058e0();\n      DAT_20000254 = result + 9000;\n      calculationResult = calculate_sum_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)calculationResult >> 0x20);\n      DAT_20000240 = (undefined4)calculationResult;\n      calculationResult = check_if_data_valid_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)calculationResult != 0) {\n        initialize_data_080018f8(&DAT_200001c0,(int)((ulonglong)calculationResult >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    calculationResult = validate_data_and_check_results_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)calculationResult != 0) {\n      initialize_data_080018f8(&DAT_200001c0,(int)((ulonglong)calculationResult >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    result = is_data_valid_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (result != 0) {\n      result = initialize_global_variable_080058e0();\n      DAT_20000180 = result + 1000;\n      process_param_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    globalVar1 = initialize_global_variable_080058e0();\n    if (DAT_20000180 < globalVar1) {\n      process_param_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    result = is_data_valid_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    result = validate_data_and_check_result_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((result == 0) && (result = validate_data_and_check_result_080009c8(globalVar2,globalVar4,0,0x40c38880), result == 0)) &&\n       (result = validate_data_and_check_result_080009c8(globalVar2,globalVar4,0,0x40c38900), result == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    result = get_validated_value_08005754(DAT_20000068);\n    if (result == 0) {\n      result = initialize_global_variable_080058e0();\n      if (0x32 < (uint)(result - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    result = get_validated_value_08005754(DAT_20000068);\n    if (result == 0) {\n      DAT_20000190 = initialize_global_variable_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (result = get_validated_value_08005754(DAT_20000068), result != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    result = initialize_global_variable_080058e0();\n    calculate_result_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(result - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    calculationResult = bitwise_shift_and_concatenate_0800040c(result - DAT_2000025c);\n    result = is_data_valid_080009dc((int)calculationResult,(int)((ulonglong)calculationResult >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (result == 0) {\n      process_param_08005848(DAT_20000064,0);\n    }\n    else {\n      process_param_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    process_param_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "update_system_08000cd0",
                "uVar1": "globalVar1",
                "uVar2": "globalVar2",
                "iVar3": "result",
                "uVar4": "globalVar4",
                "extraout_r1": "extraResult1",
                "extraout_r1_00": "extraResult2",
                "extraout_r1_01": "extraResult3",
                "uVar5": "calculationResult"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800134e",
                "FUN_08005f2c",
                "FUN_080009dc",
                "FUN_08005d82",
                "FUN_080009c8",
                "FUN_08000a04",
                "FUN_08001918",
                "FUN_08000a18",
                "FUN_080016b4",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005754",
                "FUN_080058e0",
                "FUN_0800042c",
                "FUN_08005f40",
                "FUN_08000194",
                "FUN_08005c96",
                "FUN_08005890",
                "FUN_08001366",
                "FUN_08001a44",
                "FUN_08001960",
                "FUN_080018f8",
                "FUN_080009f0",
                "FUN_080015f8",
                "FUN_0800040c",
                "FUN_0800135a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "update_params_08001294",
            "code": "\nvoid updateParams_08001294(int structAddress,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(structAddress + 0x18) = value1;\n  *(undefined *)(structAddress + 0x19) = value2;\n  *(undefined *)(structAddress + 0x1a) = value3;\n  *(undefined *)(structAddress + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "update_params_08001294",
                "param_1": "structAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "process_param_080012a2",
            "code": "\nvoid processParam_080012a2(int param)\n\n{\n  processParam_080012a2Value(*(undefined *)(param + 10),0);\n  processParam_080012a2Value(*(undefined *)(param + 10),1);\n  processParam_080012a2Value(*(undefined *)(param + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "process_param_080012a2",
                "param_1": "param",
                "process_param_08005848": "processParamValue"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_and_update_080012c0",
            "code": "\nvoid process_and_update_080012c0(int array_address,int bitmask)\n\n{\n  uint iteration_count;\n  \n  for (iteration_count = 0; (int)iteration_count < 4; iteration_count = iteration_count + 1) {\n    process_param_08005848(*(undefined *)(array_address + iteration_count + 0xb),bitmask >> (iteration_count & 0xff) & 1);\n  }\n  process_param_080012a2(array_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_and_update_080012c0",
                "param_1": "array_address",
                "param_2": "bitmask",
                "uVar1": "iteration_count"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_param_080012e8",
            "code": "\nvoid process_param_080012e8(int input_address,int input_value)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < 8; index = index + 1) {\n    process_param_080012e8_08005848(*(undefined *)(input_address + index + 0xb),input_value >> (index & 0xff) & 1);\n  }\n  process_param_080012e8_080012a2(input_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_param_080012e8",
                "param_1": "input_address",
                "param_2": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "process_params_08001310",
            "code": "\nvoid processParams_08001310(int paramPointer,uint paramValue,undefined4 param3,undefined4 param4)\n\n{\n  process_param_08005848(*(undefined *)(paramPointer + 8),param3,param3,param4,param4);\n  if (*(char *)(paramPointer + 9) != -1) {\n    process_param_08005848(*(char *)(paramPointer + 9),0);\n  }\n  if ((*(byte *)(paramPointer + 0x13) & 0x10) == 0) {\n    process_and_update_080012c0(paramPointer,paramValue >> 4);\n    process_and_update_080012c0(paramPointer,paramValue);\n    return;\n  }\n  process_param_080012e8(paramPointer,paramValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "process_params_08001310",
                "param_1": "paramPointer",
                "param_2": "paramValue",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800138e",
                "FUN_080013a4",
                "FUN_0800135a",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_and_process_params_0800134e",
            "code": "\nuint32 initialize_and_process_params_0800134e(uint32 input_1,uint32 input_2,uint32 unused_param,uint32 output_param)\n\n{\n  process_params(input_1,input_2,1,output_param,output_param);\n  status 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_and_process_params_0800134e",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "unused_param",
                "param_4": "output_param",
                "process_params_08001310": "process_params",
                "undefined4": "uint32",
                "return": "status"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_params_0800135a",
            "code": "\nvoid initializeParams_0800135a(undefined4 input_param,undefined4 unused_param,undefined4 unused_param_2,undefined4 output_param)\n\n{\n  processParameters(input_param,1,0,output_param,output_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_params_0800135a",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "unused_param_2",
                "param_4": "output_param",
                "process_params_08001310": "processParameters"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_params_08001366",
            "code": "\nvoid processParams_08001366(int bufferAddress,char flag,uint size,undefined4 parameter)\n\n{\n  char character;\n  \n  if (3 < size) {\n    size = 3;\n  }\n  if ((int)(uint)*(byte *)(bufferAddress + 0x17) <= (int)size) {\n    size = *(byte *)(bufferAddress + 0x17) - 1 & 0xff;\n  }\n  character = *(char *)(size + bufferAddress + 0x18);\n  process_params_08001310(bufferAddress,flag + character | 0x80,0,character,parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_params_08001366",
                "param_1": "bufferAddress",
                "param_2": "flag",
                "param_3": "size",
                "param_4": "parameter",
                "cVar1": "character"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "update_flag_and_process_params_0800138e",
            "code": "\nvoid updateFlagAndProcessParams_0800138e(int pointerToData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte currentFlagValue;\n  \n  currentFlagValue = *(byte *)(pointerToData + 0x14);\n  *(byte *)(pointerToData + 0x14) = currentFlagValue | 4;\n  process_params_08001310(pointerToData,currentFlagValue | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "update_flag_and_process_params_0800138e",
                "param_1": "pointerToData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "currentFlagValue"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "process_params_and_initialize_080013a4",
            "code": "\nvoid processParamsAndInitialize_080013a4(int inputBuffer,int param2,int count,int condition)\n\n{\n  int loopCounter;\n  int innerCounter;\n  \n  if (1 < count) {\n    *(byte *)(inputBuffer + 0x13) = *(byte *)(inputBuffer + 0x13) | 8;\n  }\n  *(char *)(inputBuffer + 0x17) = (char)count;\n  update_params_08001294(inputBuffer,0,0x40,param2,param2 + 0x40);\n  if ((condition != 0) && (count == 1)) {\n    *(byte *)(inputBuffer + 0x13) = *(byte *)(inputBuffer + 0x13) | 4;\n  }\n  process_binary_data_080057b4(*(undefined *)(inputBuffer + 8),1);\n  if (*(char *)(inputBuffer + 9) != -1) {\n    process_binary_data_080057b4(*(char *)(inputBuffer + 9),1);\n  }\n  process_binary_data_080057b4(*(undefined *)(inputBuffer + 10),1);\n  innerCounter = 0;\n  while( true ) {\n    if ((*(byte *)(inputBuffer + 0x13) & 0x10) == 0) {\n      loopCounter = 4;\n    }\n    else {\n      loopCounter = 8;\n    }\n    if (loopCounter <= innerCounter) break;\n    process_binary_data_080057b4(*(undefined *)(inputBuffer + innerCounter + 0xb),1);\n    innerCounter = innerCounter + 1;\n  }\n  process_param_08005848(*(undefined *)(inputBuffer + 8),0);\n  process_param_08005848(*(undefined *)(inputBuffer + 10),0);\n  if (*(char *)(inputBuffer + 9) != -1) {\n    process_param_08005848(*(char *)(inputBuffer + 9),0);\n  }\n  if ((*(byte *)(inputBuffer + 0x13) & 0x10) == 0) {\n    process_and_update_080012c0(inputBuffer,3);\n    process_and_update_080012c0(inputBuffer,3);\n    process_and_update_080012c0(inputBuffer,3);\n    process_and_update_080012c0(inputBuffer,2);\n  }\n  else {\n    process_params_08001310(inputBuffer,*(byte *)(inputBuffer + 0x13) | 0x20,0);\n    process_params_08001310(inputBuffer,*(byte *)(inputBuffer + 0x13) | 0x20,0);\n    process_params_08001310(inputBuffer,*(byte *)(inputBuffer + 0x13) | 0x20,0);\n  }\n  process_params_08001310(inputBuffer,*(byte *)(inputBuffer + 0x13) | 0x20,0);\n  *(undefined *)(inputBuffer + 0x14) = 4;\n  update_flag_and_process_params_0800138e(inputBuffer);\n  initialize_params_0800135a(inputBuffer);\n  *(undefined *)(inputBuffer + 0x15) = 2;\n  process_params_08001310(inputBuffer,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "process_params_and_initialize_080013a4",
                "param_1": "inputBuffer",
                "param_2": "param2",
                "param_3": "count",
                "param_4": "condition",
                "iVar1": "loopCounter",
                "iVar2": "innerCounter"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_080014ba"
            ],
            "called": [
                "FUN_08001310",
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_080012c0",
                "FUN_0800138e",
                "FUN_08001294",
                "FUN_0800135a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "initialize_params_080014ba",
            "code": "\nvoid initializeParams_080014ba(int baseAddress,int flag,undefined value1,undefined4 value2,undefined value3,\n                 undefined value4,undefined value5,undefined value6,undefined value7,\n                 undefined value8,undefined value9,undefined value10,undefined value11)\n\n{\n  *(undefined *)(baseAddress + 8) = value1;\n  *(char *)(baseAddress + 9) = (char)value2;\n  *(undefined *)(baseAddress + 10) = value3;\n  *(undefined *)(baseAddress + 0xb) = value4;\n  *(undefined *)(baseAddress + 0xc) = value5;\n  *(undefined *)(baseAddress + 0xd) = value6;\n  *(undefined *)(baseAddress + 0xe) = value7;\n  *(undefined *)(baseAddress + 0xf) = value8;\n  *(undefined *)(baseAddress + 0x10) = value9;\n  *(undefined *)(baseAddress + 0x11) = value10;\n  *(undefined *)(baseAddress + 0x12) = value11;\n  if (flag == 0) {\n    *(undefined *)(baseAddress + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(baseAddress + 0x13) = 0;\n  }\n  process_params_and_initialize_080013a4(baseAddress,0x10,1,0,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "initialize_params_080014ba",
                "param_1": "baseAddress",
                "param_2": "flag",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "param_6": "value4",
                "param_7": "value5",
                "param_8": "value6",
                "param_9": "value7",
                "param_10": "value8",
                "param_11": "value9",
                "param_12": "value10",
                "param_13": "value11"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_and_process_params_08001510",
            "code": "\nundefined4 *\ninitializeAndProcessParams_08001510(undefined4 *outputArray,undefined4 paramTwo,undefined4 paramThree,undefined4 paramFour,\n            undefined paramFive,undefined paramSix,undefined paramSeven)\n\n{\n  outputArray[1] = 0;\n  *outputArray = &PTR_initialize_and_process_params_0800134e_1_080073f8;\n  initialize_params_080014ba(outputArray,1,paramTwo,0xff,paramThree,paramFour,paramFive,paramSix,paramSeven,0,0,0,0);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_and_process_params_08001510",
                "param_1": "outputArray",
                "param_2": "paramTwo",
                "param_3": "paramThree",
                "param_4": "paramFour",
                "param_5": "paramFive",
                "param_6": "paramSix",
                "param_7": "paramSeven"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_params_and_execute_08001550",
            "code": "\nvoid processParamsAndExecute_08001550(undefined4 *params,uint flags,int dataOffset)\n\n{\n  int index;\n  \n  process_params_08001310(params,(flags & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*params)(params,*(undefined *)(dataOffset + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_params_and_execute_08001550",
                "param_1": "params",
                "param_2": "flags",
                "param_3": "dataOffset",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "update_binary_data_0800157c",
            "code": "\nundefined * updateBinaryData_0800157c(undefined *data,undefined4 value,undefined charValue,undefined charValue2)\n\n{\n  *data = (char)value;\n  data[1] = charValue;\n  data[2] = charValue2;\n  processBinaryData(value,0);\n  processBinaryData(data[1],1);\n  processBinaryData(data[2],1);\n  processParam(data[1],1);\n  processParam(data[2],0);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "update_binary_data_0800157c",
                "param_1": "data",
                "param_2": "value",
                "param_3": "charValue",
                "param_4": "charValue2",
                "process_binary_data_080057b4": "processBinaryData",
                "process_param_08005848": "processParam"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "reverse_bits_080015b2",
            "code": "\nuint reverseBits_080015b2(undefined *inputArray)\n\n{\n  int result;\n  uint bitIndex;\n  uint reversedBits;\n  \n  process_param_08005848(inputArray[1],0);\n  reversedBits = 0;\n  for (bitIndex = 0x1f; -1 < (int)bitIndex; bitIndex = bitIndex - 1) {\n    process_param_08005848(inputArray[2],1);\n    result = check_parameter_value_08005890(*inputArray);\n    if (result != 0) {\n      reversedBits = reversedBits | 1 << (bitIndex & 0xff);\n    }\n    process_param_08005848(inputArray[2],0);\n  }\n  process_param_08005848(inputArray[1],1);\n  return reversedBits;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "reverse_bits_080015b2",
                "param_1": "inputArray",
                "iVar1": "result",
                "uVar2": "bitIndex",
                "uVar3": "reversedBits"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "calculate_result_080015f8",
            "code": "\nundefined8 calculateResult_080015f8(undefined4 arg1,int arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  uint reversedBits;\n  undefined8 result;\n  \n  reversedBits = reverse_bits_080015b2();\n  if ((reversedBits & 0x10000) == 0) {\n    reversedBits = reversedBits >> 0x12;\n    result = bitwise_shift_and_concatenate_0800040c(reversedBits & 0x1fff);\n    if ((reversedBits & 0x2000) != 0) {\n      result = bitwise_shift_and_concatenate_0800040c(~reversedBits & 0x1fff);\n      result = calculate_sum_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,arg4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = calculate_product_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (arg2 == 1) {\n      result = calculate_product_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = calculate_double_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = calculate_sum_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    reversedBits = reversedBits & 7;\n    if (reversedBits == 2) {\n      return 0x40c3888000000000;\n    }\n    if (reversedBits == 4) {\n      return 0x40c3890000000000;\n    }\n    if (reversedBits != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "calculate_result_080015f8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "reversedBits",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_0800074c",
                "FUN_08000194",
                "FUN_080015b2",
                "FUN_080004f8",
                "FUN_0800040c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "calculate_result_080016b4",
            "code": "\nchar calculateResult_080016b4(int input)\n\n{\n  char result;\n  int var1;\n  int var2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char flag;\n  undefined4 data1;\n  undefined4 data2;\n  undefined4 data3;\n  undefined8 data4;\n  undefined8 data5;\n  undefined8 data6;\n  undefined8 data7;\n  undefined4 local1;\n  undefined4 local2;\n  \n  flag = *(char *)(input + 0x70);\n  if (flag != '\\0') {\n    var1 = initialize_global_variable_080058e0();\n    if ((uint)(var1 - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      flag = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(input + 0x38);\n      temp5 = (*(undefined4 **)(input + 0x38))[1];\n      data4 = perform_calculation_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      data3 = (undefined4)((ulonglong)data4 >> 0x20);\n      data5 = perform_calculation_08000190(temp2,temp5,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      temp1 = (undefined4)((ulonglong)data5 >> 0x20);\n      data6 = calculate_product_080004f8((int)data4,data3,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      data6 = calculate_sum_08000194((int)data6,(int)((ulonglong)data6 >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = data6;\n      result = *(char *)(input + 0x71);\n      if (result == '\\0') {\n        data7 = calculate_product_080004f8((int)data5,temp1,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        data6 = perform_calculation_08000190((int)data6,(int)((ulonglong)data6 >> 0x20),(int)data7,\n                              (int)((ulonglong)data7 >> 0x20));\n        *(undefined8 *)(input + 0x48) = data6;\n      }\n      temp3 = *(undefined4 *)(input + 0x48);\n      temp6 = *(undefined4 *)(input + 0x4c);\n      data1 = *(undefined4 *)(undefined8 *)(input + 0x68);\n      data2 = *(undefined4 *)(input + 0x6c);\n      data6 = *(undefined8 *)(input + 0x68);\n      var2 = check_if_data_valid_08000a18(temp3,temp6,data1,data2);\n      if (var2 == 0) {\n        temp4 = *(undefined4 *)(input + 0x60);\n        temp7 = *(undefined4 *)(input + 100);\n        var2 = is_data_valid_080009dc(temp3,temp6);\n        if (var2 != 0) {\n          *(undefined4 *)(input + 0x48) = temp4;\n          *(undefined4 *)(input + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = data1;\n        *(undefined4 *)(input + 0x4c) = data2;\n      }\n      if (result == '\\0') {\n        data4 = 0;\n      }\n      else {\n        data4 = calculate_product_080004f8((int)data4,data3,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      local2 = (undefined4)((ulonglong)data4 >> 0x20);\n      local1 = (undefined4)data4;\n      data3 = *(undefined4 *)(input + 0x48);\n      temp3 = *(undefined4 *)(input + 0x4c);\n      data4 = calculate_product_080004f8((int)data5,temp1,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      data4 = perform_calculation_08000190(data3,temp3,(int)data4,(int)((ulonglong)data4 >> 0x20));\n      data4 = calculate_sum_08000194(local1,local2,(int)data4,(int)((ulonglong)data4 >> 0x20));\n      data3 = (undefined4)((ulonglong)data4 >> 0x20);\n      var2 = is_data_valid_080009dc(data1,data2,(int)data4,data3);\n      if (var2 == 0) {\n        data6 = *(undefined8 *)(input + 0x60);\n        var2 = is_data_valid_080009dc((int)data4,data3,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (var2 == 0) {\n          data6 = data4;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = data6;\n      *(undefined4 *)(input + 0x50) = temp2;\n      *(undefined4 *)(input + 0x54) = temp5;\n      *(int *)(input + 0x44) = var1;\n    }\n  }\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "calculate_result_080016b4",
                "param_1": "input",
                "cVar1": "result",
                "iVar2": "var1",
                "iVar3": "var2",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "flag",
                "uVar12": "data1",
                "uVar13": "data2",
                "uVar14": "data3",
                "uVar15": "data4",
                "uVar16": "data5",
                "uVar17": "data6",
                "uVar18": "data7",
                "local_38": "local1",
                "uStack_34": "local2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009dc",
                "FUN_08000194",
                "FUN_080058e0",
                "FUN_080004f8",
                "FUN_08000a18",
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_data_08001814",
            "code": "\nvoid initializeData_08001814(undefined4 *dataArray,undefined4 param2,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4,undefined4 input5,undefined4 input6,\n                 int flag)\n\n{\n  int isValidData;\n  undefined4 shiftedValue;\n  undefined flagValue;\n  bool isFlagSet;\n  undefined8 calculationResult1;\n  undefined8 calculationResult2;\n  undefined8 calculationResult3;\n  \n  isValidData = is_data_valid_080009dc(input1,input2,0,0);\n  if (((isValidData == 0) && (isValidData = is_data_valid_080009dc(input3,input4,0,0), isValidData == 0)) &&\n     (isValidData = is_data_valid_080009dc(input5,input6,0,0), isValidData == 0)) {\n    dataArray[0xd] = flag;\n    isFlagSet = flag != 1;\n    if (isFlagSet) {\n      flag = 0;\n    }\n    flagValue = (undefined)flag;\n    if (!isFlagSet) {\n      flagValue = 1;\n    }\n    *(undefined *)((int)dataArray + 0x71) = flagValue;\n    *dataArray = input1;\n    dataArray[1] = input2;\n    dataArray[2] = input3;\n    dataArray[3] = input4;\n    dataArray[4] = input5;\n    dataArray[5] = input6;\n    calculationResult1 = bitwise_shift_and_concatenate_0800040c(dataArray[0x16]);\n    calculationResult1 = calculate_double_0800074c((int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20),0,0x408f4000);\n    shiftedValue = (undefined4)((ulonglong)calculationResult1 >> 0x20);\n    dataArray[6] = input1;\n    dataArray[7] = input2;\n    calculationResult2 = calculate_product_080004f8(input3,input4,(int)calculationResult1,shiftedValue);\n    *(undefined8 *)(dataArray + 8) = calculationResult2;\n    calculationResult1 = calculate_double_0800074c(input5,input6,(int)calculationResult1,shiftedValue);\n    *(undefined8 *)(dataArray + 10) = calculationResult1;\n    if (dataArray[0xc] == 1) {\n      calculationResult3 = perform_calculation_08000190(0,0,input1,input2);\n      *(undefined8 *)(dataArray + 6) = calculationResult3;\n      calculationResult2 = perform_calculation_08000190(0,0,(int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20));\n      *(undefined8 *)(dataArray + 8) = calculationResult2;\n      calculationResult1 = perform_calculation_08000190(0,0,(int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20));\n      *(undefined8 *)(dataArray + 10) = calculationResult1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_data_08001814",
                "param_1": "dataArray",
                "param_2": "param2",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "param_7": "input5",
                "param_8": "input6",
                "param_9": "flag",
                "iVar1": "isValidData",
                "uVar2": "shiftedValue",
                "uVar3": "flagValue",
                "bVar4": "isFlagSet",
                "uVar5": "calculationResult1",
                "uVar6": "calculationResult2",
                "uVar7": "calculationResult3"
            },
            "calling": [
                "FUN_08001ab0",
                "FUN_080018f8"
            ],
            "called": [
                "FUN_0800074c",
                "FUN_080009dc",
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_data_080018f8",
            "code": "\nvoid initializeData_080018f8(void)\n\n{\n  initializeData_080018f8_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_data_080018f8",
                "initialize_data_08001814": "initializeData_08001814"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "perform_calculation_08001918",
            "code": "\nvoid performCalculation_08001918(int inputData,int size,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 result1;\n  undefined8 shiftedValue;\n  undefined8 concatenatedValue;\n  \n  if (0 < size) {\n    shiftedValue = shift_and_concat_0800042c(size);\n    concatenatedValue = bitwise_shift_and_concatenate_0800040c(*(undefined4 *)(inputData + 0x58));\n    shiftedValue = calculateDouble((int)shiftedValue,(int)((ulonglong)shiftedValue >> 0x20),(int)concatenatedValue,\n                         (int)((ulonglong)concatenatedValue >> 0x20),param2);\n    result1 = (undefined4)((ulonglong)shiftedValue >> 0x20);\n    concatenatedValue = calculateProduct((int)shiftedValue,result1,*(undefined4 *)(inputData + 0x20),\n                         *(undefined4 *)(inputData + 0x24));\n    *(undefined8 *)(inputData + 0x20) = concatenatedValue;\n    shiftedValue = calculateDouble(*(undefined4 *)(inputData + 0x28),*(undefined4 *)(inputData + 0x2c),(int)shiftedValue,\n                         result1);\n    *(undefined8 *)(inputData + 0x28) = shiftedValue;\n    *(int *)(inputData + 0x58) = size;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "perform_calculation_08001918",
                "param_1": "inputData",
                "param_2": "size",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "result1",
                "uVar2": "shiftedValue",
                "uVar3": "concatenatedValue",
                "calculate_double_0800074c": "calculateDouble",
                "calculate_product_080004f8": "calculateProduct"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_0800074c",
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_data_08001960",
            "code": "\nvoid updateData_08001960(int dataStruct,undefined4 param2,undefined4 newVal1,undefined4 newVal2,\n                 undefined4 newVal3,undefined4 newVal4)\n\n{\n  int validationResult;\n  undefined4 *dataPointer;\n  undefined4 prevVal1;\n  undefined4 prevVal2;\n  undefined4 currVal1;\n  undefined4 currVal2;\n  \n  validationResult = validate_data_and_check_results_08000a04(newVal1,newVal2,newVal3,newVal4,newVal2);\n  if (validationResult == 0) {\n    *(undefined4 *)(dataStruct + 0x60) = newVal1;\n    *(undefined4 *)(dataStruct + 100) = newVal2;\n    *(undefined4 *)(dataStruct + 0x68) = newVal3;\n    *(undefined4 *)(dataStruct + 0x6c) = newVal4;\n    if (*(char *)(dataStruct + 0x70) != '\\0') {\n      dataPointer = *(undefined4 **)(dataStruct + 0x3c);\n      prevVal1 = *dataPointer;\n      currVal1 = dataPointer[1];\n      validationResult = is_data_valid_080009dc(newVal3,newVal4,prevVal1,currVal1);\n      if (validationResult == 0) {\n        validationResult = check_if_data_valid_08000a18(newVal1,newVal2,prevVal1,currVal1);\n        if (validationResult != 0) {\n          *dataPointer = newVal1;\n          dataPointer[1] = newVal2;\n        }\n      }\n      else {\n        *dataPointer = newVal3;\n        dataPointer[1] = newVal4;\n      }\n      prevVal1 = *(undefined4 *)(dataStruct + 0x48);\n      currVal1 = *(undefined4 *)(dataStruct + 0x4c);\n      prevVal2 = *(undefined4 *)(dataStruct + 0x68);\n      currVal2 = *(undefined4 *)(dataStruct + 0x6c);\n      validationResult = check_if_data_valid_08000a18(prevVal1,currVal1,prevVal2,currVal2);\n      if (validationResult != 0) {\n        *(undefined4 *)(dataStruct + 0x48) = prevVal2;\n        *(undefined4 *)(dataStruct + 0x4c) = currVal2;\n        return;\n      }\n      prevVal2 = *(undefined4 *)(dataStruct + 0x60);\n      currVal2 = *(undefined4 *)(dataStruct + 100);\n      validationResult = is_data_valid_080009dc(prevVal1,currVal1,prevVal2,currVal2);\n      if (validationResult != 0) {\n        *(undefined4 *)(dataStruct + 0x48) = prevVal2;\n        *(undefined4 *)(dataStruct + 0x4c) = currVal2;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_data_08001960",
                "param_1": "dataStruct",
                "param_2": "param2",
                "param_3": "newVal1",
                "param_4": "newVal2",
                "param_5": "newVal3",
                "param_6": "newVal4",
                "iVar1": "validationResult",
                "puVar2": "dataPointer",
                "uVar3": "prevVal1",
                "uVar4": "prevVal2",
                "uVar5": "currVal1",
                "uVar6": "currVal2"
            },
            "calling": [
                "FUN_08001ab0",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009dc",
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "validate_data_080019f6",
            "code": "\nvoid validate_data_080019f6(int data_ptr)\n\n{\n  int is_valid;\n  undefined4 temp_var1;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 temp_var2;\n  \n  ptr1 = **(undefined4 **)(data_ptr + 0x3c);\n  ptr2 = (*(undefined4 **)(data_ptr + 0x3c))[1];\n  *(undefined4 *)(data_ptr + 0x48) = ptr1;\n  *(undefined4 *)(data_ptr + 0x4c) = ptr2;\n  temp_var1 = (*(undefined4 **)(data_ptr + 0x38))[1];\n  *(undefined4 *)(data_ptr + 0x50) = **(undefined4 **)(data_ptr + 0x38);\n  *(undefined4 *)(data_ptr + 0x54) = temp_var1;\n  temp_var1 = *(undefined4 *)(data_ptr + 0x68);\n  temp_var2 = *(undefined4 *)(data_ptr + 0x6c);\n  is_valid = check_if_data_valid_08000a18(ptr1,ptr2,temp_var1,temp_var2);\n  if (is_valid == 0) {\n    temp_var1 = *(undefined4 *)(data_ptr + 0x60);\n    temp_var2 = *(undefined4 *)(data_ptr + 100);\n    is_valid = is_data_valid_080009dc(ptr1,ptr2,temp_var1,temp_var2);\n    if (is_valid != 0) {\n      *(undefined4 *)(data_ptr + 0x48) = temp_var1;\n      *(undefined4 *)(data_ptr + 0x4c) = temp_var2;\n    }\n    return;\n  }\n  *(undefined4 *)(data_ptr + 0x48) = temp_var1;\n  *(undefined4 *)(data_ptr + 0x4c) = temp_var2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "validate_data_080019f6",
                "param_1": "data_ptr",
                "iVar1": "is_valid",
                "uVar2": "temp_var1",
                "uVar3": "ptr1",
                "uVar4": "ptr2",
                "uVar5": "temp_var2"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_080009dc",
                "FUN_08000a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_based_on_condition_08001a44",
            "code": "\nvoid setFlagBasedOnCondition_08001a44(int dataPointer,int condition)\n\n{\n  undefined flag;\n  \n  if (condition == 1) {\n    flag = 1;\n    if (*(char *)(dataPointer + 0x70) == '\\0') {\n      validateData();\n    }\n  }\n  else {\n    flag = 0;\n  }\n  *(undefined *)(dataPointer + 0x70) = flag;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_based_on_condition_08001a44",
                "param_1": "dataPointer",
                "param_2": "condition",
                "uVar1": "flag",
                "validate_data_080019f6": "validateData"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(param_1 + 0x70) != '\\0') && (*(int *)(param_1 + 0x30) != param_2)) {\n    result = performCalculation(0,0,*(undefined4 *)(param_1 + 0x18),*(undefined4 *)(param_1 + 0x1c),param_4\n                        );\n    *(undefined8 *)(param_1 + 0x18) = result;\n    result = performCalculation(0,0,*(undefined4 *)(param_1 + 0x20),*(undefined4 *)(param_1 + 0x24));\n    *(undefined8 *)(param_1 + 0x20) = result;\n    result = performCalculation(0,0,*(undefined4 *)(param_1 + 0x28),*(undefined4 *)(param_1 + 0x2c));\n    *(undefined8 *)(param_1 + 0x28) = result;\n  }\n  *(int *)(param_1 + 0x30) = param_2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "uVar1": "result",
                "perform_calculation_08000190": "performCalculation"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_data_and_variables_08001ab0",
            "code": "\nint initialize_data_and_variables_08001ab0(int data_struct_ptr,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extra_result;\n  \n  *(undefined4 *)(data_struct_ptr + 0x3c) = param3;\n  *(undefined4 *)(data_struct_ptr + 0x38) = param2;\n  *(undefined4 *)(data_struct_ptr + 0x40) = param4;\n  *(undefined *)(data_struct_ptr + 0x70) = 0;\n  update_data_08001960(data_struct_ptr,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(data_struct_ptr + 0x58) = 100;\n  update_parameters_08001a66(data_struct_ptr,param12);\n  initialize_data_08001814(data_struct_ptr,extra_result,param5,param6,param7,param8,param9,param10,param11);\n  result = initialize_global_variable_080058e0();\n  *(int *)(data_struct_ptr + 0x44) = result - *(int *)(data_struct_ptr + 0x58);\n  return data_struct_ptr;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_data_and_variables_08001ab0",
                "param_1": "data_struct_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "iVar1": "result",
                "extraout_r1": "extra_result"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_08001a66",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_and_return_08001b18",
            "code": "\nundefined4 initialize_and_return_08001b18(undefined4 input_param)\n\n{\n  init_data_and_vars();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_and_return_08001b18",
                "param_1": "input_param",
                "initialize_data_and_variables_08001ab0": "init_data_and_vars"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_microcontroller_08001b48",
            "code": "\nvoid initialize_microcontroller_08001b48(void)\n\n{\n  int result;\n  uint data_value;\n  undefined4 hardware_init_params [2];\n  undefined4 configuration;\n  undefined4 memory_allocation;\n  undefined4 delay;\n  undefined4 memory;\n  undefined4 buffer;\n  undefined4 index;\n  undefined4 command [4];\n  undefined4 timeout;\n  undefined4 memory_size;\n  undefined4 memory_usage;\n  undefined4 counter;\n  undefined4 data;\n  \n  command[0] = 2;\n  timeout = 1;\n  memory_size = 0x10;\n  memory_usage = 2;\n  counter = 0;\n  data = 0x380000;\n  result = execute_command_08003688(command);\n  if (result != 0) {\n    infinite_loop_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  memory_allocation = 0xf;\n  delay = 2;\n  memory = 0;\n  buffer = 0x400;\n  index = 0;\n  result = initialize_delay_and_memory_08003ad4(&memory_allocation);\n  if (result != 0) {\n    infinite_loop_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  hardware_init_params[0] = 2;\n  configuration = 0x8000;\n  result = initialize_hardware_08003c90(hardware_init_params);\n  if (result != 0) {\n    infinite_loop_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  data_value = get_data_08003c44();\n  initialize_data_08002514(data_value / 1000);\n  set_e000e010_bit_08002560(4);\n  update_char_in_memory_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_microcontroller_08001b48",
                "local_54": "hardware_init_params",
                "local_4c": "configuration",
                "local_44": "memory_allocation",
                "local_40": "delay",
                "local_3c": "memory",
                "local_38": "buffer",
                "local_34": "index",
                "local_30": "command",
                "local_20": "timeout",
                "local_1c": "memory_size",
                "local_14": "memory_usage",
                "local_10": "counter",
                "local_c": "data",
                "iVar1": "result",
                "uVar2": "data_value"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08003ad4",
                "FUN_08003c44",
                "FUN_08003688",
                "FUN_08002560"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  initialize_memory_08004d44();\n  execute_functions_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  continuous_system_update_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08005f6c",
                "FUN_08004d44",
                "FUN_08006198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_system_08001c32",
            "code": "\nvoid initialize_system_08001c32(void)\n\n{\n  initialize_system_08001c32_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_system_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "initialize_memory_and_update_char_08001c3c",
            "code": "\nundefined4 initializeMemoryAndUpdateChar_08001c3c(uint inputValue)\n\n{\n  int dataInitializationResult;\n  \n  dataInitializationResult = initialize_data_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (dataInitializationResult != 0) {\n    return 1;\n  }\n  if (0xf < inputValue) {\n    return 1;\n  }\n  update_char_in_memory_08002494(0xffffffff,inputValue,0);\n  DAT_2000007c = inputValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "initialize_memory_and_update_char_08001c3c",
                "param_1": "inputValue",
                "iVar1": "dataInitializationResult"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002514",
                "FUN_08002494"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_and_update_data_08001c88",
            "code": "\n\n\nundefined4 initialize_and_update_data_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  update_data_value(3);\n  initialize_memory_and_update_char(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_and_update_data_08001c88",
                "update_data_value_08002470": "update_data_value",
                "initialize_memory_and_update_char_08001c3c": "initialize_memory_and_update_char"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3a",
                "FUN_08002470",
                "FUN_08001c3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "accumulate_sum_08001cac",
            "code": "\nvoid accumulateSum_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "accumulate_sum_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_global_variable_08001cc4",
            "code": "\nundefined4 get_global_variable_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_global_variable_08001cc4"
            },
            "calling": [
                "FUN_080020f0",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08004b94",
                "FUN_08003afa",
                "FUN_08004478",
                "FUN_08001f84",
                "FUN_08002384",
                "FUN_080043b4",
                "FUN_080053d4",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "calculate_return_value_08001cd0",
            "code": "\nundefined4 calculateReturnValue_08001cd0(uint **paramList,uint numParams)\n\n{\n  int globalVariable;\n  uint parameterValue;\n  int difference;\n  undefined4 returnValue;\n  uint *currentParam;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  globalVariable = get_global_variable_08001cc4();\n  calculationResult = DAT_20000084;\n  currentParam = *paramList;\n  if ((currentParam[2] & 0x100) == 0) {\n    if (((currentParam[1] & 0x100) == 0) && ((currentParam[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**paramList & 2) != 0) goto LAB_08001de2;\n      } while ((numParams == 0xffffffff) ||\n              ((numParams != 0 && (difference = get_global_variable_08001cc4(), (uint)(difference - globalVariable) <= numParams))));\n      paramList[10] = (uint *)((uint)paramList[10] | 4);\n      *(undefined *)(paramList + 9) = 0;\n      returnValue = 3;\n    }\n    else {\n      parameterValue = calculate_parameter_value_08003da4(2);\n      currentParam = *paramList;\n      if (((currentParam[4] & 0x24924924) == 0) && ((currentParam[3] & 0x924924) == 0)) {\n        if ((currentParam[4] & 0x12492492) == 0) {\n          if ((currentParam[3] & 0x492492) == 0) {\n            difference = 0x14;\n          }\n          else {\n            difference = 0x29;\n          }\n        }\n        else {\n          difference = 0x29;\n        }\n      }\n      else if (((currentParam[4] & 0x12492492) == 0) && ((currentParam[3] & 0x492492) == 0)) {\n        difference = 0x54;\n      }\n      else if ((currentParam[4] & 0x249249) == 0) {\n        if ((currentParam[3] & 0x249249) == 0) {\n          difference = 0x54;\n        }\n        else {\n          difference = 0xfc;\n        }\n      }\n      else {\n        difference = 0xfc;\n      }\n      calculationResult = (calculationResult / parameterValue) * difference;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((numParams != 0xffffffff) &&\n           ((numParams == 0 || (difference = get_global_variable_08001cc4(), numParams < (uint)(difference - globalVariable))))) {\n          paramList[10] = (uint *)((uint)paramList[10] | 4);\n          *(undefined *)(paramList + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **paramList = 0xffffffed;\n      paramList[10] = (uint *)((uint)paramList[10] | 0x200);\n      if (((*paramList)[2] & 0xe0000) == 0xe0000) {\n        if (paramList[3] == (uint *)0x0) {\n          paramList[10] = (uint *)((uint)paramList[10] & 0xfffffeff);\n          if (((uint)paramList[10] & 0x1000) == 0) {\n            paramList[10] = (uint *)((uint)paramList[10] | 1);\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        returnValue = 0;\n      }\n    }\n  }\n  else {\n    paramList[10] = (uint *)((uint)paramList[10] | 0x20);\n    *(undefined *)(paramList + 9) = 0;\n    returnValue = 1;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "calculate_return_value_08001cd0",
                "param_1": "paramList",
                "param_2": "numParams",
                "iVar1": "globalVariable",
                "uVar2": "parameterValue",
                "iVar3": "difference",
                "uVar4": "returnValue",
                "puVar5": "currentParam",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_value_from_offset_08001e40",
            "code": "\nundefined4 get_value_from_offset_08001e40(int *pointer_to_integer)\n\n{\n  return *(undefined4 *)(*pointer_to_integer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_value_from_offset_08001e40",
                "param_1": "pointer_to_integer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_settings_08001e48",
            "code": "\nundefined4 updateSettings_08001e48(int *settings,uint *values)\n\n{\n  undefined4 result;\n  uint valueIdx;\n  int loopCounter;\n  \n  if (*(char *)(settings + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(settings + 9) = 1;\n    valueIdx = values[1];\n    if (valueIdx < 7) {\n      valueIdx = valueIdx * 5 - 5;\n      *(uint *)(*settings + 0x34) =\n           *values << (valueIdx & 0xff) | *(uint *)(*settings + 0x34) & ~(0x1f << (valueIdx & 0xff));\n    }\n    else if (valueIdx < 0xd) {\n      valueIdx = valueIdx * 5 - 0x23;\n      *(uint *)(*settings + 0x30) =\n           *values << (valueIdx & 0xff) | *(uint *)(*settings + 0x30) & ~(0x1f << (valueIdx & 0xff));\n    }\n    else {\n      valueIdx = valueIdx * 5 - 0x41;\n      *(uint *)(*settings + 0x2c) =\n           *values << (valueIdx & 0xff) | *(uint *)(*settings + 0x2c) & ~(0x1f << (valueIdx & 0xff));\n    }\n    valueIdx = *values;\n    if (valueIdx < 10) {\n      *(uint *)(*settings + 0x10) =\n           values[2] << (valueIdx * 3 & 0xff) |\n           *(uint *)(*settings + 0x10) & ~(7 << (valueIdx * 3 & 0xff));\n    }\n    else {\n      valueIdx = valueIdx * 3 - 0x1e;\n      *(uint *)(*settings + 0xc) =\n           values[2] << (valueIdx & 0xff) | *(uint *)(*settings + 0xc) & ~(7 << (valueIdx & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*settings == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (loopCounter = (DAT_20000084 / 1000000) * 10; loopCounter != 0; loopCounter = loopCounter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        settings[10] = settings[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(settings + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_settings_08001e48",
                "param_1": "settings",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "valueIdx",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_pointer_value_08001f80",
            "code": "\nundefined4 getPointerValue_08001f80(int inputPointer)\n\n{\n  return *(undefined4 *)(inputPointer + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_pointer_value_08001f80",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "verify_and_set_flags_on_param_08001f84",
            "code": "\nundefined4 verifyAndSetFlagsOnParam_08001f84(int *data,undefined4 flag)\n\n{\n  int newValue;\n  undefined4 result;\n  int ptrData;\n  uint counter;\n  \n  ptrData = *data;\n  if ((*(uint *)(ptrData + 8) & 1) == 0) {\n    *(uint *)(ptrData + 8) = *(uint *)(ptrData + 8) | 1;\n    for (counter = DAT_20000084 / 1000000; counter != 0; counter = counter - 1) {\n    }\n    ptrData = get_global_variable_08001cc4(data,flag,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      newValue = get_global_variable_08001cc4();\n    } while ((uint)(newValue - ptrData) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "verify_and_set_flags_on_param_08001f84",
                "param_1": "data",
                "param_2": "flag",
                "iVar1": "newValue",
                "iVar3": "ptrData",
                "uVar2": "result",
                "local_14": "counter"
            },
            "calling": [
                "FUN_08002004",
                "FUN_08002384"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "verify_and_set_flags_08002004",
            "code": "\n\n\nint verify_and_set_flags_08002004(int *array)\n\n{\n  int verification_result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(array + 9) != '\\x01') {\n    *(undefined *)(array + 9) = 1;\n    verification_result = verify_and_set_flags_08002004_on_param_08001f84();\n    if (verification_result == 0) {\n      array[10] = array[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*array;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        array[10] = array[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          array[10] = array[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        array[10] = array[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          array[10] = array[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((array[10] & 0x1000U) == 0) {\n        array[0xb] = 0;\n      }\n      else {\n        array[0xb] = array[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(array + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *array;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(array + 9) = 0;\n    }\n    return verification_result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "verify_and_set_flags_08002004",
                "param_1": "array",
                "iVar1": "verification_result",
                "puVar2": "ptr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_status_flags_080020f0",
            "code": "\nundefined4 updateStatusFlags_080020f0(int *statusFlags)\n\n{\n  int newGlobalVar;\n  int globalVar;\n  \n  globalVar = *statusFlags;\n  if ((*(uint *)(globalVar + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(globalVar + 8) = *(uint *)(globalVar + 8) & 0xfffffffe;\n  globalVar = getGlobalVar();\n  do {\n    if ((*(uint *)(*statusFlags + 8) & 1) == 0) {\n      return 0;\n    }\n    newGlobalVar = getGlobalVar();\n  } while ((uint)(newGlobalVar - globalVar) < 3);\n  statusFlags[10] = statusFlags[10] | 0x10;\n  statusFlags[0xb] = statusFlags[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_status_flags_080020f0",
                "param_1": "statusFlags",
                "iVar1": "newGlobalVar",
                "iVar2": "globalVar",
                "get_global_variable_08001cc4": "getGlobalVar"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002348",
                "FUN_0800224c",
                "FUN_08002384"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "update_flags_0800213c",
            "code": "\nundefined4 update_flags_0800213c(int *registers)\n\n{\n  int status_flag;\n  uint bitwise_or1;\n  uint bitwise_or2;\n  \n  if (registers == (int *)0x0) {\n    return 1;\n  }\n  if (flag_register == 0) {\n    temp_register1 = 0;\n    *(undefined *)(registers + 9) = 0;\n    update_register_flags_08004974();\n  }\n  status_flag = update_status_flags_080020f0(registers);\n  if (((flag_register & 0x10U) == 0) && (status_flag == 0)) {\n    flag_register = flag_register & 0xffffeefdU | 2;\n    bitwise_or1 = register1 | register2 | register3 << 1;\n    if (register4 == 0x100) {\n      bitwise_or2 = 0x100;\n    }\n    else {\n      bitwise_or2 = 0;\n      if (register4 == 1) {\n        bitwise_or2 = 0x100;\n      }\n    }\n    if (register5 == 1) {\n      if (register3 == 0) {\n        bitwise_or2 = bitwise_or2 | (register6 + -1) * 0x2000 | 0x800;\n      }\n      else {\n        flag_register = flag_register | 0x20;\n        temp_register1 = temp_register1 | 1;\n      }\n    }\n    *(uint *)(*registers + 4) = bitwise_or2 | *(uint *)(*registers + 4) & 0xffff16ff;\n    *(uint *)(*registers + 8) = *(uint *)(*registers + 8) & 0xffe1f7fd | bitwise_or1;\n    if ((register4 == 0x100) || (register4 == 1)) {\n      bitwise_or2 = (register7 + -1) * 0x100000;\n    }\n    else {\n      bitwise_or2 = 0;\n    }\n    *(uint *)(*registers + 0x2c) = bitwise_or2 | *(uint *)(*registers + 0x2c) & 0xff0fffff;\n    if (bitwise_or1 != (*(uint *)(*registers + 8) & 0xff1f0efe)) {\n      flag_register = flag_register & 0xffffffedU | 0x10;\n      temp_register1 = temp_register1 | 1;\n      return 1;\n    }\n    temp_register1 = 0;\n    flag_register = flag_register & 0xfffffffcU | 1;\n    return 0;\n  }\n  flag_register = flag_register | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "update_flags_0800213c",
                "param_1": "registers",
                "iVar1": "status_flag",
                "uVar2": "bitwise_or1",
                "uVar3": "bitwise_or2",
                "param_1[10]": "flag_register",
                "param_1[0xb]": "temp_register1",
                "param_1[1]": "register1",
                "param_1[7]": "register2",
                "param_1[3]": "register3",
                "param_1[2]": "register4",
                "param_1[5]": "register5",
                "param_1[6]": "register6",
                "param_1[4]": "register7"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_08004974"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "update_status_0800224c",
            "code": "\nint updateStatus_0800224c(int *param)\n\n{\n  int status;\n  \n  if (param == (int *)0x0) {\n    status = 1;\n  }\n  else {\n    param[10] = param[10] | 2;\n    status = updateStatus_0800224cFlags;\n    if (status == 0) {\n      *(undefined4 *)*param = 0xffffffe0;\n      *(uint *)(*param + 4) = *(uint *)(*param + 4) & 0xff3f0000;\n      *(uint *)(*param + 8) = *(uint *)(*param + 8) & 0xff0106f0;\n      *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xff000000;\n      *(uint *)(*param + 0x10) = *(uint *)(*param + 0x10) & 0xc0000000;\n      *(uint *)(*param + 0x14) = *(uint *)(*param + 0x14) & 0xfffff000;\n      *(uint *)(*param + 0x18) = *(uint *)(*param + 0x18) & 0xfffff000;\n      *(uint *)(*param + 0x1c) = *(uint *)(*param + 0x1c) & 0xfffff000;\n      *(uint *)(*param + 0x20) = *(uint *)(*param + 0x20) & 0xfffff000;\n      *(uint *)(*param + 0x24) = *(uint *)(*param + 0x24) & 0xfffff000;\n      *(uint *)(*param + 0x28) = *(uint *)(*param + 0x28) & 0xfffff000;\n      *(uint *)(*param + 0x2c) = *(uint *)(*param + 0x2c) & 0xff000000;\n      *(uint *)(*param + 0x2c) = *(uint *)(*param + 0x2c) & 0xff000000;\n      *(uint *)(*param + 0x30) = *(uint *)(*param + 0x30) & 0xc0000000;\n      *(uint *)(*param + 0x34) = *(uint *)(*param + 0x34) & 0xc0000000;\n      *(uint *)(*param + 0x38) = *(uint *)(*param + 0x38) & 0xffc00000;\n      *(uint *)(*param + 0x38) = *(uint *)(*param + 0x38) & 0xffc00000;\n      updateRegisterFlags(param);\n      param[0xb] = 0;\n      param[10] = 0;\n    }\n    *(undefined *)(param + 9) = 0;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "update_status_0800224c",
                "param_1": "param",
                "iVar1": "status",
                "update_status_flags_080020f0()": "updateStatusFlags",
                "update_register_flags_080049f0(param_1)": "updateRegisterFlags(param)"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "update_status_flags_08002348",
            "code": "\nint update_status_flags_08002348(int input_param)\n\n{\n  int status;\n  \n  if (*(char *)(input_param + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input_param + 0x24) = 1;\n  status = check_status_flags();\n  if (status == 0) {\n    *(uint *)(input_param + 0x28) = *(uint *)(input_param + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(input_param + 0x24) = 0;\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002348": "update_status_flags_08002348",
                "param_1": "input_param",
                "iVar1": "status",
                "update_status_flags_080020f0": "check_status_flags"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_and_update_status_08002384",
            "code": "\nint checkAndUpdateStatus_08002384(int *data)\n\n{\n  uint value1;\n  int status;\n  uint value2;\n  int variable1;\n  int variable2;\n  int count;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  status = update_status_flags_080020f0();\n  if (status == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    value1 = DAT_20000084;\n    value2 = calculate_parameter_value_08003da4(2);\n    for (count = value1 / value2 << 1; count != 0; count = count + -1) {\n    }\n    verify_and_set_flags_on_param_08001f84(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    variable1 = get_global_variable_08001cc4();\n    while (variable2 = *data, (*(uint *)(variable2 + 8) & 8) != 0) {\n      variable2 = get_global_variable_08001cc4();\n      if (10 < (uint)(variable2 - variable1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(variable2 + 8) = *(uint *)(variable2 + 8) | 4;\n    variable1 = get_global_variable_08001cc4();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      variable2 = get_global_variable_08001cc4();\n      if (10 < (uint)(variable2 - variable1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_and_update_status_08002384",
                "param_1": "data",
                "uVar1": "value1",
                "iVar2": "status",
                "uVar3": "value2",
                "iVar4": "variable1",
                "iVar5": "variable2",
                "local_14": "count"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_080020f0",
                "FUN_08001cc4",
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_data_value_08002470",
            "code": "\n\n\nvoid update_data_value_08002470(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_data_value_08002470",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08001c88",
                "FUN_08005f5e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_char_in_memory_08002494",
            "code": "\n\n\nvoid updateCharInMemory_08002494(uint addressOffset,uint operand1,uint operand2)\n\n{\n  uint shiftAmount;\n  uint bitPosition;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  bitPosition = 7 - shiftAmount;\n  if (3 < bitPosition) {\n    bitPosition = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (operand1 & (1 << (bitPosition & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & operand2;\n  if ((int)addressOffset < 0) {\n    *(char *)((addressOffset & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(addressOffset + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_char_in_memory_08002494",
                "param_1": "addressOffset",
                "param_2": "operand1",
                "param_3": "operand2",
                "uVar1": "shiftAmount",
                "uVar2": "bitPosition"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568",
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_at_position_080024f8",
            "code": "\nvoid setBitAtPosition_080024f8(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_at_position_080024f8",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_data_08002514",
            "code": "\n\n\nundefined4 initializeData_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_data_08002514",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_array_08002540",
            "code": "\nvoid setBitInArray_08002540(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_array_08002540",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "set_e000e010_bit_08002560",
            "code": "\n\n\nvoid set_e000e010_bit_08002560(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "set_e000e010_bit_08002560",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "initialize_system_08002582",
            "code": "\nvoid initializeSystem_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "initialize_system_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_data_0800258c",
            "code": "\n\n\nundefined4 initializeData_0800258c(uint **data_ptr)\n\n{\n  uint *current_ptr;\n  \n  if (*(char *)((int)data_ptr + 0x21) != '\\x02') {\n    result = (uint *)0x4;\n    return 1;\n  }\n  **data_ptr = **data_ptr & 0xfffffff1;\n  **data_ptr = **data_ptr & 0xfffffffe;\n  current_ptr = *data_ptr;\n  if (current_ptr == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (current_ptr == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (current_ptr == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (current_ptr == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (current_ptr == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (current_ptr == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data_ptr + 0x21) = 1;\n  *(undefined *)(data_ptr + 8) = 0;\n  if (callback_ptr != (uint *)0x0) {\n    (*(code *)callback_ptr)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "param_1": "data_ptr",
                "puVar1": "current_ptr",
                "param_1[0xe]": "result",
                "param_1[0xd]": "callback_ptr"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_register_08002624",
            "code": "\n\n\nvoid updateRegister_08002624(uint *registerTarget,uint *registerMask)\n\n{\n  uint *registerPtr;\n  uint bitMask;\n  uint bitCheck;\n  uint bitIndex;\n  uint registerValue;\n  uint updatedValue;\n  int shiftOffset;\n  int registerOffset;\n  \n  updatedValue = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    bitCheck = *registerMask & bitMask;\n    if (bitMask == bitCheck) {\n      registerValue = registerMask[1];\n      if (registerValue == 0x12) {\n        updatedValue = registerMask[3] + 0xc;\n      }\n      else if (registerValue < 0x13) {\n        if (registerValue == 2) {\n          updatedValue = registerMask[3] + 8;\n        }\n        else if (registerValue < 3) {\n          if (registerValue == 0) goto LAB_08002776;\n          if (registerValue == 1) {\n            updatedValue = registerMask[3];\n          }\n        }\n        else if (registerValue == 3) {\n          updatedValue = 0;\n        }\n        else if (registerValue == 0x11) {\n          updatedValue = registerMask[3] + 4;\n        }\n      }\n      else if (registerValue == 0x10210000) {\nLAB_08002776:\n        if (registerMask[2] == 0) {\n          updatedValue = 4;\n        }\n        else if (registerMask[2] == 1) {\n          registerTarget[4] = bitMask;\n          updatedValue = 8;\n        }\n        else {\n          registerTarget[5] = bitMask;\n          updatedValue = 8;\n        }\n      }\n      else if (registerValue < 0x10210001) {\n        if ((registerValue == 0x10110000) || (registerValue == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((registerValue == 0x10310000) || ((registerValue == 0x10320000 || (registerValue == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitIndex;\n      registerPtr = registerTarget;\n      if (0xff < bitCheck) {\n        bitMask = bitIndex - 8;\n        registerPtr = registerTarget + 1;\n      }\n      *registerPtr = *registerPtr & ~(0xf << (bitMask << 2 & 0xff)) | updatedValue << (bitMask << 2 & 0xff);\n      if ((registerMask[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shiftOffset = (bitIndex & 3) << 2;\n        if (registerTarget == (uint *)0x40010800) {\n          registerOffset = 0;\n        }\n        else if (registerTarget == (uint *)0x40010c00) {\n          registerOffset = 1;\n        }\n        else if (registerTarget == (uint *)0x40011000) {\n          registerOffset = 2;\n        }\n        else if (registerTarget == (uint *)0x40011400) {\n          registerOffset = 3;\n        }\n        else {\n          registerOffset = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shiftOffset) | registerOffset << shiftOffset;\n        if ((registerMask[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitCheck;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitCheck;\n        }\n        if ((registerMask[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitCheck;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitCheck;\n        }\n        if ((registerMask[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitCheck;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitCheck;\n        }\n        if ((registerMask[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitCheck;\n        }\n        else {\n          _DAT_4001040c = bitCheck | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_register_08002624",
                "param_1": "registerTarget",
                "param_2": "registerMask",
                "puVar1": "registerPtr",
                "uVar2": "bitMask",
                "uVar3": "bitCheck",
                "uVar4": "bitIndex",
                "uVar5": "registerValue",
                "uVar6": "updatedValue",
                "iVar7": "shiftOffset",
                "iVar8": "registerOffset"
            },
            "calling": [
                "FUN_08004f4c",
                "FUN_08004974",
                "FUN_08004bb0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int address,uint value)\n\n{\n  if ((value & *(uint *)(address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_param_value_0800281e",
            "code": "\nvoid setParamValue_0800281e(int objectAddress,int value,int useShift)\n\n{\n  if (useShift == 0) {\n    *(int *)(objectAddress + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "useShift"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_and_process_if_bits_set_0800282c",
            "code": "\n\n\nvoid updateAndProcessIfBitsSet_0800282c(uint bitMask)\n\n{\n  if ((_DAT_40010414 & bitMask) != 0) {\n    _DAT_40010414 = bitMask;\n    check_and_process_if_set_bits_exist_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_and_process_if_bits_set_0800282c",
                "param_1": "bitMask"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_status_08002848",
            "code": "\nundefined4 updateStatus_08002848(int *status)\n\n{\n  if (*(char *)((int)status + 0x3e) == '@') {\n    if (errorCode == 0) {\n      *(uint *)(*status + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (status[4] == 0x4000) {\n    if (*(char *)((int)status + 0x3d) == '!') {\n      *(uint *)(*status + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (errorCode == 0) {\n    *(uint *)(*status + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (errorCode == 1) {\n    *(uint *)(*status + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_status_08002848",
                "param_1": "status",
                "param_1[0x14]": "errorCode",
                "param_1[0x11]": "value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "update_parameter_at_index_080028d2",
            "code": "\nundefined4 updateParameterAtIndex_080028d2(int *parameterArray)\n\n{\n  *(uint *)(*parameterArray + 0x10) = parameterArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "update_parameter_at_index_080028d2",
                "param_1": "parameterArray"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "set_flags_based_on_conditions_080028de",
            "code": "\nundefined4 setFlagsBasedOnConditions_080028de(uint **parameters)\n\n{\n  uint *value;\n  \n  value = value3;\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((value1 != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((value1 == (uint *)0x0) && (value2 == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      value1 = (uint *)((int)value1 + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (value == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          value = *parameters;\n          if ((value[1] & 0x800) == 0) {\n            *value = *value | 0x200;\n          }\n          else {\n            *value = *value & 0xfffffbff;\n          }\n        }\n        else if (((value == (uint *)0x4) || (value == (uint *)0x8)) ||\n                (value4 == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (value3 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (value3 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      value1 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "set_flags_based_on_conditions_080028de",
                "param_1": "parameters",
                "puVar1": "value",
                "param_1[0x14]": "value1",
                "param_1[4]": "value2",
                "param_1[0xb]": "value3",
                "param_1[0xc]": "value4"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_data_08002ab8",
            "code": "\nundefined4 updateData_08002ab8(int *data)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)ptrToDataArray;\n    ptrToDataArray = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_data_08002ab8",
                "param_1": "data",
                "pbVar1": "bytePointer",
                "param_1[9]": "ptrToDataArray"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_parameter_value_08002ad8",
            "code": "\nundefined4 updateParameterValue_08002ad8(int *parameterArray)\n\n{\n  undefined *pointerToData;\n  \n  if (*(short *)((int)parameterArray + 0x2a) != 0) {\n    pointerToData = (undefined *)dataPointer;\n    dataPointer = (int)(pointerToData + 1);\n    *pointerToData = (char)*(undefined4 *)(*parameterArray + 0x10);\n    *(short *)((int)parameterArray + 0x2a) = *(short *)((int)parameterArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_parameter_value_08002ad8",
                "param_1": "parameterArray",
                "puVar1": "pointerToData",
                "param_1[9]": "dataPointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "check_and_initialize_08002af8",
            "code": "\nundefined4 checkAndInitialize_08002af8(uint **ptrToParam1,uint *ptrToParam2,int param3,uint *ptrToParam4)\n\n{\n  undefined4 result;\n  uint *ptrToVar2;\n  \n  if (*(char *)((int)ptrToParam1 + 0x3d) == '(') {\n    if (ptrToParam2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptrToParam1 + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptrToParam1 + 0xf) = 1;\n      ptrToVar2 = *ptrToParam1;\n      if ((*ptrToVar2 & 1) == 0) {\n        *ptrToVar2 = *ptrToVar2 | 1;\n      }\n      **ptrToParam1 = **ptrToParam1 & 0xfffff7ff;\n      *(undefined *)((int)ptrToParam1 + 0x3d) = 0x29;\n      *(undefined *)((int)ptrToParam1 + 0x3e) = 0x20;\n      result = 0;\n      ptrToParam1[0x10] = (uint *)0x0;\n      ptrToParam1[9] = ptrToParam2;\n      *(short *)((int)ptrToParam1 + 0x2a) = (short)param3;\n      ptrToParam1[0xb] = ptrToParam4;\n      *(undefined2 *)(ptrToParam1 + 10) = *(undefined2 *)((int)ptrToParam1 + 0x2a);\n      *(undefined *)(ptrToParam1 + 0xf) = 0;\n      (*ptrToParam1)[1] = (*ptrToParam1)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "check_and_initialize_08002af8",
                "param_1": "ptrToParam1",
                "param_2": "ptrToParam2",
                "param_3": "param3",
                "param_4": "ptrToParam4",
                "uVar1": "result",
                "puVar2": "ptrToVar2"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "check_and_initialize_08002b84",
            "code": "\nundefined4 checkAndInitialize_08002b84(uint **pointerMatrix,uint *pointer,int size,uint *pointerArray)\n\n{\n  undefined4 returnValue;\n  uint *valuePointer;\n  \n  if (*(char *)((int)pointerMatrix + 0x3d) == '(') {\n    if (pointer == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (size == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(pointerMatrix + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(pointerMatrix + 0xf) = 1;\n      valuePointer = *pointerMatrix;\n      if ((*valuePointer & 1) == 0) {\n        *valuePointer = *valuePointer | 1;\n      }\n      **pointerMatrix = **pointerMatrix & 0xfffff7ff;\n      *(undefined *)((int)pointerMatrix + 0x3d) = 0x2a;\n      *(undefined *)((int)pointerMatrix + 0x3e) = 0x20;\n      returnValue = 0;\n      pointerMatrix[0x10] = (uint *)0x0;\n      pointerMatrix[9] = pointer;\n      *(short *)((int)pointerMatrix + 0x2a) = (short)size;\n      pointerMatrix[0xb] = pointerArray;\n      *(undefined2 *)(pointerMatrix + 10) = *(undefined2 *)((int)pointerMatrix + 0x2a);\n      *(undefined *)(pointerMatrix + 0xf) = 0;\n      (*pointerMatrix)[1] = (*pointerMatrix)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "check_and_initialize_08002b84",
                "param_1": "pointerMatrix",
                "param_2": "pointer",
                "param_3": "size",
                "param_4": "pointerArray",
                "uVar1": "returnValue",
                "puVar2": "valuePointer"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_data_08002c10",
            "code": "\nundefined4 initializeData_08002c10(uint **data)\n\n{\n  uint *currentValue;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  currentValue = *data;\n  if ((*currentValue & 1) == 0) {\n    *currentValue = *currentValue | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_data_08002c10",
                "param_1": "data",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002d1c",
                "FUN_08002c54"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_input_08002c54",
            "code": "\nundefined4 processInput_08002c54(int *input)\n\n{\n  char currentChar;\n  byte *bytePtr;\n  \n  currentChar = *(char *)((int)input + 0x3d);\n  if (*(short *)((int)input + 0x2a) != 0) {\n    bytePtr = (byte *)arrayIndex;\n    arrayIndex = (int)(bytePtr + 1);\n    *(uint *)(*input + 0x10) = (uint)*bytePtr;\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    if ((*(short *)((int)input + 0x2a) == 0) && (currentChar == ')')) {\n      *(uint *)(*input + 4) = *(uint *)(*input + 4) & 0xfffffbff;\n      valueToSet = 0x21;\n      *(undefined *)((int)input + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_input_08002c54",
                "param_1": "input",
                "cVar1": "currentChar",
                "pbVar2": "bytePtr",
                "param_1[9]": "arrayIndex",
                "param_1[0xc]": "valueToSet"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_080032b4",
                "FUN_08002ca6"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_parameter_value_08002ca6",
            "code": "\nundefinedReturnType updateParameterValue_08002ca6(int *parameters)\n\n{\n  char charValue;\n  undefined *pointerToUndefined;\n  \n  charValue = *(char *)((int)parameters + 0x3d);\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    pointerToUndefined = (undefined *)parameters[9];\n    parameters[9] = (int)(pointerToUndefined + 1);\n    *pointerToUndefined = (char)*(undefinedReturnType *)(*parameters + 0x10);\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    if ((*(short *)((int)parameters + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*parameters + 4) = *(uint *)(*parameters + 4) & 0xfffffbff;\n      parameters[0xc] = 0x22;\n      *(undefined *)((int)parameters + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_parameter_value_08002ca6",
                "param_1": "parameters",
                "cVar1": "charValue",
                "puVar2": "pointerToUndefined",
                "undefined4": "undefinedReturnType"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "initialize_08002cf2",
            "code": "\nundefined4 initialize_08002cf2(int *data,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 selected_value;\n  uint flag;\n  \n  flag = *(uint *)(*data + 0x18);\n  if ((flag & 0x80) == 0) {\n    selected_value = *(undefined2 *)(data + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(data + 6);\n  }\n  initialize_08002cf2_function_08004e74(data,(*(uint *)(*data + 0x18) & 4) == 0,selected_value,flag,param_4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "initialize_08002cf2",
                "param_1": "data",
                "uVar1": "selected_value",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "process_binary_param_08002d1c",
            "code": "\nundefined4 processBinaryParam_08002d1c(uint **binaryData)\n\n{\n  if (((flag1 == (uint *)0x4) || (flag1 == (uint *)0x8)) &&\n     (*(char *)((int)binaryData + 0x3d) == '(')) {\n    flag1 = (uint *)0xffff0000;\n    (*binaryData)[1] = (*binaryData)[1] & 0xfffff8ff;\n    (*binaryData)[5] = 0xfffffbff;\n    **binaryData = **binaryData & 0xfffffbff;\n    flag2 = (uint *)0x0;\n    *(undefined *)((int)binaryData + 0x3d) = 0x20;\n    *(undefined *)((int)binaryData + 0x3e) = 0;\n    initAndCallFunc;\n  }\n  else if (*(char *)((int)binaryData + 0x3d) == '!') {\n    flag1 = (uint *)0xffff0000;\n    flag2 = (uint *)0x21;\n    *(undefined *)((int)binaryData + 0x3d) = 0x20;\n    *(undefined *)((int)binaryData + 0x3e) = 0;\n    (*binaryData)[1] = (*binaryData)[1] & 0xfffff8ff;\n    (*binaryData)[5] = 0xfffffbff;\n    **binaryData = **binaryData & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*binaryData)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "process_binary_param_08002d1c",
                "param_1": "binaryData",
                "param_1[0xb]": "flag1",
                "param_1[0xc]": "flag2",
                "initialize_and_call_function_08004ec4()": "initAndCallFunc"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08002c52",
                "FUN_08004ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "decode_and_execute_08002db2",
            "code": "\nundefined4 decode_and_execute_08002db2(uint **param)\n\n{\n  char character;\n  uint *pointer;\n  \n  character = *(char *)((int)param + 0x3d);\n  pointer = value3;\n  if ((*(short *)(param + 10) == 0) && (character == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*param)[1] = (*param)[1] & 0xfffff8ff;\n      **param = **param | 0x200;\n      value4 = (uint *)0x0;\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      if (*(char *)((int)param + 0x3e) == '@') {\n        *(undefined *)((int)param + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)param + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*param)[1] = (*param)[1] & 0xfffff8ff;\n      value4 = (uint *)0x11;\n      *(undefined *)((int)param + 0x3e) = 0;\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((character == '!') || ((*(char *)((int)param + 0x3e) == '@' && (character == '\\\"')))) {\n    if (*(short *)((int)param + 0x2a) == 0) {\n      (*param)[1] = (*param)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)param + 0x3e) == '@') {\n      if (param[0x14] == (uint *)0x0) {\n        if (param[0x13] == (uint *)0x1) {\n          (*param)[4] = (uint)param[0x12] & 0xff;\n          param[0x14] = (uint *)((int)param[0x14] + 2);\n        }\n        else {\n          (*param)[4] = (uint)((int)param[0x12] << 0x10) >> 0x18;\n          param[0x14] = (uint *)((int)param[0x14] + 1);\n        }\n      }\n      else if (param[0x14] == (uint *)0x1) {\n        (*param)[4] = (uint)param[0x12] & 0xff;\n        param[0x14] = (uint *)((int)param[0x14] + 1);\n      }\n      else if (param[0x14] == (uint *)0x2) {\n        if (*(char *)((int)param + 0x3d) == '\\\"') {\n          **param = **param | 0x100;\n        }\n        else if (*(char *)((int)param + 0x3d) == '!') {\n          pointer = param[9];\n          param[9] = (uint *)((int)pointer + 1);\n          (*param)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = param[9];\n      param[9] = (uint *)((int)pointer + 1);\n      (*param)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "decode_and_execute_08002db2",
                "param_1": "param",
                "cVar1": "character",
                "puVar2": "pointer",
                "param_1[0xb]": "value3",
                "param_1[0xc]": "value4"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_param_08002efc",
            "code": "\nundefined4 processParam_08002efc(uint **paramList)\n\n{\n  uint *tempPointer;\n  \n  tempPointer = paramValueB;\n  if (*(char *)((int)paramList + 0x3d) == '!') {\n    if (*(short *)((int)paramList + 0x2a) == 0) {\n      if (((tempPointer == (uint *)0x4) || (tempPointer == (uint *)0x8)) || (tempPointer == (uint *)0xffff0000)) {\n        (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n        **paramList = **paramList | 0x200;\n        paramValueC = (uint *)0x0;\n        *(undefined *)((int)paramList + 0x3d) = 0x20;\n        if (*(char *)((int)paramList + 0x3e) == '@') {\n          *(undefined *)((int)paramList + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)paramList + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n        paramValueC = (uint *)0x11;\n        *(undefined *)((int)paramList + 0x3e) = 0;\n        *(undefined *)((int)paramList + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      tempPointer = paramValue9;\n      paramValue9 = (uint *)((int)tempPointer + 1);\n      (*paramList)[4] = (uint)*(byte *)tempPointer;\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_param_08002efc",
                "param_1": "paramList",
                "puVar1": "tempPointer",
                "param_1[0xb]": "paramValueB",
                "param_1[0xc]": "paramValueC",
                "param_1[9]": "paramValue9"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "apply_modifications_08002f9c",
            "code": "\nundefined4 applyModifications_08002f9c(uint **parameters)\n\n{\n  uint *temp;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        temp = parameters[9];\n        parameters[9] = (uint *)((int)temp + 1);\n        *(char *)temp = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      temp = parameters[9];\n      parameters[9] = (uint *)((int)temp + 1);\n      *(char *)temp = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "apply_modifications_08002f9c",
                "param_1": "parameters",
                "puVar1": "temp"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "modify_parameter_0800306c",
            "code": "\nundefined4 modifyParameter_0800306c(uint **paramArray)\n\n{\n  uint *pointerVar;\n  \n  pointerVar = paramArray[0xb];\n  if (*(short *)((int)paramArray + 0x2a) == 3) {\n    if (((pointerVar == (uint *)0x4) || (pointerVar == (uint *)0x8)) || (pointerVar == (uint *)0xffff0000)) {\n      **paramArray = **paramArray & 0xfffffbff;\n    }\n    pointerVar = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar + 1);\n    *(char *)pointerVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)paramArray + 0x2a) == 2) {\n    if (((pointerVar == (uint *)0x4) || (pointerVar == (uint *)0x8)) || (pointerVar == (uint *)0xffff0000)) {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffffcff;\n      **paramArray = **paramArray | 0x200;\n    }\n    else {\n      if (pointerVar == (uint *)0x2) {\n        **paramArray = **paramArray | 0x400;\n      }\n      else {\n        **paramArray = **paramArray & 0xfffffbff;\n      }\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffffcff;\n    }\n    pointerVar = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar + 1);\n    *(char *)pointerVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    pointerVar = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar + 1);\n    *(char *)pointerVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    paramArray[0xc] = (uint *)0x0;\n    if (*(char *)((int)paramArray + 0x3e) == '@') {\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    pointerVar = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar + 1);\n    *(char *)pointerVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "modify_parameter_0800306c",
                "param_1": "paramArray",
                "puVar1": "pointerVar"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "initialize_data_and_call_function_0800316c",
            "code": "\nvoid initializeDataAndCallFunction_0800316c(uint **parameters)\n\n{\n  int returnValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  ptr2 = *parameters;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_0800316a(parameters);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      check_and_initialize_data_08004ef4(parameters);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = initialize_data_0800258c(parameters[0xe]);\n      if (returnValue != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          ptr2 = parameters[9];\n          parameters[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = initialize_data_0800258c(parameters[0xd]);\n      if (returnValue != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    initialize_and_call_function_08004ec4(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "initialize_data_and_call_function_0800316c",
                "param_1": "parameters",
                "iVar1": "returnValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08004ef4",
                "FUN_0800258c",
                "FUN_0800316a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_data_080032b4",
            "code": "\nundefined4 processData_080032b4(uint **data)\n\n{\n  char charVar1;\n  uint *ptrVar2;\n  uint *ptrVar3;\n  \n  charVar1 = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptrVar2 = *data;\n  if ((ptrVar2[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptrVar2[5] & 4) != 0) {\n      ptrVar3 = data[9];\n      data[9] = (uint *)((int)ptrVar3 + 1);\n      *(char *)ptrVar3 = (char)ptrVar2[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptrVar2 = data[9];\n      data[9] = (uint *)((int)ptrVar2 + 1);\n      *(char *)ptrVar2 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((charVar1 == '(') || (charVar1 == '*')) || (charVar1 == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      initialize_and_call_function_08004ec4();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (charVar1 == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    initialize_data_and_call_function_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_data_080032b4",
                "param_1": "data",
                "cVar1": "charVar1",
                "puVar2": "ptrVar2",
                "puVar3": "ptrVar3"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4",
                "FUN_0800316c",
                "FUN_08004ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_function_080033b8",
            "code": "\nvoid process_function_080033b8(int *input_array)\n\n{\n  int value;\n  uint parameter_1;\n  uint parameter_2;\n  uint parameter_3;\n  \n  value = *input_array;\n  parameter_3 = *(uint *)(value + 0x18);\n  parameter_1 = *(uint *)(value + 0x14);\n  parameter_2 = *(uint *)(value + 4);\n  if ((*(char *)((int)input_array + 0x3e) == '\\x10') || (*(char *)((int)input_array + 0x3e) == '@')) {\n    if (((parameter_1 & 0x10001) == 0) || ((parameter_2 & 0x200) == 0)) {\n      if (((parameter_1 & 0x10008) == 0) || ((parameter_2 & 0x200) == 0)) {\n        if (((parameter_1 & 0x10002) != 0) && ((parameter_2 & 0x200) != 0)) {\n          set_flags_based_on_conditions_080028de(input_array);\n        }\n      }\n      else {\n        update_parameter_at_index_080028d2(input_array);\n      }\n    }\n    else {\n      update_status_08002848(input_array);\n    }\n    if ((parameter_3 & 0x100004) == 0) {\n      if ((((parameter_1 & 0x10040) != 0) && ((parameter_2 & 0x400) != 0)) && ((parameter_1 & 0x10004) == 0)) {\n        apply_modifications_08002f9c(input_array);\n        return;\n      }\n      if (((parameter_1 & 0x10004) != 0) && ((parameter_2 & 0x200) != 0)) {\n        modify_parameter_0800306c(input_array);\n        return;\n      }\n    }\n    else {\n      if ((((parameter_1 & 0x10080) != 0) && ((parameter_2 & 0x400) != 0)) && ((parameter_1 & 0x10004) == 0)) {\n        decode_and_execute_08002db2(input_array);\n        return;\n      }\n      if (((parameter_1 & 0x10004) != 0) && ((parameter_2 & 0x200) != 0)) {\n        process_param_08002efc(input_array);\n        return;\n      }\n    }\n  }\n  else {\n    if (((parameter_1 & 0x10002) != 0) && ((parameter_2 & 0x200) != 0)) {\n      initialize_08002cf2();\n      return;\n    }\n    if (((parameter_1 & 0x10010) != 0) && ((parameter_2 & 0x200) != 0)) {\n      process_data_080032b4(input_array);\n      return;\n    }\n    if ((parameter_3 & 0x100004) == 0) {\n      if ((((parameter_1 & 0x10040) != 0) && ((parameter_2 & 0x400) != 0)) && ((parameter_1 & 0x10004) == 0)) {\n        update_parameter_value_08002ca6(input_array);\n        return;\n      }\n      if (((parameter_1 & 0x10004) != 0) && ((parameter_2 & 0x200) != 0)) {\n        update_parameter_value_08002ad8(input_array);\n      }\n    }\n    else {\n      if ((((parameter_1 & 0x10080) != 0) && ((parameter_2 & 0x400) != 0)) && ((parameter_1 & 0x10004) == 0)) {\n        process_input_08002c54(input_array);\n        return;\n      }\n      if (((parameter_1 & 0x10004) != 0) && ((parameter_2 & 0x200) != 0)) {\n        update_data_08002ab8(input_array);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_function_080033b8",
                "param_1": "input_array",
                "iVar1": "value",
                "uVar2": "parameter_1",
                "uVar3": "parameter_2",
                "uVar4": "parameter_3"
            },
            "calling": [],
            "called": [
                "FUN_08002db2",
                "FUN_080028de",
                "FUN_08002f9c",
                "FUN_08002c54",
                "FUN_08002cf2",
                "FUN_0800306c",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002848",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_080028d2",
                "FUN_08002ca6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "process_flags_08003520",
            "code": "\nvoid process_flags_08003520(uint **flags)\n\n{\n  char char1;\n  uint *ptr;\n  uint flag1;\n  uint flag2;\n  \n  ptr = *flags;\n  flag1 = ptr[5];\n  flag2 = ptr[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    flags[0x10] = (uint *)((uint)flags[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **flags = **flags | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    flags[0x10] = (uint *)((uint)flags[0x10] | 2);\n    (*flags)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    char1 = *(char *)((int)flags + 0x3d);\n    if (((*(char *)((int)flags + 0x3e) == ' ') && (*(short *)((int)flags + 0x2a) == 0)) &&\n       (((char1 == '!' || (char1 == ')')) || ((char1 == '(' && (flags[0xc] == (uint *)0x21)))))) {\n      process_binary_param_08002d1c(flags);\n    }\n    else {\n      flags[0x10] = (uint *)((uint)flags[0x10] | 4);\n      if (*(char *)((int)flags + 0x3e) == '\\x10') {\n        **flags = **flags | 0x200;\n      }\n      (*flags)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    flags[0x10] = (uint *)((uint)flags[0x10] | 8);\n    (*flags)[5] = 0xfffff7ff;\n  }\n  if (flags[0x10] != (uint *)0x0) {\n    initialize_data_and_call_function_0800316c(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "process_flags_08003520",
                "param_1": "flags",
                "cVar1": "char1",
                "puVar2": "ptr",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "delay_function_0800365c",
            "code": "\nvoid delayFunction_0800365c(int delay)\n\n{\n  bool isDelayPositive;\n  int delayCount;\n  \n  delayCount = delay * (DAT_20000084 / 8000);\n  do {\n    isDelayPositive = delayCount != 0;\n    delayCount = delayCount + -1;\n  } while (isDelayPositive);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "delay_function_0800365c",
                "param_1": "delay",
                "local_4": "delayCount",
                "bVar1": "isDelayPositive"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "execute_command_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 executeCommand_08003688(uint *command)\n\n{\n  int startTime;\n  int currTime;\n  undefined4 result;\n  uint paramValue;\n  bool isFlagSet;\n  \n  if ((*command & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (command[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      paramValue = command[1];\n      if (paramValue == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (paramValue == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (paramValue == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (command[1] == 0) {\n        startTime = get_global_variable_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currTime = get_global_variable_08001cc4();\n          if (100 < (uint)(currTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = get_global_variable_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currTime = get_global_variable_08001cc4();\n          if (100 < (uint)(currTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*command & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (command[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | command[5] << 3;\n    }\n    else if (command[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | command[5] << 3;\n    }\n  }\n  if ((*command & 8) != 0) {\n    if (command[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n      delay_function_0800365c(1);\n    }\n  }\n  if ((*command & 4) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currTime = get_global_variable_08001cc4();\n        if (100 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    paramValue = command[3];\n    if (paramValue == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (paramValue == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (paramValue == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (command[3] == 0) {\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currTime = get_global_variable_08001cc4();\n        if (5000 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currTime = get_global_variable_08001cc4();\n        if (5000 < (uint)(currTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (command[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (command[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = get_global_variable_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (command[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | command[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | command[8] | command[9];\n        _DAT_42420060 = 1;\n        startTime = get_global_variable_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currTime = get_global_variable_08001cc4();\n        } while ((uint)(currTime - startTime) < 3);\n        return 3;\n      }\n      currTime = get_global_variable_08001cc4();\n    } while ((uint)(currTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = get_global_variable_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currTime = get_global_variable_08001cc4();\n    } while ((uint)(currTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "execute_command_08003688",
                "param_1": "command",
                "iVar1": "startTime",
                "iVar2": "currTime",
                "uVar3": "result",
                "uVar4": "paramValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800365c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_time_delay_08003a68",
            "code": "\n\n\nuint calculateTimeDelay_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 delayFactor;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  constant4 = 0x10100f0e;\n  constant3 = 0xd0c0b0a;\n  constant2 = 0x9080706;\n  constant1 = 0x5040302;\n  delayFactor = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&delayFactor - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_time_delay_08003a68",
                "local_1c": "delayFactor",
                "uStack_18": "constant1",
                "uStack_14": "constant2",
                "uStack_10": "constant3",
                "uStack_c": "constant4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "initialize_delay_and_memory_08003ad4",
            "code": "\n\n\nundefined4 initialize_delay_and_memory_08003ad4(uint *pointer,uint size)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*pointer & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | pointer[2];\n  }\n  if ((*pointer & 1) != 0) {\n    uVar3 = pointer[1];\n    if (uVar3 == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((uVar3 != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = uVar3 | _DAT_40021004 & 0xfffffffc;\n    iVar1 = get_current_time();\n    if (pointer[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = get_current_time();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (pointer[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = get_current_time();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = get_current_time();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*pointer & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | pointer[3];\n  }\n  if ((*pointer & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | pointer[4] << 3;\n  }\n  uVar3 = calculate_delay();\n  DAT_20000084 = uVar3 >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_memory(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "initialize_delay_and_memory_08003ad4",
                "param_1": "pointer",
                "param_2": "size",
                "get_global_variable_08001cc4": "get_current_time",
                "calculate_time_delay_08003a68": "calculate_delay",
                "initialize_memory_and_update_char_08001c3c": "initialize_memory"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "initialize_delay_and_memory_08003afa",
            "code": "\n\n\nundefined4 initialize_delay_and_memory_08003afa(uint *flags,uint delay)\n\n{\n  int iVar1;\n  int iVar2;\n  uint global_variable_2;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    global_variable_2 = flags[1];\n    if (global_variable_2 == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((global_variable_2 != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = global_variable_2 | _DAT_40021004 & 0xfffffffc;\n    iVar1 = get_elapsed_time();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = get_elapsed_time();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = get_elapsed_time();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = get_elapsed_time();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (delay < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | delay;\n    if (delay != (delay & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  global_variable_2 = calculate_time_delay();\n  DAT_20000084 = global_variable_2 >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_memory_and_update_char(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "initialize_delay_and_memory_08003afa",
                "param_1": "flags",
                "param_2": "delay",
                "uVar3": "global_variable_2",
                "get_global_variable_08001cc4": "get_elapsed_time",
                "calculate_time_delay_08003a68": "calculate_time_delay",
                "initialize_memory_and_update_char_08001c3c": "initialize_memory_and_update_char"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001cc4",
                "FUN_08001c3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_data_08003c44",
            "code": "\nundefined4 get_data_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_data_08003c44"
            },
            "calling": [
                "FUN_08003c50",
                "FUN_08001b48",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "calculate_shifted_data_08003c50",
            "code": "\n\n\nuint calculate_shifted_data_08003c50(void)\n\n{\n  uint data;\n  \n  data = get_data();\n  return data >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "calculate_shifted_data_08003c50",
                "uVar1": "data",
                "get_data_08003c44": "get_data"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "shifted_data_from_pointer_08003c70",
            "code": "\n\n\nuint shiftedDataFromPointer_08003c70(void)\n\n{\n  uint data;\n  \n  data = retrieveData();\n  return data >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "shifted_data_from_pointer_08003c70",
                "uVar1": "data",
                "get_data_08003c44": "retrieveData"
            },
            "calling": [
                "FUN_08004204",
                "FUN_08003da4"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "initialize_hardware_08003c90",
            "code": "\n\n\nundefined4 initializeHardware_08003c90(uint *hardwareConfig)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int initialValue;\n  int currentValue;\n  bool isFlagSet;\n  \n  if ((*hardwareConfig & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = get_global_variable_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = get_global_variable_08001cc4();\n        if (100 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (hardwareConfig[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        initialValue = get_global_variable_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentValue = get_global_variable_08001cc4();\n          if (5000 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | hardwareConfig[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*hardwareConfig & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | hardwareConfig[2];\n  }\n  if ((*hardwareConfig & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | hardwareConfig[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "initialize_hardware_08003c90",
                "param_1": "hardwareConfig",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "initialValue",
                "iVar4": "currentValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_parameter_value_08003da4",
            "code": "\n\n\nuint calculateParameterValue_08003da4(int inputValue)\n\n{\n  uint result;\n  undefined2 shiftedValue;\n  undefined4 dataBlock;\n  undefined4 someValue1;\n  undefined4 someValue2;\n  undefined4 someValue3;\n  \n  someValue3 = 0x10100f0e;\n  someValue2 = 0xd0c0b0a;\n  someValue1 = 0x9080706;\n  dataBlock = 0x5040302;\n  shiftedValue = 0x201;\n  if (inputValue == 2) {\n    result = shifted_data_from_pointer_08003c70();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(dataByte *)((int)&shiftedValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(dataByte *)((int)&dataBlock + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_parameter_value_08003da4",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "shiftedValue",
                "uStack_20": "dataBlock",
                "uStack_1c": "someValue1",
                "uStack_18": "someValue2",
                "uStack_14": "someValue3",
                "byte": "dataByte"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002384"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_control_08003ea0",
            "code": "\n\n\nvoid initializeControl_08003ea0(uint **controlPtr)\n\n{\n  if (((**controlPtr & 2) != 0) && (((*controlPtr)[1] & 2) != 0)) {\n    execute_callback_if_not_null_08004d18();\n    (*controlPtr)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)controlPtr + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_control_08003ea0",
                "param_1": "controlPtr"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "initialize_memory_permissions_08003ed8",
            "code": "\nvoid initialize_memory_permissions_08003ed8(uint **param)\n\n{\n  uint *ptrParam;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  ptrParam = *param;\n  if ((ptrParam[8] & 0x1111) == 0) {\n    if ((ptrParam[8] & 0x444) == 0) {\n      *ptrParam = *ptrParam & 0xfffffffe;\n    }\n  }\n  initialize_memory_permissions_08003ed8_aux(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "initialize_memory_permissions_08003ed8",
                "param_1": "param",
                "puVar1": "ptrParam",
                "initialize_memory_permissions_08004b34": "initialize_memory_permissions_aux"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_flags_08003f18",
            "code": "\nvoid processFlags_08003f18(int *input)\n\n{\n  int data;\n  \n  data = *input;\n  if (((*(uint *)(data + 0x10) & 2) != 0) && ((*(uint *)(data + 0xc) & 2) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffffd;\n    *(undefined *)(input + 7) = 1;\n    if ((*(uint *)(*input + 0x18) & 3) == 0) {\n      executeCallbackIfEnabled();\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 4) != 0) && ((*(uint *)(data + 0xc) & 4) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffffb;\n    *(undefined *)(input + 7) = 2;\n    if ((*(uint *)(*input + 0x18) & 0x300) == 0) {\n      executeCallbackIfEnabled(input);\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12(input);\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 8) != 0) && ((*(uint *)(data + 0xc) & 8) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffff7;\n    *(undefined *)(input + 7) = 4;\n    if ((*(uint *)(*input + 0x1c) & 3) == 0) {\n      executeCallbackIfEnabled(input);\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12(input);\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 0x10) != 0) && ((*(uint *)(data + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffffef;\n    *(undefined *)(input + 7) = 8;\n    if ((*(uint *)(*input + 0x1c) & 0x300) == 0) {\n      executeCallbackIfEnabled(input);\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12(input);\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 1) != 0) && ((*(uint *)(data + 0xc) & 1) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffffe;\n    executeIfValidFunction(input);\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 0x80) != 0) && ((*(uint *)(data + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffff7f;\n    FUNC_0800417a(input);\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 0x40) != 0) && ((*(uint *)(data + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffffbf;\n    FUNC_08003f16(input);\n  }\n  data = *input;\n  if (((*(uint *)(data + 0x10) & 0x20) != 0) && ((*(uint *)(data + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffffdf;\n    FUNC_08004178(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_flags_08003f18",
                "param_1": "input",
                "iVar1": "data",
                "execute_callback_if_enabled_08004df8": "executeCallbackIfEnabled",
                "execute_if_valid_function_08004e12": "executeIfValidFunction"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_0800417a",
                "FUN_08004e12",
                "FUN_08004178",
                "FUN_08004df8",
                "FUN_08003f12",
                "FUN_08003f16",
                "FUN_08003f14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bitwise_value_08004092",
            "code": "\nvoid updateBitwiseValue_08004092(int baseAddress,uint bitOffset,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitOffset & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bitwise_value_08004092",
                "param_1": "baseAddress",
                "param_2": "bitOffset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "update_and_check_values_080040b0",
            "code": "\nundefined4 update_and_check_values_080040b0(uint **pointer_to_parameter,undefined4 value_to_update)\n\n{\n  uint *pointer_to_value;\n  \n  update_bitwise_value_08004092(*pointer_to_parameter,value_to_update,0);\n  if (((*pointer_to_parameter == (uint *)0x40012c00) && ((data_address_2 & 0x1111) == 0)) &&\n     ((data_address_2 & 0x444) == 0)) {\n    data_address_3 = data_address_3 & 0xffff7fff;\n  }\n  pointer_to_value = *pointer_to_parameter;\n  if (((pointer_to_value[8] & 0x1111) == 0) && ((pointer_to_value[8] & 0x444) == 0)) {\n    *pointer_to_value = *pointer_to_value & 0xfffffffe;\n  }\n  *(undefined *)((int)pointer_to_parameter + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "update_and_check_values_080040b0",
                "param_1": "pointer_to_parameter",
                "param_2": "value_to_update",
                "puVar1": "pointer_to_value",
                "uRam40012c20": "data_address_2",
                "uRam40012c44": "data_address_3"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_bitwise_operations_08004110",
            "code": "\nvoid updateBitwiseOperations_08004110(int baseAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_bitwise_operations_08004110",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_bitwise_operations_0800412c",
            "code": "\nundefined4 update_bitwise_operations_0800412c(uint **bitwise_operations,undefined4 param_value)\n\n{\n  uint *current_bitwise_operations;\n  \n  update_bitwise_operations_0800412c_08004110(*bitwise_operations,param_value,0);\n  current_bitwise_operations = *bitwise_operations;\n  if (((current_bitwise_operations[8] & 0x1111) == 0) && ((current_bitwise_operations[8] & 0x444) == 0)) {\n    current_bitwise_operations[0x11] = current_bitwise_operations[0x11] & 0xffff7fff;\n  }\n  current_bitwise_operations = *bitwise_operations;\n  if (((current_bitwise_operations[8] & 0x1111) == 0) && ((current_bitwise_operations[8] & 0x444) == 0)) {\n    *current_bitwise_operations = *current_bitwise_operations & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_bitwise_operations_0800412c",
                "param_1": "bitwise_operations",
                "param_2": "param_value",
                "puVar1": "current_bitwise_operations"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "clear_flags_and_set_space_char_0800417c",
            "code": "\nvoid clearFlagsAndSetSpaceChar_0800417c(int *pFlags)\n\n{\n  *(uint *)(*pFlags + 0xc) = *(uint *)(*pFlags + 0xc) & 0xfffffedf;\n  *(uint *)(*pFlags + 0x14) = *(uint *)(*pFlags + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pFlags + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "clear_flags_and_set_space_char_0800417c",
                "param_1": "pFlags"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "process_data_08004198",
            "code": "\nundefined4 processData_08004198(int *inputData)\n\n{\n  short remainingIterations;\n  byte *dataPointer;\n  \n  if (*(char *)((int)inputData + 0x39) != '!') {\n    return 2;\n  }\n  if (inputData[2] == 0x1000) {\n    *(uint *)(*inputData + 4) = *(ushort *)inputData[8] & 0x1ff;\n    if (inputData[4] == 0) {\n      inputData[8] = inputData[8] + 2;\n    }\n    else {\n      inputData[8] = inputData[8] + 1;\n    }\n  }\n  else {\n    dataPointer = (byte *)inputData[8];\n    inputData[8] = (int)(dataPointer + 1);\n    *(uint *)(*inputData + 4) = (uint)*dataPointer;\n  }\n  remainingIterations = *(short *)((int)inputData + 0x26) + -1;\n  *(short *)((int)inputData + 0x26) = remainingIterations;\n  if (remainingIterations == 0) {\n    *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xffffff7f;\n    *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "process_data_08004198",
                "param_1": "inputData",
                "sVar1": "remainingIterations",
                "pbVar2": "dataPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_shifted_data_and_set_value_08004204",
            "code": "\nvoid calculateShiftedDataAndSetValue_08004204(int *inputArray)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       inputArray[2] | inputArray[4] | inputArray[5] | *(uint *)(*inputArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  value10 = *inputArray;\n  if (value10 != 0x40013800) {\n    value1 = calculate_shifted_data_08003c50();\n    value6 = inputArray[1];\n    value2 = calculate_shifted_data_08003c50();\n    value7 = inputArray[1];\n    value3 = calculate_shifted_data_08003c50();\n    value8 = inputArray[1];\n    value4 = calculate_shifted_data_08003c50();\n    value9 = inputArray[1];\n    value5 = calculate_shifted_data_08003c50();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value10 = shifted_data_from_pointer_08003c70();\n  value5 = inputArray[1];\n  value1 = shifted_data_from_pointer_08003c70();\n  value6 = inputArray[1];\n  value2 = shifted_data_from_pointer_08003c70();\n  value7 = inputArray[1];\n  value3 = shifted_data_from_pointer_08003c70();\n  value8 = inputArray[1];\n  value4 = shifted_data_from_pointer_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(value3 * 0x19) / (uint)(value8 << 2) +\n                                (int)(((ulonglong)(uint)(value4 * 0x19) /\n                                      (ulonglong)(uint)(inputArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(value1 * 0x19) / (uint)(value6 << 2) +\n                   (int)(((ulonglong)(uint)(value2 * 0x19) / (ulonglong)(uint)(value7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(value10 * 0x19) / (ulonglong)(uint)(value5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_shifted_data_and_set_value_08004204",
                "param_1": "inputArray",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "iVar10": "value10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_and_modify_params_080043b4",
            "code": "\nundefined4 checkAndModifyParams_080043b4(uint **paramArray,uint mask,uint expectedResult,int baseValue,uint threshold)\n\n{\n  int globalVar;\n  \n  do {\n    if (((mask & ~**paramArray) == 0) != expectedResult) {\n      return 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (globalVar = get_global_variable_08001cc4(), (uint)(globalVar - baseValue) <= threshold))));\n  (*paramArray)[3] = (*paramArray)[3] & 0xfffffe5f;\n  (*paramArray)[5] = (*paramArray)[5] & 0xfffffffe;\n  *(undefined *)((int)paramArray + 0x39) = 0x20;\n  *(undefined *)((int)paramArray + 0x3a) = 0x20;\n  *(undefined *)(paramArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_and_modify_params_080043b4",
                "param_1": "paramArray",
                "param_2": "mask",
                "param_3": "expectedResult",
                "param_4": "baseValue",
                "param_5": "threshold",
                "iVar1": "globalVar"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_struct_0800441a",
            "code": "\nundefined4 initializeDataStruct_0800441a(int *dataStructPtr)\n\n{\n  if (dataStructPtr != (int *)0x0) {\n    if (*(char *)((int)dataStructPtr + 0x39) == '\\0') {\n      *(undefined *)(dataStructPtr + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)dataStructPtr + 0x39) = 0x24;\n    *(uint *)(*dataStructPtr + 0xc) = *(uint *)(*dataStructPtr + 0xc) & 0xffffdfff;\n    calculateShiftedDataAndUpdateValue(dataStructPtr);\n    *(uint *)(*dataStructPtr + 0x10) = *(uint *)(*dataStructPtr + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataStructPtr + 0x14) = *(uint *)(*dataStructPtr + 0x14) & 0xffffffd5;\n    *(uint *)(*dataStructPtr + 0xc) = *(uint *)(*dataStructPtr + 0xc) | 0x2000;\n    dataStructPtr[0xf] = 0;\n    *(undefined *)((int)dataStructPtr + 0x39) = 0x20;\n    *(undefined *)((int)dataStructPtr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_struct_0800441a",
                "param_1": "dataStructPtr",
                "calculate_shifted_data_and_set_value_08004204": "calculateShiftedDataAndUpdateValue"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *array,ushort *values,int size,undefined4 param)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)array + 0x39) == ' ') {\n    if (values == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (size == 0) {\n      status = 1;\n    }\n    else if (*(char *)(array + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(array + 0xe) = 1;\n      array[0xf] = 0;\n      *(undefined *)((int)array + 0x39) = 0x21;\n      status = get_global_variable_08001cc4();\n      *(short *)(array + 9) = (short)size;\n      *(short *)((int)array + 0x26) = (short)size;\n      while (*(short *)((int)array + 0x26) != 0) {\n        *(short *)((int)array + 0x26) = *(short *)((int)array + 0x26) + -1;\n        if (array[2] == 0x1000) {\n          result = check_and_modify_params_080043b4(array,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*array + 4) = *values & 0x1ff;\n          if (array[4] == 0) {\n            values = values + 1;\n          }\n          else {\n            values = (ushort *)((int)values + 1);\n          }\n        }\n        else {\n          result = check_and_modify_params_080043b4(array,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*array + 4) = (uint)*(byte *)values;\n          values = (ushort *)((int)values + 1);\n        }\n      }\n      result = check_and_modify_params_080043b4(array,0x40,0,status,param);\n      if (result == 0) {\n        *(undefined *)((int)array + 0x39) = 0x20;\n        *(undefined *)(array + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "array",
                "param_2": "values",
                "param_3": "size",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "initialize_data_0800455a",
            "code": "\nundefined4 initializeData_0800455a(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    dataValue1 = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    dataValue4 = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "initialize_data_0800455a",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "dataValue1",
                "param_1[0xf]": "dataValue4"
            },
            "calling": [
                "FUN_08005568",
                "FUN_08005604"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "validate_input_080045a2",
            "code": "\nundefined4 validate_input_080045a2(int *input_array,int value_2,int value_3)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (value_3 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value_2;\n    *(short *)(input_array + 0xb) = (short)value_3;\n    *(short *)((int)input_array + 0x2e) = (short)value_3;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "validate_input_080045a2",
                "param_1": "input_array",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_1[10]": "input_array[10]",
                "param_1[0xf]": "input_array[0xf]"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "initialize_data_080045fe",
            "code": "\nundefined4 initialize_data_080045fe(int *data_pointer)\n\n{\n  *(uint *)(*data_pointer + 0xc) = *(uint *)(*data_pointer + 0xc) & 0xffffffbf;\n  *(undefined *)(data_pointer_cast + 0x39) = 0x20;\n  load_data_from_binary();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "initialize_data_080045fe",
                "param_1": "data_pointer",
                "(int)param_1": "data_pointer_cast",
                "initialize_data_from_binary_08005604": "load_data_from_binary"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_string_08004618",
            "code": "\nundefined4 processString_08004618(int *input)\n\n{\n  byte *bytePointer;\n  short shortValue;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)input + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input[2] == 0x1000) {\n    if (input[4] == 0) {\n      *(ushort *)input[10] = (ushort)((uint)(*(int *)(*input + 4) << 0x17) >> 0x17);\n      input[10] = input[10] + 2;\n    }\n    else {\n      *(ushort *)input[10] = (ushort)*(undefined4 *)(*input + 4) & 0xff;\n      input[10] = input[10] + 1;\n    }\n  }\n  else if (input[4] == 0) {\n    undefinedPointer = (undefined *)input[10];\n    input[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*input + 4);\n  }\n  else {\n    bytePointer = (byte *)input[10];\n    input[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*input + 4) & 0x7f;\n  }\n  shortValue = *(short *)((int)input + 0x2e) + -1;\n  *(short *)((int)input + 0x2e) = shortValue;\n  if (shortValue != 0) {\n    return 0;\n  }\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffdf;\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xfffffeff;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input + 0x3a) = 0x20;\n  execute_selected_function_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_string_08004618",
                "param_1": "input",
                "pbVar1": "bytePointer",
                "sVar2": "shortValue",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_data_080046b8",
            "code": "\nvoid process_data_080046b8(uint **data_array)\n\n{\n  int result;\n  uint value2;\n  uint *ptr;\n  uint value4;\n  uint value1;\n  \n  ptr = *data_array;\n  value1 = *ptr;\n  value2 = ptr[3];\n  if ((((value1 & 0xf) == 0) && ((value1 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    process_string_08004618(data_array);\n    return;\n  }\n  if (((value1 & 0xf) == 0) || ((value4 = ptr[5] & 1, value4 == 0 && ((value2 & 0x120) == 0)))) {\n    if (((value1 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      process_data_080046b8_08004198(data_array);\n      return;\n    }\n    if (((value1 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      initialize_data_080045fe(data_array);\n    }\n  }\n  else {\n    if (((value1 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      data_array[0xf] = (uint *)((uint)data_array[0xf] | 1);\n    }\n    if (((value1 & 4) != 0) && (value4 != 0)) {\n      data_array[0xf] = (uint *)((uint)data_array[0xf] | 2);\n    }\n    if (((value1 & 2) != 0) && (value4 != 0)) {\n      data_array[0xf] = (uint *)((uint)data_array[0xf] | 4);\n    }\n    if (((value1 & 8) != 0) && (value4 != 0)) {\n      data_array[0xf] = (uint *)((uint)data_array[0xf] | 8);\n    }\n    if (data_array[0xf] != (uint *)0x0) {\n      if (((value1 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        process_string_08004618(data_array);\n      }\n      if ((((uint)data_array[0xf] & 8) == 0) && (((*data_array)[5] & 0x40) == 0)) {\n        FUNC_08005650(data_array);\n        data_array[0xf] = (uint *)0x0;\n        return;\n      }\n      clear_flags_and_set_space_char_0800417c(data_array);\n      ptr = *data_array;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08005650(data_array);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data_array[0xd] == (uint *)0x0) {\n        FUNC_08005650(data_array);\n        return;\n      }\n      data_array[0xd][0xd] = (uint)&LAB_080047d8_1;\n      result = initialize_data_0800258c(data_array[0xd]);\n      if (result != 0) {\n        (*(code *)data_array[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_data_080046b8",
                "param_1": "data_array",
                "iVar1": "result",
                "uVar2": "value2",
                "puVar3": "ptr",
                "uVar4": "value4",
                "uVar5": "value1"
            },
            "calling": [],
            "called": [
                "FUN_0800417c",
                "FUN_08005650",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_08004198",
                "FUN_0800258c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int address)\n\n{\n  return *(byte *)(address + 0x3a) | *(byte *)(address + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "address"
            },
            "calling": [
                "FUN_0800548c",
                "FUN_080054b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "bitwise_check_080047f4",
            "code": "\nuint bitwiseCheck_080047f4(uint input,int baseAddress)\n\n{\n  return *(uint *)(baseAddress + ((input << 0x18) >> 0x1c) * 4) >> (input & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "bitwise_check_080047f4",
                "param_1": "input",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_0800480a",
            "code": "\nvoid setBit_0800480a(uint input,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (input << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_0800480a",
                "param_1": "input",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_bit_08004828",
            "code": "\nvoid updateBit_08004828(uint value,int buffer)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(buffer + index * 4) = *(uint *)(buffer + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_bit_08004828",
                "param_1": "value",
                "param_2": "buffer",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_base_address_08004848",
            "code": "\nundefined4 getBaseAddress_08004848(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  defaultAddress:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_base_address_08004848",
                "param_1": "index",
                "default": "defaultAddress"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "update_global_variable_08004884",
            "code": "\n\n\nundefined4 updateGlobalVariable_08004884(undefined4 value)\n\n{\n  undefined4 returnValue;\n  \n  switch(value) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004884": "update_global_variable_08004884",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004f4c",
                "FUN_08004974",
                "FUN_08004bb0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "find_value_index_0800492c",
            "code": "\nuint find_value_index_0800492c(undefined4 value_to_find,undefined4 unused_param,undefined4 array_ptr,undefined4 start_index)\n\n{\n  int index;\n  uint shifted_index;\n  \n  index = find_value_index_0800492c_or_fail_08004cce(value_to_find,&DAT_08007400,array_ptr,start_index,start_index);\n  shifted_index = (uint)(index << 0xc) >> 0x1b;\n  if (0x10 < shifted_index - 1) {\n    shifted_index = 0;\n  }\n  return shifted_index;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "find_value_index_0800492c",
                "param_1": "value_to_find",
                "param_2": "unused_param",
                "param_3": "array_ptr",
                "param_4": "start_index",
                "iVar1": "index",
                "uVar2": "shifted_index"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "find_match_index_08004948",
            "code": "\nundefined4 find_match_index_08004948(undefined4 input_param,undefined4 unused_param,undefined4 search_param,undefined4 compare_param)\n\n{\n  int match_index;\n  uint shifted_value;\n  \n  match_index = find_value_index_or_fail_08004cce(input_param,&DAT_080074b4,search_param,compare_param,compare_param);\n  shifted_value = (uint)(match_index << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "find_match_index_08004948",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "search_param",
                "param_4": "compare_param",
                "iVar1": "match_index",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_register_flags_08004974",
            "code": "\n\n\nvoid update_register_flags_08004974(int *input_data,undefined4 value)\n\n{\n  undefined4 updated_value;\n  uint modified_register;\n  int current_value;\n  uint bit_mask;\n  undefined4 iteration_count;\n  undefined4 counter;\n  \n  current_value = *input_data;\n  if (current_value == 0x40012400) {\n    modified_register = _DAT_40021018 | 0x200;\n    current_value = 0x200;\n    _DAT_40021018 = modified_register;\n  }\n  else {\n    modified_register = 0x40012800;\n    if (current_value == 0x40012800) {\n      modified_register = _DAT_40021018 | 0x400;\n      current_value = 0x400;\n      _DAT_40021018 = modified_register;\n    }\n  }\n  updated_value = update_global_variable_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,value,modified_register,current_value);\n  bit_mask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  iteration_count = 3;\n  counter = 0;\n  update_register_08002624(updated_value,&bit_mask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_register_flags_08004974",
                "param_1": "input_data",
                "param_2": "value",
                "uVar1": "updated_value",
                "uVar2": "modified_register",
                "iVar3": "current_value",
                "local_18": "bit_mask",
                "local_14": "iteration_count",
                "local_10": "counter"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_register_flags_080049f0",
            "code": "\n\n\nvoid updateRegisterFlags_080049f0(int *registerValue)\n\n{\n  if (*registerValue != 0x40012400) {\n    if (*registerValue == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_register_flags_080049f0",
                "param_1": "registerValue"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "validate_and_get_value_08004a4c",
            "code": "\nundefined2 validate_and_get_value_08004a4c(undefined4 input_value)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 output_value;\n  uint value_index;\n  undefined4 setting1;\n  undefined4 setting2;\n  int value;\n  undefined4 tmp1;\n  undefined4 tmp2;\n  undefined4 tmp3;\n  undefined4 tmp4;\n  undefined4 tmp5;\n  undefined4 tmp6;\n  undefined4 tmp7;\n  undefined4 tmp8;\n  \n  initialize_memory(&value,0,0x30);\n  value_index = 0;\n  setting1 = 0;\n  setting2 = 0;\n  output_value = 0;\n  value = check_and_find_value(input_value,&DAT_08007400);\n  if (value == 0) {\n    output_value = 0;\n  }\n  else {\n    tmp1 = 0;\n    tmp2 = 0;\n    tmp3 = 0;\n    tmp5 = 0;\n    tmp7 = 0xe0000;\n    tmp8 = 0;\n    tmp4 = 1;\n    tmp6 = 0;\n    DAT_20000080 = (undefined)input_value;\n    iVar1 = update_flags(&value);\n    if (iVar1 == 0) {\n      value_index = find_value_index(input_value);\n      if (value_index < 0x12) {\n        setting1 = 1;\n        setting2 = 2;\n        iVar1 = update_settings(&value,&value_index);\n        if (iVar1 == 0) {\n          iVar1 = check_and_update_status(&value);\n          if (iVar1 == 0) {\n            iVar1 = verify_and_set_flags(&value);\n            if (iVar1 == 0) {\n              iVar1 = calculate_return_value(&value,10);\n              if (iVar1 == 0) {\n                uVar2 = get_pointer_value(&value);\n                if ((uVar2 & 0x200) != 0) {\n                  output_value = get_value_from_offset(&value);\n                }\n                iVar1 = update_status_flags(&value);\n                if (iVar1 == 0) {\n                  iVar1 = update_status(&value);\n                  if (iVar1 != 0) {\n                    output_value = 0;\n                  }\n                }\n                else {\n                  output_value = 0;\n                }\n              }\n              else {\n                output_value = 0;\n              }\n            }\n            else {\n              output_value = 0;\n            }\n          }\n          else {\n            output_value = 0;\n          }\n        }\n        else {\n          output_value = 0;\n        }\n      }\n      else {\n        output_value = 0;\n      }\n    }\n    else {\n      output_value = 0;\n    }\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "validate_and_get_value_08004a4c",
                "param_1": "input_value",
                "local_46": "output_value",
                "local_44": "value_index",
                "local_40": "setting1",
                "local_3c": "setting2",
                "local_38": "value",
                "local_34": "tmp1",
                "local_30": "tmp2",
                "local_2c": "tmp3",
                "local_28": "tmp4",
                "local_24": "tmp5",
                "local_20": "tmp6",
                "local_1c": "tmp7",
                "local_10": "tmp8",
                "fill_memory_080061e0": "initialize_memory",
                "check_and_find_value_08004c78": "check_and_find_value",
                "update_flags_0800213c": "update_flags",
                "find_value_index_0800492c": "find_value_index",
                "update_settings_08001e48": "update_settings",
                "check_and_update_status_08002384": "check_and_update_status",
                "verify_and_set_flags_08002004": "verify_and_set_flags",
                "calculate_return_value_08001cd0": "calculate_return_value",
                "get_pointer_value_08001f80": "get_pointer_value",
                "get_value_from_offset_08001e40": "get_value_from_offset",
                "update_status_flags_08002348": "update_status_flags",
                "update_status_0800224c": "update_status"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800213c",
                "FUN_080061e0",
                "FUN_08002004",
                "FUN_08002348",
                "FUN_08001cd0",
                "FUN_0800224c",
                "FUN_0800492c",
                "FUN_08002384",
                "FUN_08001f80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_memory_permissions_08004b34",
            "code": "\nvoid initializeMemoryPermissions_08004b34(void)\n\n{\n  updateMemoryPermissions();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_memory_permissions_08004b34",
                "update_memory_permissions_08004d90": "updateMemoryPermissions"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_binary_data_08004b3c",
            "code": "\nvoid processBinaryData_08004b3c(undefined4 inputData)\n\n{\n  int iVar1;\n  uint uVar2;\n  int matchingData [17];\n  \n  matchingData[0] = check_and_find_value_08004c78(inputData,&DAT_080074b4);\n  if ((matchingData[0] != 0) &&\n     ((((iVar1 = find_match_index_08004948(inputData), iVar1 == 0 || (iVar1 == 4)) || (iVar1 == 8)) ||\n      ((iVar1 == 0xc || (iVar1 == 0x18)))))) {\n    uVar2 = find_value_index_or_fail_08004cce(inputData,&DAT_080074b4);\n    if ((uVar2 & 0x100000) == 0) {\n      update_and_check_values_080040b0(matchingData,iVar1);\n    }\n    else {\n      update_bitwise_operations_0800412c(matchingData,iVar1);\n    }\n    initialize_memory_permissions_08003ed8(matchingData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_binary_data_08004b3c",
                "param_1": "inputData",
                "local_50": "matchingData"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08003ed8",
                "FUN_0800412c",
                "FUN_08004948",
                "FUN_080040b0",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_global_variable_08004b94",
            "code": "\nvoid initializeGlobalVariable_08004b94(void)\n\n{\n  fetchGlobalVariable();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_global_variable_08004b94",
                "get_global_variable_08001cc4": "fetchGlobalVariable"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_and_accumulate_08004b9e",
            "code": "\nvoid initialize_and_accumulate_08004b9e(void)\n\n{\n  calculate_sum();\n  initialize_system();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_and_accumulate_08004b9e",
                "accumulate_sum_08001cac": "calculate_sum",
                "initialize_system_08002582": "initialize_system"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "update_register_flags_08004bb0",
            "code": "\n\n\nvoid update_register_flags_08004bb0(uint value,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 updatedValue;\n  uint bitMask;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 constantValue;\n  \n  updatedValue = update_global_variable_08004884((value << 0x18) >> 0x1c);\n  bitMask = 1 << (value & 0xf) & 0xffff;\n  constantValue = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((value - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((value == 0xf) || (value == 0x13)) || (value == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2Copy = param2;\n  param3Copy = param3;\n  update_register_08002624(updatedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "update_register_flags_08004bb0",
                "param_1": "value",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "updatedValue",
                "local_20": "bitMask",
                "local_1c": "param2Copy",
                "local_18": "param3Copy",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "set_param_value_08004c30",
            "code": "\nvoid setParamValue_08004c30(undefined4 param1,undefined2 param2,int param3,undefined4 param4)\n\n{\n  if (param3 == 0) {\n    set_param_value_0800281e(param1,param2,0,param4,param4);\n    return;\n  }\n  set_param_value_0800281e(param1,param2,1,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "set_param_value_08004c30",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "check_bit_08004c48",
            "code": "\nvoid check_bit_08004c48(undefined4 value,undefined2 index,undefined4 data,undefined4 length)\n\n{\n  check_bit_08004c48_08002810(value,index,data,length,length);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "check_bit_08004c48",
                "param_1": "value",
                "param_2": "index",
                "param_3": "data",
                "param_4": "length"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_system_08004c52",
            "code": "\nvoid initialize_system_08004c52(void)\n\n{\n  setup_data();\n  setup_microcontroller();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_system_08004c52",
                "initialize_and_update_data_08001c88": "setup_data",
                "initialize_microcontroller_08001b48": "setup_microcontroller"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_in_array_08004c5e",
            "code": "\nundefined4 find_value_in_array_08004c5e(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_in_array_08004c5e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_and_find_value_08004c78",
            "code": "\nundefined4 check_and_find_value_08004c78(int input_value)\n\n{\n  undefined4 found_value;\n  \n  if (input_value != -1) {\n    found_value = find_value_in_array_08004c5e();\n    return found_value;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_and_find_value_08004c78",
                "param_1": "input_value",
                "uVar1": "found_value"
            },
            "calling": [
                "FUN_08005384",
                "FUN_08004f4c",
                "FUN_080053d4",
                "FUN_08004a4c",
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_value_index_08004c8a",
            "code": "\nint find_value_index_08004c8a(int value,char *data)\n\n{\n  while( true ) {\n    if (*(int *)(data + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(data + 4) == value) break;\n    data = data + 0xc;\n  }\n  return (int)*data;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_value_index_08004c8a",
                "param_1": "value",
                "param_2": "data"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "find_index_if_not_zero_08004ca2",
            "code": "\nundefined4 find_index_if_not_zero_08004ca2(int input_value)\n\n{\n  undefined4 value_index;\n  \n  if (input_value != 0) {\n    value_index = find_value_index_08004c8a();\n    return value_index;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "find_index_if_not_zero_08004ca2",
                "param_1": "input_value",
                "uVar1": "value_index"
            },
            "calling": [
                "FUN_08005384",
                "FUN_08005b54"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_index_08004cb2",
            "code": "\nundefined4 find_value_index_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_index_08004cb2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "find_value_index_or_fail_08004cce",
            "code": "\nundefined4 find_value_index_or_fail_08004cce(int input_value)\n\n{\n  undefined4 value_index;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  value_index = find_value_index_08004cb2();\n  return value_index;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "find_value_index_or_fail_08004cce",
                "param_1": "input_value",
                "uVar1": "value_index"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_0800492c",
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_in_array_08004ce2",
            "code": "\nundefined4 find_value_in_array_08004ce2(int target_value,char *array)\n\n{\n  if (target_value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (target_value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_in_array_08004ce2",
                "param_1": "target_value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_non_zero_08004d06",
            "code": "\nint compareAndReturnNonZero_08004d06(int newValue4,int newValue2)\n\n{\n  if (newValue4 != newValue2) {\n    if (newValue4 == 0) {\n      return newValue2;\n    }\n    if (newValue2 == 0) {\n      return newValue4;\n    }\n    newValue4 = 0;\n  }\n  return newValue4;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_non_zero_08004d06",
                "param_1": "newValue4",
                "param_2": "newValue2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_if_not_null_08004d18",
            "code": "\nvoid executeCallbackIfNotNull_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_if_not_null_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08004d40",
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_memory_08004d44",
            "code": "\n\n\nvoid initializeMemory_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_memory_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_memory_permissions_08004d90",
            "code": "\n\n\nvoid updateMemoryPermissions_08004d90(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_memory_permissions_08004d90",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtract_four_08004df4(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackParameter)\n\n{\n  int callbackAddress;\n  \n  callbackAddress = subtract_four_08004df4();\n  if ((*(code **)(callbackAddress + 0x4c) != (code *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(code **)(callbackAddress + 0x4c))(callbackAddress,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackParameter",
                "iVar1": "callbackAddress"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_if_valid_function_08004e12",
            "code": "\nvoid executeIfValidFunction_08004e12(void)\n\n{\n  int result;\n  \n  result = getFunctionData();\n  if (*(code **)(result + 0x48) != (code *)0x0) {\n    (**(code **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_if_valid_function_08004e12",
                "iVar1": "result",
                "subtract_four_08004df4": "getFunctionData"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_process_flags_08004e20",
            "code": "\nvoid checkAndProcessFlags_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    process_flags_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_process_flags_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtractFour_08004e70(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004e74",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "initialize_function_08004e74",
            "code": "\nvoid initializeFunction_08004e74(int input1,int input2,int input3,undefined4 input4)\n\n{\n  int result;\n  \n  result = subtractFour();\n  if (input3 == *(int *)(input1 + 0xc)) {\n    if (input2 == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      checkAndInitializeA(input1,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    checkAndInitializeB(input1,result + 0x68,0x20,8,input4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "initialize_function_08004e74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "subtract_four_08004e70": "subtractFour",
                "check_and_initialize_08002af8": "checkAndInitializeA",
                "check_and_initialize_08002b84": "checkAndInitializeB"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002b84",
                "FUN_08002af8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "initialize_and_call_function_08004ec4",
            "code": "\nvoid initialize_and_call_function_08004ec4(undefined4 input_param)\n\n{\n  int result;\n  \n  result = get_function_ptr();\n  if (((*(code **)(result + 0x60) != (code *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(code **)(result + 0x60))(result + 0x68);\n  }\n  initialize_data(input_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "initialize_and_call_function_08004ec4",
                "param_1": "input_param",
                "iVar1": "result",
                "subtract_four_08004e70": "get_function_ptr",
                "initialize_data_08002c10": "initialize_data"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_08002d1c",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_initialize_data_08004ef4",
            "code": "\nvoid checkAndInitializeData_08004ef4(undefined4 data)\n\n{\n  int result;\n  \n  result = subtract_four_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    initialize_data_08002c10(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_initialize_data_08004ef4",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "configure_uart_pins_08004f4c",
            "code": "\n\n\nvoid configureUartPins_08004f4c(int *uartPins)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 updatedValue;\n  uint valueIndex;\n  uint bitMask;\n  uint bitOffset;\n  uint bitShift;\n  undefined4 constantValue;\n  \n  if (uartPins != (int *)0x0) {\n    peripheral1 = check_and_find_value_08004c78((int)*(char *)(uartPins + 0x16),&DAT_0800764c);\n    peripheral2 = check_and_find_value_08004c78((int)*(char *)((int)uartPins + 0x59),&DAT_08007604);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      initialize_and_process_game_data_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = compare_and_return_non_zero_08004d06(peripheral1);\n      *uartPins = peripheral1;\n      if (peripheral1 == 0) {\n        initialize_and_process_game_data_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartPins + 0x11) = 0;\n          *(undefined *)((int)uartPins + 0x5a) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartPins + 0x11) = 1;\n          *(undefined *)((int)uartPins + 0x5a) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartPins + 0x11) = 2;\n          *(undefined *)((int)uartPins + 0x5a) = 0x27;\n        }\n        updatedValue = update_global_variable_08004884((uint)((int)*(char *)((int)uartPins + 0x59) << 0x18) >> 0x1c);\n        valueIndex = find_value_index_or_fail_08004cce((int)*(char *)((int)uartPins + 0x59),&DAT_08007604);\n        bitMask = 1 << (*(byte *)((int)uartPins + 0x59) & 0xf) & 0xffff;\n        bitOffset = (valueIndex >> 3 & 1) << 4 | valueIndex & 7;\n        bitShift = (valueIndex << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((valueIndex << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        constantValue = 3;\n        update_register_08002624(updatedValue,&bitMask);\n        updatedValue = update_global_variable_08004884((uint)((int)*(char *)(uartPins + 0x16) << 0x18) >> 0x1c);\n        valueIndex = find_value_index_or_fail_08004cce((int)*(char *)(uartPins + 0x16),&DAT_0800764c);\n        bitMask = 1 << (*(byte *)(uartPins + 0x16) & 0xf) & 0xffff;\n        bitOffset = (valueIndex >> 3 & 1) << 4 | valueIndex & 7;\n        bitShift = (valueIndex << 0x1a) >> 0x1e;\n        update_register_08002624(updatedValue,&bitMask);\n        (&DAT_2000032c)[*(byte *)(uartPins + 0x11)] = uartPins + 1;\n        uartPins[1] = *uartPins;\n        uartPins[2] = uartPins[0x12];\n        uartPins[3] = uartPins[0x13];\n        uartPins[4] = uartPins[0x14];\n        uartPins[5] = uartPins[0x15];\n        uartPins[6] = 0xc;\n        uartPins[7] = 0;\n        uartPins[8] = 0;\n        initialize_data_struct_0800441a(uartPins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "param_1": "uartPins",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "uVar3": "updatedValue",
                "uVar4": "valueIndex",
                "local_20": "bitMask",
                "local_1c": "bitOffset",
                "local_18": "bitShift",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_080068f0",
                "FUN_08004c78",
                "FUN_0800441a",
                "FUN_08004d06",
                "FUN_08004cce",
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_uart_08005384",
            "code": "\nvoid initializeUART_08005384(void)\n\n{\n  int result;\n  undefined4 value;\n  \n  result = check_and_find_value_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    value = check_and_find_value_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = find_index_if_not_zero_08004ca2(value,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    configureUARTPins(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_uart_08005384",
                "iVar1": "result",
                "uVar2": "value",
                "configure_uart_pins_08004f4c": "configureUARTPins"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "process_data_with_limit_080053d4",
            "code": "\nuint process_data_with_limit_080053d4(undefined4 input_data,uint limit)\n\n{\n  int global_var;\n  int value_check_result;\n  uint counter;\n  \n  global_var = get_global_variable_08001cc4();\n  value_check_result = check_and_find_value_08004c78(2,&DAT_0800764c);\n  if (value_check_result == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 5 &&\n      (((&DAT_2000032c)[counter] == 0 ||\n       (value_check_result = check_and_find_value_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[counter] != value_check_result))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (4 < counter) {\n    if ((4 < DAT_200000cc) && (initialize_uart_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    counter = (uint)DAT_200000cc;\n  }\n  do {\n    value_check_result = process_data_08004478((&DAT_2000032c)[counter],input_data,limit & 0xffff,1000);\n    if (value_check_result == 0) {\n      return limit;\n    }\n    value_check_result = get_global_variable_08001cc4();\n  } while ((uint)(value_check_result - global_var) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "process_data_with_limit_080053d4",
                "param_1": "input_data",
                "param_2": "limit",
                "iVar1": "global_var",
                "iVar2": "value_check_result",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08005384",
                "FUN_08004478",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "check_combination_0800548c",
            "code": "\nbool checkCombination_0800548c(int input)\n\n{\n  uint combinedBytes;\n  \n  combinedBytes = combine_bytes_080047e8((&DAT_2000032c)[*(byte *)(input + 0x44)]);\n  return (combinedBytes & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "check_combination_0800548c",
                "param_1": "input",
                "uVar1": "combinedBytes"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_bit_set_080054b0",
            "code": "\nbool is_bit_set_080054b0(int value)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes_080047e8((&DAT_2000032c)[*(byte *)(value + 0x44)]);\n  return (combined_bytes & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_bit_set_080054b0",
                "param_1": "value",
                "uVar1": "combined_bytes"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "check_combination_and_validate_080054d4",
            "code": "\nundefined4 check_combination_and_validate_080054d4(int input_value,undefined *output_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int combination_check_result;\n  \n  if (input_value == 0) {\n    return 0xffffffff;\n  }\n  combination_check_result = check_combination_0800548c();\n  if (combination_check_result == 0) {\n    *output_data = *(undefined *)(input_value + 0x45);\n    validate_input_080045a2((&DAT_2000032c)[*(byte *)(input_value + 0x44)],input_value + 0x45,1,&DAT_2000032c,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "check_combination_and_validate_080054d4",
                "param_1": "input_value",
                "param_2": "output_data",
                "iVar1": "combination_check_result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_memory_and_validate_08005510",
            "code": "\nvoid updateMemoryAndValidate_08005510(int input,undefined4 value,undefined4 data,undefined4 flag)\n\n{\n  int result;\n  uint index;\n  \n  if (input != 0) {\n    result = check_combination_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(input + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = value;\n      *(int *)(&DAT_200002f0 + index * 4) = input;\n      update_char_in_memory_08002494((int)*(char *)(input + 0x5a),0,1,index,flag);\n      set_bit_at_position_080024f8((int)*(char *)(input + 0x5a));\n      validate_input_080045a2((&DAT_2000032c)[*(byte *)(input + 0x44)],input + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_memory_and_validate_08005510",
                "param_1": "input",
                "param_2": "value",
                "param_3": "data",
                "param_4": "flag",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_080024f8",
                "FUN_08002494",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_character_data_08005568",
            "code": "\nvoid updateCharacterData_08005568(int characterData,undefined4 newData)\n\n{\n  byte byteValue;\n  \n  if (characterData != 0) {\n    byteValue = *(byte *)(characterData + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = newData;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = characterData;\n    update_char_in_memory_08002494((int)*(char *)(characterData + 0x5a),0,2);\n    set_bit_at_position_080024f8((int)*(char *)(characterData + 0x5a));\n    initialize_data_0800455a((&DAT_2000032c)[*(byte *)(characterData + 0x44)],\n                 *(int *)(characterData + 100) + (uint)*(ushort *)(characterData + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_character_data_08005568",
                "param_1": "characterData",
                "param_2": "newData",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_0800455a",
                "FUN_080024f8",
                "FUN_08002494"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_value_index_080055bc",
            "code": "\nuint find_value_index_080055bc(int input_value)\n\n{\n  uint index;\n  \n  if (input_value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (input_value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_value_index_080055bc",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_selected_function_080055e0",
            "code": "\nvoid executeSelectedFunction_080055e0(void)\n\n{\n  uint index;\n  \n  index = findIndex();\n  if (index < 5) {\n    (**(code **)(&DAT_200002dc + index * 4))(*(undefined4 *)(&DAT_200002f0 + index * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_selected_function_080055e0",
                "uVar1": "index",
                "find_value_index_080055bc": "findIndex"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "initialize_data_from_binary_08005604",
            "code": "\nvoid initialize_data_from_binary_08005604(void)\n\n{\n  uint value_index;\n  int result;\n  int data;\n  \n  value_index = find_value_index();\n  data = *(int *)(&DAT_20000318 + value_index * 4);\n  if ((value_index < 5) && (result = (**(code **)(&DAT_20000304 + value_index * 4))(data), result != -1)) {\n    initialize_data((&DAT_2000032c)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 100) + (uint)*(ushort *)(data + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "initialize_data_from_binary_08005604",
                "uVar1": "value_index",
                "iVar2": "result",
                "iVar3": "data",
                "find_value_index_080055bc": "find_value_index",
                "initialize_data_0800455a": "initialize_data"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_0800455a",
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= endAddr) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "endAddr"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_error_code_08005714",
            "code": "\nerror_code get_error_code_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_error_code_08005714",
                "undefined4": "error_code"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "set_memory_value_0800571a",
            "code": "\nundefined4 setMemoryValue_0800571a(undefined4 source,int destination)\n\n{\n  *(undefined4 *)(destination + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "set_memory_value_0800571a",
                "param_1": "source",
                "param_2": "destination"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "check_if_one_08005724",
            "code": "\nbool checkIfOne_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "check_if_one_08005724",
                "undefined4": "bool"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_application_08005728",
            "code": "\nvoid initializeApplication_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_application_08005728",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "clear_screen_0800572c",
            "code": "\nvoid clearScreen_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "clear_screen_0800572c",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "process_data_with_limit_08005730",
            "code": "\nvoid process_data_with_limit_08005730(undefined4 limit_param,undefined4 data_param,undefined4 limit_param_1,undefined4 limit_param_2)\n\n{\n  process_data_with_limit_08005730_080053d4(data_param,limit_param_1,limit_param_1,limit_param_2,limit_param_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "process_data_with_limit_08005730",
                "param_1": "limit_param",
                "param_2": "data_param",
                "param_3": "limit_param_1",
                "param_4": "limit_param_2"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_08006ac0",
                "FUN_0800573c"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_application_08005750",
            "code": "\nundefined4 initializeApplication_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_application_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "get_validated_value_08005754",
            "code": "\nuint getValidatedValue_08005754(uint inputValue)\n\n{\n  bool isLessThan;\n  char charValue;\n  uint result;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isLessThan = true;\n    }\n    else {\n      isLessThan = false;\n    }\n  }\n  else {\n    isLessThan = inputValue < 0x3c;\n  }\n  if (isLessThan) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    charValue = (&DAT_080076f0)[inputValue];\n  }\n  else {\n    charValue = -1;\n  }\n  if (charValue == -1) {\n    result = 0;\n  }\n  else {\n    result = validate_and_get_value_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "get_validated_value_08005754",
                "param_1": "inputValue",
                "bVar1": "isLessThan",
                "cVar2": "charValue",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "process_binary_data_080057b4",
            "code": "\nvoid process_binary_data_080057b4(uint index,undefined4 flag_type,undefined4 flag_value,undefined *data)\n\n{\n  int bitwise_check_result;\n  undefined *array_ptr;\n  int array_value;\n  \n  if (index < 0x3c) {\n    array_value = (int)(char)(&DAT_080076f0)[index];\n    array_ptr = &DAT_080076f0;\n  }\n  else {\n    array_value = -1;\n    array_ptr = data;\n  }\n  if (array_value != -1) {\n    bitwise_check_result = bitwise_check_080047f4(array_value,&DAT_20000344,flag_value,array_ptr,data);\n    if (bitwise_check_result != 0) {\n      bitwise_check_result = find_value_in_array_08004ce2(array_value,&DAT_080074b4);\n      if (bitwise_check_result != 0) {\n        process_binary_data_080057b4_08004b3c(array_value);\n      }\n      update_bit_08004828(array_value,&DAT_20000344);\n    }\n    switch(flag_type) {\n    case 0:\n      update_register_flags_08004bb0(array_value,0);\n      break;\n    case 1:\n      update_register_flags_08004bb0(array_value,1,0);\n      break;\n    case 2:\n      update_register_flags_08004bb0(array_value,0,1);\n      break;\n    case 3:\n      update_register_flags_08004bb0(array_value,0,2);\n    }\n    set_bit_0800480a(array_value,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "process_binary_data_080057b4",
                "param_1": "index",
                "param_2": "flag_type",
                "param_3": "flag_value",
                "param_4": "data",
                "iVar1": "bitwise_check_result",
                "puVar2": "array_ptr",
                "iVar3": "array_value"
            },
            "calling": [
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08004828",
                "FUN_080047f4",
                "FUN_08004ce2",
                "FUN_08004bb0",
                "FUN_0800480a",
                "FUN_08004b3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "process_param_08005848",
            "code": "\nvoid processParam_08005848(uint paramIndex,undefined4 value1,undefined4 value2,undefined *paramData)\n\n{\n  int returnValue;\n  undefined4 baseAddress;\n  undefined *dataPointer;\n  uint dataValue;\n  \n  if (paramIndex < 0x3c) {\n    dataValue = (uint)(char)(&DAT_080076f0)[paramIndex];\n    dataPointer = &DAT_080076f0;\n  }\n  else {\n    dataValue = 0xffffffff;\n    dataPointer = paramData;\n  }\n  if ((dataValue != 0xffffffff) &&\n     (returnValue = bitwise_check_080047f4(dataValue,&DAT_20000358,value2,dataPointer,paramData), returnValue != 0)) {\n    baseAddress = get_base_address_08004848((dataValue << 0x18) >> 0x1c);\n    set_param_value_08004c30(baseAddress,1 << (dataValue & 0xf) & 0xffff,value1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "process_param_08005848",
                "param_1": "paramIndex",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "paramData",
                "iVar1": "returnValue",
                "uVar2": "baseAddress",
                "puVar3": "dataPointer",
                "uVar4": "dataValue"
            },
            "calling": [
                "FUN_08001310",
                "FUN_0800157c",
                "FUN_080012a2",
                "FUN_080012c0",
                "FUN_08000cd0",
                "FUN_080015b2",
                "FUN_080012e8",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_08004c30",
                "FUN_08004848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_parameter_value_08005890",
            "code": "\nchar checkParameterValue_08005890(uint parameter)\n\n{\n  char result;\n  int bitwiseCheckResult;\n  undefined4 baseAddress;\n  uint value;\n  \n  if (parameter < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[parameter];\n  }\n  else {\n    value = 0xffffffff;\n  }\n  if (value == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    bitwiseCheckResult = performBitwiseCheck(value,&DAT_20000358);\n    if (bitwiseCheckResult == 0) {\n      result = '\\0';\n    }\n    else {\n      baseAddress = retrieveBaseAddress((value << 0x18) >> 0x1c);\n      result = checkBit(baseAddress,1 << (value & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_parameter_value_08005890",
                "param_1": "parameter",
                "cVar1": "result",
                "iVar2": "bitwiseCheckResult",
                "uVar3": "baseAddress",
                "uVar4": "value",
                "bitwise_check_080047f4": "performBitwiseCheck",
                "get_base_address_08004848": "retrieveBaseAddress",
                "check_bit_08004c48": "checkBit"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004c48",
                "FUN_080047f4",
                "FUN_08004848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_global_variable_080058e0",
            "code": "\nvoid initialize_global_variable_080058e0(void)\n\n{\n  initialize_global_variable_080058e0_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_global_variable_080058e0"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08001ab0",
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_result_0800591e",
            "code": "\nushort calculateResult_0800591e(int inputValue)\n\n{\n  result (*(short *)(inputValue + 0x134) + 0x40) - *(short *)(inputValue + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_result_0800591e",
                "param_1": "inputValue",
                "return": "result"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_combination_0800598a",
            "code": "\nvoid updateCombination_0800598a(int combinationPtr)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = check_combination_and_validate_080054d4(combinationPtr,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(combinationPtr + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(combinationPtr + 0x62))) {\n    *(undefined *)(*(int *)(combinationPtr + 0x5c) + (uint)*(ushort *)(combinationPtr + 0x60)) = newValue;\n    *(ushort *)(combinationPtr + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_combination_0800598a",
                "param_1": "combinationPtr",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_data_08005a44",
            "code": "\nvoid initializeData_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_data_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "configure_serial_port_08005a68",
            "code": "\nvoid configureSerialPort_08005a68(int serialPort,undefined4 baudRate,byte config)\n\n{\n  uint extraOutput;\n  char *errorMessage;\n  byte configBits;\n  int configOption;\n  byte *bytePointer;\n  char character;\n  int memoryOffset;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = config;\n  configBits = config & 7;\n  if (configBits == 4) {\n    configOption = 7;\n  }\n  else if (configBits == 6) {\n    configOption = 8;\n  }\n  else if (configBits == 2) {\n    configOption = 6;\n  }\n  else {\n    configOption = 0;\n  }\n  if ((config & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    configOption = configOption + 1;\n  }\n  else if ((config & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    configOption = configOption + 1;\n  }\n  if ((config & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (configOption == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (configOption == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    configOption = 0;\n  }\n  if (configOption != 0) {\n    configure_uart_pins_08004f4c(serialPort + 0xd4);\n    update_memory_and_validate_08005510(serialPort + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTable = (code *)0x8005b12;\n  process_assertion_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(extraOutput + memoryOffset);\n  errorMessage[0x1e] = character;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (extraOutput < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[extraOutput];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "configure_serial_port_08005a68",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "config",
                "extraout_r1": "extraOutput",
                "pcVar1": "errorMessage",
                "bVar2": "configBits",
                "iVar3": "configOption",
                "pbVar4": "bytePointer",
                "unaff_r4": "character",
                "unaff_r6": "memoryOffset",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_firmware_version_08005b24",
            "code": "\nvoid setFirmwareVersion_08005b24(int deviceAddress,uint versionNumber)\n\n{\n  undefined firmwareVersion;\n  code *jumptable;\n  \n  if (versionNumber < 0x3c) {\n    firmwareVersion = (&DAT_080076f0)[versionNumber];\n  }\n  else {\n    firmwareVersion = 0xff;\n  }\n  *(undefined *)(deviceAddress + 0x12d) = firmwareVersion;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_firmware_version_08005b24",
                "param_1": "deviceAddress",
                "param_2": "versionNumber",
                "uVar1": "firmwareVersion",
                "UNRECOVERED_JUMPTABLE": "jumptable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "assign_byte_based_on_index_08005b3c",
            "code": "\nvoid assignByteBasedOnIndex_08005b3c(int baseAddress,uint index)\n\n{\n  undefined assignedValue;\n  \n  if (index < 0x3c) {\n    assignedValue = (&DAT_080076f0)[index];\n  }\n  else {\n    assignedValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = assignedValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "assign_byte_based_on_index_08005b3c",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "assignedValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_and_set_defaults_08005b54",
            "code": "\nundefined4 *\ninitialize_data_and_set_defaults_08005b54(undefined4 *output_array,undefined4 input_value,undefined4 firmware_param,undefined4 second_param)\n\n{\n  undefined index_value;\n  \n  output_array[1] = 0;\n  output_array[2] = 1000;\n  *output_array = &PTR_LAB_080059c8_1_08007804;\n  if (output_array == (undefined4 *)&DAT_2000036c) {\n    set_firmware_version_08005b24(&DAT_2000036c,0,firmware_param,&DAT_2000036c,second_param);\n    assign_byte_based_on_index_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    index_value = find_index_if_not_zero_08004ca2(input_value,&DAT_08007604);\n    *(undefined *)((int)output_array + 0x12d) = index_value;\n    index_value = find_index_if_not_zero_08004ca2(input_value,&DAT_0800764c);\n    *(undefined *)(output_array + 0x4b) = index_value;\n  }\n  initialize_data_08005a44(output_array);\n  return output_array;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_and_set_defaults_08005b54",
                "param_1": "output_array",
                "param_2": "input_value",
                "param_3": "firmware_param",
                "param_4": "second_param",
                "uVar1": "index_value"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08005a44",
                "FUN_08004ca2",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "initialize_data_if_param1_is_one_08005bb0",
            "code": "\nvoid initialize_data_if_param1_is_one_08005bb0(int is_one,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (is_one != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_data_and_set_defaults(&DAT_2000036c,0x40004400,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "initialize_data_if_param1_is_one_08005bb0",
                "param_1": "is_one",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "initialize_data_and_set_defaults_08005b54": "initialize_data_and_set_defaults"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *outputPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *outputPointer = &DAT_08007858;\n  *(undefined *)(outputPointer + 1) = value1;\n  *(undefined *)((int)outputPointer + 5) = value2;\n  *(undefined *)((int)outputPointer + 6) = value3;\n  *(undefined *)((int)outputPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "outputPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "initialize_data_if_condition_is_met_08005c38",
            "code": "\nvoid initialize_data_if_condition_is_met_08005c38(int input_param_1,int input_param_2)\n\n{\n  if ((input_param_1 == 1) && (input_param_2 == 0xffff)) {\n    initialize_data_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "initialize_data_if_condition_is_met_08005c38",
                "param_1": "input_param_1",
                "param_2": "input_param_2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "process_data_08005c96",
            "code": "\nundefined4 process_data_08005c96(int *data_array,int data_length,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 terminating_null_position;\n  \n  if (data_length != 0) {\n    terminating_null_position = get_terminating_null_position_08000178(data_length);\n    terminating_null_position = (**(code **)(*data_array + 4))(data_array,data_length,terminating_null_position,*(code **)(*data_array + 4),param_4);\n    return terminating_null_position;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "process_data_08005c96",
                "param_1": "data_array",
                "param_2": "data_length",
                "uVar1": "terminating_null_position"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005cd4",
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid execute_function_08005cb6(undefined4 *function_ptr)\n\n{\n  (**(code **)*function_ptr)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "function_ptr"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_callback_08005cc0",
            "code": "\nvoid executeCallback_08005cc0(int *callbackPointer,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  (**(code **)(*callbackPointer + 4))(callbackPointer,&DAT_0800786c,2,*(code **)(*callbackPointer + 4),param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_callback_08005cc0",
                "param_1": "callbackPointer"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_sum_08005cd4",
            "code": "\nint calculate_sum_08005cd4(undefined4 input_value)\n\n{\n  int data_result;\n  int callback_result;\n  \n  data_result = process_data_08005c96();\n  callback_result = execute_callback_08005cc0(input_value);\n  return callback_result + data_result;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_sum_08005cd4",
                "param_1": "input_value",
                "iVar1": "data_result",
                "iVar2": "callback_result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_base_08005ce8",
            "code": "\nundefined4 convertBase_08005ce8(int *input,uint number,uint base)\n\n{\n  char digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *output;\n  char buffer [9];\n  \n  buffer[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  output = buffer + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    output = output + -1;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit = digit + '0';\n    }\n    else {\n      digit = digit + '7';\n    }\n    *output = digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (output == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = get_terminating_null_position_08000178(output);\n    result = (**(code **)(*input + 4))(input,output,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_base_08005ce8",
                "param_1": "input",
                "param_2": "number",
                "param_3": "base",
                "cVar1": "digit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "output",
                "local_15": "buffer"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "convert_number_base_08005d42",
            "code": "\nint convertNumberBase_08005d42(undefined4 *arrayPtr,uint number,uint base)\n\n{\n  int result;\n  int negativeResult;\n  \n  if (base == 0) {\n    result = (**(code **)*arrayPtr)(arrayPtr,number & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = convert_base_08005ce8(arrayPtr,number,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)number) {\n    result = convert_base_08005ce8(arrayPtr,number,10);\n    return result;\n  }\n  result = execute_function_08005cb6(arrayPtr,0x2d);\n  negativeResult = convert_base_08005ce8(arrayPtr,-number,10);\n  return negativeResult + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "convert_number_base_08005d42",
                "param_1": "arrayPtr",
                "param_2": "number",
                "param_3": "base",
                "iVar1": "result",
                "iVar2": "negativeResult"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "convert_number_base_08005d82",
            "code": "\nvoid convert_number_base_08005d82(void)\n\n{\n  dec_to_bin();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "convert_number_base_08005d82",
                "convert_number_base_08005d42": "dec_to_bin"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "convert_or_execute_08005d8a",
            "code": "\nvoid convert_or_execute_08005d8a(undefined4 *function_ptr,uint param_size,uint flag,undefined4 additional_param)\n\n{\n  if (flag != 0) {\n    convert_base(function_ptr,param_size,flag & 0xff);\n    return;\n  }\n  (**(code **)*function_ptr)(function_ptr,param_size & 0xff,0,*(code **)*function_ptr,additional_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "convert_or_execute_08005d8a",
                "param_1": "function_ptr",
                "param_2": "param_size",
                "param_3": "flag",
                "param_4": "additional_param",
                "convert_base_08005ce8": "convert_base"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "process_data_08005da8",
            "code": "\nint processData_08005da8(undefined4 param1,undefined4 param2,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 tempVar1;\n  int tempVar2;\n  byte counter;\n  undefined8 doubleResult;\n  undefined8 concatenatedResult;\n  \n  result = check_params_08000a2c(param3,param4,param3,param4);\n  if (result == 0) {\n    result = check_params_08000a2c(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = is_data_valid_080009f0(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = process_data_08005c96(param1,&DAT_08007860);\n    }\n    else {\n      result = check_if_data_valid_08000a18(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = is_data_valid_080009dc(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = is_data_valid_080009dc(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = execute_function_08005cb6(param1,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          doubleResult = 0x3fe0000000000000;\n          for (counter = 0; tempVar1 = (undefined4)((ulonglong)doubleResult >> 0x20), counter < param5;\n              counter = counter + 1) {\n            doubleResult = calculate_double_0800074c((int)doubleResult,tempVar1,0,0x40240000);\n          }\n          doubleResult = calculate_sum_08000194(param3,param4,(int)doubleResult,tempVar1);\n          tempVar1 = calculate_shift_amount_08000aa8();\n          concatenatedResult = bitwise_shift_and_concatenate_0800040c();\n          doubleResult = perform_calculation_08000190((int)doubleResult,(int)((ulonglong)doubleResult >> 0x20),(int)concatenatedResult,\n                               (int)((ulonglong)concatenatedResult >> 0x20));\n          tempVar2 = convert_or_execute_08005d8a(param1,tempVar1,10);\n          result = result + tempVar2;\n          if (param5 != 0) {\n            tempVar2 = process_data_08005c96(param1,&DAT_08007868);\n            result = result + tempVar2;\n          }\n          while (param5 != 0) {\n            doubleResult = calculate_product_080004f8((int)doubleResult,(int)((ulonglong)doubleResult >> 0x20),0,0x40240000);\n            tempVar1 = calculate_unsigned_value_08000a58();\n            tempVar2 = convert_number_base_08005d82(param1,tempVar1,10);\n            result = result + tempVar2;\n            concatenatedResult = shift_and_concat_0800042c(tempVar1);\n            doubleResult = perform_calculation_08000190((int)doubleResult,(int)((ulonglong)doubleResult >> 0x20),(int)concatenatedResult,\n                                 (int)((ulonglong)concatenatedResult >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = process_data_08005c96(param1,&DAT_08007864);\n        }\n      }\n      else {\n        result = process_data_08005c96(param1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = process_data_08005c96(param1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "process_data_08005da8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "iVar3": "tempVar2",
                "bVar4": "counter",
                "uVar5": "doubleResult",
                "uVar6": "concatenatedResult"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08005d8a",
                "FUN_08005cb6",
                "FUN_0800074c",
                "FUN_080009dc",
                "FUN_08005d82",
                "FUN_08000a58",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_08005c96",
                "FUN_08000a2c",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_080009f0",
                "FUN_08000aa8",
                "FUN_08000190",
                "FUN_0800042c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "process_data_08005f2c",
            "code": "\nvoid process_data_08005f2c(void)\n\n{\n  process_data_08005f2c_helper();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "process_data_08005f2c",
                "process_data_08005da8": "process_data_helper"
            },
            "calling": [
                "FUN_08005f40",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_and_add_08005f40",
            "code": "\nint calculate_and_add_08005f40(undefined4 input)\n\n{\n  int data_processing_result;\n  int callback_result;\n  \n  data_processing_result = process_data_08005f2c();\n  callback_result = execute_callback_08005cc0(input);\n  return callback_result + data_processing_result;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_and_add_08005f40",
                "param_1": "input",
                "iVar1": "data_processing_result",
                "iVar2": "callback_result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005f2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_system_and_update_data_08005f5e",
            "code": "\nvoid initialize_system_and_update_data_08005f5e(void)\n\n{\n  update_data_value(3);\n  initialize_system();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_system_and_update_data_08005f5e",
                "update_data_value_08002470": "update_data_value",
                "initialize_system_08001c32": "initialize_system"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "continuous_system_update_08005f6c",
            "code": "\nvoid continuous_system_update_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  initialize_oven_system();\n  do {\n    update_system();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "continuous_system_update_08005f6c",
                "initialize_oven_system_08000bcc": "initialize_oven_system",
                "update_system_08000cd0": "update_system"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005a18",
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint number)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "number",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_parameters_08005fc8",
            "code": "\nvoid initializeParameters_08005fc8(int menuOption,int paramValue,undefined4 param3,undefined4 param4)\n\n{\n  if (menuOption != 1) {\n    return;\n  }\n  if (paramValue == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    shift_parameters_to_long_08006112(0,&LAB_08005fa0_1,&DAT_20000000,&DAT_200004b8,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_parameters_08005fc8",
                "param_1": "menuOption",
                "param_2": "paramValue",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "process_or_loop_080060d4",
            "code": "\nvoid processOrLoop_080060d4(int input)\n\n{\n  int count;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  process_and_loop_08007090();\n  count = count_set_bits_08005f8c();\n  if ((&DAT_200004c4)[count * 5] != 0) {\n    processOrLoop_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "process_or_loop_080060d4",
                "param_1": "input",
                "iVar1": "count"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_process_if_set_bits_exist_080060e4",
            "code": "\nvoid checkAndProcessIfSetBitsExist_080060e4(void)\n\n{\n  int numSetBits;\n  \n  numSetBits = countSetBits();\n  if ((&DAT_200004c4)[numSetBits * 5] != 0) {\n    processOrLoop();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_process_if_set_bits_exist_080060e4",
                "iVar1": "numSetBits",
                "count_set_bits_08005f8c": "countSetBits",
                "process_or_loop_080060d4": "processOrLoop"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "shift_parameters_to_long_08006112",
            "code": "\nvoid shiftParametersToLong_08006112(undefined4 destination,undefined4 source)\n\n{\n  shift_param_to_long_08006158(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "shift_parameters_to_long_08006112",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "process_assertion_0800611c",
            "code": "\nvoid processAssertion_0800611c(undefined4 file,undefined4 line,char *assertion,undefined4 function)\n\n{\n  undefined4 filePtr;\n  char *extraInfo;\n  undefined8 result;\n  undefined4 functionPtr;\n  \n  filePtr = *(undefined4 *)(DAT_200000f8 + 0xc);\n  functionPtr = function;\n  if (assertion == (char *)0x0) goto LAB_08006140;\n  extraInfo = \", function: \";\n  do {\n    process_game_08006174(filePtr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,extraInfo,assertion,functionPtr);\n    result = process_and_loop_08006ac0();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePtr = (undefined4)result;\nLAB_08006140:\n    assertion = \"\";\n    extraInfo = assertion;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "process_assertion_0800611c",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertion",
                "param_4": "function",
                "uVar1": "filePtr",
                "pcVar2": "extraInfo",
                "uVar3": "result",
                "uVar4": "functionPtr"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_param_to_long_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftParamToLong_08006158(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_param_to_long_08006158",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "process_game_08006174",
            "code": "\nvoid processGame_08006174(undefined4 gameParam1,undefined4 gameParam2,undefined4 gameParam3,undefined4 gameParam4)\n\n{\n  undefined4 localVar1;\n  undefined4 localVar2;\n  \n  localVar1 = gameParam3;\n  localVar2 = gameParam4;\n  process_game_data_08006394(DAT_200000f8,gameParam1,gameParam2,&localVar1,gameParam1,&localVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "process_game_08006174",
                "param_1": "gameParam1",
                "param_2": "gameParam2",
                "param_3": "gameParam3",
                "param_4": "gameParam4",
                "uStack_8": "localVar1",
                "uStack_4": "localVar2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08007328",
                "FUN_08005f5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_080061e0",
            "code": "\nvoid fillMemory_080061e0(undefined *memory,undefined value,int size)\n\n{\n  undefined *endAddress;\n  \n  endAddress = memory + size;\n  for (; memory != endAddress; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_080061e0",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08006c88",
                "FUN_08006c40",
                "FUN_08006d14",
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "process_data_080061f0",
            "code": "\nvoid processData_080061f0(undefined4 *output,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **extraOutput;\n  int **pointer1;\n  int **pointer2;\n  int *pointer3;\n  int **pointer4;\n  int **pointer5;\n  \n  if (size == 0) {\n    return;\n  }\n  pointer5 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    pointer5 = (int **)((int)pointer5 + *(int *)(size + -4));\n  }\n  FUNC_08006eac();\n  pointer2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    pointer5[1] = (int *)0x0;\n    pointer1 = extraOutput;\n    DAT_200005f8 = pointer5;\n  }\n  else {\n    pointer2 = DAT_200005f8;\n    if (pointer5 < DAT_200005f8) {\n      pointer1 = (int **)*pointer5;\n      pointer2 = (int **)((int)pointer5 + (int)pointer1);\n      if (DAT_200005f8 == pointer2) {\n        pointer3 = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        pointer2 = (int **)((int)pointer3 + (int)pointer1);\n        *pointer5 = (int *)pointer2;\n      }\n      pointer5[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = pointer5;\n    }\n    else {\n      do {\n        pointer4 = pointer2;\n        pointer2 = (int **)pointer4[1];\n        if (pointer2 == (int **)0x0) break;\n      } while (pointer2 <= pointer5);\n      pointer1 = (int **)*pointer4;\n      if ((int **)((int)pointer4 + (int)pointer1) == pointer5) {\n        pointer1 = (int **)((int)pointer1 + (int)*pointer5);\n        *pointer4 = (int *)pointer1;\n        if (pointer2 == (int **)((int)pointer4 + (int)pointer1)) {\n          pointer3 = *pointer2;\n          pointer2 = (int **)pointer2[1];\n          pointer1 = (int **)((int)pointer1 + (int)pointer3);\n          *pointer4 = (int *)pointer1;\n          pointer4[1] = (int *)pointer2;\n        }\n      }\n      else if (pointer5 < (int **)((int)pointer4 + (int)pointer1)) {\n        *output = 0xc;\n      }\n      else {\n        pointer1 = (int **)((int)pointer5 + (int)*pointer5);\n        if (pointer2 == pointer1) {\n          pointer3 = *pointer2;\n          pointer2 = (int **)pointer2[1];\n          pointer1 = (int **)((int)pointer3 + (int)*pointer5);\n          *pointer5 = (int *)pointer1;\n        }\n        pointer5[1] = (int *)pointer2;\n        pointer4[1] = (int *)pointer5;\n      }\n    }\n  }\n  FUNC_08006eae(output,pointer1,pointer2,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "process_data_080061f0",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "extraOutput",
                "ppiVar1": "pointer1",
                "ppiVar2": "pointer2",
                "piVar3": "pointer3",
                "ppiVar4": "pointer4",
                "ppiVar5": "pointer5"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eae",
                "FUN_08006eac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_08006288",
            "code": "\nuint allocate_memory_08006288(undefined4 *result_ptr,uint size)\n\n{\n  uint *current_chunk;\n  int chunk_diff;\n  uint *next_chunk;\n  uint remaining_space;\n  uint *previous_chunk;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *result_ptr = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_chunk = DAT_200005f8;\n    previous_chunk = DAT_200005f8;\n    while (next_chunk = current_chunk, next_chunk != (uint *)0x0) {\n      remaining_space = *next_chunk - aligned_size;\n      if (-1 < (int)remaining_space) {\n        if (remaining_space < 0xc) {\n          if (previous_chunk == next_chunk) {\n            current_chunk = (uint *)previous_chunk[1];\n            DAT_200005f8 = current_chunk;\n          }\n          else {\n            current_chunk = (uint *)next_chunk[1];\n          }\n          if (previous_chunk != next_chunk) {\n            previous_chunk[1] = (uint)current_chunk;\n            previous_chunk = next_chunk;\n          }\n        }\n        else {\n          *next_chunk = remaining_space;\n          *(uint *)((int)next_chunk + remaining_space) = aligned_size;\n          previous_chunk = (uint *)((int)next_chunk + remaining_space);\n        }\n        goto LAB_080062ec;\n      }\n      previous_chunk = next_chunk;\n      current_chunk = (uint *)next_chunk[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = initialize_memory_08006920(result_ptr);\n    }\n    current_chunk = (uint *)initialize_memory_08006920(result_ptr,aligned_size);\n    if ((current_chunk != (uint *)0xffffffff) &&\n       ((previous_chunk = (uint *)((int)current_chunk + 3U & 0xfffffffc), current_chunk == previous_chunk ||\n        (chunk_diff = initialize_memory_08006920(result_ptr,(int)previous_chunk - (int)current_chunk), chunk_diff != -1)))) {\n      *previous_chunk = aligned_size;\nLAB_080062ec:\n      FUNC_08006eae(result_ptr);\n      aligned_size = (int)previous_chunk + 0xbU & 0xfffffff8;\n      chunk_diff = aligned_size - (int)(previous_chunk + 1);\n      if (chunk_diff != 0) {\n        *(int *)((int)previous_chunk + chunk_diff) = -chunk_diff;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *result_ptr = 0xc;\n    FUNC_08006eae(result_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "result_ptr",
                "param_2": "size",
                "puVar1": "current_chunk",
                "iVar2": "chunk_diff",
                "puVar3": "next_chunk",
                "uVar4": "remaining_space",
                "puVar5": "previous_chunk",
                "uVar6": "aligned_size"
            },
            "calling": [
                "FUN_08006c88",
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08006eae",
                "FUN_08006eac",
                "FUN_08006920"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_byte_08006344",
            "code": "\nuint process_byte_08006344(int game_data,byte byte_value,byte **byte_array)\n\n{\n  int temp_var_1;\n  byte *temp_var_2;\n  byte *temp_var_3;\n  uint result;\n  \n  temp_var_2 = byte_array[2] + -1;\n  byte_array[2] = temp_var_2;\n  if ((-1 < (int)temp_var_2) ||\n     (((int)byte_array[6] <= (int)temp_var_2 && (temp_var_2 = (byte *)(uint)byte_value, temp_var_2 != (byte *)0xa))))\n  {\n    temp_var_2 = *byte_array;\n    *byte_array = temp_var_2 + 1;\n    *temp_var_2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((game_data != 0) && (*(int *)(game_data + 0x18) == 0)) {\n    initialize_game_data_08006cb4();\n  }\n  if (byte_array == (byte **)&DAT_08007904) {\n    byte_array = *(byte ***)(game_data + 4);\n  }\n  else if (byte_array == (byte **)&DAT_08007924) {\n    byte_array = *(byte ***)(game_data + 8);\n  }\n  else if (byte_array == (byte **)&DAT_080078e4) {\n    byte_array = *(byte ***)(game_data + 0xc);\n  }\n  byte_array[2] = byte_array[6];\n  temp_var_3 = (byte *)(uint)*(ushort *)(byte_array + 3);\n  temp_var_1 = (int)temp_var_3 << 0x1c;\n  if (((temp_var_1 < 0) && (temp_var_3 = byte_array[4], temp_var_3 != (byte *)0x0)) ||\n     (temp_var_1 = process_data_080069e4(game_data,byte_array,temp_var_1,temp_var_3,temp_var_2), temp_var_1 == 0)) {\n    result = (uint)byte_value;\n    temp_var_1 = (int)*byte_array - (int)byte_array[4];\n    if ((temp_var_1 < (int)byte_array[5]) || (temp_var_1 = process_data_08006be0(game_data,byte_array), temp_var_1 == 0)) {\n      byte_array[2] = byte_array[2] + -1;\n      temp_var_2 = *byte_array;\n      *byte_array = temp_var_2 + 1;\n      *temp_var_2 = byte_value;\n      if ((byte *)(temp_var_1 + 1) != byte_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(byte_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var_1 = process_data_08006be0(game_data,byte_array);\n      if (temp_var_1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_byte_08006344",
                "param_1": "game_data",
                "param_2": "byte_value",
                "param_3": "byte_array",
                "iVar1": "temp_var_1",
                "pbVar2": "temp_var_2",
                "pbVar3": "temp_var_3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_080069e4",
                "FUN_08006cb4",
                "FUN_08006be0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_and_increment_bytes_08006370",
            "code": "\nint process_and_increment_bytes_08006370(undefined4 input_1,undefined4 input_2,undefined *byte_array,int array_length)\n\n{\n  int result;\n  undefined *end_of_array;\n  int current_index;\n  \n  end_of_array = byte_array + array_length;\n  current_index = array_length;\n  do {\n    if (byte_array == end_of_array) {\n      return 0;\n    }\n    result = process_byte_08006344(input_1,*byte_array,input_2,array_length,current_index);\n    array_length = result + 1;\n    byte_array = byte_array + 1;\n  } while (array_length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_and_increment_bytes_08006370",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "byte_array",
                "param_4": "array_length",
                "iVar1": "result",
                "puVar2": "end_of_array",
                "iVar3": "current_index"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "process_game_data_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint processGameData_08006394(int gameData,undefined4 *dataPointer,byte *byteArray,int *outputSize)\n\n{\n  int result;\n  int *outputPtr;\n  bool foundDigit;\n  byte *currentByte;\n  byte *nextByte;\n  int tempVar1;\n  int tempVar2;\n  int *outputPtr;\n  uint flags;\n  int intParam1;\n  undefined4 intParam2;\n  int intParam3;\n  int totalOutputSize;\n  byte charValue;\n  undefined char1;\n  undefined char2;\n  undefined charFlag;\n  undefined4 tempVar3;\n  \n  outputPtr = outputSize;\n  if ((gameData != 0) && (*(int *)(gameData + 0x18) == 0)) {\n    initialize_game_data_08006cb4();\n  }\n  if (dataPointer == &DAT_08007904) {\n    dataPointer = *(undefined4 **)(gameData + 4);\n  }\n  else if (dataPointer == (undefined4 *)&DAT_08007924) {\n    dataPointer = *(undefined4 **)(gameData + 8);\n  }\n  else if (dataPointer == (undefined4 *)&DAT_080078e4) {\n    dataPointer = *(undefined4 **)(gameData + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(dataPointer + 3) << 0x1c)) || (dataPointer[4] == 0)) &&\n     (tempVar2 = process_data_080069e4(gameData,dataPointer), tempVar2 != 0)) {\n    return -1;\n  }\n  totalOutputSize = 0;\n  char1 = 0x20;\n  char2 = 0x30;\n  currentByte = byteArray;\nLAB_080063d6:\n  nextByte = currentByte;\n  if (*nextByte != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  currentByte = nextByte + 1;\n  if (*nextByte != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  tempVar2 = (int)nextByte - (int)byteArray;\n  if (tempVar2 != 0) {\n    result = process_and_increment_bytes_08006370(gameData,dataPointer,byteArray,tempVar2);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(dataPointer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalOutputSize;\n    }\n    totalOutputSize = totalOutputSize + tempVar2;\n  }\n  if (*nextByte == 0) goto LAB_08006580;\n  flags = 0;\n  intParam3 = 0;\n  intParam1 = -1;\n  intParam2 = 0;\n  charFlag = 0;\n  tempVar3 = 0;\n  currentByte = nextByte + 1;\n  while( true ) {\n    tempVar2 = find_character_index_08006e90(\"#-0+ \",*currentByte);\n    byteArray = currentByte + 1;\n    if (tempVar2 == 0) break;\n    flags = 1 << (tempVar2 + 0xf7ff8750U & 0xff) | flags;\n    currentByte = byteArray;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    charFlag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    charFlag = 0x2b;\n  }\n  if (*currentByte == 0x2a) {\n    outputPtr = outputPtr + 1;\n    tempVar2 = *outputPtr;\n    outputPtr = outputPtr;\n    if (tempVar2 < 0) {\n      intParam3 = -tempVar2;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    foundDigit = false;\n    tempVar2 = intParam3;\n    byteArray = currentByte;\n    while( true ) {\n      if (9 < *byteArray - 0x30) break;\n      tempVar2 = tempVar2 * 10 + (*byteArray - 0x30);\n      foundDigit = true;\n      byteArray = byteArray + 1;\n    }\n    if (!foundDigit) goto LAB_080064be;\n  }\n  intParam3 = tempVar2;\nLAB_080064be:\n  if (*byteArray == 0x2e) {\n    if (byteArray[1] == 0x2a) {\n      byteArray = byteArray + 2;\n      outputPtr = outputPtr + 1;\n      intParam1 = *outputPtr;\n      outputPtr = outputPtr;\n      if (intParam1 < 0) {\n        intParam1 = -1;\n      }\n    }\n    else {\n      foundDigit = false;\n      tempVar2 = 0;\n      intParam1 = 0;\n      while( true ) {\n        byteArray = byteArray + 1;\n        if (9 < *byteArray - 0x30) break;\n        tempVar2 = tempVar2 * 10 + (*byteArray - 0x30);\n        foundDigit = true;\n      }\n      if (foundDigit) {\n        intParam1 = tempVar2;\n      }\n    }\n  }\n  tempVar2 = find_character_index_08006e90(&DAT_080078b6,*byteArray,3);\n  if (tempVar2 != 0) {\n    byteArray = byteArray + 1;\n    flags = flags | 0x40 << (tempVar2 + 0xf7ff874aU & 0xff);\n  }\n  charValue = *byteArray;\n  byteArray = byteArray + 1;\n  tempVar2 = find_character_index_08006e90(\"efgEFG\",charValue,6);\n  if (tempVar2 == 0) {\n    tempVar1 = decode_and_process_data_080066b0(gameData,&flags,dataPointer,0x8006371,&outputPtr);\n    if (tempVar1 == -1) goto LAB_08006580;\n  }\n  else {\n    outputPtr = (int *)(((int)outputPtr + 7U & 0xfffffff8) + 8);\n  }\n  totalOutputSize = totalOutputSize + tempVar1;\n  currentByte = byteArray;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "process_game_data_08006394",
                "param_1": "gameData",
                "param_2": "dataPointer",
                "param_3": "byteArray",
                "param_4": "outputSize",
                "iVar1": "result",
                "piVar2": "outputPtr",
                "bVar3": "foundDigit",
                "pbVar4": "currentByte",
                "pbVar5": "nextByte",
                "unaff_r9": "tempVar1",
                "iVar6": "tempVar2",
                "local_8c": "outputPtr",
                "local_88": "flags",
                "local_84": "intParam1",
                "local_80": "intParam2",
                "local_7c": "intParam3",
                "local_74": "totalOutputSize",
                "local_70": "charValue",
                "local_6f": "char1",
                "local_6e": "char2",
                "local_45": "charFlag",
                "local_30": "tempVar3"
            },
            "calling": [
                "FUN_080068f0",
                "FUN_08006174"
            ],
            "called": [
                "FUN_080069e4",
                "FUN_08006370",
                "FUN_08006e90",
                "FUN_080066b0",
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocessData_080065c0(undefined4 input,uint *data,uint *result,undefined4 param4,code *callback)\n\n{\n  int index;\n  int returnValue;\n  uint maxValue;\n  uint newValue;\n  bool isConditionMet;\n  \n  maxValue = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxValue = data[2];\n  }\n  *result = maxValue;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *result = maxValue + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *result = *result + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *result); index = index + 1) {\n      returnValue = (*callback)(input,param4,(int)data + 0x19,1);\n      if (returnValue == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)data + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  newValue = maxValue;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxValue + 0x43) = 0x30;\n    newValue = maxValue + 2;\n    *(undefined *)((int)data + maxValue + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param4,(int)data + 0x43,newValue);\n  if (index != -1) {\n    maxValue = data[3];\n    isConditionMet = (*data & 6) != 4;\n    if (isConditionMet) {\n      maxValue = 0;\n    }\n    newValue = 0;\n    if (!isConditionMet) {\n      maxValue = maxValue - *result;\n    }\n    if (!isConditionMet) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxValue = maxValue + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (maxValue == newValue) {\n        return 0;\n      }\n      index = (*callback)(input,param4,(int)data + 0x1a,1);\n      if (index == -1) break;\n      newValue = newValue + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "result",
                "param_4": "param4",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "returnValue",
                "uVar3": "maxValue",
                "uVar4": "newValue",
                "bVar5": "isConditionMet"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "decode_and_process_data_080066b0",
            "code": "\nuint decode_and_process_data_080066b0(undefined4 input_param,uint *data_array,undefined4 param,code *callback_func,uint **output_param)\n\n{\n  byte byte_val;\n  int index;\n  uint *ptr;\n  int inner_index;\n  char *char_ptr;\n  uint temp_var1;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint temp_var2;\n  uint temp_var3;\n  char *char_ptr1;\n  char *char_ptr2;\n  uint local_array [2];\n  \n  byte_val = *(byte *)(data_array + 6);\n  char_ptr2 = (char *)((int)data_array + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_0800686a;\n          if (byte_val != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)data_array + 0x45) = 0x58;\n          char_ptr = \"0123456789ABCDEF\";\nLAB_080067fa:\n          temp_var1 = *data_array;\n          ptr = *output_param;\n          *output_param = ptr + 1;\n          if (((temp_var1 & 0x80) == 0) && ((int)(temp_var1 << 0x19) < 0)) {\n            temp_var2 = (uint)*(ushort *)ptr;\n          }\n          else {\n            temp_var2 = *ptr;\n          }\n          if ((int)(temp_var1 << 0x1f) < 0) {\n            *data_array = temp_var1 | 0x20;\n          }\n          if (temp_var2 == 0) {\n            *data_array = *data_array & 0xffffffdf;\n          }\n          temp_var1 = 0x10;\nLAB_08006790:\n          *(undefined *)((int)data_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_080066e0;\n          temp_var2 = *data_array;\n          ptr = *output_param;\n          if ((temp_var2 & 0x80) == 0) {\n            *output_param = ptr + 1;\n            if ((temp_var2 & 0x40) == 0) goto LAB_08006700;\n            temp_var2 = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output_param = ptr + 1;\nLAB_08006700:\n            temp_var2 = *ptr;\n          }\n          if ((int)temp_var2 < 0) {\n            temp_var2 = -temp_var2;\n            *(undefined *)((int)data_array + 0x43) = 0x2d;\n          }\n          char_ptr = \"0123456789ABCDEF\";\n          temp_var1 = 10;\n        }\n        temp_var3 = data_array[1];\n        data_array[2] = temp_var3;\n        char_ptr1 = char_ptr2;\n        if ((int)temp_var3 < 0) {\n          if (temp_var2 != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)data_array + 0x42) = *char_ptr;\n          char_ptr1 = (char *)((int)data_array + 0x42);\n        }\n        else {\n          *data_array = *data_array & 0xfffffffb;\n          if (temp_var2 == 0) {\n            if (temp_var3 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              temp_var3 = temp_var2 / temp_var1;\n              char_ptr1 = char_ptr1 + -1;\n              *char_ptr1 = char_ptr[temp_var2 - temp_var1 * temp_var3];\n              temp_var2 = temp_var3;\n            } while (temp_var3 != 0);\n          }\n        }\n        if (((temp_var1 == 8) && ((int)(*data_array << 0x1f) < 0)) && ((int)data_array[1] <= (int)data_array[4]))\n        {\n          char_ptr1[-1] = '0';\n          char_ptr1 = char_ptr1 + -1;\n        }\n        data_array[4] = (int)char_ptr2 - (int)char_ptr1;\n        char_ptr2 = char_ptr1;\n        goto LAB_080067d6;\n      }\n      ptr = *output_param;\n      *output_param = ptr + 1;\n      *(char *)((int)data_array + 0x42) = (char)*ptr;\nLAB_08006740:\n      char_ptr2 = (char *)((int)data_array + 0x42);\n      temp_var2 = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_08006766:\n            temp_var2 = *data_array;\n            ptr = *output_param;\n            if ((temp_var2 & 0x80) == 0) {\n              *output_param = ptr + 1;\n              if ((temp_var2 & 0x40) == 0) goto LAB_08006774;\n              temp_var2 = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output_param = ptr + 1;\nLAB_08006774:\n              temp_var2 = *ptr;\n            }\n            if (byte_val == 0x6f) {\n              temp_var1 = 8;\n            }\n            else {\n              temp_var1 = 10;\n            }\n            char_ptr = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_val == 0x70) {\n            *data_array = *data_array | 0x20;\nLAB_08006726:\n            char_ptr = \"0123456789abcdef\";\n            *(undefined *)((int)data_array + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_08006766;\n          if (byte_val == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)data_array + 0x42) = byte_val;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*output_param;\n      *output_param = (uint *)(ppcVar8 + 1);\n      char_ptr2 = *ppcVar8;\n      index = find_character_index_08006e90(char_ptr2,0,data_array[1]);\n      if (index != 0) {\n        data_array[1] = index - (int)char_ptr2;\n      }\n      temp_var2 = data_array[1];\n    }\n    data_array[4] = temp_var2;\n    *(undefined *)((int)data_array + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  temp_var2 = *data_array;\n  ppuVar7 = (uint **)*output_param;\n  temp_var1 = data_array[5];\n  if ((temp_var2 & 0x80) == 0) {\n    *output_param = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((temp_var2 & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)temp_var1;\n  }\n  else {\n    *output_param = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08006856:\n    *ptr = temp_var1;\n  }\nLAB_0800686a:\n  data_array[4] = 0;\nLAB_080067d6:\n  index = process_data_080065c0(input_param,data_array,local_array,param,callback_func);\n  if ((index == -1) || (index = (*callback_func)(input_param,param,char_ptr2,data_array[4]), index == -1)) {\nLAB_080067ea:\n    temp_var2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data_array << 0x1e) < 0) {\n      for (index = 0; index < (int)(data_array[3] - local_array[0]); index = index + 1) {\n        inner_index = (*callback_func)(input_param,param,(int)data_array + 0x19,1);\n        if (inner_index == -1) goto LAB_080067ea;\n      }\n    }\n    temp_var2 = data_array[3];\n    if ((int)data_array[3] < (int)local_array[0]) {\n      temp_var2 = local_array[0];\n    }\n  }\n  return temp_var2;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "decode_and_process_data_080066b0",
                "param_1": "input_param",
                "param_2": "data_array",
                "param_3": "param",
                "param_4": "callback_func",
                "param_5": "output_param",
                "bVar1": "byte_val",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "inner_index",
                "pcVar5": "char_ptr",
                "uVar6": "temp_var1",
                "uVar9": "temp_var2",
                "uVar10": "temp_var3",
                "pcVar11": "char_ptr1",
                "pcVar12": "char_ptr2",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e90",
                "FUN_080065c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_and_process_game_data_080068f0",
            "code": "\nvoid initializeAndProcessGameData_080068f0(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int gameDataAddress;\n  undefined4 tempVar;\n  undefined4 tempStackVar1;\n  undefined4 tempStackVar2;\n  undefined4 tempStackVar3;\n  \n  gameDataAddress = DAT_200000f8;\n  tempVar = param1;\n  tempStackVar1 = param2;\n  tempStackVar2 = param3;\n  tempStackVar3 = param4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize_game_data_08006cb4(DAT_200000f8);\n  }\n  process_game_data_08006394(gameDataAddress,*(undefined4 *)(gameDataAddress + 8),param1,&tempStackVar1,tempVar,&tempStackVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_and_process_game_data_080068f0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "gameDataAddress",
                "uVar2": "tempVar",
                "uStack_c": "tempStackVar1",
                "uStack_8": "tempStackVar2",
                "uStack_4": "tempStackVar3"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "initialize_memory_08006920",
            "code": "\nvoid initializeMemory_08006920(int *outputPointer,undefined4 inputValue)\n\n{\n  int allocationResult;\n  \n  DAT_200006a4 = 0;\n  allocationResult = allocate_memory_080056d8(inputValue);\n  if ((allocationResult == -1) && (DAT_200006a4 != 0)) {\n    *outputPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "initialize_memory_08006920",
                "param_1": "outputPointer",
                "param_2": "inputValue",
                "iVar1": "allocationResult"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "process_data_080069e4",
            "code": "\nuint process_data_080069e4(undefined4 *output_buffer,undefined4 *input_buffer)\n\n{\n  int base_address;\n  uint result;\n  ushort input_buffer_value;\n  \n  base_address = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize_game_data_08006cb4(DAT_200000f8);\n  }\n  if (input_buffer == &DAT_08007904) {\n    input_buffer = *(undefined4 **)(base_address + 4);\n  }\n  else if (input_buffer == (undefined4 *)&DAT_08007924) {\n    input_buffer = *(undefined4 **)(base_address + 8);\n  }\n  else if (input_buffer == (undefined4 *)&DAT_080078e4) {\n    input_buffer = *(undefined4 **)(base_address + 0xc);\n  }\n  input_buffer_value = *(ushort *)(input_buffer + 3);\n  result = (uint)input_buffer_value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_buffer = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_buffer[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_buffer[0xd] != input_buffer + 0x11) {\n          process_data_080069e4_080061f0(output_buffer);\n        }\n        input_buffer[0xd] = 0;\n      }\n      *(ushort *)(input_buffer + 3) = *(ushort *)(input_buffer + 3) & 0xffdb;\n      input_buffer[1] = 0;\n      *input_buffer = input_buffer[4];\n    }\n    *(ushort *)(input_buffer + 3) = *(ushort *)(input_buffer + 3) | 8;\n  }\n  if ((input_buffer[4] == 0) && ((*(ushort *)(input_buffer + 3) & 0x280) != 0x200)) {\n    initialize_memory_08006e10(output_buffer,input_buffer);\n  }\n  input_buffer_value = *(ushort *)(input_buffer + 3);\n  result = input_buffer_value & 1;\n  if ((input_buffer_value & 1) == 0) {\n    if (-1 < (int)((uint)input_buffer_value << 0x1e)) {\n      result = input_buffer[5];\n    }\n    input_buffer[2] = result;\n  }\n  else {\n    input_buffer[2] = 0;\n    input_buffer[6] = -input_buffer[5];\n  }\n  if (input_buffer[4] == 0) {\n    input_buffer_value = *(ushort *)(input_buffer + 3);\n    result = (int)(short)input_buffer_value & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input_buffer + 3) = input_buffer_value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "process_data_080069e4",
                "param_1": "output_buffer",
                "param_2": "input_buffer",
                "iVar1": "base_address",
                "uVar2": "result",
                "uVar3": "input_buffer_value"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_080061f0",
                "FUN_08006cb4",
                "FUN_08006e10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nuint FUN_080069e4(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ushort uVar3;\n  \n  iVar1 = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUNC_08006cb4(DAT_200000f8);\n  }\n  if (param_2 == &DAT_08007904) {\n    param_2 = *(undefined4 **)(iVar1 + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08007924) {\n    param_2 = *(undefined4 **)(iVar1 + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_080078e4) {\n    param_2 = *(undefined4 **)(iVar1 + 0xc);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = (uint)uVar3;\n  if (-1 < (int)(uVar2 << 0x1c)) {\n    if (-1 < (int)(uVar2 << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(uVar2 << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          process_data_080061f0(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    initialize_memory_08006e10(param_1,param_2);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = uVar3 & 1;\n  if ((uVar3 & 1) == 0) {\n    if (-1 < (int)((uint)uVar3 << 0x1e)) {\n      uVar2 = param_2[5];\n    }\n    param_2[2] = uVar2;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    uVar3 = *(ushort *)(param_2 + 3);\n    uVar2 = (int)(short)uVar3 & 0x80;\n    if (uVar2 != 0) {\nLAB_08006a14:\n      *(ushort *)(param_2 + 3) = uVar3 | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n"
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_and_loop_08006ac0",
            "code": "\nvoid process_and_loop_08006ac0(void)\n\n{\n  uint *uint_pointer;\n  int variable_1;\n  int *pointer_1;\n  int *pointer_2;\n  uint ushort_value;\n  ushort ushort_mask;\n  int variable_2;\n  code *pcVar8;\n  int variable_3;\n  uint uint_value;\n  code *jumptable_function;\n  bool bool_flag;\n  undefined8 infinite_loop_data;\n  \n  process_data_08006f00(6);\n  jumptable_function = (code *)0x8006acf;\n  infinite_loop_data = infinite_loop_0800573c(1);\n  pointer_1 = (int *)((ulonglong)infinite_loop_data >> 0x20);\n  uint_pointer = (uint *)infinite_loop_data;\n  ushort_mask = *(ushort *)(pointer_1 + 3);\n  ushort_value = (uint)ushort_mask;\n  if ((int)(ushort_value << 0x1c) < 0) {\n    variable_1 = pointer_1[4];\n    if (variable_1 != 0) {\n      variable_2 = ushort_value << 0x1e;\n      bool_flag = variable_2 != 0;\n      if (bool_flag) {\n        variable_2 = 0;\n      }\n      variable_3 = *pointer_1;\n      if (!bool_flag) {\n        variable_2 = pointer_1[5];\n      }\n      *pointer_1 = variable_1;\n      pointer_1[2] = variable_2;\n      for (variable_3 = variable_3 - variable_1; 0 < variable_3; variable_3 = variable_3 - variable_2) {\n        variable_2 = (*(code *)pointer_1[10])(uint_pointer,pointer_1[8],variable_1,variable_3);\n        if (variable_2 < 1) {\n          ushort_mask = *(ushort *)(pointer_1 + 3);\n          goto LAB_08006bc6;\n        }\n        variable_1 = variable_1 + variable_2;\n      }\n    }\n  }\n  else if (((0 < pointer_1[1]) || (0 < pointer_1[0x10])) &&\n          (pcVar8 = (code *)pointer_1[0xb], pcVar8 != (code *)0x0)) {\n    uint_value = *uint_pointer;\n    *uint_pointer = 0;\n    if ((ushort_mask & 0x1000) == 0) {\n      variable_1 = (*pcVar8)(uint_pointer,pointer_1[8],ushort_value & 0x1000,1);\n      if ((variable_1 == -1) && (ushort_value = *uint_pointer, ushort_value != 0)) {\n        if ((ushort_value != 0x1d) && (ushort_value != 0x16)) {\n          *(ushort *)(pointer_1 + 3) = *(ushort *)(pointer_1 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumptable_function)();\n          return;\n        }\n        *uint_pointer = uint_value;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      variable_1 = pointer_1[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer_1 + 3) << 0x1d) < 0) &&\n       (variable_1 = variable_1 - pointer_1[1], pointer_1[0xd] != 0)) {\n      variable_1 = variable_1 - pointer_1[0x10];\n    }\n    variable_1 = (*(code *)pointer_1[0xb])(uint_pointer,pointer_1[8],variable_1,0);\n    ushort_mask = *(ushort *)(pointer_1 + 3);\n    if ((variable_1 == -1) &&\n       ((0x1d < *uint_pointer || (-1 < (int)((0x20400001U >> (*uint_pointer & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointer_1 + 3) = ushort_mask | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumptable_function)(0xffffffff);\n      return;\n    }\n    pointer_1[1] = 0;\n    *pointer_1 = pointer_1[4];\n    if (((int)((uint)ushort_mask << 0x13) < 0) && ((variable_1 != -1 || (*uint_pointer == 0)))) {\n      pointer_1[0x15] = variable_1;\n    }\n    pointer_2 = (int *)pointer_1[0xd];\n    *uint_pointer = uint_value;\n    if (pointer_2 != (int *)0x0) {\n      if (pointer_2 != pointer_1 + 0x11) {\n        process_data_080061f0(uint_pointer);\n      }\n      pointer_1[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumptable_function)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable_function)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_and_loop_08006ac0",
                "piVar3": "pointer_1",
                "piVar4": "pointer_2",
                "uVar5": "ushort_value",
                "uVar6": "ushort_mask",
                "iVar2": "variable_1",
                "iVar7": "variable_2",
                "iVar9": "variable_3",
                "bVar11": "bool_flag",
                "puVar1": "uint_pointer",
                "uVar10": "uint_value",
                "UNRECOVERED_JUMPTABLE_00": "jumptable_function",
                "uVar12": "infinite_loop_data"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_080061f0",
                "FUN_08006f00",
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *dataPtr,int *infoPtr)\n\n{\n  undefined4 returnValue;\n  int var1;\n  int *var2;\n  uint var3;\n  ushort var4;\n  int var5;\n  undefined4 var6;\n  undefined4 var7;\n  code *funcPtr;\n  int var8;\n  uint var9;\n  code *jmpTable;\n  bool var10;\n  \n  if (infoPtr[4] != 0) {\n    if ((dataPtr != (uint *)0x0) && (dataPtr[6] == 0)) {\n      initialize_game_data_08006cb4();\n    }\n    if (infoPtr == &DAT_08007904) {\n      infoPtr = (int *)dataPtr[1];\n    }\n    else if (infoPtr == (int *)&DAT_08007924) {\n      infoPtr = (int *)dataPtr[2];\n    }\n    else if (infoPtr == (int *)&DAT_080078e4) {\n      infoPtr = (int *)dataPtr[3];\n    }\n    if (*(short *)(infoPtr + 3) != 0) {\n      var4 = *(ushort *)(infoPtr + 3);\n      var3 = (uint)var4;\n      if ((int)(var3 << 0x1c) < 0) {\n        var1 = infoPtr[4];\n        if (var1 != 0) {\n          var5 = var3 << 0x1e;\n          var10 = var5 != 0;\n          if (var10) {\n            var5 = 0;\n          }\n          var8 = *infoPtr;\n          if (!var10) {\n            var5 = infoPtr[5];\n          }\n          *infoPtr = var1;\n          infoPtr[2] = var5;\n          for (var8 = var8 - var1; 0 < var8; var8 = var8 - var5) {\n            var5 = (*(code *)infoPtr[10])(dataPtr,infoPtr[8],var1,var8,var6,var7);\n            if (var5 < 1) {\n              var4 = *(ushort *)(infoPtr + 3);\n              goto LAB_08006bc6;\n            }\n            var1 = var1 + var5;\n          }\n        }\n      }\n      else if (((0 < infoPtr[1]) || (0 < infoPtr[0x10])) &&\n              (funcPtr = (code *)infoPtr[0xb], funcPtr != (code *)0x0)) {\n        var9 = *dataPtr;\n        *dataPtr = 0;\n        if ((var4 & 0x1000) == 0) {\n          var1 = (*funcPtr)(dataPtr,infoPtr[8],var3 & 0x1000,1);\n          if ((var1 == -1) && (var3 = *dataPtr, var3 != 0)) {\n            if ((var3 != 0x1d) && (var3 != 0x16)) {\n              *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jmpTable)();\n              return returnValue;\n            }\n            *dataPtr = var9;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          var1 = infoPtr[0x15];\n        }\n        if (((int)((uint)*(ushort *)(infoPtr + 3) << 0x1d) < 0) &&\n           (var1 = var1 - infoPtr[1], infoPtr[0xd] != 0)) {\n          var1 = var1 - infoPtr[0x10];\n        }\n        var1 = (*(code *)infoPtr[0xb])(dataPtr,infoPtr[8],var1,0);\n        var4 = *(ushort *)(infoPtr + 3);\n        if ((var1 == -1) &&\n           ((0x1d < *dataPtr || (-1 < (int)((0x20400001U >> (*dataPtr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(infoPtr + 3) = var4 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jmpTable)(0xffffffff);\n          return returnValue;\n        }\n        infoPtr[1] = 0;\n        *infoPtr = infoPtr[4];\n        if (((int)((uint)var4 << 0x13) < 0) && ((var1 != -1 || (*dataPtr == 0)))) {\n          infoPtr[0x15] = var1;\n        }\n        var2 = (int *)infoPtr[0xd];\n        *dataPtr = var9;\n        if (var2 != (int *)0x0) {\n          if (var2 != infoPtr + 0x11) {\n            process_data_080061f0(dataPtr);\n          }\n          infoPtr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jmpTable)();\n          return returnValue;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jmpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "dataPtr",
                "param_2": "infoPtr",
                "uVar1": "returnValue",
                "iVar2": "var1",
                "piVar3": "var2",
                "uVar4": "var3",
                "uVar5": "var4",
                "iVar6": "var5",
                "unaff_r4": "var6",
                "unaff_r5": "var7",
                "pcVar7": "funcPtr",
                "iVar8": "var8",
                "uVar9": "var9",
                "bVar10": "var10",
                "UNRECOVERED_JUMPTABLE_00": "jmpTable"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nundefined4 FUN_08006be0(uint *param_1,int *param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *pcVar7;\n  int iVar8;\n  uint uVar9;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (param_2[4] != 0) {\n    if ((param_1 != (uint *)0x0) && (param_1[6] == 0)) {\n      FUNC_08006cb4();\n    }\n    if (param_2 == &DAT_08007904) {\n      param_2 = (int *)param_1[1];\n    }\n    else if (param_2 == (int *)&DAT_08007924) {\n      param_2 = (int *)param_1[2];\n    }\n    else if (param_2 == (int *)&DAT_080078e4) {\n      param_2 = (int *)param_1[3];\n    }\n    if (*(short *)(param_2 + 3) != 0) {\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        iVar2 = param_2[4];\n        if (iVar2 != 0) {\n          iVar6 = uVar4 << 0x1e;\n          bVar10 = iVar6 != 0;\n          if (bVar10) {\n            iVar6 = 0;\n          }\n          iVar8 = *param_2;\n          if (!bVar10) {\n            iVar6 = param_2[5];\n          }\n          *param_2 = iVar2;\n          param_2[2] = iVar6;\n          for (iVar8 = iVar8 - iVar2; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)param_2[10])(param_1,param_2[8],iVar2,iVar8,unaff_r4,unaff_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(param_2 + 3);\n              goto LAB_08006bc6;\n            }\n            iVar2 = iVar2 + iVar6;\n          }\n        }\n      }\n      else if (((0 < param_2[1]) || (0 < param_2[0x10])) &&\n              (pcVar7 = (code *)param_2[0xb], pcVar7 != (code *)0x0)) {\n        uVar9 = *param_1;\n        *param_1 = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          iVar2 = (*pcVar7)(param_1,param_2[8],uVar4 & 0x1000,1);\n          if ((iVar2 == -1) && (uVar4 = *param_1, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n              return uVar1;\n            }\n            *param_1 = uVar9;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          iVar2 = param_2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_2 + 3) << 0x1d) < 0) &&\n           (iVar2 = iVar2 - param_2[1], param_2[0xd] != 0)) {\n          iVar2 = iVar2 - param_2[0x10];\n        }\n        iVar2 = (*(code *)param_2[0xb])(param_1,param_2[8],iVar2,0);\n        uVar5 = *(ushort *)(param_2 + 3);\n        if ((iVar2 == -1) &&\n           ((0x1d < *param_1 || (-1 < (int)((0x20400001U >> (*param_1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return uVar1;\n        }\n        param_2[1] = 0;\n        *param_2 = param_2[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((iVar2 != -1 || (*param_1 == 0)))) {\n          param_2[0x15] = iVar2;\n        }\n        piVar3 = (int *)param_2[0xd];\n        *param_1 = uVar9;\n        if (piVar3 != (int *)0x0) {\n          if (piVar3 != param_2 + 0x11) {\n            process_data_080061f0(param_1);\n          }\n          param_2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n          return uVar1;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n"
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_structure_08006c40",
            "code": "\nvoid initializeDataStructure_08006c40(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[25] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  fill_memory_080061e0(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x8006f39;\n  dataStructure[10] = 0x8006f5b;\n  dataStructure[0xb] = 0x8006f93;\n  dataStructure[0xc] = &LAB_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[1]": "dataStructure[1]",
                "param_1[2]": "dataStructure[2]",
                "param_1[0x19]": "dataStructure[25]",
                "param_1[4]": "dataStructure[4]",
                "param_1[5]": "dataStructure[5]",
                "param_1[6]": "dataStructure[6]"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "allocate_and_initialize_08006c88",
            "code": "\nundefined4 * allocate_and_initialize_08006c88(undefined4 memory_size,int count)\n\n{\n  undefined4 *allocated_memory;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  allocated_memory = (undefined4 *)allocate_memory_08006288(memory_size,offset + 0x74);\n  if (allocated_memory != (undefined4 *)0x0) {\n    *allocated_memory = 0;\n    allocated_memory[1] = count;\n    allocated_memory[2] = allocated_memory + 3;\n    fill_memory_080061e0(allocated_memory + 3,0,offset + 0x68);\n  }\n  return allocated_memory;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "allocate_and_initialize_08006c88",
                "param_1": "memory_size",
                "param_2": "count",
                "puVar1": "allocated_memory",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_game_data_08006cb4",
            "code": "\nvoid initialize_game_data_08006cb4(undefined4 *game_data_ptr)\n\n{\n  undefined4 result;\n  undefined4 *temp_ptr;\n  \n  if (game_data_ptr[6] == 0) {\n    game_data_ptr[0x12] = 0;\n    game_data_ptr[0x13] = 0;\n    game_data_ptr[0x14] = 0;\n    temp_ptr = &DAT_200000fc;\n    game_data_ptr[10] = &LABEL_1;\n    if (game_data_ptr == &DAT_200000fc) {\n      temp_ptr = (undefined4 *)0x1;\n    }\n    if (game_data_ptr == &DAT_200000fc) {\n      game_data_ptr[6] = temp_ptr;\n    }\n    result = initialize_game_08006d14();\n    game_data_ptr[1] = result;\n    result = initialize_game_08006d14(game_data_ptr);\n    game_data_ptr[2] = result;\n    result = initialize_game_08006d14(game_data_ptr);\n    game_data_ptr[3] = result;\n    initialize_data_structure_08006c40(game_data_ptr[1],4,0);\n    initialize_data_structure_08006c40(game_data_ptr[2],9,1);\n    initialize_data_structure_08006c40(game_data_ptr[3],0x12,2);\n    game_data_ptr[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_game_data_08006cb4",
                "param_1": "game_data_ptr",
                "uVar1": "result",
                "puVar2": "temp_ptr",
                "LAB_08006c34_1": "LABEL_1"
            },
            "calling": [
                "FUN_080068f0",
                "FUN_080069e4",
                "FUN_08006be0",
                "FUN_08006344",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_game_08006d14",
            "code": "\nint * initializeGame_08006d14(undefined4 *status,undefined4 unused1,undefined4 unused2,undefined4 unused3)\n\n{\n  int *currentPtr;\n  int *dataPtr;\n  int **gamePtr;\n  \n  if (DAT_20000114 == 0) {\n    initialize_game_data_08006cb4(&DAT_200000fc);\n  }\n  gamePtr = (int **)&DAT_20000144;\n  do {\n    dataPtr = gamePtr[2];\n    currentPtr = gamePtr[1];\n    while (currentPtr = (int *)((int)currentPtr + -1), -1 < (int)currentPtr) {\n      if (*(short *)(dataPtr + 3) == 0) {\n        *(undefined2 *)((int)dataPtr + 0xe) = 0xffff;\n        dataPtr[0x19] = 0;\n        *(undefined2 *)(dataPtr + 3) = 1;\n        *dataPtr = 0;\n        dataPtr[2] = 0;\n        dataPtr[1] = 0;\n        dataPtr[4] = 0;\n        dataPtr[5] = 0;\n        dataPtr[6] = 0;\n        fill_memory_080061e0(dataPtr + 0x17,0,8,1,unused3);\n        dataPtr[0xd] = 0;\n        dataPtr[0xe] = 0;\n        dataPtr[0x12] = 0;\n        dataPtr[0x13] = 0;\n        return dataPtr;\n      }\n      dataPtr = dataPtr + 0x1a;\n    }\n    if (*gamePtr == (int *)0x0) {\n      currentPtr = (int *)allocate_and_initialize_08006c88(status,4);\n      *gamePtr = currentPtr;\n      if (currentPtr == (int *)0x0) {\n        *status = 0xc;\n        return (int *)0x0;\n      }\n    }\n    gamePtr = (int **)*gamePtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_game_08006d14",
                "param_1": "status",
                "param_2": "unused1",
                "param_3": "unused2",
                "param_4": "unused3",
                "piVar1": "currentPtr",
                "piVar2": "dataPtr",
                "ppiVar3": "gamePtr"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006c88",
                "FUN_08006cb4",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nint * FUN_08006d14(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int **ppiVar3;\n  \n  if (DAT_20000114 == 0) {\n    FUNC_08006cb4(&DAT_200000fc);\n  }\n  ppiVar3 = (int **)&DAT_20000144;\n  do {\n    piVar2 = ppiVar3[2];\n    piVar1 = ppiVar3[1];\n    while (piVar1 = (int *)((int)piVar1 + -1), -1 < (int)piVar1) {\n      if (*(short *)(piVar2 + 3) == 0) {\n        *(undefined2 *)((int)piVar2 + 0xe) = 0xffff;\n        piVar2[0x19] = 0;\n        *(undefined2 *)(piVar2 + 3) = 1;\n        *piVar2 = 0;\n        piVar2[2] = 0;\n        piVar2[1] = 0;\n        piVar2[4] = 0;\n        piVar2[5] = 0;\n        piVar2[6] = 0;\n        fill_memory_080061e0(piVar2 + 0x17,0,8,1,param_4);\n        piVar2[0xd] = 0;\n        piVar2[0xe] = 0;\n        piVar2[0x12] = 0;\n        piVar2[0x13] = 0;\n        return piVar2;\n      }\n      piVar2 = piVar2 + 0x1a;\n    }\n    if (*ppiVar3 == (int *)0x0) {\n      piVar1 = (int *)allocate_and_initialize_08006c88(param_1,4);\n      *ppiVar3 = piVar1;\n      if (piVar1 == (int *)0x0) {\n        *param_1 = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppiVar3 = (int **)*ppiVar3;\n  } while( true );\n}\n\n"
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "set_memory_and_get_result_08006dc8",
            "code": "\nundefined4 set_memory_and_get_result_08006dc8(undefined4 param_1_ptr,int param_2_offset,undefined4 *param_3_ptr,uint *param_4_ptr)\n\n{\n  int result;\n  undefined4 return_value;\n  undefined local_buffer [4];\n  uint local_value;\n  \n  if ((*(short *)(param_2_offset + 0xe) < 0) ||\n     (result = set_memory_value_08007004(param_1_ptr,(int)*(short *)(param_2_offset + 0xe),local_buffer), result < 0)) {\n    *param_4_ptr = 0;\n    if ((int)((uint)*(ushort *)(param_2_offset + 0xc) << 0x18) < 0) {\n      return_value = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *param_4_ptr = (uint)((local_value & 0xf000) == 0x2000);\n  }\n  return_value = 0x400;\nLAB_08006e08:\n  *param_3_ptr = return_value;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "set_memory_and_get_result_08006dc8",
                "param_1": "param_1_ptr",
                "param_2": "param_2_offset",
                "param_3": "param_3_ptr",
                "param_4": "param_4_ptr",
                "iVar1": "result",
                "uVar2": "return_value",
                "auStack_4c": "local_buffer",
                "local_48": "local_value"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "initialize_memory_08006e10",
            "code": "\nvoid initializeMemory_08006e10(int param,int *ptr)\n\n{\n  ushort result;\n  int allocationResult;\n  int length;\n  int *buffer;\n  \n  if (-1 < (int)((uint)*(ushort *)(ptr + 3) << 0x1e)) {\n    length = param;\n    buffer = ptr;\n    result = set_memory_and_get_result_08006dc8(param,ptr,&length,&buffer);\n    allocationResult = allocate_memory_08006288(param,length);\n    if (allocationResult != 0) {\n      *(undefined **)(param + 0x28) = &LAB_08006c34_1;\n      *ptr = allocationResult;\n      *(ushort *)(ptr + 3) = *(ushort *)(ptr + 3) | 0x80;\n      ptr[4] = allocationResult;\n      ptr[5] = length;\n      if ((buffer != (int *)0x0) &&\n         (allocationResult = update_param_if_invalid_08007028(param,(int)*(short *)((int)ptr + 0xe)), allocationResult != 0)) {\n        *(ushort *)(ptr + 3) = *(ushort *)(ptr + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(ptr + 3) = result | *(ushort *)(ptr + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(ptr + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(ptr + 3) = *(ushort *)(ptr + 3) & 0xfffc | 2;\n  }\n  *ptr = (int)ptr + 0x47;\n  ptr[4] = (int)ptr + 0x47;\n  ptr[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "initialize_memory_08006e10",
                "param_1": "param",
                "param_2": "ptr",
                "uVar1": "result",
                "iVar2": "allocationResult",
                "local_18": "length",
                "local_14": "buffer"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08006288",
                "FUN_08006dc8",
                "FUN_08007028"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_index_08006e90",
            "code": "\nchar * find_character_index_08006e90(char *string,char character,int string_length)\n\n{\n  char *current_char;\n  char *found_char;\n  \n  current_char = string;\n  do {\n    found_char = current_char;\n    if (found_char == string + string_length) {\n      return (char *)0x0;\n    }\n    current_char = found_char + 1;\n  } while (*found_char != character);\n  return found_char;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_index_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "found_char"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "process_data_08006f00",
            "code": "\nint process_data_08006f00(uint input_value)\n\n{\n  int *data_ptr;\n  undefined4 result;\n  int index;\n  code *function_ptr;\n  undefined4 unused_var1;\n  undefined4 unused_var2;\n  undefined4 unused_var3;\n  undefined4 *data_ptr_ptr;\n  \n  data_ptr = DAT_200000f8;\n  data_ptr_ptr = &DAT_200000f8;\n  if (0x1f < input_value) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  index = DAT_200000f8[0x11];\n  if ((index != 0) && (function_ptr = *(code **)(index + input_value * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + input_value * 4) = 0;\n      (*function_ptr)(input_value);\n    }\n    return 0;\n  }\n  result = thunk_initialize_application_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  index = initialize_data_08005740(result,input_value,input_value,0,data_ptr_ptr,unused_var1,unused_var2,unused_var3);\n  if ((index == -1) && (DAT_200006a4 != 0)) {\n    *data_ptr = DAT_200006a4;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "process_data_08006f00",
                "param_1": "input_value",
                "piVar1": "data_ptr",
                "uVar2": "result",
                "iVar3": "index",
                "pcVar4": "function_ptr",
                "unaff_r4": "unused_var1",
                "unaff_r5": "unused_var2",
                "in_lr": "unused_var3",
                "puVar5": "data_ptr_ptr"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "initialize_thunk_08005750",
            "code": "\nundefined4 initialize_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "initialize_thunk_08005750"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_screen_08006f38",
            "code": "\nvoid updateScreen_08006f38(undefined4 param1,int param2)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = clear_screen_0800706c(param1,(int)*(short *)(param2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(param2 + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(param2 + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(param2 + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_screen_08006f38",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "initialize_or_process_data_08006f5a",
            "code": "\nvoid initialize_or_process_data_08006f5a(int *data_array,int param_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  \n  if ((int)((uint)*(ushort *)(param_ptr + 0xc) << 0x17) < 0) {\n    initialize_application(data_array,(int)*(short *)(param_ptr + 0xe),0,2);\n  }\n  *(ushort *)(param_ptr + 0xc) = *(ushort *)(param_ptr + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = process_data_with_limit((int)*(short *)(param_ptr + 0xe),param_3,param_4,param_4,param_4,unaff_r4,\n                       unaff_r5,in_lr);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *data_array = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "initialize_or_process_data_08006f5a",
                "param_1": "data_array",
                "param_2": "param_ptr",
                "initialize_application_08007048": "initialize_application",
                "process_data_with_limit_08005730": "process_data_with_limit",
                "iVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "initialize_application_08006f92",
            "code": "\nvoid initializeApplication_08006f92(undefined4 param1,int param2)\n\n{\n  int appInitialized;\n  ushort flags;\n  bool isError;\n  \n  appInitialized = initialize_application_08007048(param1,(int)*(short *)(param2 + 0xe));\n  isError = appInitialized == -1;\n  if (isError) {\n    flags = *(ushort *)(param2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(param2 + 0x54) = appInitialized;\n    flags = *(ushort *)(param2 + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(param2 + 0xc) = flags;\n  }\n  if (!isError) {\n    *(ushort *)(param2 + 0xc) = flags;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "initialize_application_08006f92",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "appInitialized",
                "uVar2": "flags",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "set_memory_value_08007004",
            "code": "\nvoid setMemoryValue_08007004(int *result,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int status;\n  \n  DAT_200006a4 = 0;\n  status = set_memory_value_0800571a(value1,value2,value2,0,value3);\n  if ((status == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "set_memory_value_08007004",
                "param_1": "result",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "update_param_if_invalid_08007028",
            "code": "\nvoid updateParamIfInvalid_08007028(int *resultPointer,undefined4 inputParam)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = check_if_one_08005724(inputParam);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *resultPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "update_param_if_invalid_08007028",
                "param_1": "resultPointer",
                "param_2": "inputParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "initialize_application_08007048",
            "code": "\nvoid initializeApplication_08007048(int *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = initialize_application_08005728(param2,param3,param4,param4,param4);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "initialize_application_08007048",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f92",
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "clear_screen_0800706c",
            "code": "\nvoid clear_screen_0800706c(int *output_buffer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int iVar1;\n  \n  DAT_200006a4 = 0;\n  iVar1 = clear_screen_0800706c_0800572c(arg1,arg2,arg3,arg3,arg3);\n  if ((iVar1 == -1) && (DAT_200006a4 != 0)) {\n    *output_buffer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "clear_screen_0800706c",
                "param_1": "output_buffer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "process_and_loop_08007090",
            "code": "\nvoid process_and_loop_08007090(void)\n\n{\n  code *jump_table;\n  \n  jump_table = process_and_loop_08007090;\n  process_and_loop_08007090_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "process_and_loop_08007090",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_0800010c",
                "FUN_08006198"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 177509,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080006d4",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08001294",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800365c",
            "FUN_08003a68",
            "FUN_08003c44",
            "FUN_08004092",
            "FUN_08004110",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_080049f0",
            "FUN_08004c5e",
            "FUN_08004c8a",
            "FUN_08004cb2",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004e70",
            "FUN_080055bc",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_0800591e",
            "FUN_08005a44",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005c1c",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005f8c",
            "FUN_08006158",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_080065c0",
            "FUN_08006e90",
            "thunk_FUN_08005750"
        ],
        [
            "FUN_080004f8",
            "FUN_0800074c",
            "FUN_080009b8",
            "FUN_08000aec",
            "FUN_08001a66",
            "FUN_08001c3c",
            "FUN_08001f84",
            "FUN_080020f0",
            "FUN_08003688",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003ea0",
            "FUN_080040b0",
            "FUN_0800412c",
            "FUN_080043b4",
            "FUN_08004974",
            "FUN_08004b34",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c78",
            "FUN_08004ca2",
            "FUN_08004cce",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_08005568",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005ce8",
            "FUN_08006112",
            "FUN_080066b0",
            "FUN_08006920",
            "FUN_08006c40",
            "FUN_08006f00",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c"
        ],
        [
            "FUN_080009a8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08001918",
            "FUN_08001c88",
            "FUN_08002004",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_0800316c",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003da4",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004204",
            "FUN_08004478",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_08005b54",
            "FUN_08005cd4",
            "FUN_08005d42",
            "FUN_08005d8a",
            "FUN_08005fc8",
            "FUN_08006288",
            "FUN_08006ac0",
            "FUN_08006dc8",
            "FUN_08006f38",
            "FUN_08006f92"
        ],
        [
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_080012a2",
            "FUN_080015b2",
            "FUN_08001814",
            "FUN_08001b48",
            "FUN_08001cd0",
            "FUN_08002384",
            "FUN_080032b4",
            "FUN_08003520",
            "FUN_0800441a",
            "FUN_080046b8",
            "FUN_08004b3c",
            "FUN_08004e20",
            "FUN_0800598a",
            "FUN_08005bb0",
            "FUN_08005d82",
            "FUN_08006c88",
            "FUN_08006e10"
        ],
        [
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_080018f8",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_080033b8",
            "FUN_08004a4c",
            "FUN_08004c52",
            "FUN_080057b4",
            "FUN_08005da8"
        ],
        [
            "FUN_08001310",
            "FUN_0800157c",
            "FUN_08001a44",
            "FUN_08001ab0",
            "FUN_08001c32",
            "FUN_08005754",
            "FUN_08005f2c"
        ],
        [
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_08001550",
            "FUN_08001b18",
            "FUN_08005f40",
            "FUN_08005f5e"
        ],
        [
            "FUN_08000cd0",
            "FUN_080013a4"
        ],
        [
            "FUN_080014ba"
        ],
        [
            "FUN_08001510"
        ],
        [
            "FUN_08000b08"
        ],
        [
            "FUN_08007090"
        ],
        [
            "FUN_080060d4"
        ],
        [
            "FUN_080060e4"
        ],
        [
            "FUN_0800282c"
        ],
        [
            "FUN_080069e4",
            "FUN_08006be0",
            "FUN_08006d14"
        ],
        [
            "FUN_08006cb4"
        ],
        [
            "FUN_08006344"
        ],
        [
            "FUN_08006370"
        ],
        [
            "FUN_08006394"
        ],
        [
            "FUN_08006174",
            "FUN_080068f0"
        ],
        [
            "FUN_08004f4c",
            "FUN_0800611c"
        ],
        [
            "FUN_08005384",
            "FUN_08005a68"
        ],
        [
            "FUN_08000bcc",
            "FUN_080053d4"
        ],
        [
            "FUN_08005730",
            "FUN_08005f6c"
        ],
        [
            "FUN_08006f5a"
        ]
    ],
    "locked_functions": []
}