{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_data_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeData_0800010c(undefined4 inputParam)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_data_0800010c",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "get_string_length_08000178",
            "code": "\nchar * get_string_length_08000178(char *source_string)\n\n{\n  char current_char;\n  char *next_char_ptr;\n  char *current_ptr;\n  \n  current_ptr = source_string;\n  do {\n    next_char_ptr = current_ptr + 1;\n    current_char = *current_ptr;\n    current_ptr = next_char_ptr;\n  } while (current_char != '\\0');\n  return next_char_ptr + (-1 - (int)source_string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "get_string_length_08000178",
                "param_1": "source_string",
                "cVar1": "current_char",
                "pcVar2": "next_char_ptr",
                "pcVar3": "current_ptr"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_system_08000188",
            "code": "\nvoid initialize_system_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_system_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "execute_function_0800018c",
            "code": "\nundefined4 executeFunction_0800018c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "execute_function_0800018c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint dataIndex,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  bool isValid;\n  int result;\n  \n  if (0x3b < (int)dataIndex) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,dataIndex,param2,param3,param3);\n  if (result == 3) {\n    if (dataIndex < 0x3c) {\n      if ((&DAT_0800a908)[dataIndex] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[dataIndex]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[dataIndex],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(dataIndex,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,dataIndex,param1);\n  }\n  else if (result == 4) {\n    if (dataIndex < 0x3c) {\n      if ((&DAT_0800a908)[dataIndex] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[dataIndex]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[dataIndex] * 3,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,dataIndex,param1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "dataIndex",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint input,undefined4 output,undefined4 param3,undefined4 param4)\n\n{\n  bool isValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,input,param3,param4,param4);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,output);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,output);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "input",
                "param_2": "output",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_bit_array_08000488",
            "code": "\nvoid updateBitArray_08000488(uint bitIndex,int bitValue)\n\n{\n  undefined4 randomValue;\n  \n  if ((int)bitIndex < 0xe) {\n    if (bitValue == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (bitIndex & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (bitIndex & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      randomValue = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,bitIndex,randomValue);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_bit_array_08000488",
                "param_1": "bitIndex",
                "param_2": "bitValue",
                "uVar1": "randomValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "process_params_080004d4",
            "code": "\nvoid processParams_080004d4(int flag,int value)\n\n{\n  int index;\n  undefined *dataPtr;\n  \n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    dataPtr = &DAT_2000022c;\n    for (index = 0xb; -1 < index; index = index + -1) {\n      FUN_08002580(dataPtr);\n      dataPtr = dataPtr + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "process_params_080004d4",
                "param_1": "flag",
                "param_2": "value",
                "iVar1": "index",
                "puVar2": "dataPtr"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "update_servo_data_08000500",
            "code": "\nvoid updateServoData_08000500(int servoIndex,int servoMinValue,int servoMaxValue,undefined4 undefinedArg)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",servoMaxValue,undefinedArg,undefinedArg);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < servoMinValue) && (0 < servoMaxValue)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,servoMinValue,servoMaxValue);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "update_servo_data_08000500",
                "param_1": "servoIndex",
                "param_2": "servoMinValue",
                "param_3": "servoMaxValue",
                "param_4": "undefinedArg"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_data_array_08000588",
            "code": "\nvoid updateDataArray_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_data_array_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "pin_mode_080005f8",
            "code": "\nvoid pinMode_080005f8(uint pin,int mode)\n\n{\n  int result;\n  char temp;\n  bool isTrue;\n  uint temp2;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pin);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pin);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        temp = '\\0';\n      }\n      else {\n        temp = DAT_20000170;\n        if (mode == 6) {\n          temp = '\\0';\n        }\n      }\n    }\n    else {\n      temp = '\\0';\n    }\n    if (temp != '\\0') {\n      FUN_080005e0();\n    }\n    if (pin < 0x3c) {\n      if ((&DAT_0800a908)[pin] == -1) {\n        isTrue = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n          if (result == 1) {\n            isTrue = false;\n          }\n          else if (mode == 4) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n    }\n    else {\n      isTrue = false;\n    }\n    if (isTrue) {\n      if ((byte)(&DAT_200001f0)[pin] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pin);\n      }\n    }\n    temp2 = pin - 0x2e & 0xff;\n    if (temp2 < 0xe) {\n      if (pin < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pin];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isTrue = false;\n      }\n      else {\n        if (pin < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pin];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    else {\n      isTrue = false;\n    }\n    if (isTrue) {\n      FUN_08000488(temp2,mode == 2);\n    }\n    if (pin < 0x3c) {\n      if ((&DAT_0800a908)[pin] == -1) {\n        isTrue = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n          if (result == 1) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n    }\n    else {\n      isTrue = false;\n    }\n    if (isTrue) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pin >> 3] = (&DAT_20000174)[pin >> 3] | (byte)(1 << (pin & 7));\n      }\n      else {\n        (&DAT_20000174)[pin >> 3] = (&DAT_20000174)[pin >> 3] & ~(byte)(1 << (pin & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pin,0);\n    switch(mode) {\n    case 0:\n      if (pin < 0x3c) {\n        if ((&DAT_0800a908)[pin] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08008990(pin,0);\n        FUN_08002fa8(&DAT_200003d4,pin,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pin < 0x3c) {\n        if ((&DAT_0800a908)[pin] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        result = FUN_08002fa0(&DAT_200003d4,pin);\n        if (result == 3) {\n          FUN_08008a24(pin,0);\n        }\n        FUN_08008990(pin,1);\n        FUN_08002fa8(&DAT_200003d4,pin,1);\n        return;\n      }\n      break;\n    case 2:\n      if (temp2 < 0xe) {\n        if (pin < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pin];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isTrue = false;\n        }\n        else {\n          if (pin < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pin];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        if (pin < 0x3c) {\n          if ((&DAT_0800a908)[pin] == -1) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isTrue = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n              if (result == 1) {\n                isTrue = false;\n              }\n            }\n          }\n        }\n        else {\n          isTrue = false;\n        }\n        if (isTrue) {\n          FUN_08008990(pin,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pin,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pin < 0x3c) {\n        if ((&DAT_0800a908)[pin] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pin],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pin,1);\n        FUN_080088e0(pin,0);\n        FUN_08002fa8(&DAT_200003d4,pin,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pin < 0x3c) {\n        if ((&DAT_0800a908)[pin] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08002fa8(&DAT_200003d4,pin,4);\n        if (((byte)(&DAT_200001f0)[pin] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin] * 3),\n           result != 0)) {\n          isTrue = false;\n        }\n        if (isTrue) {\n          FUN_08000500(pin,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pin < 0x3c) {\n        if ((&DAT_0800a908)[pin] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pin],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pin],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pin,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pin < 0x3c) {\n        if ((&DAT_0800a908)[pin] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08008990(pin,2);\n        FUN_08002fa8(&DAT_200003d4,pin,0xb);\n        FUN_08002fc2(&DAT_200003d4,pin,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "pin_mode_080005f8",
                "param_1": "pin",
                "param_2": "mode",
                "iVar1": "result",
                "cVar2": "temp",
                "bVar3": "isTrue",
                "uVar4": "temp2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (uVar3 = 0; uVar3 < 5; uVar3 = uVar3 + 1 & 0xff) {\n    (&DAT_200001e8)[uVar3] = 0;\n    (&DAT_20000174)[uVar3] = 0;\n    (&DAT_20000180)[uVar3] = 0;\n  }\n  for (uVar3 = 0; uVar3 < 0x3c; uVar3 = uVar3 + 1 & 0xff) {\n    if ((uVar3 - 0x2e & 0xff) < 0xe) {\n      if (uVar3 < 0x3c) {\n        iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n      }\n      else {\n        iVar2 = -1;\n      }\n      iVar2 = FUN_080036ac(iVar2);\n      if (iVar2 == 0) {\n        bVar1 = false;\n      }\n      else {\n        if (uVar3 < 0x3c) {\n          iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 1) {\n          bVar1 = false;\n        }\n        else {\n          bVar1 = true;\n        }\n      }\n    }\n    else {\n      bVar1 = false;\n    }\n    if (bVar1) {\n      FUN_080005f8(uVar3,2);\n    }\n    else {\n      if ((((uVar3 < 0x3c) && ((&DAT_0800a908)[uVar3] != -1)) &&\n          (iVar2 = FUN_080036ac(), iVar2 != 0)) &&\n         (iVar2 = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar3]), iVar2 != 1)) {\n        bVar1 = true;\n      }\n      if (bVar1) {\n        FUN_080005f8(uVar3,1);\n      }\n    }\n    (&DAT_200001f0)[uVar3] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "process_data_08000be8",
            "code": "\nvoid processData_08000be8(int index,uint mask,int flag,undefined4 param_4)\n\n{\n  undefined1 *dataPointer1;\n  undefined1 *dataPointer2;\n  \n  dataPointer1 = &DAT_20000174;\n  dataPointer2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((flag != 0) ||\n     (dataPointer1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], dataPointer2 != dataPointer1)) {\n    FUN_08002efe(&DAT_200003d4,index,dataPointer2,dataPointer1,param_4);\n    (&DAT_20000180)[index] = (char)dataPointer2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "flag",
                "puVar1": "dataPointer1",
                "puVar2": "dataPointer2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_permissions_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configurePermissions_08000ef8(void)\n\n{\n  byte permissionFlags;\n  int result;\n  bool isAuthorized;\n  byte permissionMask;\n  \n  permissionFlags = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionMask = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        permissionMask = 0;\n      }\n      else if ((permissionFlags & 1) == 0) {\n        permissionMask = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          permissionMask = 0;\n        }\n        else {\n          permissionMask = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 2) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 4) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 8) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x10) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x20) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x40) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x80) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x80;\n    }\n    FUN_08000be8(0,permissionMask);\n  }\n  permissionFlags = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionMask = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        permissionMask = 0;\n      }\n      else if ((permissionFlags & 1) == 0) {\n        permissionMask = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          permissionMask = 0;\n        }\n        else {\n          permissionMask = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 2) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 4) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 8) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x10) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x20) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x40) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x80) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x80;\n    }\n    FUN_08000be8(1,permissionMask,0);\n  }\n  permissionFlags = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionMask = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        permissionMask = 0;\n      }\n      else if ((permissionFlags & 1) == 0) {\n        permissionMask = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          permissionMask = 0;\n        }\n        else {\n          permissionMask = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 2) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 8) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x10) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x20) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x40) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x80) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x80;\n    }\n    FUN_08000be8(2,permissionMask,0);\n  }\n  permissionFlags = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionMask = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        permissionMask = 0;\n      }\n      else if ((permissionFlags & 1) == 0) {\n        permissionMask = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          permissionMask = 0;\n        }\n        else {\n          permissionMask = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 2) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 4) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 8) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x10) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x20) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x40) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x80) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x80;\n    }\n    FUN_08000be8(3,permissionMask,0);\n  }\n  permissionFlags = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionMask = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        permissionMask = 0;\n      }\n      else if ((permissionFlags & 1) == 0) {\n        permissionMask = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          permissionMask = 0;\n        }\n        else {\n          permissionMask = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 2) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 4) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 8) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x10) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x20) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x40) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isAuthorized = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        isAuthorized = false;\n      }\n      else if ((permissionFlags & 0x80) == 0) {\n        isAuthorized = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          isAuthorized = false;\n        }\n        else {\n          isAuthorized = true;\n        }\n      }\n    }\n    if (isAuthorized) {\n      permissionMask = permissionMask | 0x80;\n    }\n    FUN_08000be8(4,permissionMask,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_permissions_08000ef8",
                "bVar1": "permissionFlags",
                "iVar2": "result",
                "bVar3": "isAuthorized",
                "bVar4": "permissionMask"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_firmware_08001b48",
            "code": "\nvoid initializeFirmware_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&fileDataOffset);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&fileSize);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&fileData);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_firmware_08001b48",
                "&LAB_080002ec_1": "&fileDataOffset",
                "&LAB_08000c18_1": "&fileSize",
                "&LAB_080001a8_1": "&fileData"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_memory_08001bf8",
            "code": "\nvoid initializeMemory_08001bf8(undefined4 inputData,undefined4 unusedParam,undefined4 size,undefined4 data)\n\n{\n  FUN_0800288c(&DAT_20000314,inputData,size,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_memory_08001bf8",
                "param_1": "inputData",
                "param_2": "unusedParam",
                "param_3": "size",
                "param_4": "data"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "process_i2_c_data_08001c18",
            "code": "\nvoid processI2CData_08001c18(undefined4 deviceAddress,uint dataLength,int expectedLength,undefined4 deviceData)\n\n{\n  undefined receivedData;\n  int receivedLength;\n  int currentLength;\n  bool isDataReceived;\n  \n  if (dataLength == 0xffffffff) {\n    dataLength = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(dataLength & 0xff);\n    FUN_08002a58(&DAT_20000314,deviceData);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedLength);\n  receivedLength = FUN_0800270c(&DAT_20000314);\n  if (expectedLength < receivedLength) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    receivedLength = FUN_0800270c(&DAT_20000314);\n    if (receivedLength < expectedLength) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)dataLength;\n  receivedLength = 0;\n  while( true ) {\n    if (receivedLength < expectedLength) {\n      currentLength = FUN_0800270c(&DAT_20000314);\n      if (currentLength == 0) {\n        isDataReceived = false;\n      }\n      else {\n        isDataReceived = true;\n      }\n    }\n    else {\n      isDataReceived = false;\n    }\n    if (!isDataReceived) break;\n    receivedData = FUN_08001c08();\n    (&DAT_20000132)[receivedLength] = receivedData;\n    receivedLength = receivedLength + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedLength + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "dataLength",
                "param_3": "expectedLength",
                "param_4": "deviceData",
                "uVar1": "receivedData",
                "iVar2": "receivedLength",
                "iVar3": "currentLength",
                "bVar4": "isDataReceived"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_function_08001cd0",
            "code": "\nvoid processFunction_08001cd0(undefined4 opcode,int length,byte *data,undefined4 param)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 result;\n  byte byte4;\n  char char1;\n  int index;\n  int tempIndex;\n  uint tempVar1;\n  uint tempVar2;\n  int tempVar3;\n  bool isTrue;\n  \n  switch(opcode) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (tempVar1 = 0; tempVar1 < 0x3c; tempVar1 = tempVar1 + 1 & 0xff) {\n      tempVar2 = tempVar1 - 0x2e & 0xff;\n      if (tempVar2 < 0xe) {\n        if (tempVar1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[tempVar1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          tempVar2 = 0x7f;\n        }\n        else {\n          if (tempVar1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[tempVar1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            tempVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        tempVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,tempVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (tempVar1 = 0; tempVar1 < 0x3c; tempVar1 = tempVar1 + 1 & 0xff) {\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          isTrue = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            isTrue = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((tempVar1 - 0x2e & 0xff) < 0xe) {\n        if (tempVar1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[tempVar1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          isTrue = false;\n        }\n        else {\n          if (tempVar1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[tempVar1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[tempVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          isTrue = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            isTrue = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[tempVar1],&DAT_0800a69c);\n              if (index == 0) {\n                index = FUN_0800738a((int)(char)(&DAT_0800a908)[tempVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        result = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,result);\n        tempVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,tempVar1 & 0x7f);\n        tempVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((tempVar1 & 0xff80) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0x12) >> 0x19);\n        }\n        tempVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((tempVar1 & 0xc000) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      tempVar1 = (uint)data[1];\n      if (2 < length) {\n        tempVar1 = tempVar1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        tempVar1 = tempVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,tempVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      tempVar1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          isTrue = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            isTrue = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        if ((byte)(&DAT_200001f0)[tempVar1] < 0xc) {\n          index = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[tempVar1] * 3);\n        }\n        else {\n          index = 0;\n        }\n        if (index != 0) {\n          FUN_08000588(tempVar1);\n        }\n        FUN_08000500(tempVar1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(tempVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param);\n      return;\n    }\n    byte2 = *data;\n    isTrue = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (tempVar1 = 2; (int)tempVar1 < length; tempVar1 = tempVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[tempVar1 + 1] * -0x80 + data[tempVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          index = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          index = -1;\n        }\n        FUN_08001c18(byte2,index,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            index = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            index = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          tempIndex = (int)DAT_20000004;\n          tempVar3 = tempIndex * 0xc;\n          (&DAT_20000188)[tempVar3] = byte2;\n          (&DAT_2000018c)[tempIndex * 3] = index;\n          (&DAT_20000190)[tempVar3] = char1;\n          (&DAT_20000191)[tempVar3] = isTrue;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,isTrue,param);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (tempVar1 = 0; index = DAT_20000004 + 1, (int)tempVar1 < index; tempVar1 = tempVar1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[tempVar1 * 0xc]) goto LAB_08001e66;\n      }\n      tempVar1 = 0;\nLAB_08001e66:\n      for (; (int)tempVar1 < index; tempVar1 = tempVar1 + 1 & 0xff) {\n        if (tempVar1 < 8) {\n          tempIndex = (tempVar1 + 1) * 0xc;\n          tempVar3 = tempVar1 * 0xc;\n          (&DAT_20000188)[tempVar3] = (&DAT_20000188)[tempIndex];\n          (&DAT_2000018c)[tempVar1 * 3] = (&DAT_2000018c)[(tempVar1 + 1) * 3];\n          (&DAT_20000190)[tempVar3] = (&DAT_20000190)[tempIndex];\n          (&DAT_20000191)[tempVar3] = (&DAT_20000191)[tempIndex];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    index = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (index != 0)) {\n      DAT_2000012c = index;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_function_08001cd0",
                "param_1": "opcode",
                "param_2": "length",
                "param_3": "data",
                "param_4": "param",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "result",
                "bVar5": "byte4",
                "cVar6": "char1",
                "iVar7": "index",
                "iVar8": "tempIndex",
                "uVar9": "tempVar1",
                "uVar10": "tempVar2",
                "iVar11": "tempVar3",
                "bVar12": "isTrue"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "initialize_data_080022f8",
            "code": "\nvoid initializeData_080022f8(void)\n\n{\n  bool isSuccessful;\n  int returnValue;\n  undefined4 newValue;\n  uint index1;\n  uint index2;\n  \n  FUN_08000ef8();\n  while (returnValue = FUN_08002ec4(&DAT_200003d4), returnValue != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (index1 = 0; index1 < 0x3c; index1 = index1 + 1 & 0xff) {\n      index2 = index1 - 0x2e & 0xff;\n      if (index2 < 0xe) {\n        if (index1 < 0x3c) {\n          returnValue = (int)(char)(&DAT_0800a908)[index1];\n        }\n        else {\n          returnValue = -1;\n        }\n        returnValue = FUN_080036ac(returnValue);\n        if (returnValue == 0) {\n          isSuccessful = false;\n        }\n        else {\n          if (index1 < 0x3c) {\n            returnValue = (int)(char)(&DAT_0800a908)[index1];\n          }\n          else {\n            returnValue = -1;\n          }\n          returnValue = FUN_080036ac(returnValue);\n          if (returnValue == 1) {\n            isSuccessful = false;\n          }\n          else {\n            returnValue = FUN_08002fa0(&DAT_200003d4,index1);\n            if (returnValue == 2) {\n              isSuccessful = true;\n            }\n            else {\n              isSuccessful = false;\n            }\n          }\n        }\n      }\n      else {\n        isSuccessful = false;\n      }\n      if ((isSuccessful) && ((DAT_20000114 >> index2 & 1U) != 0)) {\n        newValue = FUN_08008880(index2);\n        FUN_08002ef2(&DAT_200003d4,index2,newValue);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (index1 = 0; (int)index1 < DAT_20000004 + 1; index1 = index1 + 1 & 0xff) {\n        returnValue = index1 * 0xc;\n        FUN_08001c18((&DAT_20000188)[returnValue],(&DAT_2000018c)[index1 * 3],(&DAT_20000190)[returnValue],\n                     (&DAT_20000191)[returnValue]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "initialize_data_080022f8",
                "iVar2": "returnValue",
                "bVar1": "isSuccessful",
                "uVar3": "newValue",
                "uVar4": "index1",
                "uVar5": "index2"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_for_bit_flag_08002400",
            "code": "\nundefined4 check_for_bit_flag_08002400(int input_value)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input_value * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_for_bit_flag_08002400",
                "param_1": "input_value",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 connectionHandle,undefined4 timeout,undefined4 bufferSize,undefined4 callbackFunction)\n\n{\n  FUN_08007648(connectionHandle,60000,0x5dc,&label_end,callbackFunction);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "connectionHandle",
                "param_2": "timeout",
                "param_3": "bufferSize",
                "param_4": "callbackFunction",
                "LAB_08002444_1": "label_end"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_system_08002578",
            "code": "\nvoid initialize_system_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_system_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_byte_08002580",
            "code": "\nvoid initializeByte_08002580(byte *outputBuffer)\n\n{\n  char nextByte;\n  uint byteIndex;\n  \n  byteIndex = (uint)DAT_20000250;\n  if (0xb < byteIndex) {\n    *outputBuffer = 0xff;\n    return;\n  }\n  nextByte = DAT_20000250 + 1;\n  *outputBuffer = DAT_20000250;\n  DAT_20000250 = nextByte;\n  *(undefined4 *)(&DAT_2000025c + byteIndex * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_byte_08002580",
                "param_1": "outputBuffer",
                "cVar1": "nextByte",
                "uVar2": "byteIndex"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "extract_byte_information_080025ac",
            "code": "\nbyte extract_byte_information_080025ac(byte *param_1,uint input_value,int offset_1,int offset_2)\n\n{\n  uint masked_value_1;\n  uint masked_value_2;\n  uint division_result;\n  int calculated_offset;\n  \n  if (*param_1 < 0xc) {\n    FUN_08008990(input_value,1,offset_1,*param_1,offset_2);\n    masked_value_2 = (uint)*param_1;\n    masked_value_1 = (byte)(&DAT_20000258)[masked_value_2 * 8] & 0xffffffc0 | input_value & 0x3f;\n    (&DAT_20000258)[masked_value_2 * 8] = (char)masked_value_1;\n    calculated_offset = -offset_1 + 0x220;\n    if (calculated_offset < 0) {\n      calculated_offset = -offset_1 + 0x223;\n    }\n    param_1[1] = (byte)((uint)(calculated_offset << 0x16) >> 0x18);\n    calculated_offset = -offset_2 + 0x960;\n    if (calculated_offset < 0) {\n      calculated_offset = -offset_2 + 0x963;\n    }\n    param_1[2] = (byte)((uint)(calculated_offset << 0x16) >> 0x18);\n    division_result = *param_1 / 0xc;\n    calculated_offset = FUN_08002400(division_result,masked_value_1,masked_value_2,(uint)*param_1 * -0x55555555);\n    if (calculated_offset == 0) {\n      DAT_200002fc = (undefined)division_result;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*param_1 * 8] = (&DAT_20000258)[(uint)*param_1 * 8] | 0x40;\n  }\n  return *param_1;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "extract_byte_information_080025ac",
                "param_2": "input_value",
                "param_3": "offset_1",
                "param_4": "offset_2",
                "uVar1": "masked_value_1",
                "uVar2": "masked_value_2",
                "uVar3": "division_result",
                "iVar4": "calculated_offset"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_data_08002634",
            "code": "\nvoid initializeData_08002634(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080025ac(param1,param2,0x220,0x960,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_data_08002634",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "update_data_and_call_function_08002644",
            "code": "\nvoid updateDataAndCallFunction_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte value;\n  uint index;\n  int result;\n  \n  index = (uint)*data;\n  value = (&DAT_20000258)[index * 8];\n  (&DAT_20000258)[index * 8] = value & 0xbf;\n  result = FUN_08002400(index / 0xc,param2,value & 0xbf,index * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "update_data_and_call_function_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "value",
                "uVar2": "index",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_memory_value_0800267c",
            "code": "\nvoid updateMemoryValue_0800267c(byte *memoryPointer,int valueToUpdate)\n\n{\n  int newValue;\n  \n  if (*memoryPointer < 0xc) {\n    newValue = (0x88 - (char)memoryPointer[1]) * 4;\n    if ((newValue - valueToUpdate == 0 || newValue < valueToUpdate) &&\n       (newValue = (600 - (char)memoryPointer[2]) * 4,\n       valueToUpdate == newValue || valueToUpdate + (600 - (char)memoryPointer[2]) * -4 < 0 != SBORROW4(valueToUpdate,newValue)))\n    {\n      newValue = valueToUpdate;\n    }\n    *(int *)(&DAT_2000025c + (uint)*memoryPointer * 8) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_memory_value_0800267c",
                "param_1": "memoryPointer",
                "param_2": "valueToUpdate",
                "iVar1": "newValue"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "process_params_080026b0",
            "code": "\nvoid processParams_080026b0(int inputParam,int limitParam)\n\n{\n  if (limitParam < 0x220) {\n    if (limitParam < 0) {\n      limitParam = 0;\n    }\n    else if (0xb4 < limitParam) {\n      limitParam = 0xb4;\n    }\n    limitParam = FUN_08008ef4(limitParam,0,0xb4,(0x88 - *(char *)(inputParam + 1)) * 4,\n                           (600 - *(char *)(inputParam + 2)) * 4);\n  }\n  FUN_0800267c(inputParam,limitParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "process_params_080026b0",
                "param_1": "inputParam",
                "param_2": "limitParam"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "get_bit_from_lookup_table_080026f8",
            "code": "\nuint getBitFromLookupTable_080026f8(byte *byteArray)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*byteArray * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "get_bit_from_lookup_table_080026f8",
                "param_1": "byteArray"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "get_next_byte_08002720",
            "code": "\nuint get_next_byte_08002720(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = (uint)DAT_200003b5;\n  if (uVar1 < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + uVar1);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "get_next_byte_08002720"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint process_data_080027f0(int data_ptr,undefined4 value,uint offset)\n\n{\n  int success;\n  uint new_offset;\n  \n  if (DAT_200003b4 == '\\0') {\n    success = FUN_08007ede(data_ptr + 0x14,value,offset & 0xffff);\n    if (success == 0) {\n      return offset;\n    }\n    return 0;\n  }\n  new_offset = DAT_200003b8 + offset;\n  if (DAT_200003c5 < new_offset) {\n    if (new_offset < 0x20) {\n      new_offset = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,new_offset);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_offset;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(data_ptr + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,value,offset);\n  DAT_200003b6 = DAT_200003b6 + (char)offset;\n  DAT_200003b8 = DAT_200003b6;\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "data_ptr",
                "param_2": "value",
                "param_3": "offset",
                "iVar1": "success",
                "uVar2": "new_offset"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "process_data_0800288c",
            "code": "\nundefined4 processData_0800288c(int dataOffset,undefined data)\n\n{\n  undefined4 result;\n  int error;\n  uint newSize;\n  undefined dataByte;\n  \n  dataByte = data;\n  if (DAT_200003b4 == '\\0') {\n    error = FUN_08007ede(dataOffset + 0x14,&dataByte,1);\n    if (error == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(dataOffset + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = dataByte;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "param_1": "dataOffset",
                "param_2": "data",
                "uVar1": "result",
                "iVar2": "error",
                "uVar3": "newSize",
                "local_11": "dataByte"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_parameters_0800291c",
            "code": "\nvoid initializeParameters_0800291c(undefined4 *parameters)\n\n{\n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(parameters + 0x1b) = 0x19;\n  *(undefined *)((int)parameters + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_parameters_0800291c",
                "param_1": "parameters"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_and_perform_action_08002948",
            "code": "\nvoid check_and_perform_action_08002948(int status,int value)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_and_perform_action_08002948",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_communication_08002968",
            "code": "\nvoid initializeCommunication_08002968(int communicationBuffer,uint communicationFlag)\n\n{\n  int shiftedFlag;\n  int messagePtr;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedFlag = (communicationFlag & 0x7f) << 1;\n  *(char *)(communicationBuffer + 0x10) = (char)shiftedFlag;\n  if (communicationFlag == 0x33) {\n    *(undefined *)(communicationBuffer + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(communicationBuffer + 0x11) = 0;\n  }\n  messagePtr = communicationBuffer + 0x14;\n  FUN_080077b0(messagePtr,100000,0x4000,shiftedFlag,*(undefined *)(communicationBuffer + 0x11));\n  if (*(char *)(communicationBuffer + 0x11) == '\\0') {\n    FUN_08007f8e(messagePtr,&LAB_08002774_1);\n    FUN_08007f7c(messagePtr,&LAB_08002b00_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_communication_08002968",
                "param_1": "communicationBuffer",
                "param_2": "communicationFlag",
                "iVar1": "shiftedFlag",
                "iVar2": "messagePtr"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid execute_function_08002a1c(undefined4 input_1,undefined input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_08002968(input_1,input_2,input_3,input_4,input_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_data_08002a26",
            "code": "\nvoid initializeData_08002a26(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_08002a1c(data1,0x33,data3,data4,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_data_08002a26",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_variables_08002a30",
            "code": "\nvoid initializeVariables_08002a30(undefined4 param1,int param2)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(param2 << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_variables_08002a30",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_status_08002a58",
            "code": "\nundefined4 checkStatus_08002a58(int inputParam)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)(inputParam + 0x11) == '\\0') {\n    status = 4;\n  }\n  else {\n    result = FUN_08007e74(inputParam + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      status = 0;\n    }\n    else if (result == 1) {\n      status = 1;\n    }\n    else {\n      status = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "param_1": "inputParam",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "initialize_function_08002ac0",
            "code": "\nvoid initializeFunction_08002ac0(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_08002a58(input_1,1,input_3,input_4,input_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "initialize_function_08002ac0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_byte_limit_08002acc",
            "code": "\nvoid updateByteLimit_08002acc(uint byteLimit,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (DAT_200003c4 < byteLimit) {\n    if (byteLimit < 0x20) {\n      byteLimit = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,byteLimit,param_3,(uint)DAT_200003c4,param_4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)byteLimit;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_byte_limit_08002acc",
                "param_1": "byteLimit"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "execute_function_08002b68",
            "code": "\nundefined4\nexecute_function_08002b68(undefined4 *function_pointer,uint num_iterations,undefined4 execution_flag,uint mask,byte byte_value)\n\n{\n  int result;\n  uint byte_counter;\n  uint temp;\n  \n  byte_counter = (uint)byte_value;\n  if (*(char *)((int)function_pointer + 0x11) == '\\0') {\n    return 0;\n  }\n  temp = mask;\n  FUN_08002acc(execution_flag);\n  if (DAT_200003c8 != 0) {\n    if (byte_counter != 0) {\n      FUN_08002a30(function_pointer,num_iterations);\n      if (3 < byte_counter) {\n        byte_counter = 3;\n      }\n      while( true ) {\n        if (byte_counter == 0) break;\n        (**(code **)*function_pointer)(function_pointer,mask >> ((byte_counter - 1 & 0x1f) << 3) & 0xff);\n        byte_counter = byte_counter - 1 & 0xff;\n      }\n      FUN_08002a58(function_pointer,0);\n    }\n    result = FUN_08007f0e(function_pointer + 5,(num_iterations & 0x7f) << 1,DAT_200003c8,execution_flag,temp);\n    if (result != 0) {\n      execution_flag = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)execution_flag;\n    return execution_flag;\n  }\n  function_pointer[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "execute_function_08002b68",
                "param_1": "function_pointer",
                "param_2": "num_iterations",
                "param_3": "execution_flag",
                "param_4": "mask",
                "param_5": "byte_value",
                "iVar1": "result",
                "uVar2": "byte_counter",
                "uVar3": "temp"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "execute_initialization_08002c00",
            "code": "\nvoid executeInitialization_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "execute_initialization_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_application_08002c14",
            "code": "\nvoid initializeApplication_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_application_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_system_08002c1e",
            "code": "\nvoid initializeSystem_08002c1e(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002948(1,0xffff,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_system_08002c1e",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_if_not_null_08002c2c",
            "code": "\nvoid executeIfNotNull_08002c2c(undefined4 functionPointer,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(param_2,param_3,param_3,DAT_200005d4,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_if_not_null_08002c2c",
                "param_1": "functionPointer"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_data_08002ce0",
            "code": "\nint initializeData_08002ce0(int dataPointer)\n\n{\n  int offset;\n  \n  FUN_0800314e(dataPointer + 0x40);\n  offset = dataPointer + 0x44;\n  FUN_080032bc(offset,dataPointer,0x40);\n  *(undefined *)(dataPointer + 0xc4) = 0;\n  *(undefined4 *)(dataPointer + 200) = 0;\n  *(undefined *)(dataPointer + 0x1f8) = 0;\n  FUN_08003306(offset,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(offset,0x90,&label_1,0);\n  FUN_08003306(offset,0xc0,&label_2,0);\n  FUN_08003306(offset,0xd0,&label_3,0);\n  FUN_08003306(offset,0xf4,&label_4,0);\n  FUN_08003306(offset,0xf5,&label_5,0);\n  FUN_08003366(offset,0x71,&label_6,0);\n  FUN_08003370(offset,0xf0,&label_7,0);\n  FUN_08003346(offset,0x79,&label_8,dataPointer);\n  FUN_08003350(offset,0xf9,&label_9,dataPointer);\n  FUN_08003350(offset,0xff,&label_10,0);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_data_08002ce0",
                "param_1": "dataPointer",
                "iVar1": "offset",
                "LAB_08002c40_1": "label_1",
                "LAB_08002c7c_1": "label_2",
                "LAB_08002c90_1": "label_3",
                "LAB_08002c54_1": "label_4",
                "LAB_08002c68_1": "label_5",
                "LAB_08002ca4_1": "label_6",
                "LAB_08002cb8_1": "label_7",
                "LAB_08002e1a_1": "label_8",
                "LAB_08002dea_1": "label_9",
                "LAB_08002cd0_1": "label_10"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_and_handle_param_08002dbc",
            "code": "\nvoid check_and_handle_param_08002dbc(int status,int value)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_and_handle_param_08002dbc",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "initialize_memory_08002ddc",
            "code": "\nvoid initializeMemory_08002ddc(int baseAddress,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  FUN_0800322c(baseAddress + 0x40,2,5,value3,value3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "initialize_memory_08002ddc",
                "param_1": "baseAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int dataPointer)\n\n{\n  undefined *pointerToData;\n  \n  if (*(byte *)(dataPointer + 0xc4) == 0) {\n    return;\n  }\n  pointerToData = *(undefined **)(dataPointer + 200);\n  FUN_080031ce(dataPointer + 0x40,*pointerToData,pointerToData[1],*(byte *)(dataPointer + 0xc4) - 2,pointerToData + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "dataPointer",
                "puVar1": "pointerToData"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_data_08002e26",
            "code": "\nvoid updateData_08002e26(int dataAddress,undefined4 newValue)\n\n{\n  *(undefined4 *)(dataAddress + 0xc0) = newValue;\n  FUN_08003154(dataAddress + 0x40);\n  FUN_08002ddc(dataAddress);\n  FUN_08002df6(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_data_08002e26",
                "param_1": "dataAddress",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "extract_file_name_08002e44",
            "code": "\nvoid extractFileName_08002e44(int output,int input,undefined undefined1,undefined undefined2)\n\n{\n  byte byteVar;\n  char charVar;\n  int result1;\n  int result2;\n  undefined *ptr;\n  \n  result1 = FUN_080099a4(input,\".cpp\");\n  result2 = FUN_0800997e(input,0x2f);\n  if (result2 == 0) {\n    result2 = FUN_0800997e(input,0x5c);\n  }\n  if (result2 != 0) {\n    input = result2 + 1;\n  }\n  if (result1 == 0) {\n    charVar = FUN_08000178(input);\n    *(char *)(output + 0xc4) = charVar + '\\x02';\n  }\n  else {\n    *(char *)(output + 0xc4) = ((char)result1 - (char)input) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(output + 200));\n  byteVar = *(byte *)(output + 0xc4);\n  ptr = (undefined *)FUN_08009190(byteVar + 1);\n  *(undefined **)(output + 200) = ptr;\n  ptr[byteVar] = 0;\n  *ptr = undefined1;\n  ptr[1] = undefined2;\n  FUN_08009954(ptr + 2,input,*(byte *)(output + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "extract_file_name_08002e44",
                "param_1": "output",
                "param_2": "input",
                "param_3": "undefined1",
                "param_4": "undefined2",
                "bVar1": "byteVar",
                "cVar2": "charVar",
                "iVar3": "result1",
                "iVar4": "result2",
                "puVar5": "ptr"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_nested_function_08002ec4",
            "code": "\nvoid executeNestedFunction_08002ec4(int nestedFunctionPointer)\n\n{\n  (**(code **)(**(int **)(nestedFunctionPointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_nested_function_08002ec4",
                "param_1": "nestedFunctionPointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "execute_function_08002ed2",
            "code": "\nvoid execute_function_08002ed2(int function_pointer)\n\n{\n  uint return_value;\n  \n  return_value = (**(code **)(**(int **)(function_pointer + 0xc0) + 0xc))();\n  if (return_value != 0xffffffff) {\n    FUN_08003474(function_pointer + 0x44,return_value & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "execute_function_08002ed2",
                "param_1": "function_pointer",
                "uVar1": "return_value"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "initialize_data_08002ef2",
            "code": "\nvoid initializeData_08002ef2(int baseAddress,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  FUN_08003158(baseAddress + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "initialize_data_08002ef2",
                "param_1": "baseAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "execute_function_08002efe",
            "code": "\nvoid executeFunction_08002efe(int input,undefined4 config,undefined2 data,undefined4 options)\n\n{\n  FUN_0800319e(input + 0x40,config,data,options,options);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "execute_function_08002efe",
                "param_1": "input",
                "param_2": "config",
                "param_3": "data",
                "param_4": "options"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_resources_08002f0a",
            "code": "\nvoid initializeResources_08002f0a(int resourceIndex)\n\n{\n  FUN_0800325a(resourceIndex + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_resources_08002f0a",
                "param_1": "resourceIndex"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_func_08002f14",
            "code": "\nvoid initialize_func_08002f14(int base_address)\n\n{\n  FUN_080032a2(base_address + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_func_08002f14",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_function_08002f1e",
            "code": "\nvoid executeFunction_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_function_08002f1e",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_08002f2c",
            "code": "\nvoid updateData_08002f2c(undefined4 status,uint value,undefined4 newValue)\n\n{\n  undefined4 uVar1;\n  \n  if (value == 0xd0) {\n    DAT_200005f0 = newValue;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      DAT_200005e0 = newValue;\n      return;\n    }\n    uVar1 = newValue;\n    if ((value != 0xf5) && (uVar1 = DAT_200005e4, value == 0xe0)) {\n      DAT_200005d4 = newValue;\n      return;\n    }\n    DAT_200005e4 = uVar1;\n    return;\n  }\n  if (value == 0x90) {\n    DAT_200005dc = newValue;\n    return;\n  }\n  if (value != 0xc0) {\n    return;\n  }\n  DAT_200005ec = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_08002f2c",
                "param_1": "status",
                "param_2": "value",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_data_if_value_is_max_08002f84",
            "code": "\nvoid updateDataIfValueIsMax_08002f84(undefined4 valueToUpdate,int newValue,undefined4 data)\n\n{\n  if (newValue == 0xff) {\n    DAT_200005e8 = data;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_data_if_value_is_max_08002f84",
                "param_1": "valueToUpdate",
                "param_2": "newValue",
                "param_3": "data"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "set_param_3_08002f94",
            "code": "\nvoid set_param_3_08002f94(undefined4 unused_param_1,undefined4 unused_param_2,undefined4 new_value)\n\n{\n  DAT_200005d0 = new_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "set_param_3_08002f94",
                "param_1": "unused_param_1",
                "param_2": "unused_param_2",
                "param_3": "new_value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_value_at_offset_08002fa0",
            "code": "\nundefined get_value_at_offset_08002fa0(int offset,int base_address)\n\n{\n  return *(undefined *)(base_address + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_value_at_offset_08002fa0",
                "param_1": "offset",
                "param_2": "base_address"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_character_if_not_valid_08002fa8",
            "code": "\nvoid updateCharacterIfNotValid_08002fa8(int arrayBase,int arrayIndex,undefined newCharacter)\n\n{\n  if (*(char *)(arrayBase + arrayIndex + 0xcc) != '\\x7f') {\n    *(undefined *)(arrayBase + arrayIndex + 0xcc) = newCharacter;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_character_if_not_valid_08002fa8",
                "param_1": "arrayBase",
                "param_2": "arrayIndex",
                "param_3": "newCharacter"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_element_from_array_08002fba",
            "code": "\nundefined4 get_element_from_array_08002fba(int array_base_address,int element_index)\n\n{\n  return *(undefined4 *)(array_base_address + (element_index + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_element_from_array_08002fba",
                "param_1": "array_base_address",
                "param_2": "element_index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_in_array_08002fc2",
            "code": "\nvoid storeValueInArray_08002fc2(int arrayBaseAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(arrayBaseAddress + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_in_array_08002fc2",
                "param_1": "arrayBaseAddress",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "execute_function_multiple_times_08002fca",
            "code": "\nvoid executeFunctionMultipleTimes_08002fca(undefined4 param1,undefined4 param2,int numberOfExecutions,undefined4 param4,\n                 undefined4 param5)\n\n{\n  uint executionCount;\n  \n  for (executionCount = 0; (int)executionCount < numberOfExecutions; executionCount = executionCount + 1 & 0xff) {\n    FUNC_08008ac4(param5);\n    FUN_08008a24(param2,1);\n    FUNC_08008ac4(param4);\n    FUN_08008a24(param2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "execute_function_multiple_times_08002fca",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "numberOfExecutions",
                "param_4": "param4",
                "param_5": "param5",
                "uVar1": "executionCount"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "process_data_08003002",
            "code": "\nvoid processData_08003002(int data)\n\n{\n  if (*(char *)(data + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(data,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(data,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "process_data_08003002",
                "param_1": "data"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_and_execute_08003048",
            "code": "\nvoid initializeDataAndExecute_08003048(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008c44(&DAT_20000700,arg2,6,arg4,arg4);\n  FUN_08003002(arg1);\n  FUN_08002e26(arg1,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_and_execute_08003048",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_varints_0800307a",
            "code": "\nvoid decode_varints_0800307a(undefined4 *output,uint input_length,byte *encoded_data,uint max_output_length)\n\n{\n  uint current_byte;\n  uint bit_position;\n  uint output_position;\n  uint input_position;\n  \n  current_byte = (uint)*encoded_data;\n  if (max_output_length == 0) {\n    max_output_length = 0xffffffff;\n  }\n  input_position = 0;\n  bit_position = 0;\n  output_position = 0;\n  while ((input_position < input_length && (output_position < max_output_length))) {\n    (***(code ***)(undefined4 *)*output)\n              ((undefined4 *)*output,((uint)encoded_data[input_position] << (bit_position & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)encoded_data[input_position] >> (7 - bit_position & 0xff) & 0xff;\n    bit_position = bit_position + 1;\n    while ((output_position = output_position + 1, 6 < bit_position && (output_position < max_output_length))) {\n      (***(code ***)(undefined4 *)*output)((undefined4 *)*output,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bit_position = bit_position - 7;\n    }\n    input_position = input_position + 1;\n  }\n  if ((bit_position != 0) && (output_position < max_output_length)) {\n    (***(code ***)(undefined4 *)*output)((undefined4 *)*output,(1 << (bit_position & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_varints_0800307a",
                "param_1": "output",
                "param_2": "input_length",
                "param_3": "encoded_data",
                "param_4": "max_output_length",
                "uVar1": "current_byte",
                "uVar2": "bit_position",
                "uVar3": "output_position",
                "uVar4": "input_position"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid executeFunction_08003106(undefined4 *functionPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 *functionPointerValue;\n  \n  functionPointerValue = (undefined4 *)*functionPointer;\n  if (functionPointerValue != (undefined4 *)0x0) {\n    (**(code **)*functionPointerValue)(functionPointerValue,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x6f);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param2);\n    FUN_0800307a(functionPointer,param3,param4,param3);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "functionPointerValue"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_value_0800314e",
            "code": "\nvoid initializeValue_0800314e(undefined4 *targetPointer)\n\n{\n  *targetPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_value_0800314e",
                "param_1": "targetPointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "assign_parameter_value_08003154",
            "code": "\nvoid assignParameterValue_08003154(undefined4 *destination,undefined4 newValue)\n\n{\n  *destination = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "assign_parameter_value_08003154",
                "param_1": "destination",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "handle_function_08003158",
            "code": "\nvoid handleFunction_08003158(undefined4 *functionPtr,uint value,ushort flag)\n\n{\n  undefined4 *ptr;\n  ushort temp;\n  \n  ptr = (undefined4 *)*functionPtr;\n  if (ptr != (undefined4 *)0x0) {\n    temp = flag;\n    if (((int)value < 0x10) && (flag < 0x4000)) {\n      (**(code **)*ptr)(ptr,value | 0xe0);\n      FUN_0800307a(functionPtr,2,&temp);\n    }\n    else {\n      FUN_08003106(functionPtr,value,2,&temp);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "handle_function_08003158",
                "param_1": "functionPtr",
                "param_2": "value",
                "param_3": "flag",
                "puVar1": "ptr",
                "local_a": "temp"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_callback_0800319e",
            "code": "\nvoid execute_callback_0800319e(undefined4 *callback_function,uint callback_param,undefined2 callback_flag)\n\n{\n  undefined4 *function_pointer;\n  undefined2 callback_data;\n  \n  function_pointer = (undefined4 *)*callback_function;\n  if (function_pointer != (undefined4 *)0x0) {\n    callback_data = callback_flag;\n    (**(code **)*function_pointer)(function_pointer,callback_param & 0xf | 0x90);\n    FUN_0800307a(callback_function,2,&callback_data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_callback_0800319e",
                "param_1": "callback_function",
                "param_2": "callback_param",
                "param_3": "callback_flag",
                "puVar1": "function_pointer",
                "local_a": "callback_data"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid executeFunction_080031ce(undefined4 *functionPointer,undefined4 value1,undefined4 value2,uint length,int offset\n                 )\n\n{\n  undefined4 *functionPtr1;\n  uint index;\n  \n  functionPtr1 = (undefined4 *)*functionPointer;\n  if (functionPtr1 != (undefined4 *)0x0) {\n    (**(code **)*functionPtr1)(functionPtr1,0xf0,value2,*(code **)*functionPtr1,length);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x79);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,value1);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,value2);\n    for (index = 0; index < length; index = index + 1) {\n      FUN_0800307a(functionPointer,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "functionPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "length",
                "param_5": "offset",
                "puVar1": "functionPtr1",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_operations_0800322c",
            "code": "\nvoid executeOperations_0800322c(undefined4 *operationList,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 *operationPtr;\n  \n  operationPtr = (undefined4 *)*operationList;\n  if (operationPtr != (undefined4 *)0x0) {\n    (**(code **)*operationPtr)(operationPtr,0xf9);\n    (***(code ***)(undefined4 *)*operationList)((undefined4 *)*operationList,param2);\n    (***(code ***)(undefined4 *)*operationList)((undefined4 *)*operationList,param3);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_operations_0800322c",
                "param_1": "operationList",
                "param_2": "param2",
                "param_3": "param3",
                "puVar1": "operationPtr"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_function_0800325a",
            "code": "\nvoid executeFunction_0800325a(undefined4 *functionPointer,undefined4 value,uint iterationCount,int startIndex)\n\n{\n  undefined4 *pointer;\n  uint counter;\n  \n  pointer = (undefined4 *)*functionPointer;\n  if (pointer != (undefined4 *)0x0) {\n    (**(code **)*pointer)(pointer,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,value);\n    for (counter = 0; counter < iterationCount; counter = counter + 1) {\n      FUN_0800307a(functionPointer,1,startIndex + counter,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "functionPointer",
                "param_2": "value",
                "param_3": "iterationCount",
                "param_4": "startIndex",
                "puVar1": "pointer",
                "uVar2": "counter"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "send_data_080032a2",
            "code": "\nvoid sendData_080032a2(undefined4 outputBuffer,undefined4 inputBuffer,undefined4 unused1,undefined4 unused2)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(inputBuffer);\n  FUN_0800325a(outputBuffer,0x71,result,inputBuffer,unused2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "send_data_080032a2",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer",
                "param_3": "unused1",
                "param_4": "unused2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_data_080032bc",
            "code": "\nvoid initializeData_080032bc(int dataStruct,int value,undefined4 param3)\n\n{\n  *(int *)(dataStruct + 4) = value;\n  *(undefined4 *)(dataStruct + 8) = param3;\n  *(undefined *)(dataStruct + 0xc) = 0;\n  *(undefined *)(dataStruct + 0xd) = 0;\n  *(undefined4 *)(dataStruct + 0x10) = 0;\n  *(undefined *)(dataStruct + 0x14) = 0;\n  *(undefined4 *)(dataStruct + 0x18) = 0;\n  *(undefined4 *)(dataStruct + 0x1c) = 0;\n  *(undefined4 *)(dataStruct + 0x20) = 0;\n  *(undefined4 *)(dataStruct + 0x24) = 0;\n  *(undefined4 *)(dataStruct + 0x28) = 0;\n  *(undefined4 *)(dataStruct + 0x2c) = 0;\n  *(undefined4 *)(dataStruct + 0x30) = 0;\n  *(undefined4 *)(dataStruct + 0x34) = 0;\n  *(undefined4 *)(dataStruct + 0x38) = 0;\n  *(undefined4 *)(dataStruct + 0x3c) = 0;\n  *(undefined4 *)(dataStruct + 0x40) = 0;\n  *(undefined4 *)(dataStruct + 0x44) = 0;\n  *(undefined4 *)(dataStruct + 0x48) = 0;\n  *(undefined4 *)(dataStruct + 0x4c) = 0;\n  *(undefined4 *)(dataStruct + 0x50) = 0;\n  *(undefined4 *)(dataStruct + 0x54) = 0;\n  *(undefined4 *)(dataStruct + 0x58) = 0;\n  *(undefined4 *)(dataStruct + 0x5c) = 0;\n  *(undefined4 *)(dataStruct + 0x60) = 0;\n  *(undefined4 *)(dataStruct + 100) = 0;\n  *(undefined4 *)(dataStruct + 0x68) = 0;\n  *(undefined4 *)(dataStruct + 0x6c) = 0;\n  *(undefined4 *)(dataStruct + 0x70) = 0;\n  *(undefined4 *)(dataStruct + 0x74) = 0;\n  *(undefined4 *)(dataStruct + 0x78) = 0;\n  *(bool *)dataStruct = value equal 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_data_080032bc",
                "param_1": "dataStruct",
                "param_2": "value",
                "param_3": "param3",
                "==": "equal"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_memory_locations_08003306",
            "code": "\nvoid updateMemoryLocations_08003306(int baseAddress,uint value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(baseAddress + 0x58) = newValue1;\n    *(undefined4 *)(baseAddress + 0x28) = newValue2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(baseAddress + 0x5c) = newValue1;\n      *(undefined4 *)(baseAddress + 0x2c) = newValue2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(baseAddress + 0x60) = newValue1;\n      *(undefined4 *)(baseAddress + 0x30) = newValue2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(baseAddress + 0x4c) = newValue1;\n      *(undefined4 *)(baseAddress + 0x1c) = newValue2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(baseAddress + 0x50) = newValue1;\n    *(undefined4 *)(baseAddress + 0x20) = newValue2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(baseAddress + 0x54) = newValue1;\n    *(undefined4 *)(baseAddress + 0x24) = newValue2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_memory_locations_08003306",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "set_parameters_08003346",
            "code": "\nvoid setParameters_08003346(int objectAddress,int value,undefined4 address1,undefined4 address2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(objectAddress + 0x70) = address1;\n    *(undefined4 *)(objectAddress + 0x34) = address2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "set_parameters_08003346",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "address1",
                "param_4": "address2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_registers_08003350",
            "code": "\nvoid updateRegisters_08003350(int registerBase,int registerValue,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (registerValue == 0xf9) {\n    *(undefined4 *)(registerBase + 0x74) = newValue1;\n    *(undefined4 *)(registerBase + 0x38) = newValue2;\n    return;\n  }\n  if (registerValue != 0xff) {\n    return;\n  }\n  *(undefined4 *)(registerBase + 0x78) = newValue1;\n  *(undefined4 *)(registerBase + 0x48) = newValue2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_registers_08003350",
                "param_1": "registerBase",
                "param_2": "registerValue",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_parameters_08003366",
            "code": "\nvoid updateParameters_08003366(int functionPointer,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(functionPointer + 0x68) = newValue1;\n    *(undefined4 *)(functionPointer + 0x40) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_parameters_08003366",
                "param_1": "functionPointer",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_parameters_08003370",
            "code": "\nvoid setParameters_08003370(int objectPointer,undefined4 unusedParam,undefined4 value1,undefined4 value2)\n\n{\n  *(undefined4 *)(objectPointer + 0x6c) = value1;\n  *(undefined4 *)(objectPointer + 0x44) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "objectPointer",
                "param_2": "unusedParam",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_data_08003376",
            "code": "\nvoid updateData_08003376(undefined *data,undefined value,uint index)\n\n{\n  bool isIndexValid;\n  \n  if (index < *(uint *)(data + 8)) {\n    isIndexValid = false;\n  }\n  else {\n    isIndexValid = true;\n    if (*(code **)(data + 100) != (code *)0x0) {\n      *data = 1;\n      (**(code **)(data + 100))(*(undefined4 *)(data + 0x3c));\n      if (index < *(uint *)(data + 8)) {\n        isIndexValid = false;\n      }\n      else {\n        isIndexValid = true;\n      }\n    }\n  }\n  if (!isIndexValid) {\n    *(undefined *)(*(int *)(data + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_data_08003376",
                "param_1": "data",
                "param_2": "value",
                "param_3": "index",
                "bVar1": "isIndexValid"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bits_080033a8",
            "code": "\nvoid copyAndShiftBits_080033a8(undefined4 param1,uint param2,int param3)\n\n{\n  byte currentByte;\n  int destIndex;\n  uint sourceIndex;\n  \n  destIndex = 0;\n  for (sourceIndex = 0; sourceIndex < param2; sourceIndex = sourceIndex + 2) {\n    currentByte = *(byte *)(param3 + sourceIndex);\n    *(byte *)(param3 + destIndex) = currentByte;\n    *(byte *)(param3 + destIndex) = *(char *)(param3 + sourceIndex + 1) << 7 | currentByte;\n    destIndex = destIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "bVar1": "currentByte",
                "iVar2": "destIndex",
                "uVar3": "sourceIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid process_input_080033cc(int input_data,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char first_char;\n  int length;\n  char *input_ptr;\n  \n  input_ptr = *(char **)(input_data + 4);\n  first_char = *input_ptr;\n  if (first_char == 'q') {\n    if (*(int *)(input_data + 0x68) != 0) {\n      length = FUN_080033a8(input_data,*(int *)(input_data + 0x18) + -1,input_ptr + 1,input_ptr,param_4);\n      FUN_08003376(input_data,0,length + 1);\n      (**(code **)(input_data + 0x68))(*(undefined4 *)(input_data + 0x40),*(int *)(input_data + 4) + 1);\n      return;\n    }\n  }\n  else if (first_char == 'y') {\n    if (*(code **)(input_data + 0x70) != (code *)0x0) {\n      if (*(uint *)(input_data + 0x18) < 3) {\n        (**(code **)(input_data + 0x70))(*(undefined4 *)(input_data + 0x34),0,0);\n        return;\n      }\n      length = FUN_080033a8(input_data,*(uint *)(input_data + 0x18) - 3,input_ptr + 3,input_ptr,param_4);\n      FUN_08003376(input_data,0,length + 3);\n      length = *(int *)(input_data + 4);\n      (**(code **)(input_data + 0x70))\n                (*(undefined4 *)(input_data + 0x34),*(undefined *)(length + 1),*(undefined *)(length + 2)\n                 ,length + 3);\n      return;\n    }\n  }\n  else if (*(code **)(input_data + 0x6c) != (code *)0x0) {\n    (**(code **)(input_data + 0x6c))\n              (*(undefined4 *)(input_data + 0x44),first_char,*(int *)(input_data + 0x18) + -1,input_ptr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "input_data",
                "cVar1": "first_char",
                "iVar2": "length",
                "pcVar3": "input_ptr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_function_0800344a",
            "code": "\nvoid initializeFunction_0800344a(int functionParam)\n\n{\n  uint loopIndex;\n  \n  *(undefined4 *)(functionParam + 0x10) = 0;\n  *(undefined *)(functionParam + 0xc) = 0;\n  *(undefined *)(functionParam + 0xd) = 0;\n  for (loopIndex = 0; loopIndex < *(uint *)(functionParam + 8); loopIndex = loopIndex + 1) {\n    *(undefined *)(*(int *)(functionParam + 4) + loopIndex) = 0;\n  }\n  *(undefined *)(functionParam + 0x14) = 0;\n  *(undefined4 *)(functionParam + 0x18) = 0;\n  if (*(code **)(functionParam + 0x78) != (code *)0x0) {\n    (**(code **)(functionParam + 0x78))(*(undefined4 *)(functionParam + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_function_0800344a",
                "param_1": "functionParam",
                "uVar1": "loopIndex"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "handle_param_08003474",
            "code": "\nvoid handle_param_08003474(int address,uint value)\n\n{\n  byte byteValue;\n  \n  if (*(char *)(address + 0x14) != '\\0') {\n    if (value != 0xf7) {\n      FUN_08003376(address,value,*(undefined4 *)(address + 0x18));\n      *(int *)(address + 0x18) = *(int *)(address + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(address + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(address + 0x10) == 0) || (0x7f < (int)value)) {\n    if ((int)value < 0xf0) {\n      *(byte *)(address + 0xd) = (byte)value & 0xf;\n      value = value & 0xf0;\n    }\n    if (value == 0xf0) {\n      *(undefined *)(address + 0x14) = 1;\n      *(undefined4 *)(address + 0x18) = 0;\n      return;\n    }\n    if (value < 0xf1) {\n      if (value != 0xc0) {\n        if (value < 0xc1) {\n          if (value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (value == 0xd0) goto LAB_0800359c;\n          if (value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(address + 0x10) = 2;\n        *(char *)(address + 0xc) = (char)value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(address + 0x10) = 1;\n      *(char *)(address + 0xc) = (char)value;\n      return;\n    }\n    if (value != 0xf9) {\n      if (0xf9 < value) {\n        if (value == 0xff) {\n          FUN_0800344a(address);\n          return;\n        }\n        return;\n      }\n      if (1 < value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(address + 0x74) != (code *)0x0) {\n      (**(code **)(address + 0x74))(*(undefined4 *)(address + 0x38));\n    }\n  }\n  else {\n    *(int *)(address + 0x10) = *(int *)(address + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(address + 0x10) == 0) && (byteValue = *(byte *)(address + 0xc), byteValue != 0)) {\n      if (byteValue == 0xd0) {\n        if (*(code **)(address + 0x58) != (code *)0x0) {\n          (**(code **)(address + 0x58))\n                    (*(undefined4 *)(address + 0x28),*(undefined *)(address + 0xd),\n                     **(undefined **)(address + 4));\n        }\n      }\n      else if (byteValue < 0xd1) {\n        if (byteValue == 0x90) {\n          if (*(code **)(address + 0x50) != (code *)0x0) {\n            (**(code **)(address + 0x50))\n                      (*(undefined4 *)(address + 0x20),*(undefined *)(address + 0xd),\n                       (uint)(*(byte **)(address + 4))[1] + (uint)**(byte **)(address + 4) * 0x80);\n          }\n        }\n        else if ((byteValue == 0xc0) && (*(code **)(address + 0x54) != (code *)0x0)) {\n          (**(code **)(address + 0x54))\n                    (*(undefined4 *)(address + 0x24),*(undefined *)(address + 0xd),\n                     **(undefined **)(address + 4));\n        }\n      }\n      else if (byteValue == 0xf4) {\n        if (*(code **)(address + 0x5c) != (code *)0x0) {\n          (**(code **)(address + 0x5c))\n                    (*(undefined4 *)(address + 0x2c),(*(undefined **)(address + 4))[1],\n                     **(undefined **)(address + 4));\n        }\n      }\n      else if (byteValue == 0xf5) {\n        if (*(code **)(address + 0x60) != (code *)0x0) {\n          (**(code **)(address + 0x60))\n                    (*(undefined4 *)(address + 0x30),(*(undefined **)(address + 4))[1],\n                     **(undefined **)(address + 4));\n        }\n      }\n      else if ((byteValue == 0xe0) && (*(code **)(address + 0x4c) != (code *)0x0)) {\n        (**(code **)(address + 0x4c))\n                  (*(undefined4 *)(address + 0x1c),*(undefined *)(address + 0xd),\n                   (uint)(*(byte **)(address + 4))[1] + (uint)**(byte **)(address + 4) * 0x80);\n      }\n      *(undefined *)(address + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "handle_param_08003474",
                "param_1": "address",
                "param_2": "value",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_board_080035b8",
            "code": "\nvoid initializeBoard_080035b8(void)\n\n{\n  int result;\n  uint timeInSeconds;\n  undefined4 configParams [2];\n  undefined4 timeout;\n  undefined4 gpioPin;\n  undefined4 mode;\n  undefined4 pull;\n  undefined4 speed;\n  undefined4 alternateFunction;\n  undefined4 buffer [4];\n  undefined4 bufferSize;\n  undefined4 address;\n  undefined4 dataSize;\n  undefined4 slaveAddress;\n  undefined4 peripheralAddress;\n  \n  buffer[0] = 2;\n  bufferSize = 1;\n  address = 0x10;\n  dataSize = 2;\n  slaveAddress = 0;\n  peripheralAddress = 0x380000;\n  result = FUN_08005460(buffer);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  gpioPin = 0xf;\n  mode = 2;\n  pull = 0;\n  speed = 0x400;\n  alternateFunction = 0;\n  result = FUN_080058ac(&gpioPin);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  configParams[0] = 2;\n  timeout = 0x8000;\n  result = FUN_08005aa4(configParams);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeInSeconds = FUN_08005a1c();\n  FUN_08003fd8(timeInSeconds / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_board_080035b8",
                "iVar1": "result",
                "uVar2": "timeInSeconds",
                "local_54": "configParams",
                "local_4c": "timeout",
                "local_44": "gpioPin",
                "local_40": "mode",
                "local_3c": "pull",
                "local_38": "speed",
                "local_34": "alternateFunction",
                "local_30": "buffer",
                "local_20": "bufferSize",
                "local_1c": "address",
                "local_14": "dataSize",
                "local_10": "slaveAddress",
                "local_c": "peripheralAddress"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_program_080036a2",
            "code": "\nvoid initialize_program_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_program_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "check_value_080036ac",
            "code": "\nuint check_value_080036ac(int input_value)\n\n{\n  uint index;\n  \n  if ((uint)(input_value << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (input_value != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "check_value_080036ac",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "check_and_set_param_080036d8",
            "code": "\nundefined4 checkAndSetParam_080036d8(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputParam,0);\n  DAT_20000010 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "check_and_set_param_080036d8",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "enable_data_logging_08003724",
            "code": "\n\n\nundefined4 enable_data_logging_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "enable_data_logging_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "addition_increment_08003748",
            "code": "\nvoid addition_increment_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "addition_increment_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_value_08003760",
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "process_data_0800376c",
            "code": "\nundefined4 processData_0800376c(uint **dataPtr,uint limit)\n\n{\n  int startValue;\n  uint factor;\n  int condition;\n  undefined4 result;\n  uint *dataPointer;\n  uint calculatedValue;\n  uint counter;\n  \n  counter = 0;\n  startValue = FUN_08003760();\n  calculatedValue = DAT_20000018;\n  dataPointer = *dataPtr;\n  if ((dataPointer[2] & 0x100) == 0) {\n    if (((dataPointer[1] & 0x100) == 0) && ((dataPointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**dataPtr & 2) != 0) goto LAB_0800387e;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (condition = FUN_08003760(), (uint)(condition - startValue) <= limit))));\n      dataPtr[10] = (uint *)((uint)dataPtr[10] | 4);\n      *(undefined *)(dataPtr + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08005bb8(2);\n      dataPointer = *dataPtr;\n      if (((dataPointer[4] & 0x24924924) == 0) && ((dataPointer[3] & 0x924924) == 0)) {\n        if ((dataPointer[4] & 0x12492492) == 0) {\n          if ((dataPointer[3] & 0x492492) == 0) {\n            condition = 0x14;\n          }\n          else {\n            condition = 0x29;\n          }\n        }\n        else {\n          condition = 0x29;\n        }\n      }\n      else if (((dataPointer[4] & 0x12492492) == 0) && ((dataPointer[3] & 0x492492) == 0)) {\n        condition = 0x54;\n      }\n      else if ((dataPointer[4] & 0x249249) == 0) {\n        if ((dataPointer[3] & 0x249249) == 0) {\n          condition = 0x54;\n        }\n        else {\n          condition = 0xfc;\n        }\n      }\n      else {\n        condition = 0xfc;\n      }\n      calculatedValue = (calculatedValue / factor) * condition;\n      for (; counter <= calculatedValue && calculatedValue - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (condition = FUN_08003760(), limit < (uint)(condition - startValue))))) {\n          dataPtr[10] = (uint *)((uint)dataPtr[10] | 4);\n          *(undefined *)(dataPtr + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **dataPtr = 0xffffffed;\n      dataPtr[10] = (uint *)((uint)dataPtr[10] | 0x200);\n      if (((*dataPtr)[2] & 0xe0000) == 0xe0000) {\n        if (dataPtr[3] == (uint *)0x0) {\n          dataPtr[10] = (uint *)((uint)dataPtr[10] & 0xfffffeff);\n          if (((uint)dataPtr[10] & 0x1000) == 0) {\n            dataPtr[10] = (uint *)((uint)dataPtr[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    dataPtr[10] = (uint *)((uint)dataPtr[10] | 0x20);\n    *(undefined *)(dataPtr + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "process_data_0800376c",
                "param_1": "dataPtr",
                "param_2": "limit",
                "iVar1": "startValue",
                "uVar2": "factor",
                "iVar3": "condition",
                "uVar4": "result",
                "puVar5": "dataPointer",
                "uVar6": "calculatedValue",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 getOffsetValue_080038dc(int *offsetPointer)\n\n{\n  return *(undefined4 *)(*offsetPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "offsetPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_registers_080038e4",
            "code": "\nundefined4 update_registers_080038e4(int *register_array,uint *data_array)\n\n{\n  undefined4 return_value;\n  uint index;\n  int counter;\n  \n  if (*(char *)(register_array + 9) == '\\x01') {\n    return_value = 2;\n  }\n  else {\n    *(undefined *)(register_array + 9) = 1;\n    index = data_array[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*register_array + 0x34) =\n           *data_array << (index & 0xff) | *(uint *)(*register_array + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*register_array + 0x30) =\n           *data_array << (index & 0xff) | *(uint *)(*register_array + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*register_array + 0x2c) =\n           *data_array << (index & 0xff) | *(uint *)(*register_array + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *data_array;\n    if (index < 10) {\n      *(uint *)(*register_array + 0x10) =\n           data_array[2] << (index * 3 & 0xff) |\n           *(uint *)(*register_array + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*register_array + 0xc) =\n           data_array[2] << (index & 0xff) | *(uint *)(*register_array + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*data_array - 0x10 < 2) {\n      if (*register_array == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*data_array == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            return_value = 0;\n          }\n          else {\n            return_value = 0;\n          }\n        }\n        else {\n          return_value = 0;\n        }\n      }\n      else {\n        register_array[10] = register_array[10] | 0x20;\n        return_value = 1;\n      }\n    }\n    else {\n      return_value = 0;\n    }\n    *(undefined *)(register_array + 9) = 0;\n  }\n  return return_value;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_registers_080038e4",
                "param_1": "register_array",
                "param_2": "data_array",
                "uVar1": "return_value",
                "uVar2": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_offset_value_08003a1c",
            "code": "\nuint32 getOffsetValue_08003a1c(int baseAddress)\n\n{\n  return *(uint32 *)(baseAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_offset_value_08003a1c",
                "param_1": "baseAddress",
                "undefined4": "uint32"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "reverse_and_set_flag_08003a20",
            "code": "\nundefined4 reverseAndSetFlag_08003a20(int *inputArray,undefined4 inputValue)\n\n{\n  int iterationCount;\n  undefined4 returnValue;\n  int firstElement;\n  uint localVariable;\n  \n  firstElement = *inputArray;\n  if ((*(uint *)(firstElement + 8) & 1) == 0) {\n    *(uint *)(firstElement + 8) = *(uint *)(firstElement + 8) | 1;\n    for (localVariable = DAT_20000018 / 1000000; localVariable != 0; localVariable = localVariable - 1) {\n    }\n    firstElement = FUN_08003760(inputArray,inputValue,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*inputArray + 8) & 1) != 0) {\n        return 0;\n      }\n      iterationCount = FUN_08003760();\n    } while ((uint)(iterationCount - firstElement) < 3);\n    inputArray[10] = inputArray[10] | 0x10;\n    inputArray[0xb] = inputArray[0xb] | 1;\n    *(undefined *)(inputArray + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "reverse_and_set_flag_08003a20",
                "param_1": "inputArray",
                "param_2": "inputValue",
                "iVar1": "iterationCount",
                "uVar2": "returnValue",
                "iVar3": "firstElement",
                "local_14": "localVariable"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "update_status_08003aa0",
            "code": "\n\n\nint updateStatus_08003aa0(int *statusArray)\n\n{\n  int returnValue;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(statusArray + 9) != '\\x01') {\n    *(undefined *)(statusArray + 9) = 1;\n    returnValue = FUN_08003a20();\n    if (returnValue == 0) {\n      statusArray[10] = statusArray[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*statusArray;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        statusArray[10] = statusArray[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          statusArray[10] = statusArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        statusArray[10] = statusArray[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          statusArray[10] = statusArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((statusArray[10] & 0x1000U) == 0) {\n        statusArray[0xb] = 0;\n      }\n      else {\n        statusArray[0xb] = statusArray[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(statusArray + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *statusArray;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(statusArray + 9) = 0;\n    }\n    return returnValue;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "update_status_08003aa0",
                "param_1": "statusArray",
                "iVar1": "returnValue",
                "puVar2": "ptr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "check_and_set_flags_08003b8c",
            "code": "\nundefined4 checkAndSetFlags_08003b8c(int *inputArray)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *inputArray;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08003760();\n  do {\n    if ((*(uint *)(*inputArray + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08003760();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  inputArray[10] = inputArray[10] | 0x10;\n  inputArray[0xb] = inputArray[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "check_and_set_flags_08003b8c",
                "param_1": "inputArray",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "check_and_configure_device_08003bd8",
            "code": "\nundefined4 check_and_configure_device_08003bd8(int *device_configuration)\n\n{\n  int result;\n  uint flag1;\n  uint flag2;\n  \n  if (device_configuration == (int *)0x0) {\n    return 1;\n  }\n  if (device_configuration[10] == 0) {\n    device_configuration[0xb] = 0;\n    *(undefined *)(device_configuration + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(device_configuration);\n  if (((device_configuration[10] & 0x10U) == 0) && (result == 0)) {\n    device_configuration[10] = device_configuration[10] & 0xffffeefdU | 2;\n    flag1 = device_configuration[1] | device_configuration[7] | device_configuration[3] << 1;\n    if (device_configuration[2] == 0x100) {\n      flag2 = 0x100;\n    }\n    else {\n      flag2 = 0;\n      if (device_configuration[2] == 1) {\n        flag2 = 0x100;\n      }\n    }\n    if (device_configuration[5] == 1) {\n      if (device_configuration[3] == 0) {\n        flag2 = flag2 | (device_configuration[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        device_configuration[10] = device_configuration[10] | 0x20;\n        device_configuration[0xb] = device_configuration[0xb] | 1;\n      }\n    }\n    *(uint *)(*device_configuration + 4) = flag2 | *(uint *)(*device_configuration + 4) & 0xffff16ff;\n    *(uint *)(*device_configuration + 8) = *(uint *)(*device_configuration + 8) & 0xffe1f7fd | flag1;\n    if ((device_configuration[2] == 0x100) || (device_configuration[2] == 1)) {\n      flag2 = (device_configuration[4] + -1) * 0x100000;\n    }\n    else {\n      flag2 = 0;\n    }\n    *(uint *)(*device_configuration + 0x2c) = flag2 | *(uint *)(*device_configuration + 0x2c) & 0xff0fffff;\n    if (flag1 != (*(uint *)(*device_configuration + 8) & 0xff1f0efe)) {\n      device_configuration[10] = device_configuration[10] & 0xffffffedU | 0x10;\n      device_configuration[0xb] = device_configuration[0xb] | 1;\n      return 1;\n    }\n    device_configuration[0xb] = 0;\n    device_configuration[10] = device_configuration[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  device_configuration[10] = device_configuration[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "check_and_configure_device_08003bd8",
                "param_1": "device_configuration",
                "iVar1": "result",
                "uVar2": "flag1",
                "uVar3": "flag2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "clear_memory_08003ce8",
            "code": "\nint clearMemory_08003ce8(int *memoryPtr)\n\n{\n  int result;\n  \n  if (memoryPtr == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    memoryPtr[10] = memoryPtr[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*memoryPtr = 0xffffffe0;\n      *(uint *)(*memoryPtr + 4) = *(uint *)(*memoryPtr + 4) & 0xff3f0000;\n      *(uint *)(*memoryPtr + 8) = *(uint *)(*memoryPtr + 8) & 0xff0106f0;\n      *(uint *)(*memoryPtr + 0xc) = *(uint *)(*memoryPtr + 0xc) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x10) = *(uint *)(*memoryPtr + 0x10) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x14) = *(uint *)(*memoryPtr + 0x14) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x18) = *(uint *)(*memoryPtr + 0x18) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x1c) = *(uint *)(*memoryPtr + 0x1c) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x20) = *(uint *)(*memoryPtr + 0x20) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x24) = *(uint *)(*memoryPtr + 0x24) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x28) = *(uint *)(*memoryPtr + 0x28) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x2c) = *(uint *)(*memoryPtr + 0x2c) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x2c) = *(uint *)(*memoryPtr + 0x2c) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x30) = *(uint *)(*memoryPtr + 0x30) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x34) = *(uint *)(*memoryPtr + 0x34) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x38) = *(uint *)(*memoryPtr + 0x38) & 0xffc00000;\n      *(uint *)(*memoryPtr + 0x38) = *(uint *)(*memoryPtr + 0x38) & 0xffc00000;\n      FUN_08006d24(memoryPtr);\n      memoryPtr[0xb] = 0;\n      memoryPtr[10] = 0;\n    }\n    *(undefined *)(memoryPtr + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "clear_memory_08003ce8",
                "param_1": "memoryPtr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_update_status_08003de4",
            "code": "\nint checkAndUpdateStatus_08003de4(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_update_status_08003de4",
                "param_1": "status",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "check_and_update_status_08003e20",
            "code": "\nint check_and_update_status_08003e20(int *param_array)\n\n{\n  uint data_size;\n  int status;\n  uint divide_result;\n  int start_time;\n  int current_time;\n  int loop_counter;\n  \n  if (*(char *)(param_array + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(param_array + 9) = 1;\n  status = FUN_08003b8c();\n  if (status == 0) {\n    param_array[10] = param_array[10] & 0xffffeefdU | 2;\n    data_size = DAT_20000018;\n    divide_result = FUN_08005bb8(2);\n    for (loop_counter = data_size / divide_result << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08003a20(param_array);\n    *(uint *)(*param_array + 8) = *(uint *)(*param_array + 8) | 8;\n    start_time = FUN_08003760();\n    while (current_time = *param_array, (*(uint *)(current_time + 8) & 8) != 0) {\n      current_time = FUN_08003760();\n      if (10 < (uint)(current_time - start_time)) {\n        param_array[10] = param_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(param_array + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n    start_time = FUN_08003760();\n    while ((*(uint *)(*param_array + 8) & 4) != 0) {\n      current_time = FUN_08003760();\n      if (10 < (uint)(current_time - start_time)) {\n        param_array[10] = param_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(param_array + 9) = 0;\n        return 1;\n      }\n    }\n    param_array[10] = param_array[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(param_array + 9) = 0;\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "check_and_update_status_08003e20",
                "param_1": "param_array",
                "uVar1": "data_size",
                "iVar2": "status",
                "uVar3": "divide_result",
                "iVar4": "start_time",
                "iVar5": "current_time",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "initialize_flag_08003f0c",
            "code": "\n\n\nvoid initializeFlag_08003f0c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "initialize_flag_08003f0c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "apply_bitmask_08003f30",
            "code": "\n\n\nvoid applyBitmask_08003f30(uint address,uint input1,uint input2)\n\n{\n  uint shiftAmount;\n  uint inverseShiftAmount;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  inverseShiftAmount = 7 - shiftAmount;\n  if (3 < inverseShiftAmount) {\n    inverseShiftAmount = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (input1 & (1 << (inverseShiftAmount & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & input2;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "apply_bitmask_08003f30",
                "param_1": "address",
                "param_2": "input1",
                "param_3": "input2",
                "uVar1": "shiftAmount",
                "uVar2": "inverseShiftAmount"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_in_memory_08003f94",
            "code": "\nvoid setBitInMemory_08003f94(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_in_memory_08003f94",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_in_memory_08003fb0",
            "code": "\nvoid setBitInMemory_08003fb0(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n    DataSynchronizationBarrier(0xf);\n    InstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "initialize_data_08003fd8",
            "code": "\n\n\nundefined4 initializeData_08003fd8(int inputData)\n\n{\n  if (inputData - 1U < 0x1000000) {\n    _DAT_e000e014 = inputData - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "initialize_data_08003fd8",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_in_array_08004004",
            "code": "\nvoid setBitInArray_08004004(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_in_array_08004004",
                "param_1": "bitIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "update_e000e010_08004024",
            "code": "\n\n\nvoid update_e000e010_08004024(int input_value)\n\n{\n  if (input_value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "update_e000e010_08004024",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_application_08004046",
            "code": "\nvoid initializeApplication_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_application_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "initialize_data_08004050",
            "code": "\n\n\nundefined4 initializeData_08004050(uint **dataParameter)\n\n{\n  uint *dataPointer;\n  \n  if (*(char *)((int)dataParameter + 0x21) != '\\x02') {\n    errorCode = (uint *)0x4;\n    return 1;\n  }\n  **dataParameter = **dataParameter & 0xfffffff1;\n  **dataParameter = **dataParameter & 0xfffffffe;\n  dataPointer = *dataParameter;\n  if (dataPointer == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (dataPointer == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (dataPointer == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (dataPointer == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (dataPointer == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (dataPointer == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)dataParameter + 0x21) = 1;\n  *(undefined *)(dataParameter + 8) = 0;\n  if (callbackFunction != (uint *)0x0) {\n    (*(code *)callbackFunction)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "initialize_data_08004050",
                "param_1": "dataParameter",
                "puVar1": "dataPointer",
                "param_1[0xe]": "errorCode",
                "param_1[0xd]": "callbackFunction"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_param_bits_080040e8",
            "code": "\n\n\nvoid updateParamBits_080040e8(uint *param_1,uint *param_2)\n\n{\n  uint *param_1_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint value;\n  uint updated_value;\n  int shifted_index;\n  int register_index;\n  \n  updated_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *param_2 & bit_mask;\n    if (bit_mask == bit_check) {\n      value = param_2[1];\n      if (value == 0x12) {\n        updated_value = param_2[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          updated_value = param_2[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_0800423a;\n          if (value == 1) {\n            updated_value = param_2[3];\n          }\n        }\n        else if (value == 3) {\n          updated_value = 0;\n        }\n        else if (value == 0x11) {\n          updated_value = param_2[3] + 4;\n        }\n      }\n      else if (value == 0x10210000) {\nLAB_0800423a:\n        if (param_2[2] == 0) {\n          updated_value = 4;\n        }\n        else if (param_2[2] == 1) {\n          param_1[4] = bit_mask;\n          updated_value = 8;\n        }\n        else {\n          param_1[5] = bit_mask;\n          updated_value = 8;\n        }\n      }\n      else if (value < 0x10210001) {\n        if ((value == 0x10110000) || (value == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((value == 0x10310000) || ((value == 0x10320000 || (value == 0x10220000))))\n      goto LAB_0800423a;\n      bit_mask = bit_index;\n      param_1_ptr = param_1;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        param_1_ptr = param_1 + 1;\n      }\n      *param_1_ptr = *param_1_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | updated_value << (bit_mask << 2 & 0xff);\n      if ((param_2[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shifted_index = (bit_index & 3) << 2;\n        if (param_1 == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (param_1 == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (param_1 == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (param_1 == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shifted_index) | register_index << shifted_index;\n        if ((param_2[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((param_2[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((param_2[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((param_2[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_param_bits_080040e8",
                "puVar1": "param_1_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "value",
                "uVar6": "updated_value",
                "iVar7": "shifted_index",
                "iVar8": "register_index"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_param_bit_080042d4",
            "code": "\nundefined4 check_param_bit_080042d4(int data_ptr1,uint bitmask)\n\n{\n  if ((bitmask & *(uint *)(data_ptr1 + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_param_bit_080042d4",
                "param_1": "data_ptr1",
                "param_2": "bitmask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int objectAddress,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "check_and_update_flag_080042f0",
            "code": "\n\n\nvoid checkAndUpdateFlag_080042f0(uint flag)\n\n{\n  if ((_DAT_40010414 & flag) != 0) {\n    _DAT_40010414 = flag;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "check_and_update_flag_080042f0",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "process_data_0800430c",
            "code": "\nundefined4 processData_0800430c(int *data)\n\n{\n  if (*(char *)((int)data + 0x3e) == '@') {\n    if (dataFlag == 0) {\n      *(uint *)(*data + 0x10) = inputValue & 0xfe;\n    }\n    else {\n      *(uint *)(*data + 0x10) = inputValue & 0xffU | 1;\n    }\n  }\n  else if (constantValue == 0x4000) {\n    if (*(char *)((int)data + 0x3d) == '!') {\n      *(uint *)(*data + 0x10) = inputValue & 0xfe;\n    }\n    else {\n      *(uint *)(*data + 0x10) = inputValue & 0xffU | 1;\n    }\n  }\n  else if (dataFlag == 0) {\n    *(uint *)(*data + 0x10) = (uint)(inputValue << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (dataFlag == 1) {\n    *(uint *)(*data + 0x10) = (uint)(inputValue << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "process_data_0800430c",
                "param_1": "data",
                "param_1[0x14]": "dataFlag",
                "param_1[0x11]": "inputValue",
                "(int)param_1": "(int)data",
                "param_1[4]": "constantValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "update_value_08004396",
            "code": "\nundefined4 updateValue_08004396(int *pointer)\n\n{\n  *(uint *)(*pointer + 0x10) = sourceValue & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "update_value_08004396",
                "param_1": "pointer",
                "param_1[0x11]": "sourceValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "process_param_080043a2",
            "code": "\nundefined4 processParam_080043a2(uint **paramArray)\n\n{\n  uint *tempPtr;\n  \n  tempPtr = paramArray[0xb];\n  if ((*(char *)((int)paramArray + 0x3d) == '\\\"') &&\n     ((fourthParam != (uint *)0x0 || (*(char *)((int)paramArray + 0x3e) != '@')))) {\n    if ((fourthParam == (uint *)0x0) && (fifthParam == (uint *)0xc000)) {\n      **paramArray = **paramArray | 0x100;\n      fourthParam = (uint *)((int)fourthParam + 1);\n    }\n    else {\n      if (*(short *)((int)paramArray + 0x2a) == 0) {\n        **paramArray = **paramArray | 0x200;\n      }\n      else if (*(short *)((int)paramArray + 0x2a) == 1) {\n        if (tempPtr == (uint *)0xffff0000) {\n          **paramArray = **paramArray & 0xfffffbff;\n          tempPtr = *paramArray;\n          if ((tempPtr[1] & 0x800) == 0) {\n            *tempPtr = *tempPtr | 0x200;\n          }\n          else {\n            *tempPtr = *tempPtr & 0xfffffbff;\n          }\n        }\n        else if (((tempPtr == (uint *)0x4) || (tempPtr == (uint *)0x8)) ||\n                (paramArray[0xc] == (uint *)0x12)) {\n          **paramArray = **paramArray & 0xfffffbff;\n          **paramArray = **paramArray | 0x200;\n        }\n        else if (paramArray[0xb] == (uint *)0x2) {\n          **paramArray = **paramArray | 0x400;\n        }\n        else {\n          **paramArray = **paramArray & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)paramArray + 0x2a) == 2) {\n        if (paramArray[0xb] == (uint *)0x2) {\n          **paramArray = **paramArray | 0x400;\n        }\n        else {\n          **paramArray = **paramArray | 0x800;\n          **paramArray = **paramArray & 0xfffffbff;\n        }\n        tempPtr = *paramArray;\n        if ((tempPtr[1] & 0x800) != 0) {\n          tempPtr[1] = tempPtr[1] | 0x1000;\n        }\n      }\n      else {\n        **paramArray = **paramArray | 0x400;\n        tempPtr = *paramArray;\n        if ((tempPtr[1] & 0x800) != 0) {\n          tempPtr[1] = tempPtr[1] | 0x1000;\n        }\n      }\n      fourthParam = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "process_param_080043a2",
                "param_1": "paramArray",
                "puVar1": "tempPtr",
                "param_1[0x14]": "fourthParam",
                "param_1[4]": "fifthParam"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_value_in_array_0800457c",
            "code": "\nundefined4 updateValueInArray_0800457c(integer *array)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((integer)array + 0x2a) != 0) {\n    bytePointer = (byte *)arrayIndex9;\n    arrayIndex9 = (integer)(bytePointer + 1);\n    *(uinteger *)(*array + 0x10) = (uinteger)*bytePointer;\n    *(short *)((integer)array + 0x2a) = *(short *)((integer)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_value_in_array_0800457c",
                "param_1": "array",
                "pbVar1": "bytePointer",
                "param_1[9]": "arrayIndex9",
                "int": "integer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_and_decrement_0800459c",
            "code": "\nundefined4 updateAndDecrement_0800459c(int *array)\n\n{\n  undefined *dataPointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    dataPointer = (undefined *)array[9];\n    array[9] = (int)(dataPointer + 1);\n    *dataPointer = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_and_decrement_0800459c",
                "param_1": "array",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "update_params_080045c0",
            "code": "\nundefined4 updateParams_080045c0(uint **params)\n\n{\n  bool isLess;\n  uint totalVal;\n  uint *paramVal;\n  uint computedVal;\n  \n  if (params == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)params + 0x3d) == '\\0') {\n    *(undefined *)(params + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)params + 0x3d) = 0x24;\n  **params = **params & 0xfffffffe;\n  totalVal = FUN_08005a28();\n  if (params[1] < (uint *)0x186a1) {\n    if (totalVal < 2000000) {\n      isLess = true;\n    }\n    else {\n      isLess = false;\n    }\n  }\n  else {\n    isLess = totalVal < 4000000;\n  }\n  if (isLess) {\n    return 1;\n  }\n  computedVal = totalVal / 1000000;\n  (*params)[1] = computedVal;\n  if ((uint *)0x186a0 < params[1]) {\n    computedVal = (computedVal * 300) / 1000;\n  }\n  (*params)[8] = computedVal + 1;\n  paramVal = params[1];\n  if (paramVal < (uint *)0x186a1) {\n    totalVal = (totalVal - 1) / (uint)((int)paramVal << 1) + 1 & 0xfff;\n    if (totalVal < 4) {\n      totalVal = 4;\n    }\n  }\n  else {\n    if (params[2] == (uint *)0x0) {\n      computedVal = (totalVal - 1) / (uint)((int)paramVal * 3);\n    }\n    else {\n      computedVal = (totalVal - 1) / (uint)((int)paramVal * 0x19);\n    }\n    if ((computedVal + 1 & 0xfff) == 0) {\n      totalVal = 1;\n    }\n    else if (params[2] == (uint *)0x0) {\n      totalVal = (totalVal - 1) / (uint)((int)paramVal * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      totalVal = (totalVal - 1) / (uint)((int)paramVal * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*params)[7] = totalVal;\n  **params = (uint)params[7] | (uint)params[8];\n  (*params)[2] = (uint)params[4] | (uint)params[3];\n  (*params)[3] = (uint)params[5] | (uint)params[6];\n  **params = **params | 1;\n  params[0x10] = (uint *)0x0;\n  *(undefined *)((int)params + 0x3d) = 0x20;\n  params[0xc] = (uint *)0x0;\n  *(undefined *)((int)params + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "update_params_080045c0",
                "param_1": "params",
                "bVar1": "isLess",
                "uVar2": "totalVal",
                "puVar3": "paramVal",
                "uVar4": "computedVal"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "process_data_08004728",
            "code": "\nundefined4 processData_08004728(uint **data,uint *param2,uint *param3,undefined2 param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x21;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param3;\n      *(undefined2 *)((int)data + 0x2a) = param4;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param2;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "check_and_initialize_080047f4",
            "code": "\nundefined4 check_and_initialize_080047f4(uint **ptr_array,uint *input_data_1,uint *input_data_2,undefined2 param_4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)ptr_array + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        ptr_array[0xc] = (uint *)0x0;\n        *(undefined *)((int)ptr_array + 0x3d) = 0x20;\n        *(undefined *)(ptr_array + 0xf) = 0;\n        return 3;\n      }\n      ptr = *ptr_array;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(ptr_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptr_array + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **ptr_array = **ptr_array & 0xfffff7ff;\n      *(undefined *)((int)ptr_array + 0x3d) = 0x22;\n      *(undefined *)((int)ptr_array + 0x3e) = 0x10;\n      result = 0;\n      ptr_array[0x10] = (uint *)0x0;\n      ptr_array[9] = input_data_2;\n      *(undefined2 *)((int)ptr_array + 0x2a) = param_4;\n      ptr_array[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(ptr_array + 10) = *(undefined2 *)((int)ptr_array + 0x2a);\n      ptr_array[0x11] = input_data_1;\n      **ptr_array = **ptr_array | 0x400;\n      **ptr_array = **ptr_array | 0x100;\n      *(undefined *)(ptr_array + 0xf) = 0;\n      (*ptr_array)[1] = (*ptr_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "check_and_initialize_080047f4",
                "param_1": "ptr_array",
                "param_2": "input_data_1",
                "param_3": "input_data_2",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validate_input_080048c8(uint **config,uint *data,int size,uint *output)\n\n{\n  undefined4 result;\n  uint *flags;\n  \n  if (*(char *)((int)config + 0x3d) == '(') {\n    if (data == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(config + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(config + 0xf) = 1;\n      flags = *config;\n      if ((*flags & 1) == 0) {\n        *flags = *flags | 1;\n      }\n      **config = **config & 0xfffff7ff;\n      *(undefined *)((int)config + 0x3d) = 0x29;\n      *(undefined *)((int)config + 0x3e) = 0x20;\n      result = 0;\n      config[0x10] = (uint *)0x0;\n      config[9] = data;\n      *(short *)((int)config + 0x2a) = (short)size;\n      config[0xb] = output;\n      *(undefined2 *)(config + 10) = *(undefined2 *)((int)config + 0x2a);\n      *(undefined *)(config + 0xf) = 0;\n      (*config)[1] = (*config)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "config",
                "param_2": "data",
                "param_3": "size",
                "param_4": "output",
                "uVar1": "result",
                "puVar2": "flags"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "initialize_data_08004954",
            "code": "\nundefined4 initializeData_08004954(uint **inputData,uint *optionalData,int dataLength,uint *outputData)\n\n{\n  undefined4 result;\n  uint *firstValue;\n  \n  if (*(char *)((int)inputData + 0x3d) == '(') {\n    if (optionalData == (uint *)0x0) {\n      result = 1;\n    }\n    else if (dataLength == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputData + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputData + 0xf) = 1;\n      firstValue = *inputData;\n      if ((*firstValue & 1) == 0) {\n        *firstValue = *firstValue | 1;\n      }\n      **inputData = **inputData & 0xfffff7ff;\n      *(undefined *)((int)inputData + 0x3d) = 0x2a;\n      *(undefined *)((int)inputData + 0x3e) = 0x20;\n      result = 0;\n      inputData[0x10] = (uint *)0x0;\n      inputData[9] = optionalData;\n      *(short *)((int)inputData + 0x2a) = (short)dataLength;\n      inputData[0xb] = outputData;\n      *(undefined2 *)(inputData + 10) = *(undefined2 *)((int)inputData + 0x2a);\n      *(undefined *)(inputData + 0xf) = 0;\n      (*inputData)[1] = (*inputData)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "initialize_data_08004954",
                "param_1": "inputData",
                "param_2": "optionalData",
                "param_3": "dataLength",
                "param_4": "outputData",
                "uVar1": "result",
                "puVar2": "firstValue"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_flags_080049e0",
            "code": "\nundefined4 initializeFlags_080049e0(uint **flags)\n\n{\n  uint *currentFlag;\n  \n  if (*(char *)((int)flags + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)flags + 0x3d) = 0x28;\n  currentFlag = *flags;\n  if ((*currentFlag & 1) == 0) {\n    *currentFlag = *currentFlag | 1;\n  }\n  **flags = **flags | 0x400;\n  (*flags)[1] = (*flags)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_flags_080049e0",
                "param_1": "flags",
                "puVar1": "currentFlag"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "update_data_08004a24",
            "code": "\nundefined4 updateData_08004a24(int *data)\n\n{\n  char character;\n  byte *bytePointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "update_data_08004a24",
                "param_1": "data",
                "cVar1": "character",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "update_data_08004a76",
            "code": "\nundefined4 updateData_08004a76(int *data)\n\n{\n  char character;\n  undefined *ptr;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)ptrArray[9];\n    ptrArray[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      ptrArray[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "update_data_08004a76",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptr",
                "param_1[9]": "ptrArray[9]",
                "param_1[0xc]": "ptrArray[0xc]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "decrypted_data_handler_08004ac2",
            "code": "\nundefined4 decryptedDataHandler_08004ac2(int *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint flag;\n  \n  flag = *(uint *)(*data + 0x18);\n  if ((flag & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(data + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(data + 6);\n  }\n  FUN_08007fa0(data,(*(uint *)(*data + 0x18) & 4) == 0,selectedValue,flag,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "decrypted_data_handler_08004ac2",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "process_param_08004aec",
            "code": "\nundefined4 processParam_08004aec(uint **paramArray)\n\n{\n  if (((paramArray[11] == (uint *)0x4) || (paramArray[11] == (uint *)0x8)) &&\n     (*(char *)((int)paramArray + 0x3d) == '(')) {\n    paramArray[11] = (uint *)0xffff0000;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    paramArray[12] = (uint *)0x0;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)paramArray + 0x3d) == '!') {\n    paramArray[11] = (uint *)0xffff0000;\n    paramArray[12] = (uint *)0x21;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*paramArray)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "process_param_08004aec",
                "param_1": "paramArray",
                "param_1[0xb]": "paramArray[11]",
                "param_1[0xc]": "paramArray[12]"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "parse_and_execute_command_08004b82",
            "code": "\nundefined4 parse_and_execute_command_08004b82(uint **command_args)\n\n{\n  char command_char;\n  uint *ptr_to_command_var;\n  \n  command_char = *(char *)((int)command_args + 0x3d);\n  ptr_to_command_var = command_args[0xb];\n  if ((*(short *)(command_args + 10) == 0) && (command_char == '!')) {\n    if ((ptr_to_command_var == (uint *)0x4) || ((ptr_to_command_var == (uint *)0x8 || (ptr_to_command_var == (uint *)0xffff0000)))) {\n      (*command_args)[1] = (*command_args)[1] & 0xfffff8ff;\n      **command_args = **command_args | 0x200;\n      command_args[0xc] = (uint *)0x0;\n      *(undefined *)((int)command_args + 0x3d) = 0x20;\n      if (*(char *)((int)command_args + 0x3e) == '@') {\n        *(undefined *)((int)command_args + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)command_args + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*command_args)[1] = (*command_args)[1] & 0xfffff8ff;\n      command_args[0xc] = (uint *)0x11;\n      *(undefined *)((int)command_args + 0x3e) = 0;\n      *(undefined *)((int)command_args + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((command_char == '!') || ((*(char *)((int)command_args + 0x3e) == '@' && (command_char == '\\\"')))) {\n    if (*(short *)((int)command_args + 0x2a) == 0) {\n      (*command_args)[1] = (*command_args)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)command_args + 0x3e) == '@') {\n      if (command_args[0x14] == (uint *)0x0) {\n        if (command_args[0x13] == (uint *)0x1) {\n          (*command_args)[4] = (uint)command_args[0x12] & 0xff;\n          command_args[0x14] = (uint *)((int)command_args[0x14] + 2);\n        }\n        else {\n          (*command_args)[4] = (uint)((int)command_args[0x12] << 0x10) >> 0x18;\n          command_args[0x14] = (uint *)((int)command_args[0x14] + 1);\n        }\n      }\n      else if (command_args[0x14] == (uint *)0x1) {\n        (*command_args)[4] = (uint)command_args[0x12] & 0xff;\n        command_args[0x14] = (uint *)((int)command_args[0x14] + 1);\n      }\n      else if (command_args[0x14] == (uint *)0x2) {\n        if (*(char *)((int)command_args + 0x3d) == '\\\"') {\n          **command_args = **command_args | 0x100;\n        }\n        else if (*(char *)((int)command_args + 0x3d) == '!') {\n          ptr_to_command_var = command_args[9];\n          command_args[9] = (uint *)((int)ptr_to_command_var + 1);\n          (*command_args)[4] = (uint)*(byte *)ptr_to_command_var;\n          *(short *)((int)command_args + 0x2a) = *(short *)((int)command_args + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptr_to_command_var = command_args[9];\n      command_args[9] = (uint *)((int)ptr_to_command_var + 1);\n      (*command_args)[4] = (uint)*(byte *)ptr_to_command_var;\n      *(short *)((int)command_args + 0x2a) = *(short *)((int)command_args + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "parse_and_execute_command_08004b82",
                "param_1": "command_args",
                "cVar1": "command_char",
                "puVar2": "ptr_to_command_var"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "parse_param1_08004ccc",
            "code": "\nundefined4 parseParam1_08004ccc(uint **paramArray)\n\n{\n  uint *paramPointer1;\n  \n  paramPointer1 = paramArraySublist;\n  if (*(char *)((int)paramArray + 0x3d) == '!') {\n    if (*(short *)((int)paramArray + 0x2a) == 0) {\n      if (((paramPointer1 == (uint *)0x4) || (paramPointer1 == (uint *)0x8)) || (paramPointer1 == (uint *)0xffff0000)) {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        **paramArray = **paramArray | 0x200;\n        paramArraySublist2 = (uint *)0x0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        if (*(char *)((int)paramArray + 0x3e) == '@') {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        paramArraySublist2 = (uint *)0x11;\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      paramPointer1 = paramArraySublist3;\n      paramArraySublist3 = (uint *)((int)paramPointer1 + 1);\n      (*paramArray)[4] = (uint)*(byte *)paramPointer1;\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "parse_param1_08004ccc",
                "param_1": "paramArray",
                "puVar1": "paramPointer1",
                "param_1[0xb]": "paramArraySublist",
                "param_1[0xc]": "paramArraySublist2",
                "param_1[9]": "paramArraySublist3"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "process_string_08004d6c",
            "code": "\nundefined4 processString_08004d6c(uint **stringArray)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)stringArray + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)stringArray + 0x2a) < 4) {\n      if (*(ushort *)((int)stringArray + 0x2a) - 2 < 2) {\n        if (stringArray[0xb] == (uint *)0x2) {\n          **stringArray = **stringArray | 0x400;\n        }\n        else {\n          **stringArray = **stringArray & 0xfffffbff;\n          **stringArray = **stringArray | 0x800;\n        }\n        (*stringArray)[1] = (*stringArray)[1] & 0xfffffbff;\n      }\n      else {\n        if (stringArray[0xb] == (uint *)0x2) {\n          **stringArray = **stringArray | 0x400;\n        }\n        else {\n          **stringArray = **stringArray & 0xfffffbff;\n        }\n        (*stringArray)[1] = (*stringArray)[1] & 0xfffff8ff;\n        tempPointer = stringArray[9];\n        stringArray[9] = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)(*stringArray)[4];\n        *(short *)((int)stringArray + 0x2a) = *(short *)((int)stringArray + 0x2a) + -1;\n        *(undefined *)((int)stringArray + 0x3d) = 0x20;\n        stringArray[0xc] = (uint *)0x0;\n        if (*(char *)((int)stringArray + 0x3e) == '@') {\n          *(undefined *)((int)stringArray + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)stringArray + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      tempPointer = stringArray[9];\n      stringArray[9] = (uint *)((int)tempPointer + 1);\n      *(char *)tempPointer = (char)(*stringArray)[4];\n      *(short *)((int)stringArray + 0x2a) = *(short *)((int)stringArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "process_string_08004d6c",
                "param_1": "stringArray",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_input_08004e3c",
            "code": "\nundefined4 processInput_08004e3c(uint **inputParams)\n\n{\n  uint *tempPtr;\n  \n  tempPtr = inputParams[0xb];\n  if (*(short *)((int)inputParams + 0x2a) == 3) {\n    if (((tempPtr == (uint *)0x4) || (tempPtr == (uint *)0x8)) || (tempPtr == (uint *)0xffff0000)) {\n      **inputParams = **inputParams & 0xfffffbff;\n    }\n    tempPtr = inputParams[9];\n    inputParams[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputParams + 0x2a) == 2) {\n    if (((tempPtr == (uint *)0x4) || (tempPtr == (uint *)0x8)) || (tempPtr == (uint *)0xffff0000)) {\n      (*inputParams)[1] = (*inputParams)[1] & 0xfffffcff;\n      **inputParams = **inputParams | 0x200;\n    }\n    else {\n      if (tempPtr == (uint *)0x2) {\n        **inputParams = **inputParams | 0x400;\n      }\n      else {\n        **inputParams = **inputParams & 0xfffffbff;\n      }\n      (*inputParams)[1] = (*inputParams)[1] & 0xfffffcff;\n    }\n    tempPtr = inputParams[9];\n    inputParams[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n    tempPtr = inputParams[9];\n    inputParams[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n    *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    inputParams[0xc] = (uint *)0x0;\n    if (*(char *)((int)inputParams + 0x3e) == '@') {\n      *(undefined *)((int)inputParams + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)inputParams + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    tempPtr = inputParams[9];\n    inputParams[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_input_08004e3c",
                "param_1": "inputParams",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_data_08004f3c",
            "code": "\nvoid process_data_08004f3c(uint **data)\n\n{\n  int result;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  ptr2 = *data;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = data[9];\n        data[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_08004f3a(data);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = data[9];\n        data[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      FUN_08008020(data);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x21) == '\\x01') {\n      data[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          ptr2 = data[9];\n          data[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0xd])();\n      }\n    }\n    else {\n      data[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    FUN_08007ff0(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_data_08004f3c",
                "param_1": "data",
                "iVar1": "result",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_param_08005084",
            "code": "\nundefined4 processParam_08005084(uint **paramArray)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)paramArray + 0x3d);\n  (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n  **paramArray = **paramArray | 1;\n  **paramArray = **paramArray & 0xfffffbff;\n  ptr1 = *paramArray;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)paramArray + 0x3d) == '\\\"') || (*(char *)((int)paramArray + 0x3d) == '*')) {\n      *(short *)((int)paramArray + 0x2a) = (short)*(undefined4 *)(*paramArray[0xe] + 4);\n    }\n    else {\n      *(short *)((int)paramArray + 0x2a) = (short)*(undefined4 *)(*paramArray[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = paramArray[9];\n      paramArray[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n    if (((*paramArray)[5] & 0x40) != 0) {\n      ptr1 = paramArray[9];\n      paramArray[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*paramArray)[4];\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n    paramArray[0x10] = (uint *)((uint)paramArray[0x10] | 4);\n  }\n  if (paramArray[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      paramArray[0xb] = (uint *)0xffff0000;\n      paramArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((paramArray[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      paramArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_param_08005084",
                "param_1": "paramArray",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_flags_08005188",
            "code": "\nvoid process_flags_08005188(int *input_data)\n\n{\n  int ptr;\n  uint flags_1;\n  uint flags_2;\n  uint flags_3;\n  \n  ptr = *input_data;\n  flags_3 = *(uint *)(ptr + 0x18);\n  flags_1 = *(uint *)(ptr + 0x14);\n  flags_2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)input_data + 0x3e) == '\\x10') || (*(char *)((int)input_data + 0x3e) == '@')) {\n    if (((flags_1 & 0x10001) == 0) || ((flags_2 & 0x200) == 0)) {\n      if (((flags_1 & 0x10008) == 0) || ((flags_2 & 0x200) == 0)) {\n        if (((flags_1 & 0x10002) != 0) && ((flags_2 & 0x200) != 0)) {\n          FUN_080043a2(input_data);\n        }\n      }\n      else {\n        FUN_08004396(input_data);\n      }\n    }\n    else {\n      FUN_0800430c(input_data);\n    }\n    if ((flags_3 & 0x100004) == 0) {\n      if ((((flags_1 & 0x10040) != 0) && ((flags_2 & 0x400) != 0)) && ((flags_1 & 0x10004) == 0)) {\n        FUN_08004d6c(input_data);\n        return;\n      }\n      if (((flags_1 & 0x10004) != 0) && ((flags_2 & 0x200) != 0)) {\n        FUN_08004e3c(input_data);\n        return;\n      }\n    }\n    else {\n      if ((((flags_1 & 0x10080) != 0) && ((flags_2 & 0x400) != 0)) && ((flags_1 & 0x10004) == 0)) {\n        FUN_08004b82(input_data);\n        return;\n      }\n      if (((flags_1 & 0x10004) != 0) && ((flags_2 & 0x200) != 0)) {\n        FUN_08004ccc(input_data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flags_1 & 0x10002) != 0) && ((flags_2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flags_1 & 0x10010) != 0) && ((flags_2 & 0x200) != 0)) {\n      FUN_08005084(input_data);\n      return;\n    }\n    if ((flags_3 & 0x100004) == 0) {\n      if ((((flags_1 & 0x10040) != 0) && ((flags_2 & 0x400) != 0)) && ((flags_1 & 0x10004) == 0)) {\n        FUN_08004a76(input_data);\n        return;\n      }\n      if (((flags_1 & 0x10004) != 0) && ((flags_2 & 0x200) != 0)) {\n        FUN_0800459c(input_data);\n      }\n    }\n    else {\n      if ((((flags_1 & 0x10080) != 0) && ((flags_2 & 0x400) != 0)) && ((flags_1 & 0x10004) == 0)) {\n        FUN_08004a24(input_data);\n        return;\n      }\n      if (((flags_1 & 0x10004) != 0) && ((flags_2 & 0x200) != 0)) {\n        FUN_0800457c(input_data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_flags_08005188",
                "param_1": "input_data",
                "iVar1": "ptr",
                "uVar2": "flags_1",
                "uVar3": "flags_2",
                "uVar4": "flags_3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "modify_permissions_080052f0",
            "code": "\nvoid modifyPermissions_080052f0(uint **data)\n\n{\n  char character;\n  uint *pointer;\n  uint value1;\n  uint value2;\n  \n  pointer = *data;\n  value1 = pointer[5];\n  value2 = pointer[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 1);\n    pointer[5] = 0xfffffeff;\n    **data = **data | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 2);\n    (*data)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)data + 0x3d);\n    if (((*(char *)((int)data + 0x3e) == ' ') && (*(short *)((int)data + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (data[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(data);\n    }\n    else {\n      data[0x10] = (uint *)((uint)data[0x10] | 4);\n      if (*(char *)((int)data + 0x3e) == '\\x10') {\n        **data = **data | 0x200;\n      }\n      (*data)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 8);\n    (*data)[5] = 0xfffff7ff;\n  }\n  if (data[0x10] != (uint *)0x0) {\n    FUN_08004f3c(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "modify_permissions_080052f0",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "pointer",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_byte_from_offset_0800542a",
            "code": "\nundefined getByteFromOffset_0800542a(int offset)\n\n{\n  return *(undefined *)(offset + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_byte_from_offset_0800542a",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_pointer_at_offset_08005430",
            "code": "\nundefined4 getPointerAtOffset_08005430(int baseAddress)\n\n{\n  return *(undefined4 *)(baseAddress + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_pointer_at_offset_08005430",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delay_function_08005434(int input)\n\n{\n  bool is_delay_not_zero;\n  int delay_counter;\n  \n  delay_counter = input * (DAT_20000018 / 8000);\n  do {\n    is_delay_not_zero = delay_counter != 0;\n    delay_counter = delay_counter + -1;\n  } while (is_delay_not_zero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "input",
                "local_4": "delay_counter",
                "bVar1": "is_delay_not_zero"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "check_status_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkStatus_08005460(uint *statusBits)\n\n{\n  int initialTime;\n  int currentTime;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*statusBits & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (statusBits[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = statusBits[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (statusBits[1] == 0) {\n        initialTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initialTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*statusBits & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (statusBits[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusBits[5] << 3;\n    }\n    else if (statusBits[4] == 0) {\n      _DAT_42420000 = 0;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusBits[5] << 3;\n    }\n  }\n  if ((*statusBits & 8) != 0) {\n    if (statusBits[6] == 0) {\n      _DAT_42420480 = 0;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*statusBits & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    value = statusBits[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (statusBits[3] == 0) {\n      initialTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initialTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (statusBits[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (statusBits[7] == 2) {\n    _DAT_42420060 = 0;\n    initialTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (statusBits[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | statusBits[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | statusBits[8] | statusBits[9];\n        _DAT_42420060 = 1;\n        initialTime = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08003760();\n        } while ((uint)(currentTime - initialTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    initialTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "check_status_08005460",
                "param_1": "statusBits",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_delay_time_08005840",
            "code": "\n\n\nuint calculateDelayTime_08005840(void)\n\n{\n  uint delayTime;\n  undefined2 localVariable;\n  undefined4 constantFour;\n  undefined4 constantThree;\n  undefined4 constantTwo;\n  undefined4 constantOne;\n  \n  constantOne = 0x10100f0e;\n  constantTwo = 0xd0c0b0a;\n  constantThree = 0x9080706;\n  constantFour = 0x5040302;\n  localVariable = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delayTime = (uint)*(byte *)((int)&constantFour + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delayTime = delayTime * 4000000;\n    }\n    else {\n      delayTime = (delayTime * 8000000) /\n              (uint)*(byte *)((int)&localVariable - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delayTime = 8000000;\n  }\n  return delayTime;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_delay_time_08005840",
                "uStack_c": "constantOne",
                "uStack_10": "constantTwo",
                "uStack_14": "constantThree",
                "uStack_18": "constantFour",
                "local_1c": "localVariable",
                "uVar1": "delayTime"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "update_memory_configuration_080058ac",
            "code": "\n\n\nundefined4 updateMemoryConfiguration_080058ac(uint *memoryConfig,uint configSize)\n\n{\n  int initialTime;\n  int currentTime;\n  uint flagValue;\n  \n  if ((_DAT_40022000 & 7) < configSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*memoryConfig & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | memoryConfig[2];\n  }\n  if ((*memoryConfig & 1) != 0) {\n    flagValue = memoryConfig[1];\n    if (flagValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((flagValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = flagValue | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08003760();\n    if (memoryConfig[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (memoryConfig[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (configSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*memoryConfig & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | memoryConfig[3];\n  }\n  if ((*memoryConfig & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | memoryConfig[4] << 3;\n  }\n  flagValue = FUN_08005840();\n  DAT_20000018 = flagValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "update_memory_configuration_080058ac",
                "param_1": "memoryConfig",
                "param_2": "configSize",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "flagValue"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "update_settings_080058d2",
            "code": "\n\n\nundefined4 updateSettings_080058d2(uint *settings,uint value)\n\n{\n  int iVar1;\n  int iVar2;\n  uint option;\n  \n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    option = settings[1];\n    if (option == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((option != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = option | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08003760();\n    if (settings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (settings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settings[4] << 3;\n  }\n  option = FUN_08005840();\n  DAT_20000018 = option >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "update_settings_080058d2",
                "param_1": "settings",
                "param_2": "value",
                "uVar3": "option"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_global_data_08005a1c",
            "code": "\nundefined4 getGlobalData_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_global_data_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_08005a28",
            "code": "\n\n\nuint shiftedValue_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_08005a28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "extracted_data_shifted_08005a48",
            "code": "\n\n\nuint extractedDataShifted_08005a48(void)\n\n{\n  uint extractedData;\n  \n  extractedData = FUN_08005a1c();\n  return extractedData >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "extracted_data_shifted_08005a48",
                "uVar1": "extractedData"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_values_08005a68",
            "code": "\n\n\nvoid initializeValues_08005a68(undefined4 *outputArray,uint *inputArray)\n\n{\n  *outputArray = 0xf;\n  outputArray[1] = _DAT_40021004 & 3;\n  outputArray[2] = _DAT_40021004 & 0xf0;\n  outputArray[3] = _DAT_40021004 & 0x700;\n  outputArray[4] = _DAT_40021004 >> 3 & 0x700;\n  *inputArray = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_values_08005a68",
                "param_1": "outputArray",
                "param_2": "inputArray"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "update_configuration_08005aa4",
            "code": "\n\n\nundefined4 updateConfiguration_08005aa4(uint *config)\n\n{\n  uint flag1;\n  uint flag2;\n  int var1;\n  int var2;\n  bool isFlagEnabled;\n  \n  if ((*config & 1) != 0) {\n    isFlagEnabled = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagEnabled) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      var1 = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        var2 = FUN_08003760();\n        if (100 < (uint)(var2 - var1)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      flag2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      flag1 = _DAT_40021020 & 1;\n      _DAT_40021020 = flag2;\n      if (flag1 != 0) {\n        var1 = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          var2 = FUN_08003760();\n          if (5000 < (uint)(var2 - var1)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (isFlagEnabled) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "update_configuration_08005aa4",
                "param_1": "config",
                "uVar1": "flag1",
                "uVar2": "flag2",
                "iVar3": "var1",
                "iVar4": "var2",
                "bVar5": "isFlagEnabled"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_parameter_value_08005bb8",
            "code": "\n\n\nuint calculateParameterValue_08005bb8(int inputValue)\n\n{\n  uint result;\n  undefined2 constantValue;\n  undefined4 stackVariable1;\n  undefined4 stackVariable2;\n  undefined4 stackVariable3;\n  undefined4 stackVariable4;\n  \n  stackVariable4 = 0x10100f0e;\n  stackVariable3 = 0xd0c0b0a;\n  stackVariable2 = 0x9080706;\n  stackVariable1 = 0x5040302;\n  constantValue = 0x201;\n  if (inputValue == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&stackVariable1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_parameter_value_08005bb8",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "constantValue",
                "uStack_20": "stackVariable1",
                "uStack_1c": "stackVariable2",
                "uStack_18": "stackVariable3",
                "uStack_14": "stackVariable4"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "initialize_memory_08005cb4",
            "code": "\n\n\nvoid initializeMemory_08005cb4(uint **memoryPointer)\n\n{\n  if (((**memoryPointer & 2) != 0) && (((*memoryPointer)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*memoryPointer)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)memoryPointer + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "initialize_memory_08005cb4",
                "param_1": "memoryPointer"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_params_08005cec",
            "code": "\nvoid updateParams_08005cec(int paramAddress,uint *paramArray)\n\n{\n  uint updatedVal1;\n  uint updatedVal2;\n  uint updatedVal3;\n  \n  *(uint *)(paramAddress + 0x20) = *(uint *)(paramAddress + 0x20) & 0xfffffffe;\n  updatedVal2 = *(uint *)(paramAddress + 4);\n  updatedVal3 = *paramArray;\n  updatedVal1 = *(uint *)(paramAddress + 0x20) & 0xfffffffd | paramArray[2];\n  if (paramAddress == 0x40012c00) {\n    updatedVal1 = (updatedVal1 & 0xfffffff7 | paramArray[3]) & 0xfffffffb;\n    updatedVal2 = updatedVal2 & 0xfffffcff | paramArray[5] | paramArray[6];\n  }\n  *(uint *)(paramAddress + 4) = updatedVal2;\n  *(uint *)(paramAddress + 0x18) = *(uint *)(paramAddress + 0x18) & 0xffffff8c | updatedVal3;\n  *(uint *)(paramAddress + 0x34) = paramArray[1];\n  *(uint *)(paramAddress + 0x20) = updatedVal1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_params_08005cec",
                "param_1": "paramAddress",
                "param_2": "paramArray",
                "uVar1": "updatedVal1",
                "uVar2": "updatedVal2",
                "uVar3": "updatedVal3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_registers_08005d48",
            "code": "\nvoid updateRegisters_08005d48(int registerAddress,uint *registerValues)\n\n{\n  uint updatedValue_1;\n  uint updatedValue_2;\n  uint updatedValue_3;\n  \n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) & 0xfffffeff;\n  updatedValue_2 = *(uint *)(registerAddress + 4);\n  updatedValue_3 = *registerValues;\n  updatedValue_1 = *(uint *)(registerAddress + 0x20) & 0xfffffdff | registerValues[2] << 8;\n  if (registerAddress == 0x40012c00) {\n    updatedValue_1 = (updatedValue_1 & 0xfffff7ff | registerValues[3] << 8) & 0xfffffbff;\n    updatedValue_2 = updatedValue_2 & 0xffffcfff | registerValues[5] << 4 | registerValues[6] << 4;\n  }\n  *(uint *)(registerAddress + 4) = updatedValue_2;\n  *(uint *)(registerAddress + 0x1c) = *(uint *)(registerAddress + 0x1c) & 0xffffff8c | updatedValue_3;\n  *(uint *)(registerAddress + 0x3c) = registerValues[1];\n  *(uint *)(registerAddress + 0x20) = updatedValue_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_registers_08005d48",
                "param_1": "registerAddress",
                "param_2": "registerValues",
                "uVar1": "updatedValue_1",
                "uVar2": "updatedValue_2",
                "uVar3": "updatedValue_3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_parameter_and_variables_08005dac",
            "code": "\nvoid updateParameterAndVariables_08005dac(int memoryAddress,int *parameters)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  \n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffefff;\n  value1 = *(uint *)(memoryAddress + 4);\n  value2 = *parameters;\n  value3 = parameters[2];\n  if (memoryAddress == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | parameters[5] << 6;\n  }\n  *(uint *)(memoryAddress + 4) = value1;\n  *(uint *)(memoryAddress + 0x1c) = *(uint *)(memoryAddress + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(memoryAddress + 0x40) = parameters[1];\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_parameter_and_variables_08005dac",
                "param_1": "memoryAddress",
                "param_2": "parameters",
                "uVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "set_flag_and_check_08005df4",
            "code": "\nvoid setFlagAndCheck_08005df4(uint **param)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  pointer = *param;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUN_08007710(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "set_flag_and_check_08005df4",
                "param_1": "param",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "set_flag_and_call_function_08005e2e",
            "code": "\nvoid setFlagAndCallFunction_08005e2e(uint **parameters)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)parameters + 0x3d) = 2;\n  pointer = *parameters;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUN_08007110(parameters);\n  *(undefined *)((int)parameters + 0x3d) = 0;\n  *(undefined *)(parameters + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "set_flag_and_call_function_08005e2e",
                "param_1": "parameters",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "process_flags_08005e6e",
            "code": "\nvoid processFlags_08005e6e(int *ptr)\n\n{\n  int value;\n  \n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(ptr + 7) = 1;\n    if ((*(uint *)(*ptr + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(ptr);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(ptr + 7) = 0;\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(ptr + 7) = 2;\n    if ((*(uint *)(*ptr + 0x18) & 0x300) == 0) {\n      FUN_0800771c(ptr);\n      FUNC_08005e6a(ptr);\n    }\n    else {\n      FUNC_08005e68(ptr);\n    }\n    *(undefined *)(ptr + 7) = 0;\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(ptr + 7) = 4;\n    if ((*(uint *)(*ptr + 0x1c) & 3) == 0) {\n      FUN_0800771c(ptr);\n      FUNC_08005e6a(ptr);\n    }\n    else {\n      FUNC_08005e68(ptr);\n    }\n    *(undefined *)(ptr + 7) = 0;\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(ptr + 7) = 8;\n    if ((*(uint *)(*ptr + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(ptr);\n      FUNC_08005e6a(ptr);\n    }\n    else {\n      FUNC_08005e68(ptr);\n    }\n    *(undefined *)(ptr + 7) = 0;\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08007736(ptr);\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(ptr);\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(ptr);\n  }\n  value = *ptr;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(ptr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "process_flags_08005e6e",
                "param_1": "ptr",
                "iVar1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_08005fe8",
            "code": "\nvoid updateMemory_08005fe8(uint *memoryAddress,uint *newValue)\n\n{\n  uint currentValue;\n  \n  currentValue = *memoryAddress;\n  if ((((memoryAddress == (uint *)0x40012c00) || (memoryAddress == (uint *)0x40000000)) ||\n      (memoryAddress == (uint *)0x40000400)) || (memoryAddress == (uint *)0x40000800)) {\n    currentValue = currentValue & 0xffffff8f | newValue[1];\n  }\n  if (((memoryAddress == (uint *)0x40012c00) || (memoryAddress == (uint *)0x40000000)) ||\n     ((memoryAddress == (uint *)0x40000400 || (memoryAddress == (uint *)0x40000800)))) {\n    currentValue = currentValue & 0xfffffcff | newValue[3];\n  }\n  *memoryAddress = currentValue & 0xffffff7f | newValue[5];\n  memoryAddress[0xb] = newValue[2];\n  memoryAddress[10] = *newValue;\n  if (memoryAddress == (uint *)0x40012c00) {\n    uRam40012c30 = newValue[4];\n  }\n  memoryAddress[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_08005fe8",
                "param_1": "memoryAddress",
                "param_2": "newValue",
                "uVar1": "currentValue"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "update_value_and_call_08006060",
            "code": "\nundefined4 updateValueAndCall_08006060(undefined4 *valuePtr)\n\n{\n  if (valuePtr != (undefined4 *)0x0) {\n    if (*(char *)((int)valuePtr + 0x3d) == '\\0') {\n      *(undefined *)(valuePtr + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)valuePtr + 0x3d) = 2;\n    FUN_08005fe8(*valuePtr,valuePtr + 1);\n    *(undefined *)((int)valuePtr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "update_value_and_call_08006060",
                "param_1": "valuePtr"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "check_and_update_value_08006092",
            "code": "\nundefined4 checkAndUpdateValue_08006092(undefined4 *ptr)\n\n{\n  if (ptr != (undefined4 *)0x0) {\n    if (*(char *)((int)ptr + 0x3d) == '\\0') {\n      *(undefined *)(ptr + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)ptr + 0x3d) = 2;\n    FUN_08005fe8(*ptr,ptr + 1);\n    *(undefined *)((int)ptr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "check_and_update_value_08006092",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_flags_and_values_080060c4",
            "code": "\nvoid updateFlagsAndValues_080060c4(int baseAddress,int *data)\n\n{\n  uint flags;\n  uint valueMask;\n  int value;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffffef;\n  valueMask = *(uint *)(baseAddress + 4);\n  value = *data;\n  flags = *(uint *)(baseAddress + 0x20) & 0xffffffdf | shiftValue1 << 4;\n  if (baseAddress == 0x40012c00) {\n    flags = (flags & 0xffffff7f | shiftValue2 << 4) & 0xffffffbf;\n    valueMask = valueMask & 0xfffff3ff | bitShift1 << 2 | bitShift2 << 2;\n  }\n  *(uint *)(baseAddress + 4) = valueMask;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffff8cff | value << 8;\n  *(int *)(baseAddress + 0x38) = data[1];\n  *(uint *)(baseAddress + 0x20) = flags;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_flags_and_values_080060c4",
                "param_1": "baseAddress",
                "param_2": "data",
                "uVar1": "flags",
                "uVar2": "valueMask",
                "iVar3": "value",
                "param_2[2]": "shiftValue1",
                "param_2[3]": "shiftValue2",
                "param_2[5]": "bitShift1",
                "param_2[6]": "bitShift2"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "execute_process_08006128",
            "code": "\nundefined4 executeProcess_08006128(undefined4 *processArgs,undefined4 argSize,undefined4 processType)\n\n{\n  if (*(char *)(processArgs + 0xf) != '\\x01') {\n    *(undefined *)(processArgs + 0xf) = 1;\n    *(undefined *)((int)processArgs + 0x3d) = 2;\n    switch(processType) {\n    case 0:\n      FUN_08005cec(*processArgs);\n      break;\n    case 4:\n      FUN_080060c4(*processArgs);\n      break;\n    case 8:\n      FUN_08005d48(*processArgs);\n      break;\n    case 0xc:\n      FUN_08005dac(*processArgs);\n    }\n    *(undefined *)((int)processArgs + 0x3d) = 1;\n    *(undefined *)(processArgs + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "execute_process_08006128",
                "param_1": "processArgs",
                "param_2": "argSize",
                "param_3": "processType"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "process_data_08006186",
            "code": "\nundefined4 processData_08006186(int *dataPointer,int paramPointer,undefined4 switchValue)\n\n{\n  if (*(char *)(dataPointer + 0xf) != '\\x01') {\n    *(undefined *)(dataPointer + 0xf) = 1;\n    *(undefined *)((int)dataPointer + 0x3d) = 2;\n    switch(switchValue) {\n    case 0:\n      FUN_08005cec(*dataPointer);\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | 8;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) & 0xfffffffb;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | *(uint *)(paramPointer + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*dataPointer);\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | 0x800;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) & 0xfffffbff;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | *(int *)(paramPointer + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*dataPointer);\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | 8;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) & 0xfffffffb;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | *(uint *)(paramPointer + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*dataPointer);\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | 0x800;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) & 0xfffffbff;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | *(int *)(paramPointer + 0x10) << 8;\n    }\n    *(undefined *)((int)dataPointer + 0x3d) = 1;\n    *(undefined *)(dataPointer + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "process_data_08006186",
                "param_1": "dataPointer",
                "param_2": "paramPointer",
                "param_3": "switchValue"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bit_value_08006262",
            "code": "\nvoid updateBitValue_08006262(int data,uint bitPosition,int newValue)\n\n{\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "data",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_status_bitwise_08006280",
            "code": "\nundefined4 updateStatusBitwise_08006280(uint **pointerArray,undefined4 value)\n\n{\n  switch(value) {\n  case 0:\n    (*pointerArray)[3] = (*pointerArray)[3] | 2;\n    break;\n  case 4:\n    (*pointerArray)[3] = (*pointerArray)[3] | 4;\n    break;\n  case 8:\n    (*pointerArray)[3] = (*pointerArray)[3] | 8;\n    break;\n  case 0xc:\n    (*pointerArray)[3] = (*pointerArray)[3] | 0x10;\n  }\n  FUN_08006262(*pointerArray,value,1);\n  if (*pointerArray == (uint *)0x40012c00) {\n    dataFlag = dataFlag | 0x8000;\n  }\n  **pointerArray = **pointerArray | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_status_bitwise_08006280",
                "param_1": "pointerArray",
                "param_2": "value",
                "uRam40012c44": "dataFlag"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "update_permission_flags_080062f4",
            "code": "\nundefined4 updatePermissionFlags_080062f4(uint **permArray,undefined4 flags)\n\n{\n  uint *tempPtr;\n  \n  switch(flags) {\n  case 0:\n    (*permArray)[3] = (*permArray)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*permArray)[3] = (*permArray)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*permArray)[3] = (*permArray)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*permArray)[3] = (*permArray)[3] & 0xffffffef;\n  }\n  FUN_08006262(*permArray,flags,0);\n  if (((*permArray == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  tempPtr = *permArray;\n  if (((tempPtrValue & 0x1111) == 0) && ((tempPtrValue & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "update_permission_flags_080062f4",
                "param_1": "permArray",
                "param_2": "flags",
                "puVar1": "tempPtr",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3",
                "puVar1[8]": "tempPtrValue"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "update_flag_and_value_08006390",
            "code": "\nundefined4 updateFlagAndValue_08006390(uint **pointerToValue,undefined4 valueToUpdate)\n\n{\n  FUN_08006262(*pointerToValue,valueToUpdate,1);\n  if (*pointerToValue == (uint *)0x40012c00) {\n    flagValue = flagValue | 0x8000;\n  }\n  **pointerToValue = **pointerToValue | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "update_flag_and_value_08006390",
                "param_1": "pointerToValue",
                "param_2": "valueToUpdate",
                "uRam40012c44": "flagValue"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "reverse_and_update_flags_080063c0",
            "code": "\nundefined4 reverse_and_update_flags_080063c0(uint **pointer_array,undefined4 value)\n\n{\n  uint *ptr;\n  \n  FUN_08006262(*pointer_array,value,0);\n  if (((*pointer_array == (uint *)0x40012c00) && ((flag_value & 0x1111) == 0)) &&\n     ((flag_value & 0x444) == 0)) {\n    flag_register = flag_register & 0xffff7fff;\n  }\n  ptr = *pointer_array;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)pointer_array + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "reverse_and_update_flags_080063c0",
                "param_1": "pointer_array",
                "param_2": "value",
                "puVar1": "ptr",
                "uRam40012c20": "flag_value",
                "uRam40012c44": "flag_register"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_bitwise_flags_08006420",
            "code": "\nvoid updateBitwiseFlags_08006420(int ptr,uint bitIndex,int value)\n\n{\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) & ~(4 << (bitIndex & 0xff));\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) | value << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_bitwise_flags_08006420",
                "param_1": "ptr",
                "param_2": "bitIndex",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_0800643c",
            "code": "\nundefined4 setFlags_0800643c(uint **arrayPtr,undefined4 value)\n\n{\n  FUN_08006420(*arrayPtr,value,4);\n  (*arrayPtr)[0x11] = (*arrayPtr)[0x11] | 0x8000;\n  **arrayPtr = **arrayPtr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_0800643c",
                "param_1": "arrayPtr",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "update_data_08006460",
            "code": "\nundefined4 updateData_08006460(uint **data,undefined4 value)\n\n{\n  uint *ptrData;\n  \n  FUN_08006420(*data,value,0);\n  ptrData = *data;\n  if (((ptrData[8] & 0x1111) == 0) && ((ptrData[8] & 0x444) == 0)) {\n    ptrData[0x11] = ptrData[0x11] & 0xffff7fff;\n  }\n  ptrData = *data;\n  if (((ptrData[8] & 0x1111) == 0) && ((ptrData[8] & 0x444) == 0)) {\n    *ptrData = *ptrData & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "update_data_08006460",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "ptrData"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "clear_flags_080064b0",
            "code": "\nvoid clearFlags_080064b0(int *memoryBlock)\n\n{\n  *(uint *)(*memoryBlock + 0xc) = *(uint *)(*memoryBlock + 0xc) & 0xfffffedf;\n  *(uint *)(*memoryBlock + 0x14) = *(uint *)(*memoryBlock + 0x14) & 0xfffffffe;\n  *(undefined *)((int)memoryBlock + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "clear_flags_080064b0",
                "param_1": "memoryBlock"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_binary_data_080064cc",
            "code": "\nundefined4 process_binary_data_080064cc(int *data_ptr)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data_ptr + 0x39) != '!') {\n    return 2;\n  }\n  if (data_ptr[2] == 0x1000) {\n    *(uint *)(*data_ptr + 4) = *(ushort *)data_ptr[8] & 0x1ff;\n    if (data_ptr[4] == 0) {\n      data_ptr[8] = data_ptr[8] + 2;\n    }\n    else {\n      data_ptr[8] = data_ptr[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data_ptr[8];\n    data_ptr[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data_ptr + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data_ptr + 0x26) + -1;\n  *(short *)((int)data_ptr + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) & 0xffffff7f;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_binary_data_080064cc",
                "param_1": "data_ptr",
                "sVar1": "count",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_metrics_08006538",
            "code": "\nvoid calculateMetrics_08006538(int *inputData)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*inputData + 0x10) = *(uint *)(*inputData + 0x10) & 0xffffcfff | inputData[3];\n  *(uint *)(*inputData + 0xc) =\n       inputData[2] | inputData[4] | inputData[5] | *(uint *)(*inputData + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputData + 0x14) = *(uint *)(*inputData + 0x14) & 0xfffffcff | inputData[6];\n  result10 = *inputData;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = inputData[1];\n    result2 = FUN_08005a28();\n    result7 = inputData[1];\n    result3 = FUN_08005a28();\n    result8 = inputData[1];\n    result4 = FUN_08005a28();\n    result9 = inputData[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputData[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = inputData[1];\n  result1 = FUN_08005a48();\n  result6 = inputData[1];\n  result2 = FUN_08005a48();\n  result7 = inputData[1];\n  result3 = FUN_08005a48();\n  result8 = inputData[1];\n  result4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputData[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_metrics_08006538",
                "param_1": "inputData",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "validate_parameters_080066e8",
            "code": "\nundefined4 validate_parameters_080066e8(uint **input_array,uint flag,uint condition,int threshold,uint limit)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**input_array) == 0) != condition) {\n      return 0;\n    }\n  } while ((limit == 0xffffffff) ||\n          ((limit != 0 && (result = FUN_08003760(), (uint)(result - threshold) <= limit))));\n  (*input_array)[3] = (*input_array)[3] & 0xfffffe5f;\n  (*input_array)[5] = (*input_array)[5] & 0xfffffffe;\n  *(undefined *)((int)input_array + 0x39) = 0x20;\n  *(undefined *)((int)input_array + 0x3a) = 0x20;\n  *(undefined *)(input_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "validate_parameters_080066e8",
                "param_1": "input_array",
                "param_2": "flag",
                "param_3": "condition",
                "param_4": "threshold",
                "param_5": "limit",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_0800674e",
            "code": "\nundefined4 initializeData_0800674e(int *dataPointer)\n\n{\n  if (dataPointer != (int *)0x0) {\n    if (*(char *)((int)dataPointer + 0x39) == '\\0') {\n      *(undefined *)(dataPointer + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)dataPointer + 0x39) = 0x24;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffdfff;\n    FUN_08006538(dataPointer);\n    *(uint *)(*dataPointer + 0x10) = *(uint *)(*dataPointer + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x2000;\n    value4 = 0;\n    *(undefined *)((int)dataPointer + 0x39) = 0x20;\n    *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_0800674e",
                "param_1": "dataPointer",
                "param_1[0xf]": "value4"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *buffer,ushort *data,int dataLength,undefined4 param)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)buffer + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (dataLength == 0) {\n      status = 1;\n    }\n    else if (*(char *)(buffer + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(buffer + 0xe) = 1;\n      buffer[0xf] = 0;\n      *(undefined *)((int)buffer + 0x39) = 0x21;\n      status = FUN_08003760();\n      *(short *)(buffer + 9) = (short)dataLength;\n      *(short *)((int)buffer + 0x26) = (short)dataLength;\n      while (*(short *)((int)buffer + 0x26) != 0) {\n        *(short *)((int)buffer + 0x26) = *(short *)((int)buffer + 0x26) + -1;\n        if (buffer[2] == 0x1000) {\n          result = FUN_080066e8(buffer,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*buffer + 4) = *data & 0x1ff;\n          if (buffer[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(buffer,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*buffer + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = FUN_080066e8(buffer,0x40,0,status,param);\n      if (result == 0) {\n        *(undefined *)((int)buffer + 0x39) = 0x20;\n        *(undefined *)(buffer + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "buffer",
                "param_2": "data",
                "param_3": "dataLength",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "check_and_set_values_0800688e",
            "code": "\nundefined4 checkAndSetValues_0800688e(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[8] = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "check_and_set_values_0800688e",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_input_080068d6",
            "code": "\nundefined4 validate_input_080068d6(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value_1;\n    *(short *)(input_array + 0xb) = (short)value_2;\n    *(short *)((int)input_array + 0x2e) = (short)value_2;\n    input_array[15] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[10]": "input_array[10]",
                "param_1[0xf]": "input_array[15]"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "clear_bit_and_set_flag_08006932",
            "code": "\nundefined4 clearBitAndSetFlag_08006932(int *input)\n\n{\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffbf;\n  *(undefined *)((int)input + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "clear_bit_and_set_flag_08006932",
                "param_1": "input"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "parse_string_data_0800694c",
            "code": "\nundefined4 parseStringData_0800694c(int *data)\n\n{\n  byte *bytePtr;\n  short length;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefinedPtr = (undefined *)data[10];\n    data[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    bytePtr = (byte *)data[10];\n    data[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  length = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = length;\n  if (length != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "parse_string_data_0800694c",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "sVar2": "length",
                "puVar3": "undefinedPtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "check_flags_080069ec",
            "code": "\nvoid check_flags_080069ec(uint **parameters)\n\n{\n  int tempVar;\n  uint flags1;\n  uint *data;\n  uint flags2;\n  uint flags3;\n  \n  data = *parameters;\n  flags3 = *data;\n  flags1 = data[3];\n  if ((((flags3 & 0xf) == 0) && ((flags3 & 0x20) != 0)) && ((flags1 & 0x20) != 0)) {\n    FUN_0800694c(parameters);\n    return;\n  }\n  if (((flags3 & 0xf) == 0) || ((flags2 = data[5] & 1, flags2 == 0 && ((flags1 & 0x120) == 0)))) {\n    if (((flags3 & 0x80) != 0) && ((flags1 & 0x80) != 0)) {\n      FUN_080064cc(parameters);\n      return;\n    }\n    if (((flags3 & 0x40) != 0) && ((flags1 & 0x40) != 0)) {\n      FUN_08006932(parameters);\n    }\n  }\n  else {\n    if (((flags3 & 1) != 0) && ((flags1 & 0x100) != 0)) {\n      result = (uint *)((uint)result | 1);\n    }\n    if (((flags3 & 4) != 0) && (flags2 != 0)) {\n      result = (uint *)((uint)result | 2);\n    }\n    if (((flags3 & 2) != 0) && (flags2 != 0)) {\n      result = (uint *)((uint)result | 4);\n    }\n    if (((flags3 & 8) != 0) && (flags2 != 0)) {\n      result = (uint *)((uint)result | 8);\n    }\n    if (result != (uint *)0x0) {\n      if (((flags3 & 0x20) != 0) && ((flags1 & 0x20) != 0)) {\n        FUN_0800694c(parameters);\n      }\n      if ((((uint)result & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_0800877c(parameters);\n        result = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(parameters);\n      data = *parameters;\n      if ((data[5] & 0x40) == 0) {\n        FUNC_0800877c(parameters);\n        return;\n      }\n      data[5] = data[5] & 0xffffffbf;\n      if (ptrToData == (uint *)0x0) {\n        FUNC_0800877c(parameters);\n        return;\n      }\n      functionPointer = (uint)functionLabel;\n      tempVar = FUN_08004050(ptrToData);\n      if (tempVar != 0) {\n        (*(code *)functionPointer)();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "check_flags_080069ec",
                "param_1": "parameters",
                "iVar1": "tempVar",
                "uVar2": "flags1",
                "uVar4": "flags2",
                "uVar5": "flags3",
                "puVar3": "data",
                "param_1[0xf]": "result",
                "param_1[0xd]": "ptrToData",
                "param_1[0xd][0xd]": "functionPointer",
                "&LAB_08006b0c_1": "functionLabel"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "bitwise_shift_and_extract_08006b28",
            "code": "\nuint bitwiseShiftAndExtract_08006b28(uint data,int ptr)\n\n{\n  return *(uint *)(ptr + ((data << 0x18) >> 0x1c) * 4) >> (data & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "bitwise_shift_and_extract_08006b28",
                "param_1": "data",
                "param_2": "ptr"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "set_bit_08006b3e",
            "code": "\nvoid setBit_08006b3e(uint value,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (value << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "set_bit_08006b3e",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_in_array_08006b5c",
            "code": "\nvoid updateBitInArray_08006b5c(uint bitIndex,int array)\n\n{\n  uint wordIndex;\n  \n  wordIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(array + wordIndex * 4) = *(uint *)(array + wordIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_in_array_08006b5c",
                "param_1": "bitIndex",
                "param_2": "array",
                "uVar1": "wordIndex"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "map_param_to_address_08006b7c",
            "code": "\nundefined4 mapParamToAddress_08006b7c(undefined4 inputParam)\n\n{\n  switch(inputParam) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "map_param_to_address_08006b7c",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_flag_and_return_address_08006bb8",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_08006bb8(undefined4 input)\n\n{\n  undefined4 retAddress;\n  \n  switch(input) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    retAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    retAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    retAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    retAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    retAddress = 0x40011800;\n    break;\n  default:\n    retAddress = 0;\n  }\n  return retAddress;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_address_08006bb8",
                "param_1": "input",
                "uVar1": "retAddress"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "get_shifted_value_08006c60",
            "code": "\nuint get_shifted_value_08006c60(undefined4 input_value,undefined4 unused_param,undefined4 data_start,undefined4 data_end)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(input_value,&DAT_0800a5b8,data_start,data_end,data_end);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "get_shifted_value_08006c60",
                "param_1": "input_value",
                "param_2": "unused_param",
                "param_3": "data_start",
                "param_4": "data_end",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "check_result_08006c7c",
            "code": "\nundefined4 checkResult_08006c7c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08007376(input1,&DAT_0800a6cc,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "check_result_08006c7c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "set_flags_and_call_function_08006ca8",
            "code": "\n\n\nvoid set_flags_and_call_function_08006ca8(int *input_data,undefined4 value)\n\n{\n  undefined4 result;\n  uint flag;\n  int value_to_check;\n  uint bitmask;\n  undefined4 size;\n  undefined4 offset;\n  \n  value_to_check = *input_data;\n  if (value_to_check == 0x40012400) {\n    flag = _DAT_40021018 | 0x200;\n    value_to_check = 0x200;\n    _DAT_40021018 = flag;\n  }\n  else {\n    flag = 0x40012800;\n    if (value_to_check == 0x40012800) {\n      flag = _DAT_40021018 | 0x400;\n      value_to_check = 0x400;\n      _DAT_40021018 = flag;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,value,flag,value_to_check);\n  bitmask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  size = 3;\n  offset = 0;\n  FUN_080040e8(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "set_flags_and_call_function_08006ca8",
                "param_1": "input_data",
                "param_2": "value",
                "uVar1": "result",
                "uVar2": "flag",
                "iVar3": "value_to_check",
                "local_18": "bitmask",
                "local_14": "size",
                "local_10": "offset"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_status_08006d24",
            "code": "\n\n\nvoid updateStatus_08006d24(int *statusPtr)\n\n{\n  if (*statusPtr != 0x40012400) {\n    if (*statusPtr == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_status_08006d24",
                "param_1": "statusPtr"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "validate_data_08006d80",
            "code": "\nundefined2 validate_data_08006d80(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  undefined2 valid_flag;\n  uint input_length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  input_length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  valid_flag = 0;\n  buffer = FUN_08007320(input_data,&DAT_0800a5b8);\n  if (buffer == 0) {\n    valid_flag = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000014 = (undefined)input_data;\n    result = FUN_08003bd8(&buffer);\n    if (result == 0) {\n      input_length = FUN_08006c60(input_data);\n      if (input_length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_080038e4(&buffer,&input_length);\n        if (result == 0) {\n          result = FUN_08003e20(&buffer);\n          if (result == 0) {\n            result = FUN_08003aa0(&buffer);\n            if (result == 0) {\n              result = FUN_0800376c(&buffer,10);\n              if (result == 0) {\n                flags = FUN_08003a1c(&buffer);\n                if ((flags & 0x200) != 0) {\n                  valid_flag = FUN_080038dc(&buffer);\n                }\n                result = FUN_08003de4(&buffer);\n                if (result == 0) {\n                  result = FUN_08003ce8(&buffer);\n                  if (result != 0) {\n                    valid_flag = 0;\n                  }\n                }\n                else {\n                  valid_flag = 0;\n                }\n              }\n              else {\n                valid_flag = 0;\n              }\n            }\n            else {\n              valid_flag = 0;\n            }\n          }\n          else {\n            valid_flag = 0;\n          }\n        }\n        else {\n          valid_flag = 0;\n        }\n      }\n      else {\n        valid_flag = 0;\n      }\n    }\n    else {\n      valid_flag = 0;\n    }\n  }\n  return valid_flag;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "validate_data_08006d80",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_46": "valid_flag",
                "local_44": "input_length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_system_08006e68",
            "code": "\n\n\nvoid initializeSystem_08006e68(undefined4 configParameter)\n\n{\n  int systemStatus;\n  undefined4 shiftedValue;\n  uint bitMask;\n  undefined4 firstFlag;\n  undefined4 secondFlag;\n  undefined4 thirdFlag;\n  \n  systemStatus = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(configParameter);\n  shiftedValue = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  firstFlag = 2;\n  secondFlag = 0;\n  thirdFlag = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(systemStatus << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(shiftedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_system_08006e68",
                "param_1": "configParameter",
                "iVar1": "systemStatus",
                "uVar2": "shiftedValue",
                "local_20": "bitMask",
                "local_1c": "firstFlag",
                "local_18": "secondFlag",
                "local_14": "thirdFlag"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_08007110",
            "code": "\nvoid initialize_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "process_data_08007118",
            "code": "\nvoid processData_08007118(undefined4 inputValue,uint divisor,int offset,undefined4 value,char flag)\n\n{\n  uint result;\n  int errorCode;\n  int errorCode2;\n  undefined4 size;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 variable3;\n  undefined4 variable4;\n  undefined4 variable5;\n  undefined4 variable6;\n  int buffer;\n  int quotient;\n  undefined4 variable7;\n  int variable8;\n  undefined4 variable9;\n  undefined4 variable10;\n  undefined optionFlag;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  size = 0;\n  variable1 = 0;\n  variable2 = 0;\n  variable3 = 0;\n  variable4 = 0;\n  variable5 = 0;\n  variable6 = 0;\n  buffer = FUN_08007320(inputValue,&DAT_0800a6cc);\n  if (buffer != 0) {\n    result = FUN_080075dc();\n    quotient = result / divisor - 1;\n    variable8 = offset + -1;\n    variable9 = 0;\n    variable7 = 0;\n    variable10 = 0;\n    optionFlag = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)inputValue;\n      errorCode = FUN_08006092(&buffer);\n      if (errorCode != 0) {\n        return;\n      }\n    }\n    errorCode = FUN_08006c7c(inputValue);\n    if ((((errorCode == 0) || (errorCode == 4)) || (errorCode == 8)) || ((errorCode == 0xc || (errorCode == 0x18)))) {\n      size = 0x60;\n      variable2 = 0;\n      variable4 = 0;\n      variable3 = 0;\n      variable6 = 0;\n      variable5 = 0;\n      variable1 = value;\n      errorCode2 = FUN_08006186(&buffer,&size,errorCode);\n      if (errorCode2 == 0) {\n        result = FUN_08007376(inputValue,&DAT_0800a6cc);\n        if ((result & 0x100000) == 0) {\n          FUN_08006390(&buffer,errorCode);\n        }\n        else {\n          FUN_0800643c(&buffer,errorCode);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "process_data_08007118",
                "param_1": "inputValue",
                "param_2": "divisor",
                "param_3": "offset",
                "param_4": "value",
                "param_5": "flag",
                "uVar1": "result",
                "iVar2": "errorCode",
                "iVar3": "errorCode2",
                "local_74": "size",
                "local_70": "variable1",
                "local_6c": "variable2",
                "local_68": "variable3",
                "local_64": "variable4",
                "local_60": "variable5",
                "local_5c": "variable6",
                "local_58": "buffer",
                "local_54": "quotient",
                "local_50": "variable7",
                "local_4c": "variable8",
                "local_48": "variable9",
                "local_44": "variable10",
                "local_1b": "optionFlag"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320",
                "FUN_08006186"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 input)\n\n{\n  int status;\n  uint flags;\n  int results [17];\n  \n  results[0] = FUN_08007320(input,&DAT_0800a6cc);\n  if ((results[0] != 0) &&\n     ((((status = FUN_08006c7c(input), status == 0 || (status == 4)) || (status == 8)) ||\n      ((status == 0xc || (status == 0x18)))))) {\n    flags = FUN_08007376(input,&DAT_0800a6cc);\n    if ((flags & 0x100000) == 0) {\n      FUN_080063c0(results,status);\n    }\n    else {\n      FUN_08006460(results,status);\n    }\n    FUN_08005e2e(results);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "input",
                "iVar1": "status",
                "uVar2": "flags",
                "local_50": "results"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_system_0800723c",
            "code": "\nvoid initializeSystem_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_system_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "execute_code_08007246",
            "code": "\nvoid executeCode_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "execute_code_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_device_08007258",
            "code": "\n\n\nvoid initializeDevice_08007258(uint deviceID,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 shiftedDeviceID;\n  uint bitMask;\n  undefined4 param2Local;\n  undefined4 param3Local;\n  undefined4 constant3;\n  \n  shiftedDeviceID = FUN_08006bb8((deviceID << 0x18) >> 0x1c);\n  bitMask = 1 << (deviceID & 0xf) & 0xffff;\n  constant3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceID - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceID == 0xf) || (deviceID == 0x13)) || (deviceID == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2Local = param2;\n  param3Local = param3;\n  FUN_080040e8(shiftedDeviceID,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_device_08007258",
                "param_1": "deviceID",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "shiftedDeviceID",
                "local_20": "bitMask",
                "local_1c": "param2Local",
                "local_18": "param3Local",
                "local_14": "constant3"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "handle_parameter_080072d8",
            "code": "\nvoid handleParameter_080072d8(undefined4 inputOne,undefined2 inputTwo,int flag,undefined4 data)\n\n{\n  if (flag == 0) {\n    FUN_080042e2(inputOne,inputTwo,0,data,data);\n    return;\n  }\n  FUN_080042e2(inputOne,inputTwo,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "handle_parameter_080072d8",
                "param_1": "inputOne",
                "param_2": "inputTwo",
                "param_3": "flag",
                "param_4": "data"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "execute_function_080072f0",
            "code": "\nvoid executeFunction_080072f0(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080042d4(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_system_080072fa",
            "code": "\nvoid initialize_system_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_system_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_in_list_08007306",
            "code": "\nundefined4 find_value_in_list_08007306(int target_value,char *list_ptr)\n\n{\n  while( true ) {\n    if (*list_ptr == -1) {\n      return 0;\n    }\n    if (*list_ptr == target_value) break;\n    list_ptr = list_ptr + 0xc;\n  }\n  return *(undefined4 *)(list_ptr + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_in_list_08007306",
                "param_1": "target_value",
                "param_2": "list_ptr"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_param_valid_08007320",
            "code": "\nundefined4 checkParamValid_08007320(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue != -1) {\n    returnValue = FUN_08007306();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_param_valid_08007320",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_value_index_08007332",
            "code": "\nint find_value_index_08007332(int value,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == value) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_value_index_08007332",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_nonzero_param_and_call_0800734a",
            "code": "\nundefined4 check_nonzero_param_and_call_0800734a(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_nonzero_param_and_call_0800734a",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_0800735a",
            "code": "\nundefined4 find_value_0800735a(int search_value,char *data)\n\n{\n  while( true ) {\n    if (*data == -1) {\n      return 0xffffffff;\n    }\n    if (*data == search_value) break;\n    data = data + 0xc;\n  }\n  return *(undefined4 *)(data + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_0800735a",
                "param_1": "search_value",
                "param_2": "data"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_error_status_08007376",
            "code": "\nundefined4 check_error_status_08007376(int error_code)\n\n{\n  undefined4 status;\n  \n  if (error_code == -1) {\n    return 0xffffffff;\n  }\n  status = FUN_0800735a();\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_error_status_08007376",
                "param_1": "error_code",
                "uVar1": "status"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "find_match_0800738a",
            "code": "\nundefined4 find_match_0800738a(int value,char *array)\n\n{\n  if (value == -1) {\n    matched 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      matched 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  matched 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "find_match_0800738a",
                "param_1": "value",
                "param_2": "array",
                "return": "matched"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_080073ae",
            "code": "\nint compare_and_return_080073ae(int result,int temp)\n\n{\n  if (result != temp) {\n    if (result == 0) {\n      return temp;\n    }\n    if (temp == 0) {\n      return result;\n    }\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_080073ae",
                "param_1": "result",
                "param_2": "temp"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_080073c0",
            "code": "\nvoid executeCallback_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_hardware_080073ec",
            "code": "\n\n\nvoid initializeHardware_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_hardware_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_data_flags_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateDataFlags_08007438(int *input)\n\n{\n  if (*input == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = input;\n  }\n  if (*input == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = input;\n  }\n  if (*input == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = input;\n  }\n  if (*input == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = input;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_data_flags_08007438",
                "param_1": "input"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_flags_based_on_param_value_080074e0",
            "code": "\n\n\nvoid update_flags_based_on_param_value_080074e0(int *param)\n\n{\n  if (*param == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*param == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*param == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*param == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_flags_based_on_param_value_080074e0",
                "param_1": "param"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_irq_08007544",
            "code": "\nundefined4 getTimerIRQ_08007544(uint timerValue)\n\n{\n  if (timerValue == 0xffffffff) {\n    return 0;\n  }\n  if (timerValue == 0x40000400) {\n    return 0x1d;\n  }\n  if (timerValue < 0x40000401) {\n    if (timerValue == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timerValue == 0x40000800) {\n      return 0x1e;\n    }\n    if (timerValue == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_irq_08007544",
                "param_1": "timerValue"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "determine_clock_source_080075dc",
            "code": "\nint determineClockSource_080075dc(undefined4 inputParam)\n\n{\n  uint clockValue1;\n  int result;\n  uint clockValue2;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  uint var5;\n  uint var6;\n  \n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var1 = 0;\n  FUN_08005a68(&var2,&var1);\n  result = FUN_08007594(inputParam);\n  clockValue1 = var6;\n  clockValue2 = var5;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    clockValue2 = clockValue1;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    clockValue2 = 0;\n  }\n  if (clockValue2 != 0x500) {\n    if (clockValue2 < 0x501) {\n      if (clockValue2 != 0x400) {\n        return result;\n      }\n    }\n    else if ((clockValue2 != 0x600) && (clockValue2 != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "determine_clock_source_080075dc",
                "param_1": "inputParam",
                "uVar1": "clockValue1",
                "iVar2": "result",
                "uVar3": "clockValue2",
                "local_20": "var1",
                "local_1c": "var2",
                "local_18": "var3",
                "local_14": "var4",
                "local_10": "var5",
                "local_c": "var6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_data_08007648",
            "code": "\nvoid initializeData_08007648(undefined4 *dataList,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char charVar;\n  uint result;\n  int status;\n  undefined4 *ptrData;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  ptrData = dataList + 1;\n  *dataList = 0x40000000;\n  dataList[1] = 0x40000000;\n  dataList[4] = value1;\n  result = FUN_080075dc();\n  dataList[2] = result / 1000000 - 1;\n  dataList[5] = 0;\n  dataList[3] = 0;\n  dataList[6] = 0;\n  dataList[0x13] = value3;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = value2;\n  charVar = FUN_08007544(*dataList);\n  FUN_08003f30((int)charVar,0xe,0);\n  charVar = FUN_08007544(*dataList);\n  FUN_08003f94((int)charVar);\n  status = FUN_08006060(ptrData);\n  if ((status == 0) && (status = FUN_08006128(ptrData,&localVar1,0), status == 0)) {\n    FUN_08006280(ptrData,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_data_08007648",
                "param_1": "dataList",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "cVar1": "charVar",
                "uVar2": "result",
                "iVar3": "status",
                "puVar4": "ptrData",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08006128",
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *dataArray)\n\n{\n  char resultChar;\n  int resultInt;\n  \n  dataArray[0x13] = 0;\n  resultChar = FUN_08007544(*dataArray);\n  FUN_08003fb0((int)resultChar);\n  resultInt = FUN_08005df4(dataArray + 1);\n  if (resultInt == 0) {\n    FUN_080062f4(dataArray + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "dataArray",
                "cVar1": "resultChar",
                "iVar2": "resultInt"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_08007708",
            "code": "\nvoid initialize_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_application_08007710",
            "code": "\nvoid initializeApplication_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_application_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_08007718",
            "code": "\nint subtractFour_08007718(int num)\n\n{\n  return num + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "num"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_callback_if_flag_set_0800771c",
            "code": "\nvoid executeCallbackIfFlagSet_0800771c(int callbackData)\n\n{\n  int callbackFunction;\n  \n  callbackFunction = FUN_08007718();\n  if ((*(code **)(callbackFunction + 0x4c) != (code *)0x0) && (*(char *)(callbackData + 0x1c) == '\\x01')) {\n    (**(code **)(callbackFunction + 0x4c))(callbackFunction,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_callback_if_flag_set_0800771c",
                "param_1": "callbackData",
                "iVar1": "callbackFunction"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_next_function_08007736",
            "code": "\nvoid executeNextFunction_08007736(void)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007718();\n  if (*(code **)(returnValue + 0x48) != (code *)0x0) {\n    (**(code **)(returnValue + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_next_function_08007736",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_pointer_value_08007744",
            "code": "\nundefined4 getPointerValue_08007744(int inputPointer)\n\n{\n  return *(undefined4 *)(*(int *)(inputPointer + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_pointer_value_08007744",
                "param_1": "inputPointer"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "set_param_value_0800774a",
            "code": "\nvoid setParamValue_0800774a(int objAddress,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(objAddress + 4) + 0x24) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "set_param_value_0800774a",
                "param_1": "objAddress",
                "param_2": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "write_param_to_memory_08007750",
            "code": "\nvoid writeParamToMemory_08007750(int address,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(address + 4) + 0x34 + index * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "write_param_to_memory_08007750",
                "param_1": "address",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *pins,int param2,int param3,int param4,undefined param5)\n\n{\n  int pin1Periph;\n  int pin2Periph;\n  undefined4 pinConfig;\n  uint tempVar1;\n  uint tempVar2;\n  int *piVar;\n  uint pinMask;\n  uint pinConfig1;\n  uint pinConfig2;\n  undefined4 config;\n  \n  if (pins != (int *)0x0) {\n    piVar = pins + 1;\n    pin1Periph = FUN_08007320((int)*(char *)(pins + 0x16),&DAT_0800a69c);\n    pin2Periph = FUN_08007320((int)*(char *)((int)pins + 0x59),&DAT_0800a66c);\n    if ((pin1Periph == 0) || (pin2Periph == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      pin1Periph = FUN_080073ae(pin1Periph,pin2Periph);\n      *pins = pin1Periph;\n      if (pin1Periph == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (pin1Periph == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)pins + 0x5a) = 0x1f;\n          *(undefined *)((int)pins + 0x5b) = 0x20;\n          DAT_20000668 = piVar;\n        }\n        if (*pins == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)pins + 0x5a) = 0x21;\n          *(undefined *)((int)pins + 0x5b) = 0x22;\n          DAT_2000066c = piVar;\n        }\n        pinConfig = FUN_08006bb8((uint)((int)*(char *)((int)pins + 0x59) << 0x18) >> 0x1c);\n        pinMask = 1 << ((int)*(char *)((int)pins + 0x59) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)((int)pins + 0x59),&DAT_0800a66c);\n        tempVar2 = FUN_08007376((int)*(char *)((int)pins + 0x59),&DAT_0800a66c);\n        pinConfig1 = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        config = 3;\n        pin1Periph = FUN_08007376((int)*(char *)((int)pins + 0x59),&DAT_0800a66c);\n        pinConfig2 = (uint)(pin1Periph << 0x1a) >> 0x1e;\n        pin1Periph = FUN_08007376((int)*(char *)((int)pins + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(pin1Periph << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(pinConfig,&pinMask,tempVar1,tempVar2);\n        pinConfig = FUN_08006bb8((uint)((int)*(char *)(pins + 0x16) << 0x18) >> 0x1c);\n        pinMask = 1 << ((int)*(char *)(pins + 0x16) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)(pins + 0x16),&DAT_0800a69c);\n        tempVar2 = FUN_08007376((int)*(char *)(pins + 0x16),&DAT_0800a69c);\n        pinConfig1 = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        config = 3;\n        pin1Periph = FUN_08007376((int)*(char *)(pins + 0x16),&DAT_0800a69c);\n        pinConfig2 = (uint)(pin1Periph << 0x1a) >> 0x1e;\n        pin1Periph = FUN_08007376((int)*(char *)(pins + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(pin1Periph << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(pinConfig,&pinMask,tempVar1,tempVar2);\n        pins[1] = *pins;\n        pins[2] = param2;\n        pins[3] = 0;\n        pins[4] = param4;\n        pins[7] = 0xff;\n        pins[5] = param3;\n        pins[6] = 0;\n        pins[8] = 0;\n        pins[9] = 0;\n        *(undefined *)((int)pins + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)pins + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)pins + 0x5a));\n        FUN_08003f30((int)*(char *)((int)pins + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)pins + 0x5b));\n        FUN_080045c0(piVar);\n        *(undefined *)((int)pins + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "pins",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "pin1Periph",
                "iVar2": "pin2Periph",
                "uVar3": "pinConfig",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "piVar6": "piVar",
                "local_38": "pinMask",
                "local_34": "pinConfig1",
                "local_30": "pinConfig2",
                "local_2c": "config"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "process_data_08007e74",
            "code": "\nint processData_08007e74(int inputArray,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 temporaryValue;\n  \n  temporaryValue = param3;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = inputArray + 4;\n    result = FUN_08004728(tempVar,param1,param2,param3,temporaryValue);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "process_data_08007e74",
                "param_1": "inputArray",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "temporaryValue"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_and_increment_08007ede",
            "code": "\nundefined4 copy_and_increment_08007ede(int destination,int source,uint length)\n\n{\n  uint index;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (index = 0; index < length; index = index + 1 & 0xff) {\n    *(undefined *)(destination + index + 0x68) = *(undefined *)(source + index);\n    *(char *)(destination + 0x88) = *(char *)(destination + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_and_increment_08007ede",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "check_validity_08007f0e",
            "code": "\nint checkValidity_08007f0e(int inputArray,undefined4 paramA,undefined4 paramB,undefined4 paramC)\n\n{\n  int baseValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 tempParam;\n  \n  tempParam = paramC;\n  baseValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = inputArray + 4;\n    result = FUN_080047f4(tempVar,paramA,paramB,paramC,tempParam);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - baseValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "check_validity_08007f0e",
                "param_1": "inputArray",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "iVar1": "baseValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "tempParam"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "decrement_param_by_4_08007f78",
            "code": "\nint decrement_param_by_4_08007f78(int num)\n\n{\n  return num + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "decrement_param_by_4_08007f78",
                "param_1": "num"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_data_08007f7c",
            "code": "\nvoid updateData_08007f7c(int dataPointer,int newData)\n\n{\n  if (dataPointer != 0) {\n    if (newData != 0) {\n      *(int *)(dataPointer + 0x60) = newData;\n      FUN_080049e0(dataPointer + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_data_08007f7c",
                "param_1": "dataPointer",
                "param_2": "newData"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_and_call_function_08007f8e",
            "code": "\nvoid updateParamAndCallFunction_08007f8e(int value,int newParam)\n\n{\n  if (value != 0) {\n    if (newParam != 0) {\n      *(int *)(value + 100) = newParam;\n      FUN_080049e0(value + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "value",
                "param_2": "newParam"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_parameters_08007fa0",
            "code": "\nvoid processParameters_08007fa0(int input,int flag,int checkValue,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (checkValue == *(int *)(input + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(input,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(input,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_parameters_08007fa0",
                "param_1": "input",
                "param_2": "flag",
                "param_3": "checkValue",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_function_if_conditions_met_08007ff0",
            "code": "\nvoid executeFunctionIfConditionsMet_08007ff0(undefined4 data)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08007f78();\n  if (((*(functionType **)(functionPointer + 0x60) != (functionType *)0x0) && (*(char *)(functionPointer + 0x5c) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(functionType **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_080049e0(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_function_if_conditions_met_08007ff0",
                "param_1": "data",
                "iVar1": "functionPointer",
                "code": "functionType"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_update_status_08008020",
            "code": "\nvoid checkAndUpdateStatus_08008020(undefined4 input)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_080049e0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_update_status_08008020",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_08008078",
            "code": "\n\n\nvoid initializeUART_08008078(int *uart_pins)\n\n{\n  int uart_pin1;\n  int uart_pin2;\n  undefined4 uart_peripheral1;\n  uint uart_peripheral2;\n  uint pin_mask;\n  uint uart_msb;\n  uint uart_lsb;\n  undefined4 uart_setting;\n  \n  if (uart_pins != (int *)0x0) {\n    uart_pin1 = FUN_08007320((int)*(char *)(uart_pins + 0x16),&DAT_0800a864);\n    uart_pin2 = FUN_08007320((int)*(char *)((int)uart_pins + 0x59),&DAT_0800a81c);\n    if ((uart_pin2 == 0) || (uart_pin1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin2);\n    }\n    else {\n      uart_pin1 = FUN_080073ae(uart_pin1);\n      *uart_pins = uart_pin1;\n      if (uart_pin1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_pins + 0x11) = 0;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x25;\n        }\n        else if (uart_pin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_pins + 0x11) = 1;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x26;\n        }\n        else if (uart_pin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_pins + 0x11) = 2;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x27;\n        }\n        uart_peripheral1 = FUN_08006bb8((uint)((int)*(char *)((int)uart_pins + 0x59) << 0x18) >> 0x1c);\n        uart_peripheral2 = FUN_08007376((int)*(char *)((int)uart_pins + 0x59),&DAT_0800a81c);\n        pin_mask = 1 << (*(uart_byte *)((int)uart_pins + 0x59) & 0xf) & 0xffff;\n        uart_msb = (uart_peripheral2 >> 3 & 1) << 4 | uart_peripheral2 & 7;\n        uart_lsb = (uart_peripheral2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uart_peripheral2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uart_setting = 3;\n        FUN_080040e8(uart_peripheral1,&pin_mask);\n        uart_peripheral1 = FUN_08006bb8((uint)((int)*(char *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        uart_peripheral2 = FUN_08007376((int)*(char *)(uart_pins + 0x16),&DAT_0800a864);\n        pin_mask = 1 << (*(uart_byte *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        uart_msb = (uart_peripheral2 >> 3 & 1) << 4 | uart_peripheral2 & 7;\n        uart_lsb = (uart_peripheral2 << 0x1a) >> 0x1e;\n        FUN_080040e8(uart_peripheral1,&pin_mask);\n        (&DAT_200006c0)[*(uart_byte *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        FUN_0800674e(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_08008078",
                "param_1": "uart_pins",
                "iVar1": "uart_pin1",
                "iVar2": "uart_pin2",
                "uVar3": "uart_peripheral1",
                "uVar4": "uart_peripheral2",
                "local_20": "pin_mask",
                "local_1c": "uart_msb",
                "local_18": "uart_lsb",
                "local_14": "uart_setting",
                "byte": "uart_byte"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 data;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    data = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(data,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "data"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "check_connection_08008500",
            "code": "\nuint check_connection_08008500(undefined4 status,uint timeout)\n\n{\n  int initial_time;\n  int connection_result;\n  uint index;\n  \n  initial_time = FUN_08003760();\n  connection_result = FUN_08007320(2,&DAT_0800a864);\n  if (connection_result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (connection_result = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != connection_result))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    connection_result = FUN_080067ac((&DAT_200006c0)[index],status,timeout & 0xffff,1000);\n    if (connection_result == 0) {\n      return timeout;\n    }\n    connection_result = FUN_08003760();\n  } while ((uint)(connection_result - initial_time) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "check_connection_08008500",
                "param_1": "status",
                "param_2": "timeout",
                "iVar1": "initial_time",
                "iVar2": "connection_result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "check_if_flag_set_080085b8",
            "code": "\nbool checkIfFlagSet_080085b8(int inputValue)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byteValue *)(inputValue + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "check_if_flag_set_080085b8",
                "param_1": "inputValue",
                "uVar1": "result",
                "byte": "byteValue"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_flag_set_080085dc",
            "code": "\nbool isFlagSet_080085dc(int flagValue)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flagValue + 0x44)]);\n  return (returnValue & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_flag_set_080085dc",
                "param_1": "flagValue",
                "uVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_parameter_08008600",
            "code": "\nundefined4 extract_parameter_08008600(int input_value,undefined *output_ptr,undefined4 extra_param,undefined4 additional_data)\n\n{\n  int result;\n  \n  if (input_value == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output_ptr = *(undefined *)(input_value + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(input_value + 0x44)],input_value + 0x45,1,&DAT_200006c0,additional_data);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_parameter_08008600",
                "param_1": "input_value",
                "param_2": "output_ptr",
                "param_3": "extra_param",
                "param_4": "additional_data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int dataPtr,undefined4 newValue,undefined4 unusedParam,undefined4 paramFour)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPtr != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPtr + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = newValue;\n      *(int *)(&DAT_20000684 + index * 4) = dataPtr;\n      FUN_08003f30((int)*(char *)(dataPtr + 0x5a),0,1,index,paramFour);\n      FUN_08003f94((int)*(char *)(dataPtr + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(dataPtr + 0x44)],dataPtr + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "param_3": "unusedParam",
                "param_4": "paramFour",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_parameter_08008694",
            "code": "\nvoid updateParameter_08008694(int inputParam,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (inputParam != 0) {\n    byteValue = *(byte *)(inputParam + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = inputParam;\n    FUN_08003f30((int)*(char *)(inputParam + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(inputParam + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(inputParam + 0x44)],\n                 *(int *)(inputParam + 100) + (uint)*(ushort *)(inputParam + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_parameter_08008694",
                "param_1": "inputParam",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_value_index_080086e8",
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_function_0800870c",
            "code": "\nvoid executeFunction_0800870c(void)\n\n{\n  uint result;\n  \n  result = FUN_080086e8();\n  if (result < 5) {\n    (**(code **)(&DAT_20000670 + result * 4))(*(undefined4 *)(&DAT_20000684 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_function_0800870c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_selected_command_08008730",
            "code": "\nvoid executeSelectedCommand_08008730(void)\n\n{\n  uint randomIndex;\n  int result;\n  int selectedCommand;\n  \n  randomIndex = FUN_080086e8();\n  selectedCommand = *(int *)(&DAT_200006ac + randomIndex * 4);\n  if ((randomIndex < 5) && (result = (**(code **)(&DAT_20000698 + randomIndex * 4))(selectedCommand), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(selectedCommand + 0x44)],\n                 *(int *)(selectedCommand + 100) + (uint)*(ushort *)(selectedCommand + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_selected_command_08008730",
                "uVar1": "randomIndex",
                "iVar2": "result",
                "iVar3": "selectedCommand"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= stackPointer) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackPointer"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_default_value_08008840",
            "code": "\nuint32_t get_default_value_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_default_value_08008840",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "initialize_memory_08008846",
            "code": "\nundefined4 initializeMemory_08008846(undefined4 arg1,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_1": "arg1",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_return_value_08008850",
            "code": "\nundefined4 initializeReturnValue_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_return_value_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_some_value_08008854",
            "code": "\nundefined4 initializeSomeValue_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_some_value_08008854"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_system_08008858",
            "code": "\nundefined4 initializeSystem_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_system_08008858"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "initialize_function_0800885c",
            "code": "\nvoid initializeFunction_0800885c(undefined4 argument1,undefined4 argument2,undefined4 argument3,undefined4 argument4)\n\n{\n  FUN_08008500(argument2,argument3,argument3,argument4,argument4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "initialize_function_0800885c",
                "param_1": "argument1",
                "param_2": "argument2",
                "param_3": "argument3",
                "param_4": "argument4"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "set_default_constant_0800886c",
            "code": "\nundefined4 setDefaultConstant_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "set_default_constant_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "check_return_value_0800887c",
            "code": "\nundefined4 check_return_value_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "check_return_value_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "extracted_data_processing_08008880",
            "code": "\nuint extractedDataProcessing_08008880(uint inputValue)\n\n{\n  bool isLessThan3C;\n  char selectedValue;\n  uint processedData;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isLessThan3C = true;\n    }\n    else {\n      isLessThan3C = false;\n    }\n  }\n  else {\n    isLessThan3C = inputValue < 0x3c;\n  }\n  if (isLessThan3C) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    selectedValue = (&DAT_0800a908)[inputValue];\n  }\n  else {\n    selectedValue = -1;\n  }\n  if (selectedValue == -1) {\n    processedData = 0;\n  }\n  else {\n    processedData = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return processedData >> (0xc - DAT_20000088 & 0xff);\n      }\n      return processedData << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return processedData;\n}\n\n",
            "renaming": {
                "FUN_08008880": "extracted_data_processing_08008880",
                "param_1": "inputValue",
                "bVar1": "isLessThan3C",
                "cVar2": "selectedValue",
                "uVar3": "processedData"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint dataIndex,uint dataValue)\n\n{\n  int result1;\n  int indexValue;\n  \n  if (dataIndex < 0x3c) {\n    indexValue = (int)(char)(&DAT_0800a908)[dataIndex];\n  }\n  else {\n    indexValue = -1;\n  }\n  if (indexValue != -1) {\n    result1 = FUN_0800738a(indexValue,&DAT_0800a6cc);\n    if (result1 == 0) {\n      FUN_08008990(dataIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          dataValue = dataValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          dataValue = dataValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (dataValue < 0x80) {\n        FUN_08008a24(dataIndex,0);\n      }\n      else {\n        FUN_08008a24(dataIndex,1);\n      }\n    }\n    else {\n      result1 = FUN_08006b28(indexValue,&DAT_200006d8);\n      if (result1 == 0) {\n        FUN_08006b3e(indexValue,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          dataValue = dataValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          dataValue = dataValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(indexValue,0x3e418,0xff,dataValue,result1 == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "dataIndex",
                "param_2": "dataValue",
                "iVar1": "result1",
                "iVar2": "indexValue"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "process_data_08008990",
            "code": "\nvoid processData_08008990(uint inputSize,undefined4 mode,undefined4 param3,undefined1 *param4)\n\n{\n  int result1;\n  undefined1 *dataPtr;\n  int index;\n  \n  if (inputSize < 0x3c) {\n    index = (int)(char)(&DAT_0800a908)[inputSize];\n    dataPtr = &DAT_0800a908;\n  }\n  else {\n    index = -1;\n    dataPtr = param4;\n  }\n  if (index != -1) {\n    result1 = FUN_08006b28(index,&DAT_200006d8,param3,dataPtr,param4);\n    if (result1 != 0) {\n      result1 = FUN_0800738a(index,&DAT_0800a6cc);\n      if (result1 != 0) {\n        FUN_080071e4(index);\n      }\n      FUN_08006b5c(index,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08007258(index,0);\n      break;\n    case 1:\n      FUN_08007258(index,1,0);\n      break;\n    case 2:\n      FUN_08007258(index,0,1);\n      break;\n    case 3:\n      FUN_08007258(index,0,2);\n    }\n    FUN_08006b3e(index,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "param_1": "inputSize",
                "param_2": "mode",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "puVar2": "dataPtr",
                "iVar3": "index"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_data_08008a24",
            "code": "\nvoid processData_08008a24(uint inputIndex,undefined4 outputSize,undefined4 param3,undefined1 *dataPtr)\n\n{\n  int returnValue;\n  undefined4 shiftedValue;\n  undefined1 *ptrToData;\n  uint value;\n  \n  if (inputIndex < 0x3c) {\n    value = (uint)(char)(&DAT_0800a908)[inputIndex];\n    ptrToData = &DAT_0800a908;\n  }\n  else {\n    value = 0xffffffff;\n    ptrToData = dataPtr;\n  }\n  if ((value != 0xffffffff) &&\n     (returnValue = FUN_08006b28(value,&DAT_200006ec,param3,ptrToData,dataPtr), returnValue != 0)) {\n    shiftedValue = FUN_08006b7c((value << 0x18) >> 0x1c);\n    FUN_080072d8(shiftedValue,1 << (value & 0xf) & 0xffff,outputSize);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "param_1": "inputIndex",
                "param_2": "outputSize",
                "param_3": "param3",
                "param_4": "dataPtr",
                "iVar1": "returnValue",
                "uVar2": "shiftedValue",
                "puVar3": "ptrToData",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_value_08008a6c",
            "code": "\nchar check_value_08008a6c(uint value)\n\n{\n  char result;\n  int check_result;\n  undefined4 shifted_value;\n  uint lookup_index;\n  \n  if (value < 0x3c) {\n    lookup_index = (uint)(char)(&DAT_0800a908)[value];\n  }\n  else {\n    lookup_index = 0xffffffff;\n  }\n  if (lookup_index == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    check_result = FUN_08006b28(lookup_index,&DAT_200006ec);\n    if (check_result == 0) {\n      result = '\\0';\n    }\n    else {\n      shifted_value = FUN_08006b7c((lookup_index << 0x18) >> 0x1c);\n      result = FUN_080072f0(shifted_value,1 << (lookup_index & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_value_08008a6c",
                "param_1": "value",
                "cVar1": "result",
                "iVar2": "check_result",
                "uVar3": "shifted_value",
                "uVar4": "lookup_index"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_application_08008abc",
            "code": "\nvoid initialize_application_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_application_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_offset_08008afa",
            "code": "\nushort calculateOffset_08008afa(int inputValue)\n\n{\n  return (*(short *)(inputValue + 0x134) + 0x40) - *(short *)(inputValue + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_offset_08008afa",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_and_index_08008b66",
            "code": "\nvoid updateDataAndIndex_08008b66(int dataPointer)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_08008600(dataPointer,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(dataPointer + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(dataPointer + 0x62))) {\n    *(undefined *)(*(int *)(dataPointer + 0x5c) + (uint)*(ushort *)(dataPointer + 0x60)) = newValue;\n    *(ushort *)(dataPointer + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_and_index_08008b66",
                "param_1": "dataPointer",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_data_08008c20",
            "code": "\nvoid initializeData_08008c20(int dataPointer)\n\n{\n  *(int *)(dataPointer + 0x130) = dataPointer + 0x11;\n  *(undefined2 *)(dataPointer + 0x134) = 0;\n  *(undefined2 *)(dataPointer + 0x136) = 0;\n  *(int *)(dataPointer + 0x138) = dataPointer + 0x51;\n  *(undefined2 *)(dataPointer + 0x13c) = 0;\n  *(undefined2 *)(dataPointer + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_data_08008c20",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "initialize_serial_connection_08008c44",
            "code": "\nvoid initializeSerialConnection_08008c44(int serialConnection,undefined4 baudRate,byte serialConfig)\n\n{\n  uint status;\n  byte configBits;\n  int flowControl;\n  code *recoveryTable;\n  \n  *(undefined4 *)(serialConnection + 0x11c) = baudRate;\n  *(byte *)(serialConnection + 0x140) = serialConfig;\n  configBits = serialConfig & 7;\n  if (configBits == 4) {\n    flowControl = 7;\n  }\n  else if (configBits == 6) {\n    flowControl = 8;\n  }\n  else if (configBits == 2) {\n    flowControl = 6;\n  }\n  else {\n    flowControl = 0;\n  }\n  if ((serialConfig & 0x30) == 0x30) {\n    *(undefined4 *)(serialConnection + 0x128) = 0x600;\n    flowControl = flowControl + 1;\n  }\n  else if ((serialConfig & 0x20) == 0) {\n    *(undefined4 *)(serialConnection + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialConnection + 0x128) = 0x400;\n    flowControl = flowControl + 1;\n  }\n  if ((serialConfig & 8) == 0) {\n    *(undefined4 *)(serialConnection + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialConnection + 0x124) = 0x2000;\n  }\n  if (flowControl == 8) {\n    *(undefined4 *)(serialConnection + 0x120) = 0;\n  }\n  else if (flowControl == 9) {\n    *(undefined4 *)(serialConnection + 0x120) = 0x1000;\n  }\n  else {\n    flowControl = 0;\n  }\n  if (flowControl != 0) {\n    FUN_08008078(serialConnection + 0xd4);\n    FUN_0800863c(serialConnection + 0xd4,0x8008b67);\n    return;\n  }\n  recoveryTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (status < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[status];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*recoveryTable)(0,status,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "initialize_serial_connection_08008c44",
                "param_1": "serialConnection",
                "param_2": "baudRate",
                "param_3": "serialConfig",
                "extraout_r1": "status",
                "bVar1": "configBits",
                "iVar2": "flowControl",
                "UNRECOVERED_JUMPTABLE": "recoveryTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_parameter_08008d00",
            "code": "\nvoid setParameter_08008d00(int baseAddress,uint index)\n\n{\n  undefined value;\n  code *jmpTable;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = value;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jmpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_parameter_08008d00",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "value",
                "UNRECOVERED_JUMPTABLE": "jmpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int address,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(address + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_data_08008d30",
            "code": "\nundefined4 *\ninitializeData_08008d30(undefined4 *dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined result;\n  \n  dataPointer[1] = 0;\n  dataPointer[2] = 1000;\n  *dataPointer = &PTR_LAB_08008ba4_1_0800aab8;\n  if (dataPointer == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,value2,&DAT_20000700,value3);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(value1,&DAT_0800a81c);\n    *(undefined *)((int)dataPointer + 0x12d) = result;\n    result = FUN_0800734a(value1,&DAT_0800a864);\n    *(undefined *)(dataPointer + 0x4b) = result;\n  }\n  FUN_08008c20(dataPointer);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_and_update_data_08008d8c",
            "code": "\nvoid check_and_update_data_08008d8c(int input_condition,int special_value,undefined4 data_1,undefined4 data_2)\n\n{\n  if (input_condition != 1) {\n    return;\n  }\n  if (special_value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,data_1,0xffff,data_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_and_update_data_08008d8c",
                "param_1": "input_condition",
                "param_2": "special_value",
                "param_3": "data_1",
                "param_4": "data_2"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "apply_condition_08008e14",
            "code": "\nvoid applyCondition_08008e14(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "apply_condition_08008e14",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_linear_interpolation_08008ef4",
            "code": "\nint calculate_linear_interpolation_08008ef4(int start_value_1,int start_value_2,int end_value,int start_result,int end_result)\n\n{\n  return (uint)((end_result - start_result) * (start_value_1 - start_value_2)) / (uint)(end_value - start_value_2) + start_result;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_linear_interpolation_08008ef4",
                "param_1": "start_value_1",
                "param_2": "start_value_2",
                "param_3": "end_value",
                "param_4": "start_result",
                "param_5": "end_result"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_system_08008f0e",
            "code": "\nvoid initializeSystem_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_system_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "continuous_processing_08008f1c",
            "code": "\nvoid continuousProcessing_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "continuous_processing_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint number)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "number",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_parameters_08008f78",
            "code": "\nvoid initializeParameters_08008f78(int value1,int value2,undefined4 value3,undefined4 value4)\n\n{\n  if (value1 != 1) {\n    return;\n  }\n  if (value2 == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,value4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_parameters_08008f78",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "execute_or_recurse_08009084",
            "code": "\nvoid executeOrRecurse_08009084(int input)\n\n{\n  int index;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    executeOrRecurse_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "execute_or_recurse_08009084",
                "param_1": "input",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_if_data_valid_08009094",
            "code": "\nvoid checkIfDataValid_08009094(void)\n\n{\n  int result;\n  \n  result = FUN_08008f3c();\n  if ((&DAT_20000858)[result * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_if_data_valid_08009094",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "execute_process_080090c2",
            "code": "\nvoid executeProcess_080090c2(ReturnValue processHandle,ReturnValue processFunction)\n\n{\n  FUN_08009108(processFunction,processHandle);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "execute_process_080090c2",
                "param_1": "processHandle",
                "param_2": "processFunction",
                "undefined4": "ReturnValue"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "assertion_failed_080090cc",
            "code": "\nvoid assertionFailed_080090cc(undefined4 file,undefined4 line,char *message,undefined4 function)\n\n{\n  undefined4 assertion;\n  char *delimiter;\n  undefined8 result;\n  undefined4 extra;\n  \n  assertion = *(undefined4 *)(DAT_20000090 + 0xc);\n  extra = function;\n  if (message == (char *)0x0) goto LAB_080090f0;\n  delimiter = \", function: \";\n  do {\n    FUN_08009124(assertion,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,delimiter,message,extra);\n    result = FUN_08009b5c();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    assertion = (undefined4)result;\nLAB_080090f0:\n    message = \"\";\n    delimiter = message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "assertion_failed_080090cc",
                "param_1": "file",
                "param_2": "line",
                "param_3": "message",
                "param_4": "function",
                "uVar1": "assertion",
                "pcVar2": "delimiter",
                "uVar3": "result",
                "uVar4": "extra"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_to_high_bits_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftToHighBits_08009108(undefined4 input,uint value)\n\n{\n  return (ulonglong)value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_to_high_bits_08009108",
                "param_1": "input",
                "param_2": "value"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "initialize_data_08009124",
            "code": "\nvoid initializeData_08009124(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 dataPtr;\n  undefined4 stackPtr;\n  \n  dataPtr = param3;\n  stackPtr = param4;\n  FUN_0800937c(DAT_20000090,param1,param2,&dataPtr,param1,&dataPtr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "initialize_data_08009124",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_8": "dataPtr",
                "uStack_4": "stackPtr"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_all_functions_08009148",
            "code": "\nvoid executeAllFunctions_08009148(void)\n\n{\n  int counter;\n  \n  for (counter = 0; counter != 0; counter = counter + 1) {\n    (*(code *)(&DAT_0800abe4)[counter])();\n  }\n  FUNC_0800a424();\n  for (counter = 0; counter != 0xc; counter = counter + 1) {\n    (*(code *)(&DAT_0800abe4)[counter])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_all_functions_08009148",
                "iVar1": "counter"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 data)\n\n{\n  FUN_08009270(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_data_080091b0",
            "code": "\nvoid copyData_080091b0(int sourceOffset,undefined *sourceData,int size)\n\n{\n  undefined *destinationEnd;\n  undefined *destinationData;\n  \n  destinationData = (undefined *)(sourceOffset + -1);\n  destinationEnd = sourceData + size;\n  for (; sourceData != destinationEnd; sourceData = sourceData + 1) {\n    destinationData = destinationData + 1;\n    *destinationData = *sourceData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "sourceOffset",
                "param_2": "sourceData",
                "param_3": "size",
                "puVar1": "destinationEnd",
                "puVar2": "destinationData"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_memory_080091c6",
            "code": "\nvoid fillMemory_080091c6(undefined *memoryPointer,undefined fillValue,int sizeToFill)\n\n{\n  undefined *endPointer;\n  \n  endPointer = memoryPointer + sizeToFill;\n  for (; memoryPointer != endPointer; memoryPointer = memoryPointer + 1) {\n    *memoryPointer = fillValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_memory_080091c6",
                "param_1": "memoryPointer",
                "param_2": "fillValue",
                "param_3": "sizeToFill",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "update_linked_list_080091d8",
            "code": "\nvoid updateLinkedList_080091d8(undefined4 *resultPtr,int size,undefined4 value1,undefined4 value2)\n\n{\n  int **newNode;\n  int **currentNode;\n  int **nextNode;\n  int *tempNode;\n  int **previousNode;\n  int **newLinkedList;\n  \n  if (size == 0) {\n    return;\n  }\n  newLinkedList = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    newLinkedList = (int **)((int)newLinkedList + *(int *)(size + -4));\n  }\n  FUNC_08009f48();\n  nextNode = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    newLinkedList[1] = (int *)0x0;\n    currentNode = newNode;\n    DAT_2000098c = newLinkedList;\n  }\n  else {\n    nextNode = DAT_2000098c;\n    if (newLinkedList < DAT_2000098c) {\n      currentNode = (int **)*newLinkedList;\n      nextNode = (int **)((int)newLinkedList + (int)currentNode);\n      if (DAT_2000098c == nextNode) {\n        tempNode = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        nextNode = (int **)((int)tempNode + (int)currentNode);\n        *newLinkedList = (int *)nextNode;\n      }\n      newLinkedList[1] = (int *)DAT_2000098c;\n      DAT_2000098c = newLinkedList;\n    }\n    else {\n      do {\n        previousNode = nextNode;\n        nextNode = (int **)previousNode[1];\n        if (nextNode == (int **)0x0) break;\n      } while (nextNode <= newLinkedList);\n      currentNode = (int **)*previousNode;\n      if ((int **)((int)previousNode + (int)currentNode) == newLinkedList) {\n        currentNode = (int **)((int)currentNode + (int)*newLinkedList);\n        *previousNode = (int *)currentNode;\n        if (nextNode == (int **)((int)previousNode + (int)currentNode)) {\n          tempNode = *nextNode;\n          nextNode = (int **)nextNode[1];\n          currentNode = (int **)((int)currentNode + (int)tempNode);\n          *previousNode = (int *)currentNode;\n          previousNode[1] = (int *)nextNode;\n        }\n      }\n      else if (newLinkedList < (int **)((int)previousNode + (int)currentNode)) {\n        *resultPtr = 0xc;\n      }\n      else {\n        currentNode = (int **)((int)newLinkedList + (int)*newLinkedList);\n        if (nextNode == currentNode) {\n          tempNode = *nextNode;\n          nextNode = (int **)nextNode[1];\n          currentNode = (int **)((int)tempNode + (int)*newLinkedList);\n          *newLinkedList = (int *)currentNode;\n        }\n        newLinkedList[1] = (int *)nextNode;\n        previousNode[1] = (int *)newLinkedList;\n      }\n    }\n  }\n  FUNC_08009f4a(resultPtr,currentNode,nextNode,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "update_linked_list_080091d8",
                "param_1": "resultPtr",
                "param_2": "size",
                "param_3": "value1",
                "param_4": "value2",
                "extraout_r1": "newNode",
                "ppiVar1": "currentNode",
                "ppiVar2": "nextNode",
                "piVar3": "tempNode",
                "ppiVar4": "previousNode",
                "ppiVar5": "newLinkedList"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *mem_ptr,uint size)\n\n{\n  uint *current_ptr;\n  int offset;\n  uint *next_ptr;\n  uint size_diff;\n  uint *previous_ptr;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *mem_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_ptr = DAT_2000098c;\n    previous_ptr = DAT_2000098c;\n    while (next_ptr = current_ptr, next_ptr != (uint *)0x0) {\n      size_diff = *next_ptr - allocated_size;\n      if (-1 < (int)size_diff) {\n        if (size_diff < 0xc) {\n          if (previous_ptr == next_ptr) {\n            current_ptr = (uint *)previous_ptr[1];\n            DAT_2000098c = current_ptr;\n          }\n          else {\n            current_ptr = (uint *)next_ptr[1];\n          }\n          if (previous_ptr != next_ptr) {\n            previous_ptr[1] = (uint)current_ptr;\n            previous_ptr = next_ptr;\n          }\n        }\n        else {\n          *next_ptr = size_diff;\n          *(uint *)((int)next_ptr + size_diff) = allocated_size;\n          previous_ptr = (uint *)((int)next_ptr + size_diff);\n        }\n        goto LAB_080092d4;\n      }\n      previous_ptr = next_ptr;\n      current_ptr = (uint *)next_ptr[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(mem_ptr);\n    }\n    current_ptr = (uint *)FUN_08009918(mem_ptr,allocated_size);\n    if ((current_ptr != (uint *)0xffffffff) &&\n       ((previous_ptr = (uint *)((int)current_ptr + 3U & 0xfffffffc), current_ptr == previous_ptr ||\n        (offset = FUN_08009918(mem_ptr,(int)previous_ptr - (int)current_ptr), offset != -1)))) {\n      *previous_ptr = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(mem_ptr);\n      allocated_size = (int)previous_ptr + 0xbU & 0xfffffff8;\n      offset = allocated_size - (int)(previous_ptr + 1);\n      if (offset != 0) {\n        *(int *)((int)previous_ptr + offset) = -offset;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *mem_ptr = 0xc;\n    FUNC_08009f4a(mem_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "mem_ptr",
                "param_2": "size",
                "puVar1": "current_ptr",
                "iVar2": "offset",
                "puVar3": "next_ptr",
                "uVar4": "size_diff",
                "puVar5": "previous_ptr",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint process_input_0800932c(int input_ptr,byte input_byte,byte **input_data)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = input_data[2] + -1;\n  input_data[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_data[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_data;\n    *input_data = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((input_ptr != 0) && (*(int *)(input_ptr + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (input_data == (byte **)&DAT_0800aba4) {\n    input_data = *(byte ***)(input_ptr + 4);\n  }\n  else if (input_data == (byte **)&DAT_0800abc4) {\n    input_data = *(byte ***)(input_ptr + 8);\n  }\n  else if (input_data == (byte **)&DAT_0800ab84) {\n    input_data = *(byte ***)(input_ptr + 0xc);\n  }\n  input_data[2] = input_data[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_data + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = input_data[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_08009a80(input_ptr,input_data,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)input_byte;\n    temp_var1 = (int)*input_data - (int)input_data[4];\n    if ((temp_var1 < (int)input_data[5]) || (temp_var1 = FUN_08009c7c(input_ptr,input_data), temp_var1 == 0)) {\n      input_data[2] = input_data[2] + -1;\n      temp_var2 = *input_data;\n      *input_data = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != input_data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_data + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08009c7c(input_ptr,input_data);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "input_ptr",
                "param_2": "input_byte",
                "param_3": "input_data",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "process_data_08009358",
            "code": "\nint process_data_08009358(undefined4 input_value_1,undefined4 input_value_2,undefined *data,int data_length)\n\n{\n  int result;\n  undefined *end_of_data;\n  int current_length;\n  \n  end_of_data = data + data_length;\n  current_length = data_length;\n  do {\n    if (data == end_of_data) {\n      return 0;\n    }\n    result = FUN_0800932c(input_value_1,*data,input_value_2,data_length,current_length);\n    data_length = result + 1;\n    data = data + 1;\n  } while (data_length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "data",
                "param_4": "data_length",
                "iVar1": "result",
                "puVar2": "end_of_data",
                "iVar3": "current_length"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "parse_and_process_data_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint parseAndProcessData_0800937c(int data,undefined4 *config,byte *formatStr,int *result)\n\n{\n  int returnValue;\n  int *ptr;\n  bool foundNonNumeric;\n  byte *currChar;\n  byte *nextChar;\n  int tempVariable;\n  int tempVariable2;\n  int *resultPointer;\n  uint flags;\n  int width;\n  undefined4 type;\n  int precision;\n  int totalParsed;\n  byte currentFormat;\n  undefined flagSpace;\n  undefined flagPlus;\n  undefined flagZero;\n  undefined4 flagHash;\n  \n  resultPointer = result;\n  if ((data != 0) && (*(int *)(data + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (config == &DAT_0800aba4) {\n    config = *(undefined4 **)(data + 4);\n  }\n  else if (config == (undefined4 *)&DAT_0800abc4) {\n    config = *(undefined4 **)(data + 8);\n  }\n  else if (config == (undefined4 *)&DAT_0800ab84) {\n    config = *(undefined4 **)(data + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(config + 3) << 0x1c)) || (config[4] == 0)) &&\n     (tempVariable2 = FUN_08009a80(data,config), tempVariable2 != 0)) {\n    return -1;\n  }\n  totalParsed = 0;\n  flagSpace = 0x20;\n  flagPlus = 0x30;\n  currChar = formatStr;\nLAB_080093be:\n  nextChar = currChar;\n  if (*nextChar != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  currChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  tempVariable2 = (int)nextChar - (int)formatStr;\n  if (tempVariable2 != 0) {\n    returnValue = FUN_08009358(data,config,formatStr,tempVariable2);\n    if (returnValue == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(config + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalParsed;\n    }\n    totalParsed = totalParsed + tempVariable2;\n  }\n  if (*nextChar == 0) goto LAB_08009568;\n  flags = 0;\n  precision = 0;\n  width = -1;\n  type = 0;\n  flagZero = 0;\n  flagHash = 0;\n  currChar = nextChar + 1;\n  while( true ) {\n    tempVariable2 = FUN_08009f2c(\"#-0+ \",*currChar);\n    formatStr = currChar + 1;\n    if (tempVariable2 == 0) break;\n    flags = 1 << (tempVariable2 + 0xf7ff54b0U & 0xff) | flags;\n    currChar = formatStr;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    flagZero = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    flagZero = 0x2b;\n  }\n  if (*currChar == 0x2a) {\n    ptr = resultPointer + 1;\n    tempVariable2 = *resultPointer;\n    resultPointer = ptr;\n    if (tempVariable2 < 0) {\n      precision = -tempVariable2;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    foundNonNumeric = false;\n    tempVariable2 = precision;\n    formatStr = currChar;\n    while( true ) {\n      if (9 < *formatStr - 0x30) break;\n      tempVariable2 = tempVariable2 * 10 + (*formatStr - 0x30);\n      foundNonNumeric = true;\n      formatStr = formatStr + 1;\n    }\n    if (!foundNonNumeric) goto LAB_080094a6;\n  }\n  precision = tempVariable2;\nLAB_080094a6:\n  if (*formatStr == 0x2e) {\n    if (formatStr[1] == 0x2a) {\n      formatStr = formatStr + 2;\n      ptr = resultPointer + 1;\n      width = *resultPointer;\n      resultPointer = ptr;\n      if (width < 0) {\n        width = -1;\n      }\n    }\n    else {\n      foundNonNumeric = false;\n      tempVariable2 = 0;\n      width = 0;\n      while( true ) {\n        formatStr = formatStr + 1;\n        if (9 < *formatStr - 0x30) break;\n        tempVariable2 = tempVariable2 * 10 + (*formatStr - 0x30);\n        foundNonNumeric = true;\n      }\n      if (foundNonNumeric) {\n        width = tempVariable2;\n      }\n    }\n  }\n  tempVariable2 = FUN_08009f2c(&DAT_0800ab56,*formatStr,3);\n  if (tempVariable2 != 0) {\n    formatStr = formatStr + 1;\n    flags = flags | 0x40 << (tempVariable2 + 0xf7ff54aaU & 0xff);\n  }\n  currentFormat = *formatStr;\n  formatStr = formatStr + 1;\n  tempVariable2 = FUN_08009f2c(\"efgEFG\",currentFormat,6);\n  if (tempVariable2 == 0) {\n    tempVariable = FUN_08009698(data,&flags,config,0x8009359,&resultPointer);\n    if (tempVariable == -1) goto LAB_08009568;\n  }\n  else {\n    resultPointer = (int *)(((int)resultPointer + 7U & 0xfffffff8) + 8);\n  }\n  totalParsed = totalParsed + tempVariable;\n  currChar = formatStr;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "parse_and_process_data_0800937c",
                "param_1": "data",
                "param_2": "config",
                "param_3": "formatStr",
                "param_4": "result",
                "iVar1": "returnValue",
                "piVar2": "ptr",
                "bVar3": "foundNonNumeric",
                "pbVar4": "currChar",
                "pbVar5": "nextChar",
                "unaff_r9": "tempVariable",
                "iVar6": "tempVariable2",
                "local_8c": "resultPointer",
                "local_88": "flags",
                "local_84": "width",
                "local_80": "type",
                "local_7c": "precision",
                "local_74": "totalParsed",
                "local_70": "currentFormat",
                "local_6f": "flagSpace",
                "local_6e": "flagPlus",
                "local_45": "flagZero",
                "local_30": "flagHash"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "validate_and_process_data_080095a8",
            "code": "\nundefined4\nvalidate_and_process_data_080095a8(undefined4 data_ptr,uint *config_ptr,uint *max_length_ptr,undefined4 param_4,code *callback_func)\n\n{\n  int loop_counter1;\n  int loop_counter2;\n  uint max_length;\n  uint updated_length;\n  bool is_condition_met;\n  \n  max_length = config_ptr[4];\n  if ((int)config_ptr[4] < (int)config_ptr[2]) {\n    max_length = config_ptr[2];\n  }\n  *max_length_ptr = max_length;\n  if (*(char *)((int)config_ptr + 0x43) != '\\0') {\n    *max_length_ptr = max_length + 1;\n  }\n  if ((int)(*config_ptr << 0x1a) < 0) {\n    *max_length_ptr = *max_length_ptr + 2;\n  }\n  if ((*config_ptr & 6) == 0) {\n    for (loop_counter1 = 0; loop_counter1 < (int)(config_ptr[3] - *max_length_ptr); loop_counter1 = loop_counter1 + 1) {\n      loop_counter2 = (*callback_func)(data_ptr,param_4,(int)config_ptr + 0x19,1);\n      if (loop_counter2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_length = (uint)*(byte *)((int)config_ptr + 0x43);\n  if (max_length != 0) {\n    max_length = 1;\n  }\n  updated_length = max_length;\n  if ((int)(*config_ptr << 0x1a) < 0) {\n    *(undefined *)((int)config_ptr + max_length + 0x43) = 0x30;\n    updated_length = max_length + 2;\n    *(undefined *)((int)config_ptr + max_length + 0x44) = *(undefined *)((int)config_ptr + 0x45);\n  }\n  loop_counter1 = (*callback_func)(data_ptr,param_4,(int)config_ptr + 0x43,updated_length);\n  if (loop_counter1 != -1) {\n    max_length = config_ptr[3];\n    is_condition_met = (*config_ptr & 6) != 4;\n    if (is_condition_met) {\n      max_length = 0;\n    }\n    updated_length = 0;\n    if (!is_condition_met) {\n      max_length = max_length - *max_length_ptr;\n    }\n    if (!is_condition_met) {\n      max_length = max_length & ~((int)max_length >> 0x1f);\n    }\n    if ((int)config_ptr[4] < (int)config_ptr[2]) {\n      max_length = max_length + (config_ptr[2] - config_ptr[4]);\n    }\n    while( true ) {\n      if (max_length == updated_length) {\n        return 0;\n      }\n      loop_counter1 = (*callback_func)(data_ptr,param_4,(int)config_ptr + 0x1a,1);\n      if (loop_counter1 == -1) break;\n      updated_length = updated_length + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "validate_and_process_data_080095a8",
                "param_1": "data_ptr",
                "param_2": "config_ptr",
                "param_3": "max_length_ptr",
                "param_5": "callback_func",
                "iVar1": "loop_counter1",
                "iVar2": "loop_counter2",
                "uVar3": "max_length",
                "uVar4": "updated_length",
                "bVar5": "is_condition_met"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "convert_to_hex_string_08009698",
            "code": "\nuint convertToHexString_08009698(undefined4 input_value,uint *input_data,undefined4 parameter_3,code *conversion_function,uint **output_data)\n\n{\n  byte byte_value;\n  int iteration_variable_1;\n  uint *temp_pointer_1;\n  int iteration_variable_2;\n  char *hex_characters;\n  uint input_data_copy;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint output_value;\n  uint input_data_copy_2;\n  char *output_string;\n  char *input_string;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(input_data + 6);\n  input_string = (char *)((int)input_data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)input_data + 0x45) = 0x58;\n          hex_characters = \"0123456789ABCDEF\";\nLAB_080097e2:\n          input_data_copy = *input_data;\n          temp_pointer_1 = *output_data;\n          *output_data = temp_pointer_1 + 1;\n          if (((input_data_copy & 0x80) == 0) && ((int)(input_data_copy << 0x19) < 0)) {\n            output_value = (uint)*(ushort *)temp_pointer_1;\n          }\n          else {\n            output_value = *temp_pointer_1;\n          }\n          if ((int)(input_data_copy << 0x1f) < 0) {\n            *input_data = input_data_copy | 0x20;\n          }\n          if (output_value == 0) {\n            *input_data = *input_data & 0xffffffdf;\n          }\n          input_data_copy = 0x10;\nLAB_08009778:\n          *(undefined *)((int)input_data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          output_value = *input_data;\n          temp_pointer_1 = *output_data;\n          if ((output_value & 0x80) == 0) {\n            *output_data = temp_pointer_1 + 1;\n            if ((output_value & 0x40) == 0) goto LAB_080096e8;\n            output_value = (uint)(short)*(ushort *)temp_pointer_1;\n          }\n          else {\n            *output_data = temp_pointer_1 + 1;\nLAB_080096e8:\n            output_value = *temp_pointer_1;\n          }\n          if ((int)output_value < 0) {\n            output_value = -output_value;\n            *(undefined *)((int)input_data + 0x43) = 0x2d;\n          }\n          hex_characters = \"0123456789ABCDEF\";\n          input_data_copy = 10;\n        }\n        input_data_copy_2 = input_data[1];\n        input_data[2] = input_data_copy_2;\n        output_string = input_string;\n        if ((int)input_data_copy_2 < 0) {\n          if (output_value != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)input_data + 0x42) = *hex_characters;\n          output_string = (char *)((int)input_data + 0x42);\n        }\n        else {\n          *input_data = *input_data & 0xfffffffb;\n          if (output_value == 0) {\n            if (input_data_copy_2 != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              input_data_copy_2 = output_value / input_data_copy;\n              output_string = output_string + -1;\n              *output_string = hex_characters[output_value - input_data_copy * input_data_copy_2];\n              output_value = input_data_copy_2;\n            } while (input_data_copy_2 != 0);\n          }\n        }\n        if (((input_data_copy == 8) && ((int)(*input_data << 0x1f) < 0)) && ((int)input_data[1] <= (int)input_data[4]))\n        {\n          output_string[-1] = '0';\n          output_string = output_string + -1;\n        }\n        input_data[4] = (int)input_string - (int)output_string;\n        input_string = output_string;\n        goto LAB_080097be;\n      }\n      temp_pointer_1 = *output_data;\n      *output_data = temp_pointer_1 + 1;\n      *(char *)((int)input_data + 0x42) = (char)*temp_pointer_1;\nLAB_08009728:\n      input_string = (char *)((int)input_data + 0x42);\n      output_value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            output_value = *input_data;\n            temp_pointer_1 = *output_data;\n            if ((output_value & 0x80) == 0) {\n              *output_data = temp_pointer_1 + 1;\n              if ((output_value & 0x40) == 0) goto LAB_0800975c;\n              output_value = (uint)*(ushort *)temp_pointer_1;\n            }\n            else {\n              *output_data = temp_pointer_1 + 1;\nLAB_0800975c:\n              output_value = *temp_pointer_1;\n            }\n            if (byte_value == 0x6f) {\n              input_data_copy = 8;\n            }\n            else {\n              input_data_copy = 10;\n            }\n            hex_characters = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *input_data = *input_data | 0x20;\nLAB_0800970e:\n            hex_characters = \"0123456789abcdef\";\n            *(undefined *)((int)input_data + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)input_data + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*output_data;\n      *output_data = (uint *)(ppcVar8 + 1);\n      input_string = *ppcVar8;\n      iteration_variable_1 = FUN_08009f2c(input_string,0,input_data[1]);\n      if (iteration_variable_1 != 0) {\n        input_data[1] = iteration_variable_1 - (int)input_string;\n      }\n      output_value = input_data[1];\n    }\n    input_data[4] = output_value;\n    *(undefined *)((int)input_data + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  output_value = *input_data;\n  ppuVar7 = (uint **)*output_data;\n  input_data_copy = input_data[5];\n  if ((output_value & 0x80) == 0) {\n    *output_data = (uint *)(ppuVar7 + 1);\n    temp_pointer_1 = *ppuVar7;\n    if ((output_value & 0x40) == 0) goto LAB_0800983e;\n    *(short *)temp_pointer_1 = (short)input_data_copy;\n  }\n  else {\n    *output_data = (uint *)(ppuVar7 + 1);\n    temp_pointer_1 = *ppuVar7;\nLAB_0800983e:\n    *temp_pointer_1 = input_data_copy;\n  }\nLAB_08009852:\n  input_data[4] = 0;\nLAB_080097be:\n  iteration_variable_1 = FUN_080095a8(input_value,input_data,local_array,parameter_3,conversion_function);\n  if ((iteration_variable_1 == -1) || (iteration_variable_1 = (*conversion_function)(input_value,parameter_3,input_string,input_data[4]), iteration_variable_1 == -1)) {\nLAB_080097d2:\n    output_value = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_data << 0x1e) < 0) {\n      for (iteration_variable_1 = 0; iteration_variable_1 < (int)(input_data[3] - local_array[0]); iteration_variable_1 = iteration_variable_1 + 1) {\n        iteration_variable_2 = (*conversion_function)(input_value,parameter_3,(int)input_data + 0x19,1);\n        if (iteration_variable_2 == -1) goto LAB_080097d2;\n      }\n    }\n    output_value = input_data[3];\n    if ((int)input_data[3] < (int)local_array[0]) {\n      output_value = local_array[0];\n    }\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_08009698": "convert_to_hex_string_08009698",
                "param_1": "input_value",
                "param_2": "input_data",
                "param_3": "parameter_3",
                "param_4": "conversion_function",
                "param_5": "output_data",
                "bVar1": "byte_value",
                "iVar2": "iteration_variable_1",
                "puVar3": "temp_pointer_1",
                "iVar4": "iteration_variable_2",
                "pcVar5": "hex_characters",
                "uVar6": "input_data_copy",
                "uVar9": "output_value",
                "uVar10": "input_data_copy_2",
                "pcVar11": "output_string",
                "pcVar12": "input_string",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_data_080098d8",
            "code": "\nvoid initializeData_080098d8(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  int dataPtr;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 param4Copy;\n  \n  dataPtr = DAT_20000090;\n  param1Copy = data1;\n  param2Copy = data2;\n  param3Copy = data3;\n  param4Copy = data4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPtr,*(undefined4 *)(dataPtr + 8),data1,&param2Copy,param1Copy,&param2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_data_080098d8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "iVar1": "dataPtr",
                "uVar2": "param1Copy",
                "uStack_c": "param2Copy",
                "uStack_8": "param3Copy",
                "uStack_4": "param4Copy"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "process_data_08009908",
            "code": "\nint processData_08009908(int input,uint size)\n\n{\n  undefined4 constant;\n  int result;\n  uint tempVar;\n  \n  constant = DAT_20000090;\n  if (input != 0) {\n    if (size == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      tempVar = FUN_0800a154();\n      result = input;\n      if ((tempVar < size) && (result = FUN_08009270(constant,size), result != 0)) {\n        FUN_080091b0(result,input,size);\n        FUN_080091d8(constant,input);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,size,size,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "process_data_08009908",
                "param_1": "input",
                "param_2": "size",
                "uVar1": "constant",
                "iVar2": "result",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "check_and_set_result_08009918",
            "code": "\nvoid checkAndSetResult_08009918(int *result,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008804(inputValue);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "check_and_set_result_08009918",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_character_08009938",
            "code": "\nchar * find_character_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_character_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_08009954",
            "code": "\nvoid copyString_08009954(char *destination,char *source,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *destPtr;\n  \n  do {\n    destPtr = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *source;\n    destination = destPtr + 1;\n    *destPtr = currentChar;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; destination != destPtr + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "destPtr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_match_position_0800997e",
            "code": "\nint find_last_match_position_0800997e(int data,int length,undefined4 arg1,undefined4 arg2)\n\n{\n  int result;\n  int last_match_position;\n  \n  if (length != 0) {\n    last_match_position = 0;\n    while (result = FUN_08009938(data,length,arg1,data,arg2), result != 0) {\n      data = result + 1;\n      last_match_position = result;\n    }\n    return last_match_position;\n  }\n  last_match_position = FUN_08009938();\n  return last_match_position;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_match_position_0800997e",
                "param_1": "data",
                "param_2": "length",
                "param_3": "arg1",
                "param_4": "arg2",
                "iVar1": "result",
                "iVar2": "last_match_position"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_first_substring_080099a4",
            "code": "\nchar * findFirstSubstring_080099a4(char *string,char *substring)\n\n{\n  char *ptrString;\n  char *ptrStringEnd;\n  char *ptrSubstring;\n  \n  if (*string == '\\0') {\n    if (*substring != '\\0') {\n      string = (char *)0x0;\n    }\n    return string;\n  }\n  do {\n    ptrString = string;\n    if (*ptrString == '\\0') {\n      return (char *)0x0;\n    }\n    ptrSubstring = substring + -1;\n    ptrStringEnd = ptrString + -1;\n    do {\n      ptrSubstring = ptrSubstring + 1;\n      if (*ptrSubstring == '\\0') {\n        return ptrString;\n      }\n      ptrStringEnd = ptrStringEnd + 1;\n      string = ptrString + 1;\n    } while (*ptrStringEnd == *ptrSubstring);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_first_substring_080099a4",
                "param_1": "string",
                "param_2": "substring",
                "pcVar1": "ptrString",
                "pcVar2": "ptrStringEnd",
                "pcVar3": "ptrSubstring"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "process_data_08009a80",
            "code": "\nuint processData_08009a80(undefined4 *output_param,undefined4 *data_param)\n\n{\n  int data_ptr;\n  uint result;\n  ushort status;\n  \n  data_ptr = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (data_param == &DAT_0800aba4) {\n    data_param = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (data_param == (undefined4 *)&DAT_0800abc4) {\n    data_param = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (data_param == (undefined4 *)&DAT_0800ab84) {\n    data_param = *(undefined4 **)(data_ptr + 0xc);\n  }\n  status = *(ushort *)(data_param + 3);\n  result = (uint)status;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)data_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)data_param[0xd] != data_param + 0x11) {\n          FUN_080091d8(output_param);\n        }\n        data_param[0xd] = 0;\n      }\n      *(ushort *)(data_param + 3) = *(ushort *)(data_param + 3) & 0xffdb;\n      data_param[1] = 0;\n      *data_param = data_param[4];\n    }\n    *(ushort *)(data_param + 3) = *(ushort *)(data_param + 3) | 8;\n  }\n  if ((data_param[4] == 0) && ((*(ushort *)(data_param + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(output_param,data_param);\n  }\n  status = *(ushort *)(data_param + 3);\n  result = status & 1;\n  if ((status & 1) == 0) {\n    if (-1 < (int)((uint)status << 0x1e)) {\n      result = data_param[5];\n    }\n    data_param[2] = result;\n  }\n  else {\n    data_param[2] = 0;\n    data_param[6] = -data_param[5];\n  }\n  if (data_param[4] == 0) {\n    status = *(ushort *)(data_param + 3);\n    result = (int)(short)status & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(data_param + 3) = status | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "param_1": "output_param",
                "param_2": "data_param",
                "iVar1": "data_ptr",
                "uVar2": "result",
                "uVar3": "status"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "reverse_binary_extraction_08009b5c",
            "code": "\nvoid reverse_binary_extraction_08009b5c(void)\n\n{\n  uint *pointer1;\n  int variable2;\n  int *pointer3;\n  int *pointer4;\n  uint variable5;\n  ushort variable6;\n  int variable7;\n  code *pointer8;\n  int variable9;\n  uint variable10;\n  code *unrecovered_jumptable;\n  bool bVar11;\n  undefined8 uVar12;\n  \n  FUN_08009fe8(6);\n  unrecovered_jumptable = (code *)0x8009b6b;\n  uVar12 = FUN_08008868(1);\n  pointer3 = (int *)((ulonglong)uVar12 >> 0x20);\n  pointer1 = (uint *)uVar12;\n  variable6 = *(ushort *)(pointer3 + 3);\n  variable5 = (uint)variable6;\n  if ((int)(variable5 << 0x1c) < 0) {\n    variable2 = pointer3[4];\n    if (variable2 != 0) {\n      variable7 = variable5 << 0x1e;\n      bVar11 = variable7 != 0;\n      if (bVar11) {\n        variable7 = 0;\n      }\n      variable9 = *pointer3;\n      if (!bVar11) {\n        variable7 = pointer3[5];\n      }\n      *pointer3 = variable2;\n      pointer3[2] = variable7;\n      for (variable9 = variable9 - variable2; 0 < variable9; variable9 = variable9 - variable7) {\n        variable7 = (*(code *)pointer3[10])(pointer1,pointer3[8],variable2,variable9);\n        if (variable7 < 1) {\n          variable6 = *(ushort *)(pointer3 + 3);\n          goto LAB_08009c62;\n        }\n        variable2 = variable2 + variable7;\n      }\n    }\n  }\n  else if (((0 < pointer3[1]) || (0 < pointer3[0x10])) &&\n          (pointer8 = (code *)pointer3[0xb], pointer8 != (code *)0x0)) {\n    variable10 = *pointer1;\n    *pointer1 = 0;\n    if ((variable6 & 0x1000) == 0) {\n      variable2 = (*pointer8)(pointer1,pointer3[8],variable5 & 0x1000,1);\n      if ((variable2 == -1) && (variable5 = *pointer1, variable5 != 0)) {\n        if ((variable5 != 0x1d) && (variable5 != 0x16)) {\n          *(ushort *)(pointer3 + 3) = *(ushort *)(pointer3 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*unrecovered_jumptable)();\n          return;\n        }\n        *pointer1 = variable10;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      variable2 = pointer3[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer3 + 3) << 0x1d) < 0) &&\n       (variable2 = variable2 - pointer3[1], pointer3[0xd] != 0)) {\n      variable2 = variable2 - pointer3[0x10];\n    }\n    variable2 = (*(code *)pointer3[0xb])(pointer1,pointer3[8],variable2,0);\n    variable6 = *(ushort *)(pointer3 + 3);\n    if ((variable2 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(pointer3 + 3) = variable6 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecovered_jumptable)(0xffffffff);\n      return;\n    }\n    pointer3[1] = 0;\n    *pointer3 = pointer3[4];\n    if (((int)((uint)variable6 << 0x13) < 0) && ((variable2 != -1 || (*pointer1 == 0)))) {\n      pointer3[0x15] = variable2;\n    }\n    pointer4 = (int *)pointer3[0xd];\n    *pointer1 = variable10;\n    if (pointer4 != (int *)0x0) {\n      if (pointer4 != pointer3 + 0x11) {\n        FUN_080091d8(pointer1);\n      }\n      pointer3[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecovered_jumptable)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecovered_jumptable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "reverse_binary_extraction_08009b5c",
                "puVar1": "pointer1",
                "iVar2": "variable2",
                "piVar3": "pointer3",
                "piVar4": "pointer4",
                "uVar5": "variable5",
                "uVar6": "variable6",
                "iVar7": "variable7",
                "pcVar8": "pointer8",
                "iVar9": "variable9",
                "uVar10": "variable10",
                "UNRECOVERED_JUMPTABLE_00": "unrecovered_jumptable"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "reverse_and_improve_08009c7c",
            "code": "\nundefined4 reverseAndImprove_08009c7c(uint *inputArray,int *outputArray)\n\n{\n  undefined4 returnValue;\n  int incrementValue;\n  int *varPtr;\n  uint value1;\n  ushort value2;\n  int tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  code *functionPtr;\n  int loopCounter;\n  uint tempVar4;\n  code *jumpTable;\n  bool bVar10;\n  \n  if (outputArray[4] != 0) {\n    if ((inputArray != (uint *)0x0) && (inputArray[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (outputArray == &DAT_0800aba4) {\n      outputArray = (int *)inputArray[1];\n    }\n    else if (outputArray == (int *)&DAT_0800abc4) {\n      outputArray = (int *)inputArray[2];\n    }\n    else if (outputArray == (int *)&DAT_0800ab84) {\n      outputArray = (int *)inputArray[3];\n    }\n    if (*(short *)(outputArray + 3) != 0) {\n      value2 = *(ushort *)(outputArray + 3);\n      value1 = (uint)value2;\n      if ((int)(value1 << 0x1c) < 0) {\n        incrementValue = outputArray[4];\n        if (incrementValue != 0) {\n          tempVar1 = value1 << 0x1e;\n          bVar10 = tempVar1 != 0;\n          if (bVar10) {\n            tempVar1 = 0;\n          }\n          loopCounter = *outputArray;\n          if (!bVar10) {\n            tempVar1 = outputArray[5];\n          }\n          *outputArray = incrementValue;\n          outputArray[2] = tempVar1;\n          for (loopCounter = loopCounter - incrementValue; 0 < loopCounter; loopCounter = loopCounter - tempVar1) {\n            tempVar1 = (*(code *)outputArray[10])(inputArray,outputArray[8],incrementValue,loopCounter,tempVar2,tempVar3);\n            if (tempVar1 < 1) {\n              value2 = *(ushort *)(outputArray + 3);\n              goto LAB_08009c62;\n            }\n            incrementValue = incrementValue + tempVar1;\n          }\n        }\n      }\n      else if (((0 < outputArray[1]) || (0 < outputArray[0x10])) &&\n              (functionPtr = (code *)outputArray[0xb], functionPtr != (code *)0x0)) {\n        tempVar4 = *inputArray;\n        *inputArray = 0;\n        if ((value2 & 0x1000) == 0) {\n          incrementValue = (*functionPtr)(inputArray,outputArray[8],value1 & 0x1000,1);\n          if ((incrementValue == -1) && (value1 = *inputArray, value1 != 0)) {\n            if ((value1 != 0x1d) && (value1 != 0x16)) {\n              *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *inputArray = tempVar4;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          incrementValue = outputArray[0x15];\n        }\n        if (((int)((uint)*(ushort *)(outputArray + 3) << 0x1d) < 0) &&\n           (incrementValue = incrementValue - outputArray[1], outputArray[0xd] != 0)) {\n          incrementValue = incrementValue - outputArray[0x10];\n        }\n        incrementValue = (*(code *)outputArray[0xb])(inputArray,outputArray[8],incrementValue,0);\n        value2 = *(ushort *)(outputArray + 3);\n        if ((incrementValue == -1) &&\n           ((0x1d < *inputArray || (-1 < (int)((0x20400001U >> (*inputArray & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(outputArray + 3) = value2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        outputArray[1] = 0;\n        *outputArray = outputArray[4];\n        if (((int)((uint)value2 << 0x13) < 0) && ((incrementValue != -1 || (*inputArray == 0)))) {\n          outputArray[0x15] = incrementValue;\n        }\n        varPtr = (int *)outputArray[0xd];\n        *inputArray = tempVar4;\n        if (varPtr != (int *)0x0) {\n          if (varPtr != outputArray + 0x11) {\n            FUN_080091d8(inputArray);\n          }\n          outputArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "reverse_and_improve_08009c7c",
                "param_1": "inputArray",
                "param_2": "outputArray",
                "uVar1": "returnValue",
                "iVar2": "incrementValue",
                "piVar3": "varPtr",
                "uVar4": "value1",
                "uVar5": "value2",
                "iVar6": "tempVar1",
                "unaff_r4": "tempVar2",
                "unaff_r5": "tempVar3",
                "pcVar7": "functionPtr",
                "iVar8": "loopCounter",
                "uVar9": "tempVar4",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_data_08009cdc",
            "code": "\nvoid initializeData_08009cdc(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080091c6(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x800a021;\n  data[10] = 0x800a043;\n  data[0xb] = 0x800a07b;\n  data[0xc] = &constantValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_data_08009cdc",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_0800a09e_1": "constantValue"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 inputData,int size)\n\n{\n  undefined4 *dataPointer;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  dataPointer = (undefined4 *)FUN_08009270(inputData,offset + 0x74);\n  if (dataPointer != (undefined4 *)0x0) {\n    *dataPointer = 0;\n    dataPointer[1] = size;\n    dataPointer[2] = dataPointer + 3;\n    FUN_080091c6(dataPointer + 3,0,offset + 0x68);\n  }\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "inputData",
                "param_2": "size",
                "puVar1": "dataPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *data)\n\n{\n  undefined4 returnValue;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_20000094;\n    data[10] = &LAB_08009cd0_1;\n    if (data == &DAT_20000094) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_20000094) {\n      data[6] = pointer;\n    }\n    returnValue = FUN_08009db0();\n    data[1] = returnValue;\n    returnValue = FUN_08009db0(data);\n    data[2] = returnValue;\n    returnValue = FUN_08009db0(data);\n    data[3] = returnValue;\n    FUN_08009cdc(data[1],4,0);\n    FUN_08009cdc(data[2],9,1);\n    FUN_08009cdc(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "data",
                "uVar1": "returnValue",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "initialize_data_structure_08009db0",
            "code": "\nint * initializeDataStructure_08009db0(undefined4 *errorCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentElement;\n  int *nestedElement;\n  int **nestedStructure;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  nestedStructure = (int **)&DAT_200000dc;\n  do {\n    nestedElement = nestedStructure[2];\n    currentElement = nestedStructure[1];\n    while (currentElement = (int *)((int)currentElement + -1), -1 < (int)currentElement) {\n      if (*(short *)(nestedElement + 3) == 0) {\n        *(undefined2 *)((int)nestedElement + 0xe) = 0xffff;\n        nestedElement[0x19] = 0;\n        *(undefined2 *)(nestedElement + 3) = 1;\n        *nestedElement = 0;\n        nestedElement[2] = 0;\n        nestedElement[1] = 0;\n        nestedElement[4] = 0;\n        nestedElement[5] = 0;\n        nestedElement[6] = 0;\n        FUN_080091c6(nestedElement + 0x17,0,8,1,param4);\n        nestedElement[0xd] = 0;\n        nestedElement[0xe] = 0;\n        nestedElement[0x12] = 0;\n        nestedElement[0x13] = 0;\n        return nestedElement;\n      }\n      nestedElement = nestedElement + 0x1a;\n    }\n    if (*nestedStructure == (int *)0x0) {\n      currentElement = (int *)FUN_08009d24(errorCode,4);\n      *nestedStructure = currentElement;\n      if (currentElement == (int *)0x0) {\n        *errorCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    nestedStructure = (int **)*nestedStructure;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "initialize_data_structure_08009db0",
                "param_1": "errorCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentElement",
                "piVar2": "nestedElement",
                "ppiVar3": "nestedStructure"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_flags_and_set_result_08009e64",
            "code": "\nundefined4 checkFlagsAndSetResult_08009e64(undefined4 inputValue,int dataPointer,undefined4 *outputValue,uint *resultPointer)\n\n{\n  int errorCode;\n  undefined4 flagValue;\n  undefined tempData [4];\n  uint localValue;\n  \n  if ((*(short *)(dataPointer + 0xe) < 0) ||\n     (errorCode = FUN_0800a0ec(inputValue,(int)*(short *)(dataPointer + 0xe),tempData), errorCode < 0)) {\n    *resultPointer = 0;\n    if ((int)((uint)*(ushort *)(dataPointer + 0xc) << 0x18) < 0) {\n      flagValue = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *resultPointer = (uint)((localValue & 0xf000) == 0x2000);\n  }\n  flagValue = 0x400;\nLAB_08009ea4:\n  *outputValue = flagValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_flags_and_set_result_08009e64",
                "param_1": "inputValue",
                "param_2": "dataPointer",
                "param_3": "outputValue",
                "param_4": "resultPointer",
                "iVar1": "errorCode",
                "uVar2": "flagValue",
                "auStack_4c": "tempData",
                "local_48": "localValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_param_08009eac",
            "code": "\nvoid processParam_08009eac(int param1,int *param2)\n\n{\n  ushort result1;\n  int result2;\n  int localParam1;\n  int *localParam2;\n  \n  if (-1 < (int)((uint)*(ushort *)(param2 + 3) << 0x1e)) {\n    localParam1 = param1;\n    localParam2 = param2;\n    result1 = FUN_08009e64(param1,param2,&localParam1,&localParam2);\n    result2 = FUN_08009270(param1,localParam1);\n    if (result2 != 0) {\n      *(undefined **)(param1 + 0x28) = &LAB_08009cd0_1;\n      *param2 = result2;\n      *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) | 0x80;\n      param2[4] = result2;\n      param2[5] = localParam1;\n      if ((localParam2 != (int *)0x0) &&\n         (result2 = FUN_0800a110(param1,(int)*(short *)((int)param2 + 0xe)), result2 != 0)) {\n        *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(param2 + 3) = result1 | *(ushort *)(param2 + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(param2 + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) & 0xfffc | 2;\n  }\n  *param2 = (int)param2 + 0x47;\n  param2[4] = (int)param2 + 0x47;\n  param2[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_param_08009eac",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "result1",
                "iVar2": "result2",
                "local_18": "localParam1",
                "local_14": "localParam2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *input_string,char target_char,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char;\n    if (next_char == input_string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != target_char);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "input_string",
                "param_2": "target_char",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_function_08009fe8",
            "code": "\nint executeFunction_08009fe8(uint index)\n\n{\n  int *result;\n  undefined4 returnValue;\n  int functionPointer;\n  code *currentFunction;\n  undefined4 constantValue;\n  undefined4 constantValue2;\n  undefined4 returnAddress;\n  undefined4 *pointer;\n  \n  result = DAT_20000090;\n  pointer = &DAT_20000090;\n  if (0x1f < index) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  functionPointer = DAT_20000090[0x11];\n  if ((functionPointer != 0) && (currentFunction = *(code **)(functionPointer + index * 4), currentFunction != (code *)0x0)) {\n    if (currentFunction != (code *)0x1) {\n      if (currentFunction == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(functionPointer + index * 4) = 0;\n      (*currentFunction)(index);\n    }\n    return 0;\n  }\n  returnValue = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  functionPointer = FUN_0800886c(returnValue,index,index,0,pointer,constantValue,constantValue2,returnAddress);\n  if ((functionPointer == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return functionPointer;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "param_1": "index",
                "piVar1": "result",
                "uVar2": "returnValue",
                "iVar3": "functionPointer",
                "pcVar4": "currentFunction",
                "unaff_r4": "constantValue",
                "unaff_r5": "constantValue2",
                "in_lr": "returnAddress",
                "puVar5": "pointer"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_one_thunk_0800887c",
            "code": "\nundefined4 getOne_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_one_thunk_0800887c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_value_0800a020",
            "code": "\nvoid updateValue_0800a020(undefined4 input,int data)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(input,(int)*(short *)(data + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(data + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(data + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(data + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_value_0800a020",
                "param_1": "input",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "process_data_0800a042",
            "code": "\nvoid processData_0800a042(int *output,int input,undefined4 paramA,undefined4 paramB)\n\n{\n  int result;\n  undefined4 unaffectedR4;\n  undefined4 unaffectedR5;\n  undefined4 interruptLinkRegister;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    FUN_0800a130(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = FUN_0800885c((int)*(short *)(input + 0xe),paramA,paramB,paramB,paramB,unaffectedR4,\n                       unaffectedR5,interruptLinkRegister);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "output",
                "param_2": "input",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "result",
                "unaff_r4": "unaffectedR4",
                "unaff_r5": "unaffectedR5",
                "in_lr": "interruptLinkRegister"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_status_0800a07a",
            "code": "\nvoid updateStatus_0800a07a(undefined4 inputValue,int dataPtr)\n\n{\n  int result;\n  ushort statusBits;\n  bool isError;\n  \n  result = FUN_0800a130(inputValue,(int)*(short *)(dataPtr + 0xe));\n  isError = result == -1;\n  if (isError) {\n    statusBits = *(ushort *)(dataPtr + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(dataPtr + 0x54) = result;\n    statusBits = *(ushort *)(dataPtr + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(dataPtr + 0xc) = statusBits;\n  }\n  if (!isError) {\n    *(ushort *)(dataPtr + 0xc) = statusBits;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_status_0800a07a",
                "param_1": "inputValue",
                "param_2": "dataPtr",
                "iVar1": "result",
                "uVar2": "statusBits",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "update_parameter_if_error_0800a0ec",
            "code": "\nvoid updateParameterIfError_0800a0ec(int *updatedParam,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008846(value1,value2,value2,0,value3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *updatedParam = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "update_parameter_if_error_0800a0ec",
                "param_1": "updatedParam",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "initialize_data_0800a110",
            "code": "\nvoid initializeData_0800a110(int *outputPointer,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008850(inputValue);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "initialize_data_0800a110",
                "param_1": "outputPointer",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_param_if_negative_0800a130",
            "code": "\nvoid updateParamIfNegative_0800a130(int *result,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008854(value1,value2,value3,value3,value3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_param_if_negative_0800a130",
                "param_1": "result",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_result_0800a154",
            "code": "\nint calculateResult_0800a154(undefined4 result,int base)\n\n{\n  int modifiedBase;\n  \n  modifiedBase = *(int *)(base + -4) + -4;\n  if (*(int *)(base + -4) < 0) {\n    modifiedBase = modifiedBase + *(int *)(base + modifiedBase);\n  }\n  return modifiedBase;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_result_0800a154",
                "param_1": "result",
                "param_2": "base",
                "iVar1": "modifiedBase"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "process_data_0800a168",
            "code": "\nvoid processData_0800a168(int *outputValue,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008858(inputValue1,inputValue2,inputValue3,inputValue3,inputValue3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputValue = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "process_data_0800a168",
                "param_1": "outputValue",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "initialize_flags_0800a18c",
            "code": "\nvoid initializeFlags_0800a18c(void)\n\n{\n  code *flagsFunction;\n  \n  flagsFunction = initializeFlags_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*flagsFunction)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "initialize_flags_0800a18c",
                "UNRECOVERED_JUMPTABLE": "flagsFunction"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 210026,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}