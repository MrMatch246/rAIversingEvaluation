{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 value)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_080001ac(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  return CONCAT44(second_parameter,first_parameter);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_080001ac",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "initialize_application_08000210",
            "code": "\nvoid initializeApplication_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "initialize_application_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_data_08000220",
            "code": "\nvoid updateData_08000220(char inputData)\n\n{\n  if (inputData != DAT_20000468) {\n    FUN_08002fd4();\n    if (inputData == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = inputData;\n    }\n    else if (inputData == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = inputData;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = inputData;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_data_08000220",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_adjusted_value_08000268",
            "code": "\n\n\nint calculateAdjustedValue_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "initialize_component_080002a0",
            "code": "\nvoid initializeComponent_080002a0(undefined4 component)\n\n{\n  FUN_08005a98(component);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "initialize_component_080002a0",
                "param_1": "component"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "find_value_080002b6",
            "code": "\nvoid findValue_080002b6(uint inputValue)\n\n{\n  uint highBits;\n  uint combinedValue;\n  bool isGreaterThan;\n  longlong resultValue;\n  undefined8 nextValue;\n  \n  resultValue = FUN_08000268();\n  combinedValue = (uint)(resultValue + (ulonglong)inputValue >> 0x20);\n  do {\n    nextValue = FUN_08000268();\n    highBits = (uint)((ulonglong)nextValue >> 0x20);\n    isGreaterThan = combinedValue <= highBits;\n    if (highBits == combinedValue) {\n      isGreaterThan = (uint)(resultValue + (ulonglong)inputValue) <= (uint)nextValue;\n    }\n  } while (!isGreaterThan);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "find_value_080002b6",
                "param_1": "inputValue",
                "uVar1": "highBits",
                "uVar2": "combinedValue",
                "bVar3": "isGreaterThan",
                "lVar4": "resultValue",
                "uVar5": "nextValue"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_memory_080002f0",
            "code": "\nvoid initializeMemory_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_memory_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_data_entry_08000310",
            "code": "\nundefined get_data_entry_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_data_entry_08000310",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined data)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "data"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculateChecksum_08000374(int length,char *data,int size)\n\n{\n  int remainingSize;\n  char *currentData;\n  int currentIndex;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingSize = size;\n  currentData = data;\n  currentIndex = length;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentData = data;\n    currentIndex = length;\n  }\n  for (; remainingSize != 0; remainingSize = remainingSize + -1) {\n    checksum = (checksum != '\\0') + *currentData;\n    FUN_08000340(currentIndex,*currentData);\n    currentData = currentData + 1;\n    currentIndex = currentIndex + 1;\n  }\n  FUN_08000340(currentIndex,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "length",
                "param_2": "data",
                "param_3": "size",
                "local_1c": "remainingSize",
                "local_18": "currentData",
                "local_14": "currentIndex",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "verify_data_080003ec",
            "code": "\nbool verify_data_080003ec(char *data,int start_index,int length)\n\n{\n  char current_character;\n  uint uVar2;\n  int remaining_length;\n  int current_index;\n  char *current_data;\n  byte checksum_value;\n  \n  checksum_value = 0;\n  remaining_length = length;\n  current_index = start_index;\n  current_data = data;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_index = start_index;\n    current_data = data;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    current_character = FUN_08000310(current_index);\n    checksum_value = current_character + (checksum_value != 0);\n    *current_data = current_character;\n    current_index = current_index + 1;\n    current_data = current_data + 1;\n  }\n  uVar2 = FUN_08000310(current_index);\n  return checksum_value == uVar2;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "verify_data_080003ec",
                "param_1": "data",
                "param_2": "start_index",
                "param_3": "length",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "current_data",
                "local_9": "checksum_value",
                "cVar1": "current_character"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_data_08000478",
            "code": "\nvoid initializeData_08000478(undefined input1,undefined input2,undefined input3)\n\n{\n  DAT_20000e89 = input1;\n  DAT_20000e8a = input2;\n  DAT_20000e8b = input3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_data_08000478",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int result;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  result = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (result == 0) {\n    FUNC_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08008e44(input1);\n  DAT_20000e7c = FUN_08009054(result,DAT_20000ebc);\n  result = FUN_08008e44(input2);\n  DAT_20000e80 = FUN_08009054(result,DAT_20000ec0);\n  result = FUN_08008e44(input3);\n  DAT_20000e84 = FUN_08009054(result,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_parameter_0800056c",
            "code": "\nundefined4 processParameter_0800056c(undefined4 input)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(input);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    input = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_parameter_0800056c",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "FUNC_080005b4",
            "code": "\nchar FUNC_080005b4(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char cVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined local_45;\n  uint local_44;\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  uint local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    cVar3 = '\\f';\n  }\n  else {\n    local_51 = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = 0xbf800000;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    DAT_20000e70 = '\\0';\n    local_2f = 0;\n    while (iVar1 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,&local_51), iVar1 != 0) {\n      uVar6 = FUN_08008590(local_58);\n      uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar2 = FUN_08008eec(local_58,0x41200000);\n          uVar6 = FUN_08008590(uVar2);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)local_24 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          uVar2 = FUN_08008eec(local_58,0x41200000);\n          uVar6 = FUN_08008590(uVar2);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        local_2f = 0;\n      }\n    }\n    cVar3 = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51 = 0;\nswitchD_08000d18_caseD_47:\n      iVar1 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,&local_51);\n      if (iVar1 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar1 = FUN_0800923c(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(local_58);\n          }\n          else {\n            local_2c = FUN_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar4 = (uint)local_52;\n          uVar2 = FUN_0800056c(local_58);\n          auStack_70[uVar4 - 0x49] = uVar2;\n          break;\n        case 0x4c:\n          uVar6 = FUN_08008590(local_58);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUN_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar1 = FUN_08009228(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          iVar1 = FUN_08009228(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          uVar6 = FUN_08008590(local_58);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          break;\n        case 0x58:\n          auStack_70[3] = FUN_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUN_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUN_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      cVar3 = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar1 = FUN_08004d7c(DAT_20000e8c,&local_7c);\n          if (iVar1 == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = local_7c;\n          DAT_20000e94 = uStack_78;\n          DAT_20000e98 = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar1 = FUN_08009228(local_34,0);\n          if (iVar1 == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          uVar6 = FUN_08008590(local_34);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)DAT_20000e8c;\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar1 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar1 == 0) {\n                return '\\n';\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar4 = (uint)local_3a;\n                    uVar2 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (local_3a + 2) * 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar4] = uVar2;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              if (local_24 == DAT_20000e8c) {\n                DAT_20000e90 = local_94[0];\n                DAT_20000e94 = local_94[1];\n                DAT_20000e98 = local_94[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] = *(undefined4 *)(&DAT_20000e74 + (local_3b + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                uVar4 = (uint)local_3b;\n                uVar2 = FUN_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3b + 2) * 4));\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n              else {\n                uVar5 = auStack_70[local_3b + 3];\n                uVar2 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3b + 10) * 4));\n                uVar4 = (uint)local_3b;\n                uVar2 = FUN_08008cdc(uVar5,uVar2);\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],DAT_20000ed0,0);\n          }\n          if (local_2e == '\\x05') {\n            iVar1 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar1 == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            iVar1 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar1 == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,DAT_20000ed0,0);\n          DAT_20000e7c = local_94[3];\n          DAT_20000e80 = local_84;\n          DAT_20000e84 = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar2 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (local_3c + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (local_3c + 8) * 4));\n                uVar4 = (uint)local_3c;\n                uVar2 = FUN_08008cd8(uVar2,auStack_70[local_3c + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (uVar4 + 10) * 4) = uVar2;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((iVar1 = FUN_08009228(local_2c,0), iVar1 != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((local_2d != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (local_3d = 0; local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(&DAT_20000e74 + (local_3d + 2) * 4);\n            }\n            else if (local_2d == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                uVar4 = (uint)local_3d;\n                uVar2 = FUN_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3d + 2) * 4));\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n              else {\n                uVar5 = auStack_70[local_3d + 3];\n                uVar2 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3d + 10) * 4));\n                uVar4 = (uint)local_3d;\n                uVar2 = FUN_08008cdc(uVar5,uVar2);\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (local_27 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (local_27 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              uVar2 = local_2c;\n              if (DAT_20000e72 == '\\0') {\n                uVar2 = DAT_20000e78;\n              }\n              FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],uVar2,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            local_27 = local_27 & ~(byte)(1 << DAT_20000e8b);\n            if ((local_27 == 0) ||\n               (((iVar1 = FUN_08009214(local_38,0), iVar1 != 0 &&\n                 (iVar1 = FUN_08009214(auStack_70[DAT_20000e89],0), iVar1 != 0)) &&\n                (iVar1 = FUN_08009214(auStack_70[DAT_20000e8a],0), iVar1 != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              iVar1 = FUN_08009214(local_38,0);\n              if (iVar1 == 0) {\n                local_4c = FUN_08008cd8(auStack_70[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                local_50 = FUN_08008cd8(auStack_70[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(auStack_70,0,0xc);\n                uVar2 = FUN_08008eec(local_38,0x40800000);\n                uVar2 = FUN_08008eec(uVar2,local_38);\n                uVar5 = FUN_08008eec(local_4c,local_4c);\n                uVar2 = FUN_08008cd8(uVar2,uVar5);\n                uVar5 = FUN_08008eec(local_50,local_50);\n                local_44 = FUN_08008cd8(uVar2,uVar5);\n                iVar1 = FUN_08009228(local_44,0);\n                if (iVar1 != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                uVar6 = FUN_08008590(local_44);\n                uVar6 = FUN_080098d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n                uVar7 = FUN_08008590(local_4c);\n                uVar8 = FUN_08008590(local_50);\n                uVar7 = FUN_0800981c((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),(int)uVar8,\n                                     (int)((ulonglong)uVar8 >> 0x20));\n                uVar6 = FUN_08008894((int)uVar6,(uint)((ulonglong)uVar6 >> 0x20) ^ 0x80000000,\n                                     (int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n                local_44 = FUN_08008c30((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  local_44 = local_44 ^ 0x80000000;\n                }\n                iVar1 = FUN_08009228(local_38,0);\n                if (iVar1 != 0) {\n                  local_44 = local_44 ^ 0x80000000;\n                  local_38 = local_38 ^ 0x80000000;\n                }\n                uVar2 = FUN_08008eec(local_50,local_44);\n                uVar2 = FUN_08008cd8(local_4c,uVar2);\n                uVar4 = (uint)DAT_20000e89;\n                uVar2 = FUN_08008eec(uVar2,0x3f000000);\n                auStack_70[uVar4] = uVar2;\n                uVar2 = FUN_08008eec(local_4c,local_44);\n                uVar2 = FUN_08008cdc(uVar2,local_50);\n                uVar4 = (uint)DAT_20000e8a;\n                uVar2 = FUN_08008eec(uVar2,0x3f000000);\n                auStack_70[uVar4] = uVar2;\n              }\n              else {\n                uVar6 = FUN_08008590(auStack_70[DAT_20000e89]);\n                uVar7 = FUN_08008590(auStack_70[DAT_20000e8a]);\n                uVar6 = FUN_0800981c((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                                     (int)((ulonglong)uVar7 >> 0x20));\n                local_38 = FUN_08008c30((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n              }\n              local_45 = DAT_20000e71 == '\\x02';\n              uVar2 = local_2c;\n              if (DAT_20000e72 == '\\0') {\n                uVar2 = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,auStack_70 + 3,auStack_70,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,uVar2,DAT_20000e72,local_38,local_45);\n            }\n            break;\n          case '\\x04':\n            if (local_27 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = auStack_70[3];\n          DAT_20000e80 = auStack_70[4];\n          DAT_20000e84 = auStack_70[5];\n        }\n        cVar3 = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            cVar3 = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            cVar3 = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return cVar3;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_and_process_character_0800184c",
            "code": "\nundefined4 checkAndProcessCharacter_0800184c(byte *output,undefined4 input,int baseAddress,byte *currentIndex)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)(baseAddress + (uint)*currentIndex) == '\\0') {\n    returnValue = 0;\n  }\n  else {\n    *output = *(byte *)(baseAddress + (uint)*currentIndex);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      DAT_20000e70 = 2;\n      returnValue = 0;\n    }\n    else {\n      *currentIndex = *currentIndex + 1;\n      result = FUN_08002638(baseAddress,currentIndex,input);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 1;\n      }\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_and_process_character_0800184c",
                "param_1": "output",
                "param_2": "input",
                "param_3": "baseAddress",
                "param_4": "currentIndex",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_data_080018cc",
            "code": "\n\n\nvoid updateData_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_data_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_data_and_mask_080018fc",
            "code": "\n\n\nvoid updateDataAndMask_080018fc(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_data_and_mask_080018fc",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "set_flag_based_on_bit_0800192c",
            "code": "\nvoid setFlagBasedOnBit_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "set_flag_based_on_bit_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "check_and_set_flag_0800195c",
            "code": "\nvoid checkAndSetFlag_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "check_and_set_flag_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "revised_function_08001994",
            "code": "\nvoid revisedFunction_08001994(byte flag1,char flag2,char flag3,undefined4 param4)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 result2;\n  undefined8 result3;\n  byte localFlag;\n  uint var1;\n  uint var2;\n  uint var3;\n  ushort var4;\n  uint var5;\n  int var6;\n  undefined4 var7;\n  uint var8;\n  uint var9;\n  ushort var10;\n  uint var11;\n  uint var12;\n  int var13;\n  int var14;\n  int var15;\n  int var16;\n  ushort var17;\n  uint minValue;\n  char var18;\n  \n  var18 = '\\0';\n  FUN_0800b430(&var1,0,0xc);\n  if ((flag1 & 1) != 0) {\n    var18 = var18 + '\\x01';\n    result2 = FUN_08008590(DAT_20000ebc);\n    var1 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flag1 & 2) != 0) {\n    var18 = var18 + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec0);\n    var2 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flag1 & 4) != 0) {\n    var18 = var18 + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec4);\n    var3 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  maxValue = var3;\n  if (var3 < var2) {\n    maxValue = var2;\n  }\n  var8 = var1;\n  if (var1 < maxValue) {\n    var8 = maxValue;\n  }\n  result2 = FUN_0800854c(var8);\n  result3 = FUN_0800854c(var18);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result2 = FUN_08008894((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  var7 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000edc,var7);\n  result1 = FUN_08009054(result1,0x453b8000);\n  result2 = FUN_08008590(result1);\n  result2 = FUN_08009318((int)result2,(int)((ulonglong)result2 >> 0x20));\n  var6 = FUN_08008bf0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result2 = FUN_0800854c(var18);\n  result2 = FUN_080098d0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result3 = FUN_08008590(param4);\n  result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(var7,result1);\n  result1 = FUN_08009054(0x4c64e1c0,result1);\n  result2 = FUN_08008590(result1);\n  var5 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  minValue = 75000;\n  if (var5 < 75000) {\n    minValue = var5;\n  }\n  var4 = DAT_20000ed4;\n  var17 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (flag2 == '\\0') {\n    var17 = var17 ^ 0xaa0;\n  }\n  FUN_080018fc(var17);\n  FUN_080018cc(var4);\n  var14 = -(var8 >> 1);\n  var13 = minValue - DAT_20000ec9;\n  var12 = 0;\n  var11 = 10000;\n  localFlag = flag1;\n  var15 = var14;\n  var16 = var14;\n  while( true ) {\n    var10 = var4;\n    var9 = FUN_080078f4();\n    if (flag3 == '\\0') {\n      var9 = var9 ^ 0x1e;\n    }\n    if (((localFlag & 1) != 0) && (var16 = var16 + var1, 0 < var16)) {\n      if ((var9 & 0x10) == 0) {\n        localFlag = localFlag & 0xfe;\n      }\n      else {\n        var10 = var10 ^ 0x10;\n      }\n      var16 = var16 - var8;\n    }\n    if (((localFlag & 2) != 0) && (var15 = var15 + var2, 0 < var15)) {\n      if ((var9 & 8) == 0) {\n        localFlag = localFlag & 0xfd;\n      }\n      else {\n        var10 = var10 ^ 0x440;\n      }\n      var15 = var15 - var8;\n    }\n    if (((localFlag & 4) != 0) && (var14 = var14 + var3, 0 < var14)) {\n      if ((var9 & 4) == 0) {\n        localFlag = localFlag & 0xfb;\n      }\n      else {\n        var10 = var10 ^ 0x100;\n      }\n      var14 = var14 - var8;\n    }\n    if ((localFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(var10);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(var4);\n    FUNC_08002828(var13);\n    if ((var5 < minValue) && (var11 = minValue + var11, 20000 < var11)) {\n      var11 = var11 - 20000;\n      var12 = var6 + var12;\n      minValue = 60000000 / var12;\n      if (minValue < var5) {\n        minValue = var5;\n      }\n      var13 = minValue - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "revised_function_08001994",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "result2",
                "uVar4": "result3",
                "local_61": "localFlag",
                "local_5c": "var1",
                "local_58": "var2",
                "local_54": "var3",
                "local_4e": "var4",
                "local_4c": "var5",
                "local_48": "var6",
                "local_44": "var7",
                "local_40": "var8",
                "local_3c": "var9",
                "local_36": "var10",
                "local_34": "var11",
                "local_30": "var12",
                "local_2c": "var13",
                "local_28": "var14",
                "local_24": "var15",
                "local_20": "var16",
                "local_1a": "var17",
                "local_18": "minValue",
                "local_11": "var18"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "execute_reversed_tasks_08001d4c",
            "code": "\nvoid execute_reversed_tasks_08001d4c(void)\n\n{\n  char previous_value;\n  char counter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  counter = '\\x02';\n  while( true ) {\n    previous_value = counter + -1;\n    if (counter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    counter = previous_value;\n    if ('\\0' < previous_value) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "execute_reversed_tasks_08001d4c",
                "local_9": "counter",
                "cVar1": "previous_value"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_system_08001ddc",
            "code": "\nvoid initialize_system_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUNC_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_system_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "check_and_execute_function_08001e98",
            "code": "\nvoid checkAndExecuteFunction_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int taskStatus;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      taskStatus = FUN_08002fac();\n    } while (taskStatus != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "check_and_execute_function_08001e98",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "taskStatus"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_result_08001f00",
            "code": "\nvoid calculateResult_08001f00(int input1,undefined4 *array,int input2,byte byte1,byte byte2,byte byte3\n                 ,undefined4 param1,char flag,undefined4 param2,char conditionFlag)\n\n{\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  int result;\n  uint tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  uint resultArray [4];\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  ushort loopLimit;\n  undefined4 resultValue;\n  undefined4 localVar7;\n  undefined4 localVar8;\n  uint byte1XOR;\n  undefined4 byte2XOR;\n  undefined4 localVar9;\n  char loopCounterFlag;\n  ushort loopCounter;\n  undefined4 finalResult;\n  uint byte2XORResult;\n  uint byte1XORResult;\n  \n  localVar9 = FUN_08008cdc(*(undefined4 *)((uint)byte1 * 4 + input1),\n                          *(undefined4 *)((uint)byte1 * 4 + input2));\n  byte2XOR = FUN_08008cdc(*(undefined4 *)((uint)byte2 * 4 + input1),\n                          *(undefined4 *)((uint)byte2 * 4 + input2));\n  byte1XOR = FUN_08008cd8(array[byte3],*(undefined4 *)((uint)byte3 * 4 + input1));\n  byte1XORResult = *(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000;\n  byte2XORResult = *(uint *)((uint)byte2 * 4 + input2) ^ 0x80000000;\n  localVar8 = FUN_08008cd8(array[byte1],localVar9);\n  localVar7 = FUN_08008cd8(array[byte2],byte2XOR);\n  tempVar1 = FUN_08008eec(byte1XORResult,localVar7);\n  tempVar2 = FUN_08008eec(byte2XORResult,localVar8);\n  tempVar1 = FUN_08008cd8(tempVar1,tempVar2);\n  tempVar4 = FUN_08008590(tempVar1);\n  tempVar1 = FUN_08008eec(byte1XORResult,localVar8);\n  tempVar2 = FUN_08008eec(byte2XORResult,localVar7);\n  tempVar1 = FUN_08008cdc(tempVar1,tempVar2);\n  tempVar5 = FUN_08008590(tempVar1);\n  tempVar4 = thunk_FUN_08009990((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                             (int)((ulonglong)tempVar5 >> 0x20));\n  finalResult = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n  if (conditionFlag == '\\0') {\n    result = FUN_0800923c(finalResult,0);\n    if (result != 0) {\n      tempVar4 = FUN_08008590(finalResult);\n      tempVar4 = FUN_080082d4((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),0x54442d18,0x401921fb);\n      finalResult = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n    }\n  }\n  else {\n    result = FUN_08009250(finalResult,0);\n    if (result != 0) {\n      tempVar4 = FUN_08008590(finalResult);\n      tempVar4 = FUN_080082d0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),0x54442d18,0x401921fb);\n      finalResult = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n    }\n  }\n  tempVar1 = FUN_08008eec(finalResult,param2);\n  tempVar4 = FUN_08008590(tempVar1);\n  tempVar5 = FUN_08008590(byte1XOR & 0x7fffffff);\n  tempVar4 = FUN_0800981c((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                       (int)((ulonglong)tempVar5 >> 0x20));\n  resultValue = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n  result = FUN_08009214(resultValue,0);\n  if (result == 0) {\n    tempVar1 = FUN_08009054(resultValue,DAT_20000ed8);\n    tempVar4 = FUN_08008590(tempVar1);\n    tempVar4 = FUN_080094c0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n    loopLimit = FUN_08008bf0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n    if (flag != '\\0') {\n      tempVar1 = FUN_08008e44(loopLimit);\n      param1 = FUN_08008eec(param1,tempVar1);\n    }\n    tempVar1 = FUN_08008e44(loopLimit);\n    localVar6 = FUN_08009054(finalResult,tempVar1);\n    tempVar1 = FUN_08008e44(loopLimit);\n    localVar5 = FUN_08009054(byte1XOR,tempVar1);\n    tempVar4 = FUN_08008590(localVar6);\n    tempVar4 = FUN_08008640((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),0,0x3fe00000);\n    tempVar5 = FUN_08008590(localVar6);\n    tempVar4 = FUN_08008640((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                         (int)((ulonglong)tempVar5 >> 0x20));\n    tempVar4 = FUN_080082d0(0,0x3ff00000,(int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n    localVar4 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n    localVar3 = localVar6;\n    loopCounterFlag = '\\0';\n    resultArray[byte3] = *(uint *)(input1 + (uint)byte3 * 4);\n    for (loopCounter = 1; loopCounter < loopLimit; loopCounter = loopCounter + 1) {\n      if ((int)loopCounterFlag < (int)(uint)DAT_20000efa) {\n        tempVar1 = FUN_08008eec(byte1XORResult,localVar3);\n        tempVar2 = FUN_08008eec(byte2XORResult,localVar4);\n        resultArray[3] = FUN_08008cdc(tempVar1,tempVar2);\n        tempVar1 = FUN_08008eec(byte1XORResult,localVar4);\n        tempVar2 = FUN_08008eec(byte2XORResult,localVar3);\n        byte1XORResult = FUN_08008cd8(tempVar1,tempVar2);\n        byte2XORResult = resultArray[3];\n        loopCounterFlag = loopCounterFlag + '\\x01';\n      }\n      else {\n        tempVar1 = FUN_08008e44(loopCounter);\n        tempVar1 = FUN_08008eec(tempVar1,localVar6);\n        tempVar4 = FUN_08008590(tempVar1);\n        tempVar4 = FUN_08009410((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n        localVar2 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n        tempVar1 = FUN_08008e44(loopCounter);\n        tempVar1 = FUN_08008eec(tempVar1,localVar6);\n        tempVar4 = FUN_08008590(tempVar1);\n        tempVar4 = FUN_080096e8((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n        localVar1 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n        tempVar1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,localVar2);\n        tempVar2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),localVar1);\n        byte1XORResult = FUN_08008cdc(tempVar1,tempVar2);\n        tempVar1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,localVar1);\n        tempVar2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),localVar2);\n        byte2XORResult = FUN_08008cd8(tempVar1,tempVar2);\n        loopCounterFlag = '\\0';\n      }\n      tempVar3 = FUN_08008cdc(localVar9,byte1XORResult);\n      resultArray[byte1] = tempVar3;\n      tempVar3 = FUN_08008cdc(byte2XOR,byte2XORResult);\n      resultArray[byte2] = tempVar3;\n      tempVar3 = FUN_08008cdc(resultArray[byte3],localVar5);\n      resultArray[byte3] = tempVar3;\n      FUN_08001e98(resultArray[0],resultArray[1],resultArray[2],param1,flag);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*array,array[1],array[2],param1,flag);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_result_08001f00",
                "param_1": "input1",
                "param_2": "array",
                "param_3": "input2",
                "param_4": "byte1",
                "param_5": "byte2",
                "param_6": "byte3",
                "param_7": "param1",
                "param_8": "flag",
                "param_9": "param2",
                "param_10": "conditionFlag",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "result",
                "uVar4": "tempVar3",
                "uVar5": "tempVar4",
                "uVar6": "tempVar5",
                "local_6c": "resultArray",
                "local_5c": "localVar1",
                "local_58": "localVar2",
                "local_54": "localVar3",
                "local_50": "localVar4",
                "local_4c": "localVar5",
                "local_48": "localVar6",
                "local_42": "loopLimit",
                "local_40": "resultValue",
                "local_3c": "localVar7",
                "local_38": "localVar8",
                "local_34": "byte1XOR",
                "local_30": "byte2XOR",
                "local_2c": "localVar9",
                "local_27": "loopCounterFlag",
                "local_26": "loopCounter",
                "local_24": "finalResult",
                "local_20": "byte2XORResult",
                "local_1c": "byte1XORResult"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 data)\n\n{\n  undefined2 result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined8 temp3;\n  ushort count;\n  \n  temp1 = FUN_08008eec(data,0x41a00000);\n  temp3 = FUN_08008590(temp1);\n  temp3 = FUN_080094c0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  count = FUN_08008bf0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  FUN_08002fd4();\n  temp1 = FUN_08008eec(data,0x447a0000);\n  temp2 = FUN_08008e44((uint)count * 0x32);\n  temp1 = FUN_08008cd8(temp1,temp2);\n  temp3 = FUN_08008590(temp1);\n  temp3 = FUN_080094c0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  result = FUN_08008bf0((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  FUNC_08002814(result);\n  while ((count != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    count = count - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "data",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "local_12": "count"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_data_080024c4",
            "code": "\nvoid initializeData_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char flag1;\n  char flag2;\n  char flag3;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      flag3 = -1;\n    }\n    else {\n      flag3 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      flag2 = -1;\n    }\n    else {\n      flag2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = '\\x01';\n    }\n    uVar1 = FUN_08008e44((int)flag3);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUN_08008e44((int)flag2);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUN_08008e44((int)flag1);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_data_080024c4",
                "local_13": "flag1",
                "local_12": "flag2",
                "local_11": "flag3"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "enable_feature_080025e8",
            "code": "\nvoid enableFeature_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "enable_feature_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int startAddress,byte *data,uint *result)\n\n{\n  byte digit;\n  bool isNegative;\n  bool isPoint;\n  int status;\n  char *currentChar;\n  char *nextChar;\n  undefined4 returnValue;\n  undefined8 tempValue;\n  uint decimalValue;\n  byte digitCount;\n  char pointPosition;\n  int parsedInteger;\n  char currentSign;\n  char *currentData;\n  \n  nextChar = (char *)(startAddress + (uint)*data);\n  currentChar = nextChar + 1;\n  currentSign = *nextChar;\n  isNegative = false;\n  if (currentSign == '-') {\n    isNegative = true;\n    currentSign = *currentChar;\n    currentData = nextChar + 2;\n  }\n  else {\n    currentData = currentChar;\n    if (currentSign == '+') {\n      currentData = nextChar + 2;\n      currentSign = *currentChar;\n    }\n  }\n  parsedInteger = 0;\n  pointPosition = '\\0';\n  digitCount = 0;\n  isPoint = false;\n  do {\n    digit = currentSign - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isPoint) {\n          pointPosition = pointPosition + -1;\n        }\n        parsedInteger = (uint)digit + parsedInteger * 10;\n      }\n      else if (!isPoint) {\n        pointPosition = pointPosition + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (isPoint)) {\n        if (digitCount == 0) {\n          returnValue = 0;\n        }\n        else {\n          decimalValue = FUN_08008e3c(parsedInteger);\n          status = FUN_08009214(decimalValue,0);\n          if (status == 0) {\n            for (; pointPosition < -1; pointPosition = pointPosition + '\\x02') {\n              tempValue = FUN_08008590(decimalValue);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              decimalValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (pointPosition < '\\0') {\n              tempValue = FUN_08008590(decimalValue);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              decimalValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < pointPosition; pointPosition = pointPosition + -1) {\n                decimalValue = FUN_08008eec(decimalValue,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *result = decimalValue ^ 0x80000000;\n          }\n          else {\n            *result = decimalValue;\n          }\n          *data = ((char)currentData - (char)startAddress) - 1;\n          returnValue = 1;\n        }\n        return returnValue;\n      }\n      isPoint = true;\n    }\n    currentSign = *currentData;\n    currentData = currentData + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "startAddress",
                "param_2": "data",
                "param_3": "result",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "isPoint",
                "iVar4": "status",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "returnValue",
                "uVar8": "tempValue",
                "local_1c": "decimalValue",
                "local_16": "digitCount",
                "local_15": "pointPosition",
                "local_14": "parsedInteger",
                "local_d": "currentSign",
                "local_c": "currentData"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_0800283a",
            "code": "\nvoid initialize_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_wrap_08002870",
            "code": "\nchar increment_and_wrap_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_wrap_08002870",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "process_character_08002896",
            "code": "\nchar process_character_08002896(char character)\n\n{\n  char processed_character;\n  \n  processed_character = character;\n  if (character == '\\0') {\n    processed_character = '\\x12';\n  }\n  return processed_character + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "process_character_08002896",
                "param_1": "character",
                "local_9": "processed_character"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_result_080028bc",
            "code": "\nundefined4 calculate_result_080028bc(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = FUN_08008eec(input_2,input_2);\n  result_2 = FUN_08008eec(input_1,input_1);\n  result_1 = FUN_08008cd8(result_1,result_2);\n  result_2 = FUN_08008cdc(input_3,input_3);\n  result_1 = FUN_08009054(result_1,result_2);\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08008eec(result1,input4);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008eec(input2,input2);\n  result1 = FUN_08008cdc(result1,result2);\n  result2 = FUN_08008eec(input3,0x40800000);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 finalResult;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  finalResult = FUN_08008590(result1);\n  finalResult = FUN_080098d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  result1 = FUN_08008c30((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_parameters_080029d8",
            "code": "\nvoid updateParameters_080029d8(undefined4 arg1,int param1,int param2)\n\n{\n  int result;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((param1 != 0) && (param2 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(param1 + 0x18),*(undefined4 *)(param1 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(param1 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(param1 + 0x1c),*(undefined4 *)(param2 + 0x18)),\n       result != 0)) {\n      updatedValue2 = *(undefined4 *)(param1 + 0x1c);\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param2 + 0x18),\n                           *(undefined4 *)(param1 + 0x20));\n      result = FUN_08009228(updatedValue2,updatedValue1);\n      if (result == 0) {\n        updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param2 + 0x18),\n                             *(undefined4 *)(param1 + 0x20));\n      }\n      else {\n        updatedValue1 = *(undefined4 *)(param1 + 0x1c);\n      }\n      *(undefined4 *)(param1 + 0x18) = updatedValue1;\n    }\n    else {\n      *(undefined4 *)(param1 + 0x18) = *(undefined4 *)(param1 + 0x1c);\n    }\n    *(undefined *)(param1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_parameters_080029d8",
                "param_1": "arg1",
                "param_2": "param1",
                "param_3": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_data_08002a94",
            "code": "\nvoid process_data_08002a94(void)\n\n{\n  undefined *puVar1;\n  undefined *current_block;\n  undefined *previous_block;\n  byte current_byte;\n  \n  current_byte = DAT_20000cf0;\n  current_block = (undefined *)0x0;\n  previous_block = (undefined *)0x0;\n  while (puVar1 = previous_block, current_byte != DAT_20000cf1) {\n    current_byte = FUN_08002896(current_byte);\n    previous_block = current_block;\n    FUN_080029d8(&DAT_20000870 + (uint)current_byte * 0x40,current_block,puVar1);\n    current_block = &DAT_20000870 + (uint)current_byte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "local_18": "current_block",
                "local_14": "previous_block",
                "local_9": "current_byte"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "update_data_08002afc",
            "code": "\nvoid updateData_08002afc(int data1,int data2)\n\n{\n  int result;\n  undefined4 newData1;\n  undefined4 newData2;\n  \n  if (((data1 != 0) && (*(char *)(data1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(data1 + 0x18),*(undefined4 *)(data2 + 0x18)),\n     result != 0)) {\n    newData2 = *(undefined4 *)(data2 + 0x18);\n    newData1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(data1 + 0x18),\n                         *(undefined4 *)(data1 + 0x20));\n    result = FUN_08009228(newData2,newData1);\n    if (result == 0) {\n      newData1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(data1 + 0x18),\n                           *(undefined4 *)(data1 + 0x20));\n    }\n    else {\n      newData1 = *(undefined4 *)(data2 + 0x18);\n    }\n    result = FUN_08009214(newData1,*(undefined4 *)(data2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(data2 + 0x18) = newData1;\n      *(undefined *)(data2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "update_data_08002afc",
                "param_1": "data1",
                "param_2": "data2",
                "iVar1": "result",
                "uVar2": "newData1",
                "uVar3": "newData2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "initialize_data_08002ba8",
            "code": "\nvoid initializeData_08002ba8(void)\n\n{\n  uint intValue;\n  undefined *previousDataPtr;\n  undefined *previousDataPtr;\n  undefined *previousData;\n  undefined *currentData;\n  byte byteValue;\n  \n  previousData = (undefined *)0x0;\n  currentData = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  previousDataPtr = (undefined *)0x0;\n  while (previousDataPtr = previousData, byteValue != DAT_20000cf0) {\n    previousData = currentData;\n    intValue = (uint)byteValue;\n    FUN_08002afc(previousDataPtr,currentData,&DAT_20000870 + intValue * 0x40);\n    byteValue = FUN_08002870(byteValue);\n    previousDataPtr = previousDataPtr;\n    currentData = &DAT_20000870 + intValue * 0x40;\n  }\n  FUN_08002afc(previousData,currentData,0,previousData,previousDataPtr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "initialize_data_08002ba8",
                "local_14": "previousData",
                "local_10": "currentData",
                "local_9": "byteValue",
                "puVar3": "previousDataPtr",
                "puVar2": "previousDataPtr",
                "uVar1": "intValue"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_metrics_08002c18",
            "code": "\nvoid calculate_metrics_08002c18(int data,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 result_1;\n  int result_2;\n  undefined4 result_3;\n  undefined4 result_4;\n  undefined4 result_5;\n  uint result_6;\n  undefined8 result_7;\n  int difference;\n  uint minimum;\n  \n  result_1 = FUN_08008e3c(*(undefined4 *)(data + 0x3c));\n  result_1 = FUN_08008eec(result_1,param_2);\n  result_7 = FUN_08008590(result_1);\n  result_7 = FUN_08009318((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  result_1 = FUN_08008bf0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  *(undefined4 *)(data + 0x28) = result_1;\n  result_1 = FUN_08008e3c(*(undefined4 *)(data + 0x3c));\n  result_1 = FUN_08008eec(result_1,param_3);\n  result_7 = FUN_08008590(result_1);\n  result_7 = FUN_08009318((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  result_1 = FUN_08008bf0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  *(undefined4 *)(data + 0x2c) = result_1;\n  result_7 = FUN_0800856c(*(int *)(data + 0x30) * 0x32);\n  result_7 = FUN_08008640((int)result_7,(int)((ulonglong)result_7 >> 0x20),0,0x404e0000);\n  result_2 = FUN_08008ba0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  result_1 = FUN_08008e3c(*(undefined4 *)(data + 0x28));\n  result_3 = FUN_08008e3c(*(undefined4 *)(data + 0x3c));\n  result_4 = FUN_08008e44(result_2);\n  result_1 = FUN_080028bc(result_1,result_3,result_4);\n  result_7 = FUN_08008590(result_1);\n  result_7 = FUN_08009318((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  minimum = FUN_08008ba0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  result_1 = FUN_08008e3c(*(undefined4 *)(data + 0x3c));\n  result_3 = FUN_08008e3c(*(undefined4 *)(data + 0x2c));\n  result_4 = FUN_08008e44(-result_2);\n  result_1 = FUN_080028bc(result_1,result_3,result_4);\n  result_7 = FUN_08008590(result_1);\n  result_7 = FUN_080094c0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  difference = FUN_08008ba0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n  difference = (*(int *)(data + 0x10) - minimum) - difference;\n  if (difference < 0) {\n    result_1 = FUN_08008e3c(*(undefined4 *)(data + 0x28));\n    result_3 = FUN_08008e3c(*(undefined4 *)(data + 0x2c));\n    result_4 = FUN_08008e44(result_2);\n    result_5 = FUN_08008e44(*(undefined4 *)(data + 0x10));\n    result_1 = FUN_08002908(result_1,result_3,result_4,result_5);\n    result_7 = FUN_08008590(result_1);\n    result_7 = FUN_08009318((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n    result_6 = FUN_08008ba0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n    result_6 = result_6 & ~((int)result_6 >> 0x1f);\n    minimum = *(uint *)(data + 0x10);\n    if ((int)result_6 <= (int)*(uint *)(data + 0x10)) {\n      minimum = result_6;\n    }\n    difference = 0;\n  }\n  *(uint *)(data + 0x34) = minimum;\n  *(uint *)(data + 0x38) = difference + minimum;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_metrics_08002c18",
                "param_1": "data",
                "uVar1": "result_1",
                "iVar2": "result_2",
                "uVar3": "result_3",
                "uVar4": "result_4",
                "uVar5": "result_5",
                "uVar6": "result_6",
                "uVar7": "result_7",
                "local_20": "difference",
                "local_1c": "minimum"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *currentData;\n  byte currentByte;\n  \n  currentData = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  while (currentByte != DAT_20000cf0) {\n    index = (uint)currentByte * 0x40;\n    if ((currentData != (undefined *)0x0) &&\n       ((currentData[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(currentData + 0x18),*(undefined4 *)(currentData + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(currentData + 0x14));\n      FUN_08002c18(currentData,result1,result2);\n      currentData[0x24] = 0;\n    }\n    currentByte = FUN_08002870(currentByte);\n    currentData = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(currentData + 0x18),*(undefined4 *)(currentData + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(currentData + 0x14));\n  FUN_08002c18(currentData,result1,result2);\n  currentData[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "index",
                "local_18": "currentData",
                "local_11": "currentByte"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_application_08002edc",
            "code": "\nvoid initialize_application_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_application_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "FUNC_08002f24",
            "code": "\nvoid FUNC_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "FUNC_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_if_different_08002f40",
            "code": "\nvoid update_if_different_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_if_different_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_memory_address_08002f74",
            "code": "\nundefined * getMemoryAddress_08002f74(void)\n\n{\n  undefined *result;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    result = (undefined *)0x0;\n  }\n  else {\n    result = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_memory_address_08002f74",
                "puVar1": "result"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_equal_08002fac",
            "code": "\nbool areEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "iterate_until_condition_08002fd4",
            "code": "\nvoid iterateUntilCondition_08002fd4(void)\n\n{\n  int returnValue;\n  \n  while ((returnValue = FUN_08002f74(), returnValue != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "iterate_until_condition_08002fd4",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_metrics_08003004",
            "code": "\nvoid calculateMetrics_08003004(undefined4 param_a,undefined4 param_b,undefined4 param_c,undefined4 param_d,\n                 char isZero)\n\n{\n  undefined4 result1;\n  int metric_a;\n  int metric_b;\n  int metric_c;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint minMetric;\n  int index;\n  ushort *pointer;\n  int temp;\n  uint maxMetric;\n  undefined8 result6;\n  undefined8 result7;\n  undefined8 result8;\n  undefined4 localMetric1;\n  undefined4 localMetric2;\n  \n  index = (uint)DAT_20000cf0 * 0x40;\n  pointer = (ushort *)(&DAT_20000870 + index);\n  result1 = FUN_08008eec(DAT_20000ebc,param_a);\n  result6 = FUN_08008590(result1);\n  metric_a = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,param_b);\n  result6 = FUN_08008590(result1);\n  metric_b = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,param_c);\n  result6 = FUN_08008590(result1);\n  metric_c = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  *pointer = 0;\n  if (metric_a < DAT_20000cf4) {\n    *pointer = *pointer | 0x20;\n  }\n  if (metric_b < DAT_20000cf8) {\n    *pointer = *pointer | 0x880;\n  }\n  if (metric_c < DAT_20000cfc) {\n    *pointer = *pointer | 0x200;\n  }\n  temp = metric_a - DAT_20000cf4;\n  if (temp < 0) {\n    temp = -temp;\n  }\n  *(int *)(&DAT_20000874 + index) = temp;\n  temp = metric_b - DAT_20000cf8;\n  if (temp < 0) {\n    temp = -temp;\n  }\n  *(int *)(&DAT_20000878 + index) = temp;\n  temp = metric_c - DAT_20000cfc;\n  if (temp < 0) {\n    temp = -temp;\n  }\n  *(int *)(&DAT_2000087c + index) = temp;\n  minMetric = *(uint *)(&DAT_2000087c + index);\n  if (*(uint *)(&DAT_2000087c + index) < *(uint *)(&DAT_20000878 + index)) {\n    minMetric = *(uint *)(&DAT_20000878 + index);\n  }\n  maxMetric = *(uint *)(&DAT_20000874 + index);\n  if (*(uint *)(&DAT_20000874 + index) < minMetric) {\n    maxMetric = minMetric;\n  }\n  *(uint *)(&DAT_20000880 + index) = maxMetric;\n  if (*(int *)(&DAT_20000880 + index) != 0) {\n    result1 = FUN_08008e44(metric_a - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result2 = FUN_08008e44(metric_b - DAT_20000cf8);\n    result2 = FUN_08009054(result2,DAT_20000ec0);\n    result3 = FUN_08008e44(metric_c - DAT_20000cfc);\n    result3 = FUN_08009054(result3,DAT_20000ec4);\n    result4 = FUN_08008eec(result1,result1);\n    result5 = FUN_08008eec(result2,result2);\n    result4 = FUN_08008cdc(result4,result5);\n    result5 = FUN_08008eec(result3,result3);\n    result4 = FUN_08008cdc(result4,result5);\n    result6 = FUN_08008590(result4);\n    result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result4 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + index) = result4;\n    result4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + index));\n    if (isZero == '\\0') {\n      localMetric2 = FUN_08008eec(param_d,result4);\n    }\n    else {\n      localMetric2 = FUN_08009054(0x3f800000,param_d);\n    }\n    result5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + index),localMetric2);\n    *(undefined4 *)(&DAT_20000884 + index) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result5 = FUN_08008eec(result5,localMetric2);\n    result6 = FUN_08008590(result5);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_08008bf0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + index) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result5 = FUN_08008eec(result5,result4);\n    result5 = FUN_08008eec(result5,DAT_20000edc);\n    result5 = FUN_08009054(result5,0x453b8000);\n    result6 = FUN_08008590(result5);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_08008ba0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + index) = result5;\n    minMetric = FUN_08008eec(result1,result4);\n    result1 = FUN_08008eec(result2,result4);\n    result2 = FUN_08008eec(result3,result4);\n    localMetric1 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (temp = FUN_08009264(DAT_20000d0c,0), temp != 0)) {\n      result3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,minMetric);\n      result4 = FUN_08008eec(DAT_20000d04,result1);\n      result3 = FUN_08008cd8(result3,result4);\n      result4 = FUN_08008eec(DAT_20000d08,result2);\n      result3 = FUN_08008cd8(result3,result4);\n      result6 = FUN_08008590(result3);\n      temp = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0x3fee6666);\n      if (temp != 0) {\n        temp = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + index));\n        localMetric1 = DAT_20000d0c;\n        if (temp == 0) {\n          localMetric1 = *(undefined4 *)(&DAT_20000884 + index);\n        }\n        result6 = FUN_08008590(result3);\n        temp = FUN_08008b60((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0xbfee6666);\n        if (temp != 0) {\n          result6 = FUN_08008590(result3);\n          result6 = FUN_080082d0(0,0x3ff00000,(int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x3fe00000);\n          result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result3 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008590(localMetric1);\n          result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result4 = FUN_08008eec(result4,result3);\n          result7 = FUN_08008590(result4);\n          result8 = FUN_08008590(result3);\n          result8 = FUN_080082d0(0,0x3ff00000,(int)result8,(int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_08008894((int)result7,(int)((ulonglong)result7 >> 0x20),(int)result8,\n                                (int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_080098d0((int)result7,(int)((ulonglong)result7 >> 0x20));\n          temp = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                (int)((ulonglong)result7 >> 0x20));\n          if (temp == 0) {\n            result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result4 = FUN_08008eec(result4,result3);\n            result6 = FUN_08008590(result4);\n            result7 = FUN_08008590(result3);\n            result7 = FUN_080082d0(0,0x3ff00000,(int)result7,(int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                  (int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n            localMetric1 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + index) = localMetric1;\n    result4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + index));\n    temp = FUN_08009228(localMetric1,result4);\n    result3 = result4;\n    if (temp != 0) {\n      result3 = localMetric1;\n    }\n    *(undefined4 *)(&DAT_20000888 + index) = result3;\n    temp = FUN_08009250(result4,*(undefined4 *)(&DAT_20000884 + index));\n    if (temp == 0) {\n      (&DAT_20000895)[index] = 0;\n    }\n    else {\n      (&DAT_20000895)[index] = 1;\n    }\n    (&DAT_20000894)[index] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + index);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = minMetric;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = metric_a;\n    DAT_20000cf8 = metric_b;\n    DAT_20000cfc = metric_c;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_metrics_08003004",
                "param_1": "param_a",
                "param_2": "param_b",
                "param_3": "param_c",
                "param_4": "param_d",
                "param_5": "isZero",
                "uVar1": "result1",
                "iVar2": "metric_a",
                "iVar3": "metric_b",
                "iVar4": "metric_c",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "result4",
                "uVar8": "result5",
                "uVar9": "minMetric",
                "iVar10": "index",
                "puVar11": "pointer",
                "iVar12": "temp",
                "uVar13": "maxMetric",
                "uVar14": "result6",
                "uVar15": "result7",
                "uVar16": "result8",
                "local_20": "localMetric1",
                "local_1c": "localMetric2"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_data_080035ec",
            "code": "\nvoid initializeData_080035ec(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  DAT_20000cf4 = input1;\n  DAT_20000cf8 = input2;\n  DAT_20000cfc = input3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_data_080035ec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 newValue)\n\n{\n  undefined4 result1;\n  int index;\n  undefined4 data;\n  \n  index = (uint)DAT_20000cf1 * 0x40;\n  data = *(undefined4 *)(&DAT_20000890 + index);\n  result1 = FUN_08008e44(newValue);\n  result1 = FUN_08008eec(data,result1);\n  data = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n  result1 = FUN_08009054(result1,data);\n  *(undefined4 *)(&DAT_20000890 + index) = result1;\n  *(undefined4 *)(&DAT_20000880 + index) = newValue;\n  *(undefined4 *)(&DAT_20000888 + index) = 0;\n  *(undefined4 *)(&DAT_2000088c + index) = 0;\n  (&DAT_20000895)[index] = 0;\n  (&DAT_20000894)[index] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "newValue",
                "uVar1": "result1",
                "iVar2": "index",
                "uVar3": "data"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "iterate_over_string_0800369c",
            "code": "\nvoid iterateOverString_0800369c(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "iterate_over_string_0800369c",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_characters_080036c6",
            "code": "\nvoid print_characters_080036c6(char *string)\n\n{\n  char *current_char;\n  \n  current_char = string;\n  while (*current_char != '\\0') {\n    FUN_08008250(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_characters_080036c6",
                "param_1": "string",
                "local_c": "current_char"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_representation_080036f0",
            "code": "\nvoid print_binary_representation_080036f0(uint number,int bits)\n\n{\n  undefined4 uVar1;\n  int bit_index;\n  uint mask;\n  \n  mask = 1 << (bits - 1U & 0xff);\n  for (bit_index = 0; bit_index < bits; bit_index = bit_index + 1) {\n    if ((mask & number) == 0) {\n      uVar1 = 0x30;\n    }\n    else {\n      uVar1 = 0x31;\n    }\n    FUN_08008250(uVar1);\n    mask = mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "bits",
                "local_10": "bit_index",
                "local_c": "mask"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_data_08003740",
            "code": "\nvoid initializeData_08003740(undefined dataPointer)\n\n{\n  FUN_080036f0(dataPointer,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_data_08003740",
                "param_1": "dataPointer"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_memory_0800375c",
            "code": "\nvoid initialize_memory_0800375c(undefined2 memory_start_address)\n\n{\n  FUN_080036f0(memory_start_address,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_memory_0800375c",
                "param_1": "memory_start_address"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_number_08003778",
            "code": "\nvoid printNumber_08003778(uint number)\n\n{\n  uint temp;\n  uint numCopy;\n  char digits [12];\n  byte digitCount;\n  \n  digitCount = 0;\n  numCopy = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; numCopy != 0; numCopy = numCopy / 10) {\n      temp = (uint)digitCount;\n      digitCount = digitCount + 1;\n      digits[temp + 1] = (char)(numCopy % 10) + '0';\n    }\n    for (; digitCount != 0; digitCount = digitCount - 1) {\n      FUN_08008250(digits[digitCount]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_number_08003778",
                "param_1": "number",
                "uVar1": "temp",
                "local_1c": "numCopy",
                "acStack_15": "digits",
                "local_9": "digitCount"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int number)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = number;\n  if (number < 0) {\n    FUN_08008250(0x2d);\n    absoluteValue = -number;\n  }\n  FUN_08003778(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "number",
                "local_c": "absoluteValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "format_number_and_print_08003826",
            "code": "\nvoid formatNumberAndPrint_08003826(uint inputNumber)\n\n{\n  int result;\n  undefined4 formattedNumber;\n  byte digit;\n  uint temp;\n  uint number;\n  char outputBuffer [13];\n  uint divResult;\n  byte index;\n  byte loopCounter;\n  \n  result = FUN_08009228(inputNumber,0);\n  number = inputNumber;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    number = inputNumber ^ 0x80000000;\n  }\n  for (loopCounter = DAT_20000ef9; 1 < loopCounter; loopCounter = loopCounter - 2) {\n    number = FUN_08008eec(number,0x42c80000);\n  }\n  if (loopCounter != 0) {\n    number = FUN_08008eec(number,0x41200000);\n  }\n  formattedNumber = FUN_08008cdc(number,0x3f000000);\n  index = 0;\n  divResult = FUN_08009278(formattedNumber);\n  outputBuffer[DAT_20000ef9 + 1] = '.';\n  for (; divResult != 0; divResult = divResult / 10) {\n    if (index == DAT_20000ef9) {\n      index = index + 1;\n    }\n    temp = (uint)index;\n    index = index + 1;\n    outputBuffer[temp + 1] = (char)(divResult % 10) + '0';\n  }\n  while (index < DAT_20000ef9) {\n    temp = (uint)index;\n    index = index + 1;\n    outputBuffer[temp + 1] = '0';\n  }\n  if (index == DAT_20000ef9) {\n    digit = index + 1;\n    index = index + 2;\n    outputBuffer[digit + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(outputBuffer[index]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "format_number_and_print_08003826",
                "param_1": "inputNumber",
                "iVar1": "result",
                "uVar2": "formattedNumber",
                "bVar3": "digit",
                "uVar4": "temp",
                "local_24": "number",
                "acStack_1d": "outputBuffer",
                "local_10": "divResult",
                "local_a": "index",
                "local_9": "loopCounter"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_system_080039a0",
            "code": "\nvoid initializeSystem_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_system_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_data_080039bc",
            "code": "\nvoid processData_080039bc(void)\n\n{\n  int returnValue;\n  undefined4 result;\n  byte loopIndex;\n  \n  for (loopIndex = 0; loopIndex < 2; loopIndex = loopIndex + 1) {\n    returnValue = FUN_08004d2c(loopIndex,&DAT_20000d10);\n    if (returnValue == 0) {\n      FUNC_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      result = FUNC_080005b4(&DAT_20000d10);\n      FUNC_08004030(result);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_data_080039bc",
                "iVar1": "returnValue",
                "uVar2": "result",
                "local_9": "loopIndex"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "process_param_08003a18",
            "code": "\nvoid processParam_08003a18(uint inputParam)\n\n{\n  if ((inputParam & 0x80) == 0) {\n    if ((inputParam & 0x40) == 0) {\n      if ((inputParam & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "process_param_08003a18",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "initialize_system_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid initializeSystem_08003a74(void)\n\n{\n  byte bVar1;\n  \n  bVar1 = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((bVar1 & 0x10) == 0) {\n      if ((bVar1 & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((bVar1 & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((bVar1 & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((bVar1 & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "initialize_system_08003a74"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_command_08003b98",
            "code": "\nuint processCommand_08003b98(char *command)\n\n{\n  byte firstChar;\n  int result;\n  undefined4 convertedValue;\n  uint returnValue;\n  undefined8 modifiedValue;\n  undefined4 secondIndex;\n  undefined4 secondValue;\n  byte firstIndex;\n  byte isSecondIndex;\n  \n  if (*command != '$') {\n    returnValue = FUN_080005b4(command);\n    return returnValue;\n  }\n  firstIndex = 1;\n  isSecondIndex = '\\0';\n  firstChar = command[1];\n  if (firstChar == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < firstChar) || (firstChar < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstChar) {\n  case 0x23:\n    firstIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    firstIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    firstIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    firstIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    firstIndex = 2;\n    if (command[2] == '\\0') {\n      for (isSecondIndex = 0; isSecondIndex < 2; isSecondIndex = isSecondIndex + 1) {\n        result = FUN_08004d2c(isSecondIndex,command);\n        if (result == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(isSecondIndex,command);\n        }\n      }\n      return 0;\n    }\n    isSecondIndex = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(command,&firstIndex,&secondValue);\n    if (result == 0) {\n      return 1;\n    }\n    firstChar = firstIndex + 1;\n    if (command[firstIndex] != '=') {\n      return 3;\n    }\n    firstIndex = firstChar;\n    if (isSecondIndex == '\\0') {\n      result = FUN_08002638(command,&firstIndex,&secondIndex);\n      if (result == 0) {\n        return 1;\n      }\n      if (command[firstIndex] == '\\0') {\n        convertedValue = FUN_08009278(secondValue);\n        returnValue = FUN_08004e30(convertedValue,secondIndex);\n        return returnValue;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)firstIndex - (uint)firstChar] = command[firstIndex];\n      returnValue = (uint)firstIndex;\n      firstIndex = firstIndex + 1;\n    } while (command[returnValue] != '\\0');\n    isSecondIndex = firstChar;\n    isSecondIndex = FUN_080005b4(command);\n    if (isSecondIndex != 0) {\n      return (uint)isSecondIndex;\n    }\n    modifiedValue = FUN_08008590(secondValue);\n    modifiedValue = FUN_08009798((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    isSecondIndex = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    FUN_08004bc0(isSecondIndex,command);\n    break;\n  case 0x58:\n    firstIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_command_08003b98",
                "param_1": "command",
                "bVar1": "firstChar",
                "iVar2": "result",
                "uVar3": "convertedValue",
                "uVar4": "returnValue",
                "uVar5": "modifiedValue",
                "local_14": "secondIndex",
                "local_10": "secondValue",
                "local_a": "firstIndex",
                "local_9": "isSecondIndex"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_input_08003f34",
            "code": "\nvoid process_input_08003f34(void)\n\n{\n  byte input_byte;\n  undefined4 result_code;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      input_byte = FUN_08008286();\n      if (input_byte == 0xff) {\n        return;\n      }\n      if ((input_byte == 10) || (input_byte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < input_byte) && (input_byte != 0x2f)) {\n          if (input_byte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUNC_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((input_byte < 0x61) || (0x7a < input_byte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = input_byte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = input_byte - 0x20;\n          }\n        }\n      }\n      else if (input_byte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUNC_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      result_code = FUN_08003b98(&DAT_20000d10);\n      FUNC_08004030(result_code);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "input_byte",
                "uVar2": "result_code",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "FUNC_08004030",
            "code": "\nvoid FUNC_08004030(char param_1)\n\n{\n  if (param_1 == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(param_1) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "FUNC_08004030"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char alarmType)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (alarmType == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (alarmType == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "alarmType"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_status_message_080041a0",
            "code": "\nvoid displayStatusMessage_080041a0(undefined status_code)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(status_code) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_status_message_080041a0",
                "param_1": "status_code"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_grbl_info_08004228",
            "code": "\nvoid printGrblInfo_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_grbl_info_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_grbl_menu_0800423c",
            "code": "\nvoid printGrblMenu_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_grbl_menu_0800423c"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_settings_08004250",
            "code": "\nvoid printSettings_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_settings_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 modifiedValue;\n  undefined8 processedValue;\n  undefined4 stackValues [3];\n  byte index;\n  byte count;\n  \n  count = 0;\n  while( true ) {\n    if (7 < count) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          processedValue = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          processedValue = FUN_08008640((int)processedValue,(int)((ulonglong)processedValue >> 0x20),0x57e16865,0x3fa42851);\n          modifiedValue = FUN_08008c30((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n          FUN_08003826(modifiedValue);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(count,stackValues);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(count) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(stackValues[index]);\n      }\n      else {\n        processedValue = FUN_08008590(stackValues[index]);\n        processedValue = FUN_08008640((int)processedValue,(int)((ulonglong)processedValue >> 0x20),0x57e16865,0x3fa42851);\n        modifiedValue = FUN_08008c30((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n        FUN_08003826(modifiedValue);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    count = count + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "modifiedValue",
                "uVar3": "processedValue",
                "auStack_18": "stackValues",
                "local_a": "index",
                "local_9": "count"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "initialize_configuration_080046d0",
            "code": "\nvoid initialize_configuration_080046d0(void)\n\n{\n  undefined4 result;\n  undefined8 hash;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    hash = FUN_08008590(DAT_20000e78);\n    hash = FUN_08008640((int)hash,(int)((ulonglong)hash >> 0x20),0x57e16865,0x3fa42851);\n    result = FUN_08008c30((int)hash,(int)((ulonglong)hash >> 0x20));\n    FUN_08003826(result);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "initialize_configuration_080046d0",
                "uVar1": "result",
                "uVar2": "hash"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_binary_08004900",
            "code": "\nvoid initializeBinary_08004900(undefined dataPointer,undefined4 value)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(dataPointer);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(value);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_binary_08004900",
                "param_1": "dataPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 result;\n  uint index;\n  undefined4 tempResult;\n  undefined8 calcResult1;\n  undefined8 calcResult2;\n  undefined4 statusArray [6];\n  byte arrayIndex;\n  \n  statusArray[3] = DAT_20000eac;\n  statusArray[4] = DAT_20000eb0;\n  statusArray[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (arrayIndex = 0; arrayIndex < 3; arrayIndex = arrayIndex + 1) {\n    result = FUN_08008e44(statusArray[arrayIndex + 3]);\n    index = (uint)arrayIndex;\n    result = FUN_08009054(result,(&DAT_20000ebc)[arrayIndex]);\n    statusArray[index] = result;\n    if ((DAT_20000ee4 & 1) != 0) {\n      calcResult1 = FUN_08008590(statusArray[arrayIndex]);\n      calcResult1 = FUN_08008640((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),0x57e16865,0x3fa42851);\n      index = (uint)arrayIndex;\n      result = FUN_08008c30((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n      statusArray[index] = result;\n    }\n    FUN_08003826(statusArray[arrayIndex]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (arrayIndex = 0; arrayIndex < 3; arrayIndex = arrayIndex + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      tempResult = statusArray[arrayIndex];\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (arrayIndex + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (arrayIndex + 10) * 4));\n      index = (uint)arrayIndex;\n      result = FUN_08008cd8(tempResult,result);\n      statusArray[index] = result;\n    }\n    else {\n      calcResult1 = FUN_08008590(statusArray[arrayIndex]);\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (arrayIndex + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (arrayIndex + 10) * 4));\n      calcResult2 = FUN_08008590(result);\n      calcResult2 = FUN_08008640((int)calcResult2,(int)((ulonglong)calcResult2 >> 0x20),0x57e16865,0x3fa42851);\n      calcResult1 = FUN_080082d0((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),(int)calcResult2,\n                           (int)((ulonglong)calcResult2 >> 0x20));\n      index = (uint)arrayIndex;\n      result = FUN_08008c30((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n      statusArray[index] = result;\n    }\n    FUN_08003826(statusArray[arrayIndex]);\n    if (arrayIndex < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "uVar1": "result",
                "uVar2": "index",
                "uVar3": "tempResult",
                "uVar4": "calcResult1",
                "uVar5": "calcResult2",
                "auStack_2c": "statusArray",
                "local_11": "arrayIndex"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_block_08004bc0",
            "code": "\nvoid initializeMemoryBlock_08004bc0(byte inputValue,undefined4 outputAddress)\n\n{\n  FUN_08000374((ushort)inputValue * 0x101 + 0x300,outputAddress,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_block_08004bc0",
                "param_1": "inputValue",
                "param_2": "outputAddress"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_offset_and_copy_08004bf4",
            "code": "\nvoid calculateOffsetAndCopy_08004bf4(byte inputByte,undefined4 dataAddress)\n\n{\n  FUN_08000374((unsignedShort)inputByte * 0xd + 0x200,dataAddress,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_copy_08004bf4",
                "param_1": "inputByte",
                "param_2": "dataAddress",
                "ushort": "unsignedShort"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_data_08004c2a",
            "code": "\nvoid initializeData_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_data_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char input)\n\n{\n  if (input != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "check_and_process_data_08004d2c",
            "code": "\nbool checkAndProcessData_08004d2c(byte inputByte,undefined *outputBuffer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(outputBuffer,(ushort)inputByte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *outputBuffer = 0;\n    FUN_08004bc0(inputByte,outputBuffer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "check_and_process_data_08004d2c",
                "param_1": "inputByte",
                "param_2": "outputBuffer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_process_data_08004d7c",
            "code": "\nbool check_and_process_data_08004d7c(byte input_byte,undefined4 data_ptr)\n\n{\n  int result;\n  \n  result = FUN_080003ec(data_ptr,(ushort)input_byte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(data_ptr,0,0xc);\n    FUN_08004bf4(input_byte,data_ptr);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_process_data_08004d7c",
                "param_1": "input_byte",
                "param_2": "data_ptr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "initialize_device_08004dd2",
            "code": "\nundefined4 initializeDevice_08004dd2(void)\n\n{\n  byte deviceStatus;\n  int result;\n  \n  deviceStatus = FUN_08000310(0);\n  if (deviceStatus == 5) {\n    result = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < deviceStatus) {\n      return 0;\n    }\n    result = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (result == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "initialize_device_08004dd2",
                "bVar1": "deviceStatus",
                "iVar2": "result"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_configuration_08004e30",
            "code": "\nundefined4 updateConfiguration_08004e30(int action,uint value)\n\n{\n  undefined4 result;\n  int returnValue;\n  undefined8 tempValue;\n  \n  switch(action) {\n  case 0:\n  case 1:\n  case 2:\n    returnValue = FUN_0800923c(value,0);\n    if (returnValue != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[action] = value;\n    break;\n  case 3:\n    returnValue = FUN_08009228(value,0x40400000);\n    if (returnValue != 0) {\n      return 9;\n    }\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = value;\n    break;\n  case 5:\n    DAT_20000ed0 = value;\n    break;\n  case 6:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 7:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(value,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = value & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = value;\n    break;\n  case 0xb:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xc:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xd:\n    returnValue = FUN_08009214(value,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    returnValue = FUN_08009214(value,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    returnValue = FUN_08009214(value,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    returnValue = FUN_08009214(value,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    returnValue = FUN_08009214(value,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = value;\n    break;\n  case 0x14:\n    DAT_20000eec = value;\n    break;\n  case 0x15:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = value;\n    break;\n  case 0x17:\n    tempValue = FUN_08008590(value);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_configuration_08004e30",
                "param_1": "action",
                "param_2": "value",
                "uVar1": "result",
                "iVar2": "returnValue",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int iVar1;\n  undefined buffer [15];\n  byte index;\n  \n  iVar1 = FUN_08004dd2();\n  if (iVar1 == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (index = 0; index < 8; index = index + 1) {\n    iVar1 = FUN_08004d7c(index,buffer);\n    if (iVar1 == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "auStack_18": "buffer",
                "local_9": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_program_08005250",
            "code": "\nvoid initialize_program_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_program_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "update_value_0800525c",
            "code": "\nvoid updateValue_0800525c(byte inputValue)\n\n{\n  if ((int)(char)inputValue != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (inputValue == 0) {\n      FUN_08005250();\n      DAT_20000e12 = inputValue;\n    }\n    else {\n      if ((char)inputValue < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = inputValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "update_value_0800525c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_value_080052ac",
            "code": "\n\n\nvoid updateDataValue_080052ac(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_value_080052ac",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_flag_in_register_080052dc",
            "code": "\n\n\nvoid updateFlagInRegister_080052dc(uint newFlagValue)\n\n{\n  _DAT_40021014 = newFlagValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_flag_in_register_080052dc",
                "param_1": "newFlagValue"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_division_factor_08005324",
            "code": "\nvoid calculateDivisionFactor_08005324(uint inputNumber)\n\n{\n  uint adjustedNumber;\n  \n  adjustedNumber = inputNumber;\n  if (inputNumber < 800) {\n    adjustedNumber = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedNumber;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_division_factor_08005324",
                "param_1": "inputNumber",
                "local_14": "adjustedNumber"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "update_counter_08005360",
            "code": "\nbool updateCounter_08005360(void)\n\n{\n  bool isExceeded;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isExceeded = 420000 < DAT_20000e2c;\n  if (isExceeded) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isExceeded;\n}\n\n",
            "renaming": {
                "FUN_08005360": "update_counter_08005360",
                "bVar1": "isExceeded"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_state_080053a0",
            "code": "\nvoid updateDataState_080053a0(void)\n\n{\n  int returnValue;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_state_080053a0",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "process_data_08005790",
            "code": "\nvoid processData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "process_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "execute_function_080057e4",
            "code": "\nvoid execute_function_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "execute_function_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_program_0800583c",
            "code": "\nvoid initializeProgram_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_program_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "process_state_machine_0800585c",
            "code": "\nvoid processStateMachine_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "process_state_machine_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_0800587c",
            "code": "\nvoid updateStatus_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "update_data_and_return_result_08005900",
            "code": "\nundefined4 updateDataAndReturnResult_08005900(byte byteValue)\n\n{\n  if (byteValue == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (byteValue < 0x7f) {\n    if (byteValue == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (byteValue < 0x40) {\n      if (byteValue == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (byteValue == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "update_data_and_return_result_08005900",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "FUNC_0800597c",
            "code": "\nvoid FUNC_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "FUNC_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "process_data_08005984",
            "code": "\nundefined4 processData_08005984(undefined4 inputData)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000e44 == 0) {\n    result = FUN_0800597c(1,inputData,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005984": "process_data_08005984",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_global_variable_value_08005a84",
            "code": "\nundefined4 getGlobalVariableValue_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_global_variable_value_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "wait_until_threshold_08005a98",
            "code": "\nvoid waitUntilThreshold_08005a98(int threshold)\n\n{\n  int initialValue;\n  uint returnValue;\n  \n  initialValue = FUN_08005a84();\n  do {\n    returnValue = FUN_08005a84();\n  } while (returnValue < (uint)(threshold + initialValue));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "wait_until_threshold_08005a98",
                "param_1": "threshold",
                "iVar1": "initialValue",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "store_byte_value_08005bdc",
            "code": "\nvoid storeByteValue_08005bdc(byte byteValue,uint intValue)\n\n{\n  if ((char)byteValue < '\\0') {\n    *(char *)((byteValue & 0xf) + 0xe000ed14) = (char)((intValue & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)byteValue + -0x1fff1c00) = (char)((intValue & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "store_byte_value_08005bdc",
                "param_1": "byteValue",
                "param_2": "intValue"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_set_value_08005c30",
            "code": "\n\n\nbool check_and_set_value_08005c30(int input_value)\n\n{\n  bool is_in_range;\n  \n  is_in_range = input_value - 1U < 0x1000000;\n  if (is_in_range) {\n    _DAT_e000e014 = input_value + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !is_in_range;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_set_value_08005c30",
                "param_1": "input_value",
                "bVar1": "is_in_range"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_function_08005cec",
            "code": "\n\n\nundefined4 checkFunction_08005cec(uint *flags)\n\n{\n  int counter;\n  uint randomValue;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flag1Val != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flag1Val,_DAT_40023800));\n      if (flag1Val == 1) {\n        counter = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          randomValue = FUN_08005a84();\n          if (counter + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        counter = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          randomValue = FUN_08005a84();\n          if (counter + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flag2Val != 1)) {\n        return 1;\n      }\n    }\n    else if (flag2Val == 0) {\n      _DAT_42470000 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flag2Mask << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flag3Val == 0) {\n      _DAT_42470e80 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      counter = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    counter = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      randomValue = FUN_08005a84();\n      if (counter + 100U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    counter = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      randomValue = FUN_08005a84();\n      if (counter + 5000U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flag4Val);\n    if (flag4Val == 1) {\n      counter = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      counter = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flag5Val != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flag5Val == 2) {\n      _DAT_42470060 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           val1 << 0x18 |\n           val2 | val3 << 6 | ((val4 >> 1) - 1) * 0x10000 | val5 |\n           0x20000000;\n      _DAT_42470060 = 1;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_function_08005cec",
                "param_1": "flags",
                "iVar1": "counter",
                "uVar2": "randomValue",
                "param_1[1]": "flag1Val",
                "param_1[3]": "flag2Val",
                "param_1[4]": "flag2Mask",
                "param_1[5]": "flag3Val",
                "param_1[2]": "flag4Val",
                "param_1[6]": "flag5Val",
                "param_1[0xb]": "val1",
                "param_1[8]": "val2",
                "param_1[9]": "val3",
                "param_1[10]": "val4",
                "param_1[7]": "val5"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "perform_operation_0800618c",
            "code": "\n\n\nundefined4 performOperation_0800618c(uint *inputArray,uint inputLength)\n\n{\n  int iterator;\n  uint randomValue;\n  uint thresholdValue;\n  undefined8 resultValue;\n  \n  if ((_DAT_40023c00 & 0xf) < inputLength) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)inputLength);\n    if (inputLength != (inputLength & 0xf)) {\n      return 1;\n    }\n    if ((*inputArray & 1) != 0) {\n      if (inputArray[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((inputArray[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = inputArray[1] | _DAT_40023808 & 0xfffffffc;\n      iterator = FUN_08005a84();\n      thresholdValue = iterator + 5000;\n      if (inputArray[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          randomValue = FUN_08005a84();\n          if (thresholdValue <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else if (inputArray[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          randomValue = FUN_08005a84();\n          if (thresholdValue <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          randomValue = FUN_08005a84();\n          if (thresholdValue <= randomValue) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*inputArray & 1) != 0) {\n      if (inputArray[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (inputArray[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = inputArray[1] | _DAT_40023808 & 0xfffffffc;\n      iterator = FUN_08005a84();\n      thresholdValue = iterator + 5000;\n      if (inputArray[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          randomValue = FUN_08005a84();\n          if (thresholdValue <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else if (inputArray[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          randomValue = FUN_08005a84();\n          if (thresholdValue <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          randomValue = FUN_08005a84();\n          if (thresholdValue <= randomValue) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)inputLength);\n    if (inputLength != (inputLength & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*inputArray & 2) != 0) {\n    _DAT_40023808 = inputArray[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*inputArray & 4) != 0) {\n    _DAT_40023808 = inputArray[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*inputArray & 8) != 0) {\n    _DAT_40023808 = inputArray[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  resultValue = FUN_08006628();\n  FUN_08005c30((uint)resultValue / 1000,(int)((ulonglong)resultValue >> 0x20),(uint)resultValue * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "perform_operation_0800618c",
                "param_1": "inputArray",
                "param_2": "inputLength",
                "iVar1": "iterator",
                "uVar2": "randomValue",
                "uVar3": "thresholdValue",
                "uVar4": "resultValue"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "update_configuration_0800640c",
            "code": "\n\n\nvoid updateConfiguration_0800640c(int configID,uint bitmaskA,uint bitmaskB)\n\n{\n  undefined4 configValueA;\n  undefined4 configValueB;\n  undefined4 configValueC;\n  undefined4 configValueD;\n  undefined4 configValueE;\n  \n  if (configID == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    configValueA = 0x100;\n    configValueB = 2;\n    configValueD = 3;\n    configValueC = 0;\n    configValueE = 0;\n    FUN_08006e88(0x40020000,&configValueA);\n    _DAT_40023808 = bitmaskB | bitmaskA | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    configValueA = 0x200;\n    configValueB = 2;\n    configValueD = 3;\n    configValueC = 0;\n    configValueE = 0;\n    FUN_08006e88(0x40020800,&configValueA);\n    _DAT_40023808 = bitmaskA | bitmaskB << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "update_configuration_0800640c",
                "param_1": "configID",
                "param_2": "bitmaskA",
                "param_3": "bitmaskB",
                "local_1c": "configValueA",
                "local_18": "configValueB",
                "local_14": "configValueC",
                "local_10": "configValueD",
                "local_c": "configValueE"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "get_clock_frequency_080064ec",
            "code": "\n\n\nuint getClockFrequency_080064ec(void)\n\n{\n  uint clockMode;\n  uint frequency;\n  \n  clockMode = _DAT_40023808 & 0xc;\n  if (clockMode == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return frequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockMode < 9) {\n    if (clockMode == 0) {\n      return 16000000;\n    }\n    if (clockMode == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "get_clock_frequency_080064ec",
                "uVar1": "clockMode",
                "local_c": "frequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_shifted_value_08006628",
            "code": "\n\n\nuint calculateShiftedValue_08006628(void)\n\n{\n  uint originalValue;\n  \n  originalValue = FUN_080064ec();\n  DAT_20000000 = originalValue >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return originalValue >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_shifted_value_08006628",
                "uVar1": "originalValue"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_shifted_value_08006680",
            "code": "\n\n\nuint getShiftedValue_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_shifted_value_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "shift_result_by_bit_value_080066cc",
            "code": "\n\n\nuint shiftResultByBitValue_080066cc(void)\n\n{\n  uint funcResult;\n  \n  funcResult = FUN_08006628();\n  return funcResult >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "shift_result_by_bit_value_080066cc",
                "uVar1": "funcResult"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "initialize_settings_08006950",
            "code": "\n\n\nvoid initializeSettings_08006950(uint inputValue)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (inputValue & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "initialize_settings_08006950",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_shifted_and_masked_value_08006998",
            "code": "\n\n\nuint getShiftedAndMaskedValue_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_shifted_and_masked_value_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_in_memory_080069b4",
            "code": "\nvoid setBitInMemory_080069b4(byte byteToSet)\n\n{\n  *(int *)(((uint)(int)(char)byteToSet >> 5) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "byteToSet"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_08006a18",
            "code": "\nbool checkBit_08006a18(byte inputByte)\n\n{\n  return (*(uint *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_08006a18",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_at_index_08006a58",
            "code": "\nvoid setBitAtIndex_08006a58(byte index)\n\n{\n  *(int *)((((uint)convertedIndex >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_at_index_08006a58",
                "param_1": "index",
                "(int)(char)param_1": "convertedIndex"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_at_position_08006a8c",
            "code": "\nvoid setBitAtPosition_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_at_position_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_08006ac0",
            "code": "\nbool checkBit_08006ac0(byte inputByte)\n\n{\n  return (*(uint *)((((uint)(int)(char)inputByte >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "update_memory_08006b00",
            "code": "\nvoid updateMemory_08006b00(byte byteValue,uint data)\n\n{\n  if ((character)byteValue < '\\0') {\n    *(character *)((byteValue & 0xf) + 0xe000ed14) = (character)((data & 0xff) << 4);\n  }\n  else {\n    *(character *)((character)byteValue + -0x1fff1c00) = (character)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "update_memory_08006b00",
                "param_1": "byteValue",
                "param_2": "data",
                "char": "character"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "get_nibble_08006b54",
            "code": "\nbyte getNibble_08006b54(byte input)\n\n{\n  byte result;\n  \n  if ((char)input < '\\0') {\n    result = *(byte *)((input & 0xf) + 0xe000ed14);\n  }\n  else {\n    result = *(byte *)((char)input + -0x1fff1c00);\n  }\n  return result >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "get_nibble_08006b54",
                "param_1": "input",
                "bVar1": "result"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "apply_bitwise_operations_08006ba0",
            "code": "\nuint applyBitwiseOperations_08006ba0(uint inputMask,uint inputData,uint outputData)\n\n{\n  uint shiftAmount;\n  \n  inputMask = inputMask & 7;\n  shiftAmount = 7 - inputMask;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (inputMask + 4 < 7) {\n    inputMask = 0;\n  }\n  else {\n    inputMask = inputMask - 3;\n  }\n  return outputData & (1 << (inputMask & 0xff)) - 1U |\n         ((1 << (shiftAmount & 0xff)) - 1U & inputData) << (inputMask & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "apply_bitwise_operations_08006ba0",
                "param_1": "inputMask",
                "param_2": "inputData",
                "param_3": "outputData",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extract_bits_08006c04(uint input_value,uint start_position,uint *extracted_bits,uint *remaining_bits)\n\n{\n  uint num_bits_to_extract;\n  \n  start_position = start_position & 7;\n  num_bits_to_extract = 7 - start_position;\n  if (3 < num_bits_to_extract) {\n    num_bits_to_extract = 4;\n  }\n  if (start_position + 4 < 7) {\n    start_position = 0;\n  }\n  else {\n    start_position = start_position - 3;\n  }\n  *extracted_bits = (1 << (num_bits_to_extract & 0xff)) - 1U & input_value >> (start_position & 0xff);\n  *remaining_bits = (1 << (start_position & 0xff)) - 1U & input_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input_value",
                "param_2": "start_position",
                "param_3": "extracted_bits",
                "param_4": "remaining_bits",
                "uVar1": "num_bits_to_extract"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "infinite_loop_08006c70",
            "code": "\nvoid infiniteLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "infinite_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_initialize_08006c9c",
            "code": "\n\n\nbool checkAndInitialize_08006c9c(int inputValue)\n\n{\n  bool isValid;\n  \n  isValid = inputValue - 1U < 0x1000000;\n  if (isValid) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_initialize_08006c9c",
                "param_1": "inputValue",
                "bVar1": "isValid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "call_other_function_08006ce0",
            "code": "\nvoid callOtherFunction_08006ce0(undefined4 input)\n\n{\n  FUN_08006950(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "call_other_function_08006ce0",
                "param_1": "input"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "process_data_08006cf6",
            "code": "\nvoid processData_08006cf6(char inputChar,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,param2,param3);\n  FUN_08006b00((int)inputChar,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "inputChar",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "initialize_parameter_08006d2e",
            "code": "\nvoid initializeParameter_08006d2e(char parameter)\n\n{\n  FUN_080069b4((int)parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "initialize_parameter_08006d2e",
                "param_1": "parameter"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "execute_param1_function_08006d4a",
            "code": "\nvoid executeParam1Function_08006d4a(char param)\n\n{\n  FUN_080069e4((int)param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "execute_param1_function_08006d4a",
                "param_1": "param"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_application_08006d66",
            "code": "\nvoid initialize_application_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_application_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "execute_function_08006d72",
            "code": "\nundefined4 executeFunction_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "execute_function_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "initialize_system_08006d8a",
            "code": "\nundefined4 initializeSystem_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "initialize_system_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "process_character_08006d98",
            "code": "\nvoid processCharacter_08006d98(char character,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 convertedCharacter;\n  \n  convertedCharacter = FUN_08006b54((int)character);\n  FUN_08006c04(convertedCharacter,param2,param3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "process_character_08006d98",
                "param_1": "character",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "convertedCharacter"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "initialize_data_08006dc4",
            "code": "\nvoid initialize_data_08006dc4(char data)\n\n{\n  FUN_08006a58((int)data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "initialize_data_08006dc4",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "decode_character_08006de0",
            "code": "\nundefined4 decodeCharacter_08006de0(char character)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006a18((int)character);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "decode_character_08006de0",
                "param_1": "character",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "initialize_data_08006dfe",
            "code": "\nvoid initializeData_08006dfe(char input)\n\n{\n  FUN_08006a8c((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "initialize_data_08006dfe",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "decode_character_08006e1a",
            "code": "\nundefined4 decodeCharacter_08006e1a(char character)\n\n{\n  undefined4 decodedCharacter;\n  \n  decodedCharacter = FUN_08006ac0((int)character);\n  return decodedCharacter;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "decode_character_08006e1a",
                "param_1": "character",
                "uVar1": "decodedCharacter"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_flags_08006e88",
            "code": "\n\n\nvoid updateFlags_08006e88(uint *baseAddress,uint *flagsToApply)\n\n{\n  uint bitMask;\n  uint flag;\n  int regionIndex;\n  uint bitPosition;\n  \n  for (bitPosition = 0; bitPosition < 0x10; bitPosition = bitPosition + 1) {\n    bitMask = 1 << (bitPosition & 0xff);\n    flag = *flagsToApply & bitMask;\n    if (flag == bitMask) {\n      if ((flagsToApply[1] == 2) || (flagsToApply[1] == 0x12)) {\n        bitMask = flagsToApply[4];\n        baseAddress[(bitPosition >> 3) + 8] = baseAddress[(bitPosition >> 3) + 8] & ~(0xf << ((bitPosition & 7) << 2));\n        baseAddress[(bitPosition >> 3) + 8] = baseAddress[(bitPosition >> 3) + 8] | bitMask << ((bitPosition & 7) << 2);\n      }\n      *baseAddress = *baseAddress & ~(3 << ((bitPosition & 0x7f) << 1));\n      *baseAddress = *baseAddress | (flagsToApply[1] & 3) << ((bitPosition & 0x7f) << 1);\n      if ((((flagsToApply[1] == 1) || (flagsToApply[1] == 2)) || (flagsToApply[1] == 0x11)) || (flagsToApply[1] == 0x12)\n         ) {\n        baseAddress[2] = baseAddress[2] & ~(3 << ((bitPosition & 0x7f) << 1));\n        baseAddress[2] = baseAddress[2] | flagsToApply[3] << ((bitPosition & 0x7f) << 1);\n        baseAddress[1] = baseAddress[1] & ~(1 << (bitPosition & 0xff));\n        baseAddress[1] = baseAddress[1] | (flagsToApply[1] >> 4 & 1) << (bitPosition & 0xff);\n      }\n      baseAddress[3] = baseAddress[3] & ~(3 << ((bitPosition & 0x7f) << 1));\n      baseAddress[3] = baseAddress[3] | flagsToApply[2] << ((bitPosition & 0x7f) << 1);\n      if ((flagsToApply[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((bitPosition & 3) << 2)) & *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40013800);\n        if (baseAddress == (uint *)0x40020000) {\n          regionIndex = 0;\n        }\n        else if (baseAddress == (uint *)0x40020400) {\n          regionIndex = 1;\n        }\n        else if (baseAddress == (uint *)0x40020800) {\n          regionIndex = 2;\n        }\n        else if (baseAddress == (uint *)0x40020c00) {\n          regionIndex = 3;\n        }\n        else if (baseAddress == (uint *)0x40021000) {\n          regionIndex = 4;\n        }\n        else if (baseAddress == (uint *)0x40021400) {\n          regionIndex = 5;\n        }\n        else if (baseAddress == (uint *)0x40021800) {\n          regionIndex = 6;\n        }\n        else if (baseAddress == (uint *)0x40021c00) {\n          regionIndex = 7;\n        }\n        else if (baseAddress == (uint *)0x40022000) {\n          regionIndex = 8;\n        }\n        else if (baseAddress == (uint *)0x40022400) {\n          regionIndex = 9;\n        }\n        else {\n          regionIndex = 10;\n        }\n        *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40013800) =\n             regionIndex << ((bitPosition & 3) << 2) | *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~flag & _DAT_40013c00;\n        _DAT_40013c04 = ~flag & _DAT_40013c04;\n        if ((flagsToApply[1] & 0x10000) != 0) {\n          _DAT_40013c00 = flag | _DAT_40013c00;\n        }\n        if ((flagsToApply[1] & 0x20000) != 0) {\n          _DAT_40013c04 = flag | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~flag & _DAT_40013c08;\n        _DAT_40013c0c = ~flag & _DAT_40013c0c;\n        if ((flagsToApply[1] & 0x100000) != 0) {\n          _DAT_40013c08 = flag | _DAT_40013c08;\n        }\n        if ((flagsToApply[1] & 0x200000) != 0) {\n          _DAT_40013c0c = flag | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_flags_08006e88",
                "param_1": "baseAddress",
                "param_2": "flagsToApply",
                "uVar1": "bitMask",
                "uVar2": "flag",
                "iVar3": "regionIndex",
                "local_c": "bitPosition"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_parameter_0800733e",
            "code": "\nvoid updateParameter_0800733e(int baseAddress,undefined2 newValue,char isSecondParameter)\n\n{\n  if (isSecondParameter == '\\0') {\n    *(undefined2 *)(baseAddress + 0x1a) = newValue;\n  }\n  else {\n    *(undefined2 *)(baseAddress + 0x18) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_parameter_0800733e",
                "param_1": "baseAddress",
                "param_2": "newValue",
                "param_3": "isSecondParameter"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_if_flag_set_0800738e",
            "code": "\n\n\nvoid updateIfFlagSet_0800738e(ushort inputFlag)\n\n{\n  if ((inputFlag & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)inputFlag;\n    FUNC_080073c0(inputFlag);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_if_flag_set_0800738e",
                "param_1": "inputFlag"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "update_bit_array_080073d4",
            "code": "\nvoid updateBitArray_080073d4(uint bitPosition)\n\n{\n  *(short *)(((int)bitPosition >> 4) * 0x400 + 0x4002001a) = (short)(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "update_bit_array_080073d4",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_in_memory_08007402",
            "code": "\nvoid setBitInMemory_08007402(uint value)\n\n{\n  *(short *)(((int)value >> 4) * 0x400 + 0x40020018) = (short)(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_in_memory_08007402",
                "param_1": "value"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int result;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 option1;\n  undefined4 option2;\n  undefined4 option3;\n  undefined4 option4;\n  undefined4 option5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  value2 = 0x400000;\n  value3 = 8;\n  value4 = 0x150;\n  value5 = 2;\n  value6 = 7;\n  result = FUN_08005cec(&flag1);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  option1 = 0xf;\n  option2 = 2;\n  option3 = 0;\n  option4 = 0x1400;\n  option5 = 0x1000;\n  result = FUN_0800618c(&option1,5);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "value1",
                "local_30": "value2",
                "local_2c": "value3",
                "local_28": "value4",
                "local_24": "value5",
                "local_20": "value6",
                "local_1c": "option1",
                "local_18": "option2",
                "local_14": "option3",
                "local_10": "option4",
                "local_c": "option5",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "handle_permission_checks_080074c8",
            "code": "\nvoid handlePermissionChecks_080074c8(uint permissions)\n\n{\n  if ((permissions & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((permissions & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((permissions & 0x80) != 0)) {\n    FUN_08003a18(permissions);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "handle_permission_checks_080074c8",
                "param_1": "permissions"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "handle_param_08007520",
            "code": "\nvoid handleParam_08007520(uint param)\n\n{\n  if ((param & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "handle_param_08007520",
                "param_1": "param"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_application_08007540",
            "code": "\nundefined4 initialize_application_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_application_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_memory_0800756c",
            "code": "\n\n\nvoid initializeMemory_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_memory_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_in_memory_080076c8",
            "code": "\nvoid updateBitInMemory_080076c8(uint address)\n\n{\n  *(uint *)(((int)address >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)address >> 4) * 0x400 + 0x40020014) ^ 1 << (address & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_in_memory_080076c8",
                "param_1": "address"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_perform_actions_08007756",
            "code": "\nvoid checkAndPerformActions_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_perform_actions_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_memory_0800778c",
            "code": "\n\n\nvoid initializeMemory_0800778c(void)\n\n{\n  int iVar1;\n  int bitMask;\n  undefined4 data1;\n  undefined4 data2;\n  undefined4 data3;\n  undefined4 data4;\n  uint *pointer;\n  uint loopCounter;\n  \n  for (loopCounter = 0; loopCounter < 0x11; loopCounter = loopCounter + 1) {\n    iVar1 = loopCounter * 0x18;\n    pointer = (uint *)(&DAT_0800bcbc + iVar1);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*pointer >> 4 & 0xff);\n    bitMask = 1 << (*pointer & 0xf);\n    data1 = *(undefined4 *)(&DAT_0800bcc0 + iVar1);\n    data2 = *(undefined4 *)(&DAT_0800bcc4 + iVar1);\n    data3 = *(undefined4 *)(&DAT_0800bcc8 + iVar1);\n    data4 = *(undefined4 *)(&DAT_0800bccc + iVar1);\n    FUN_08006e88(((*pointer >> 4) + 0x100080) * 0x400,&bitMask);\n    if (-1 < (int)pointer[5]) {\n      FUN_0800733e(((*pointer >> 4) + 0x100080) * 0x400,1 << (*pointer & 0xf) & 0xffff,\n                   pointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_memory_0800778c",
                "local_24": "bitMask",
                "local_20": "data1",
                "local_1c": "data2",
                "local_18": "data3",
                "local_14": "data4",
                "local_10": "pointer",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_08007854",
            "code": "\nuint checkBit_08007854(uint input)\n\n{\n  return *(uint *)(((int)input >> 4) * 0x400 + 0x40020010) >> (input & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_08007854",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "combine_flags_08007884",
            "code": "\nuint combineFlags_08007884(void)\n\n{\n  int flag1;\n  int flag2;\n  int flag3;\n  int flag4;\n  int flag5;\n  uint flag0;\n  \n  flag1 = FUN_08007854(0x36);\n  flag2 = FUN_08007854(0x37);\n  flag3 = FUN_08007854(0x38);\n  flag4 = FUN_08007854(0x39);\n  flag5 = FUN_08007854(0xf);\n  flag0 = FUN_08007854(0);\n  return flag0 | flag1 << 4 | flag2 << 3 | flag3 << 2 | flag4 << 1 | flag5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "combine_flags_08007884",
                "iVar1": "flag1",
                "iVar2": "flag2",
                "iVar3": "flag3",
                "iVar4": "flag4",
                "iVar5": "flag5",
                "uVar6": "flag0"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "calculate_bitwise_or_080078f4",
            "code": "\nuint calculateBitwiseOr_080078f4(void)\n\n{\n  int iterator;\n  uint result;\n  \n  result = 0;\n  for (iterator = 0; iterator < 4; iterator = iterator + 1) {\n    result = *(uint *)(&DAT_20000e54 + iterator * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "calculate_bitwise_or_080078f4",
                "local_10": "iterator",
                "local_c": "result"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "perform_data_manipulation_08007930",
            "code": "\nvoid performDataManipulation_08007930(void)\n\n{\n  int dataIndex;\n  uint previousValue;\n  undefined4 newValue;\n  uint currentValue;\n  uint changedBits;\n  \n  dataIndex = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + dataIndex * 4) = newValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    currentValue = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (currentValue != DAT_20000e64) {\n      changedBits = ~currentValue & DAT_20000e64;\n      if ((~DAT_20000e64 & currentValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & currentValue);\n      }\n      previousValue = currentValue;\n      if (changedBits != 0) {\n        FUN_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "perform_data_manipulation_08007930",
                "iVar1": "dataIndex",
                "uVar2": "previousValue",
                "uVar3": "newValue",
                "uVar4": "currentValue",
                "uVar5": "changedBits"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_at_index_080079e0",
            "code": "\nvoid setBitAtIndex_080079e0(byte byteToSet)\n\n{\n  *(int *)(((uint)(int)(char)byteToSet >> 5) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_at_index_080079e0",
                "param_1": "byteToSet"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_data_flag_08007a10",
            "code": "\n\n\nvoid updateDataFlag_08007a10(undefined *dataPointer)\n\n{\n  if (dataPointer == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (dataPointer == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (dataPointer == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_data_flag_08007a10",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "handle_param_08007a70",
            "code": "\nvoid handle_param_08007a70(undefined *param_ptr,undefined4 param2,undefined4 param3)\n\n{\n  undefined value;\n  \n  if (param_ptr == (undefined *)0x40000000) {\n    value = 0x1c;\n  }\n  else if (param_ptr == (undefined *)0x40000400) {\n    value = 0x1d;\n  }\n  else {\n    if (param_ptr != &DAT_40000800) {\n      return;\n    }\n    value = 0x1e;\n  }\n  FUN_08006cf6(value,param2,param3);\n  FUN_080079e0(value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "handle_param_08007a70",
                "param_1": "param_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "local_c": "value"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_flags_and_values_08007b70",
            "code": "\n\n\nvoid setFlagsAndValues_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_flags_and_values_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_variable_and_compare_08007bf0",
            "code": "\n\n\nvoid updateVariableAndCompare_08007bf0(uint newValue)\n\n{\n  _DAT_4000002c = newValue;\n  if (newValue <= _DAT_40000024) {\n    _DAT_40000024 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_variable_and_compare_08007bf0",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "set_global_data_08007c40",
            "code": "\n\n\nvoid set_global_data_08007c40(undefined4 data)\n\n{\n  _DAT_40000034 = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "set_global_data_08007c40",
                "param_1": "data"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_global_value_08007c5e",
            "code": "\n\n\nvoid setGlobalValue_08007c5e(undefined4 value)\n\n{\n  _DAT_40000038 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_global_value_08007c5e",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_config_08007c7c",
            "code": "\n\n\nvoid updateConfig_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_config_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_system_08007d08",
            "code": "\n\n\nvoid initializeSystem_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_system_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_08007da8",
            "code": "\n\n\nvoid setFlags_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "execute_setup_sequence_08007e08",
            "code": "\nvoid executeSetupSequence_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "execute_setup_sequence_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "write_byte_to_memory_08007e1c",
            "code": "\n\n\nvoid write_byte_to_memory_08007e1c(byte byte_to_write)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)byte_to_write;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "write_byte_to_memory_08007e1c",
                "param_1": "byte_to_write"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_if_bit_set_08007e58",
            "code": "\n\n\nbool checkIfBitSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_if_bit_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_memory_permissions_08007ea4",
            "code": "\n\n\nvoid updateMemoryPermissions_08007ea4(undefined *memoryAddress)\n\n{\n  if (memoryAddress == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (memoryAddress == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (memoryAddress == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (memoryAddress == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (memoryAddress == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (memoryAddress == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_memory_permissions_08007ea4",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_parameter_value_08007f54",
            "code": "\nvoid calculateParameterValue_08007f54(int baseAddress,int factor)\n\n{\n  ulonglong quotient;\n  int tempVar1;\n  int tempVar2;\n  undefined8 returnValue;\n  \n  if ((*(uint *)(baseAddress + 0xc) & 0x8000) == 0) {\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      returnValue = FUN_08006680();\n      quotient = (ulonglong)(uint)((int)returnValue * 0x19) / (ulonglong)(uint)(factor << 2);\n      tempVar1 = FUN_08006680((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)(quotient * 0x51eb851f));\n      tempVar2 = FUN_08006680();\n      *(uint *)(baseAddress + 8) =\n           (int)(quotient / 100) << 4 |\n           (((uint)(tempVar1 * 0x19) / (uint)(factor << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(factor << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    returnValue = FUN_080066cc();\n    quotient = (ulonglong)(uint)((int)returnValue * 0x19) / (ulonglong)(uint)(factor << 2);\n    tempVar1 = FUN_080066cc((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)(quotient * 0x51eb851f));\n    tempVar2 = FUN_080066cc();\n    *(uint *)(baseAddress + 8) =\n         (int)(quotient / 100) << 4 |\n         (((uint)(tempVar1 * 0x19) / (uint)(factor << 2) +\n          (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(factor << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      returnValue = FUN_08006680();\n      quotient = (ulonglong)(uint)((int)returnValue * 0x19) / (ulonglong)(uint)(factor << 1);\n      tempVar1 = FUN_08006680((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)(quotient * 0x51eb851f));\n      tempVar2 = FUN_08006680();\n      *(uint *)(baseAddress + 8) =\n           (int)(quotient / 100) << 4 |\n           (((uint)(tempVar1 * 0x19) / (uint)(factor << 1) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(factor << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    returnValue = FUN_080066cc();\n    quotient = (ulonglong)(uint)((int)returnValue * 0x19) / (ulonglong)(uint)(factor << 1);\n    tempVar1 = FUN_080066cc((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)(quotient * 0x51eb851f));\n    tempVar2 = FUN_080066cc();\n    *(uint *)(baseAddress + 8) =\n         (int)(quotient / 100) << 4 |\n         (((uint)(tempVar1 * 0x19) / (uint)(factor << 1) +\n          (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(factor << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_parameter_value_08007f54",
                "param_1": "baseAddress",
                "param_2": "factor",
                "uVar1": "quotient",
                "iVar2": "tempVar1",
                "iVar3": "tempVar2",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_08008250",
            "code": "\nvoid initialize_08008250(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_08008250",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "execute_function_0800826a",
            "code": "\nundefined4 execute_function_0800826a(undefined input_param)\n\n{\n  FUN_08007e1c(input_param);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "execute_function_0800826a",
                "param_1": "input_param"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_and_process_data_08008286",
            "code": "\nundefined check_and_process_data_08008286(void)\n\n{\n  undefined result;\n  int status;\n  \n  status = FUN_08007e58();\n  if (status != 0) {\n    result = FUN_08007e84();\n    status = FUN_08005900(result);\n    if (status == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_and_process_data_08008286",
                "uVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_shifted_sum_080082d0",
            "code": "\nulonglong calculate_shifted_sum_080082d0(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int shift_amount_1;\n  byte carry_bit;\n  uint sum_1;\n  uint temp1;\n  uint shifted_sum;\n  uint temp2;\n  uint temp3;\n  int shift_amount_2;\n  uint result_1;\n  uint temp4;\n  uint result_2;\n  uint temp5;\n  bool flag_1;\n  bool flag_2;\n  bool flag_3;\n  \n  temp2 = input_4 ^ 0x80000000;\n  result_1 = input_2 << 1;\n  input_4 = input_4 << 1;\n  flag_1 = ((input_2 ^ temp2) & 0x7fffffff) == 0;\n  flag_2 = flag_1 && input_1 == input_3;\n  if (!flag_1 || input_1 != input_3) {\n    flag_2 = (result_1 | input_1) == 0;\n  }\n  if (!flag_2) {\n    flag_2 = (input_4 | input_3) == 0;\n  }\n  shift_amount_2 = (int)result_1 >> 0x15;\n  if (!flag_2) {\n    flag_2 = shift_amount_2 == -1;\n  }\n  shift_amount_1 = (int)input_4 >> 0x15;\n  if (!flag_2) {\n    flag_2 = shift_amount_1 == -1;\n  }\n  if (flag_2) {\n    if (shift_amount_2 == -1 || shift_amount_1 == -1) {\n      result_1 = temp2;\n      result_2 = input_3;\n      if (shift_amount_2 == -1) {\n        result_1 = input_2;\n        result_2 = input_1;\n      }\n      if (shift_amount_2 != -1 || shift_amount_1 != -1) {\n        input_3 = result_2;\n        temp2 = result_1;\n      }\n      flag_2 = (result_2 | result_1 << 0xc) == 0;\n      if (flag_2) {\n        flag_2 = (input_3 | temp2 << 0xc) == 0;\n      }\n      if (flag_2) {\n        flag_2 = result_1 == temp2;\n      }\n      if (!flag_2) {\n        result_1 = result_1 | 0x80000;\n      }\n      return CONCAT44(result_1,result_2);\n    }\n    if (((input_2 ^ temp2) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((result_1 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = temp2;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != temp2) {\n      return 0;\n    }\n    if (result_1 >> 0x15 == 0) {\n      flag_2 = (input_1 & 0x80000000) != 0;\n      temp2 = input_2 * 2 + (uint)flag_2;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)flag_2)) {\n        temp2 = temp2 | 0x80000000;\n      }\n      return CONCAT44(temp2,input_1 << 1);\n    }\n    if (result_1 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  result_1 = result_1 >> 0x15;\n  input_4 = input_4 >> 0x15;\n  result_2 = input_4 - result_1;\n  flag_2 = result_2 != 0;\n  if (input_4 < result_1) {\n    result_2 = -result_2;\n  }\n  temp4 = input_1;\n  temp3 = input_2;\n  if (flag_2 && result_1 <= input_4) {\n    result_1 = result_1 + result_2;\n    temp4 = input_3;\n    temp3 = temp2;\n    input_3 = input_1;\n    temp2 = input_2;\n  }\n  if (0x36 < result_2) {\n    return CONCAT44(temp3,temp4);\n  }\n  temp1 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    flag_2 = temp4 != 0;\n    temp4 = -temp4;\n    temp1 = -temp1 - (uint)flag_2;\n  }\n  temp3 = temp2 & 0xfffff | 0x100000;\n  if ((temp2 & 0x80000000) != 0) {\n    flag_2 = input_3 != 0;\n    input_3 = -input_3;\n    temp3 = -temp3 - (uint)flag_2;\n  }\n  if (result_1 == result_2) {\n    temp3 = temp3 ^ 0x100000;\n    if (result_1 == 0) {\n      temp1 = temp1 ^ 0x100000;\n      result_1 = 1;\n    }\n    else {\n      result_2 = result_2 - 1;\n    }\n  }\n  temp2 = -result_2 + 0x20;\n  if ((int)result_2 < 0x21) {\n    temp5 = input_3 << (temp2 & 0xff);\n    input_3 = input_3 >> (result_2 & 0xff);\n    sum_1 = temp4 + input_3;\n    shifted_sum = temp3 << (temp2 & 0xff);\n    temp2 = sum_1 + shifted_sum;\n    temp1 = temp1 + CARRY4(temp4,input_3) + ((int)temp3 >> (result_2 & 0xff)) +\n            (uint)CARRY4(sum_1,shifted_sum);\n  }\n  else {\n    temp5 = temp3 << (-result_2 + 0x40 & 0xff);\n    if (input_3 != 0) {\n      temp5 = temp5 | 2;\n    }\n    temp3 = (int)temp3 >> (result_2 - 0x20 & 0xff);\n    temp2 = temp4 + temp3;\n    temp1 = temp1 + ((int)temp3 >> 0x1f) + (uint)CARRY4(temp4,temp3);\n  }\n  input_2 = temp1 & 0x80000000;\n  result_2 = temp1;\n  if ((int)temp1 < 0) {\n    flag_2 = temp5 == 0;\n    temp5 = -temp5;\n    result_2 = -temp2;\n    temp2 = -(uint)!flag_2 - temp2;\n    result_2 = -(uint)(flag_2 <= result_2) - temp1;\n  }\n  if (0xfffff < result_2) {\n    temp4 = result_1 - 1;\n    if (0x1fffff < result_2) {\n      temp4 = result_2 & 1;\n      result_2 = result_2 >> 1;\n      carry_bit = (byte)temp2;\n      temp2 = (uint)(temp4 != 0) << 0x1f | temp2 >> 1;\n      temp5 = (uint)(carry_bit & 1) << 0x1f | temp5 >> 1;\n      temp4 = result_1;\n      if (0xffbfffff < result_1 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    flag_2 = 0x7fffffff < temp5;\n    if (temp5 == 0x80000000) {\n      flag_2 = (temp2 & 1) != 0;\n    }\n    return CONCAT44(result_2 + temp4 * 0x100000 + (uint)CARRY4(temp2,(uint)flag_2) | input_2,\n                    temp2 + flag_2);\n  }\n  flag_1 = (temp5 & 0x80000000) != 0;\n  temp5 = temp5 << 1;\n  temp4 = temp2 * 2;\n  flag_2 = CARRY4(temp2,temp2);\n  temp2 = temp2 * 2 + (uint)flag_1;\n  result_2 = result_2 * 2 + (uint)(flag_2 || CARRY4(temp4,(uint)flag_1));\n  temp4 = result_1 - 2;\n  if (result_1 - 1 != 0 && 0xfffff < result_2) goto LAB_080083e0;\n  temp3 = temp2;\n  result_1 = result_2;\n  if (result_2 == 0) {\n    temp3 = 0;\n    result_1 = temp2;\n  }\n  shift_amount_2 = LZCOUNT(result_1);\n  if (result_2 == 0) {\n    shift_amount_2 = shift_amount_2 + 0x20;\n  }\n  result_2 = shift_amount_2 - 0xb;\n  flag_3 = SBORROW4(result_2,0x20);\n  temp2 = shift_amount_2 - 0x2b;\n  flag_2 = (int)temp2 < 0;\n  flag_1 = temp2 == 0;\n  if ((int)result_2 < 0x20) {\n    flag_3 = SCARRY4(temp2,0xc);\n    shift_amount_2 = shift_amount_2 + -0x1f;\n    flag_2 = shift_amount_2 < 0;\n    flag_1 = shift_amount_2 == 0;\n    temp2 = result_2;\n    if (!flag_1 && flag_2 == flag_3) {\n      temp3 = result_1 << (result_2 & 0xff);\n      result_1 = result_1 >> (0xcU - shift_amount_2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (flag_1 || flag_2 != flag_3) {\n    temp5 = 0x20 - temp2;\n  }\n  result_1 = result_1 << (temp2 & 0xff);\n  if (flag_1 || flag_2 != flag_3) {\n    result_1 = result_1 | temp3 >> (temp5 & 0xff);\n  }\n  if (flag_1 || flag_2 != flag_3) {\n    temp3 = temp3 << (temp2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result_2 <= (int)temp4) {\n    return CONCAT44(result_1 + (temp4 - result_2) * 0x100000 | input_2,temp3);\n  }\n  temp2 = ~(temp4 - result_2);\n  if ((int)temp2 < 0x1f) {\n    shift_amount_2 = temp2 - 0x13;\n    if (shift_amount_2 != 0 && shift_amount_2 < 0 == SCARRY4(temp2 - 0x1f,0xc)) {\n      return CONCAT44(temp1,temp3 >> (0x20 - (0xcU - shift_amount_2) & 0xff) | result_1 << (0xcU - shift_amount_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp2 = temp2 + 1;\n    return CONCAT44(input_2 | result_1 >> (temp2 & 0xff),\n                    temp3 >> (temp2 & 0xff) | result_1 << (0x20 - temp2 & 0xff));\n  }\n  return CONCAT44(temp1,result_1 >> (temp2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_shifted_sum_080082d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shift_amount_1",
                "bVar2": "carry_bit",
                "uVar3": "sum_1",
                "uVar4": "temp1",
                "uVar5": "shifted_sum",
                "uVar6": "temp2",
                "uVar7": "temp3",
                "iVar8": "shift_amount_2",
                "uVar9": "result_1",
                "uVar10": "temp4",
                "uVar11": "result_2",
                "uVar12": "temp5",
                "bVar13": "flag_1",
                "bVar14": "flag_2",
                "bVar15": "flag_3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "reverse_addition_080082d4",
            "code": "\nulonglong reverse_addition_080082d4(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int shifted_input_2;\n  byte carry_bit;\n  uint sum_1;\n  uint sum_2;\n  uint carry_1;\n  int shifted_input_4;\n  uint shifted_input_2_normalized;\n  uint shifted_input_4_normalized;\n  uint result_1;\n  uint result_2;\n  uint result_carry_bit;\n  uint result_1_normalized;\n  bool is_equal;\n  bool condition;\n  bool is_negative;\n  \n  shifted_input_2_normalized = input_2 << 1;\n  result_1 = input_4 << 1;\n  is_equal = ((input_2 ^ input_4) & 0x7fffffff) == 0;\n  condition = is_equal && input_1 == input_3;\n  if (!is_equal || input_1 != input_3) {\n    condition = (shifted_input_2_normalized | input_1) == 0;\n  }\n  if (!condition) {\n    condition = (result_1 | input_3) == 0;\n  }\n  shifted_input_4 = (int)shifted_input_2_normalized >> 0x15;\n  if (!condition) {\n    condition = shifted_input_4 == -1;\n  }\n  shifted_input_2 = (int)result_1 >> 0x15;\n  if (!condition) {\n    condition = shifted_input_2 == -1;\n  }\n  if (condition) {\n    if (shifted_input_4 == -1 || shifted_input_2 == -1) {\n      result_1 = input_4;\n      shifted_input_2_normalized = input_3;\n      if (shifted_input_4 == -1) {\n        result_1 = input_2;\n        shifted_input_2_normalized = input_1;\n      }\n      if (shifted_input_4 != -1 || shifted_input_2 != -1) {\n        input_3 = shifted_input_2_normalized;\n        input_4 = result_1;\n      }\n      condition = (shifted_input_2_normalized | result_1 << 0xc) == 0;\n      if (condition) {\n        condition = (input_3 | input_4 << 0xc) == 0;\n      }\n      if (condition) {\n        condition = result_1 == input_4;\n      }\n      if (!condition) {\n        result_1 = result_1 | 0x80000;\n      }\n      return CONCAT44(result_1,shifted_input_2_normalized);\n    }\n    if (((input_2 ^ input_4) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((shifted_input_2_normalized | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = input_4;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != input_4) {\n      return 0;\n    }\n    if (shifted_input_2_normalized >> 0x15 == 0) {\n      condition = (input_1 & 0x80000000) != 0;\n      result_1 = input_2 * 2 + (uint)condition;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)condition)) {\n        result_1 = result_1 | 0x80000000;\n      }\n      return CONCAT44(result_1,input_1 << 1);\n    }\n    if (shifted_input_2_normalized < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input_2_normalized = shifted_input_2_normalized >> 0x15;\n  result_1 = result_1 >> 0x15;\n  result_2 = result_1 - shifted_input_2_normalized;\n  condition = result_2 != 0;\n  if (result_1 < shifted_input_2_normalized) {\n    result_2 = -result_2;\n  }\n  shifted_input_4_normalized = input_1;\n  carry_1 = input_2;\n  if (condition && shifted_input_2_normalized <= result_1) {\n    shifted_input_2_normalized = shifted_input_2_normalized + result_2;\n    shifted_input_4_normalized = input_3;\n    carry_1 = input_4;\n    input_3 = input_1;\n    input_4 = input_2;\n  }\n  if (0x36 < result_2) {\n    return CONCAT44(carry_1,shifted_input_4_normalized);\n  }\n  result_1 = carry_1 & 0xfffff | 0x100000;\n  if ((carry_1 & 0x80000000) != 0) {\n    condition = shifted_input_4_normalized != 0;\n    shifted_input_4_normalized = -shifted_input_4_normalized;\n    result_1 = -result_1 - (uint)condition;\n  }\n  carry_1 = input_4 & 0xfffff | 0x100000;\n  if ((input_4 & 0x80000000) != 0) {\n    condition = input_3 != 0;\n    input_3 = -input_3;\n    carry_1 = -carry_1 - (uint)condition;\n  }\n  if (shifted_input_2_normalized == result_2) {\n    carry_1 = carry_1 ^ 0x100000;\n    if (shifted_input_2_normalized == 0) {\n      result_1 = result_1 ^ 0x100000;\n      shifted_input_2_normalized = 1;\n    }\n    else {\n      result_2 = result_2 - 1;\n    }\n  }\n  result_1_normalized = -result_2 + 0x20;\n  if ((int)result_2 < 0x21) {\n    result_carry_bit = input_3 << (result_1_normalized & 0xff);\n    input_3 = input_3 >> (result_2 & 0xff);\n    sum_1 = shifted_input_4_normalized + input_3;\n    sum_2 = carry_1 << (result_1_normalized & 0xff);\n    result_1_normalized = sum_1 + sum_2;\n    result_1 = result_1 + CARRY4(shifted_input_4_normalized,input_3) + ((int)carry_1 >> (result_2 & 0xff)) +\n            (uint)CARRY4(sum_1,sum_2);\n  }\n  else {\n    result_carry_bit = carry_1 << (-result_2 + 0x40 & 0xff);\n    if (input_3 != 0) {\n      result_carry_bit = result_carry_bit | 2;\n    }\n    carry_1 = (int)carry_1 >> (result_2 - 0x20 & 0xff);\n    result_1_normalized = shifted_input_4_normalized + carry_1;\n    result_1 = result_1 + ((int)carry_1 >> 0x1f) + (uint)CARRY4(shifted_input_4_normalized,carry_1);\n  }\n  input_2 = result_1 & 0x80000000;\n  result_2 = result_1;\n  if ((int)result_1 < 0) {\n    condition = result_carry_bit == 0;\n    result_carry_bit = -result_carry_bit;\n    result_2 = -result_1_normalized;\n    result_1_normalized = -(uint)!condition - result_1_normalized;\n    result_2 = -(uint)(condition <= result_2) - result_1;\n  }\n  if (0xfffff < result_2) {\n    shifted_input_4_normalized = shifted_input_2_normalized - 1;\n    if (0x1fffff < result_2) {\n      result_1 = result_2 & 1;\n      result_2 = result_2 >> 1;\n      carry_bit = (byte)result_1_normalized;\n      result_1_normalized = (uint)(result_1 != 0) << 0x1f | result_1_normalized >> 1;\n      result_carry_bit = (uint)(carry_bit & 1) << 0x1f | result_carry_bit >> 1;\n      shifted_input_4_normalized = shifted_input_2_normalized;\n      if (0xffbfffff < shifted_input_2_normalized * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition = 0x7fffffff < result_carry_bit;\n    if (result_carry_bit == 0x80000000) {\n      condition = (result_1_normalized & 1) != 0;\n    }\n    return CONCAT44(result_2 + shifted_input_4_normalized * 0x100000 + (uint)CARRY4(result_1_normalized,(uint)condition) | input_2,\n                    result_1_normalized + condition);\n  }\n  is_equal = (result_carry_bit & 0x80000000) != 0;\n  result_carry_bit = result_carry_bit << 1;\n  shifted_input_4_normalized = result_1_normalized * 2;\n  condition = CARRY4(result_1_normalized,result_1_normalized);\n  result_1_normalized = result_1_normalized * 2 + (uint)is_equal;\n  result_2 = result_2 * 2 + (uint)(condition || CARRY4(shifted_input_4_normalized,(uint)is_equal));\n  shifted_input_4_normalized = shifted_input_2_normalized - 2;\n  if (shifted_input_2_normalized - 1 != 0 && 0xfffff < result_2) goto LAB_080083e0;\n  carry_1 = result_1_normalized;\n  shifted_input_2_normalized = result_2;\n  if (result_2 == 0) {\n    carry_1 = 0;\n    shifted_input_2_normalized = result_1_normalized;\n  }\n  shifted_input_4 = LZCOUNT(shifted_input_2_normalized);\n  if (result_2 == 0) {\n    shifted_input_4 = shifted_input_4 + 0x20;\n  }\n  result_1_normalized = shifted_input_4 - 0xb;\n  is_negative = SBORROW4(result_1_normalized,0x20);\n  result_2 = shifted_input_4 - 0x2b;\n  condition = (int)result_2 < 0;\n  is_equal = result_2 == 0;\n  if ((int)result_1_normalized < 0x20) {\n    is_negative = SCARRY4(result_2,0xc);\n    shifted_input_4 = shifted_input_4 + -0x1f;\n    condition = shifted_input_4 < 0;\n    is_equal = shifted_input_4 == 0;\n    result_2 = result_1_normalized;\n    if (!is_equal && condition == is_negative) {\n      carry_1 = shifted_input_2_normalized << (result_1_normalized & 0xff);\n      shifted_input_2_normalized = shifted_input_2_normalized >> (0xcU - shifted_input_4 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_equal || condition != is_negative) {\n    result_carry_bit = 0x20 - result_2;\n  }\n  shifted_input_2_normalized = shifted_input_2_normalized << (result_2 & 0xff);\n  if (is_equal || condition != is_negative) {\n    shifted_input_2_normalized = shifted_input_2_normalized | carry_1 >> (result_carry_bit & 0xff);\n  }\n  if (is_equal || condition != is_negative) {\n    carry_1 = carry_1 << (result_2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result_1_normalized <= (int)shifted_input_4_normalized) {\n    return CONCAT44(shifted_input_2_normalized + (shifted_input_4_normalized - result_1_normalized) * 0x100000 | input_2,carry_1);\n  }\n  result_2 = ~(shifted_input_4_normalized - result_1_normalized);\n  if ((int)result_2 < 0x1f) {\n    shifted_input_4 = result_2 - 0x13;\n    if (shifted_input_4 != 0 && shifted_input_4 < 0 == SCARRY4(result_2 - 0x1f,0xc)) {\n      return CONCAT44(result_1,carry_1 >> (0x20 - (0xcU - shifted_input_4) & 0xff) | shifted_input_2_normalized << (0xcU - shifted_input_4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result_2 = result_2 + 1;\n    return CONCAT44(input_2 | shifted_input_2_normalized >> (result_2 & 0xff),\n                    carry_1 >> (result_2 & 0xff) | shifted_input_2_normalized << (0x20 - result_2 & 0xff));\n  }\n  return CONCAT44(result_1,shifted_input_2_normalized >> (result_2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "reverse_addition_080082d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shifted_input_2",
                "bVar2": "carry_bit",
                "uVar3": "sum_1",
                "uVar4": "sum_2",
                "uVar5": "carry_1",
                "iVar6": "shifted_input_4",
                "uVar7": "shifted_input_2_normalized",
                "uVar8": "shifted_input_4_normalized",
                "uVar9": "result_1",
                "uVar10": "result_2",
                "uVar11": "result_carry_bit",
                "uVar12": "result_1_normalized",
                "bVar13": "is_equal",
                "bVar14": "condition",
                "bVar15": "is_negative"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "shift_and_mask_bits_0800854c",
            "code": "\nulonglong shiftAndMaskBits_0800854c(uint inputValue)\n\n{\n  uint resultHigh;\n  uint shiftAmount1;\n  int bitCount;\n  uint shiftAmount2;\n  uint shiftAmount3;\n  bool isNegative;\n  bool isZero;\n  bool isBorrow;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  resultHigh = 0;\n  bitCount = LZCOUNT(inputValue);\n  shiftAmount2 = bitCount + 0x15;\n  isBorrow = SBORROW4(shiftAmount2,0x20);\n  shiftAmount1 = bitCount - 0xb;\n  isNegative = (int)shiftAmount1 < 0;\n  isZero = shiftAmount1 == 0;\n  if (shiftAmount2 < 0x20) {\n    isBorrow = SCARRY4(shiftAmount1,0xc);\n    isNegative = false;\n    isZero = bitCount + 1 == 0;\n    shiftAmount1 = shiftAmount2;\n    if (!isZero && isBorrow == false) {\n      resultHigh = inputValue << shiftAmount2;\n      inputValue = inputValue >> (0xcU - (bitCount + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != isBorrow) {\n    shiftAmount3 = 0x20 - shiftAmount1;\n  }\n  inputValue = inputValue << (shiftAmount1 & 0xff);\n  if (isZero || isNegative != isBorrow) {\n    inputValue = inputValue | 0U >> (shiftAmount3 & 0xff);\n  }\n  if (isZero || isNegative != isBorrow) {\n    resultHigh = 0 << (shiftAmount1 & 0xff);\n  }\nLAB_08008458:\n  if (shiftAmount2 < 0x433) {\n    return CONCAT44(inputValue + (0x432 - shiftAmount2) * 0x100000,resultHigh);\n  }\n  shiftAmount1 = ~(0x432 - shiftAmount2);\n  if (0x1e < (int)shiftAmount1) {\n    return (ulonglong)(inputValue >> (shiftAmount1 - 0x1f & 0xff));\n  }\n  bitCount = shiftAmount1 - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(shiftAmount1 - 0x1f,0xc)) {\n    shiftAmount1 = shiftAmount1 + 1;\n    return CONCAT44(inputValue >> (shiftAmount1 & 0xff),\n                    resultHigh >> (shiftAmount1 & 0xff) | inputValue << (0x20 - shiftAmount1 & 0xff));\n  }\n  return (ulonglong)(resultHigh >> (0x20 - (0xcU - bitCount) & 0xff) | inputValue << (0xcU - bitCount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "shift_and_mask_bits_0800854c",
                "param_1": "inputValue",
                "uVar1": "resultHigh",
                "uVar2": "shiftAmount1",
                "iVar3": "bitCount",
                "uVar4": "shiftAmount2",
                "in_r12": "shiftAmount3",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isBorrow"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "bitwise_shift_0800856c",
            "code": "\nulonglong bitwiseShift_0800856c(uint input)\n\n{\n  uint shiftAmount;\n  uint absInput;\n  uint shiftedValue;\n  int leadingZeros;\n  uint shiftedOffset;\n  uint signBit;\n  uint tempValue;\n  bool isShiftedOffsetPositive;\n  bool isShiftedOffsetZero;\n  bool isOverflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  shiftAmount = 0;\n  leadingZeros = LZCOUNT(absInput);\n  shiftedOffset = leadingZeros + 0x15;\n  isOverflow = SBORROW4(shiftedOffset,0x20);\n  shiftedValue = leadingZeros - 0xb;\n  isShiftedOffsetPositive = (int)shiftedValue < 0;\n  isShiftedOffsetZero = shiftedValue == 0;\n  if (shiftedOffset < 0x20) {\n    isOverflow = SCARRY4(shiftedValue,0xc);\n    isShiftedOffsetPositive = false;\n    isShiftedOffsetZero = leadingZeros + 1 == 0;\n    shiftedValue = shiftedOffset;\n    if (!isShiftedOffsetZero && isOverflow == false) {\n      shiftAmount = absInput << shiftedOffset;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isShiftedOffsetZero || isShiftedOffsetPositive != isOverflow) {\n    tempValue = 0x20 - shiftedValue;\n  }\n  absInput = absInput << (shiftedValue & 0xff);\n  if (isShiftedOffsetZero || isShiftedOffsetPositive != isOverflow) {\n    absInput = absInput | 0U >> (tempValue & 0xff);\n  }\n  if (isShiftedOffsetZero || isShiftedOffsetPositive != isOverflow) {\n    shiftAmount = 0 << (shiftedValue & 0xff);\n  }\nLAB_08008458:\n  if (shiftedOffset < 0x433) {\n    return CONCAT44(absInput + (0x432 - shiftedOffset) * 0x100000 | signBit,shiftAmount);\n  }\n  shiftedValue = ~(0x432 - shiftedOffset);\n  if (0x1e < (int)shiftedValue) {\n    return CONCAT44(input,absInput >> (shiftedValue - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftedValue - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftedValue - 0x1f,0xc)) {\n    shiftedValue = shiftedValue + 1;\n    return CONCAT44(signBit | absInput >> (shiftedValue & 0xff),\n                    shiftAmount >> (shiftedValue & 0xff) | absInput << (0x20 - shiftedValue & 0xff));\n  }\n  return CONCAT44(input,shiftAmount >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "bitwise_shift_0800856c",
                "param_1": "input",
                "uVar1": "shiftAmount",
                "uVar2": "absInput",
                "uVar3": "shiftedValue",
                "iVar4": "leadingZeros",
                "uVar5": "shiftedOffset",
                "uVar6": "signBit",
                "in_r12": "tempValue",
                "bVar7": "isShiftedOffsetPositive",
                "bVar8": "isShiftedOffsetZero",
                "bVar9": "isOverflow"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "reverse_bits_08008590",
            "code": "\nulonglong reverseBits_08008590(uint input,undefined4 var2,undefined4 var3,uint var4)\n\n{\n  uint shiftedFlag;\n  uint temp;\n  uint result;\n  uint shiftedInput;\n  uint shiftedTemp;\n  int count;\n  uint shiftAmount;\n  uint constant;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  shiftedTemp = input << 1;\n  isZero = shiftedTemp == 0;\n  shiftedFlag = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftedInput = (uint)((int)shiftedTemp >> 3) >> 1;\n  result = shiftedFlag | shiftedInput;\n  input = input << 0x1d;\n  if (!isZero) {\n    var4 = shiftedTemp & 0xff000000;\n    isZero = var4 == 0;\n  }\n  if (!isZero) {\n    isZero = var4 == 0xff000000;\n  }\n  if (!isZero) {\n    return CONCAT44(result,input) ^ 0x3800000000000000;\n  }\n  if ((shiftedTemp & 0xffffff) == 0) {\n    return CONCAT44(result,input);\n  }\n  if (var4 == 0xff000000) {\n    return CONCAT44(result,input) | 0x8000000000000;\n  }\n  temp = input;\n  shiftedTemp = shiftedInput;\n  if (shiftedInput == 0) {\n    temp = 0;\n    shiftedTemp = input;\n  }\n  count = LZCOUNT(shiftedTemp);\n  if (shiftedInput == 0) {\n    count = count + 0x20;\n  }\n  shiftAmount = count - 0xb;\n  isCarry = SBORROW4(shiftAmount,0x20);\n  shiftedInput = count - 0x2b;\n  isZero = (int)shiftedInput < 0;\n  isNegative = shiftedInput == 0;\n  if ((int)shiftAmount < 0x20) {\n    isCarry = SCARRY4(shiftedInput,0xc);\n    count = count + -0x1f;\n    isZero = count < 0;\n    isNegative = count == 0;\n    shiftedInput = shiftAmount;\n    if (!isNegative && isZero == isCarry) {\n      temp = shiftedTemp << (shiftAmount & 0xff);\n      shiftedTemp = shiftedTemp >> (0xcU - count & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isNegative || isZero != isCarry) {\n    constant = 0x20 - shiftedInput;\n  }\n  shiftedTemp = shiftedTemp << (shiftedInput & 0xff);\n  if (isNegative || isZero != isCarry) {\n    shiftedTemp = shiftedTemp | temp >> (constant & 0xff);\n  }\n  if (isNegative || isZero != isCarry) {\n    temp = temp << (shiftedInput & 0xff);\n  }\nLAB_08008458:\n  if ((int)shiftAmount < 0x381) {\n    return CONCAT44(shiftedTemp + (0x380 - shiftAmount) * 0x100000 | shiftedFlag,temp);\n  }\n  shiftedInput = ~(0x380 - shiftAmount);\n  if (0x1e < (int)shiftedInput) {\n    return CONCAT44(result,shiftedTemp >> (shiftedInput - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  count = shiftedInput - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shiftedInput - 0x1f,0xc)) {\n    shiftedInput = shiftedInput + 1;\n    return CONCAT44(shiftedFlag | shiftedTemp >> (shiftedInput & 0xff),\n                    temp >> (shiftedInput & 0xff) | shiftedTemp << (0x20 - shiftedInput & 0xff));\n  }\n  return CONCAT44(result,temp >> (0x20 - (0xcU - count) & 0xff) | shiftedTemp << (0xcU - count & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "reverse_bits_08008590",
                "param_1": "input",
                "param_2": "var2",
                "param_3": "var3",
                "param_4": "var4",
                "uVar1": "shiftedFlag",
                "uVar2": "temp",
                "uVar3": "result",
                "uVar4": "shiftedInput",
                "uVar5": "shiftedTemp",
                "iVar6": "count",
                "uVar7": "shiftAmount",
                "in_r12": "constant",
                "bVar8": "isNegative",
                "bVar9": "isZero",
                "bVar10": "isCarry"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_product_08008640",
            "code": "\nulonglong calculateProduct_08008640(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong temp;\n  uint uVar3;\n  uint uVar4;\n  int sum;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool isZero;\n  bool isNegative;\n  bool check;\n  ulonglong combinedInputs;\n  \n  combinedInputs = CONCAT44(input2,input1);\n  uVar7 = 0x7ff;\n  uVar4 = input2 >> 0x14 & 0x7ff;\n  isZero = uVar4 == 0;\n  if (!isZero) {\n    unaff_r5 = input4 >> 0x14 & 0x7ff;\n    isZero = unaff_r5 == 0;\n  }\n  if (!isZero) {\n    isZero = uVar4 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = unaff_r5 == 0x7ff;\n  }\n  if (isZero) {\n    combinedInputs = FUN_0800881c();\n  }\n  uVar3 = (uint)(combinedInputs >> 0x20);\n  sum = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ input4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  input4 = input4 & ~(uVar7 << 0x15);\n  isZero = ((uint)combinedInputs | uVar3 << 0xc) == 0;\n  if (!isZero) {\n    isZero = (input3 | input4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (isZero) {\n    input3 = (uint)combinedInputs | input3;\n    input4 = (uVar4 & 0x80000000 | uVar3) ^ input4;\n    uVar4 = uVar7 >> 1;\n    check = SBORROW4(sum,uVar4);\n    uVar6 = sum - uVar4;\n    isZero = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!isZero && (int)uVar4 <= sum) {\n      check = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      isZero = uVar7 == uVar6;\n    }\n    if (!isZero && (int)uVar3 < 0 == check) {\n      input4 = input4 | uVar6 * 0x100000;\n    }\n    if (!isZero && (int)uVar3 < 0 == check) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    uVar7 = 0;\n    check = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    isZero = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    result = (combinedInputs & 0xffffffff) * (ulonglong)input3;\n    combinedInputs = (combinedInputs & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)uVar3 * (ulonglong)input3 + (result >> 0x20);\n    uVar8 = (uint)combinedInputs;\n    temp = (ulonglong)uVar3 * (ulonglong)input4 + (combinedInputs >> 0x20);\n    uVar7 = (uint)temp;\n    uVar3 = (uint)((ulonglong)temp >> 0x20);\n    if ((int)result != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (sum + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      isZero = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      temp = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)isZero)),\n                       uVar7 * 2 + (uint)isZero);\n    }\n    input4 = uVar4 & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    input3 = (uint)temp << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    isNegative = 0xfc < uVar6;\n    check = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    isZero = uVar3 == 0;\n    uVar4 = uVar3;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < uVar3;\n      check = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      isZero = uVar3 == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        isZero = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + uVar6 * 0x100000 + (uint)CARRY4(input3,(uint)isZero),input3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)uVar4 < 0 == check) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(uVar6,0x36);\n  isZero = (int)(uVar6 + 0x36) < 0;\n  check = uVar6 == 0xffffffca;\n  if (check || isZero != isNegative) {\n    input3 = 0;\n  }\n  if (check || isZero != isNegative) {\n    input4 = input4 & 0x80000000;\n  }\n  if (check || isZero != isNegative) {\n    return CONCAT44(input4,input3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = input3 >> (uVar3 & 0xff) | input4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (input4 >> (uVar3 & 0xff) & ~((input4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | input3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(input4,uVar4) & 0x80000000ffffffff;\n  }\n  sum = uVar4 - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = input3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = input3 >> (uVar4 & 0xff) | input4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - sum;\n  uVar6 = input3 << (uVar4 & 0xff);\n  uVar4 = input3 >> (0x20 - uVar4 & 0xff) | input4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_product_08008640",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "lVar2": "temp",
                "iVar5": "sum",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "check",
                "uVar12": "combinedInputs"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800056c",
                "FUN_0800a348",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_shifted_value_0800881c",
            "code": "\nulonglong calculate_shifted_value_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  bool is_zero;\n  \n  temp_3 = temp_5 & input_4 >> 0x14;\n  if (temp_2 != temp_5 && temp_3 != temp_5) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (temp_2 == 0) {\n      temp_4 = input_2 & 0x80000000;\n      do {\n        temp_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_4;\n      if (temp_3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_4 = input_2;\n  if (((!is_zero) && ((temp_2 != temp_5 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp_3 != temp_5 || (input_1 = input_3, temp_4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_shifted_value_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "unaff_r4": "temp_2",
                "uVar2": "temp_3",
                "uVar3": "temp_4",
                "in_r12": "temp_5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 value1,uint value2,uint value3,uint value4)\n\n{\n  uint shiftedValue1;\n  uint shiftedValue2;\n  uint shiftedValue3;\n  uint shiftedValue4;\n  uint shiftedValue5;\n  uint shiftedValue6;\n  uint exponent1;\n  int diffExponent;\n  uint normalizedExponent;\n  uint exponent2;\n  uint normalizedOtherExponent;\n  uint mantissa1;\n  uint mantissaDiff;\n  uint mantissa2;\n  bool isZero1;\n  bool isZero2;\n  bool isOverflow;\n  undefined8 shiftedValue17;\n  \n  shiftedValue17 = CONCAT44(value2,value1);\n  mantissa2 = 0x7ff;\n  exponent1 = value2 >> 0x14 & 0x7ff;\n  isZero1 = exponent1 == 0;\n  if (!isZero1) {\n    exponent2 = value4 >> 0x14 & 0x7ff;\n    isZero1 = exponent2 == 0;\n  }\n  if (!isZero1) {\n    isZero1 = exponent1 == 0x7ff;\n  }\n  if (!isZero1) {\n    isZero1 = exponent2 == 0x7ff;\n  }\n  if (isZero1) {\n    shiftedValue17 = FUN_08008a02();\n  }\n  normalizedExponent = (uint)((ulonglong)shiftedValue17 >> 0x20);\n  mantissa1 = (uint)shiftedValue17;\n  diffExponent = exponent1 - exponent2;\n  if ((value3 | value4 << 0xc) == 0) {\n    exponent1 = (normalizedExponent ^ value4) & 0x80000000 | normalizedExponent & 0xfffff;\n    isOverflow = SCARRY4(diffExponent,mantissa2 >> 1);\n    normalizedExponent = diffExponent + (mantissa2 >> 1);\n    isZero1 = (int)normalizedExponent < 0;\n    isZero2 = normalizedExponent == 0;\n    if (!isZero2 && isZero1 == isOverflow) {\n      isOverflow = SBORROW4(mantissa2,normalizedExponent);\n      isZero1 = (int)(mantissa2 - normalizedExponent) < 0;\n      isZero2 = mantissa2 == normalizedExponent;\n    }\n    if (!isZero2 && isZero1 == isOverflow) {\n      exponent1 = exponent1 | normalizedExponent * 0x100000;\n    }\n    if (!isZero2 && isZero1 == isOverflow) {\n      return CONCAT44(exponent1,mantissa1);\n    }\n    exponent1 = exponent1 | 0x100000;\n    mantissa2 = 0;\n    isZero2 = SBORROW4(normalizedExponent,1);\n    normalizedExponent = normalizedExponent - 1;\n    isZero1 = normalizedExponent == 0;\n    shiftedValue3 = normalizedExponent;\n  }\n  else {\n    shiftedValue3 = (value4 << 0xc) >> 4 | 0x10000000 | value3 >> 0x18;\n    mantissa2 = value3 << 8;\n    normalizedOtherExponent = (normalizedExponent << 0xc) >> 4 | 0x10000000 | mantissa1 >> 0x18;\n    mantissa1 = mantissa1 * 0x100;\n    exponent1 = (normalizedExponent ^ value4) & 0x80000000;\n    isZero1 = shiftedValue3 <= normalizedOtherExponent;\n    if (normalizedOtherExponent == shiftedValue3) {\n      isZero1 = mantissa2 <= mantissa1;\n    }\n    diffExponent = diffExponent + (uint)isZero1;\n    normalizedExponent = diffExponent + 0x3fd;\n    if (isZero1 == false) {\n      shiftedValue3 = shiftedValue3 >> 1;\n      mantissa2 = (uint)((value3 >> 0x18 & 1) != 0) << 0x1f | mantissa2 >> 1;\n    }\n    mantissaDiff = mantissa1 - mantissa2;\n    normalizedOtherExponent = (normalizedOtherExponent - shiftedValue3) - (uint)(mantissa1 < mantissa2);\n    shiftedValue4 = shiftedValue3 >> 1;\n    shiftedValue1 = (uint)((shiftedValue3 & 1) != 0) << 0x1f | mantissa2 >> 1;\n    mantissa1 = 0x100000;\n    shiftedValue3 = 0x80000;\n    while( true ) {\n      isZero1 = shiftedValue1 <= mantissaDiff;\n      if (shiftedValue4 < normalizedOtherExponent || normalizedOtherExponent - shiftedValue4 < (uint)isZero1) {\n        mantissaDiff = mantissaDiff - shiftedValue1;\n        mantissa1 = mantissa1 | shiftedValue3;\n        normalizedOtherExponent = (normalizedOtherExponent - shiftedValue4) - (uint)!isZero1;\n      }\n      shiftedValue5 = shiftedValue4 >> 1;\n      shiftedValue1 = (uint)((shiftedValue4 & 1) != 0) << 0x1f | shiftedValue1 >> 1;\n      isZero2 = shiftedValue1 <= mantissaDiff;\n      isZero1 = normalizedOtherExponent - shiftedValue5 < (uint)isZero2;\n      mantissa2 = normalizedOtherExponent;\n      if (shiftedValue5 < normalizedOtherExponent || isZero1) {\n        mantissaDiff = mantissaDiff - shiftedValue1;\n        mantissa2 = (normalizedOtherExponent - shiftedValue5) - (uint)!isZero2;\n      }\n      if (shiftedValue5 < normalizedOtherExponent || isZero1) {\n        mantissa1 = mantissa1 | shiftedValue3 >> 1;\n      }\n      normalizedOtherExponent = shiftedValue4 >> 2;\n      shiftedValue2 = (uint)((shiftedValue5 & 1) != 0) << 0x1f | shiftedValue1 >> 1;\n      isZero2 = shiftedValue2 <= mantissaDiff;\n      isZero1 = mantissa2 - normalizedOtherExponent < (uint)isZero2;\n      shiftedValue5 = mantissa2;\n      if (normalizedOtherExponent < mantissa2 || isZero1) {\n        mantissaDiff = mantissaDiff - shiftedValue2;\n        shiftedValue5 = (mantissa2 - normalizedOtherExponent) - (uint)!isZero2;\n      }\n      if (normalizedOtherExponent < mantissa2 || isZero1) {\n        mantissa1 = mantissa1 | shiftedValue3 >> 2;\n      }\n      shiftedValue6 = shiftedValue4 >> 3;\n      shiftedValue1 = (uint)((normalizedOtherExponent & 1) != 0) << 0x1f | shiftedValue2 >> 1;\n      isZero2 = shiftedValue1 <= mantissaDiff;\n      isZero1 = shiftedValue5 - shiftedValue6 < (uint)isZero2;\n      normalizedOtherExponent = shiftedValue5;\n      if (shiftedValue6 < shiftedValue5 || isZero1) {\n        mantissaDiff = mantissaDiff - shiftedValue1;\n        normalizedOtherExponent = (shiftedValue5 - shiftedValue6) - (uint)!isZero2;\n      }\n      if (shiftedValue6 < shiftedValue5 || isZero1) {\n        mantissa1 = mantissa1 | shiftedValue3 >> 3;\n      }\n      mantissa2 = normalizedOtherExponent | mantissaDiff;\n      if (mantissa2 == 0) break;\n      normalizedOtherExponent = normalizedOtherExponent << 4 | mantissaDiff >> 0x1c;\n      mantissaDiff = mantissaDiff << 4;\n      shiftedValue4 = shiftedValue4 & 0xfffffff8 | shiftedValue1 >> 0x1d;\n      shiftedValue1 = (shiftedValue2 >> 1) << 3;\n      shiftedValue3 = shiftedValue3 >> 4;\n      if (shiftedValue3 == 0) {\n        shiftedValue6 = shiftedValue4;\n        if ((exponent1 & 0x100000) != 0) goto LAB_080089b2;\n        exponent1 = exponent1 | mantissa1;\n        mantissa1 = 0;\n        shiftedValue3 = 0x80000000;\n      }\n    }\n    if ((exponent1 & 0x100000) == 0) {\n      exponent1 = exponent1 | mantissa1;\n      mantissa1 = 0;\n    }\nLAB_080089b2:\n    isOverflow = 0xfc < normalizedExponent;\n    isZero2 = SBORROW4(normalizedExponent,0xfd);\n    shiftedValue4 = diffExponent + 0x300;\n    isZero1 = shiftedValue4 == 0;\n    shiftedValue3 = shiftedValue4;\n    if (isOverflow && !isZero1) {\n      isOverflow = 0x6ff < shiftedValue4;\n      isZero2 = SBORROW4(shiftedValue4,0x700);\n      shiftedValue3 = diffExponent - 0x400;\n      isZero1 = shiftedValue4 == 0x700;\n    }\n    if (!isOverflow || isZero1) {\n      isZero1 = shiftedValue6 <= normalizedOtherExponent;\n      if (normalizedOtherExponent == shiftedValue6) {\n        isZero1 = shiftedValue1 <= mantissaDiff;\n      }\n      if (normalizedOtherExponent == shiftedValue6 && mantissaDiff == shiftedValue1) {\n        isZero1 = (mantissa1 & 1) != 0;\n      }\n      return CONCAT44(exponent1 + normalizedExponent * 0x100000 + (uint)CARRY4(mantissa1,(uint)isZero1),mantissa1 + isZero1);\n    }\n  }\n  if (!isZero1 && (int)shiftedValue3 < 0 == isZero2) {\n    return (ulonglong)(exponent1 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isOverflow = SCARRY4(normalizedExponent,0x36);\n  isZero1 = (int)(normalizedExponent + 0x36) < 0;\n  isZero2 = normalizedExponent == 0xffffffca;\n  if (isZero2 || isZero1 != isOverflow) {\n    mantissa1 = 0;\n  }\n  if (isZero2 || isZero1 != isOverflow) {\n    exponent1 = exponent1 & 0x80000000;\n  }\n  if (isZero2 || isZero1 != isOverflow) {\n    return CONCAT44(exponent1,mantissa1);\n  }\n  shiftedValue3 = -normalizedExponent;\n  normalizedOtherExponent = shiftedValue3 - 0x20;\n  if (0x1f < (int)shiftedValue3) {\n    shiftedValue3 = mantissa1 >> (normalizedOtherExponent & 0xff) | exponent1 << (0x20 - normalizedOtherExponent & 0xff);\n    normalizedExponent = (exponent1 >> (normalizedOtherExponent & 0xff) & ~((exponent1 & 0x80000000) >> (normalizedOtherExponent & 0xff))) -\n            ((int)shiftedValue3 >> 0x1f);\n    if ((mantissa2 | mantissa1 << (0x20 - normalizedOtherExponent & 0xff) | shiftedValue3 << 1) == 0) {\n      normalizedExponent = normalizedExponent & ~(shiftedValue3 >> 0x1f);\n    }\n    return CONCAT44(exponent1,normalizedExponent) & 0x80000000ffffffff;\n  }\n  diffExponent = shiftedValue3 - 0x14;\n  if (diffExponent != 0 && diffExponent < 0 == SCARRY4(normalizedOtherExponent,0xc)) {\n    normalizedExponent = 0xc - diffExponent;\n    shiftedValue3 = mantissa1 << (normalizedExponent & 0xff);\n    mantissa1 = mantissa1 >> (0x20 - normalizedExponent & 0xff) | exponent1 << (normalizedExponent & 0xff);\n    normalizedExponent = mantissa1 + -((int)shiftedValue3 >> 0x1f);\n    if ((mantissa2 | shiftedValue3 << 1) == 0) {\n      normalizedExponent = normalizedExponent & ~(shiftedValue3 >> 0x1f);\n    }\n    return CONCAT44((exponent1 & 0x80000000) + (uint)CARRY4(mantissa1,-((int)shiftedValue3 >> 0x1f)),normalizedExponent);\n  }\n  normalizedOtherExponent = mantissa1 << (normalizedExponent + 0x20 & 0xff);\n  mantissa1 = mantissa1 >> (shiftedValue3 & 0xff) | exponent1 << (normalizedExponent + 0x20 & 0xff);\n  normalizedExponent = mantissa1 + -((int)normalizedOtherExponent >> 0x1f);\n  if ((mantissa2 | normalizedOtherExponent << 1) == 0) {\n    normalizedExponent = normalizedExponent & ~(normalizedOtherExponent >> 0x1f);\n  }\n  return CONCAT44((exponent1 & 0x80000000) +\n                  ((exponent1 & 0x7fffffff) >> (shiftedValue3 & 0xff)) +\n                  (uint)CARRY4(mantissa1,-((int)normalizedOtherExponent >> 0x1f)),normalizedExponent);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "shiftedValue1",
                "uVar2": "shiftedValue2",
                "uVar3": "shiftedValue3",
                "uVar4": "shiftedValue4",
                "uVar5": "shiftedValue5",
                "uVar6": "shiftedValue6",
                "uVar7": "exponent1",
                "iVar8": "diffExponent",
                "uVar9": "normalizedExponent",
                "unaff_r5": "exponent2",
                "uVar10": "normalizedOtherExponent",
                "uVar11": "mantissa1",
                "uVar12": "mantissaDiff",
                "uVar13": "mantissa2",
                "bVar14": "isZero1",
                "bVar15": "isZero2",
                "bVar16": "isOverflow"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "calculate_float_bits_08008a02",
            "code": "\nulonglong calculate_float_bits_08008a02(uint integer_part,uint fraction_part,uint integer_part_2,uint fraction_part_2)\n\n{\n  uint bit_value;\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint input_val;\n  bool is_zero;\n  \n  temp_2 = input_val & fraction_part_2 >> 0x14;\n  temp_3 = fraction_part;\n  if (temp_1 != input_val || temp_2 != input_val) {\n    if (temp_1 == input_val) {\n      if (((integer_part | fraction_part << 0xc) == 0) && (integer_part = integer_part_2, temp_3 = fraction_part_2, temp_2 != input_val)\n         ) {\nLAB_08008874:\n        return (ulonglong)((fraction_part ^ fraction_part_2) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp_2 == input_val) {\n      integer_part = integer_part_2;\n      temp_3 = fraction_part_2;\n      if ((integer_part_2 | fraction_part_2 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((fraction_part ^ fraction_part_2) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (integer_part | fraction_part << 1) == 0;\n      if (!is_zero) {\n        is_zero = (integer_part_2 | fraction_part_2 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temp_1 == 0) {\n          temp_3 = fraction_part & 0x80000000;\n          do {\n            bit_value = integer_part & 0x80000000;\n            integer_part = integer_part << 1;\n            fraction_part = fraction_part * 2 + (uint)(bit_value != 0);\n          } while ((fraction_part & 0x100000) == 0);\n          fraction_part = fraction_part | temp_3;\n          if (temp_2 != 0) {\n            return CONCAT44(fraction_part,integer_part);\n          }\n        }\n        do {\n          temp_3 = integer_part_2 & 0x80000000;\n          integer_part_2 = integer_part_2 << 1;\n          fraction_part_2 = fraction_part_2 * 2 + (uint)(temp_3 != 0);\n        } while ((fraction_part_2 & 0x100000) == 0);\n        return CONCAT44(fraction_part,integer_part);\n      }\n      if ((integer_part | fraction_part << 1) != 0) goto LAB_08008874;\n      if ((integer_part_2 | fraction_part_2 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp_3,integer_part) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "calculate_float_bits_08008a02",
                "param_1": "integer_part",
                "param_2": "fraction_part",
                "param_3": "integer_part_2",
                "param_4": "fraction_part_2",
                "uVar1": "bit_value",
                "unaff_r4": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "in_r12": "input_val",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_parameters_08008a74",
            "code": "\nuint check_parameters_08008a74(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint tempVar1;\n  bool isZero;\n  bool isNegative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (value1 | value2 << 1) == 0;\n  if (isZero) {\n    isZero = (value3 | value4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = value2 == value4;\n  }\n  if (isZero) {\n    isZero = value1 == value3;\n  }\n  if (!isZero) {\n    tempVar1 = value2 ^ value4;\n    isZero = tempVar1 == 0;\n    if (-1 < (int)tempVar1) {\n      isZero = value2 == value4;\n    }\n    isNegative = -1 < (int)tempVar1 && value4 <= value2;\n    if (isZero) {\n      isNegative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!isNegative) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_parameters_08008a74",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "tempVar1",
                "bVar2": "isZero",
                "bVar3": "isNegative"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "initialize_function_08008af0",
            "code": "\nvoid initializeFunction_08008af0(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08008b00(inputParam3,inputParam4,inputParam1,inputParam2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "initialize_function_08008af0",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_application_08008b00",
            "code": "\nundefined4 initializeApplication_08008b00(undefined4 initValue)\n\n{\n  FUN_08008a74();\n  return initValue;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_application_08008b00",
                "param_1": "initValue"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_non_zero_08008b10",
            "code": "\nbool checkIfNonZero_08008b10(void)\n\n{\n  char result;\n  \n  FUN_08008b00();\n  return result != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_non_zero_08008b10",
                "in_ZR": "result"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "is_zero_terminated_08008b24",
            "code": "\nbool is_zero_terminated_08008b24(void)\n\n{\n  char input_character;\n  \n  FUN_08008b00();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "is_zero_terminated_08008b24",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_cy_and_zr_08008b4c",
            "code": "\nbool check_CY_and_ZR_08008b4c(void)\n\n{\n  undefined zero_flag_set;\n  undefined carry_flag_set;\n  \n  FUN_08008af0();\n  return !(bool)carry_flag_set || (bool)zero_flag_set;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_cy_and_zr_08008b4c",
                "in_CY": "carry_flag_set",
                "in_ZR": "zero_flag_set"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "check_null_termination_08008b60",
            "code": "\nbool check_null_termination_08008b60(void)\n\n{\n  char input_character;\n  \n  FUN_08008af0();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "check_null_termination_08008b60",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_parameters_08008b74",
            "code": "\nundefined4 check_parameters_08008b74(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_parameters_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "calculate_result_08008ba0",
            "code": "\nuint calculateResult_08008ba0(uint inputValue1,uint inputValue2)\n\n{\n  uint finalResult;\n  int scaledValue;\n  uint adjustedValue;\n  \n  scaledValue = inputValue2 * 2 + 0x200000;\n  if (inputValue2 * 2 < 0xffe00000) {\n    if (-1 < scaledValue) {\n      return 0;\n    }\n    finalResult = scaledValue >> 0x15;\n    adjustedValue = -finalResult - 0x3e1;\n    if (finalResult < 0xfffffc20 && adjustedValue != 0) {\n      finalResult = (inputValue2 << 0xb | 0x80000000 | inputValue1 >> 0x15) >> (adjustedValue & 0xff);\n      if ((inputValue2 & 0x80000000) != 0) {\n        finalResult = -finalResult;\n      }\n      return finalResult;\n    }\n  }\n  else if ((inputValue1 | inputValue2 << 0xc) != 0) {\n    return 0;\n  }\n  inputValue2 = inputValue2 & 0x80000000;\n  if (inputValue2 == 0) {\n    inputValue2 = 0x7fffffff;\n  }\n  return inputValue2;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "calculate_result_08008ba0",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "finalResult",
                "iVar2": "scaledValue",
                "uVar3": "adjustedValue"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_unsigned_division_08008bf0",
            "code": "\nuint calculateUnsignedDivision_08008bf0(uint dividend,uint divisor)\n\n{\n  int result;\n  uint shiftCount;\n  \n  if ((divisor & 0x80000000) != 0) {\n    return 0;\n  }\n  result = divisor * 2 + 0x200000;\n  if (divisor * 2 < 0xffe00000) {\n    if (-1 < result) {\n      return 0;\n    }\n    shiftCount = -(result >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftCount) {\n      return (divisor << 0xb | 0x80000000 | dividend >> 0x15) >> (shiftCount & 0xff);\n    }\n  }\n  else if ((dividend | divisor << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_unsigned_division_08008bf0",
                "param_1": "dividend",
                "param_2": "divisor",
                "iVar1": "result",
                "uVar2": "shiftCount"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_float_08008c30",
            "code": "\nuint calculateFloat_08008c30(uint inputFloat1,uint inputFloat2)\n\n{\n  uint resultFloat1;\n  uint tempFloat1;\n  uint tempFloat2;\n  uint tempFloat3;\n  bool isZero;\n  bool isLessThanThreshold;\n  \n  tempFloat1 = inputFloat2 * 2;\n  isLessThanThreshold = tempFloat1 < 0x70000000;\n  tempFloat2 = tempFloat1 + 0x90000000;\n  resultFloat1 = tempFloat2;\n  if (!isLessThanThreshold) {\n    tempFloat3 = tempFloat1 + 0x8fe00000;\n    resultFloat1 = tempFloat3;\n  }\n  isZero = resultFloat1 == 0;\n  if (!isLessThanThreshold && tempFloat2 >= 0x200000) {\n    isZero = tempFloat3 == 0x1fc00000;\n  }\n  if (((isLessThanThreshold || tempFloat2 < 0x200000) || 0x1fc00000 < tempFloat3) || isZero) {\n    if ((inputFloat2 & 0x40000000) != 0) {\n      if (((int)tempFloat1 >> 0x15 == -1) && ((inputFloat1 | inputFloat2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return inputFloat2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(tempFloat1 + 0x92e00000) < 0 != SCARRY4(tempFloat2,0x2e00000)) {\n      return inputFloat2 & 0x80000000;\n    }\n    tempFloat1 = 0x18 - (tempFloat1 + 0x92e00000 >> 0x15);\n    resultFloat1 = inputFloat1 >> (tempFloat1 & 0xff);\n    if (inputFloat1 << (0x20 - tempFloat1 & 0xff) != 0) {\n      resultFloat1 = resultFloat1 | 1;\n    }\n    tempFloat2 = inputFloat2 & 0x1fffff | 0x100000;\n    inputFloat1 = resultFloat1 | tempFloat2 << (0x20 - tempFloat1 & 0xff);\n    tempFloat2 = (tempFloat2 >> (tempFloat1 & 0xff)) << 1;\n  }\n  resultFloat1 = (inputFloat2 & 0x80000000 | inputFloat1 >> 0x1d) + tempFloat2 * 4 + (uint)(0x7fffffff < inputFloat1 * 8);\n  if (inputFloat1 * 8 == 0x80000000) {\n    resultFloat1 = resultFloat1 & 0xfffffffe;\n  }\n  return resultFloat1;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_float_08008c30",
                "param_1": "inputFloat1",
                "param_2": "inputFloat2",
                "uVar1": "resultFloat1",
                "uVar2": "tempFloat1",
                "uVar3": "tempFloat2",
                "in_r12": "tempFloat3",
                "bVar4": "isZero",
                "bVar5": "isLessThanThreshold"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_addition_08008cd8",
            "code": "\nuint calculate_float_addition_08008cd8(uint input_float1,uint input_float2,undefined4 input_param3,uint input_param4)\n\n{\n  int high_byte_shifted_input_float1;\n  int high_byte_shifted_input_float2;\n  uint xored_input_float2;\n  uint xored_input_float1;\n  uint shifted_input_float1;\n  uint shifted_input_float2;\n  uint difference;\n  bool is_equal;\n  \n  xored_input_float2 = input_float2 ^ 0x80000000;\n  shifted_input_float1 = input_float1 << 1;\n  is_equal = shifted_input_float1 == 0;\n  if (!is_equal) {\n    input_param4 = input_float2 << 1;\n    is_equal = input_param4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = shifted_input_float1 == input_param4;\n  }\n  high_byte_shifted_input_float1 = (int)shifted_input_float1 >> 0x18;\n  if (!is_equal) {\n    is_equal = high_byte_shifted_input_float1 == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input_param4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    high_byte_shifted_input_float2 = (int)(input_float2 << 1) >> 0x18;\n    if (high_byte_shifted_input_float1 == -1 || high_byte_shifted_input_float2 == -1) {\n      shifted_input_float1 = xored_input_float2;\n      if (high_byte_shifted_input_float1 == -1) {\n        shifted_input_float1 = input_float1;\n      }\n      if (high_byte_shifted_input_float1 != -1 || high_byte_shifted_input_float2 != -1) {\n        xored_input_float2 = shifted_input_float1;\n      }\n      is_equal = (shifted_input_float1 & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (xored_input_float2 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = shifted_input_float1 == xored_input_float2;\n      }\n      if (!is_equal) {\n        shifted_input_float1 = shifted_input_float1 | 0x400000;\n      }\n      return shifted_input_float1;\n    }\n    if (((input_float1 ^ xored_input_float2) & 0x7fffffff) != 0) {\n      if (shifted_input_float1 == 0) {\n        input_float1 = xored_input_float2;\n      }\n      return input_float1;\n    }\n    if (input_float1 != xored_input_float2) {\n      return 0;\n    }\n    if ((shifted_input_float1 & 0xff000000) == 0) {\n      xored_input_float2 = input_float1 << 1;\n      if ((input_float1 & 0x80000000) != 0) {\n        xored_input_float2 = xored_input_float2 | 0x80000000;\n      }\n      return xored_input_float2;\n    }\n    if (shifted_input_float1 < 0xfe000000) {\n      return input_float1 + 0x800000;\n    }\n    input_float1 = input_float1 & 0x80000000;\nLAB_08008e12:\n    return input_float1 | 0x7f800000;\n  }\n  shifted_input_float1 = shifted_input_float1 >> 0x18;\n  input_param4 = input_param4 >> 0x18;\n  difference = input_param4 - shifted_input_float1;\n  is_equal = difference != 0;\n  shifted_input_float2 = shifted_input_float1;\n  if (is_equal && shifted_input_float1 <= input_param4) {\n    shifted_input_float2 = shifted_input_float1 + difference;\n  }\n  if (is_equal && shifted_input_float1 <= input_param4) {\n    xored_input_float2 = xored_input_float2 ^ input_float1;\n  }\n  if (is_equal && shifted_input_float1 <= input_param4) {\n    input_float1 = input_float1 ^ xored_input_float2;\n  }\n  if (is_equal && shifted_input_float1 <= input_param4) {\n    xored_input_float2 = xored_input_float2 ^ input_float1;\n  }\n  if (input_param4 < shifted_input_float1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input_float1;\n  }\n  shifted_input_float1 = input_float1 & 0xffffff | 0x800000;\n  if ((input_float1 & 0x80000000) != 0) {\n    shifted_input_float1 = -shifted_input_float1;\n  }\n  xored_input_float1 = xored_input_float2 & 0xffffff | 0x800000;\n  if ((xored_input_float2 & 0x80000000) != 0) {\n    xored_input_float1 = -xored_input_float1;\n  }\n  if (shifted_input_float2 == difference) {\n    xored_input_float1 = xored_input_float1 ^ 0x800000;\n    if (shifted_input_float2 == 0) {\n      shifted_input_float1 = shifted_input_float1 ^ 0x800000;\n      shifted_input_float2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  shifted_input_float1 = shifted_input_float1 + ((int)xored_input_float1 >> (difference & 0xff));\n  xored_input_float1 = xored_input_float1 << (0x20 - difference & 0xff);\n  input_float1 = shifted_input_float1 & 0x80000000;\n  if ((int)shifted_input_float1 < 0) {\n    is_equal = xored_input_float1 != 0;\n    xored_input_float1 = -xored_input_float1;\n    shifted_input_float1 = -shifted_input_float1 - (uint)is_equal;\n  }\n  if (shifted_input_float1 < 0x800000) {\n    xored_input_float2 = xored_input_float1 & 0x80000000;\n    xored_input_float1 = xored_input_float1 << 1;\n    shifted_input_float1 = shifted_input_float1 * 2 + (uint)(xored_input_float2 != 0);\n    xored_input_float2 = shifted_input_float2 - 2;\n    if (shifted_input_float2 - 1 == 0 || shifted_input_float1 < 0x800000) {\n      difference = LZCOUNT(shifted_input_float1) - 8;\n      shifted_input_float1 = shifted_input_float1 << (difference & 0xff);\n      if ((int)xored_input_float2 < (int)difference) {\n        shifted_input_float1 = shifted_input_float1 >> (-(xored_input_float2 - difference) & 0xff);\n      }\n      else {\n        shifted_input_float1 = shifted_input_float1 + (xored_input_float2 - difference) * 0x800000;\n      }\n      return shifted_input_float1 | input_float1;\n    }\n  }\n  else {\n    xored_input_float2 = shifted_input_float2 - 1;\n    if (0xffffff < shifted_input_float1) {\n      xored_input_float2 = shifted_input_float1 & 1;\n      shifted_input_float1 = shifted_input_float1 >> 1;\n      xored_input_float1 = (uint)(xored_input_float2 != 0) << 0x1f | xored_input_float1 >> 1;\n      xored_input_float2 = shifted_input_float2;\n      if (0xfd < shifted_input_float2) goto LAB_08008e12;\n    }\n  }\n  shifted_input_float1 = shifted_input_float1 + xored_input_float2 * 0x800000 + (uint)(0x7fffffff < xored_input_float1);\n  if (xored_input_float1 == 0x80000000) {\n    shifted_input_float1 = shifted_input_float1 & 0xfffffffe;\n  }\n  return shifted_input_float1 | input_float1;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_addition_08008cd8",
                "param_1": "input_float1",
                "param_2": "input_float2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uVar3": "xored_input_float2",
                "uVar4": "xored_input_float1",
                "uVar5": "shifted_input_float1",
                "uVar6": "shifted_input_float2",
                "uVar7": "difference",
                "bVar8": "is_equal",
                "iVar1": "high_byte_shifted_input_float1",
                "iVar2": "high_byte_shifted_input_float2"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint inputFloat1,uint inputFloat2,undefined4 inputInt,uint inputFlag)\n\n{\n  int firstBit1;\n  int firstBit2;\n  uint absVal1;\n  uint absVal2;\n  uint distance;\n  uint absDistance;\n  bool isEqual;\n  \n  absVal2 = inputFloat1 << 1;\n  isEqual = absVal2 == 0;\n  if (!isEqual) {\n    inputFlag = inputFloat2 << 1;\n    isEqual = inputFlag == 0;\n  }\n  if (!isEqual) {\n    isEqual = absVal2 == inputFlag;\n  }\n  firstBit1 = (int)absVal2 >> 0x18;\n  if (!isEqual) {\n    isEqual = firstBit1 == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)inputFlag >> 0x18 == -1;\n  }\n  if (isEqual) {\n    firstBit2 = (int)(inputFloat2 << 1) >> 0x18;\n    if (firstBit1 == -1 || firstBit2 == -1) {\n      absVal2 = inputFloat2;\n      if (firstBit1 == -1) {\n        absVal2 = inputFloat1;\n      }\n      if (firstBit1 != -1 || firstBit2 != -1) {\n        inputFloat2 = absVal2;\n      }\n      isEqual = (absVal2 & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (inputFloat2 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = absVal2 == inputFloat2;\n      }\n      if (!isEqual) {\n        absVal2 = absVal2 | 0x400000;\n      }\n      return absVal2;\n    }\n    if (((inputFloat1 ^ inputFloat2) & 0x7fffffff) != 0) {\n      if (absVal2 == 0) {\n        inputFloat1 = inputFloat2;\n      }\n      return inputFloat1;\n    }\n    if (inputFloat1 != inputFloat2) {\n      return 0;\n    }\n    if ((absVal2 & 0xff000000) == 0) {\n      absVal2 = inputFloat1 << 1;\n      if ((inputFloat1 & 0x80000000) != 0) {\n        absVal2 = absVal2 | 0x80000000;\n      }\n      return absVal2;\n    }\n    if (absVal2 < 0xfe000000) {\n      return inputFloat1 + 0x800000;\n    }\n    inputFloat1 = inputFloat1 & 0x80000000;\nLAB_08008e12:\n    return inputFloat1 | 0x7f800000;\n  }\n  absVal2 = absVal2 >> 0x18;\n  inputFlag = inputFlag >> 0x18;\n  absDistance = inputFlag - absVal2;\n  isEqual = absDistance != 0;\n  distance = absVal2;\n  if (isEqual && absVal2 <= inputFlag) {\n    distance = absVal2 + absDistance;\n  }\n  if (isEqual && absVal2 <= inputFlag) {\n    inputFloat2 = inputFloat2 ^ inputFloat1;\n  }\n  if (isEqual && absVal2 <= inputFlag) {\n    inputFloat1 = inputFloat1 ^ inputFloat2;\n  }\n  if (isEqual && absVal2 <= inputFlag) {\n    inputFloat2 = inputFloat2 ^ inputFloat1;\n  }\n  if (inputFlag < absVal2) {\n    absDistance = -absDistance;\n  }\n  if (0x19 < absDistance) {\n    return inputFloat1;\n  }\n  absVal2 = inputFloat1 & 0xffffff | 0x800000;\n  if ((inputFloat1 & 0x80000000) != 0) {\n    absVal2 = -absVal2;\n  }\n  absVal1 = inputFloat2 & 0xffffff | 0x800000;\n  if ((inputFloat2 & 0x80000000) != 0) {\n    absVal1 = -absVal1;\n  }\n  if (distance == absDistance) {\n    absVal1 = absVal1 ^ 0x800000;\n    if (distance == 0) {\n      absVal2 = absVal2 ^ 0x800000;\n      distance = 1;\n    }\n    else {\n      absDistance = absDistance - 1;\n    }\n  }\n  absVal2 = absVal2 + ((int)absVal1 >> (absDistance & 0xff));\n  absVal1 = absVal1 << (0x20 - absDistance & 0xff);\n  inputFloat1 = absVal2 & 0x80000000;\n  if ((int)absVal2 < 0) {\n    isEqual = absVal1 != 0;\n    absVal1 = -absVal1;\n    absVal2 = -absVal2 - (uint)isEqual;\n  }\n  if (absVal2 < 0x800000) {\n    absDistance = absVal1 & 0x80000000;\n    absVal1 = absVal1 << 1;\n    absVal2 = absVal2 * 2 + (uint)(absDistance != 0);\n    absDistance = distance - 2;\n    if (distance - 1 == 0 || absVal2 < 0x800000) {\n      distance = LZCOUNT(absVal2) - 8;\n      absVal2 = absVal2 << (distance & 0xff);\n      if ((int)absDistance < (int)distance) {\n        absVal2 = absVal2 >> (-(absDistance - distance) & 0xff);\n      }\n      else {\n        absVal2 = absVal2 + (absDistance - distance) * 0x800000;\n      }\n      return absVal2 | inputFloat1;\n    }\n  }\n  else {\n    absDistance = distance - 1;\n    if (0xffffff < absVal2) {\n      absDistance = absVal2 & 1;\n      absVal2 = absVal2 >> 1;\n      absVal1 = (uint)(absDistance != 0) << 0x1f | absVal1 >> 1;\n      absDistance = distance;\n      if (0xfd < distance) goto LAB_08008e12;\n    }\n  }\n  absVal2 = absVal2 + absDistance * 0x800000 + (uint)(0x7fffffff < absVal1);\n  if (absVal1 == 0x80000000) {\n    absVal2 = absVal2 & 0xfffffffe;\n  }\n  return absVal2 | inputFloat1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "inputFloat1",
                "param_2": "inputFloat2",
                "param_3": "inputInt",
                "param_4": "inputFlag",
                "iVar1": "firstBit1",
                "iVar2": "firstBit2",
                "uVar3": "absVal1",
                "uVar4": "absVal2",
                "uVar5": "distance",
                "uVar6": "absDistance",
                "bVar7": "isEqual"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_result_08008e3c",
            "code": "\nuint calculateResult_08008e3c(uint inputValue)\n\n{\n  uint leadingZerosCount;\n  uint shiftAmount;\n  int intermediateResult;\n  uint temporaryValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZerosCount = LZCOUNT(inputValue);\n  shiftAmount = leadingZerosCount - 8;\n  intermediateResult = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZerosCount) {\n    temporaryValue = 0 << (shiftAmount & 0xff);\n    leadingZerosCount = intermediateResult + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < temporaryValue);\n    if (temporaryValue == 0x80000000) {\n      leadingZerosCount = leadingZerosCount & 0xfffffffe;\n    }\n    return leadingZerosCount;\n  }\n  shiftAmount = inputValue << leadingZerosCount + 0x18;\n  leadingZerosCount = intermediateResult + ((inputValue >> (0x20 - (leadingZerosCount + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZerosCount = leadingZerosCount & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZerosCount;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_result_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZerosCount",
                "uVar2": "shiftAmount",
                "iVar3": "intermediateResult",
                "uVar4": "temporaryValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "decode_unsigned_integer_08008e44",
            "code": "\nuint decode_unsigned_integer_08008e44(uint input_value)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int intermediate_value;\n  \n  sign_bit = input_value & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input_value = -input_value;\n  }\n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input_value);\n  shift_amount = leading_zeros - 8;\n  intermediate_value = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = intermediate_value + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = input_value << leading_zeros + 0x18;\n  sign_bit = intermediate_value + ((input_value >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "decode_unsigned_integer_08008e44",
                "param_1": "input_value",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit",
                "iVar4": "intermediate_value",
                "LZCOUNT": "count_leading_zeros"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_floating_point_08008eec",
            "code": "\nuint calculateFloatingPoint_08008eec(uint firstOperand,uint secondOperand,undefined4 constant1,uint constant2)\n\n{\n  longlong product;\n  uint result;\n  uint firstByte;\n  int sum;\n  int difference;\n  uint lowerBits;\n  int tempDifference;\n  uint signedResult;\n  bool condition1;\n  bool condition2;\n  \n  firstByte = firstOperand >> 0x17 & 0xff;\n  condition1 = firstByte == 0;\n  if (!condition1) {\n    constant2 = secondOperand >> 0x17 & 0xff;\n    condition1 = constant2 == 0;\n  }\n  if (!condition1) {\n    condition1 = firstByte == 0xff;\n  }\n  if (!condition1) {\n    condition1 = constant2 == 0xff;\n  }\n  if (condition1) {\n    constant2 = secondOperand >> 0x17 & 0xff;\n    if (firstByte == 0xff || constant2 == 0xff) {\n      condition1 = firstOperand == 0 || firstOperand == 0x80000000;\n      result = secondOperand;\n      if (firstOperand != 0 && firstOperand != 0x80000000) {\n        condition1 = secondOperand == 0;\n        result = firstOperand;\n      }\n      if (!condition1) {\n        condition1 = secondOperand == 0x80000000;\n      }\n      signedResult = result;\n      if (((condition1) || ((firstByte == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((constant2 == 0xff && (signedResult = secondOperand, (secondOperand & 0x7fffff) != 0)))) {\n        return signedResult | 0x7fc00000;\n      }\n      result = result ^ secondOperand;\n      goto LAB_0800903c;\n    }\n    condition1 = (firstOperand & 0x7fffffff) == 0;\n    if (!condition1) {\n      condition1 = (secondOperand & 0x7fffffff) == 0;\n    }\n    if (condition1) {\n      return (firstOperand ^ secondOperand) & 0x80000000;\n    }\n    condition1 = firstByte == 0;\n    result = firstOperand & 0x80000000;\n    while( true ) {\n      if (condition1) {\n        firstOperand = firstOperand << 1;\n        condition1 = (firstOperand & 0x800000) == 0;\n      }\n      if (!condition1) break;\n      firstByte = firstByte - 1;\n    }\n    firstOperand = firstOperand | result;\n    condition1 = constant2 == 0;\n    result = secondOperand & 0x80000000;\n    while( true ) {\n      if (condition1) {\n        secondOperand = secondOperand << 1;\n        condition1 = (secondOperand & 0x800000) == 0;\n      }\n      if (!condition1) break;\n      constant2 = constant2 - 1;\n    }\n    secondOperand = secondOperand | result;\n  }\n  sum = firstByte + constant2;\n  signedResult = firstOperand ^ secondOperand;\n  firstByte = firstOperand << 9;\n  condition1 = firstByte == 0;\n  if (!condition1) {\n    secondOperand = secondOperand << 9;\n    condition1 = secondOperand == 0;\n  }\n  if (condition1) {\n    if (firstByte == 0) {\n      secondOperand = secondOperand << 9;\n    }\n    result = signedResult & 0x80000000 | firstOperand & 0x7fffff | secondOperand >> 9;\n    condition2 = SBORROW4(sum,0x7f);\n    difference = sum + -0x7f;\n    condition1 = difference == 0;\n    tempDifference = difference;\n    if (!condition1 && 0x7e < sum) {\n      condition2 = SBORROW4(0xff,difference);\n      tempDifference = 0xff - difference;\n      condition1 = difference == 0xff;\n    }\n    if (!condition1 && tempDifference < 0 == condition2) {\n      result = result | difference * 0x800000;\n    }\n    if (!condition1 && tempDifference < 0 == condition2) {\n      return result;\n    }\n    result = result | 0x800000;\n    lowerBits = 0;\n    condition2 = SBORROW4(difference,1);\n    signedResult = sum - 0x80;\n    condition1 = signedResult == 0;\n    firstByte = signedResult;\n  }\n  else {\n    product = (ulonglong)(firstByte >> 5 | 0x8000000) * (ulonglong)(secondOperand >> 5 | 0x8000000);\n    lowerBits = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    condition1 = result < 0x800000;\n    if (condition1) {\n      result = result << 1;\n    }\n    if (condition1) {\n      result = result | lowerBits >> 0x1f;\n      lowerBits = lowerBits << 1;\n    }\n    result = signedResult & 0x80000000 | result;\n    signedResult = (sum + -0x7f) - (uint)condition1;\n    condition2 = SBORROW4(signedResult,0xfd);\n    condition1 = signedResult == 0xfd;\n    firstByte = signedResult - 0xfd;\n    if (signedResult < 0xfe) {\n      result = result + signedResult * 0x800000 + (uint)(0x7fffffff < lowerBits);\n      if (lowerBits == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (condition1 || (int)firstByte < 0 != condition2) {\n    condition1 = (int)(signedResult + 0x19) < 0;\n    if (signedResult == 0xffffffe7 || condition1 != SCARRY4(signedResult,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (signedResult != 0xffffffe7 && condition1 == SCARRY4(signedResult,0x19)) {\n      firstByte = (result << 1) >> (-signedResult & 0xff);\n      signedResult = result << (signedResult + 0x20 & 0xff);\n      firstByte = ((uint)((result & 0x80000000) != 0) << 0x1f | firstByte >> 1) + (uint)((byte)firstByte & 1);\n      if ((lowerBits | signedResult << 1) == 0) {\n        firstByte = firstByte & ~(signedResult >> 0x1f);\n      }\n      return firstByte;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_floating_point_08008eec",
                "param_1": "firstOperand",
                "param_2": "secondOperand",
                "param_3": "constant1",
                "param_4": "constant2",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "firstByte",
                "iVar4": "sum",
                "iVar5": "difference",
                "uVar6": "lowerBits",
                "iVar7": "tempDifference",
                "uVar8": "signedResult",
                "bVar9": "condition1",
                "bVar10": "condition2"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "floating_point_add_sub_08009054",
            "code": "\nuint floatingPointAddSub_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint exponent_a;\n  uint exponent_b;\n  int exponent_diff;\n  uint exponent_sum;\n  int sum_check;\n  uint result;\n  bool check_flag;\n  bool overflow_check;\n  bool carry_flag;\n  \n  exponent_b = param_1 >> 0x17 & 0xff;\n  check_flag = exponent_b == 0;\n  if (!check_flag) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    check_flag = param_4 == 0;\n  }\n  if (!check_flag) {\n    check_flag = exponent_b == 0xff;\n  }\n  if (!check_flag) {\n    check_flag = param_4 == 0xff;\n  }\n  if (check_flag) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    result = param_1;\n    if (exponent_b == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (result = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        result = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      check_flag = (param_1 & 0x7fffffff) == 0;\n      if (!check_flag) {\n        check_flag = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!check_flag) {\n        check_flag = exponent_b == 0;\n        result = param_1 & 0x80000000;\n        while( true ) {\n          if (check_flag) {\n            param_1 = param_1 << 1;\n            check_flag = (param_1 & 0x800000) == 0;\n          }\n          if (!check_flag) break;\n          exponent_b = exponent_b - 1;\n        }\n        param_1 = param_1 | result;\n        check_flag = param_4 == 0;\n        result = param_2 & 0x80000000;\n        while( true ) {\n          if (check_flag) {\n            param_2 = param_2 << 1;\n            check_flag = (param_2 & 0x800000) == 0;\n          }\n          if (!check_flag) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | result;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    exponent_diff = exponent_b - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      carry_flag = SCARRY4(exponent_diff,0x7f);\n      sum_check = exponent_diff + 0x7f;\n      check_flag = sum_check < 0;\n      overflow_check = sum_check == 0;\n      if (!overflow_check && check_flag == carry_flag) {\n        carry_flag = SBORROW4(0xff,sum_check);\n        check_flag = 0xff - sum_check < 0;\n        overflow_check = sum_check == 0xff;\n      }\n      if (!overflow_check && check_flag == carry_flag) {\n        param_1 = param_1 | sum_check * 0x800000;\n      }\n      if (!overflow_check && check_flag == carry_flag) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      exponent_b = 0;\n      overflow_check = SBORROW4(sum_check,1);\n      exponent_sum = exponent_diff + 0x7e;\n      check_flag = exponent_sum == 0;\n      result = exponent_sum;\n    }\n    else {\n      exponent_a = (param_2 << 9) >> 4 | 0x10000000;\n      exponent_b = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      check_flag = exponent_a <= exponent_b;\n      if (!check_flag) {\n        exponent_b = exponent_b << 1;\n      }\n      exponent_sum = exponent_diff + 0x7d + (uint)check_flag;\n      result = 0x800000;\n      do {\n        if (exponent_a <= exponent_b) {\n          exponent_b = exponent_b - exponent_a;\n          param_1 = param_1 | result;\n        }\n        check_flag = exponent_a >> 1 <= exponent_b;\n        if (check_flag) {\n          exponent_b = exponent_b - (exponent_a >> 1);\n        }\n        if (check_flag) {\n          param_1 = param_1 | result >> 1;\n        }\n        check_flag = exponent_a >> 2 <= exponent_b;\n        if (check_flag) {\n          exponent_b = exponent_b - (exponent_a >> 2);\n        }\n        if (check_flag) {\n          param_1 = param_1 | result >> 2;\n        }\n        check_flag = exponent_a >> 3 <= exponent_b;\n        if (check_flag) {\n          exponent_b = exponent_b - (exponent_a >> 3);\n        }\n        if (check_flag) {\n          param_1 = param_1 | result >> 3;\n        }\n        exponent_b = exponent_b * 0x10;\n        check_flag = exponent_b == 0;\n        if (!check_flag) {\n          result = result >> 4;\n          check_flag = result == 0;\n        }\n      } while (!check_flag);\n      overflow_check = SBORROW4(exponent_sum,0xfd);\n      check_flag = exponent_sum == 0xfd;\n      result = exponent_sum - 0xfd;\n      if (exponent_sum < 0xfe) {\n        param_1 = param_1 + exponent_sum * 0x800000 + (uint)(exponent_a <= exponent_b);\n        if (exponent_b - exponent_a == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (check_flag || (int)result < 0 != overflow_check) {\n      check_flag = (int)(exponent_sum + 0x19) < 0;\n      if (exponent_sum == 0xffffffe7 || check_flag != SCARRY4(exponent_sum,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (exponent_sum == 0xffffffe7 || check_flag != SCARRY4(exponent_sum,0x19)) {\n        return param_1;\n      }\n      result = (param_1 << 1) >> (-exponent_sum & 0xff);\n      exponent_sum = param_1 << (exponent_sum + 0x20 & 0xff);\n      result = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((exponent_b | exponent_sum << 1) == 0) {\n        result = result & ~(exponent_sum >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "floating_point_add_sub_08009054",
                "uVar1": "exponent_a",
                "uVar2": "exponent_b",
                "iVar3": "exponent_diff",
                "uVar4": "exponent_sum",
                "iVar5": "sum_check",
                "uVar6": "result",
                "bVar7": "check_flag",
                "bVar8": "overflow_check",
                "bVar9": "carry_flag"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "check_overflow_0800919c",
            "code": "\nuint check_overflow_0800919c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint input_1_multiplied;\n  uint input_2_multiplied;\n  uint combined_var;\n  bool is_zero;\n  \n  input_1_multiplied = input_1 * 2;\n  input_2_multiplied = input_2 * 2;\n  if (((int)input_1_multiplied >> 0x18 == -1 || (int)input_2_multiplied >> 0x18 == -1) &&\n     ((((int)input_1_multiplied >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)input_2_multiplied >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_var = input_1_multiplied | input_2 & 0x7fffffff;\n  is_zero = combined_var == 0;\n  if (!is_zero) {\n    combined_var = input_1 ^ input_2;\n    is_zero = combined_var == 0;\n  }\n  is_negative = -1 < (int)combined_var;\n  if (is_negative) {\n    input_1 = input_1_multiplied + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && input_2_multiplied <= input_1_multiplied) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || input_2_multiplied > input_1_multiplied) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "check_overflow_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "input_1_multiplied",
                "uVar3": "input_2_multiplied",
                "uVar4": "combined_var",
                "bVar1": "is_negative",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_parameters_and_swap_080091fc",
            "code": "\nvoid copy_parameters_and_swap_080091fc(undefined4 destination,undefined4 source)\n\n{\n  FUN_08009204(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_parameters_and_swap_080091fc",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_param_08009204",
            "code": "\nundefined8 concatenate_param_08009204(undefined4 input_param_1,undefined4 input_param_2)\n\n{\n  FUN_0800919c();\n  return CONCAT44(input_param_2,input_param_1);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_param_08009204",
                "param_1": "input_param_1",
                "param_2": "input_param_2"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "is_in_zr_null_08009214",
            "code": "\nbool is_in_ZR_null_08009214(void)\n\n{\n  char is_null;\n  \n  FUN_08009204();\n  return is_null != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "is_in_zr_null_08009214",
                "in_ZR": "is_null"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "check_if_input_empty_08009228",
            "code": "\nbool check_if_input_empty_08009228(void)\n\n{\n  char input_char;\n  \n  FUN_08009204();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "check_if_input_empty_08009228",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_conditions_0800923c",
            "code": "\nbool checkConditions_0800923c(void)\n\n{\n  undefined isZero;\n  undefined isCarry;\n  \n  FUN_08009204();\n  return !(bool)isCarry || (bool)isZero;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_conditions_0800923c",
                "in_ZR": "isZero",
                "in_CY": "isCarry"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_cy_and_zr_08009250",
            "code": "\nbool check_CY_and_ZR_08009250(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_080091fc();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_cy_and_zr_08009250",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "is_null_character_at_end_08009264",
            "code": "\nbool is_null_character_at_end_08009264(void)\n\n{\n  char character;\n  \n  FUN_080091fc();\n  return character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "is_null_character_at_end_08009264",
                "in_CY": "character"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "extract_and_adjust_08009278",
            "code": "\nuint extract_and_adjust_08009278(uint temp_value_2)\n\n{\n  uint shifted_value;\n  uint temp_value;\n  \n  if (temp_value_2 << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (temp_value_2 << 1) >> 0x18;\n  temp_value = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && temp_value != 0) {\n    shifted_value = (temp_value_2 << 8 | 0x80000000) >> (temp_value & 0xff);\n    if ((temp_value_2 & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((temp_value == 0xffffff9f) && ((temp_value_2 & 0x7fffff) != 0)) {\n    return 0;\n  }\n  temp_value_2 = temp_value_2 & 0x80000000;\n  if (temp_value_2 == 0) {\n    temp_value_2 = 0x7fffffff;\n  }\n  return temp_value_2;\n}\n\n",
            "renaming": {
                "FUN_08009278": "extract_and_adjust_08009278",
                "param_1": "temp_value_2",
                "uVar1": "shifted_value",
                "uVar2": "temp_value"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "calculate_floating_point_value_08009318",
            "code": "\nlonglong calculateFloatingPointValue_08009318(uint input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int result;\n  uint exponentDiff;\n  uint mask;\n  bool carry;\n  undefined8 result2;\n  longlong finalValue;\n  \n  mask = (input2 << 1) >> 0x15;\n  exponentDiff = mask - 0x3ff;\n  if ((int)exponentDiff < 0x14) {\n    if ((int)exponentDiff < 0) {\n      result2 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      result = FUN_08008b60((int)result2,(int)((ulonglong)result2 >> 0x20),0,0);\n      finalValue = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          finalValue = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          finalValue = 0;\n        }\n        else {\n          finalValue = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentDiff & 0xff);\n      finalValue = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        result2 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        result = FUN_08008b60((int)result2,(int)((ulonglong)result2 >> 0x20),0,0);\n        finalValue = CONCAT44(input2,input1);\n        if (result != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (exponentDiff & 0xff));\n          }\n          finalValue = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentDiff < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    finalValue = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      result2 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      result = FUN_08008b60((int)result2,(int)((ulonglong)result2 >> 0x20),0,0);\n      finalValue = CONCAT44(input2,input1);\n      if (result != 0) {\n        if (0 < (int)input2) {\n          if (exponentDiff == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            exponentDiff = 1 << (0x34 - exponentDiff & 0xff);\n            carry = CARRY4(exponentDiff,input1);\n            input1 = exponentDiff + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        finalValue = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    finalValue = CONCAT44(input2,input1);\n    if (exponentDiff == 0x400) {\n      finalValue = FUN_080082d4();\n    }\n  }\n  return finalValue;\n}\n\n",
            "renaming": {
                "FUN_08009318": "calculate_floating_point_value_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "iVar1": "result",
                "uVar2": "exponentDiff",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "result2",
                "lVar6": "finalValue"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_number_08009410",
            "code": "\nundefined4 processNumber_08009410(undefined4 input1,uint input2)\n\n{\n  undefined4 result;\n  uint bitmaskResult;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  \n  if (0x3fe921fb < (input2 & 0x7fffffff)) {\n    if ((input2 & 0x7fffffff) < 0x7ff00000) {\n      bitmaskResult = FUN_08009d78(input1,input2,&localVar1);\n      bitmaskResult = bitmaskResult & 3;\n      if (bitmaskResult == 1) {\n        result = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n      else if (bitmaskResult == 2) {\n        result = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n      else if (bitmaskResult == 0) {\n        result = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n      else {\n        result = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n    }\n    else {\n      result = FUN_080082d0(input1,input2,input1,input2);\n    }\n    return result;\n  }\n  result = FUN_0800a348(input1,input2,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_number_08009410",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "bitmaskResult",
                "local_28": "localVar1",
                "uStack_24": "localVar2",
                "local_20": "localVar3",
                "uStack_1c": "localVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_floating_point_value_080094c0",
            "code": "\nlonglong calculateFloatingPointValue_080094c0(uint inputValue,uint inputExponent,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint exponentDifference;\n  uint mask;\n  bool carry;\n  undefined8 tempValue;\n  longlong resultValue;\n  \n  mask = (inputExponent << 1) >> 0x15;\n  exponentDifference = mask - 0x3ff;\n  if ((int)exponentDifference < 0x14) {\n    if ((int)exponentDifference < 0) {\n      tempValue = FUN_080082d4(inputValue,inputExponent,0x8800759c,0x7e37e43c,param_4);\n      result = FUN_08008b60((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0);\n      resultValue = CONCAT44(inputExponent,inputValue);\n      if (result != 0) {\n        if ((int)inputExponent < 0) {\n          if ((inputValue | inputExponent & 0x7fffffff) != 0) {\n            inputExponent = 0xbff00000;\n          }\n          resultValue = (ulonglong)inputExponent << 0x20;\n        }\n        else {\n          resultValue = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentDifference & 0xff);\n      resultValue = CONCAT44(inputExponent,inputValue);\n      if ((inputExponent & mask | inputValue) != 0) {\n        tempValue = FUN_080082d4(inputValue,inputExponent,0x8800759c,0x7e37e43c,param_4);\n        result = FUN_08008b60((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0);\n        resultValue = CONCAT44(inputExponent,inputValue);\n        if (result != 0) {\n          if ((int)inputExponent < 0) {\n            inputExponent = inputExponent + (0x100000 >> (exponentDifference & 0xff));\n          }\n          resultValue = (ulonglong)(inputExponent & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentDifference < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    resultValue = CONCAT44(inputExponent,inputValue);\n    if ((mask & inputValue) != 0) {\n      tempValue = FUN_080082d4(inputValue,inputExponent,0x8800759c,0x7e37e43c,param_4);\n      result = FUN_08008b60((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0);\n      resultValue = CONCAT44(inputExponent,inputValue);\n      if (result != 0) {\n        if ((int)inputExponent < 0) {\n          if (exponentDifference == 0x14) {\n            inputExponent = inputExponent + 1;\n          }\n          else {\n            exponentDifference = 1 << (0x34 - exponentDifference & 0xff);\n            carry = CARRY4(exponentDifference,inputValue);\n            inputValue = exponentDifference + inputValue;\n            if (carry != false) {\n              inputExponent = inputExponent + 1;\n            }\n          }\n        }\n        resultValue = CONCAT44(inputExponent,inputValue & ~mask);\n      }\n    }\n  }\n  else {\n    resultValue = CONCAT44(inputExponent,inputValue);\n    if (exponentDifference == 0x400) {\n      resultValue = FUN_080082d4();\n    }\n  }\n  return resultValue;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_floating_point_value_080094c0",
                "param_1": "inputValue",
                "param_2": "inputExponent",
                "iVar1": "result",
                "uVar2": "exponentDifference",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "tempValue",
                "lVar6": "resultValue"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_with_sign_080095b8",
            "code": "\nint calculateProductWithSign_080095b8(uint input1,uint input2)\n\n{\n  uint carryBit;\n  uint shiftedParam2;\n  uint result;\n  int sign;\n  uint exponentBit;\n  \n  shiftedParam2 = (input2 << 1) >> 0x15;\n  exponentBit = shiftedParam2 - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)exponentBit < 0x14) {\n    if ((int)exponentBit < 0) {\n      if (exponentBit != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (exponentBit & 0xff)) >> (0x14 - exponentBit & 0xff);\n  }\n  else {\n    if (0x1e < exponentBit) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)exponentBit < 0x34) {\n      carryBit = 0x80000000 >> (shiftedParam2 - 0x413 & 0xff);\n      if (carryCheck(carryBit,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftedParam2 - 0x413 & 0xff);\n      if (exponentBit != 0x14) {\n        result = result | carryBit + input1 >> (0x34 - exponentBit & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftedParam2 - 0x413 & 0xff) | input1 << (shiftedParam2 - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_with_sign_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "carryBit",
                "uVar2": "shiftedParam2",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "exponentBit",
                "CARRY4": "carryCheck"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_double_08009654",
            "code": "\nlonglong convertToDouble_08009654(uint integerPart,uint fractionPart)\n\n{\n  uint exponent;\n  uint shiftedValue;\n  longlong result;\n  \n  result = CONCAT44(fractionPart,integerPart);\n  shiftedValue = (fractionPart << 1) >> 0x15;\n  exponent = shiftedValue - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      fractionPart = fractionPart & 0x80000000;\n      if (exponent == 0xffffffff) {\n        fractionPart = fractionPart | 0x3ff00000;\n      }\n      result = (ulonglong)fractionPart << 0x20;\n    }\n    else {\n      shiftedValue = 0xfffff >> (exponent & 0xff);\n      result = CONCAT44(fractionPart,integerPart);\n      if ((fractionPart & shiftedValue | integerPart) != 0) {\n        result = (ulonglong)(fractionPart + (0x80000 >> (exponent & 0xff)) & ~shiftedValue) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    shiftedValue = 0xffffffff >> (shiftedValue - 0x413 & 0xff);\n    if ((integerPart & shiftedValue) != 0) {\n      exponent = 1 << (0x33 - exponent & 0xff);\n      if (CARRY(integerPart,exponent) != false) {\n        fractionPart = fractionPart + 1;\n      }\n      result = CONCAT44(fractionPart,integerPart + exponent & ~shiftedValue);\n    }\n  }\n  else {\n    result = CONCAT44(fractionPart,integerPart);\n    if (exponent == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_double_08009654",
                "param_1": "integerPart",
                "param_2": "fractionPart",
                "uVar1": "exponent",
                "uVar2": "shiftedValue",
                "lVar3": "result",
                "CARRY4": "CARRY"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_floating_point_number_080096e8",
            "code": "\nundefined4 processFloatingPointNumber_080096e8(undefined4 pointerToData,uint floatingPointValue)\n\n{\n  undefined4 result;\n  uint classification;\n  undefined4 buffer1;\n  undefined4 buffer2;\n  undefined4 buffer3;\n  undefined4 buffer4;\n  \n  if (0x3fe921fb < (floatingPointValue & 0x7fffffff)) {\n    if ((floatingPointValue & 0x7fffffff) < 0x7ff00000) {\n      classification = FUN_08009d78(pointerToData,floatingPointValue,&buffer1);\n      classification = classification & 3;\n      if (classification == 1) {\n        result = FUN_0800a348(buffer1,buffer2,buffer3,buffer4);\n      }\n      else if (classification == 2) {\n        result = FUN_0800adf0(buffer1,buffer2,buffer3,buffer4,1);\n      }\n      else if (classification == 0) {\n        result = FUN_0800adf0(buffer1,buffer2,buffer3,buffer4,1);\n      }\n      else {\n        result = FUN_0800a348(buffer1,buffer2,buffer3,buffer4);\n      }\n    }\n    else {\n      result = FUN_080082d0(pointerToData,floatingPointValue,pointerToData,floatingPointValue);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(pointerToData,floatingPointValue,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_floating_point_number_080096e8",
                "param_1": "pointerToData",
                "param_2": "floatingPointValue",
                "uVar1": "result",
                "uVar2": "classification",
                "local_28": "buffer1",
                "uStack_24": "buffer2",
                "local_20": "buffer3",
                "uStack_1c": "buffer4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "extracted_function_08009798",
            "code": "\nlonglong extractedFunction_08009798(uint input1,uint input2,undefined4 unused_param1,undefined4 unused_param2)\n\n{\n  uint shiftedValue;\n  uint shiftedBits;\n  longlong result;\n  \n  shiftedBits = (input2 << 1) >> 0x15;\n  shiftedValue = shiftedBits - 0x3ff;\n  if ((int)shiftedValue < 0x14) {\n    if ((int)shiftedValue < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(0xfffff >> (shiftedValue & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shiftedValue < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (shiftedBits - 0x413 & 0xff)));\n    }\n    if (shiftedValue != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = FUN_080082d4(input1,input2,input1,input2,unused_param2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "extracted_function_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unused_param1",
                "param_4": "unused_param2",
                "uVar1": "shiftedValue",
                "uVar2": "shiftedBits",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint input_param1,uint input_param2,uint input_param3,uint input_param4)\n\n{\n  int temp_variable1;\n  undefined4 temp_variable2;\n  uint temp_variable3;\n  uint temp_variable4;\n  uint temp_variable5;\n  undefined8 temp_variable6;\n  \n  temp_variable4 = input_param4 & 0x7fffffff;\n  if (((temp_variable4 | (-input_param3 | input_param3) >> 0x1f) < 0x7ff00001) &&\n     (temp_variable5 = input_param2 & 0x7fffffff, (temp_variable5 | (-input_param1 | input_param1) >> 0x1f) < 0x7ff00001)) {\n    if ((input_param4 + 0xc0100000 | input_param3) == 0) {\n      temp_variable4 = FUN_0800af78();\n      return temp_variable4;\n    }\n    temp_variable3 = (int)input_param4 >> 0x1e & 2U | input_param2 >> 0x1f;\n    if ((temp_variable5 | input_param1) == 0) {\n      if (temp_variable3 == 2) {\n        input_param1 = 0x54442d18;\n      }\n      else if (temp_variable3 == 3) {\n        input_param1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp_variable4 | input_param3) != 0) {\n        if (temp_variable4 == 0x7ff00000) {\n          temp_variable3 = temp_variable3 - 1;\n          if (temp_variable5 == 0x7ff00000) {\n            if (temp_variable3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp_variable3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp_variable3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp_variable3 * 8);\n          }\n          return 0;\n        }\n        if (temp_variable5 != 0x7ff00000) {\n          temp_variable1 = (int)(temp_variable5 - temp_variable4) >> 0x14;\n          if ((int)(temp_variable5 - temp_variable4) < 0x3d00000) {\n            if (((int)input_param4 < 0) && (temp_variable1 + 0x3c < 0 != SCARRY4(temp_variable1,0x3c))) {\n              temp_variable6 = 0;\n            }\n            else {\n              FUN_08008894(input_param1,input_param2,input_param3,input_param4,input_param4);\n              FUNC_0800b2cc();\n              temp_variable6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp_variable6 = 0x3ff921fb54442d18;\n          }\n          temp_variable2 = (undefined4)((ulonglong)temp_variable6 >> 0x20);\n          temp_variable4 = (uint)temp_variable6;\n          if (temp_variable3 == 1) {\n            return temp_variable4;\n          }\n          if (temp_variable3 == 2) {\n            temp_variable6 = FUN_080082d0(temp_variable4,temp_variable2,0x33145c07,0x3ca1a626);\n            temp_variable4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp_variable6,(int)((ulonglong)temp_variable6 >> 0x20));\n            return temp_variable4;\n          }\n          if (temp_variable3 == 0) {\n            return temp_variable4;\n          }\n          temp_variable6 = FUN_080082d0(temp_variable4,temp_variable2,0x33145c07,0x3ca1a626);\n          temp_variable4 = FUN_080082d0((int)temp_variable6,(int)((ulonglong)temp_variable6 >> 0x20),0x54442d18,0x400921fb);\n          return temp_variable4;\n        }\n      }\n      if ((int)input_param2 < 0) {\n        input_param1 = 0x54442d18;\n      }\n      else {\n        input_param1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input_param1 = FUN_080082d4(input_param3,input_param4,input_param1,input_param2);\n  }\n  return input_param1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "iVar1": "temp_variable1",
                "uVar2": "temp_variable2",
                "uVar3": "temp_variable3",
                "uVar4": "temp_variable4",
                "uVar5": "temp_variable5",
                "uVar6": "temp_variable6"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculateHypotenuse_0800981c(undefined4 side1_length,undefined4 side2_length,undefined4 side3_length,undefined4 side4_length)\n\n{\n  int result;\n  undefined4 *pointer;\n  int *intPointer;\n  undefined8 returnValue;\n  undefined4 pointNumber;\n  char *pointName;\n  undefined4 side1;\n  undefined4 side2;\n  undefined4 side3;\n  undefined4 side4;\n  undefined4 local_38;\n  undefined4 uStack_34;\n  int errorCode;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_0800b2d4();\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side1_length,side2_length);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side3_length,side4_length);\n  if (result == 0) {\n    return returnValue;\n  }\n  pointNumber = 3;\n  pointName = \"hypot\";\n  side1 = side1_length;\n  side2 = side2_length;\n  side3 = side3_length;\n  side4 = side4_length;\n  if (DAT_20000014 == '\\0') {\n    local_38 = 0xe0000000;\n    uStack_34 = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&pointNumber);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    local_38 = 0;\n    uStack_34 = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  pointer = (undefined4 *)FUN_0800b3dc();\n  *pointer = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(uStack_34,local_38);\n  if (errorCode != 0) {\n    intPointer = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(uStack_34,local_38);\n    *intPointer = errorCode;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side1_length",
                "param_2": "side2_length",
                "param_3": "side3_length",
                "param_4": "side4_length",
                "iVar1": "result",
                "puVar2": "pointer",
                "piVar3": "intPointer",
                "uVar4": "returnValue",
                "local_50": "pointNumber",
                "pcStack_4c": "pointName",
                "local_48": "side1",
                "uStack_44": "side2",
                "local_40": "side3",
                "uStack_3c": "side4",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "process_data_080098d0",
            "code": "\nundefined4 processData_080098d0(undefined4 input1,undefined4 input2)\n\n{\n  char flag;\n  undefined4 result;\n  int returnValue;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined4 localVariable1;\n  undefined *localVariable2;\n  undefined4 localVariable3;\n  undefined4 localVariable4;\n  undefined4 localVariable5;\n  undefined4 localVariable6;\n  undefined8 localVariable7;\n  int localReturnValue;\n  \n  result = FUN_0800a1bc();\n  flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (localReturnValue = FUN_08008b74(input1,input2,input1,input2), localReturnValue != 0)) ||\n     (returnValue = FUN_08008b24(input1,input2,0,0), returnValue == 0)) {\n    return result;\n  }\n  localVariable1 = 1;\n  localVariable2 = &DAT_0800be5c;\n  localVariable3 = input1;\n  localVariable4 = input2;\n  localVariable5 = input1;\n  localVariable6 = input2;\n  if (flag == '\\0') {\n    localVariable7 = 0;\nLAB_0800996c:\n    returnValue = FUN_0800b2e0(&localVariable1);\n    if (returnValue != 0) goto joined_r0x0800997a;\n  }\n  else {\n    localVariable7 = FUN_08008894(0,0,0,0);\n    if (flag != '\\x02') goto LAB_0800996c;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x21;\njoined_r0x0800997a:\n  if (localReturnValue != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    *ptr2 = localReturnValue;\n  }\n  return (undefined4)localVariable7;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "process_data_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "flag",
                "uVar2": "result",
                "iVar3": "returnValue",
                "puVar4": "ptr",
                "piVar5": "ptr2",
                "local_50": "localVariable1",
                "local_4c": "localVariable2",
                "local_48": "localVariable3",
                "uStack_44": "localVariable4",
                "local_40": "localVariable5",
                "uStack_3c": "localVariable6",
                "local_38": "localVariable7",
                "local_30": "localReturnValue"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculateResult_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int tempVar1;\n  undefined4 tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  uint tempVar5;\n  undefined8 tempVar6;\n  \n  tempVar4 = input4 & 0x7fffffff;\n  if (((tempVar4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (tempVar5 = input2 & 0x7fffffff, (tempVar5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      tempVar4 = FUN_0800af78();\n      return tempVar4;\n    }\n    tempVar3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((tempVar5 | input1) == 0) {\n      if (tempVar3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (tempVar3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((tempVar4 | input3) != 0) {\n        if (tempVar4 == 0x7ff00000) {\n          tempVar3 = tempVar3 - 1;\n          if (tempVar5 == 0x7ff00000) {\n            if (tempVar3 < 3) {\n              return *(uint *)(&DAT_0800be68 + tempVar3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (tempVar3 < 3) {\n            return *(uint *)(&DAT_0800be80 + tempVar3 * 8);\n          }\n          return 0;\n        }\n        if (tempVar5 != 0x7ff00000) {\n          tempVar1 = (int)(tempVar5 - tempVar4) >> 0x14;\n          if ((int)(tempVar5 - tempVar4) < 0x3d00000) {\n            if (((int)input4 < 0) && (tempVar1 + 0x3c < 0 != SCARRY4(tempVar1,0x3c))) {\n              tempVar6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              tempVar6 = FUN_0800af78();\n            }\n          }\n          else {\n            tempVar6 = 0x3ff921fb54442d18;\n          }\n          tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n          tempVar4 = (uint)tempVar6;\n          if (tempVar3 == 1) {\n            return tempVar4;\n          }\n          if (tempVar3 == 2) {\n            tempVar6 = FUN_080082d0(tempVar4,tempVar2,0x33145c07,0x3ca1a626);\n            tempVar4 = FUN_080082d0(0x54442d18,0x400921fb,(int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20));\n            return tempVar4;\n          }\n          if (tempVar3 == 0) {\n            return tempVar4;\n          }\n          tempVar6 = FUN_080082d0(tempVar4,tempVar2,0x33145c07,0x3ca1a626);\n          tempVar4 = FUN_080082d0((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),0x54442d18,0x400921fb);\n          return tempVar4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_result_08009b24",
            "code": "\nuint calculate_result_08009b24(uint first_parameter,uint second_parameter,uint third_parameter,uint fourth_parameter)\n\n{\n  undefined4 result;\n  int temp_variable_1;\n  uint result;\n  int temp_variable_2;\n  undefined4 result;\n  int temp_variable_3;\n  uint result;\n  undefined4 temp_variable_4;\n  undefined4 temp_variable_5;\n  undefined8 result;\n  undefined8 result;\n  undefined8 result;\n  undefined8 result;\n  int local_variable;\n  \n  second_parameter = second_parameter & 0x7fffffff;\n  fourth_parameter = fourth_parameter & 0x7fffffff;\n  result = first_parameter;\n  result = second_parameter;\n  if (second_parameter < fourth_parameter) {\n    result = third_parameter;\n    third_parameter = first_parameter;\n    result = fourth_parameter;\n    fourth_parameter = second_parameter;\n  }\n  if (0x3c00000 < (int)(result - fourth_parameter)) {\n    result = FUN_080082d4(result,result,third_parameter,fourth_parameter);\n    return result;\n  }\n  if (result < 0x5f300001) {\n    local_variable = 0;\n  }\n  else {\n    if (0x7fefffff < result) {\n      if ((result & 0xfffff | result) != 0) {\n        result = FUN_080082d4(result,result,third_parameter,fourth_parameter);\n      }\n      if ((fourth_parameter ^ 0x7ff00000 | third_parameter) != 0) {\n        return result;\n      }\n      return third_parameter;\n    }\n    result = result + 0xda800000;\n    fourth_parameter = fourth_parameter + 0xda800000;\n    local_variable = 600;\n  }\n  result = CONCAT44(result,result);\n  result = CONCAT44(fourth_parameter,third_parameter);\n  if ((int)fourth_parameter < 0x20b00000) {\n    if ((int)fourth_parameter < 0x100000) {\n      if ((fourth_parameter | third_parameter) == 0) {\n        return result;\n      }\n      result = FUN_08008640(third_parameter,fourth_parameter,0,0x7fd00000);\n      result = FUN_08008640(result,result,0,0x7fd00000);\n      local_variable = local_variable + -0x3fe;\n    }\n    else {\n      result = result + 0x25800000;\n      result = CONCAT44(result,result);\n      fourth_parameter = fourth_parameter + 0x25800000;\n      result = CONCAT44(fourth_parameter,third_parameter);\n      local_variable = local_variable + -600;\n    }\n  }\n  temp_variable_5 = (undefined4)((ulonglong)result >> 0x20);\n  temp_variable_4 = (undefined4)result;\n  temp_variable_3 = (int)((ulonglong)result >> 0x20);\n  result = (undefined4)result;\n  result = FUN_080082d0(temp_variable_4,temp_variable_5,result,temp_variable_3);\n  temp_variable_2 = (int)((ulonglong)result >> 0x20);\n  result = (undefined4)result;\n  temp_variable_1 = FUN_08008b24(result,temp_variable_3,result,temp_variable_2);\n  if (temp_variable_1 == 0) {\n    result = FUN_08008640(0,fourth_parameter,0);\n    result = FUN_08008640(result,temp_variable_2 + -0x80000000,result,temp_variable_2);\n    result = FUN_080082d4(temp_variable_4,temp_variable_5,temp_variable_4,temp_variable_5);\n    result = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),0,result + 0x100000);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),result,temp_variable_3);\n    result = FUN_080082d0(result,temp_variable_3,0,fourth_parameter);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0,result + 0x100000);\n    result = FUN_080082d4((int)result,(int)((ulonglong)result >> 0x20),(int)result,\n                          (int)((ulonglong)result >> 0x20));\n    result = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),(int)result,\n                          (int)((ulonglong)result >> 0x20));\n    FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),(int)result,\n                 (int)((ulonglong)result >> 0x20));\n    result = FUN_0800a1bc();\n  }\n  else {\n    result = FUN_08008640(0,result,0,result);\n    result = FUN_08008640(result,temp_variable_3 + -0x80000000,result,temp_variable_3);\n    result = FUN_080082d4(temp_variable_4,temp_variable_5,0,result);\n    result = FUN_080082d0(temp_variable_4,temp_variable_5,0,result);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),(int)result,\n                          (int)((ulonglong)result >> 0x20));\n    result = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),(int)result,\n                          (int)((ulonglong)result >> 0x20));\n    FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),(int)result,\n                 (int)((ulonglong)result >> 0x20));\n    result = FUN_0800a1bc();\n  }\n  result = (uint)result;\n  if (local_variable != 0) {\n    result = FUN_08008640(result,(int)((ulonglong)result >> 0x20),0,local_variable * 0x100000 + 0x3ff00000);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "first_parameter",
                "param_2": "second_parameter",
                "param_3": "third_parameter",
                "param_4": "fourth_parameter",
                "uVar1": "result",
                "iVar2": "temp_variable_1",
                "uVar3": "result",
                "iVar4": "temp_variable_2",
                "uVar5": "result",
                "iVar6": "temp_variable_3",
                "uVar7": "result",
                "uVar8": "temp_variable_4",
                "uVar9": "temp_variable_5",
                "uVar10": "result",
                "uVar11": "result",
                "uVar12": "result",
                "uVar13": "result",
                "local_3c": "local_variable"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_result_08009d78",
            "code": "\nint calculateResult_08009d78(undefined4 input1,uint input2,undefined8 *result)\n\n{\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  uint var8;\n  int iteration;\n  undefined8 temp1;\n  undefined8 temp2;\n  undefined8 temp3;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  undefined8 localVar5;\n  \n  var8 = input2 & 0x7fffffff;\n  if (var8 < 0x3fe921fc) {\n    *(undefined4 *)result = input1;\n    *(uint *)((int)result + 4) = input2;\n    *(undefined4 *)(result + 1) = 0;\n    *(undefined4 *)((int)result + 0xc) = 0;\n    return 0;\n  }\n  if (var8 < 0x4002d97c) {\n    if ((int)input2 < 1) {\n      temp1 = FUN_080082d4(input1,input2,0x54400000,0x3ff921fb);\n      var3 = (undefined4)((ulonglong)temp1 >> 0x20);\n      var1 = (undefined4)temp1;\n      if (var8 != 0x3ff921fb) {\n        temp1 = FUN_080082d4(var1,var3,0x1a626331,0x3dd0b461);\n        *result = temp1;\n        temp1 = FUN_080082d0(var1,var3);\n        temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x1a626331,0x3dd0b461);\n        result[1] = temp1;\n        return -1;\n      }\n      temp1 = FUN_080082d4(var1,var3,0x1a600000,0x3dd0b461);\n      var1 = (undefined4)((ulonglong)temp1 >> 0x20);\n      temp2 = FUN_080082d4((int)temp1,var1,0x2e037073,0x3ba3198a);\n      *result = temp2;\n      temp1 = FUN_080082d0((int)temp1,var1);\n      temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x2e037073,0x3ba3198a);\n      result[1] = temp1;\n      return -1;\n    }\n    temp1 = FUN_080082d0();\n    var3 = (undefined4)((ulonglong)temp1 >> 0x20);\n    var1 = (undefined4)temp1;\n    if (var8 != 0x3ff921fb) {\n      temp1 = FUN_080082d0(var1,var3,0x1a626331,0x3dd0b461);\n      *result = temp1;\n      temp1 = FUN_080082d0(var1,var3);\n      temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x1a626331,0x3dd0b461);\n      result[1] = temp1;\n      return 1;\n    }\n    temp1 = FUN_080082d0(var1,var3,0x1a600000,0x3dd0b461);\n    var1 = (undefined4)((ulonglong)temp1 >> 0x20);\n    temp2 = FUN_080082d0((int)temp1,var1,0x2e037073,0x3ba3198a);\n    *result = temp2;\n    temp1 = FUN_080082d0((int)temp1,var1);\n    temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x2e037073,0x3ba3198a);\n    result[1] = temp1;\n    return 1;\n  }\n  if (0x413921fb < var8) {\n    if (0x7fefffff < var8) {\n      temp1 = FUN_080082d0(input1,input2,input1,input2);\n      result[1] = temp1;\n      *result = temp1;\n      return 0;\n    }\n    iteration = ((int)var8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    temp1 = FUN_080082d0(input1,var8 + iteration * -0x100000,(int)localVar3,\n                          (int)((ulonglong)localVar3 >> 0x20));\n    temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar4 = FUN_0800856c();\n    temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    localVar5 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar5,(int)((ulonglong)localVar5 >> 0x20),0,0);\n    iteration = FUN_0800a5a0(&localVar3,result,iteration);\n    if (-1 < (int)input2) {\n      return iteration;\n    }\n    *(int *)((int)result + 4) = *(int *)((int)result + 4) + -0x80000000;\n    *(int *)((int)result + 0xc) = *(int *)((int)result + 0xc) + -0x80000000;\n    return -iteration;\n  }\n  temp1 = FUNC_0800b2cc();\n  var3 = (undefined4)((ulonglong)temp1 >> 0x20);\n  temp2 = FUN_08008640((int)temp1,var3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp2,(int)((ulonglong)temp2 >> 0x20),0,0x3fe00000);\n  iteration = FUN_08008ba0();\n  temp2 = FUN_0800856c();\n  var4 = (undefined4)((ulonglong)temp2 >> 0x20);\n  var1 = (undefined4)temp2;\n  temp2 = FUN_08008640(var1,var4,0x54400000,0x3ff921fb);\n  temp1 = FUN_080082d0((int)temp1,var3,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  var5 = (undefined4)((ulonglong)temp1 >> 0x20);\n  var3 = (undefined4)temp1;\n  temp2 = FUN_08008640(var1,var4,0x1a626331,0x3dd0b461);\n  if ((0x1f < iteration) || (*(uint *)(&DAT_0800be98 + (iteration + -1) * 4) == var8)) {\n    temp3 = FUN_080082d0(var3,var5,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    if ((int)((var8 >> 0x14) - ((uint)((int)((ulonglong)temp3 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp2 = FUN_08008640(var1,var4,0x1a600000,0x3dd0b461);\n    var6 = (undefined4)((ulonglong)temp2 >> 0x20);\n    temp1 = FUN_080082d0(var3,var5,(int)temp2,var6);\n    var7 = (undefined4)((ulonglong)temp1 >> 0x20);\n    var2 = (undefined4)temp1;\n    temp3 = FUN_080082d0(var3,var5,var2,var7);\n    temp2 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp2,var6);\n    temp3 = FUN_08008640(var1,var4,0x2e037073,0x3ba3198a);\n    temp2 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp2,\n                          (int)((ulonglong)temp2 >> 0x20));\n    temp3 = FUN_080082d0(var2,var7,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    if ((int)(((int)var8 >> 0x14) - ((uint)((int)((ulonglong)temp3 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp2 = FUN_08008640(var1,var4,0x2e000000,0x3ba3198a);\n    var3 = (undefined4)((ulonglong)temp2 >> 0x20);\n    temp1 = FUN_080082d0(var2,var7,(int)temp2,var3);\n    temp3 = FUN_080082d0(var2,var7);\n    temp2 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp2,var3);\n    temp3 = FUN_08008640(var1,var4,0x252049c1,0x397b839a);\n    temp2 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp2,\n                          (int)((ulonglong)temp2 >> 0x20));\n  }\n  temp3 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                        (int)((ulonglong)temp2 >> 0x20));\nLAB_0800a0ce:\n  localVar2 = (undefined4)((ulonglong)temp1 >> 0x20);\n  localVar1 = (undefined4)temp1;\n  *result = temp3;\n  temp1 = FUN_080082d0(localVar1,localVar2);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                        (int)((ulonglong)temp2 >> 0x20));\n  result[1] = temp1;\n  if ((int)input2 < 0) {\n    *(int *)result = (int)temp3;\n    *(int *)((int)result + 4) = (int)((ulonglong)temp3 >> 0x20) + -0x80000000;\n    *(int *)(result + 1) = (int)temp1;\n    *(int *)((int)result + 0xc) = (int)((ulonglong)temp1 >> 0x20) + -0x80000000;\n    iteration = -iteration;\n  }\n  return iteration;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_result_08009d78",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "result",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "uVar8": "var8",
                "iVar9": "iteration",
                "uVar10": "temp1",
                "uVar11": "temp2",
                "uVar12": "temp3",
                "local_50": "localVar1",
                "uStack_4c": "localVar2",
                "local_40": "localVar3",
                "local_38": "localVar4",
                "local_30": "localVar5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_result_0800a1bc",
            "code": "\nuint calculateResult_0800a1bc(uint input1,uint input2)\n\n{\n  uint shiftAmount;\n  int iterationCount;\n  uint tempVar;\n  undefined4 tempVar2;\n  uint bitmask;\n  uint HALF;\n  uint remainder;\n  uint comparison;\n  uint shiftedInput1;\n  int shiftedBits;\n  uint updatedInput1;\n  uint count;\n  undefined8 internalResult;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    internalResult = FUN_08008640(input1,input2,input1,input2);\n    remainder = FUN_080082d4((int)internalResult,(int)((ulonglong)internalResult >> 0x20),input1,input2);\n    return remainder;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      internalResult = FUN_080082d0(input1,input2,input1);\n      tempVar2 = (undefined4)((ulonglong)internalResult >> 0x20);\n      remainder = FUN_08008894((int)internalResult,tempVar2,(int)internalResult,tempVar2);\n      return remainder;\n    }\n    do {\n      shiftedInput1 = input1;\n      remainder = shiftedInput1 >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = shiftedInput1 << 0x15;\n    } while (remainder == 0);\n    shiftAmount = input2;\n    if (-1 < (int)shiftedInput1) goto LAB_0800a290;\n    count = 0x20;\n    bitmask = 0xffffffff;\n    shiftedInput1 = input1;\n  }\n  else {\n    shiftAmount = (int)input2 >> 0x14;\n    remainder = input2;\n    shiftedInput1 = input1;\n    if (shiftAmount != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    shiftedInput1 = 0;\n    count = remainder;\n    do {\n      bitmask = shiftedInput1;\n      remainder = count << 1;\n      shiftedBits = count << 0xc;\n      shiftedInput1 = bitmask + 1;\n      count = remainder;\n    } while (-1 < shiftedBits);\n    count = 0x20 - shiftedInput1;\n    input2 = shiftAmount;\n    shiftedInput1 = input1 << (shiftedInput1 & 0xff);\n  }\n  remainder = input1 >> (count & 0xff) | remainder;\n  shiftAmount = input2 - bitmask;\nLAB_0800a1da:\n  remainder = remainder & 0xfffff | 0x100000;\n  if (-1 < (int)(shiftAmount << 0x1f)) {\n    remainder = remainder * 2 - ((int)shiftedInput1 >> 0x1f);\n    shiftedInput1 = shiftedInput1 << 1;\n  }\n  count = 0;\n  remainder = remainder * 2 - ((int)shiftedInput1 >> 0x1f);\n  shiftedInput1 = shiftedInput1 << 1;\n  shiftAmount = 0;\n  shiftedBits = 0x16;\n  bitmask = 0x200000;\n  do {\n    iterationCount = shiftAmount + bitmask;\n    if (iterationCount <= (int)remainder) {\n      remainder = remainder - iterationCount;\n      shiftAmount = iterationCount + bitmask;\n      count = count + bitmask;\n    }\n    shiftedBits = shiftedBits + -1;\n    remainder = remainder * 2 - ((int)shiftedInput1 >> 0x1f);\n    bitmask = bitmask >> 1;\n    shiftedInput1 = shiftedInput1 << 1;\n  } while (shiftedBits != 0);\n  iterationCount = 0x20;\n  HALF = 0x80000000;\n  shiftedBits = 0;\n  bitmask = 0;\n  do {\n    tempVar = HALF + shiftedBits;\n    updatedInput1 = shiftAmount;\n    if ((int)shiftAmount < (int)remainder) {\n      if ((int)tempVar < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(tempVar + HALF)) {\n          updatedInput1 = shiftAmount + 1;\n        }\n      }\n      comparison = remainder - shiftAmount;\n      shiftAmount = updatedInput1;\n      if (shiftedInput1 < tempVar) {\n        comparison = comparison - 1;\n      }\nLAB_0800a262:\n      shiftedBits = tempVar + HALF;\n      shiftedInput1 = shiftedInput1 - tempVar;\n      bitmask = bitmask + HALF;\n      remainder = comparison;\n    }\n    else if ((remainder == shiftAmount) && (tempVar <= shiftedInput1)) {\n      if ((int)tempVar < 0) goto LAB_0800a26a;\n      comparison = 0;\n      shiftAmount = remainder;\n      goto LAB_0800a262;\n    }\n    iterationCount = iterationCount + -1;\n    HALF = HALF >> 1;\n    remainder = remainder * 2 - ((int)shiftedInput1 >> 0x1f);\n    shiftedInput1 = shiftedInput1 << 1;\n    if (iterationCount == 0) {\n      if ((remainder | shiftedInput1) == 0) {\n        bitmask = bitmask >> 1;\n      }\n      else if (bitmask == 0xffffffff) {\n        count = count + 1;\n        bitmask = 0;\n      }\n      else {\n        bitmask = bitmask + 1 >> 1;\n      }\n      if ((count & 1) != 0) {\n        bitmask = bitmask | 0x80000000;\n      }\n      return bitmask;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_result_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftAmount",
                "iVar2": "iterationCount",
                "uVar3": "tempVar",
                "uVar4": "tempVar2",
                "uVar5": "bitmask",
                "uVar6": "HALF",
                "uVar7": "remainder",
                "uVar8": "comparison",
                "uVar9": "shiftedInput1",
                "uVar11": "updatedInput1",
                "uVar12": "count",
                "uVar13": "internalResult",
                "iVar10": "shiftedBits"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculate_result_0800a348(undefined4 input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  uint abs_input2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  undefined4 local1;\n  undefined4 local2;\n  undefined4 local3;\n  undefined4 local4;\n  \n  abs_input2 = input2 & 0x7fffffff;\n  if (abs_input2 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    temp3 = FUN_08008640(input1,input2,input1,input2);\n    temp2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    temp4 = FUN_08008640(temp1,temp2,0xbe8838d4,0xbda8fae9);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x16c15177,0x3f56c16c);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x5555554c,0x3fa55555);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n  }\n  else {\n    temp3 = FUN_08008640(input1,input2,input1,input2);\n    temp2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    temp4 = FUN_08008640(temp1,temp2,0xbe8838d4,0xbda8fae9);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x16c15177,0x3f56c16c);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x5555554c,0x3fa55555);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    if (0x3fd33332 < abs_input2) {\n      if (abs_input2 < 0x3fe90001) {\n        result = abs_input2 - 0x200000;\n        temp3 = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        temp3 = 0x3fe7000000000000;\n      }\n      local4 = (undefined4)((ulonglong)temp3 >> 0x20);\n      local3 = (undefined4)temp3;\n      temp3 = FUN_08008640(temp1,temp2,0,0x3fe00000);\n      temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,result);\n      temp4 = FUN_08008640(temp1,temp2,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      temp5 = FUN_08008640(input1,input2,input3,input4);\n      temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                           (int)((ulonglong)temp5 >> 0x20));\n      temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                           (int)((ulonglong)temp4 >> 0x20));\n      temp1 = FUN_080082d0(local3,local4,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      return temp1;\n    }\n  }\n  local2 = (undefined4)((ulonglong)temp4 >> 0x20);\n  local1 = (undefined4)temp4;\n  temp1 = (undefined4)((ulonglong)temp3 >> 0x20);\n  temp4 = FUN_08008640((int)temp3,temp1,0,0x3fe00000);\n  temp3 = FUN_08008640((int)temp3,temp1,local1,local2);\n  temp5 = FUN_08008640(input1,input2,input3,input4);\n  temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp5,\n                       (int)((ulonglong)temp5 >> 0x20));\n  temp3 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp3,\n                       (int)((ulonglong)temp3 >> 0x20));\n  temp1 = FUN_080082d0(0,0x3ff00000,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "abs_input2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "local_30": "local1",
                "uStack_2c": "local2",
                "local_28": "local3",
                "uStack_24": "local4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int inputSize,undefined8 *inputArray,int param3,int param4,int param5,int param6)\n\n{\n  undefined4 *pointer1;\n  uint result;\n  uint tempResult;\n  int index1;\n  uint *pointer2;\n  undefined4 tempVar1;\n  uint **pointerArray1;\n  undefined4 tempVar2;\n  int index4;\n  undefined4 *pointer6;\n  undefined4 tempVar3;\n  uint tempVar4;\n  uint *pointer4;\n  int index3;\n  int var1;\n  undefined8 *pointer5;\n  int var2;\n  undefined4 *pointer18;\n  undefined8 *pointer19;\n  undefined4 result0;\n  int var3;\n  undefined8 *pointer7;\n  undefined4 *pointer8;\n  bool flag1;\n  undefined8 tempVar5;\n  undefined8 tempVar6;\n  undefined8 tempVar7;\n  undefined8 *localArray1;\n  int localVar1;\n  int localVar2;\n  int localVar3;\n  uint *localArray2 [2];\n  uint localArray3 [20];\n  undefined8 stackVar1;\n  undefined8 localVar4;\n  int localArray4 [38];\n  undefined8 stackVar2;\n  \n  var1 = *(int *)(&DAT_0800c060 + param5 * 4);\n  index4 = param4 + -1;\n  localArray2[1] = (uint *)inputArray;\n  if (param3 + 0x14 < 0 == SCARRY4(param3,0x14)) {\n    localVar3 = (param3 + -3) / 0x18;\n    localVar2 = (localVar3 + 1) * -0x18;\n  }\n  else {\n    localVar2 = -0x18;\n    localVar3 = 0;\n  }\n  localVar2 = param3 + localVar2;\n  var2 = localVar3 - index4;\n  if (-1 < var1 + index4) {\n    var3 = var1 + index4 + 1 + var2;\n    pointer5 = &stackVar1;\n    do {\n      while (var2 < 0) {\n        var2 = var2 + 1;\n        *(undefined4 *)pointer5 = 0;\n        *(undefined4 *)((int)pointer5 + 4) = 0;\n        pointer5 = pointer5 + 1;\n        if (var2 == var3) goto LAB_0800a626;\n      }\n      tempVar6 = FUN_0800856c(*(undefined4 *)(param6 + var2 * 4));\n      var2 = var2 + 1;\n      *pointer5 = tempVar6;\n      pointer5 = pointer5 + 1;\n    } while (var2 != var3);\n  }\nLAB_0800a626:\n  pointer6 = (undefined4 *)(inputSize + -8);\n  if (-1 < var1) {\n    pointer7 = &stackVar1 + param4;\n    var2 = index4;\n    pointer5 = &stackVar2;\n    do {\n      if (index4 < 0) {\n        tempVar6 = 0;\n      }\n      else {\n        tempVar6 = 0;\n        pointer8 = pointer6;\n        pointer19 = pointer7;\n        do {\n          pointer18 = pointer8 + 2;\n          tempVar5 = FUN_08008640(*pointer18,pointer8[3],*(undefined4 *)(pointer19 + -1),\n                                *(undefined4 *)((int)pointer19 + -4));\n          tempVar6 = FUN_080082d4((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),(int)tempVar5,\n                                (int)((ulonglong)tempVar5 >> 0x20));\n          pointer8 = pointer18;\n          pointer19 = pointer19 + -1;\n        } while (pointer18 != pointer6 + param4 * 2);\n      }\n      var2 = var2 + 1;\n      *pointer5 = tempVar6;\n      pointer7 = pointer7 + 1;\n      pointer5 = pointer5 + 1;\n    } while (var2 != var1 + param4);\n  }\n  localArray2[0] = localArray3 + var1 + -1;\n  var2 = var1;\n  do {\n    tempVar6 = CONCAT44(*(undefined4 *)((int)&stackVar2 + var2 * 8 + 4),\n                      *(undefined4 *)(&stackVar2 + var2));\n    if (0 < var2) {\n      pointer5 = &stackVar2 + var2;\n      pointer2 = localArray3;\n      do {\n        tempVar1 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n        FUN_08008640((int)tempVar6,tempVar1,0,0x3e700000);\n        FUN_08008ba0();\n        tempVar5 = FUN_0800856c();\n        tempVar2 = (undefined4)((ulonglong)tempVar5 >> 0x20);\n        tempVar7 = FUN_08008640((int)tempVar5,tempVar2,0,0x41700000);\n        FUN_080082d0((int)tempVar6,tempVar1,(int)tempVar7,(int)((ulonglong)tempVar7 >> 0x20));\n        result = FUN_08008ba0();\n        pointer7 = pointer5 + -1;\n        tempVar1 = *(undefined4 *)pointer7;\n        tempVar3 = *(undefined4 *)((int)pointer5 + -4);\n        *pointer2 = result;\n        tempVar6 = FUN_080082d4((int)tempVar5,tempVar2,tempVar1,tempVar3);\n        pointer5 = pointer7;\n        pointer2 = pointer2 + 1;\n      } while (pointer7 != &stackVar2);\n    }\n    tempVar6 = FUN_0800b2e8((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),localVar2);\n    tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n    FUN_08008640((int)tempVar6,tempVar2,0,0x3fc00000);\n    tempVar5 = FUN_080094c0();\n    tempVar5 = FUN_08008640((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),0,0x40200000);\n    tempVar6 = FUN_080082d0((int)tempVar6,tempVar2,(int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20));\n    result = FUN_08008ba0();\n    tempVar5 = FUN_0800856c();\n    tempVar6 = FUN_080082d0((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),(int)tempVar5,\n                          (int)((ulonglong)tempVar5 >> 0x20));\n    tempVar1 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n    tempVar2 = (undefined4)tempVar6;\n    if (localVar2 < 1) {\n      if (localVar2 == 0) {\n        var3 = (int)localArray3[var2 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      var3 = FUN_08008b4c(tempVar2,tempVar1,0,0x3fe00000);\n      if (var3 != 0) {\n        result = result + 1;\n        if (var2 < 1) {\n          tempVar6 = FUN_080082d0(0,0x3ff00000,tempVar2,tempVar1);\n          var3 = 2;\n          goto LAB_0800a7a4;\n        }\n        var3 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      index1 = (int)localArray3[var2 + -1] >> (0x18U - localVar2 & 0xff);\n      tempVar4 = localArray3[var2 + -1] - (index1 << (0x18U - localVar2 & 0xff));\n      var3 = (int)tempVar4 >> (0x17U - localVar2 & 0xff);\n      localArray3[var2 + -1] = tempVar4;\n      result = result + index1;\njoined_r0x0800a8b8:\n      if (0 < var3) {\n        result = result + 1;\n        if (var2 < 1) {\n          flag1 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (localArray3[0] == 0) {\n            flag1 = false;\n            if (var2 != 1) {\n              pointer2 = localArray3;\n              index1 = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  index3 = index1 + 1;\n                  tempVar4 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                index1 = index1 + 1;\n              } while (index1 != var2);\n              flag1 = false;\n            }\n          }\n          else {\n            index3 = 1;\n            index1 = 0;\n            tempVar4 = localArray3[0];\nLAB_0800a8e2:\n            localArray3[index1] = 0x1000000 - tempVar4;\n            if (index3 < var2) {\n              tempVar4 = localArray3[index3];\n              pointer2 = localArray3 + index3;\n              while( true ) {\n                pointer4 = pointer2 + 1;\n                *pointer2 = 0xffffff - tempVar4;\n                if (pointer4 == localArray3 + var2) break;\n                tempVar4 = *pointer4;\n                pointer2 = pointer4;\n              }\n            }\n            flag1 = true;\n          }\n        }\n        if (0 < localVar2) {\n          if (localVar2 == 1) {\n            localArray3[var2 + -1] = localArray3[var2 + -1] & 0x7fffff;\n          }\n          else if (localVar2 == 2) {\n            localArray3[var2 + -1] = localArray3[var2 + -1] & 0x3fffff;\n          }\n        }\n        if (var3 == 2) {\n          tempVar6 = FUN_080082d0(0,0x3ff00000,tempVar2,tempVar1);\n          if (flag1) {\n            tempVar5 = FUN_0800b2e8(0,0x3ff00000,localVar2);\n            tempVar6 = FUN_080082d0((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),(int)tempVar5,\n                                  (int)((ulonglong)tempVar5 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n    index1 = FUN_08008b10((int)tempVar6,tempVar2,0,0);\n    if (index1 == 0) {\n      tempVar6 = FUN_0800b2e8((int)tempVar6,tempVar2,-localVar2);\n      tempVar1 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n      tempVar2 = (undefined4)tempVar6;\n      index4 = FUN_08008b4c(tempVar2,tempVar1,0,0x41700000);\n      if (index4 == 0) {\n        tempVar4 = FUN_08008ba0(tempVar2,tempVar1);\n        localArray3[var2] = tempVar4;\n        index1 = var2;\n      }\n      else {\n        FUN_08008640(tempVar2,tempVar1,0,0x3e700000);\n        tempVar4 = FUN_08008ba0();\n        tempVar6 = FUN_0800856c();\n        tempVar6 = FUN_08008640((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),0,0x41700000);\n        FUN_080082d0(tempVar2,tempVar1,(int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20));\n        tempResult = FUN_08008ba0();\n        localVar2 = localVar2 + 0x18;\n        localArray3[var2] = tempResult;\n        localArray3[var2 + 1] = tempVar4;\n        index1 = var2 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    index1 = var2 + -1;\n    if (var1 <= index1) {\n      tempVar4 = 0;\n      pointer2 = localArray3 + var2 + 0x3fffffff;\n      do {\n        pointer4 = pointer2 + -1;\n        tempVar4 = tempVar4 | *pointer2;\n        pointer2 = pointer4;\n      } while (pointer4 != localArray2[0]);\n      if (tempVar4 != 0) break;\n    }\n    if (localArray3[var1 + -1] == 0) {\n      localVar1 = 1;\n      pointerArray1 = localArray2 + var1;\n      do {\n        pointer2 = *pointerArray1;\n        localVar1 = localVar1 + 1;\n        pointerArray1 = pointerArray1 + -1;\n      } while (pointer2 == (uint *)0x0);\n      localVar1 = var2 + localVar1;\n    }\n    else {\n      localVar1 = var2 + 1;\n    }\n    var3 = var2 + 1;\n    pointer8 = (undefined4 *)(param6 + (var3 + localVar3 + 0x3fffffff) * 4);\n    pointer5 = &stackVar1 + var2 + param4;\n    localArray1 = &stackVar2 + var3;\n    do {\n      pointer8 = pointer8 + 1;\n      tempVar6 = FUN_0800856c(*pointer8);\n      *pointer5 = tempVar6;\n      pointer7 = pointer5 + 1;\n      if (index4 < 0) {\n        tempVar5 = 0;\n      }\n      else {\n        tempVar5 = 0;\n        pointer18 = pointer6;\n        while( true ) {\n          pointer5 = pointer5 + -1;\n          pointer1 = pointer18 + 2;\n          tempVar6 = FUN_08008640((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),*pointer1,pointer18[3]);\n          tempVar5 = FUN_080082d4((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),(int)tempVar6,\n                                (int)((ulonglong)tempVar6 >> 0x20));\n          if (pointer1 == pointer6 + param4 * 2) break;\n          tempVar6 = *pointer5;\n          pointer18 = pointer1;\n        }\n      }\n      *localArray1 = tempVar5;\n      var3 = var3 + 1;\n      var2 = localVar1;\n      pointer5 = pointer7;\n      localArray1 = localArray1 + 1;\n    } while (var3 <= localVar1);\n  } while( true );\n  localVar2 = localVar2 + -0x18;\n  if (localArray3[index1] == 0) {\n    pointer2 = localArray3 + var2 + 0x3ffffffe;\n    do {\n      tempVar4 = *pointer2;\n      index1 = index1 + -1;\n      localVar2 = localVar2 + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (tempVar4 == 0);\n  }\nLAB_0800a9f6:\n  tempVar6 = FUN_0800b2e8(0,0x3ff00000,localVar2);\n  if (index1 < 0) {\n    if (2 < param5) {\n      if (param5 == 3) {\n        tempVar6 = 0;\nLAB_0800abe4:\n        if (var3 == 0) {\n          *localArray2[1] = (undefined4)localVar4;\n          *(int *)((int)localArray2[1] + 4) = localVar4._4_4_;\n          *(undefined8 *)((int)localArray2[1] + 0x10) = tempVar6;\n          *(int *)((int)localArray2[1] + 8) = localArray4[0];\n          *(int *)((int)localArray2[1] + 0xc) = localArray4[1];\n          return result & 7;\n        }\n        *(int *)((int)localArray2[1] + 0x10) = (int)tempVar6;\n        *(int *)((int)localArray2[1] + 8) = localArray4[0];\n        *(int *)((int)localArray2[1] + 0x14) = (int)((ulonglong)tempVar6 >> 0x20) + -0x80000000;\n        *(int *)((int)localArray2[1] + 4) = localVar4._4_4_ + -0x80000000;\n        *(int *)((int)localArray2[1] + 0xc) = localArray4[1] + -0x80000000;\n        *localArray2[1] = (undefined4)localVar4;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param5 < 1) {\n      if (param5 != 0) goto LAB_0800ab0e;\n      tempVar6 = 0;\nLAB_0800aafc:\n      index4 = (int)((ulonglong)tempVar6 >> 0x20);\n      if (var3 != 0) {\n        index4 = index4 + -0x80000000;\n      }\n      *localArray2[1] = (int)tempVar6;\n      *(int *)((int)localArray2[1] + 4) = index4;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    tempVar6 = 0;\n  }\n  else {\n    pointer7 = &stackVar2 + index1;\n    pointer2 = localArray3 + index1 + 1;\n    pointer5 = &stackVar2 + index1 + 1;\n    do {\n      tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n      pointer2 = pointer2 + -1;\n      tempVar5 = FUN_0800856c(*pointer2);\n      tempVar5 = FUN_08008640((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),(int)tempVar6,tempVar2);\n      pointer5 = pointer5 + -1;\n      *pointer5 = tempVar5;\n      tempVar6 = FUN_08008640((int)tempVar6,tempVar2,0,0x3e700000);\n    } while (pointer2 != localArray3);\n    index4 = 0;\n    do {\n      if (var1 < 0) {\n        tempVar6 = 0;\n      }\n      else {\n        tempVar2 = 0x40000000;\n        tempVar1 = 0x3ff921fb;\n        tempVar6 = 0;\n        var2 = 0;\n        pointer5 = pointer7;\n        pointer6 = &DAT_0800c028;\n        while( true ) {\n          tempVar5 = FUN_08008640(*(undefined4 *)pointer5,*(undefined4 *)((int)pointer5 + 4),tempVar2,tempVar1\n                               );\n          tempVar6 = FUN_080082d4((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),(int)tempVar5,\n                                (int)((ulonglong)tempVar5 >> 0x20));\n          var2 = var2 + 1;\n          if ((var1 < var2) || (index4 < var2)) break;\n          tempVar2 = *pointer6;\n          tempVar1 = pointer6[1];\n          pointer5 = pointer5 + 1;\n          pointer6 = pointer6 + 2;\n        }\n      }\n      flag1 = index4 != index1;\n      *(int *)(&localVar4 + index4) = (int)tempVar6;\n      *(int *)((int)&localVar4 + (index4 * 2 + 1) * 4) = (int)((ulonglong)tempVar6 >> 0x20);\n      pointer7 = pointer7 + -1;\n      index4 = index4 + 1;\n    } while (flag1);\n    if (2 < param5) {\n      if (param5 == 3) {\n        if (index1 != 0) {\n          pointer5 = &localVar4 + index1;\n          tempVar6 = CONCAT44(*(undefined4 *)((int)&localVar4 + (index1 * 2 + 1) * 4),\n                            *(undefined4 *)pointer5);\n          do {\n            tempVar1 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n            tempVar2 = (undefined4)tempVar6;\n            tempVar3 = *(undefined4 *)(pointer5 + -1);\n            result0 = *(undefined4 *)((int)pointer5 + -4);\n            tempVar6 = FUN_080082d4(tempVar2,tempVar1,tempVar3,result0);\n            tempVar5 = FUN_080082d0(tempVar3,result0,(int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20));\n            tempVar5 = FUN_080082d4((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),tempVar2,tempVar1);\n            *pointer5 = tempVar5;\n            pointer5 = pointer5 + -1;\n            *pointer5 = tempVar6;\n          } while (&localVar4 != pointer5);\n          if (1 < index1) {\n            pointer5 = &localVar4 + index1;\n            tempVar6 = CONCAT44(*(undefined4 *)((int)&localVar4 + (index1 * 2 + 1) * 4),\n                              *(undefined4 *)pointer5);\n            do {\n              tempVar1 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n              tempVar2 = (undefined4)tempVar6;\n              tempVar3 = *(undefined4 *)(pointer5 + -1);\n              result0 = *(undefined4 *)((int)pointer5 + -4);\n              tempVar6 = FUN_080082d4(tempVar2,tempVar1,tempVar3,result0);\n              tempVar5 = FUN_080082d0(tempVar3,result0,(int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20));\n              tempVar5 = FUN_080082d4((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),tempVar2,tempVar1);\n              *pointer5 = tempVar5;\n              pointer5 = pointer5 + -1;\n              *pointer5 = tempVar6;\n            } while (&localVar4 + 1 != pointer5);\n            tempVar6 = 0;\n            pointer5 = &localVar4 + index1 + 1;\n            do {\n              pointer7 = pointer5 + -1;\n              tempVar6 = FUN_080082d4((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),\n                                    *(undefined4 *)pointer7,*(undefined4 *)((int)pointer5 + -4));\n              pointer5 = pointer7;\n            } while (&localVar4 + 2 != pointer7);\n            goto LAB_0800abe4;\n          }\n        }\n        tempVar6 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param5 < 1) {\n      if (param5 != 0) goto LAB_0800ab0e;\n      tempVar6 = 0;\n      pointer5 = &localVar4 + index1 + 1;\n      do {\n        pointer7 = pointer5 + -1;\n        tempVar6 = FUN_080082d4((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),*(undefined4 *)pointer7,\n                              *(undefined4 *)((int)pointer5 + -4));\n        pointer5 = pointer7;\n      } while (&localVar4 != pointer7);\n      goto LAB_0800aafc;\n    }\n    tempVar6 = 0;\n    pointer5 = &localVar4 + index1 + 1;\n    do {\n      pointer7 = pointer5 + -1;\n      tempVar6 = FUN_080082d4((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),*(undefined4 *)pointer7,\n                            *(undefined4 *)((int)pointer5 + -4));\n      pointer5 = pointer7;\n    } while (&localVar4 != pointer7);\n  }\n  index4 = (int)((ulonglong)tempVar6 >> 0x20);\n  tempVar2 = (undefined4)tempVar6;\n  if (var3 == 0) {\n    *(undefined8 *)localArray2[1] = tempVar6;\n    tempVar6 = FUN_080082d0((undefined4)localVar4,localVar4._4_4_,tempVar2,index4);\n    if (index1 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    index4 = 1;\n    pointer5 = &localVar4;\n    do {\n      tempVar6 = FUN_080082d4((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),\n                            *(undefined4 *)(pointer5 + 1),*(undefined4 *)((int)pointer5 + 0xc));\n      index4 = index4 + 1;\n      pointer5 = pointer5 + 1;\n    } while (index4 <= index1);\n    if (var3 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *localArray2[1] = tempVar2;\n    *(int *)((int)localArray2[1] + 4) = index4 + -0x80000000;\n    tempVar6 = FUN_080082d0((undefined4)localVar4,localVar4._4_4_,tempVar2,index4);\n    if (0 < index1) goto LAB_0800ad04;\n  }\n  tempVar6 = CONCAT44((int)((ulonglong)tempVar6 >> 0x20) + -0x80000000,(int)tempVar6);\nLAB_0800ad26:\n  *(undefined8 *)((int)localArray2[1] + 8) = tempVar6;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "inputSize",
                "param_2": "inputArray",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "puVar1": "pointer1",
                "uVar2": "result",
                "uVar3": "tempResult",
                "iVar4": "index1",
                "puVar5": "pointer2",
                "uVar6": "tempVar1",
                "ppuVar7": "pointerArray1",
                "uVar8": "tempVar2",
                "iVar9": "index4",
                "puVar10": "pointer6",
                "uVar11": "tempVar3",
                "uVar12": "tempVar4",
                "puVar13": "pointer4",
                "iVar14": "index3",
                "iVar15": "var1",
                "iVar17": "var2",
                "iVar21": "var3",
                "puVar16": "pointer5",
                "puVar22": "pointer7",
                "puVar23": "pointer8",
                "bVar24": "flag1",
                "uVar25": "tempVar5",
                "uVar26": "tempVar6",
                "uVar27": "tempVar7",
                "local_284": "localArray1",
                "local_280": "localVar1",
                "local_270": "localVar2",
                "local_26c": "localVar3",
                "local_260": "localArray2",
                "local_258": "localArray3",
                "uStack_208": "stackVar1",
                "local_168": "localVar4",
                "local_160": "localArray4",
                "uStack_c8": "stackVar2"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input1,uint input2,undefined4 param1,undefined4 param2,int flag)\n\n{\n  int result;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined8 tmpValue1;\n  undefined8 tmpValue2;\n  \n  if (((input2 & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input1;\n  }\n  tmpValue1 = FUN_08008640(input1,input2,input1);\n  value3 = (undefined4)((ulonglong)tmpValue1 >> 0x20);\n  value2 = (undefined4)tmpValue1;\n  tmpValue1 = FUN_08008640(input1,input2,value2,value3);\n  value4 = (undefined4)((ulonglong)tmpValue1 >> 0x20);\n  value1 = (undefined4)tmpValue1;\n  tmpValue1 = FUN_08008640(value2,value3,0x5acfd57c,0x3de5d93a);\n  tmpValue1 = FUN_080082d0((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  tmpValue1 = FUN_08008640((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),value2,value3);\n  tmpValue1 = FUN_080082d4((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  tmpValue1 = FUN_08008640((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),value2,value3);\n  tmpValue1 = FUN_080082d0((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),0x19c161d5,0x3f2a01a0);\n  tmpValue1 = FUN_08008640((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),value2,value3);\n  tmpValue1 = FUN_080082d4((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),0x1110f8a6,0x3f811111);\n  value5 = (undefined4)((ulonglong)tmpValue1 >> 0x20);\n  if (flag != 0) {\n    tmpValue2 = FUN_08008640(param1,param2,0,0x3fe00000);\n    tmpValue1 = FUN_08008640(value1,value4,(int)tmpValue1,value5);\n    tmpValue1 = FUN_080082d0((int)tmpValue2,(int)((ulonglong)tmpValue2 >> 0x20),(int)tmpValue1,\n                         (int)((ulonglong)tmpValue1 >> 0x20));\n    tmpValue1 = FUN_08008640((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),value2,value3);\n    tmpValue1 = FUN_080082d0((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),param1,param2);\n    tmpValue2 = FUN_08008640(value1,value4,0x55555549,0x3fc55555);\n    tmpValue1 = FUN_080082d4((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),(int)tmpValue2,\n                         (int)((ulonglong)tmpValue2 >> 0x20));\n    value2 = FUN_080082d0(input1,input2,(int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20));\n    return value2;\n  }\n  tmpValue1 = FUN_08008640(value2,value3,(int)tmpValue1,value5);\n  tmpValue1 = FUN_080082d0((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),0x55555549,0x3fc55555);\n  tmpValue1 = FUN_08008640((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),value1,value4);\n  value2 = FUN_080082d4((int)tmpValue1,(int)((ulonglong)tmpValue1 >> 0x20),input1,input2);\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param1",
                "param_4": "param2",
                "param_5": "flag",
                "iVar1": "result",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3",
                "uVar5": "value4",
                "uVar6": "value5",
                "uVar7": "tmpValue1",
                "uVar8": "tmpValue2"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculate_result_0800af78(int input_value,uint control_value)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  undefined4 result_3;\n  undefined4 result_4;\n  int output_value;\n  undefined4 result_5;\n  uint abs_control_value;\n  undefined8 temp_result_1;\n  undefined8 temp_result_2;\n  undefined4 temp_result_3;\n  \n  temp_result_1 = CONCAT44(control_value,input_value);\n  abs_control_value = control_value & 0x7fffffff;\n  if (abs_control_value < 0x44100000) {\n    if (abs_control_value < 0x3fdc0000) {\n      if (abs_control_value < 0x3e200000) {\n        temp_result_2 = FUN_080082d4(input_value,control_value,0x8800759c,0x7e37e43c);\n        output_value = FUN_08008b60((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0,0x3ff00000);\n        if (output_value != 0) {\n          return input_value;\n        }\n      }\n      output_value = -1;\n    }\n    else {\n      temp_result_1 = FUNC_0800b2cc();\n      result_4 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n      result_1 = (undefined4)temp_result_1;\n      if (abs_control_value < 0x3ff30000) {\n        if (abs_control_value < 0x3fe60000) {\n          temp_result_1 = FUN_080082d4(result_1,result_4,result_1,result_4);\n          temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0,0x3ff00000);\n          temp_result_2 = FUN_080082d4(result_1,result_4,0,0x40000000);\n          temp_result_1 = FUN_08008894((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                               (int)((ulonglong)temp_result_2 >> 0x20));\n          output_value = 0;\n        }\n        else {\n          temp_result_1 = FUN_080082d0(result_1,result_4,0,0x3ff00000);\n          temp_result_2 = FUN_080082d4(result_1,result_4,0,0x3ff00000);\n          temp_result_1 = FUN_08008894((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                               (int)((ulonglong)temp_result_2 >> 0x20));\n          output_value = 1;\n        }\n      }\n      else if (abs_control_value < 0x40038000) {\n        temp_result_1 = FUN_080082d0(result_1,result_4,0,0x3ff80000);\n        temp_result_2 = FUN_08008640(result_1,result_4,0,0x3ff80000);\n        temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0,0x3ff00000);\n        temp_result_1 = FUN_08008894((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                             (int)((ulonglong)temp_result_2 >> 0x20));\n        output_value = 2;\n      }\n      else {\n        temp_result_1 = FUN_08008894(0,0xbff00000,result_1,result_4);\n        output_value = 3;\n      }\n    }\n    temp_result_3 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    result_5 = (undefined4)temp_result_1;\n    temp_result_1 = FUN_08008640(result_5,temp_result_3,result_5);\n    result_2 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    result_1 = (undefined4)temp_result_1;\n    temp_result_1 = FUN_08008640(result_1,result_2,result_1,result_2);\n    result_3 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    result_4 = (undefined4)temp_result_1;\n    temp_result_1 = FUN_08008640(result_4,result_3,0xe322da11,0x3f90ad3a);\n    temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x24760deb,0x3fa97b4b);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_4,result_3);\n    temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_4,result_3);\n    temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0xc54c206e,0x3fb745cd);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_4,result_3);\n    temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x920083ff,0x3fc24924);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_4,result_3);\n    temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x5555550d,0x3fd55555);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_1,result_2);\n    result_1 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    temp_result_2 = FUN_08008640(result_4,result_3,0x2c6a6c2f,0xbfa2b444);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x52defd9a,0x3fadde2d);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_4,result_3);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_4,result_3);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0xfe231671,0x3fbc71c6);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_4,result_3);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x9998ebc4,0x3fc99999);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_4,result_3);\n    result_4 = (undefined4)((ulonglong)temp_result_2 >> 0x20);\n    if (output_value == -1) {\n      temp_result_1 = FUN_080082d4((int)temp_result_1,result_1,(int)temp_result_2,result_4);\n      temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_5,temp_result_3);\n      output_value = FUN_080082d0(result_5,temp_result_3,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n      return output_value;\n    }\n    temp_result_1 = FUN_080082d4((int)temp_result_1,result_1,(int)temp_result_2,result_4);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_5,temp_result_3);\n    temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + output_value * 8),\n                         *(undefined4 *)(&UNK_0800c094 + output_value * 8));\n    temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),result_5,temp_result_3);\n    output_value = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + output_value * 8),\n                         *(undefined4 *)(&UNK_0800c074 + output_value * 8),(int)temp_result_1,\n                         (int)((ulonglong)temp_result_1 >> 0x20));\n    if ((int)control_value < 0) {\n      return output_value;\n    }\n  }\n  else {\n    if ((0x7ff00000 < abs_control_value) || ((abs_control_value == 0x7ff00000 && (input_value != 0)))) {\n      output_value = FUN_080082d4(input_value,control_value,input_value);\n      return output_value;\n    }\n    output_value = 0x54442d18;\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input_value",
                "param_2": "control_value",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "uVar3": "result_3",
                "uVar4": "result_4",
                "iVar5": "output_value",
                "uVar6": "result_5",
                "uVar7": "abs_control_value",
                "uVar8": "temp_result_1",
                "uVar9": "temp_result_2",
                "local_2c": "temp_result_3"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "set_sign_bit_0800b2d4",
            "code": "\nuint set_sign_bit_0800b2d4(undefined4 arg_type,uint input_value)\n\n{\n  return (input_value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "set_sign_bit_0800b2d4",
                "param_1": "arg_type",
                "param_2": "input_value"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_0800b2e0",
            "code": "\nvoid initialize_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_0800b2e0",
                "undefined4": "void"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_result_0800b2e8",
            "code": "\nuint calculateResult_0800b2e8(uint input1,uint input2,int offset,undefined4 constant)\n\n{\n  uint shiftedInput2;\n  int sum;\n  uint highPart;\n  undefined8 concatenatedInputs;\n  \n  concatenatedInputs = CONCAT44(input2,input1);\n  shiftedInput2 = (input2 << 1) >> 0x15;\n  if (shiftedInput2 == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    concatenatedInputs = FUN_08008640(input1,input2,0,0x43500000);\n    if (offset < -50000) goto skipComputations;\n    shiftedInput2 = ((uint)((int)((ulonglong)concatenatedInputs >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedInput2 == 0x7ff) {\n    shiftedInput2 = FUN_080082d4(input1,input2,input1,input2,constant);\n    return shiftedInput2;\n  }\n  highPart = (uint)((ulonglong)concatenatedInputs >> 0x20);\n  sum = shiftedInput2 + offset;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)concatenatedInputs;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) {\n      shiftedInput2 = FUN_08008640((uint)concatenatedInputs,highPart & 0x800fffff | (sum + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedInput2;\n    }\n    if (offset < 0xc351) {\n      concatenatedInputs = CONCAT44(highPart & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nskipComputations:\n      shiftedInput2 = FUN_08008640((int)concatenatedInputs,(int)((ulonglong)concatenatedInputs >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedInput2;\n    }\n  }\n  shiftedInput2 = FUN_08008640(0x8800759c,highPart & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedInput2;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "offset",
                "param_4": "constant",
                "uVar1": "shiftedInput2",
                "iVar2": "sum",
                "uVar3": "highPart",
                "uVar4": "concatenatedInputs",
                "LAB_0800b34a": "skipComputations"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_data_0800b3dc",
            "code": "\nundefined4 get_data_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_data_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_functions_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeFunctions_0800b3e8(void)\n\n{\n  int iterationCount;\n  code **functionPointerArray;\n  \n  FUNC_0800b5b0();\n  iterationCount = 0;\n  functionPointerArray = (code **)&DAT_0800c0b4;\n  do {\n    iterationCount = iterationCount + 1;\n    (**functionPointerArray)();\n    functionPointerArray = functionPointerArray + 1;\n  } while (iterationCount != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "iterationCount",
                "ppcVar2": "functionPointerArray"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "memset_0800b430",
            "code": "\nvoid memset_0800b430(undefined4 *dest,undefined value,uint length)\n\n{\n  undefined4 *dest_ptr;\n  undefined4 *temp_ptr;\n  uint remaining_length;\n  undefined4 concat_value;\n  bool is_remaining_zero;\n  \n  if (((uint)dest & 3) != 0) {\n    remaining_length = length - 1;\n    dest_ptr = dest;\n    if (length == 0) {\n      return;\n    }\n    while( true ) {\n      dest = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      length = remaining_length;\n      if (((uint)dest & 3) == 0) break;\n      is_remaining_zero = remaining_length == 0;\n      remaining_length = remaining_length - 1;\n      dest_ptr = dest;\n      if (is_remaining_zero) {\n        return;\n      }\n    }\n  }\n  if (3 < length) {\n    concat_value = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < length) {\n      dest_ptr = dest + 4;\n      do {\n        dest_ptr[-4] = concat_value;\n        dest_ptr[-3] = concat_value;\n        dest_ptr[-2] = concat_value;\n        dest_ptr[-1] = concat_value;\n        dest_ptr = dest_ptr + 4;\n      } while (dest_ptr != (undefined4 *)((int)dest + (length - 0x10 & 0xfffffff0) + 0x20));\n      remaining_length = length & 0xc;\n      dest = dest + ((length - 0x10 >> 4) + 1) * 4;\n      length = length & 0xf;\n      if (remaining_length == 0) goto joined_r0x0800b4a8;\n    }\n    dest_ptr = (undefined4 *)((length - 4 & 0xfffffffc) + 4 + (int)dest);\n    do {\n      temp_ptr = dest + 1;\n      *dest = concat_value;\n      dest = temp_ptr;\n    } while (dest_ptr != temp_ptr);\n    length = length & 3;\n    dest = dest_ptr;\n  }\njoined_r0x0800b4a8:\n  if (length != 0) {\n    dest_ptr = dest;\n    do {\n      temp_ptr = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      dest_ptr = temp_ptr;\n    } while ((undefined4 *)(length + (int)dest) != temp_ptr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "memset_0800b430",
                "param_1": "dest",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "dest_ptr",
                "puVar2": "temp_ptr",
                "uVar3": "remaining_length",
                "uVar4": "concat_value",
                "bVar5": "is_remaining_zero"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int action,undefined4 value,undefined4 data1,undefined4 data2)\n\n{\n  undefined *ptr;\n  undefined4 returnValue;\n  uint bitMask;\n  uint count;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  ptr = DAT_20000168;\n  count = *(uint *)(DAT_20000168 + 4);\n  if ((int)count < 0x20) {\n    if (action != 0) {\n      *(undefined4 *)(DAT_20000168 + count * 4 + 0x88) = data1;\n      bitMask = 1 << (count & 0xff);\n      *(uint *)(ptr + 0x188) = *(uint *)(ptr + 0x188) | bitMask;\n      *(undefined4 *)(ptr + count * 4 + 0x108) = data2;\n      if (action == 2) {\n        *(uint *)(ptr + 0x18c) = bitMask | *(uint *)(ptr + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(ptr + 4) = count + 1;\n    *(undefined4 *)(ptr + (count + 2) * 4) = value;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "action",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2",
                "puVar1": "ptr",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "count"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 177379,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}