{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "check_flag_status_0800192c",
                "PTR_DAT_08001954": "flag_data",
                "PTR_DAT_08001958": "result_ptr",
                "*result_ptr": "result",
                "flag_status": "flag_value"
            },
            "code": "void check_flag_status_0800192c(void)\n{\n    int flag_status = PTR_DAT_08001954[0x28];\n    int *PTR_DAT_08001958 = (int *) PTR_DAT_08001958;\n    if ((flag_status & 8) == 0)\n    {\n        *PTR_DAT_08001958 = 0;\n    }\n    else\n    {\n        *PTR_DAT_08001958 = 1;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_flag_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "setParamInMemory_08006950",
                "param_1": "param",
                "DAT_08006994": "memoryLocation",
                "PTR_DAT_08006994_0000000c": "currentMemoryValue",
                "modifiedMemoryValue": "modifiedMemoryValue"
            },
            "code": "void setParamInMemory_08006950(uint param) {\n    uint *DAT_08006994 = (uint *)(DAT_08006994 + 0xc);\n    uint PTR_DAT_08006994_0000000c = *DAT_08006994;\n    uint modifiedMemoryValue = (PTR_DAT_08006994_0000000c & 0xf8ff) | ((param & 7) << 8) | 0x5fa0000;\n    *DAT_08006994 = modifiedMemoryValue;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": false,
            "current_name": "setParamInMemory_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "convert_to_int_08008ba0",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "output1",
                "iVar2": "temp1",
                "uVar3": "temp2"
            },
            "code": "uint convert_to_int_08008ba0(uint input1, uint input2) {\n  uint output1;\n  int temp1;\n  uint temp2;\n  \n  temp1 = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < temp1) {\n      return 0;\n    }\n    output1 = temp1 >> 0x15;\n    temp2 = -output1 - 0x3e1;\n    if (output1 < 0xfffffc20 && temp2 != 0) {\n      output1 = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (temp2 & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        output1 = -output1;\n      }\n      return output1;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_0800adf0",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_080095b8",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "convert_to_int_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "check_initialized_and_execute_08005984",
                "param_1": "input",
                "uVar1": "result",
                "PTR_DAT_080059b0": "initialized_flag"
            },
            "code": "int check_initialized_and_execute_08005984(int input)\n{\n  int result;\n  if (*(int *)PTR_DAT_080059b0 == 0) {\n    result = initialize_and_execute(1,input,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "check_initialized_and_execute_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "set_flags_08007a10",
                "param_1": "flag_value",
                "DAT_08007a64": "flags_ptr"
            },
            "code": "void set_flags_08007a10(int flag_value)\n{\n    uint* DAT_08007a64 = (uint*)(DAT_08007a64 + 0x40);\n    if (flag_value == 0x40000000) {\n        *DAT_08007a64 |= 1;\n    }\n    else if (flag_value == DAT_08007a68) {\n        *DAT_08007a64 |= 2;\n    }\n    else if (flag_value == DAT_08007a6c) {\n        *DAT_08007a64 |= 4;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "set_flags_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "reverse_bits": "reverse_bits",
                "param_1": "num",
                "uVar1": "res1",
                "uVar2": "abs_num",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeros",
                "uVar5": "temp",
                "uVar6": "is_negative",
                "in_r12": "remaining_bits",
                "bVar7": "cond1",
                "bVar8": "cond2",
                "bVar9": "cond3",
                "FUN_0800856c": "reverse_bits_0800856c"
            },
            "code": "unsigned long long reverse_bits_0800856c(unsigned int num){\n    unsigned int abs_num = num;\n    unsigned long long res = 0;\n    if (abs_num == 0) {\n        return 0;\n    }\n    bool is_negative = (num & 0x80000000) != 0;\n    if (is_negative) {\n        abs_num = ~num + 1;\n    }\n    int leading_zeros = __builtin_clz(abs_num);\n    int shift_amount = leading_zeros + 21;\n    if (shift_amount < 32) {\n        res = (unsigned long long)abs_num << shift_amount;\n    } else {\n        int remaining_bits = 64 - shift_amount;\n        unsigned int shifted_num = abs_num << (leading_zeros - 11);\n        res = ((unsigned long long)shifted_num >> remaining_bits) | ((unsigned long long)abs_num << (shift_amount - 32));\n    }\n    if (is_negative) {\n        res = -res;\n    }\n    return res;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "reverse_bits_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "execute_function_08008b00",
                "param_1": "parameter",
                "FUN_08008a74": "call_helper_function"
            },
            "code": "undefined4 execute_function_08008b00(undefined4 parameter){\n  call_helper_function();\n  return parameter;\n}",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008b10",
                "FUN_08008b24",
                "FUN_08008af0"
            ],
            "imported": false,
            "current_name": "execute_function_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "update_data_if_value_is_two_0800585c",
                "PTR_DAT_08005878": "data_array",
                "FUN_08005790": "call_data_updater"
            },
            "code": "void update_data_if_value_is_two_0800585c(){\n  if (PTR_DAT_08005878[1] == '\\x02') {\n    PTR_DAT_08005878[1] = 3;\n    call_data_updater();\n  }\n  return;\n}",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_value_is_two_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "print_interrupt_message_0800597c"
            },
            "code": "void print_interrupt_message_0800597c(void)\n{\n  software_interrupt(0x3f);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": false,
            "current_name": "print_interrupt_message_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "calculate_value_from_params_08009798",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "unused_param_1",
                "param_4": "unused_param_2",
                "uVar1": "exponent",
                "uVar2": "shift_amount",
                "lVar3": "mantissa",
                "DAT_08009814": "data_constant"
            },
            "code": "longlong calculate_value_from_params_08009798(uint param_1, uint param_2, undefined4 param_3, undefined4 param_4)\n{\n  uint shift_amount = (param_2 << 1) >> 0x15;\n  uint exponent = shift_amount - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      return ((ulonglong)param_2 & 0x80000000) << 0x20;\n    }\n    longlong mantissa = (ulonglong)(param_2 & ~(shift_amount < 0xff ? DAT_08009814 >> (exponent & 0xff) : 0)) << 0x20;\n  }\n  else {\n    if ((int)exponent < 0x34) {\n      return CONCAT44(param_2, param_1 & ~(0xffffffffU >> (shift_amount - 0x413 & 0xff)));\n    }\n    if (exponent != 0x400) {\n      return CONCAT44(param_2, param_1);\n    }\n    longlong mantissa = FUNC_080082d4(param_1, param_2, param_1, param_2, param_4);\n  }\n  return mantissa;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "calculate_value_from_params_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08002408",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "addValueToDataArray_08007930",
                "puVar1": "dataArray",
                "uVar2": "newValue",
                "uVar3": "newData",
                "uVar4": "oldData",
                "iVar5": "currentIndex",
                "PTR_DAT_080079b8": "dataArray",
                "PTR_DAT_080079bc": "dataCounter"
            },
            "code": "void addValueToDataArray_08007930(void)\n{\n  int* PTR_DAT_080079b8 = PTR_DAT_080079b8;\n  int* PTR_DAT_080079bc = (int*)PTR_DAT_080079bc;\n  if (*PTR_DAT_080079bc != 0) {\n    int currentIndex = PTR_DAT_080079b8[0x14];\n    int newValue = calculateNewValue();\n    PTR_DAT_080079b8[currentIndex * 4] = newValue;\n    if (PTR_DAT_080079b8[0x14] == 3) {\n      currentIndex = 0;\n    }\n    else {\n      currentIndex = PTR_DAT_080079b8[0x14] + 1;\n    }\n    PTR_DAT_080079b8[0x14] = currentIndex;\n    uint newData = getNewData();\n    if (newData != PTR_DAT_080079b8[0x10]) {\n      uint oldData = PTR_DAT_080079b8[0x10];\n      if ((~oldData & newData) != 0) {\n        performActionOnData(~oldData & newData);\n      }\n      if ((~newData & oldData) != 0) {\n        performOtherActionOnData(~newData & oldData);\n      }\n      PTR_DAT_080079b8[0x10] = newData;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08007884",
                "FUN_08007520",
                "FUN_080074c8",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "addValueToDataArray_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "isFirstCallToFunction_08000188",
                "param_1": "isFunctionCalledBefore",
                "*PTR_DAT_080001a0": "isFunctionCalledBefore",
                "DAT_080001a4": "globalIntVariable",
                "PTR_FUN_080001a8": "param_1"
            },
            "code": "bool isFirstCallToFunction_08000188(bool* *PTR_DAT_080001a0) {\n  if (**PTR_DAT_080001a0 == false) {\n    if (DAT_080001a4 != 0) {\n      return true;\n    }\n    **PTR_DAT_080001a0 = true;\n  }\n  return false;\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": false,
            "current_name": "isFirstCallToFunction_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "calculate_result_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "comparison_result",
                "uVar2": "comparison_value",
                "uVar3": "shifted_input2",
                "bVar4": "carry",
                "uVar5": "function_result",
                "lVar6": "result",
                "DAT_08009400": "constant1",
                "DAT_08009404": "constant2",
                "DAT_08009408": "shifted_constant",
                "DAT_0800940c": "constant3",
                "param_3": "undefined_constant1",
                "param_4": "undefined_constant2"
            },
            "code": "long long calculate_result_08009318(uint input1, uint input2, undefined4 param_3, undefined4 param_4)\n{\n  int comparison_result;\n  uint shifted_input2 = (input2 << 1) >> 0x15;\n  uint uVar2 = shifted_input2 - 0x3ff;\n  long long result;\n  undefined8 function_result;\n  \n  if ((int)uVar2 < 0x14) {\n    if ((int)uVar2 < 0) {\n      function_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n      comparison_result = FUN_08008b60((int)function_result, (int)((ulonglong)function_result >> 0x20), 0, 0);\n      result = CONCAT44(input2, input1);\n      if (comparison_result != 0) {\n        if ((int)input2 < 0) {\n          result = -0x8000000000000000;\n        }\n        else {\n          input1 = input1 | input2;\n          result = CONCAT44(input1, input1);\n          if (input1 != 0) {\n            result = (ulonglong)DAT_0800940c << 0x20;\n          }\n        }\n      }\n    }\n    else {\n      uint shifted_dat = DAT_08009408 >> (uVar2 & 0xff);\n      result = CONCAT44(input2, input1);\n      if ((input2 & shifted_dat | input1) != 0) {\n        function_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n        comparison_result = FUN_08008b60((int)function_result, (int)((ulonglong)function_result >> 0x20), 0, 0);\n        result = CONCAT44(input2, input1);\n        if (comparison_result != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (uVar2 & 0xff));\n          }\n          result = (ulonglong)(input2 & ~shifted_dat) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)uVar2 < 0x34) {\n    uint shifted_dat = 0xffffffff >> (shifted_input2 - 0x413 & 0xff);\n    result = CONCAT44(input2, input1);\n    if ((shifted_dat & input1) != 0) {\n      function_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n      comparison_result = FUN_08008b60((int)function_result, (int)((ulonglong)function_result >> 0x20), 0, 0);\n      result = CONCAT44(input2, input1);\n      if (comparison_result != 0) {\n        if (0 < (int)input2) {\n          if (uVar2 == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            uint shifted_value = 1 << (0x34 - uVar2 & 0xff);\n            bool carry = CARRY4(shifted_value, input1);\n            input1 = shifted_value + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        result = CONCAT44(input2, input1 & ~shifted_dat);\n      }\n    }\n  }\n  else {\n    result = CONCAT44(input2, input1);\n    if (uVar2 == 0x400) {\n      result = FUNC_080082d4();\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08001994",
                "FUN_08003004",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "set_parameter_080018cc",
                "param_1": "new_param",
                "DAT_080018f8": "PARAM_START_ADDRESS",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "void set_parameter_080018cc(uint new_param) {\n    uint* param_ptr = (uint*)(DAT_080018f8 + 0x14);\n    uint current_param_value = *param_ptr;\n    uint mask = 0xfffffaaf;\n    *param_ptr = (new_param | (current_param_value & mask));\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "set_parameter_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_bit_at_index_080079e0",
                "param_1": "index",
                "DAT_08007a0c": "PTR_data"
            },
            "code": "void set_bit_at_index_080079e0(int index)\n{\n    int* ptr = (int *)(DAT_08007a0c + (index >> 5) * 4);\n    int bit_index = index & 0x1f;\n    int bit_mask = 1 << bit_index;\n    *ptr = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "param_1": "bit_position",
                "PTR_DAT_08006a88": "array_start_ptr",
                "uint": "uint32_t",
                "char": "uint8_t"
            },
            "code": "void set_bit_in_array_08006a58(uint8_t bit_position)\n{\n    uint32_t* array_ptr = (uint32_t*)(DAT_08006a88 + (((uint32_t)bit_position >> 5) + 0x40) * 4);\n    uint32_t bit_mask = 1 << (bit_position & 0x1f);\n    *array_ptr = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_value_from_pointer_08005a84",
                "PTR_DAT_08005a94": "ptr"
            },
            "code": "int get_value_from_pointer_08005a84() {\n    int *PTR_DAT_08005a94 = (int *)PTR_DAT_08005a94;\n    int value = *PTR_DAT_08005a94;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08007756",
                "FUN_08005cec",
                "FUN_08000268"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "is_input_not_null_08008b10",
                "in_ZR": "input_char",
                "FUN_08008b00": "get_input_char"
            },
            "code": "bool is_input_not_null_08008b10(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "is_input_not_null_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = FUN_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = FUN_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = reverse_and_improve(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08008590",
                "FUN_0800192c",
                "FUN_08009214",
                "FUN_08009798",
                "FUN_08008bf0",
                "FUN_08009228",
                "FUN_08004c2a",
                "FUN_0800923c",
                "FUN_08009654",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "calculate_float_08008c30",
                "param_1": "float_bits",
                "param_2": "sign",
                "uVar1": "result",
                "uVar2": "exponent",
                "uVar3": "biased_exponent",
                "in_r12": "exponent_overflow",
                "bVar4": "is_result_zero",
                "bVar5": "is_exponent_less_than_187",
                "shift": "shift_amount",
                "mantissa": "fractional_part",
                "fraction": "fractional_bits"
            },
            "code": "uint calculate_float_08008c30(uint float_bits, uint sign) {\n  uint exponent = float_bits * 2;\n  bool is_exponent_less_than_187 = exponent < 374;\n  uint biased_exponent = exponent + 1536;\n  uint result = biased_exponent;\n  if (!is_exponent_less_than_187) {\n    uint exponent_overflow = exponent + 383999744;\n    result = exponent_overflow;\n  }\n  bool is_result_zero = result == 0;\n  if (!is_exponent_less_than_187 && biased_exponent >= 524288) {\n    is_result_zero = exponent_overflow == 536870912;\n  }\n  if (((is_exponent_less_than_187 || biased_exponent < 524288) || 536870912 < exponent_overflow) || is_result_zero) {\n    if ((sign & 1073741824) != 0) {\n      if (((int)exponent >> 21 == -1) && ((float_bits | sign << 12) != 0)) {\n        return 2139095040;\n      }\n      return sign & 2139095040;\n    }\n    if ((int)(exponent + 2457600000) < 0 != SCARRY4(biased_exponent,2457600000)) {\n      return sign & 2147483648;\n    }\n    uint shift = 24 - (exponent + 2457600000 >> 21);\n    uint mantissa = float_bits >> (shift & 0xff);\n    if (float_bits << (32 - shift & 0xff) != 0) {\n      mantissa = mantissa | 1;\n    }\n    uint fraction = (float_bits & 2097151) | 1048576;\n    fraction = fraction << (32 - shift & 0xff) >> 1;\n  }\n  result = (sign & 2147483648 | mantissa >> 29) + fraction * 4 + (uint)(2147483647 < mantissa * 8);\n  if (mantissa * 8 == 2147483648) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_080044e8",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_float_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_08009798",
                "FUN_0800a348",
                "FUN_08009654"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "update_global_variables_08007bf0",
                "param_1": "new_value",
                "_DAT_4000002c": "global_variable",
                "_DAT_40000024": "smallest_global_variable"
            },
            "code": "void update_global_variables_08007bf0(uint32_t new_value)\n{\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  _DAT_4000002c = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": false,
            "current_name": "update_global_variables_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "reverse_and_improve": "reverse_and_improve",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "iVar6": "var6",
                "uVar7": "var7",
                "bVar8": "bool1",
                "bVar9": "bool2",
                "bVar10": "bool3",
                "FUN_08008590": "reverse_and_improve_08008590"
            },
            "code": "ulonglong reverse_and_improve_08008590(uint input1, undefined4 input2, undefined4 input3, uint input4) {\n    uint var1, var2, var3, var4, var5, var6, var7;\n    bool bool1, bool2, bool3;\n\n    var5 = input1 << 1;\n    bool1 = var5 == 0;\n    var1 = (uint)((input1 & 0x80000000) != 0) << 0x1f;\n    var4 = (uint)((int)var5 >> 3) >> 1;\n    var3 = var1 | var4;\n    input1 = input1 << 0x1d;\n    if (!bool1) {\n        input4 = var5 & 0xff000000;\n        bool1 = input4 == 0;\n    }\n    if (!bool1) {\n        bool1 = input4 == 0xff000000;\n    }\n    if (!bool1) {\n        return CONCAT44(var3, input1) ^ 0x3800000000000000;\n    }\n    if ((var5 & 0xffffff) == 0) {\n        return CONCAT44(var3, input1);\n    }\n    if (input4 == 0xff000000) {\n        return CONCAT44(var3, input1) | 0x8000000000000;\n    }\n    var2 = input1;\n    var5 = var4;\n    if (var4 == 0) {\n        var2 = 0;\n        var5 = input1;\n    }\n    var6 = count_leading_zeroes(var5);\n    if (var4 == 0) {\n        var6 = var6 + 0x20;\n    }\n    var7 = var6 - 0xb;\n    bool3 = SBORROW4(var7, 0x20);\n    var4 = var6 - 0x2b;\n    bool2 = (int)var4 < 0;\n    bool1 = var4 == 0;\n    if ((int)var7 < 0x20) {\n        bool3 = SCARRY4(var4, 0xc);\n        var6 = var6 + -0x1f;\n        bool2 = var6 < 0;\n        bool1 = var6 == 0;\n        var4 = var7;\n        if (!bool1 && bool2 == bool3) {\n            var2 = var5 << (var7 & 0xff);\n            var5 = var5 >> (0xcU - var6 & 0xff);\n            goto LAB_08008458;\n        }\n    }\n    if (bool1 || bool2 != bool3) {\n        var6 = 0x20 - var4;\n    }\n    var5 = var5 << (var4 & 0xff);\n    if (bool1 || bool2 != bool3) {\n        var5 = var5 | var2 >> (var6 & 0xff);\n    }\n    if (bool1 || bool2 != bool3) {\n        var2 = var2 << (var4 & 0xff);\n    }\nLAB_08008458:\n    if ((int)var7 < 0x381) {\n        return CONCAT44(var5 + (0x380 - var7) * 0x100000 | var1, var2);\n    }\n    var4 = ~(0x380 - var7);\n    if (0x1e < (int)var4) {\n        return CONCAT44(var3, var5 >> (var4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n    }\n    var6 = var4 - 0x13;\n    if (var6 == 0 || var6 < 0 != SCARRY4(var4 - 0x1f, 0xc)) {\n        var4 = var4 + 1;\n        return CONCAT44(var1 | var5 >> (var4 & 0xff), var2 >> (var4 & 0xff) | var5 << (0x20 - var4 & 0xff));\n    }\n    return CONCAT44(var3, var2 >> (0x20 - (0xcU - var6) & 0xff) | var5 << (0xcU - var6 & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "reverse_and_improve_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initializeDataSection_08007ad0",
                "DAT_08007b6c": "dataSectionValue",
                "PTR_DAT_08007b68": "dataSectionPtr"
            },
            "code": "void initializeDataSection_08007ad0(void)\n{\n    uint64_t temp = (uint64_t)DAT_08007b6c * (uint64_t)*(uint32_t *)PTR_DAT_08007b68;\n    uint32_t temp2 = (uint32_t)(temp >> 56) - 1;\n    uint32_t *data_section_ptr = (uint32_t *)0x40000000;\n    *data_section_ptr = 0;\n    *(data_section_ptr + 1) = 0;\n    *(data_section_ptr + 2) = 0;\n    *(data_section_ptr + 3) = 0;\n    *(data_section_ptr + 4) = 0;\n    *(data_section_ptr + 5) = 0;\n    *(data_section_ptr + 6) = 0;\n    *(data_section_ptr + 7) = 0;\n    *(data_section_ptr + 8) = 0;\n    *(data_section_ptr + 9) = temp2;\n    *(data_section_ptr + 10) = 0;\n    *(data_section_ptr + 13) = 0;\n    *(data_section_ptr + 14) = 0;\n    *(data_section_ptr + 15) = 0;\n    *(data_section_ptr + 16) = 0;\n    *(data_section_ptr + 18) = 0;\n    *(data_section_ptr + 19) = 0;\n}\n",
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initializeDataSection_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = reverse_and_improve(local_58);\n      uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = reverse_and_improve(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = reverse_and_improve(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = FUN_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = FUN_0800056c(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = FUN_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = FUN_0800056c(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = reverse_and_improve(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUN_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = reverse_and_improve(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = FUN_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUN_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUN_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          FUN_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          FUN_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = FUN_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = FUN_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = reverse_and_improve(local_34);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            FUN_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = FUN_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          FUN_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            FUN_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_08002fd4",
                "FUN_08008590",
                "FUN_08008bf0",
                "FUN_08000220",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08001f00",
                "FUN_080025e8",
                "FUN_08001e98",
                "FUN_08000478",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_0800525c",
                "FUN_08004bf4",
                "FUN_080098d0",
                "FUN_08009228",
                "FUN_0800056c",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_0800184c",
                "FUN_0800923c",
                "FUN_08008894",
                "FUN_08002408"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "initialize_program_080039a0",
                "FUN_08003980": "initialize_display",
                "FUN_08004228": "initialize_network"
            },
            "code": "void initialize_program_080039a0(void)\n{\n  initialize_display();\n  initialize_network();\n  *(undefined4 *)PTR_DAT_080039b8 = 1;\n  return;\n}",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_program_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "concatenate_32_64_bits_08009204",
                "param_1": "lower_32_bits",
                "param_2": "higher_32_bits"
            },
            "code": "undefined8 concatenate_32_64_bits_08009204(undefined4 lower_32_bits, undefined4 higher_32_bits)\n{\n  call_function_at_0x0800919c();\n  return CONCAT44(higher_32_bits, lower_32_bits);\n}",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_0800923c"
            ],
            "imported": false,
            "current_name": "concatenate_32_64_bits_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "process_params_and_update_080029d8",
                "param_1": "status",
                "param_2": "param_2",
                "param_3": "param_3",
                "iVar1": "result",
                "uVar2": "temp_var_1",
                "uVar3": "temp_var_2"
            },
            "code": "void process_params_and_update_080029d8(int status, int param_2, int param_3) {\\n  int result;\\n  undefined4 uVar2;\\n  undefined4 uVar3;\\n  if ((param_2 != 0) && (param_3 != 0)) {\\n    result = FUN_08009214(*(undefined4 *)(param_2 + 0x18), *(undefined4 *)(param_2 + 0x1c));\\n    if (result == 0) {\\n      if (*(char *)(param_2 + 0x25) == \"\\0\") {\\n        result = FUN_08009264(*(undefined4 *)(param_2 + 0x1c), *(undefined4 *)(param_3 + 0x18));\\n        if (result != 0) {\\n          uVar3 = *(undefined4 *)(param_2 + 0x1c);\\n          uVar2 = FUN_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000, *(undefined4 *)(param_3 + 0x18), *(undefined4 *)(param_2 + 0x20));\\n          result = FUN_08009228(uVar3, uVar2);\\n          if (result != 0) {\\n            uVar2 = *(undefined4 *)(param_2 + 0x1c);\\n          }\\n          *(undefined4 *)(param_2 + 0x18) = uVar2;\\n        }\\n        else {\\n          *(undefined4 *)(param_2 + 0x18) = *(undefined4 *)(param_2 + 0x1c);\\n        }\\n        *(undefined *)(param_2 + 0x24) = 1;\\n      }\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "process_params_and_update_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "value",
                "_DAT_40000038": "global_variable"
            },
            "code": "void set_global_variable_08007c5e(int value)\n{\n    _DAT_40000038 = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_variable_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "execute_function_08005760",
                "PTR_DAT_08005774": "PTR_DATA",
                "FUN_080052ac": "call_another_function"
            },
            "code": "void execute_function_08005760(void)\n{\n    int parameter = *(int *)(PTR_DAT_08005774 + 0x18);\n    call_another_function(parameter);\n    return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "execute_function_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "is_end_of_string_08008b24",
                "in_CY": "input_char",
                "FUN_08008b00": "get_input_char"
            },
            "code": "bool is_end_of_string_08008b24(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08001d4c",
                "FUN_08004148",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_data_if_flag_is_set_0800587c",
                "PTR_DAT_0800589c": "data_array"
            },
            "code": "void update_data_if_flag_is_set_0800587c(void)\n{\n  if (PTR_DAT_0800589c[1] == FLAG_SET) {\n    PTR_DAT_0800589c[1] = NEW_FLAG_VALUE;\n    PTR_DAT_0800589c[DATA_OFFSET] = 0;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_flag_is_set_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "calculate_double_precision_number_08008a02",
                "param_1": "a",
                "param_2": "b",
                "param_3": "c",
                "param_4": "d",
                "uVar1": "temp3",
                "unaff_r4": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "in_r12": "temp4",
                "bVar4": "is_a_b_zero",
                "LAB_08008874": "return_case_1",
                "LAB_08008838": "return_case_2"
            },
            "code": "uint64_t calculate_double_precision_number_08008a02(uint32_t a, uint32_t b, uint32_t c, uint32_t d) {\n  uint32_t temp1 = c | (d >> 0x14);\n  uint32_t temp2 = b;\n  if (a != temp1 || temp1 != d >> 0x14) {\n    if (a == temp1) {\n      if ((a | (b << 0xc)) == 0 && temp1 != d >> 0x14) {\n        return (uint64_t)((b ^ d) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp1 == d >> 0x14) {\n      if ((c | (d << 0xc)) == 0) {\n        return (uint64_t)((b ^ d) & 0x80000000) << 0x20;\n      }\n      temp1 = c;\n      temp2 = d;\n    }\n    else {\n      bool is_a_b_zero = (a | (b << 1)) == 0;\n      bool is_c_d_zero = (c | (d << 1)) == 0;\n      if (!(is_a_b_zero || is_c_d_zero)) {\n        if (a == 0) {\n          uint32_t temp3 = b & 0x80000000;\n          do {\n            uint32_t temp4 = a & 0x80000000;\n            a <<= 1;\n            b = b * 2 + (uint32_t)(temp4 != 0);\n          } while ((b & 0x100000) == 0);\n          b |= temp3;\n          if (temp1 != 0) {\n            return ((uint64_t)d << 0x20) | a;\n          }\n        }\n        do {\n          uint32_t temp3 = c & 0x80000000;\n          c <<= 1;\n          d = d * 2 + (uint32_t)(temp3 != 0);\n        } while ((d & 0x100000) == 0);\n        return ((uint64_t)b << 0x20) | a;\n      }\n      if (!is_a_b_zero) {\n        return (uint64_t)((b ^ d) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if (!is_c_d_zero) {\n        return (uint64_t)((b ^ d) & 0x80000000) << 0x20;\n      }\n      temp1 = a;\n      temp2 = b;\n    }\n  }\n  return ((uint64_t)temp2 << 0x20) | temp1 | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": false,
            "current_name": "calculate_double_precision_number_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "print_string_0800369c",
                "param_1": "string_to_print",
                "local_c": "current_char_pointer",
                "*local_c": "*current_char_pointer",
                "\\0": "'\\0'",
                "FUN_08008250": "print_character"
            },
            "code": "void print_string_0800369c(char *string_to_print)\n{\n  char *current_char_pointer;\n  current_char_pointer = string_to_print;\n  while (*current_char_pointer != '\\0') {\n    print_character(*current_char_pointer);\n    current_char_pointer = current_char_pointer + 1;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_string_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "wait_until_param_plus_iVar1_08005a98",
                "param_1": "desired_sum",
                "iVar1": "current_sum",
                "FUN_08005a84": "get_current_sum",
                "uVar2": "temp_sum"
            },
            "code": "void wait_until_param_plus_iVar1_08005a98(int desired_sum) {\n  int current_sum = get_current_sum();\n  while (get_current_sum() < desired_sum + current_sum) {\n    ;\n  }\n  return;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": false,
            "current_name": "wait_until_param_plus_iVar1_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "index",
                "uVar2": "temp_var_1",
                "uVar3": "temp_var_2",
                "auStack_18": "temp_array",
                "local_a": "counter_1",
                "local_9": "counter_2",
                "FUN_080036c6": "print_message",
                "PTR_s__G92__080046c8": "message_1",
                "PTR_DAT_080046bc": "data_array",
                "PTR_DAT_080046cc": "data_array_2",
                "DAT_08004690": "data_1",
                "DAT_08004694": "data_2",
                "PTR_DAT_080046c0": "message_2",
                "PTR_DAT_080046c4": "message_3",
                "PTR_DAT_08004698": "message_4",
                "PTR_DAT_0800469c": "message_5",
                "PTR_DAT_080046a0": "message_6",
                "PTR_DAT_080046a4": "message_7",
                "PTR_DAT_080046a8": "message_8",
                "PTR_DAT_080046ac": "message_9",
                "PTR_DAT_080046b0": "message_10",
                "PTR_DAT_080046b4": "message_11",
                "PTR_DAT_080046b8": "message_12",
                "FUN_08004d7c": "get_index",
                "FUN_08003826": "process_array",
                "FUN_08008590": "process_value",
                "FUNC_08008640": "process_data_2",
                "FUN_08008c30": "process_data_3",
                "FUN_08004030": "process_data_4"
            },
            "code": "void process_data_080044e8() {\n  int index;\n  undefined4 temp_var_1;\n  undefined8 temp_var_2;\n  undefined4 temp_array[3];\n  byte counter_1;\n  byte counter_2;\n  counter_2 = 0;\n  while (true) {\n    if (counter_2 > 7) {\n      print_message(PTR_s__G92__080046c8);\n      for (counter_1 = 0; counter_1 < 3; counter_1 = counter_1 + 1) {\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n          process_array(temp_array[counter_1]);\n        }\n        else {\n          temp_var_2 = process_value(temp_array[counter_1]);\n          temp_var_2 = process_DAT_08004694((int)temp_var_2, (int)((ulonglong)temp_var_2 >> 0x20), DAT_08004690, DAT_08004694);\n          temp_var_1 = process_data_080044e8_3((int)temp_var_2, (int)((ulonglong)temp_var_2 >> 0x20));\n          process_array(temp_var_1);\n        }\n        if (counter_1 < 2) {\n          print_message(PTR_DAT_080046c0);\n        }\n        else {\n          print_message(PTR_DAT_080046c4);\n        }\n      }\n      return;\n    }\n    index = get_index(counter_2, temp_array);\n    if (index == 0) {\n      break;\n    }\n    print_message(PTR_DAT_08004698);\n    switch(counter_2) {\n    case 0:\n      print_message(PTR_DAT_0800469c);\n      break;\n    case 1:\n      print_message(PTR_DAT_080046a0);\n      break;\n    case 2:\n      print_message(PTR_DAT_080046a4);\n      break;\n    case 3:\n      print_message(PTR_DAT_080046a8);\n      break;\n    case 4:\n      print_message(PTR_DAT_080046ac);\n      break;\n    case 5:\n      print_message(PTR_DAT_080046b0);\n      break;\n    case 6:\n      print_message(PTR_DAT_080046b4);\n      break;\n    case 7:\n      print_message(PTR_DAT_080046b8);\n    }\n    for (counter_1 = 0; counter_1 < 3; counter_1 = counter_1 + 1) {\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n        process_array(temp_array[counter_1]);\n      }\n      else {\n        temp_var_2 = process_value(temp_array[counter_1]);\n        temp_var_2 = process_DAT_08004694((int)temp_var_2, (int)((ulonglong)temp_var_2 >> 0x20), DAT_08004690, DAT_08004694);\n        temp_var_1 = process_data_080044e8_3((int)temp_var_2, (int)((ulonglong)temp_var_2 >> 0x20));\n        process_array(temp_var_1);\n      }\n      if (counter_1 < 2) {\n        print_message(PTR_DAT_080046c0);\n      }\n      else {\n        print_message(PTR_DAT_080046c4);\n      }\n    }\n    counter_2 = counter_2 + 1;\n  }\n  process_data_080044e8_4(10);\n  return;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "is_parameter_valid_08006c9c",
                "param_1": "parameter",
                "bVar1": "is_valid",
                "DAT_08006cdc": "data",
                "FUN_08006b00": "initialize"
            },
            "code": "bool is_parameter_valid_08006c9c(int parameter)\n{\n  bool is_valid = parameter - 1U < 0x1000000;\n  if (is_valid) {\n    DAT_08006cdc[1] = parameter - 1;\n    initialize(0xffffffff, 0xf);\n    DAT_08006cdc[2] = 0;\n    *DAT_08006cdc = 7;\n  }\n  return !is_valid;\n}",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": false,
            "current_name": "is_parameter_valid_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = reverse_bits(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        FUN_08008ba0();\n        uVar25 = reverse_bits();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = reverse_bits();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = FUN_08008ba0();\n        uVar26 = reverse_bits();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = reverse_bits(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = reverse_bits(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_080094c0",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800b2e8",
                "FUN_08008b4c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "check_data_0800195c",
                "PTR_DAT_08001990": "data_array",
                "FUN_080025e8": "execute_function"
            },
            "code": "void check_data_0800195c(void)\n{\n  if ((PTR_DAT_08001990[1] != '\\x06') && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    execute_function();\n    PTR_DAT_08001990[2] |= 0x40;\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_data_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "is_input_not_null_08009214",
                "in_ZR": "input_char",
                "FUN_08009204": "call_function_to_initialize_input"
            },
            "code": "bool is_input_not_null_08009214(void)\n{\n  char input_char;\n  \n  call_function_to_initialize_input();\n  \n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "is_input_not_null_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_input_08004dd2",
                "bVar1": "input",
                "iVar2": "result",
                "PTR_DAT_08004e2c": "data_pointer",
                "FUN_08000310": "get_input",
                "FUN_080003ec": "process_input",
                "FUN_08004c48": "do_something"
            },
            "code": "int check_input_08004dd2() {\n  byte input = get_input();\n  if (input == 5) {\n    int result = process_input(PTR_DAT_08004e2c, 1, 0x40);\n    if (result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (input > 4) {\n      return 0;\n    }\n    int result = process_input(PTR_DAT_08004e2c, 1, 0x28);\n    if (result == 0) {\n      return 0;\n    }\n    do_something(0);\n  }\n  return 1;\n}",
            "called": [
                "FUN_08000310",
                "FUN_08004c48",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": false,
            "current_name": "check_input_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "execute_function_from_pointer_08005778",
                "PTR_DAT_0800578c": "pointer_to_data",
                "FUN_080052ac": "execute_function"
            },
            "code": "void execute_function_from_pointer_08005778(void)\n{\n  int16_t* pointer_to_function = *(int16_t **)PTR_DAT_0800578c;\n  execute_function(pointer_to_function);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "execute_function_from_pointer_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculateResultFromInputs_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "finalResult"
            },
            "code": "undefined4 calculateResultFromInputs_080028bc(undefined4 input1, undefined4 input2, undefined4 input3)\n{\n  undefined4 result1 = FUNC_08008eec(input2, input2);\n  undefined4 result2 = FUNC_08008eec(input1, input1);\n  undefined4 result3 = FUNC_08008cd8(result1, result2);\n  undefined4 result4 = FUNC_08008cdc(input3, input3);\n  undefined4 finalResult = FUNC_08009054(result3, result4);\n  return finalResult;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculateResultFromInputs_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "FUN_08006628": "get_shifted_value_08006628",
                "uVar1": "value",
                "uVar2": "leading_zeroes",
                "PTR_DAT_0800667c": "result_ptr",
                "PTR_DAT_08006678": "shift_amount_ptr",
                "DAT_08006674": "data_ptr"
            },
            "code": "uint32_t get_shifted_value_08006628() {\n    uint32_t value = get_uVar1();\n    uint32_t leading_zeroes = count_leading_zeroes(0xf000000);\n    uint32_t shift_amount = (*(uint32_t *)(PTR_DAT_08006674 + 8) & 0xf0) >> (leading_zeroes & 0xff);\n    *(uint32_t *)PTR_DAT_0800667c = value >> shift_amount;\n    return *(uint32_t *)PTR_DAT_0800667c;\n}",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_0800618c",
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "imported": false,
            "current_name": "get_shifted_value_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "update_param_if_valid_0800738e",
                "param_1": "new_param",
                "PTR_DAT_080073bc": "param_ptr",
                "DAT_080073bc": "param_data",
                "do_nothing_080073c0": "do_nothing"
            },
            "code": "void update_param_if_valid_0800738e(ushort new_param)\n{\n    uint* PTR_DAT_080073bc = (uint*)(DAT_080073bc + 0x14);\n    uint mask = *PTR_DAT_080073bc;\n    if (((uint)new_param & mask) != 0) {\n        *PTR_DAT_080073bc = (uint)new_param;\n        do_nothing_080073c0(new_param);\n    }\n    return;\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "update_param_if_valid_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  FUN_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = FUN_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      FUN_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            FUN_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      FUN_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_080052dc",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_080057e4",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "copy_data_and_call_functions_080092c4",
                "iVar1": "index",
                "puVar2": "ptr1",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void copy_data_and_call_functions_080092c4(void)\n{\n  int index;\n  undefined4 *ptr1;\n  code *jump_table;\n  \n  for (index = 0; PTR_DATA_08009304 + index < PTR_DATA_08009308; index += 4) {\n    *(undefined4 *)(PTR_DATA_08009304 + index) = *(undefined4 *)(DATA_08009300 + index);\n  }\n  \n  for (ptr1 = (undefined4 *)PTR_DATA_0800930c; ptr1 < PTR_DATA_08009310; ptr1++) {\n    *ptr1 = 0;\n  }\n  \n  call_function_1();\n  call_function_2();\n  jump_table = (code *)0x80092fa;\n  call_function_3(); /* Indirect jump */\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_08007540",
                "FUN_0800756c",
                "FUN_0800b3e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_call_functions_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "call_function_with_param_08008250",
                "param_1": "parameter",
                "FUN_08007e1c": "call_function"
            },
            "code": "void call_function_with_param_08008250(void* parameter)\n{\n  call_function(parameter);\n  return;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "imported": false,
            "current_name": "call_function_with_param_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "check_and_increment_0800184c",
                "param_1": "output",
                "param_2": "length",
                "param_3": "offset",
                "param_4": "input",
                "uVar2": "result",
                "iVar1": "result"
            },
            "code": "int check_and_increment_0800184c(byte *output, uint length, int offset, byte *input) {\n    int result;\n    if (*(char *)(offset + (uint)*input) == '\\0') {\n        result = 0;\n    }\n    else {\n        *output = *(byte *)(offset + (uint)*input);\n        if ((*output < 0x41) || (0x5a < *output)) {\n            *PTR_DAT_080018c8 = 2;\n            result = 0;\n        }\n        else {\n            *input = *input + 1;\n            result = check_and_increment_0800184c(output, length, offset, input);\n            if (result == 0) {\n                *PTR_DAT_080018c8 = 1;\n            }\n            else {\n                result = 1;\n            }\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_and_increment_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = reverse_and_improve(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = reverse_and_improve(uVar1);\n  uVar5 = thunk_FUN_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = FUN_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = reverse_and_improve(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = FUN_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = reverse_and_improve(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = reverse_and_improve(uVar1);\n  uVar6 = reverse_and_improve(local_34 & 0x7fffffff);\n  uVar5 = FUN_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = FUN_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = reverse_and_improve(uVar1);\n    uVar5 = FUN_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = FUN_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = FUN_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = FUN_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = reverse_and_improve(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = reverse_and_improve(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = reverse_and_improve(uVar1);\n        uVar5 = FUN_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = reverse_and_improve(uVar1);\n        uVar5 = FUN_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      FUN_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009250",
                "FUN_08009410",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_080096e8",
                "FUN_08008640",
                "FUN_08008bf0",
                "thunk_FUN_08009990",
                "FUN_08008cdc",
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_0800923c",
                "FUN_0800981c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "execute_function_on_parameter_08006ce0",
                "param_1": "parameter",
                "FUN_08006950": "execute_function"
            },
            "code": "void execute_function_on_parameter_08006ce0(void* parameter)\n{\n  execute_function(parameter);\n  return;\n}",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "execute_function_on_parameter_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "print_character_08006d4a",
                "param_1": "character_to_print",
                "FUN_080069e4": "print_to_console"
            },
            "code": "void print_character_08006d4a(char character_to_print)\n{\n  print_to_console((int)character_to_print);\n  return;\n}",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08001994",
                "FUN_080098d0",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "process_input_08000374",
                "param_1": "input_length",
                "param_2": "input_string",
                "param_3": "output_offset",
                "local_1c": "remaining_length",
                "local_18": "current_char",
                "local_14": "current_offset",
                "local_9": "checksum",
                "PTR_DAT_080003e8": "PTR_DAT_080003e8",
                "FUN_080002f0": "initialize",
                "FUN_08000340": "write_to_output"
            },
            "code": "void process_input_08000374(int input_length, char *input_string, int output_offset)\n{\n  int remaining_length = input_length;\n  char *current_char = input_string;\n  int current_offset = output_offset;\n  if (*(int *)PTR_DAT_080003e8 == 0) {\n    initialize();\n    current_char = input_string;\n    current_offset = output_offset;\n  }\n  char checksum = '\\0';\n  while (remaining_length != 0) {\n    checksum = (checksum != '\\0') + *current_char;\n    write_to_output(current_offset, *current_char);\n    current_char++;\n    current_offset++;\n    remaining_length--;\n  }\n  write_to_output(current_offset, checksum);\n  return;\n}",
            "called": [
                "FUN_080002f0",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004bf4",
                "FUN_08004bc0",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "process_input_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "num",
                "local_c": "absolute_value",
                "FUN_08008250": "print_char",
                "FUN_08003778": "print_integer"
            },
            "code": "void print_absolute_value_080037fc(int num)\n{\n  int absolute_value;\n  absolute_value = num;\n  if (num < 0) {\n    print_char('-');\n    absolute_value = -num;\n  }\n  print_integer(absolute_value);\n  return;\n}",
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_absolute_value_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "calculate_0800a1bc",
                "param_1": "x",
                "param_2": "y",
                "uVar1": "a",
                "uVar2": "b",
                "iVar3": "c",
                "uVar4": "d",
                "uVar5": "e",
                "uVar6": "f",
                "uVar7": "g",
                "uVar8": "h",
                "uVar9": "i",
                "uVar10": "j",
                "uVar11": "k",
                "uVar12": "l",
                "uVar13": "m",
                "uVar14": "n"
            },
            "code": "uint calculate_0800a1bc(uint x, uint y)\n{\n  uint a, b, c, d, e, f, g, h, i, j, k, l;\n  if ((DAT_0800a340 & ~y) == 0) {\n    h = FUNC_08008640(x, y, x, y);\n    b = FUNC_080082d4((int)h, (int)((ulonglong)h >> 0x20), x, y);\n    return b;\n  }\n  if ((int)y < 1) {\n    if ((y & 0x7fffffff | x) == 0) {\n      return x;\n    }\n    if (y != 0) {\n      h = FUNC_080082d0(x, y, x);\n      c = (undefined4)((ulonglong)h >> 0x20);\n      b = FUNC_08008894((int)h, c, (int)h, c);\n      return b;\n    }\n    do {\n      i = x;\n      b = i >> 0xb;\n      y = y - 0x15;\n      x = i << 0x15;\n    } while (b == 0);\n    d = y;\n    if (-1 < (int)i) goto LAB_0800a290;\n    j = 0x20;\n    e = 0xffffffff;\n    i = x;\n  }\n  else {\n    d = (int)y >> 0x14;\n    b = y;\n    i = x;\n    if (d != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    i = 0;\n    j = b;\n    do {\n      e = i;\n      b = j << 1;\n      l = j << 0xc;\n      i = e + 1;\n      j = b;\n    } while (-1 < l);\n    j = 0x20 - i;\n    y = d;\n    i = x << (i & 0xff);\n  }\n  b = x >> (j & 0xff) | b;\n  d = y - e;\n  b = b & 0xfffff | 0x100000;\n  if (-1 < (int)(d << 0x1f)) {\n    b = b * 2 - ((int)i >> 0x1f);\n    i = i << 1;\n  }\n  k = 0;\n  b = b * 2 - ((int)i >> 0x1f);\n  i = i << 1;\n  d = 0;\n  j = 0x16;\n  e = 0x200000;\n  do {\n    l = d + e;\n    if (l <= (int)b) {\n      b = b - l;\n      d = l + e;\n      k = k + e;\n    }\n    j = j - 1;\n    b = b * 2 - ((int)i >> 0x1f);\n    e = e >> 1;\n    i = i << 1;\n  } while (j != 0);\n  a = 0x20;\n  f = 0x80000000;\n  e = j;\n  do {\n    c = f + j;\n    g = d;\n    if ((int)d < (int)b) {\n      if ((int)c < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(c + f)) {\n          g = d + 1;\n        }\n      }\n      h = b - d;\n      d = g;\n      if (i < c) {\n        h = h - 1;\n      }\nLAB_0800a262:\n      j = c + f;\n      i = i - c;\n      e = e + f;\n      b = h;\n    }\n    else if ((b == d) && (c <= i)) {\n      if ((int)c < 0) goto LAB_0800a26a;\n      h = 0;\n      d = b;\n      goto LAB_0800a262;\n    }\n    a = a - 1;\n    f = f >> 1;\n    b = b * 2 - ((int)i >> 0x1f);\n    i = i << 1;\n    if (a == 0) {\n      if ((b | i) == 0) {\n        a = e >> 1;\n      }\n      else if (e == 0xffffffff) {\n        k = k + 1;\n      }\n      else {\n        a = e + 1 >> 1;\n      }\n      if ((k & 1) != 0) {\n        a = a | 0x80000000;\n      }\n      return a;\n    }\n  } while( true );\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_08008894"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "calculate_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "check_and_update_input_0800525c",
                "param_1": "input_char",
                "PTR_DAT_080052a8": "data_ptr",
                "FUN_08002fd4": "handle_error",
                "FUN_08005250": "handle_null_input",
                "do_nothing_0800522c": "handle_invalid_input",
                "do_nothing_08005220": "handle_valid_input",
                "do_nothing_08005208": "update_data"
            },
            "code": "void check_and_update_input_0800525c(char input_char) {\n  int input_int = (int)input_char;\n  int* PTR_DAT_080052a8 = (int*)PTR_DAT_080052a8;\n  int data_value = (uint)(byte)*PTR_DAT_080052a8;\n  if (input_int != data_value) {\n    FUN_08002fd4();\n    if (input_char == '\\0') {\n      FUN_08005250();\n    }\n    else {\n      if (input_char < '\\x01') {\n        do_nothing_0800522c();\n      }\n      else {\n        do_nothing_08005220();\n      }\n      do_nothing_08005208();\n    }\n    *PTR_DAT_080052a8 = input_int;\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_08002fd4",
                "FUN_0800522c",
                "FUN_08005220",
                "FUN_08005208"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_and_update_input_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_bit_in_short_at_offset_080073d4",
                "param_1": "offset"
            },
            "code": "void set_bit_in_short_at_offset_080073d4(uint offset) {\n    uint index = offset >> 4;\n    uint address = index * 0x400 + 0x4002001a;\n    short* target = (short*) address;\n    uint bit_offset = offset & 0xf;\n    short bit_value = 1 << bit_offset;\n    *target = bit_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_at_offset_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "print_character_08006dfe",
                "param_1": "character",
                "FUN_08006a8c": "print_to_screen"
            },
            "code": "void print_character_08006dfe(char character)\n{\n  print_to_screen((int)character);\n  return;\n}",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "execute_main_function_08006d66",
                "FUN_08006c70": "execute_sub_function"
            },
            "code": "void execute_main_function_08006d66(void)\n{\n  execute_sub_function();\n  return;\n}",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "execute_main_function_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "update_bits_08006e88",
                "param_1": "bit_array",
                "param_2": "update_array",
                "uVar1": "bit_mask",
                "uVar2": "update_mask",
                "iVar3": "index"
            },
            "code": "void update_bits_08006e88(uint *bit_array, uint *update_array)\n{\n  uint bit_mask;\n  uint update_mask;\n  int index;\n  for (index = 0; index < 0x10; index++) {\n    bit_mask = 1 << (index & 0xff);\n    update_mask = *update_array & bit_mask;\n    if (update_mask == bit_mask) {\n      if ((update_array[1] == 2) || (update_array[1] == 0x12)) {\n        bit_array[(index >> 3) + 8] = bit_array[(index >> 3) + 8] & ~(0xf << ((index & 7) << 2));\n        bit_array[(index >> 3) + 8] = bit_array[(index >> 3) + 8] | update_array[4] << ((index & 7) << 2);\n      }\n      *bit_array = *bit_array & ~(3 << ((index & 0x7f) << 1));\n      *bit_array = *bit_array | (update_array[1] & 3) << ((index & 0x7f) << 1);\n      if ((((update_array[1] == 1) || (update_array[1] == 2)) || (update_array[1] == 0x11)) || (update_array[1] == 0x12)) {\n        bit_array[2] = bit_array[2] & ~(3 << ((index & 0x7f) << 1));\n        bit_array[2] = bit_array[2] | update_array[3] << ((index & 0x7f) << 1);\n        bit_array[1] = bit_array[1] & ~(1 << (index & 0xff));\n        bit_array[1] = bit_array[1] | (update_array[1] >> 4 & 1) << (index & 0xff);\n      }\n      bit_array[3] = bit_array[3] & ~(3 << ((index & 0x7f) << 1));\n      bit_array[3] = bit_array[3] | update_array[2] << ((index & 0x7f) << 1);\n      if ((update_array[1] & 0x10000000) != 0) {\n        PTR_DAT_0800719c[1] = PTR_DAT_0800719c[1] | 0x4000;\n        PTR_DAT_080071a0[(index >> 2) + 2] = ~(0xf << ((index & 3) << 2)) & PTR_DAT_080071a0[(index >> 2) + 2];\n        if (bit_array == PTR_DAT_080071a4) {\n          index = 0;\n        }\n        else if (bit_array == PTR_DAT_080071a8) {\n          index = 1;\n        }\n        else if (bit_array == PTR_DAT_080071ac) {\n          index = 2;\n        }\n        else if (bit_array == PTR_DAT_080071b0) {\n          index = 3;\n        }\n        else if (bit_array == PTR_DAT_080071b4) {\n          index = 4;\n        }\n        else if (bit_array == PTR_DAT_080071b8) {\n          index = 5;\n        }\n        else if (bit_array == PTR_DAT_080071bc) {\n          index = 6;\n        }\n        else if (bit_array == PTR_DAT_080071c0) {\n          index = 7;\n        }\n        else if (bit_array == PTR_DAT_080071c4) {\n          index = 8;\n        }\n        else {\n          index = 10;\n        }\n        PTR_DAT_080071a0[(index >> 2) + 2] = index << ((index & 3) << 2) | PTR_DAT_080071a0[(index >> 2) + 2];\n        *PTR_DAT_080071cc = ~update_mask & *PTR_DAT_080071cc;\n        PTR_DAT_080071cc[1] = ~update_mask & PTR_DAT_080071cc[1];\n        if ((update_array[1] & 0x10000) != 0) {\n          *PTR_DAT_080071cc = update_mask | *PTR_DAT_080071cc;\n        }\n        if ((update_array[1] & 0x20000) != 0) {\n          PTR_DAT_080071cc[1] = update_mask | PTR_DAT_080071cc[1];\n        }\n        PTR_DAT_080071cc[2] = ~update_mask & PTR_DAT_080071cc[2];\n        PTR_DAT_080071cc[3] = ~update_mask & PTR_DAT_080071cc[3];\n        if ((update_array[1] & 0x100000) != 0) {\n          PTR_DAT_080071cc[2] = update_mask | PTR_DAT_080071cc[2];\n        }\n        if ((update_array[1] & 0x200000) != 0) {\n          PTR_DAT_080071cc[3] = update_mask | PTR_DAT_080071cc[3];\n        }\n      }\n    }\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_bits_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_binary_representation_of_uint_080036f0",
                "param_1": "number",
                "param_2": "num_bits",
                "uVar1": "binary_digit",
                "local_10": "i",
                "local_c": "mask",
                "FUN_08008250": "print_character"
            },
            "code": "void print_binary_representation_of_uint_080036f0(uint number, int num_bits) {\n  undefined4 binary_digit;\n  uint mask = 1 << (num_bits - 1) & 0xff;\n  for (int i = 0; i < num_bits; i++) {\n    if ((mask & number) == 0) {\n      binary_digit = 0x30;\n    }\n    else {\n      binary_digit = 0x31;\n    }\n    print_character(binary_digit);\n    mask = mask >> 1;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "imported": false,
            "current_name": "print_binary_representation_of_uint_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "execute_main_functions_08002edc",
                "FUN_08002a94": "execute_first_function",
                "FUN_08002ba8": "execute_second_function",
                "FUN_08002e08": "execute_third_function"
            },
            "code": "void execute_main_functions_08002edc(void)\n{\n  execute_first_function();\n  execute_second_function();\n  execute_third_function();\n  return;\n}",
            "called": [
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002a94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "imported": false,
            "current_name": "execute_main_functions_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "copy_string_0800375c",
                "param_1": "destination_string",
                "FUN_080036f0": "memcpy",
                "PTR_": "destination_string",
                "DAT_": "source_string"
            },
            "code": "void copy_string_0800375c(undefined2 PTR_, undefined2 DAT_)\n{\n  size_t string_length = 0x10;\n  memcpy(PTR_, DAT_, string_length);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": false,
            "current_name": "copy_string_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "index",
                "uVar2": "undefined_value",
                "uVar3": "unused_value",
                "uVar4": "result",
                "uVar5": "unused_value_2",
                "uVar6": "concat_result",
                "unsigned_input_4": "input_4_unsigned",
                "unsigned_input_5": "input_5_unsigned",
                "sign_bits": "sign_bits",
                "DAT_08009af0": "constant_1",
                "DAT_08009af4": "constant_2",
                "DAT_08009af8": "constant_3",
                "DAT_08009ae8": "constant_4",
                "DAT_08009aec": "constant_5",
                "DAT_08009b00": "constant_6",
                "DAT_08009b04": "constant_7",
                "DAT_08009b08": "constant_8",
                "DAT_08009b10": "constant_9",
                "DAT_08009b18": "constant_10",
                "PTR_DAT_08009b1c": "constant_pointer_1",
                "PTR_DAT_08009b20": "constant_pointer_2",
                "FUNC_0800af78": "do_nothing",
                "FUNC_080082d0": "calculate_concat_result",
                "FUNC_080082d4": "calculate_result_2",
                "FUNC_08008894": "calculate_result_3",
                "SCARRY4": "SCARRY4",
                "do_nothing_0800b2cc": "do_nothing_2"
            },
            "code": "uint calculate_result_08009990(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint result;\n  uint unsigned_input_4;\n  uint unsigned_input_5;\n  undefined8 concat_result;\n  \n  concat_result = CONCAT44(DAT_08009b04,DAT_08009b00);\n  unsigned_input_4 = input_4 & 0x7fffffff;\n  if ((DAT_08009b18 < (unsigned_input_4 | (-input_3 | input_3) >> 0x1f)) ||\n     (unsigned_input_5 = input_2 & 0x7fffffff, DAT_08009b18 < (unsigned_input_5 | (-input_1 | input_1) >> 0x1f))) {\n    result = FUNC_080082d4(input_3, input_4, input_1, input_2);\n  }\n  else {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      result = FUNC_0800af78();\n      return result;\n    }\n    uint sign_bits = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((unsigned_input_5 | input_1) == 0) {\n      result = DAT_08009af0;\n      if ((sign_bits != 2) && (result = input_1, sign_bits == 3)) {\n        result = DAT_08009af8;\n      }\n    }\n    else {\n      if ((unsigned_input_4 | input_3) != 0) {\n        if (unsigned_input_4 == DAT_08009b18) {\n          sign_bits = sign_bits - 1;\n          if (unsigned_input_5 == unsigned_input_4) {\n            if (2 < sign_bits) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + sign_bits * 8);\n          }\n          if (sign_bits < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + sign_bits * 8);\n          }\n          return 0;\n        }\n        if (unsigned_input_5 != DAT_08009b18) {\n          iVar1 = (int)(unsigned_input_5 - unsigned_input_4) >> 0x14;\n          if ((int)(unsigned_input_5 - unsigned_input_4) < 0x3d00000) {\n            if (((int)input_4 < 0) && (iVar1 + 0x3c < 0 != SCARRY4(iVar1,0x3c))) {\n              concat_result = 0;\n            }\n            else {\n              FUNC_08008894(input_1, input_2, input_3, input_4, input_4);\n              do_nothing_0800b2cc();\n              concat_result = FUNC_0800af78();\n            }\n          }\n          uVar2 = (undefined4)((ulonglong)concat_result >> 0x20);\n          result = (uint)concat_result;\n          if (sign_bits == 1) {\n            return result;\n          }\n          if (sign_bits == 2) {\n            concat_result = FUNC_080082d0(result, uVar2, DAT_08009ae8, DAT_08009aec);\n            result = FUNC_080082d0(DAT_08009af0, DAT_08009af4, (int)concat_result, (int)((ulonglong)concat_result >> 0x20));\n            return result;\n          }\n          if (sign_bits == 0) {\n            return result;\n          }\n          concat_result = FUNC_080082d0(result, uVar2, DAT_08009ae8, DAT_08009aec);\n          result = FUNC_080082d0((int)concat_result, (int)((ulonglong)concat_result >> 0x20), DAT_08009af0, DAT_08009af4);\n          return result;\n        }\n      }\n      result = DAT_08009b08;\n      if (-1 < (int)input_2) {\n        result = DAT_08009b00;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800af78",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": false,
            "current_name": "calculate_result_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "is_bit_set_08007e58",
                "DAT_08007e80": "data_pointer"
            },
            "code": "bool is_bit_set_08007e58(void)\n{\n  bool is_set = (*DAT_08007e80 & 0x20) != 0;\n  return is_set;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "is_bit_set_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8",
                "DAT_08005a4c": "data_start",
                "do_nothing_08005a5c": "do_nothing",
                "PTR_": "ptr_",
                "DAT_": "data_"
            },
            "code": "void initialize_data_080059f8()\n{\n    int* PTR_data = (int*)(DAT_08005a4c + 0x20);\n    *PTR_data = 0;\n    PTR_data = (int*)(DAT_08005a4c + 0x24);\n    *PTR_data = 0;\n    PTR_data = (int*)(DAT_08005a4c + 0x10);\n    *PTR_data = 0;\n    PTR_data = (int*)(DAT_08005a4c + 0x14);\n    *PTR_data = 0;\n    PTR_data = (int*)(DAT_08005a4c + 0x18);\n    *PTR_data = 0;\n    do_nothing_08005a5c();\n}\n",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "initialize_data_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "parse_input_string_08003f34",
                "bVar1": "char_to_add",
                "bVar2": "current_char",
                "uVar3": "result",
                "PTR_DAT_08004020": "input_buffer_index",
                "PTR_DAT_08004024": "input_buffer",
                "PTR_DAT_08004028": "is_paren_open",
                "PTR_DAT_0800401c": "is_input_complete",
                "FUN_08008286": "get_next_input_char",
                "FUN_08003a74": "print_output",
                "FUN_08003b98": "process_input",
                "FUN_08003980": "print_error_message",
                "undefined4": "int"
            },
            "code": "void parse_input_string_08003f34(void)\n{\n    char current_char;\n    char PTR_DAT_08004028 = 0;\n    char PTR_DAT_0800401c = 0;\n    char PTR_DAT_08004024[256] = {0};\n    while (!PTR_DAT_0800401c) {\n        current_char = get_next_input_char();\n        if (current_char == 0xff) {\n            return;\n        }\n        if ((current_char == 10) || (current_char == 0xd)) {\n            continue;\n        }\n        if (PTR_DAT_08004028 == 0) {\n            if ((current_char > 0x20) && (current_char != 0x2f)) {\n                if (current_char == 0x28) {\n                    PTR_DAT_08004028 = 1;\n                }\n                else if (PTR_DAT_08004024[0] == 0) {\n                    print_error_message();\n                    continue;\n                }\n                else if ((current_char < 0x61) || (current_char > 0x7a)) {\n                    PTR_DAT_08004024[strlen(PTR_DAT_08004024)] = current_char;\n                }\n                else {\n                    PTR_DAT_08004024[strlen(PTR_DAT_08004024)] = current_char - 0x20;\n                }\n            }\n        }\n        else if (current_char == 0x29) {\n            PTR_DAT_08004028 = 0;\n        }\n        if (PTR_DAT_0800401c == 0) {\n            if (PTR_DAT_08004024[0] == 0) {\n                print_error_message();\n            }\n            else {\n                int result = process_input(PTR_DAT_08004024);\n                print_output(result);\n            }\n            memset(PTR_DAT_08004024, 0, sizeof(PTR_DAT_08004024));\n            PTR_DAT_0800401c = is_complete();\n        }\n    }\n}",
            "called": [
                "FUN_08008286",
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "parse_input_string_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_signed_dividend_080095b8",
                "param_1": "dividend",
                "param_2": "divisor",
                "uVar1": "msb",
                "uVar2": "shift_amount",
                "uVar3": "normalized_divisor",
                "uVar4": "unused",
                "uVar5": "temp",
                "iVar4": "sign",
                "CARRY4": "carry_check"
            },
            "code": "int calculate_signed_dividend_080095b8(uint dividend, uint divisor)\n{\n  uint shift_amount;\n  uint normalized_divisor;\n  int sign = 1;\n  uint quotient;\n  shift_amount = (divisor << 1) >> 0x15;\n  normalized_divisor = divisor & 0xfffff | 0x100000;\n  if ((int)divisor < 0) {\n    sign = -1;\n  }\n  if ((int)(shift_amount - 0x3ff) < 0x14) {\n    if ((int)(shift_amount - 0x3ff) < 0) {\n      if (shift_amount - 0x3ff != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    normalized_divisor = normalized_divisor + (0x80000 >> (shift_amount & 0xff)) >> (0x14 - shift_amount & 0xff);\n  }\n  else {\n    if (shift_amount > 0x1e) {\n      return FUN_08008ba0();\n    }\n    if ((int)(shift_amount - 0x3ff) < 0x34) {\n      uint msb = 0x80000000 >> (shift_amount - 0x413 & 0xff);\n      if (CARRY4(msb,dividend) != false) {\n        normalized_divisor = normalized_divisor + 1;\n      }\n      normalized_divisor = normalized_divisor << (shift_amount - 0x413 & 0xff);\n      if (shift_amount - 0x3ff != 0x14) {\n        normalized_divisor = normalized_divisor | msb + dividend >> (0x34 - shift_amount & 0xff);\n      }\n    }\n    else {\n      normalized_divisor = normalized_divisor << (shift_amount - 0x413 & 0xff) | dividend << (shift_amount - 0x433 & 0xff);\n    }\n  }\n  return normalized_divisor * sign;\n}",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08001994",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_signed_dividend_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "print_result_08006cf6",
                "param_1": "output_char",
                "param_2": "input1",
                "param_3": "input2",
                "uVar1": "result",
                "FUN_08006998": "calculate_result",
                "FUN_08006ba0": "modify_result",
                "FUN_08006b00": "output_result"
            },
            "code": "void print_result_08006cf6(char output_char, int input1, int input2)\n{\n  int result;\n  result = calculate_result();\n  result = modify_result(result, input1, input2);\n  output_result((int)output_char, result);\n  return;\n}",
            "called": [
                "FUN_08006b00",
                "FUN_08006998",
                "FUN_08006ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "print_result_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "copy_and_modify_data_08002ef0",
                "*PTR_DAT_08002f1c": "dest_data_ptr",
                "*PTR_DAT_08002f18": "source_data_ptr",
                "uVar1": "modified_value",
                "FUN_08002870": "modify_data",
                "*PTR_DAT_08002f20": "dest_data_ptr + 1"
            },
            "code": "void copy_and_modify_data_08002ef0(void)\n{\n  int* source_ptr = *PTR_DAT_08002f18;\n  int* dest_ptr = *PTR_DAT_08002f1c;\n  *dest_ptr = *source_ptr;\n  int modified_value = modify_data(*source_ptr);\n  *(dest_ptr + 1) = modified_value;\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": false,
            "current_name": "copy_and_modify_data_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "print_message_08001d4c",
                "local_9": "message_length",
                "cVar1": "current_char",
                "FUNC_08001994": "print_character",
                "do_nothing_08002814": "do_nothing_08002814",
                "PTR_DAT_08001dd8": "PTR_DAT_08001dd8"
            },
            "code": "void print_message_08001d4c(void)\\n{\\n  char current_char;\\n  char message_length;\\n  initialize_printer();\\n  print_character(4,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\\n  print_character(3,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\\n  do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\\n  message_length = 2;\\n  while( true ) {\\n    current_char = message_length + -1;\\n    if (message_length == \"\\0\") break;\\n    print_character(7,0,1,*(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\\n    do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\\n    message_length = current_char;\\n    if (\"\\0\" < current_char) {\\n      print_character(7,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\\n      do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\\n    }\\n  }\\n  finalize_printer();\\n  return;\\n}",
            "called": [
                "FUN_08001994",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08002814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "print_message_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculate_result_08000268",
                "iVar1": "function_result",
                "DAT_0800029c": "data_1",
                "DAT_08000298": "data_2",
                "shift": "shift",
                "mask": "mask",
                "constant": "constant",
                "result": "result"
            },
            "code": "int calculate_result_08000268(void)\n{\n  int result;\n  int function_result = get_function_result();\n  int constant = 1000;\n  int DAT_0800029c = DAT_0800029c;\n  int DAT_08000298 = *(uint *)(DAT_08000298 + 8);\n  int shift = 3;\n  int mask = 0x21;\n  result = (function_result + 1) * constant - ((uint)((ulonglong)DAT_0800029c * (ulonglong)(DAT_08000298 >> shift) >> mask));\n  return result;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": false,
            "current_name": "calculate_result_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "print_uint_as_string_08003778",
                "param_1": "number",
                "local_1c": "quotient",
                "acStack_15": "digit_buffer",
                "local_9": "digit_count",
                "uVar1": "remainder"
            },
            "code": "void print_uint_as_string_08003778(uint number) {\n  uint remainder;\n  uint quotient = number;\n  char digit_buffer[12];\n  byte digit_count = 0;\n  if (number == 0) {\n    print_char('0');\n  }\n  else {\n    while (quotient != 0) {\n      remainder = quotient % 10;\n      quotient = quotient / 10;\n      digit_buffer[digit_count] = (char)(remainder + '0');\n      digit_count++;\n    }\n    while (digit_count != 0) {\n      digit_count--;\n      print_char(digit_buffer[digit_count]);\n    }\n  }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": false,
            "current_name": "print_uint_as_string_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "get_value_from_pointer_array_0800b3dc",
                "PTR_PTR_DAT_0800b3e4": "PTR_PTR_DATA"
            },
            "code": "int get_value_from_pointer_array_0800b3dc() {\n  int* ptr = *(int**)PTR_PTR_DAT_0800b3e4;\n  return *ptr;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_array_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "print_data_080046d0",
                "bVar1": "num",
                "cVar2": "ch",
                "uVar3": "val1",
                "uVar4": "val2"
            },
            "code": "void print_data_080046d0(void)\\n{\\n    byte num;\\n    char ch;\\n    undefined4 val1;\\n    undefined8 val2;\\n\\n    if (4 < (byte)PTR_DAT_08004890[1]) {\\n        print_string(PTR_DAT_080048a8);\\n        print_hex(PTR_DAT_08004890[0x1c] + 0x36);\\n        if (PTR_DAT_08004890[0x19] == \"\\0\") {\\n            if (PTR_DAT_08004890[0x1a] == \"\\x01\") {\\n                print_string(PTR_DAT_080048ac);\\n            }\\n            else {\\n                print_string(PTR_DAT_080048b0);\\n            }\\n        }\\n        else {\\n            print_string(PTR_DAT_080048b4);\\n        }\\n        if (PTR_DAT_08004890[3] == \"\\0\") {\\n            print_string(PTR_DAT_080048bc);\\n        }\\n        else {\\n            print_string(PTR_DAT_080048b8);\\n        }\\n        if (PTR_DAT_08004890[4] == \"\\0\") {\\n            print_string(PTR_DAT_080048c4);\\n        }\\n        else {\\n            print_string(PTR_DAT_080048c0);\\n        }\\n        if (PTR_DAT_08004890[2] == \"\\0\") {\\n            print_string(PTR_DAT_080048cc);\\n        }\\n        else {\\n            print_string(PTR_DAT_080048c8);\\n        }\\n        num = PTR_DAT_08004890[5];\\n        if (num == 2) {\\n            print_string(PTR_DAT_080048d8);\\n        }\\n        else if (num < 3) {\\n            if (num == 0) {\\n                print_string(PTR_DAT_080048d0);\\n            }\\n            else if (num == 1) {\\n                print_string(PTR_DAT_080048d4);\\n            }\\n        }\\n        ch = PTR_DAT_08004890[6];\\n        if (ch == \"\\x01\") {\\n            print_string(PTR_DAT_080048dc);\\n        }\\n        else if (ch < \"\\x02\") {\\n            if (ch == -1) {\\n                print_string(PTR_DAT_080048e0);\\n            }\\n            else if (ch == \"\\0\") {\\n                print_string(PTR_DAT_080048e4);\\n            }\\n        }\\n        num = PTR_DAT_08004890[7];\\n        if (num == 2) {\\n            print_string(PTR_DAT_080048f0);\\n        }\\n        else if (num < 3) {\\n            if (num == 0) {\\n                print_string(PTR_DAT_080048e8);\\n            }\\n            else if (num == 1) {\\n                print_string(PTR_DAT_080048ec);\\n            }\\n        }\\n        print_string(PTR_DAT_080048f4);\\n        print_hex(PTR_DAT_08004890[0x18]);\\n        print_string(PTR_DAT_080048f8);\\n        if (PTR_DAT_08004890[3] == \"\\0\") {\\n            print_int(*(undefined4 *)(PTR_DAT_08004890 + 8));\\n        }\\n        else {\\n            val2 = get_val(*(undefined4 *)(PTR_DAT_08004890 + 8));\\n            val2 = calc_val((int)val2,(int)((ulonglong)val2 >> 0x20),DAT_08004888,DAT_0800488c);\\n            val1 = get_val((int)val2,(int)((ulonglong)val2 >> 0x20));\\n            print_int(val1);\\n        }\\n        print_string(PTR_DAT_080048fc);\\n        return;\\n    }\\n                    /* WARNING: Could not recover jumptable at 0x080046de. Too many branches */\\n                    /* WARNING: Treating indirect jump as call */\\n    (*(code *)(&switchD_080046de::switchdataD_080046e4)[(byte)PTR_DAT_08004890[1]])();\\n    return;\\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_080037fc",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_data_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "perform_operation_on_input_08006d72",
                "param_1": "input_value",
                "uVar1": "result",
                "FUN_08006c9c": "perform_complex_operation"
            },
            "code": "int perform_operation_on_input_08006d72(int input_value) {\n  int result = perform_complex_operation(input_value);\n  return result;\n}",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "perform_operation_on_input_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "set_flags_0800756c",
                "DAT_080075bc": "flags_ptr",
                "DAT_080075c0": "flags_val_1",
                "DAT_080075c4": "data_ptr"
            },
            "code": "void set_flags_0800756c(void)\n{\n  unsigned int *DAT_080075bc = DAT_080075bc;\n  *DAT_080075bc |= 1;\n  DAT_080075bc[2] = 0;\n  *DAT_080075bc &= 0xfef6ffff;\n  DAT_080075bc[1] = DAT_080075c0;\n  *DAT_080075bc &= 0xfffbffff;\n  DAT_080075bc[3] = 0;\n  unsigned int *DAT_080075c4 = (unsigned int *)(DAT_080075c4 + 8);\n  *DAT_080075c4 = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "set_flags_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "clear_data_and_call_function_080001f8",
                "PTR_DAT_0800020c": "data_pointer",
                "FUN_08000210": "call_function"
            },
            "code": "void clear_data_and_call_function_080001f8(void)\n{\n  *PTR_DAT_0800020c = 0;\n  call_function();\n  return;\n}",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "clear_data_and_call_function_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "get_data_pointer_08002f74",
                "*puVar1": "data_pointer",
                "*PTR_DAT_08002fa0": "*PTR_START",
                "*PTR_DAT_08002fa4": "*PTR_END",
                "puVar1": "data_pointer",
                "PTR_DAT_08002fa8": "PTR_DATA"
            },
            "code": "undefined* get_data_pointer_08002f74(void)\n{\n  undefined* data_pointer;\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4)\n  {\n    data_pointer = (undefined*)0x0;\n  }\n  else\n  {\n    data_pointer = PTR_DAT_08002fa8 + (uint)(byte)*PTR_DAT_08002fa4 * 0x40;\n  }\n  return data_pointer;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "imported": false,
            "current_name": "get_data_pointer_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "i",
                "ppcVar2": "function_ptr",
                "iVar3": "num_functions",
                "PTR_DAT_0800b420": "start_functions_ptr",
                "PTR_DAT_0800b424": "end_functions_ptr",
                "PTR_DAT_0800b42c": "start_functions_ptr_2",
                "PTR_DAT_0800b428": "end_functions_ptr_2"
            },
            "code": "void execute_functions_0800b3e8(void)\n{\n  int num_functions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function_ptr = (code **)PTR_DAT_0800b424;\n    do {\n      i++;\n      (**function_ptr)();\n      function_ptr++;\n    } while (num_functions != i);\n  }\n  function_ptr = (code **)PTR_DAT_0800b42c;\n  int num_functions_2 = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c;\n  do_nothing_0800b5b0();\n  num_functions_2 = num_functions_2 >> 2;\n  if (num_functions_2 != 0) {\n    int i = 0;\n    do {\n      i++;\n      (**function_ptr)();\n      function_ptr++;\n    } while (num_functions_2 != i);\n  }\n  return;\n}",
            "called": [
                "FUN_080001ac",
                "FUN_0800b4d0",
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "execute_functions_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "perform_operation_080096e8",
                "param_1": "input_value",
                "param_2": "bitmask",
                "uVar1": "result",
                "uVar2": "operation_result",
                "local_28": "local_var_1",
                "uStack_24": "local_var_2",
                "local_20": "local_var_3",
                "uStack_1c": "local_var_4",
                "DAT_08009790": "MAXIMUM_BITMASK_VALUE",
                "DAT_08009794": "MINIMUM_BITMASK_VALUE",
                "FUNC_080082d0": "perform_complex_operation",
                "FUNC_08009d78": "perform_bitwise_operation",
                "FUN_0800a348": "perform_arithmetic_operation",
                "FUN_0800adf0": "perform_complex_arithmetic_operation"
            },
            "code": "int perform_operation_080096e8(int input_value, unsigned int bitmask) {\n  int result;\n  unsigned int operation_result;\n  int local_var_1;\n  int local_var_2;\n  int local_var_3;\n  int local_var_4;\n  \n  if (DAT_08009790 < (int)(bitmask & 0x7fffffff)) {\n    if (DAT_08009794 < (int)(bitmask & 0x7fffffff)) {\n      result = perform_complex_operation(input_value, bitmask, input_value, bitmask);\n    }\n    else {\n      operation_result = perform_bitwise_operation(input_value, bitmask, &local_var_1);\n      operation_result = operation_result & 3;\n      if (operation_result == 1) {\n        result = perform_arithmetic_operation(local_var_1, local_var_2, local_var_3, local_var_4);\n      }\n      else if (operation_result == 2) {\n        result = perform_complex_arithmetic_operation(local_var_1, local_var_2, local_var_3, local_var_4, 1);\n      }\n      else if (operation_result == 0) {\n        result = perform_complex_arithmetic_operation(local_var_1, local_var_2, local_var_3, local_var_4, 1);\n      }\n      else {\n        result = perform_arithmetic_operation(local_var_1, local_var_2, local_var_3, local_var_4);\n      }\n    }\n    return result;\n  }\n  result = perform_complex_arithmetic_operation(input_value, bitmask, 0, 0, 0);\n  return result;\n}",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "perform_operation_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "is_bit_set_08006a18",
                "param_1": "bit",
                "DAT_08006a54": "data",
                "uint": "uint32_t",
                "byte": "uint8_t"
            },
            "code": "bool is_bit_set_08006a18(uint8_t bit, uint32_t* DAT_08006a54)\n{\n    uint32_t index = (bit >> 5) + 0x40;\n    uint32_t mask = 1 << (bit & 0x1f);\n    return ((*(DAT_08006a54 + index)) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": false,
            "current_name": "is_bit_set_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_values_08002c18",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar1": "value1",
                "iVar2": "value2",
                "uVar3": "value3",
                "uVar4": "value4",
                "uVar5": "value5",
                "uVar6": "value6",
                "uVar7": "hash_value",
                "local_20": "result1",
                "local_1c": "result2"
            },
            "code": "void calculate_values_08002c18(int input, uint32_t param_2, uint32_t param_3)\n{\n    uint32_t uVar1, uVar3, uVar4, uVar5, uVar6;\n    uint64_t uVar7;\n    int local_20, local_1c;\n    \n    uVar1 = get_value(*(uint32_t *)(input + 0x3c));\n    uVar1 = modify_value(uVar1, param_2);\n    uVar7 = hash_value(uVar1);\n    uVar7 = hash_64_to_32((uint64_t)uVar7);\n    uVar1 = get_value((uint32_t)uVar7);\n    *(uint32_t *)(input + 0x28) = uVar1;\n    \n    uVar1 = get_value(*(uint32_t *)(input + 0x3c));\n    uVar1 = modify_value(uVar1, param_3);\n    uVar7 = hash_value(uVar1);\n    uVar7 = hash_64_to_32((uint64_t)uVar7);\n    uVar1 = get_value((uint32_t)uVar7);\n    *(uint32_t *)(input + 0x2c) = uVar1;\n    \n    uVar7 = hash_32_to_64(*(int *)(input + 0x30) * 50);\n    uVar7 = modify_value((uint32_t)uVar7, (uint32_t)(0x08002e04));\n    int iVar2 = get_value((uint32_t)hash_64_to_32((uint64_t)uVar7));\n    \n    uVar1 = get_value(*(uint32_t *)(input + 0x28));\n    uVar3 = get_value(*(uint32_t *)(input + 0x3c));\n    uVar4 = get_value(iVar2 * 2);\n    uVar1 = perform_operation(uVar1, uVar3, uVar4);\n    uVar7 = hash_value(uVar1);\n    uVar7 = hash_64_to_32((uint64_t)uVar7);\n    local_1c = get_value((uint32_t)uVar7);\n    \n    uVar1 = get_value(*(uint32_t *)(input + 0x3c));\n    uVar3 = get_value(*(uint32_t *)(input + 0x2c));\n    uVar4 = get_value(-iVar2);\n    uVar1 = perform_operation(uVar1, uVar3, uVar4);\n    uVar7 = hash_value(uVar1);\n    uVar7 = hash_64_to_32((uint64_t)uVar7);\n    local_20 = get_value((uint32_t)uVar7);\n    \n    local_20 = (*(int *)(input + 0x10) - local_1c) - local_20;\n    if (local_20 < 0) {\n        uVar1 = get_value(*(uint32_t *)(input + 0x28));\n        uVar3 = get_value(*(uint32_t *)(input + 0x2c));\n        uVar4 = get_value(iVar2);\n        uVar5 = get_value(*(uint32_t *)(input + 0x10));\n        uVar1 = perform_operation(uVar1, uVar3, uVar4, uVar5);\n        uVar7 = hash_value(uVar1);\n        uVar7 = hash_64_to_32((uint64_t)uVar7);\n        uVar6 = get_value((uint32_t)uVar7);\n        uVar6 = uVar6 & ~((int)uVar6 >> 0x1f);\n        local_1c = *(uint32_t *)(input + 0x10);\n        if ((int)uVar6 <= (int)*(uint32_t *)(input + 0x10)) {\n            local_1c = uVar6;\n        }\n        local_20 = 0;\n    }\n    *(uint32_t *)(input + 0x34) = local_1c;\n    *(uint32_t *)(input + 0x38) = local_20 + local_1c;\n    return;\n}",
            "called": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_0800856c",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "calculate_values_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "is_bit_set_at_position_08006ac0",
                "param_1": "position",
                "DAT_08006afc": "data_start_address"
            },
            "code": "bool is_bit_set_at_position_08006ac0(byte position) {\n    uint* data = (uint*)(DAT_08006afc + (((uint)(int)(char)position >> 5) + 0x80) * 4);\n    uint bitmask = 1 << (position & 0x1f);\n    return ((*data & bitmask) != 0);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": false,
            "current_name": "is_bit_set_at_position_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "FUN_08002ba8": "decrypt_data_08002ba8",
                "puVar1": "current_char_ptr",
                "puVar2": "previous_char_ptr",
                "puVar3": "data_ptr",
                "local_14": "last_data_ptr",
                "local_10": "data_ptr",
                "local_9": "current_index"
            },
            "code": "void decrypt_data_08002ba8(void)\n{\n  undefined *current_char_ptr;\n  undefined *previous_char_ptr;\n  undefined *data_ptr;\n  undefined *last_data_ptr;\n  byte current_index;\n  current_index = *data_index_start;\n  last_data_ptr = (undefined *)0x0;\n  previous_char_ptr = (undefined *)0x0;\n  data_ptr = (undefined *)0x0;\n  while (previous_char_ptr != last_data_ptr) {\n    last_data_ptr = data_ptr;\n    current_char_ptr = data_ptr + (uint)current_index * 0x40;\n    decrypt_block(previous_char_ptr,data_ptr,current_char_ptr);\n    current_index = calculate_next_index(current_index);\n    previous_char_ptr = data_ptr;\n    data_ptr = current_char_ptr;\n  }\n  decrypt_block(previous_char_ptr,data_ptr,(undefined *)0x0,last_data_ptr,previous_char_ptr);\n  return;\n}",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "decrypt_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "doubled_input_1",
                "uVar3": "doubled_input_2",
                "uVar4": "bitwise_or",
                "bVar1": "is_negative_1",
                "bVar5": "is_bitwise_or_zero"
            },
            "code": "uint calculate_result_0800919c(uint input_1, uint input_2)\n{\n    bool is_negative_1 = false;\n    bool is_negative_2 = false;\n    uint doubled_input_1 = input_1 * 2;\n    uint doubled_input_2 = input_2 * 2;\n    if (((int)doubled_input_1 >> 0x18 == -1 || (int)doubled_input_2 >> 0x18 == -1) && ((((int)doubled_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) || (((int)doubled_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n        return 1;\n    }\n    uint bitwise_or = doubled_input_1 | input_2 & 0x7fffffff;\n    bool is_bitwise_or_zero = (bitwise_or == 0);\n    if (!is_bitwise_or_zero) {\n        bitwise_or = input_1 ^ input_2;\n        is_bitwise_or_zero = (bitwise_or == 0);\n    }\n    is_negative_1 = -1 < (int)bitwise_or;\n    if (is_negative_1) {\n        input_1 = doubled_input_1 + input_2 * -2;\n        is_bitwise_or_zero = (input_1 == 0);\n    }\n    if (is_negative_1 && doubled_input_2 <= doubled_input_1 && !is_bitwise_or_zero) {\n        input_1 = (int)input_2 >> 0x1f;\n    }\n    if (!is_negative_1 || doubled_input_2 > doubled_input_1) {\n        input_1 = ~((int)input_2 >> 0x1f);\n    }\n    if (!is_bitwise_or_zero) {\n        input_1 = input_1 | 1;\n    }\n    return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": false,
            "current_name": "calculate_result_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "extract_bits_0800854c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shift_amount2",
                "iVar3": "num_leading_zeros",
                "uVar4": "shift_amount",
                "in_r12": "overflow_check",
                "bVar5": "overflow",
                "bVar6": "no_overflow",
                "bVar7": "overflow_check2"
            },
            "code": "unsigned long long extract_bits_0800854c(uint input) {\n    if (input == 0) {\n        return 0;\n    }\n    uint num_leading_zeros = count_leading_zeroes(input);\n    uint shift_amount = num_leading_zeros + 21;\n    uint overflow_check = shift_amount - 32;\n    uint shift_amount2 = num_leading_zeros - 11;\n    bool overflow = (int)overflow_check < 0;\n    bool no_overflow = shift_amount2 == 0;\n    uint result = 0;\n    if ((int)shift_amount < 32) {\n        overflow = (int)shift_amount2 < 0;\n        no_overflow = num_leading_zeros + 1 == 0;\n        shift_amount2 = shift_amount;\n        if (!no_overflow && overflow == (bool)(shift_amount2 - 12 < 0)) {\n            result = input << (shift_amount & 0xff);\n            input = input >> ((12 - num_leading_zeros) & 0xff);\n            goto LAB_08008458;\n        }\n    }\n    if (no_overflow || overflow != (bool)(overflow_check < 0)) {\n        uint shift_amount3 = 32 - shift_amount2;\n        input = input << (shift_amount2 & 0xff);\n        if (no_overflow || overflow != (bool)(overflow_check < 0)) {\n            input = input | 0U >> (shift_amount3 & 0xff);\n        }\n        if (no_overflow || overflow != (bool)(overflow_check < 0)) {\n            result = 0 << (shift_amount2 & 0xff);\n        }\n    }\nLAB_08008458:\n    if ((int)shift_amount < 1075) {\n        return (((unsigned long long)input + (1074 - shift_amount) * 0x100000) << 32) | result;\n    }\n    uint shift_amount4 = ~(1074 - shift_amount);\n    if (30 < (int)shift_amount4) {\n        return (unsigned long long)input >> ((shift_amount4 - 31) & 0xff);\n    }\n    int overflow_check2 = shift_amount4 - 19;\n    if (overflow_check2 == 0 || overflow_check2 < 0 != (shift_amount4 - 31 < 0)) {\n        shift_amount4++;\n        return (((unsigned long long)input >> (shift_amount4 & 0xff)) << 32) | (result >> (shift_amount4 & 0xff) | input << ((32 - shift_amount4) & 0xff));\n    }\n    return (unsigned long long)(result >> ((12 - overflow_check2) & 0xff) | input << ((12 - overflow_check2) & 0xff));\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "extract_bits_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "reverse_and_shift_bits_08008e44",
                "param_1": "input",
                "iVar1": "leading_zeroes_count",
                "uVar2": "shift_amount",
                "iVar4": "shifted_constant",
                "uVar3": "sign_bit",
                "uVar5": "shifted_zero",
                "result": "shifted_result",
                "shifted_input": "shifted_input",
                "shifted_inverse_input": "shifted_inverse_input",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint reverse_and_shift_bits_08008e44(uint input)\n{\n  int leading_zeroes_count = count_leading_zeroes(input);\n  uint shifted_input = input << (leading_zeroes_count + 0x18U & 0xff);\n  uint sign_bit = input & 0x80000000;\n  uint constant = (sign_bit | 0x4b000000) - 0x800000;\n  int shift_amount = leading_zeroes_count - 8;\n  uint shifted_constant = constant + shift_amount * -0x800000;\n  if (leading_zeroes_count > 7) {\n    uint shifted_zero = 0 << (shift_amount & 0xff);\n    uint shifted_one = 0U >> (0x20 - shift_amount & 0xff);\n    uint shifted_sign_bit = (uint)(0x7fffffff < shifted_zero);\n    uint result = shifted_constant + shifted_input + shifted_one + shifted_sign_bit;\n    if (shifted_zero == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_inverse_input = (input >> (0x20 - (leading_zeroes_count + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f);\n  if ((shifted_input & 0x7fffffff) == 0) {\n    shifted_inverse_input = shifted_inverse_input & ~(shifted_input >> 0x1f);\n  }\n  return shifted_constant + shifted_inverse_input;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "reverse_and_shift_bits_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "set_param_value_0800733e",
                "param_1": "param_index",
                "param_2": "value",
                "param_3": "is_second_param"
            },
            "code": "void set_param_value_0800733e(int param_index, undefined2 value, char is_second_param)\n{\n  if (is_second_param == '\\0') {\n    *(undefined2 *)(param_index + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(param_index + 0x18) = value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "set_param_value_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "initialize_program_0800583c",
                "PTR_DAT_08005858": "data_pointer",
                "FUN_080052ac": "execute_function_at_address",
                "FUN_08005790": "execute_function_at_address",
                "FUN_080057e4": "execute_function_at_address"
            },
            "code": "void initialize_program_0800583c(void)\n{\n    int data_offset = 0x18;\n    int* data_ptr = PTR_DAT_08005858 + data_offset;\n    int data = *(short*)data_ptr;\n\n    execute_function_at_address(FUN_080052ac, data);\n    execute_function_at_address(FUN_08005790);\n    execute_function_at_address(FUN_080057e4);\n}\n",
            "called": [
                "FUN_080052ac",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_program_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "process_data_08001e98",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "data5",
                "iVar1": "result",
                "PTR_DAT_08001efc": "PTR_DATA",
                "FUN_08003a74": "perform_action",
                "FUN_08002fac": "check_condition",
                "FUNC_08003004": "execute_function",
                "0x10": "16",
                "FUN_0800585c": "perform_additional_action"
            },
            "code": "void process_data_08001e98(undefined4 data1, undefined4 data2, undefined4 data3, undefined4 data4, undefined data5)\\n{\\n    int result;\\n    if (PTR_DAT_08001efc[1] != \"\\a\") {\\n        do {\\n            perform_action();\\n            if (*PTR_DAT_08001efc == \"\\0\") {\\n                return;\\n            }\\n            result = check_condition();\\n        } while (result != 0);\\n        execute_function(data1, data2, data3, data4, data5);\\n        if (PTR_DAT_08001efc[1] == \"\\0\") {\\n            PTR_DAT_08001efc[1] = 2;\\n        }\\n        if (PTR_DAT_08001efc[0x10] != \"\\0\") {\\n            perform_additional_action();\\n        }\\n    }\\n    return;\\n}",
            "called": [
                "FUN_08002fac",
                "FUN_08003004",
                "FUN_0800585c",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_bit_in_array_080069e4",
                "param_1": "bit_index",
                "DAT_08006a14": "array_start",
                "uint": "uint32_t",
                "int": "int32_t",
                "char": "uint8_t"
            },
            "code": "void set_bit_in_array_080069e4(uint8_t bit_index) {\n    uint32_t* array_ptr = (uint32_t*)(DAT_08006a14 + (((uint32_t)bit_index >> 5) + 0x20) * 4);\n    uint8_t bit_offset = bit_index & 0x1f;\n    *array_ptr = 1 << bit_offset;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "set_sign_bit_0800b2d4",
                "param_1": "value",
                "param_2": "input_value"
            },
            "code": "uint32_t set_sign_bit_0800b2d4(uint32_t value) {\n    uint32_t result = value | 0x80000000;\n    result += 0x100000;\n    result >>= 0x1f;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "set_sign_bit_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_hash_08008e3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "mask",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_hash_08008e3c(uint input)\n{\n  if (input == 0) {\n    return 0;\n  }\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zeroes = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < (0 << (shift_amount & 0xff)));\n    uint result = multiplier + shifted_input + shifted_zeroes + carry;\n    if ((0 << (shift_amount & 0xff)) == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  int shifted_multiplier = multiplier + ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f));\n  uint mask = shifted_input & 0x7fffffff;\n  if (mask == 0) {\n    shifted_multiplier = shifted_multiplier & ~(shifted_input >> 0x1f);\n  }\n  return shifted_multiplier;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "calculate_double_08009654",
                "param_1": "first_half",
                "param_2": "second_half",
                "uVar1": "exponent",
                "uVar2": "shift",
                "lVar3": "result",
                "DAT_080096e4": "mask",
                "CARRY4": "carry_check"
            },
            "code": "longlong calculate_double_08009654(uint first_half, uint second_half) {\n  longlong result = CONCAT44(second_half, first_half);\n  uint shift = (second_half << 1) >> 0x15;\n  uint exponent = shift - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      second_half = second_half & 0x80000000;\n      if (exponent == 0xffffffff) {\n        second_half = second_half | 0x3ff00000;\n      }\n      result = (ulonglong)second_half << 0x20;\n    }\n    else {\n      uint DAT_080096e4 = DAT_080096e4 >> (exponent & 0xff);\n      result = CONCAT44(second_half, first_half);\n      if ((second_half & DAT_080096e4 | first_half) != 0) {\n        result = (ulonglong)(second_half + (0x80000 >> (exponent & 0xff)) & ~DAT_080096e4) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    uint DAT_080096e4 = 0xffffffff >> (shift - 0x413 & 0xff);\n    if ((first_half & DAT_080096e4) != 0) {\n      uint bit = 1 << (0x33 - exponent & 0xff);\n      if (CARRY4(first_half, bit) != false) {\n        second_half = second_half + 1;\n      }\n      result = CONCAT44(second_half, first_half + bit & ~DAT_080096e4);\n    }\n  }\n  else {\n    result = CONCAT44(second_half, first_half);\n    if (exponent == 0x400) {\n      result = FUNC_080082d4();\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "calculate_double_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2",
                "_DAT_40000000": "ptr_flags",
                "_DAT_4000000c": "ptr_control"
            },
            "code": "void clear_flags_08007bc2(void)\n{\n  unsigned int *_DAT_40000000 = (unsigned int*) 0x40000000;\n  unsigned int *_DAT_4000000c = (unsigned int*) 0x4000000c;\n  *_DAT_40000000 &= 0xfffffffe;\n  *_DAT_4000000c &= 0xfffffff8;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "clear_flags_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "calculate_result_08009410",
                "param_1": "input_value",
                "param_2": "input_flag",
                "uVar1": "result_value",
                "uVar2": "flag_value",
                "local_28": "local_var1",
                "uStack_24": "stack_var1",
                "local_20": "local_var2",
                "uStack_1c": "stack_var2",
                "DAT_080094b4": "max_input_value",
                "DAT_080094b8": "max_input_value2",
                "FUNC_080082d0": "compute_value",
                "FUNC_08009d78": "get_flag_value",
                "FUN_0800adf0": "process_value",
                "FUNC_0800a348": "compute_value2"
            },
            "code": "undefined4 calculate_result_08009410(undefined4 input_value, uint input_flag) {\n  undefined4 result_value;\n  uint flag_value;\n  undefined4 local_var1;\n  undefined4 stack_var1;\n  undefined4 local_var2;\n  undefined4 stack_var2;\n  if (DAT_080094b4 < (int)(input_flag & 0x7fffffff)) {\n    if (DAT_080094b8 < (int)(input_flag & 0x7fffffff)) {\n      result_value = compute_value(input_value, input_flag, input_value, input_flag);\n    }\n    else {\n      flag_value = get_flag_value(input_value, input_flag, &local_var1);\n      flag_value = flag_value & 3;\n      if (flag_value == 1) {\n        result_value = process_value(local_var1, stack_var1, local_var2, stack_var2, 1);\n      }\n      else if (flag_value == 2) {\n        result_value = compute_value2(local_var1, stack_var1, local_var2, stack_var2);\n      }\n      else if (flag_value == 0) {\n        result_value = compute_value2(local_var1, stack_var1, local_var2, stack_var2);\n      }\n      else {\n        result_value = process_value(local_var1, stack_var1, local_var2, stack_var2, 1);\n      }\n    }\n    return result_value;\n  }\n  result_value = compute_value(input_value, input_flag, 0, 0);\n  return result_value;\n}",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "set_parameters_in_memory_080035ec",
                "param_1": "first_parameter",
                "param_2": "second_parameter",
                "param_3": "third_parameter",
                "PTR_DAT_08003614": "memory_location"
            },
            "code": "void set_parameters_in_memory_080035ec(unsigned int param_1, unsigned int param_2, unsigned int param_3)\n{\n  *(unsigned int *)PTR_DAT_08003614 = param_1;\n  *(unsigned int *)(PTR_DAT_08003614 + 4) = param_2;\n  *(unsigned int *)(PTR_DAT_08003614 + 8) = param_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "set_parameters_in_memory_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "synchronize_data_08006c70",
                "DAT_08006c94": "PTR_data",
                "DAT_08006c98": "data_mask",
                "PTR_data": "PTR_data",
                "data_mask": "data_mask"
            },
            "code": "void synchronize_data_08006c70(void)\n{\n  DataSynchronizationBarrier(0xf);\n  uint* data = (uint*)(DAT_08006c94 + 0xc);\n  *data = DAT_08006c98 | (*data & 0x700);\n  DataSynchronizationBarrier(0xf);\n  while(true)\n  {\n    // Do nothing block with infinite loop\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": false,
            "current_name": "synchronize_data_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "convert_char_to_int_and_pass_to_another_function_08006d98",
                "param_1": "character_to_convert",
                "param_2": "parameter_2",
                "param_3": "parameter_3",
                "param_4": "parameter_4",
                "uVar1": "converted_integer"
            },
            "code": "void convert_char_to_int_and_pass_to_another_function_08006d98(char character_to_convert, undefined4 parameter_2, undefined4 parameter_3, undefined4 parameter_4)\n{\n  undefined4 converted_integer = FUN_08006b54((int)character_to_convert);\n  FUN_08006c04(converted_integer, parameter_2, parameter_3, parameter_4);\n  return;\n}",
            "called": [
                "FUN_08006c04",
                "FUN_08006b54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_and_pass_to_another_function_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_ptr_dat_08005a80_08005a68",
                "PTR_DAT_08005a80": "ptr_dat_08005a80"
            },
            "code": "void increment_ptr_dat_08005a80_08005a68()\n{\n  int* PTR_DAT_08005a80 = (int*) PTR_DAT_08005a80;\n  int current_value = *PTR_DAT_08005a80;\n  *PTR_DAT_08005a80 = current_value + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "increment_ptr_dat_08005a80_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0",
                "PTR_DAT_080079d8": "data_array",
                "PTR_DAT_080079dc": "data_flag"
            },
            "code": "void initialize_data_080079c0(void)\n{\n  memset(PTR_DAT_080079d8, 0, sizeof(PTR_DAT_080079d8));\n  *(int *)PTR_DAT_080079dc = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "returnZero_0800b2e0"
            },
            "code": "int returnZero_0800b2e0(void)\n{\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "returnZero_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result1",
                "uVar2": "result2",
                "FUNC_08008cdc": "square",
                "FUNC_08008eec": "add",
                "FUNC_08008cd8": "multiply",
                "FUNC_08009054": "divide"
            },
            "code": "float calculate_result_08002908(float value1, float value2, float value3, float value4)\n{\n  float result1 = square(value3);\n  result1 = add(result1, value4);\n  float result2 = square(value1);\n  result1 = multiply(result1, result2);\n  result2 = square(value2);\n  result1 = add(result1, result2);\n  result2 = 4.0;\n  result1 = divide(result1, result2);\n  return result1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_data_at_address_08007c40",
                "param_1": "address",
                "_DAT_40000034": "data"
            },
            "code": "\nvoid set_data_at_address_08007c40(void* address, int _DAT_40000034)\n{\n  int* ptr__DAT_40000034 = (int*)address;\n  *ptr__DAT_40000034 = _DAT_40000034;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_data_at_address_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "bVar4": "carry_flag",
                "uVar5": "temp4",
                "lVar6": "result"
            },
            "code": "long long calculate_result_080094c0(uint input1, uint input2, undefined4 param3, undefined4 param4)\n{\n  int temp1;\n  uint temp2;\n  uint temp3;\n  bool carry_flag;\n  undefined8 temp4;\n  long long result;\n  temp3 = (input2 << 1) >> 0x15;\n  temp2 = temp3 - 0x3ff;\n  if ((int)temp2 < 0x14) {\n    if ((int)temp2 < 0) {\n      temp4 = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, param4);\n      temp1 = FUN_08008b60((int)temp4, (int)((ulonglong)temp4 >> 0x20), 0, 0);\n      result = CONCAT44(input2, input1);\n      if (temp1 != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = DAT_080095b4;\n          }\n          result = (ulong long)input2 << 0x20;\n        }\n        else {\n          result = 0;\n        }\n      }\n    }\n    else {\n      temp3 = DAT_080095b0 >> (temp2 & 0xff);\n      result = CONCAT44(input2, input1);\n      if ((input2 & temp3 | input1) != 0) {\n        temp4 = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, param4);\n        temp1 = FUN_08008b60((int)temp4, (int)((ulonglong)temp4 >> 0x20), 0, 0);\n        result = CONCAT44(input2, input1);\n        if (temp1 != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (temp2 & 0xff));\n          }\n          result = (ulong long)(input2 & ~temp3) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)temp2 < 0x34) {\n    temp3 = 0xffffffff >> (temp3 - 0x413 & 0xff);\n    result = CONCAT44(input2, input1);\n    if ((temp3 & input1) != 0) {\n      temp4 = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, param4);\n      temp1 = FUN_08008b60((int)temp4, (int)((ulonglong)temp4 >> 0x20), 0, 0);\n      result = CONCAT44(input2, input1);\n      if (temp1 != 0) {\n        if ((int)input2 < 0) {\n          if (temp2 == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            temp2 = 1 << (0x34 - temp2 & 0xff);\n            carry_flag = CARRY4(temp2, input1);\n            input1 = temp2 + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        result = CONCAT44(input2, input1 & ~temp3);\n      }\n    }\n  }\n  else {\n    result = CONCAT44(input2, input1);\n    if (temp2 == 0x400) {\n      result = FUNC_080082d4();\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_08003826",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_byte_08006b54",
                "param_1": "input_byte",
                "bVar1": "output_byte",
                "DAT_08006b98": "data_array_1",
                "DAT_08006b9c": "data_array_2"
            },
            "code": "byte get_byte_08006b54(byte input_byte) {\\n  byte output_byte;\\n  if ((char)input_byte < \"\\0\") {\\n    output_byte = *(byte *)((input_byte & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    output_byte = *(byte *)((char)input_byte + DAT_08006b9c + 0x300);\\n  }\\n  return output_byte >> 4;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "get_byte_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_value_from_ptr_plus_four_08007e84",
                "DAT_08007ea0": "PTR_DATA_PLUS_ZERO",
                "uint": "unsigned int",
                "PTR_": "PTR_",
                "DAT_": "PTR_"
            },
            "code": "uint get_value_from_ptr_plus_four_08007e84(void)\n{\n  uint* ptr = (uint*)(DAT_08007ea0 + 4);\n  uint value = *ptr & 0xff;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "get_value_from_ptr_plus_four_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "perform_action_if_condition_met_080057e4",
                "FUN_08007bc2": "initialize_system",
                "do_nothing_0800530c": "do_nothing"
            },
            "code": "void perform_action_if_condition_met_080057e4(void)\n{\n  initialize_system();\n  if ((PTR_DAT_0800580c[0x3c] != -1) || ((PTR_DAT_08005810[2] & 0x20) != 0)) {\n    do_nothing();\n  }\n  return;\n}",
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_080025e8",
                "FUN_080053a0",
                "FUN_08001d4c",
                "FUN_0800583c"
            ],
            "imported": false,
            "current_name": "perform_action_if_condition_met_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "get_result_08006d8a",
                "uVar1": "result",
                "FUN_08006998": "calculate_result"
            },
            "code": "int get_result_08006d8a(void)\n{\n  int result;\n  result = calculate_result();\n  return result;\n}",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "get_result_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "combinedInputs",
                "FUNC_08008640": "calculateHelper",
                "DAT_0800b3c8": "constant1",
                "DAT_0800b3cc": "constant2",
                "DAT_0800b3d8": "constant3",
                "DAT_0800b3d0": "constant4",
                "DAT_0800b3b8": "constant5",
                "DAT_0800b3bc": "constant6",
                "DAT_0800b3d4": "constant7",
                "DAT_0800b3c0": "constant8",
                "DAT_0800b3c4": "constant9"
            },
            "code": "uint calculate_0800b2e8(uint input1, uint input2, int input3, undefined4 input4) {\n  uint result1;\n  int result2;\n  uint result3;\n  ulonglong combinedInputs = CONCAT44(input2, input1);\n  uint shiftValue = (input2 << 1) >> 0x15;\n  if (shiftValue == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    combinedInputs = FUNC_08008640(input1, input2, 0, DAT_0800b3c8);\n    if (input3 < DAT_0800b3cc) {\n      goto LAB_0800b34a;\n    }\n    shiftValue = ((uint)((int)(combinedInputs >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftValue == 0x7ff) {\n    result1 = FUNC_080082d4(input1, input2, input1, input2, input4);\n    return result1;\n  }\n  result3 = (uint)(combinedInputs >> 0x20);\n  result2 = shiftValue + input3;\n  if (result2 < 0x7ff) {\n    if (0 < result2) {\n      return (uint)combinedInputs;\n    }\n    if (result2 + 0x35 < 0 == SCARRY4(result2, 0x35)) {\n      result1 = FUNC_08008640((uint)combinedInputs, result3 & 0x800fffff | (result2 + 0x36) * 0x100000, 0, DAT_0800b3d8);\n      return result1;\n    }\n    if (input3 < 0xc351) {\n      combinedInputs = combinedInputs & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\n      goto LAB_0800b34a;\n    }\n  }\n  result1 = FUNC_08008640(DAT_0800b3d4, result3 & 0x80000000 | 0x7e37e43c, DAT_0800b3c0, DAT_0800b3c4);\n  return result1;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "calculate_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "check_odd_bit_08007520",
                "param_1": "number",
                "FUN_080073d4": "print_error",
                "DAT_0000003e": "ERROR_ODD_BIT"
            },
            "code": "void check_odd_bit_08007520(uint number)\n{\n  if ((number & 1) != 0) {\n    print_error(62);\n  }\n  return;\n}",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_odd_bit_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "calculate_result_08007884",
                "iVar1": "num1",
                "iVar2": "num2",
                "iVar3": "num3",
                "iVar4": "num4",
                "iVar5": "num5",
                "uVar6": "result",
                "FUN_08007854": "get_value"
            },
            "code": "uint calculate_result_08007884(void)\n{\n  int num1 = get_value(0x36);\n  int num2 = get_value(0x37);\n  int num3 = get_value(0x38);\n  int num4 = get_value(0x39);\n  int num5 = get_value(0xf);\n  uint result = get_value(0) | num1 << 4 | num2 << 3 | num3 << 2 | num4 << 1 | num5 << 7;\n  return result;\n}",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_result_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "initializeSettings_08004250",
                "PTR_DAT_08004474": "settings",
                "PTR_s___x__step_mm___1__08004478": "xStep",
                "PTR_s___y__step_mm___2__0800447c": "yStep",
                "PTR_s___z__step_mm___3__08004480": "zStep",
                "PTR_DAT_08004474[0xd]": "pulseWidth",
                "PTR_s___step_pulse__usec___4__08004484": "stepPulseUsecs",
                "PTR_s___default_feed__mm_min___5__08004488": "defaultFeedRate",
                "PTR_s___default_seek__mm_min___6__0800448c": "defaultSeekRate",
                "PTR_DAT_08004474 + 0x18": "stepInvertMask",
                "PTR_s___step_idle_delay__msec___8__08004498": "stepIdleDelay",
                "PTR_s___acceleration__mm_sec_2___9__080044a0": "acceleration",
                "PTR_s___junction_deviation__mm___10__080044a4": "junctionDeviation",
                "PTR_s___arc__mm_segment___11__080044a8": "segmentLength",
                "PTR_DAT_08004474[0x3e]": "arcCorrection",
                "PTR_DAT_08004474[0x28]": "decimalPlaces, reportInches, autoStart, invertStepEnable, hardLimits",
                "PTR_s___n_arc_correction__int___12__080044ac": "arcCorrection",
                "PTR_s___n_decimals__int___13__080044b0": "decimalPlaces",
                "PTR_s___report_inches__bool___14__080044b4": "reportInches",
                "PTR_s___auto_start__bool___15__080044b8": "autoStart",
                "PTR_s___invert_step_enable__bool___16__080044bc": "invertStepEnable",
                "PTR_s___hard_limits__bool___17__080044c0": "hardLimits",
                "PTR_s___homing_cycle__bool___18__080044c4": "homingCycle",
                "PTR_DAT_08004474 + 0x2a": "homingDirInvertMask",
                "PTR_DAT_08004474 + 0x2c": "homingCycle",
                "PTR_s___homing_feed__mm_min___20__080044d0": "homingFeedRate",
                "PTR_s___homing_seek__mm_min___21__080044d4": "homingSeekRate",
                "PTR_s___homing_debounce__msec___22__080044d8": "homingDebounceDelay",
                "PTR_s___homing_pull_off__mm___23__080044dc": "homingPullOff",
                "PTR_s___dir_port_invert_mask__int__080044e0": "directionInvertMask"
            },
            "code": "void initializeSettings_08004250(void)\n{\n  int *PTR_DAT_08004474 = (int *) PTR_DAT_08004474;\n  setXStep(PTR_DAT_08004474[0]);\n  setYStep(PTR_DAT_08004474[1]);\n  setZStep(PTR_DAT_08004474[2]);\n  setPulseWidth(PTR_DAT_08004474[13]);\n  setStepPulseUsecs(PTR_DAT_08004474[4]);\n  setDefaultFeedRate(PTR_DAT_08004474[5]);\n  setDefaultSeekRate(PTR_DAT_08004474[6]);\n  setStepInvertMask(PTR_DAT_08004474[24]);\n  setStepIdleDelay(PTR_DAT_08004474[8]);\n  setAcceleration(PTR_DAT_08004474[9]);\n  setJunctionDeviation(PTR_DAT_08004474[7]);\n  setSegmentLength(PTR_DAT_08004474[62]);\n  setArcCorrection(PTR_DAT_08004474[61]);\n  setDecimalPlaces((PTR_DAT_08004474[10] & 1) != 0);\n  setReportInches((PTR_DAT_08004474[10] & 2) != 0);\n  setAutoStart((PTR_DAT_08004474[10] & 4) != 0);\n  setInvertStepEnable((PTR_DAT_08004474[10] & 8) != 0);\n  setHardLimits((PTR_DAT_08004474[10] & 0x10) != 0);\n  setHomingCycle(PTR_DAT_08004474[25]);\n  setHomingDirInvertMask(PTR_DAT_08004474[26]);\n  setHomingFeedRate(PTR_DAT_08004474[27]);\n  setHomingSeekRate(PTR_DAT_08004474[28]);\n  setHomingDebounceDelay(PTR_DAT_08004474[29]);\n  setHomingPullOff(PTR_DAT_08004474[11]);\n  setDirectionInvertMask(PTR_DAT_08004474[12]);\n}\n",
            "called": [
                "FUN_0800375c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08009054",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initializeSettings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "print_character_08006dc4",
                "param_1": "character_to_print",
                "FUN_08006a58": "print_ascii_code"
            },
            "code": "void print_character_08006dc4(char character_to_print)\n{\n    print_ascii_code((int)character_to_print);\n    return;\n}",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_in_short_at_offset_08007402",
                "param_1": "offset",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "void set_bit_in_short_at_offset_08007402(uint offset)\n{\n  uint base_address = (offset >> 4) * 0x400 + 0x40020018;\n  short* short_ptr = (short*)base_address;\n  uint bit_offset = offset & 0xf;\n  short bit_value = (short)(1 << bit_offset);\n  *short_ptr = bit_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_at_offset_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_char_08002870",
                "param_1": "input_char",
                "local_9": "result_char"
            },
            "code": "char increment_char_08002870(char input_char) {\n    char result_char;\n    result_char = input_char + 1;\n    if (result_char == 0x12) {\n        result_char = 0;\n    }\n    return result_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_08002f40"
            ],
            "imported": false,
            "current_name": "increment_char_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "do_nothing_twice_08000210",
                "PTR_": "",
                "DAT_": ""
            },
            "code": "void do_nothing_twice_08000210(void)\n{\n  do_nothing_080001ec();\n  do_nothing_080001d4();\n  return;\n}",
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_080025e8",
                "FUN_080001f8",
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_twice_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "check_byte_08005900"
            },
            "code": "int check_byte_08005900(byte input_byte) {\n    if (input_byte == 0x7e) {\n        PTR_DAT_08005978[2] |= 2;\n        return 1;\n    }\n    if (input_byte < 0x7f) {\n        if (input_byte == 0x3f) {\n            PTR_DAT_08005978[2] |= 1;\n            return 1;\n        }\n        if (input_byte < 0x40) {\n            if (input_byte == 0x18) {\n                FUN_080025e8();\n                return 1;\n            }\n            if (input_byte == 0x21) {\n                PTR_DAT_08005978[2] |= 8;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "check_byte_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "start_position",
                "param_2": "input",
                "param_3": "result",
                "pcVar6": "current_char_ptr",
                "pcVar5": "next_char_ptr",
                "local_1c": "power_val",
                "local_16": "num_digits",
                "local_15": "num_trailing_zeros",
                "local_14": "integer_val",
                "local_d": "current_char_val",
                "local_c": "next_char_ptr",
                "bVar1": "current_digit",
                "bVar2": "is_negative",
                "bVar3": "has_trailing_zeros",
                "uVar7": "return_val",
                "uVar8": "parsed_val",
                "iVar4": "parse_result"
            },
            "code": "uint parse_integer_08002638(int start_position, byte *input, uint *result) {\n    byte current_char;\n    bool is_negative = false;\n    int current_position = start_position + (uint)*input;\n    char *current_char_ptr = (char *)current_position + 1;\n    char current_char_val = *current_char_ptr;\n    if (current_char_val == '-') {\n        is_negative = true;\n        current_char_val = *(current_char_ptr + 1);\n        current_char_ptr += 2;\n    }\n    else if (current_char_val == '+') {\n        current_char_ptr += 2;\n        current_char_val = *current_char_ptr;\n    }\n    uint integer_val = 0;\n    char num_digits = 0;\n    char num_trailing_zeros = 0;\n    bool has_trailing_zeros = false;\n    do {\n        current_char = current_char_val - '0';\n        if (current_char < 10) {\n            num_digits++;\n            if (num_digits < 9) {\n                if (has_trailing_zeros) {\n                    num_trailing_zeros--;\n                }\n                integer_val = (uint)current_char + integer_val * 10;\n            }\n            else if (!has_trailing_zeros) {\n                num_trailing_zeros++;\n            }\n        }\n        else {\n            if ((current_char != 0xfe) || (has_trailing_zeros)) {\n                if (num_digits == 0) {\n                    return 0;\n                }\n                uint power_val = pow(10, num_trailing_zeros);\n                uint parsed_val = parse_hex(integer_val);\n                uint final_val = apply_trailing_zeros(parsed_val, num_trailing_zeros);\n                if (is_negative) {\n                    *result = final_val ^ 0x80000000;\n                }\n                else {\n                    *result = final_val;\n                }\n                *input = (char *)current_char_ptr - (char *)start_position - 1;\n                return 1;\n            }\n            has_trailing_zeros = true;\n        }\n        current_char_val = *++current_char_ptr;\n    } while (true);\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "parse_integer_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "check_and_print_data_080051b4",
                "iVar1": "result",
                "auStack_18": "data_buffer",
                "local_9": "index",
                "FUN_08004dd2": "check_data",
                "FUN_08004030": "print_error",
                "FUN_08004c48": "set_flag",
                "FUN_08004250": "reset_data",
                "FUN_08004d7c": "get_data"
            },
            "code": "void check_and_print_data_080051b4(void)\n{\n  int result;\n  undefined data_buffer[15];\n  byte index;\n\n  result = check_data();\n  if (result == 0) {\n    print_error(10);\n    set_flag(1);\n    reset_data();\n  }\n  for (index = 0; index < 8; index++) {\n    result = get_data(index, data_buffer);\n    if (result == 0) {\n      print_error(10);\n    }\n  }\n  return;\n}\n",
            "called": [
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_and_print_data_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "calculate_result_and_return_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "character",
                "uVar2": "result",
                "iVar3": "calculation_result1",
                "puVar4": "pointer1",
                "piVar5": "pointer2",
                "local_50": "constant1",
                "local_4c": "pointer3",
                "local_48": "constant2",
                "uStack_44": "stack_variable1",
                "local_40": "stack_variable2",
                "uStack_3c": "long_variable",
                "local_38": "long_variable",
                "local_30": "calculation_result2"
            },
            "code": "undefined4 calculate_result_and_return_080098d0(undefined4 input1, undefined4 input2)\n{\n  char character;\n  undefined4 result;\n  int calculation_result1;\n  undefined4 *pointer1;\n  int *pointer2;\n  undefined4 constant1;\n  undefined *pointer3;\n  undefined4 constant2;\n  undefined4 stack_variable1;\n  undefined4 stack_variable2;\n  undefined8 long_variable;\n  int calculation_result2;\n  \n  result = get_constant();\n  character = *PTR_DAT_08009988;\n  if (((character == -1) || (calculation_result1 = perform_calculation(input1, input2, input1, input2), calculation_result1 != 0))\n     || (calculation_result2 = perform_another_calculation(input1, input2, 0, 0), calculation_result2 == 0)) {\n    return result;\n  }\n  constant1 = 1;\n  pointer3 = PTR_DAT_0800998c;\n  constant2 = input1;\n  stack_variable1 = input2;\n  stack_variable2 = input1;\n  long_variable = input2;\n  if (character == '\\0') {\n    long_variable = 0;\nLAB_0800996c:\n    calculation_result2 = calculate(&constant1);\n    if (calculation_result2 != 0) goto joined_r0x0800997a;\n  }\n  else {\n    long_variable = perform_some_other_calculation(0,0,0,0);\n    if (character != '\\x02') goto LAB_0800996c;\n  }\n  pointer1 = (undefined4 *)get_memory_location();\n  *pointer1 = 0x21;\njoined_r0x0800997a:\n  if (calculation_result1 != 0) {\n    pointer2 = (int *)get_memory_location();\n    *pointer2 = calculation_result1;\n  }\n  return (undefined4)long_variable;\n}\n",
            "called": [
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008b24",
                "FUN_08008894",
                "FUN_08008b74",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002978"
            ],
            "imported": false,
            "current_name": "calculate_result_and_return_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "check_param_range_08005c30",
                "param_1": "param",
                "bVar1": "is_within_range",
                "DAT_08005c70": "PTR_DAT_08005c70",
                "FUN_08005bdc": "set_flag"
            },
            "code": "bool check_param_range_08005c30(int param) {\n    bool is_within_range = param >= 1 && param <= 0x1000000;\n    if (is_within_range) {\n        DAT_08005c70[1] = param - 1;\n        set_flag(0xffffffff, 0xf);\n        DAT_08005c70[2] = 0;\n        *DAT_08005c70 = 7;\n    }\n    return !is_within_range;\n}",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": false,
            "current_name": "check_param_range_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "calculateResultIfValidInput_0800056c",
                "param_1": "input",
                "uVar1": "result",
                "FUN_08008590": "calculateResult",
                "FUNC_08008640": "performOperation",
                "DAT_080005a8": "operation1",
                "DAT_080005ac": "operation2",
                "FUN_08008c30": "processResult"
            },
            "code": "undefined4 calculateResultIfValidInput_0800056c(undefined4 input)\\n{\\n    undefined8 result;\\n    \\n    if (PTR_DAT_080005b0[3] != \"\\0\") {\\n        result = calculateResult(input);\\n        result = performOperation((int)result, (int)((ulonglong)result >> 0x20), DAT_080005a8, DAT_080005ac);\\n        input = processResult((int)result, (int)((ulonglong)result >> 0x20));\\n    }\\n    return input;\\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "calculateResultIfValidInput_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "initialize_and_clear_buffer_08002f24",
                "FUN_08002ef0": "initialize_system",
                "FUN_0800b430": "clear_buffer"
            },
            "code": "void initialize_and_clear_buffer_08002f24(void)\n{\n    initialize_system();\n    clear_buffer(PTR_DAT_08002f3c,0,0x1c);\n    return;\n}",
            "called": [
                "FUN_08002ef0",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_and_clear_buffer_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "improved_function_name_0800981c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "c",
                "puVar2": "struct_ptr",
                "iVar3": "int1",
                "puVar4": "int_ptr",
                "piVar5": "int_ptr",
                "uVar6": "uVar",
                "local_50": "struct1.var1",
                "puStack_4c": "struct1.var2",
                "local_48": "struct1.var3",
                "uStack_44": "struct1.var4",
                "local_40": "struct1.var3",
                "uStack_3c": "struct1.var4",
                "local_38": "struct1.var3",
                "uStack_34": "struct1.var4",
                "local_30": "result"
            },
            "code": "typedef unsigned long long uint64_t;\n\ntypedef struct {\n    uint64_t var1;\n    uint64_t var2;\n    uint64_t var3;\n    uint64_t var4;\n} Struct;\n\nuint64_t improved_function_name_0800981c(uint64_t param1, uint64_t param2, uint64_t param3, uint64_t param4)\n{\n    char c;\n    Struct struct1;\n    Struct *struct_ptr;\n    int int1;\n    uint64_t uVar;\n    uint64_t result = 0;\n\n    struct_ptr = PTR_DAT_080098cc;\n    result = FUNC_08009b24();\n    if (struct_ptr->var1 == -1) {\n        return result;\n    }\n\n    int1 = FUN_0800b2d4();\n    if (int1 != 0) {\n        return result;\n    }\n\n    int1 = FUN_0800b2d4(param1, param2);\n    if (int1 == 0) {\n        return result;\n    }\n\n    int1 = FUN_0800b2d4(param3, param4);\n    if (int1 == 0) {\n        return result;\n    }\n\n    c = *struct_ptr;\n    struct1.var1 = 3;\n    struct1.var2 = PTR_s_hypot_080098c0;\n    struct1.var3 = param1;\n    struct1.var4 = param2;\n\n    if (c == 0) {\n        struct1.var3 = 0xe0000000;\n        struct1.var4 = DAT_080098c8;\n    }\n    else {\n        struct1.var3 = 0;\n        struct1.var4 = DAT_080098c4;\n        if (c != 2) {\n            goto LAB_080098aa;\n        }\n    }\n\n    int1 = FUN_0800b2e0(&struct1);\n    if (int1 != 0) {\n        goto LAB_08009896;\n    }\n\nLAB_080098aa:\n    struct_ptr = (Struct *)FUN_0800b3dc();\n    struct_ptr->var1 = 0x22;\n\nLAB_08009896:\n    uVar = CONCAT44(struct1.var4, struct1.var3);\n    if (int1 != 0) {\n        int *int_ptr = (int *)FUN_0800b3dc();\n        *int_ptr = int1;\n        uVar = CONCAT44(struct1.var4, struct1.var3);\n    }\n    return uVar;\n}",
            "called": [
                "FUN_0800b2e0",
                "FUN_0800b2d4",
                "FUN_08009b24",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "improved_function_name_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "set_flags_and_call_functions_080059b4",
                "FUN_08006d72": "call_function_with_delay",
                "FUN_08006ce0": "call_another_function",
                "do_nothing_08005a50": "do_nothing",
                "*DAT_080059f4": "data_ptr"
            },
            "code": "int set_flags_and_call_functions_080059b4(void)\n{\n  int* *DAT_080059f4 = DAT_080059f4;\n  **DAT_080059f4 |= 0x200;\n  **DAT_080059f4 |= 0x400;\n  **DAT_080059f4 |= 0x100;\n  call_function_with_delay(16000);\n  call_another_function(3);\n  do_nothing();\n  return 0;\n}",
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "extract_bits_from_uint_08006c04",
                "param_1": "input",
                "param_2": "bits_to_extract",
                "param_3": "extracted_bits",
                "param_4": "remaining_bits",
                "uVar1": "remaining_bits_count"
            },
            "code": "void extract_bits_from_uint_08006c04(uint input, uint bits_to_extract, uint *extracted_bits, uint *remaining_bits)\n{\n  uint remaining_bits_count;\n  bits_to_extract = bits_to_extract & 7;\n  remaining_bits_count = 7 - bits_to_extract;\n  if (remaining_bits_count > 3) {\n    remaining_bits_count = 4;\n  }\n  if (bits_to_extract + 4 < 7) {\n    bits_to_extract = 0;\n  }\n  else {\n    bits_to_extract = bits_to_extract - 3;\n  }\n  *extracted_bits = (1 << (remaining_bits_count & 0xff)) - 1U & input >> (bits_to_extract & 0xff);\n  *remaining_bits = (1 << (bits_to_extract & 0xff)) - 1U & input;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "extract_bits_from_uint_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "PTR_DAT_08002ed0": "PTR_DATA_START",
                "PTR_DAT_08002ed8": "PTR_DATA_END",
                "PTR_DAT_08002ed4": "PTR_DATA_TABLE",
                "FUNC_08009054": "FUNC_PROCESS_DATA",
                "FUN_08002c18": "FUN_UPDATE_DATA",
                "local_11": "current_index",
                "local_18": "previous_data"
            },
            "code": "void process_data_08002e08(void)\n{\n  int current_index = *PTR_DAT_08002ed0;\n  unsigned char *previous_data = NULL;\n  while (current_index != *PTR_DAT_08002ed8) {\n    unsigned char *current_data = PTR_DAT_08002ed4 + (uint)current_index * 0x40;\n    if ((previous_data != NULL) && ((previous_data[0x24] != '\\0' || (current_data[0x24] != '\\0')))) {\n      int previous_result = FUNC_PROCESS_DATA(*(int *)(previous_data + 0x18),*(int *)(previous_data + 0x14));\n      int current_result = FUNC_PROCESS_DATA(*(int *)(current_data + 0x18),*(int *)(previous_data + 0x14));\n      FUN_UPDATE_DATA(previous_data, previous_result, current_result);\n      previous_data[0x24] = 0;\n    }\n    current_index = GET_NEXT_INDEX(current_index);\n    previous_data = current_data;\n  }\n  int final_result = FUNC_PROCESS_DATA(*(int *)(previous_data + 0x18),*(int *)(previous_data + 0x14));\n  int initial_result = FUNC_PROCESS_DATA(0,*(int *)(previous_data + 0x14));\n  FUN_UPDATE_DATA(previous_data, final_result, initial_result);\n  previous_data[0x24] = 0;\n  return;\n}",
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "calculate_shift_amount_08006680",
                "uVar1": "shift_amount",
                "uVar2": "leading_zeroes_count",
                "FUN_08006628": "get_value",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_080066c8": "PTR_DAT_080066c8",
                "DAT_080066c4": "DAT_080066c4"
            },
            "code": "uint calculate_shift_amount_08006680(void)\n{\n  uint shift_amount;\n  uint leading_zeroes_count;\n  \n  shift_amount = get_value();\n  leading_zeroes_count = count_leading_zeroes(0x380000);\n  return shift_amount >> PTR_DAT_080066c8[(*(uint *)(DAT_080066c4 + 8) & 0x1c00) >> (leading_zeroes_count & 0xff)];\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "calculate_shift_amount_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "write_to_data_array_08000340",
                "param_1": "index",
                "param_2": "value",
                "PTR_DAT_0800036c": "data_array_initialized",
                "FUN_080002f0": "initialize_data_array",
                "PTR_DAT_08000370": "data_array"
            },
            "code": "void write_to_data_array_08000340(uint index, undefined value)\n{\n  if (*(int *)PTR_DAT_0800036c == 0) {\n    initialize_PTR_DAT_08000370();\n  }\n  PTR_DAT_08000370[index & 0x3ff] = value;\n  return;\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "write_to_data_array_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "difference",
                "uVar2": "result",
                "uVar3": "sign_mask",
                "uVar4": "threshold",
                "uVar5": "sum",
                "uVar6": "combined_values",
                "function_result": "function_result",
                "index": "index",
                "ptr": "ptr",
                "value1": "value1",
                "value2": "value2",
                "ptr1": "ptr1",
                "ptr2": "ptr2",
                "upper32_bits": "upper32_bits"
            },
            "code": "uint calculate_result_thunk_08009990(uint param1, uint param2, uint param3, uint param4) {\n  int difference;\n  uint result;\n  uint sign_mask = 0x7fffffff;\n  uint threshold = DAT_08009b18;\n  uint sum = param4 + 0xc0100000;\n  uint sign_bit = 0x80000000;\n  uint function_result;\n  uint index;\n  uint* ptr;\n  uint value1 = DAT_08009af0;\n  uint value2 = DAT_08009af8;\n  uint* ptr1 = PTR_DAT_08009b1c;\n  uint* ptr2 = PTR_DAT_08009b20;\n  uint64_t combined_values = (uint64_t)DAT_08009b04 << 32 | DAT_08009b00;\n  if (threshold < (param4 & sign_mask | (-param3 | param3) >> 31) || threshold < (param2 & sign_mask | (-param1 | param1) >> 31)) {\n    function_result = FUNC_080082d4(param3, param4, param1, param2);\n  }\n  else {\n    if (sum | param3) == 0) {\n      function_result = FUNC_0800af78();\n      return function_result;\n    }\n    index = (int)param4 >> 30 & 2 | param2 >> 31;\n    if ((param1 | param2) == 0) {\n      if (index != 2) {\n        value1 = param1;\n      }\n      else {\n        value1 = value2;\n      }\n    }\n    else {\n      if ((param4 | param3) != 0) {\n        if (param4 == threshold) {\n          index--;\n          if (param2 == param4) {\n            if (index > 1) {\n              return DAT_08009b10;\n            }\n            ptr = ptr2 + index * 2;\n            function_result = *ptr;\n            return function_result;\n          }\n          if (index < 2) {\n            ptr = ptr1 + index * 2;\n            function_result = *ptr;\n            return function_result;\n          }\n          return 0;\n        }\n        if (param2 != threshold) {\n          difference = (int)(param2 - param4) >> 20;\n          if ((int)(param2 - param4) < 0x3d00000) {\n            if (((int)param4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n              combined_values = 0;\n            }\n            else {\n              FUNC_08008894(param1, param2, param3, param4, param4);\n              do_nothing_0800b2cc();\n              combined_values = (uint64_t)FUNC_0800af78() << 32 | FUNC_0800af78();\n            }\n          }\n          function_result = (uint)combined_values;\n          uint32_t upper32_bits = combined_values >> 32;\n          if (index == 1) {\n            return function_result;\n          }\n          if (index == 2) {\n            combined_values = (uint64_t)function_result << 32 | upper32_bits;\n            combined_values = FUNC_080082d0(combined_values, DAT_08009ae8, DAT_08009aec, value1, value2, DAT_08009af4);\n            function_result = (uint)combined_values;\n            return function_result;\n          }\n          if (index == 0) {\n            return function_result;\n          }\n          combined_values = (uint64_t)function_result << 32 | upper32_bits;\n          combined_values = FUNC_080082d0(DAT_08009ae8, DAT_08009aec, combined_values, value1, value2, DAT_08009af4);\n          function_result = (uint)combined_values;\n          return function_result;\n        }\n      }\n      if (-1 < (int)param2) {\n        value1 = DAT_08009b00;\n      }\n    }\n    function_result = value1;\n  }\n  return function_result;\n}",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_size_of_data_08004bf4",
                "param_1": "data",
                "param_2": "size",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void calculate_offset_and_size_of_data_08004bf4(byte data, undefined4 size)\n{\n    ushort offset = (ushort)data * 0xd + 0x200;\n    FUN_08000374(offset, size, 0xc);\n    return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "imported": false,
            "current_name": "calculate_offset_and_size_of_data_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "check_value_08004d7c",
                "param_1": "value",
                "param_2": "param_2",
                "iVar1": "result",
                "FUN_080003ec": "calculate_value",
                "FUN_0800b430": "reset_value",
                "FUN_08004bf4": "update_value"
            },
            "code": "bool check_value_08004d7c(byte value, undefined4 param_2) {\n  int result = FUN_080003ec(param_2, (ushort)value * 0xd + 0x200, 0xc);\n  if (result == 0) {\n    FUN_0800b430(param_2, 0, 0xc);\n    FUN_08004bf4(value, param_2);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bf4",
                "FUN_0800b430",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "check_value_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "convert_to_int_08009278",
                "param_1": "input_value",
                "uVar1": "shift_amount",
                "uVar2": "difference",
                "shifted_value": "shifted_value",
                "result": "result",
                "shifted_input": "shifted_input"
            },
            "code": "uint convert_to_int_08009278(uint input_value)\n{\n  uint shifted_value = input_value << 1;\n  uint shift_amount = (shifted_value >> 0x18);\n  uint difference = 0x9e - shift_amount;\n  uint result = 0;\n\n  if (shifted_value < 0x7f000000) {\n    return 0;\n  }\n\n  if (shift_amount < 0x9f && difference != 0) {\n    uint shifted_input = (input_value << 8) | 0x80000000;\n    result = shifted_input >> (difference & 0xff);\n\n    if ((input_value & 0x80000000) != 0) {\n      result = -result;\n    }\n\n    return result;\n  }\n\n  if (difference == 0xffffff9f && (input_value & 0x7fffff) != 0) {\n    return 0;\n  }\n\n  if ((input_value & 0x80000000) == 0) {\n    result = 0x7fffffff;\n  } else {\n    result = input_value;\n  }\n\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_to_int_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "set_values_and_store_in_memory_080004fc",
                "param_1": "first_value",
                "param_2": "second_value",
                "param_3": "third_value",
                "uVar1": "result_1",
                "FUN_08008e44": "retrieve_value_from_function",
                "FUNC_08009054": "perform_operation_on_two_values"
            },
            "code": "void set_values_and_store_in_memory_080004fc(unsigned int first_value, unsigned int second_value, unsigned int third_value) {\n  unsigned int result_1 = retrieve_value_from_function(first_value);\n  unsigned int result_2 = perform_operation_on_two_values(result_1, *(unsigned int *)PTR_DAT_08000564);\n  *(unsigned int *)(PTR_DAT_08000568 + 0xc) = result_2;\n  result_1 = retrieve_value_from_function(second_value);\n  result_2 = perform_operation_on_two_values(result_1, *(unsigned int *)(PTR_DAT_08000564 + 4));\n  *(unsigned int *)(PTR_DAT_08000568 + 0x10) = result_2;\n  result_1 = retrieve_value_from_function(third_value);\n  result_2 = perform_operation_on_two_values(result_1, *(unsigned int *)(PTR_DAT_08000564 + 8));\n  *(unsigned int *)(PTR_DAT_08000568 + 0x14) = result_2;\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "set_values_and_store_in_memory_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "update_param_08000220",
                "param_1": "new_param",
                "*PTR_DAT_08000264": "*current_param",
                "FUN_08002fd4": "call_error_handler",
                "do_nothing_080001c8": "do_nothing_case_1",
                "do_nothing_080001e0": "do_nothing_case_2",
                "FUN_08000210": "call_default_handler"
            },
            "code": "void update_param_08000220(char new_param)\n{\n  if (new_param != *PTR_DAT_08000264) {\n    call_error_handler();\n    if (new_param == '\\x01') {\n      do_nothing_case_1();\n    }\n    else if (new_param == '\\x02') {\n      do_nothing_case_2();\n    }\n    else {\n      call_default_handler();\n    }\n    *PTR_DAT_08000264 = new_param;\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_080001c8",
                "FUN_08000210",
                "FUN_080001e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "update_param_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "reset_pointer_08005238",
                "PTR_DAT_0800524c": "pointer_data",
                "FUN_08005250": "call_another_function"
            },
            "code": "void reset_pointer_08005238(void)\n{\n  *PTR_DAT_0800524c = 0;\n  call_another_function();\n  return;\n}",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "reset_pointer_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_flag_and_toggle_bit_08007da8",
                "puVar1": "flag_ptr"
            },
            "code": "void set_flag_and_toggle_bit_08007da8(void)\n{\n  uint32_t *flag_ptr;\n  flag_ptr = DAT_08007dd4;\n  DAT_08007dd4[8] |= 0x10;\n  *flag_ptr |= 0x1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "set_flag_and_toggle_bit_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "printAlarmMessage_08004148",
                "param_1": "alarmType",
                "PTR_s_ALARM__08004190": "ALARM_MSG",
                "PTR_s_Abort_during_cycle_08004198": "ABORT_MSG",
                "PTR_s_Hard_limit_08004194": "HARD_LIMIT_MSG",
                "PTR_s___MPos__0800419c": "MPOS_MSG",
                "do_nothing_08002814": "wait"
            },
            "code": "void printAlarmMessage_08004148(char alarmType) {\n  printMessage(\"ALARM:\");\n  if (alarmType == -2) {\n    printMessage(\"Abort during cycle\");\n  }\n  else if (alarmType == -1) {\n    printMessage(\"Hard limit\");\n  }\n  printMessage(\"MPos:\");\n  wait(500);\n  return;\n}",
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "printAlarmMessage_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "process_data_08004940",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar3": "value3",
                "uVar4": "value4",
                "uVar5": "value5",
                "auStack_2c": "stack_values",
                "local_11": "local_byte",
                "PTR_DAT_08004b88": "data_ptr1",
                "PTR_DAT_08004bac": "data_ptr2",
                "PTR_DAT_08004bb8": "data_ptr3",
                "PTR_DAT_08004bb0": "data_ptr4",
                "PTR_DAT_08004bb4": "data_ptr5",
                "PTR_DAT_08004bbc": "data_ptr6",
                "PTR_s__MPos__08004ba8": "string_ptr1",
                "PTR_s_WPos__08004bb4": "string_ptr2"
            },
            "code": "void process_data_08004940(void)\n{\n    uint8_t index;\n    uint32_t stack_values[6];\n    uint8_t local_byte;\n\n    stack_values[3] = *(uint32_t *)(PTR_DAT_08004b88 + 4);\n    stack_values[4] = *(uint32_t *)(PTR_DAT_08004b88 + 8);\n    stack_values[5] = *(uint32_t *)(PTR_DAT_08004b88 + 0xc);\n\n    if ((uint8_t)PTR_DAT_08004b88[1] < 8) {\n        (*(void (*)())(&switchD_0800495e::switchdataD_08004964)[(uint8_t)PTR_DAT_08004b88[1]])();\n        return;\n    }\n\n    FUN_080036c6(PTR_s__MPos__08004ba8);\n\n    for (index = 0; index < 3; index++) {\n        uint32_t value1 = FUN_08008e44(stack_values[index + 3]);\n        uint32_t value2 = *(uint32_t *)(PTR_DAT_08004bac + (uint32_t)index * 4);\n        value1 = FUNC_08009054(value1, value2);\n        stack_values[index] = value1;\n\n        if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\n            uint64_t value3 = FUN_08008590(stack_values[index]);\n            value3 = FUNC_08008640((int32_t)value3, (int32_t)(value3 >> 0x20), DAT_08004b80, DAT_08004b84);\n            value1 = FUN_08008c30((int32_t)value3, (int32_t)(value3 >> 0x20));\n            stack_values[index] = value1;\n        }\n\n        FUN_08003826(stack_values[index]);\n        FUN_080036c6(PTR_DAT_08004bb0);\n    }\n\n    FUN_080036c6(PTR_s_WPos__08004bb4);\n\n    for (index = 0; index < 3; index++) {\n        if ((PTR_DAT_08004bac[0x28] & 1) == 0) {\n            uint32_t value1 = stack_values[index];\n            uint32_t value2 = FUNC_08008cdc(*(uint32_t *)(PTR_DAT_08004bb8 + (index + 8) * 4), *(uint32_t *)(PTR_DAT_08004bb8 + (index + 10) * 4 + 4));\n            value1 = FUNC_08008cd8(value1, value2);\n            stack_values[index] = value1;\n        }\n        else {\n            uint64_t value3 = FUN_08008590(stack_values[index]);\n            uint32_t value1 = FUNC_08008cdc(*(uint32_t *)(PTR_DAT_08004bb8 + (index + 8) * 4), *(uint32_t *)(PTR_DAT_08004bb8 + (index + 10) * 4 + 4));\n            uint64_t value4 = FUN_08008590(value1);\n            value4 = FUNC_08008640((int32_t)value4, (int32_t)(value4 >> 0x20), DAT_08004b80, DAT_08004b84);\n            value3 = FUNC_080082d0((int32_t)value3, (int32_t)(value3 >> 0x20), (int32_t)value4, (int32_t)(value4 >> 0x20));\n            uint32_t value5 = FUN_08008c30((int32_t)value3, (int32_t)(value3 >> 0x20));\n            stack_values[index] = value5;\n        }\n\n        FUN_08003826(stack_values[index]);\n        if (index < 2) {\n            FUN_080036c6(PTR_DAT_08004bb0);\n        }\n    }\n\n    FUN_080036c6(PTR_DAT_08004bbc);\n    return;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "process_data_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "check_collision_08008a74",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "uVar1": "x_diff",
                "bVar2": "x2_overlap",
                "bVar3": "y2_overlap",
                "param_1 | param_2 << 0xc": "x1_nonzero",
                "param_3 | param_4 << 0xc": "y1_nonzero",
                "param_2 == param_4": "x2_zero",
                "param_1 == param_3": "y2_zero",
                "param_2 ^ param_4": "x_diff",
                "-1 < (int)uVar1": "x_diff_nonnegative",
                "param_4 <= param_2": "x_diff_larger",
                "param_3 <= param_1": "y_diff_larger",
                "(int)(param_2 << 1) >> 0x15": "x2_negative",
                "(int)(param_4 << 1) >> 0x15": "y2_negative",
                "!bVar2": "x1_zero",
                "!bVar2 && !bVar3": "all_zero",
                "-1 < (int)uVar1 && param_4 <= param_2": "x_diff_larger_nonnegative",
                "param_4 = (int)param_4 >> 0x1f": "y2_sign_bit",
                "!bVar3": "y1_zero",
                "param_4 | 1": "collision_detected"
            },
            "code": "uint check_collision_08008a74(uint x1, uint y1, uint x2, uint y2) {\n  bool x_overlap = (x1 == x2);\n  bool y_overlap = (y1 == y2);\n  if (x_overlap && y_overlap) {\n    return 1;\n  }\n  bool x1_zero = (x1 == 0);\n  bool y1_zero = (y1 == 0);\n  bool x2_zero = (x2 == 0);\n  bool y2_zero = (y2 == 0);\n  if (x1_zero && y1_zero && x2_zero && y2_zero) {\n    return 1;\n  }\n  bool x1_nonzero = !x1_zero;\n  bool y1_nonzero = !y1_zero;\n  bool x2_nonzero = !x2_zero;\n  bool y2_nonzero = !y2_zero;\n  if (x1_nonzero && y1_nonzero && x2_nonzero && y2_nonzero) {\n    uint x_diff = x1 > x2 ? x1 - x2 : x2 - x1;\n    uint y_diff = y1 > y2 ? y1 - y2 : y2 - y1;\n    if (x_diff <= 1 && y_diff <= 1) {\n      return 1;\n    }\n    if (x_diff == y_diff) {\n      return 1;\n    }\n    return 0;\n  }\n  return 0;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": false,
            "current_name": "check_collision_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "checkForValidInput_08002fd4",
                "iVar1": "input",
                "FUN_08002f74": "getValidInput",
                "PTR_DAT_08003000": "dataPointer"
            },
            "code": "void checkForValidInput_08002fd4(void)\\n{\\n  int input;\\n  while ((input = getValidInput(), input != 0 || (PTR_DAT_08003000[1] == \"\\x03\"))) {\\n    processInput();\\n    if (*PTR_DAT_08003000 != \"\\0\") {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002f74",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_0800525c",
                "FUN_080005b4",
                "FUN_08000220",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "checkForValidInput_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "input_data",
                "uVar1": "converted_data",
                "uVar2": "processed_data1",
                "uVar3": "processed_data2",
                "uVar4": "processed_data3",
                "local_12": "data_length"
            },
            "code": "void process_data_08002408(undefined4 input_data)\\n{\\n    undefined2 converted_data;\\n    undefined4 processed_data1;\\n    undefined4 processed_data2;\\n    undefined8 processed_data3;\\n    ushort data_length;\\n\\n    processed_data1 = FUNC_08008eec(input_data, DAT_080024b8);\\n    processed_data3 = FUN_08008590(processed_data1);\\n    processed_data3 = FUN_080094c0((int)processed_data3, (int)((ulonglong)processed_data3 >> 0x20));\\n    data_length = FUN_08008bf0((int)processed_data3, (int)((ulonglong)processed_data3 >> 0x20));\\n    FUN_08002fd4();\\n    processed_data1 = FUNC_08008eec(input_data, DAT_080024bc);\\n    processed_data2 = FUN_08008e44((uint)data_length * 0x32);\\n    processed_data1 = FUNC_08008cd8(processed_data1, processed_data2);\\n    processed_data3 = FUN_08008590(processed_data1);\\n    processed_data3 = FUN_080094c0((int)processed_data3, (int)((ulonglong)processed_data3 >> 0x20));\\n    converted_data = FUN_08008bf0((int)processed_data3, (int)((ulonglong)processed_data3 >> 0x20));\\n    do_nothing_08002814(converted_data);\\n    while ((data_length != 0 && (FUN_08003a74(), *PTR_DAT_080024c0 == \"\\0\")))\\n    {\\n        FUN_080002a0(0x32);\\n        data_length = data_length - 1;\\n    }\\n    return;\\n}",
            "called": [
                "FUN_080094c0",
                "FUN_080002a0",
                "FUN_08008590",
                "FUN_08002fd4",
                "FUN_08008e44",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "decode_and_store_data_08002a94",
                "puVar1": "previous_data_ptr",
                "puVar2": "current_decoded_data_ptr",
                "local_9": "current_byte",
                "local_18": "current_data_ptr",
                "local_14": "previous_data_ptr",
                "PTR_DAT_08002af0": "data_start_ptr",
                "PTR_DAT_08002af4": "data_table_ptr",
                "PTR_DAT_08002af8": "data_end_ptr",
                "FUN_08002896": "decode_byte",
                "FUN_080029d8": "copy_data"
            },
            "code": "void decode_and_store_data_08002a94(void)\n{\n  uint8_t current_byte;\n  uint8_t *current_data_ptr;\n  uint8_t *previous_data_ptr;\n  uint8_t *current_decoded_data_ptr;\n  \n  current_byte = *PTR_DAT_08002af0;\n  current_data_ptr = NULL;\n  previous_data_ptr = NULL;\n  while (current_byte != *PTR_DAT_08002af8) {\n    current_byte = decode_byte(current_byte);\n    previous_data_ptr = current_data_ptr;\n    current_decoded_data_ptr = PTR_DAT_08002af4 + (uint)current_byte * 0x40;\n    copy_data(current_decoded_data_ptr, previous_data_ptr, current_data_ptr);\n    current_data_ptr = current_decoded_data_ptr;\n  }\n  return;\n}",
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "decode_and_store_data_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "updateData_08003618",
                "param_1": "newData",
                "PTR_DAT_08003698": "dataIndexPtr",
                "PTR_DAT_08003694": "dataPtr",
                "uVar3": "processedData",
                "uVar4": "oldData",
                "FUN_08008e44": "processData",
                "FUNC_08008eec": "combineData"
            },
            "code": "void updateData_08003618(uint32_t newData) {\n  uint8_t index = *PTR_DAT_08003698;\n  uint32_t oldData = *(uint32_t *)(PTR_DAT_08003694 + (uint)index * 0x40 + 0x20);\n  uint32_t processedData = processData(newData);\n  processedData = combineData(oldData, processedData);\n  uint32_t oldRelatedData = processData(*(uint32_t *)(PTR_DAT_08003698 + (uint)index * 0x40 + 0x10));\n  processedData = combineData(processedData, oldRelatedData);\n  *(uint32_t *)(PTR_DAT_08003694 + (uint)index * 0x40 + 0x20) = processedData;\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)index * 0x40 + 0x10) = newData;\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)index * 0x40 + 0x18) = 0;\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)index * 0x40 + 0x1c) = 0;\n  PTR_DAT_08003698[(uint)index * 0x40 + 0x25] = 0;\n  PTR_DAT_08003698[(uint)index * 0x40 + 0x24] = 1;\n  updateDisplay();\n  return;\n}\n",
            "called": [
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08002edc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": false,
            "current_name": "updateData_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = do_nothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = FUN_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_data_08007d08",
                "puVar1": "data_ptr"
            },
            "code": "void initialize_data_08007d08()\n{\n  uint32_t *data_ptr;\n  data_ptr = global_data_array;\n  set_initial_value(data_ptr);\n  data_ptr[0] = 0x80;\n  data_ptr[1] = 0;\n  data_ptr[2] = 0;\n  data_ptr[3] = 0;\n  data_ptr[4] = 0;\n  data_ptr[5] = 1;\n  data_ptr[6] = 0x6800;\n  data_ptr[7] = 0;\n  data_ptr[8] = 0;\n  data_ptr[9] = 0;\n  data_ptr[10] = (uint32_t)((uint64_t)DAT_08007da4 * (uint64_t)*(uint32_t *)PTR_DAT_08007da0 >> 0x35) - 1;\n  data_ptr[11] = 199;\n  data_ptr[13] = 0;\n  data_ptr[14] = 100;\n  data_ptr[15] = 0;\n  data_ptr[16] = 0;\n  data_ptr[18] = 0;\n  data_ptr[19] = 0;\n}\n",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "swap_arguments_and_call_function_080091fc",
                "param_1": "first_argument",
                "param_2": "second_argument",
                "FUN_08009204": "call_function_with_swapped_arguments"
            },
            "code": "void swap_arguments_and_call_function_080091fc(int* first_argument, int* second_argument) {\n  call_function_with_swapped_arguments(second_argument, first_argument);\n  return;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": false,
            "current_name": "swap_arguments_and_call_function_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "checkAndSetData_080058a0",
                "PTR_DAT_080058f0": "dataPtr",
                "PTR_DAT_080058f4": "secondDataPtr",
                "PTR_DAT_080058fc": "PTR_DAT_080058fc",
                "DAT_080058f8": "DAT_080058f8"
            },
            "code": "void checkAndSetData_080058a0() {\n    int *PTR_DAT_080058f0 = (int *)PTR_DAT_080058f0;\n    int *PTR_DAT_080058f4 = (int *)PTR_DAT_080058f4;\n    if (*PTR_DAT_080058f0 == 0) {\n        PTR_DAT_080058fc[1] = 0;\n    }\n    else {\n        int difference = *(int *)(*PTR_DAT_080058f0 + 0x10) - *(int *)(PTR_DAT_080058f4 + 0x10);\n        FUN_08003618(difference);\n        *(undefined4 *)(PTR_DAT_080058f4 + 0x1c) = 0;\n        FUN_08005324(*(undefined4 *)(PTR_DAT_080058f4 + 0x1c));\n        *(undefined4 *)(PTR_DAT_080058f4 + 0x18) = DAT_080058f8;\n        *(undefined4 *)(PTR_DAT_080058f4 + 0x10) = 0;\n        PTR_DAT_080058fc[1] = 2;\n    }\n}",
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "checkAndSetData_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "str",
                "local_c": "current_char",
                "*local_c": "*current_char",
                "FUN_08008250": "print_character"
            },
            "code": "void print_string_080036c6(char* str) {\n    char* current_char = str;\n    while (*current_char != '\\0') {\n        print_character(*current_char);\n        current_char++;\n    }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004148",
                "FUN_08004940",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004228",
                "FUN_080044e8",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "set_flags_and_values_08008190",
                "puVar1": "flags_and_values_ptr",
                "DAT_08008240": "flags_and_values_data"
            },
            "code": "void set_flags_and_values_08008190(void)\n{\n  uint *flags_and_values_ptr;\n\n  flags_and_values_ptr = DAT_08008240;\n  set_DAT_08008240(DAT_08008240);\n  flags_and_values_ptr[3] = flags_and_values_ptr[3] & 0xffffdfff;\n  flags_and_values_ptr[3] = flags_and_values_ptr[3] & 0xffff400c | 0xc;\n  flags_and_values_ptr[4] = flags_and_values_ptr[4] & 0xffff8090;\n  flags_and_values_ptr[5] = flags_and_values_ptr[5] & 0xfffff000;\n  *flags_and_values_ptr = *flags_and_values_ptr & 0xfffffc00;\n  set_DAT_08008240(flags_and_values_ptr,0x1c200);\n  flags_and_values_ptr[6] = flags_and_values_ptr[6];\n  flags_and_values_ptr[3] = flags_and_values_ptr[3] | 0x2000;\n  return;\n}",
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "check_and_execute_080074c8",
                "param_1": "flags",
                "FUN_08007402": "print_error",
                "PTR_DAT_08007518": "ptr_data_1",
                "FUN_0800195c": "execute_function_1",
                "PTR_DAT_0800751c": "ptr_data_2",
                "FUN_08003a18": "execute_function_2"
            },
            "code": "void check_and_execute_080074c8(uint flags)\n{\n    if ((flags & 1) != 0) {\n        print_error(0x3e);\n    }\n    if ((*(int *)PTR_DAT_08007518 != 0) && ((flags & 0x1e) != 0)) {\n        execute_function_1();\n    }\n    if ((*(int *)PTR_DAT_0800751c != 0) && ((flags & 0x80) != 0)) {\n        execute_function_2(flags);\n    }\n    return;\n}",
            "called": [
                "FUN_08007402",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_and_execute_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "write_to_memory_0800b430",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "current_word",
                "puVar2": "end_word",
                "uVar3": "remaining_size",
                "uVar4": "value_32",
                "bVar5": "is_remaining_zero"
            },
            "code": "void write_to_memory_0800b430(uint32_t *memory, uint8_t value, uint32_t size)\n{\n    uint32_t *current_word;\n    uint32_t *end_word;\n    uint32_t remaining_size;\n    uint32_t value_32 = (value << 24) | (value << 16) | (value << 8) | value;\n    \n    if (((uint32_t)memory & 3) != 0) {\n        remaining_size = size - 1;\n        current_word = memory;\n        if (size == 0) {\n            return;\n        }\n        while( true ) {\n            memory = (uint32_t *)((int)current_word + 1);\n            *(uint8_t *)current_word = value;\n            size = remaining_size;\n            if (((uint32_t)memory & 3) == 0) break;\n            if (remaining_size == 0) {\n                return;\n            }\n            remaining_size = remaining_size - 1;\n            current_word = memory;\n        }\n    }\n    \n    if (3 < size) {\n        if (0xf < size) {\n            end_word = (uint32_t *)((int)memory + (size - 0x10 & 0xfffffff0) + 0x20);\n            current_word = memory + 4;\n            do {\n                current_word[-4] = value_32;\n                current_word[-3] = value_32;\n                current_word[-2] = value_32;\n                current_word[-1] = value_32;\n                current_word = current_word + 4;\n            } while (current_word != end_word);\n            remaining_size = size & 0xc;\n            memory = memory + ((size - 0x10 >> 4) + 1) * 4;\n            size = size & 0xf;\n            if (remaining_size == 0) {\n                goto end;\n            }\n        }\n        end_word = (uint32_t *)((size - 4 & 0xfffffffc) + 4 + (int)memory);\n        do {\n            current_word = memory + 1;\n            *memory = value_32;\n            memory = current_word;\n        } while (end_word != current_word);\n        size = size & 3;\n        memory = end_word;\n    }\nend:\n    if (size != 0) {\n        current_word = memory;\n        do {\n            end_word = (uint32_t *)((int)current_word + 1);\n            *(uint8_t *)current_word = value;\n            current_word = end_word;\n        } while ((uint32_t *)(size + (int)memory) != end_word);\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_08001994",
                "FUN_080079c0",
                "FUN_080005b4",
                "FUN_080002f0",
                "FUN_080004ac",
                "FUN_08004d7c",
                "FUN_08005814",
                "FUN_080024c4",
                "FUN_08002f24",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "write_to_memory_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "print_error_message_08004030",
                "param_1": "error_code",
                "PTR_DAT_08004108": "ERROR_MSG_DEFAULT",
                "PTR_s_error__0800410c": "ERROR_MSG_GENERIC",
                "PTR_s_Bad_number_format_08004110": "ERROR_MSG_BAD_NUM_FORMAT",
                "PTR_s_Expected_command_letter_08004114": "ERROR_MSG_EXPECTED_CMD_LETTER",
                "PTR_s_Unsupported_statement_08004118": "ERROR_MSG_UNSUPPORTED_STMT",
                "PTR_s_Invalid_radius_0800411c": "ERROR_MSG_INVALID_RADIUS",
                "PTR_s_Modal_group_violation_08004120": "ERROR_MSG_MODAL_GROUP_VIOLATION",
                "PTR_s_Invalid_statement_08004124": "ERROR_MSG_INVALID_STMT",
                "PTR_s_Setting_disabled_08004128": "ERROR_MSG_SETTING_DISABLED",
                "PTR_s_Value___0_0_0800412c": "ERROR_MSG_VALUE_0_0",
                "PTR_s_Value___3_usec_08004130": "ERROR_MSG_VALUE_3_USEC",
                "PTR_s_EEPROM_read_fail__Using_defaults_08004134": "ERROR_MSG_EEPROM_READ_FAIL",
                "PTR_s_Busy_or_queued_08004138": "ERROR_MSG_BUSY_OR_QUEUED",
                "PTR_s_Alarm_lock_0800413c": "ERROR_MSG_ALARM_LOCK",
                "PTR_s_Line_overflow_08004140": "ERROR_MSG_LINE_OVERFLOW",
                "PTR_DAT_08004144": "ERROR_MSG_DEFAULT"
            },
            "code": "void print_error_message_08004030(char error_code) {\n  if (error_code == '\\0') {\n    print_message(PTR_DAT_08004108);\n  }\n  else {\n    print_message(PTR_s_error__0800410c);\n    switch(error_code) {\n    case '\\x01':\n      print_message(PTR_s_Bad_number_format_08004110);\n      break;\n    case '\\x02':\n      print_message(PTR_s_Expected_command_letter_08004114);\n      break;\n    case '\\x03':\n      print_message(PTR_s_Unsupported_statement_08004118);\n      break;\n    case '\\x04':\n      print_message(PTR_s_Invalid_radius_0800411c);\n      break;\n    case '\\x05':\n      print_message(PTR_s_Modal_group_violation_08004120);\n      break;\n    case '\\x06':\n      print_message(PTR_s_Invalid_statement_08004124);\n      break;\n    case '\\a':\n      print_message(PTR_s_Setting_disabled_08004128);\n      break;\n    case '\\b':\n      print_message(PTR_s_Value___0_0_0800412c);\n      break;\n    case '\\t':\n      print_message(PTR_s_Value___3_usec_08004130);\n      break;\n    case '\\n':\n      print_message(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n      break;\n    case '\\v':\n      print_message(PTR_s_Busy_or_queued_08004138);\n      break;\n    case '\\f':\n      print_message(PTR_s_Alarm_lock_0800413c);\n      break;\n    case '\\r':\n      print_message(PTR_s_Line_overflow_08004140);\n    }\n    print_message(PTR_DAT_08004108);\n  }\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_error_message_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "calculate_if_threshold_exceeded_08005360",
                "uVar1": "max_threshold",
                "uVar2": "threshold",
                "PTR_DAT_08005398": "data_pointer",
                "DAT_0800539c": "max_threshold_value"
            },
            "code": "bool calculate_if_threshold_exceeded_08005360(void)\n{\n    int current_value = *(int *)(PTR_DAT_08005398 + 0x14);\n    int threshold = *(int *)(PTR_DAT_08005398 + 0x18);\n    threshold += current_value;\n    uint max_threshold = DAT_0800539c;\n    if (max_threshold < threshold) {\n        threshold -= 420000;\n    }\n    return max_threshold < threshold;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "calculate_if_threshold_exceeded_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "clear_data_08003980",
                "PTR_DAT_08003998": "data_pointer_1",
                "PTR_DAT_0800399c": "data_pointer_2"
            },
            "code": "void clear_data_08003980(void)\n{\n  *PTR_DAT_08003998 = 0;\n  *PTR_DAT_0800399c = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "clear_data_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "convert_char_to_int_08006de0",
                "param_1": "input_char",
                "uVar1": "converted_int",
                "FUN_08006a18": "convert_char_to_int_helper"
            },
            "code": "int convert_char_to_int_08006de0(char input_char) {\n  int converted_int = convert_char_to_int_08006de0_helper((int)input_char);\n  return converted_int;\n}",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "main_08007540",
                "FUN_080059b4": "initialize_graphics",
                "FUN_08007436": "load_assets",
                "FUN_0800778c": "start_music",
                "FUN_08007e08": "show_title_screen",
                "FUN_080079c0": "start_game",
                "FUN_08008190": "end_game",
                "FUN_08005984": "set_difficulty",
                "FUN_08001ddc": "initialize_game_state"
            },
            "code": "int main_08007540() {\n  initialize_graphics();\n  load_assets();\n  start_music();\n  show_title_screen();\n  start_game();\n  end_game();\n  return 0;\n}",
            "called": [
                "FUN_080079c0",
                "FUN_08008190",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08007436",
                "FUN_08005984",
                "FUN_080059b4",
                "FUN_08001ddc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "main_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "set_param_in_dat_080052dc",
                "param_1": "new_param",
                "PTR_DAT_08005308": "dat_ptr",
                "DAT_08005308": "dat_offset",
                "masked_value": "current_value_masked",
                "new_value": "updated_value",
                "current_value": "current_dat_value"
            },
            "code": "void set_param_in_dat_080052dc(uint new_param)\n{\n    uint* PTR_DAT_08005308 = (uint*)(DAT_08005308 + 0x14);\n    uint current_value = *PTR_DAT_08005308;\n    uint masked_value = current_value & 0xfffff55f;\n    uint new_value = new_param | masked_value;\n    *PTR_DAT_08005308 = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "set_param_in_dat_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_data_rate_080064ec",
                "uVar1": "modulation_scheme",
                "uVar2": "bit_rate_divisor",
                "local_c": "data_rate",
                "count_leading_zeroes": "count_leading_zeros",
                "DAT_0800661c": "data_ptr",
                "DAT_08006620": "QPSK_1_2",
                "DAT_08006624": "QAM16_1_2"
            },
            "code": "uint calculate_data_rate_080064ec(void)\n{\n  uint data_rate;\n  uint modulation_scheme;\n  uint bit_rate_divisor;\n  uint coding_rate_divisor;\n  uint data_rate_divisor;\n  uint coding_rate;\n  uint bit_rate;\n  modulation_scheme = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (modulation_scheme == 8) {\n    bit_rate_divisor = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    coding_rate_divisor = (DAT_08006620 / bit_rate_divisor);\n    data_rate_divisor = (*(uint *)(DAT_0800661c + 4) & 0x400000) ? (DAT_08006624 / bit_rate_divisor) : coding_rate_divisor;\n    coding_rate = (*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (count_leading_zeroes(0x3fe0000) & 0xff);\n    bit_rate = (*(uint *)(DAT_0800661c + 4) & 0x30000) >> (count_leading_zeroes(0xc000) & 0xff);\n    data_rate = coding_rate * bit_rate / data_rate_divisor;\n  }\n  else {\n    if (modulation_scheme == 0) {\n      data_rate = DAT_08006620;\n    }\n    else if (modulation_scheme == 4) {\n      data_rate = DAT_08006624;\n    }\n    else {\n      data_rate = DAT_08006620;\n    }\n  }\n  return data_rate;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": false,
            "current_name": "calculate_data_rate_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "extract_bits_08006ba0",
                "param_1": "num_bits_to_extract",
                "param_2": "source_bits",
                "param_3": "destination_bits",
                "uVar1": "num_bits_to_shift",
                "extracted_bits_mask": "extracted_bits_mask",
                "extracted_bits_value": "extracted_bits_value"
            },
            "code": "uint extract_bits_08006ba0(uint num_bits_to_extract, uint source_bits, uint destination_bits)\n{\n  uint num_bits_to_shift;\n  uint extracted_bits_mask;\n  uint extracted_bits_value;\n  \n  num_bits_to_shift = 7 - (num_bits_to_extract & 0x7);\n  extracted_bits_mask = (1 << (num_bits_to_extract & 0xff)) - 1;\n\n  if (num_bits_to_shift > 3) {\n    num_bits_to_shift = 4;\n  }\n\n  if ((num_bits_to_extract + 4) < 7) {\n    num_bits_to_extract = 0;\n  }\n  else {\n    num_bits_to_extract -= 3;\n  }\n\n  extracted_bits_value = ((1 << (num_bits_to_shift & 0xff)) - 1 & source_bits) << (num_bits_to_extract & 0xff);\n  return destination_bits & extracted_bits_mask | extracted_bits_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "extract_bits_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "verify_checksum_080003ec",
                "param_1": "message",
                "param_2": "message_length",
                "param_3": "checksum",
                "cVar1": "current_char",
                "uVar2": "expected_checksum",
                "local_1c": "remaining_length",
                "local_18": "current_char_ptr",
                "local_14": "message",
                "local_9": "calculated_checksum"
            },
            "code": "bool verify_checksum_080003ec(char *message, int message_length, int checksum) {\n  char current_char;\n  uint8_t calculated_checksum = 0;\n  int remaining_length = message_length;\n  char *current_char_ptr = message;\n  if (*(int *)PTR_DAT_08000470 == 0) {\n    initialize_library();\n    remaining_length = message_length;\n    current_char_ptr = message;\n  }\n  for (; remaining_length != 0; remaining_length--) {\n    current_char = get_next_char(current_char_ptr);\n    calculated_checksum = current_char + (calculated_checksum != 0);\n    *current_char_ptr = current_char;\n    current_char_ptr++;\n  }\n  uint8_t expected_checksum = get_next_char(current_char_ptr);\n  return calculated_checksum == expected_checksum;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d2c",
                "FUN_08004d7c",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "verify_checksum_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "replace_null_with_0x12_08002896",
                "param_1": "input_char",
                "local_9": "output_char"
            },
            "code": "char replace_null_with_0x12_08002896(char input_char){\n  char output_char;\n  output_char = input_char;\n  if (input_char == '\\0') {\n    output_char = '\\x12';\n  }\n  return output_char - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "replace_null_with_0x12_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = FUN_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_pointers_if_not_null_080001ac",
                "param_1": "first_pointer",
                "param_2": "second_pointer",
                "DAT_080001bc": "global_variable",
                "PTR_FUN_080001c4": "global_first_pointer",
                "PTR_DAT_080001c0": "global_second_pointer"
            },
            "code": "uint64_t concatenate_pointers_if_not_null_080001ac(uint8_t *first_pointer, uint8_t *second_pointer) {\n  if (DAT_080001bc != 0) {\n    first_pointer = PTR_FUN_080001c4;\n    second_pointer = PTR_DAT_080001c0;\n  }\n  return ((uint64_t)second_pointer << 32) | (uint64_t)first_pointer;\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "concatenate_pointers_if_not_null_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "copy_bytes_to_memory_08003740",
                "param_1": "destination",
                "FUN_080036f0": "copy_bytes_from_memory",
                "PTR_": "destination_",
                "DAT_": "data_"
            },
            "code": "void copy_bytes_to_memory_08003740(void* destination, void* source, int num_bytes) {\n  memcpy(destination, source, num_bytes);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "copy_bytes_to_memory_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "set_params_08000478",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "code": "void set_params_08000478(int param1, int param2, int param3) {\n\tPTR_DAT_080004a8[0x19] = param1;\n\tPTR_DAT_080004a8[0x1a] = param2;\n\tPTR_DAT_080004a8[0x1b] = param3;\n\treturn;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "set_params_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "print_character_08006d2e",
                "param_1": "character",
                "FUN_080069b4": "print_to_stdout"
            },
            "code": "void print_character_08006d2e(char character) {\n  print_to_stdout((int)character);\n  return;\n}",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "waitForFlagToBeSet_08007e1c",
                "param_1": "flag",
                "DAT_08007e48": "statusRegister"
            },
            "code": "void waitForFlagToBeSet_08007e1c(byte flag) {\n  while ((*DAT_08007e48 & 0x80) == 0);\n  DAT_08007e48[1] = (uint)flag;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "imported": false,
            "current_name": "waitForFlagToBeSet_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "calculateHash": "calculateHash",
                "param_1": "hash",
                "param_2": "value",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5",
                "iVar1": "is_valid",
                "uVar2": "result_low",
                "uVar3": "result_high",
                "uVar4": "result2_low",
                "uVar5": "result2_high",
                "uVar6": "result3_high",
                "uVar7": "result",
                "uVar8": "result4",
                "FUN_0800adf0": "calculateHash_0800adf0"
            },
            "code": "undefined4 calculateHash_0800adf0(undefined4 hash, uint32_t value, undefined4 param_3, undefined4 param_4, int param_5)\n{\n  int is_valid = FUN_08008ba0();\n  if (((value & 0x7fffffff) < 0x3e400000) && (is_valid == 0)) {\n    return hash;\n  }\n  uint64_t result = FUNC_08008640(hash, value, hash);\n  uint32_t result_high = (uint32_t)(result >> 0x20);\n  uint32_t result_low = (uint32_t)result;\n  result = FUNC_08008640(hash, value, result_low, result_high);\n  uint32_t result2_high = (uint32_t)(result >> 0x20);\n  uint32_t result2_low = (uint32_t)result;\n  result = FUNC_08008640(result_low, result_high, DAT_0800af40, DAT_0800af44);\n  result = FUNC_080082d0((int)result, (int)(result >> 0x20), DAT_0800af48, DAT_0800af4c);\n  result = FUNC_08008640((int)result, (int)(result >> 0x20), result_low, result_high);\n  result = FUNC_080082d4((int)result, (int)(result >> 0x20), DAT_0800af50, DAT_0800af54);\n  result = FUNC_08008640((int)result, (int)(result >> 0x20), result_low, result_high);\n  result = FUNC_080082d0((int)result, (int)(result >> 0x20), DAT_0800af58, DAT_0800af5c);\n  result = FUNC_08008640((int)result, (int)(result >> 0x20), result_low, result_high);\n  result = FUNC_080082d4((int)result, (int)(result >> 0x20), DAT_0800af60, DAT_0800af64);\n  uint32_t result3_high = (uint32_t)(result >> 0x20);\n  uint32_t result3_low = (uint32_t)result;\n  if (param_5 != 0) {\n    uint64_t result4 = FUNC_08008640(param_3, param_4, 0, DAT_0800af70);\n    result = FUNC_08008640(result_low, result2_low, (int)result, result3_high);\n    result = FUNC_080082d0((int)result4, (int)(result4 >> 0x20), (int)result, (int)(result >> 0x20));\n    result = FUNC_08008640((int)result, (int)(result >> 0x20), result_low, result_high);\n    result = FUNC_080082d0((int)result, (int)(result >> 0x20), param_3, param_4);\n    result4 = FUNC_08008640(result_low, result2_low, DAT_0800af68, DAT_0800af6c);\n    result = FUNC_080082d4((int)result, (int)(result >> 0x20), (int)result4, (int)(result4 >> 0x20));\n    hash = FUNC_080082d0(hash, value, (int)result, (int)(result >> 0x20));\n    return hash;\n  }\n  result = FUNC_08008640(result_low, result_high, (int)result, result3_high);\n  result = FUNC_080082d0((int)result, (int)(result >> 0x20), DAT_0800af68, DAT_0800af6c);\n  result = FUNC_08008640((int)result, (int)(result >> 0x20), result_low, result2_low);\n  hash = FUNC_080082d4((int)result, (int)(result >> 0x20), hash, value);\n  return hash;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "calculateHash_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "bVar1": "data",
                "PTR_DAT_08003b90": "PTR_DATA",
                "PTR_DAT_08003b94": "PTR_DATA2",
                "FUN_08004148": "send_error_message",
                "FUN_080041a0": "send_success_message",
                "FUN_08004940": "perform_operation1",
                "FUN_0800587c": "perform_operation2",
                "FUN_080058a0": "perform_operation3",
                "FUN_0800585c": "perform_operation4"
            },
            "code": "void process_data_08003a74(void)\\n{\\n  byte data = PTR_DAT_08003b90[2];\\n\\n  if (data != \"\\0\") {\\n    if ((data & 0x60) != 0) {\\n      PTR_DAT_08003b90[1] = 6;\\n      if ((data & 0x40) == 0) {\\n        send_error_message(0xfffffffe);\\n      }\\n      else {\\n        send_success_message(1);\\n        clear_bit(PTR_DAT_08003b90[2], 4);\\n        while ((PTR_DAT_08003b90[2] & 0x10) == 0);\\n      }\\n      clear_bit(PTR_DAT_08003b90[2], 5);\\n    }\\n    if ((data & 0x10) == 0) {\\n      if ((data & 1) != 0) {\\n        perform_operation1();\\n        clear_bit(PTR_DAT_08003b90[2], 0);\\n      }\\n      if ((data & 8) != 0) {\\n        perform_operation2();\\n        clear_bit(PTR_DAT_08003b90[2], 3);\\n      }\\n      if ((data & 4) != 0) {\\n        perform_operation3();\\n        clear_bit(PTR_DAT_08003b90[2], 2);\\n      }\\n      if ((data & 2) != 0) {\\n        perform_operation4();\\n        if ((PTR_DAT_08003b90[36] & 2) != 0) {\\n          PTR_DAT_08003b90[16] = 1;\\n        }\\n        clear_bit(PTR_DAT_08003b90[2], 1);\\n      }\\n    }\\n    else {\\n      *PTR_DAT_08003b90 = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080058a0",
                "FUN_08004940",
                "FUN_08004148",
                "FUN_0800587c",
                "FUN_0800585c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_08002fd4",
                "FUN_08003f34",
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_data_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = FUN_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = FUN_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "update_data_08006b00",
                "param_1": "data",
                "param_2": "value",
                "DAT_08006b4c": "data_array_1",
                "DAT_08006b50": "data_array_2"
            },
            "code": "void update_data_08006b00(byte data, uint value) {\n  if (data < 0) {\n    char* ptr = (char*)((data & 0xf) + DAT_08006b4c + 0x14);\n    *ptr = (char)((value & 0xff) << 4);\n  }\n  else {\n    char* ptr = (char*)((char)data + DAT_08006b50 + 0x300);\n    *ptr = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "update_data_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "checkDataValidity_0800b4d0",
                "DAT_0800b4dc": "dataIsValid",
                "FUN_0800b524": "processData",
                "PTR_LAB_0800b4f0_1_0800b4e0": "dataPointer"
            },
            "code": "void checkDataValidity_0800b4d0(void)\n{\n  if (DAT_0800b4dc != 0) {\n    processData(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "checkDataValidity_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculate_checksum_08007f54",
                "param_1": "data",
                "param_2": "length",
                "lVar1": "product",
                "iVar2": "result1",
                "iVar3": "result2",
                "uVar4": "multiplier",
                "mask": "mask",
                "PTR_DAT_08008184": "PTR_DAT_08008184",
                "PTR_DAT_08008188": "PTR_DAT_08008188",
                "DAT_0800818C": "factor"
            },
            "code": "void calculate_checksum_08007f54(int data, int length) {\n  long long product;\n  int result1, result2, result3;\n  unsigned int mask = *(unsigned int *)(data + 0xC);\n  if ((mask & 0x8000) == 0) {\n    if ((data != PTR_DAT_08008184) && (data != PTR_DAT_08008188)) {\n      unsigned long long DAT_0800818C = (unsigned long long)DAT_0800818C;\n      unsigned long long multiplier = (unsigned long long)((int)FUN_08006680() * 0x19) / (unsigned long long)(length << 2);\n      product = DAT_0800818C * multiplier;\n      result1 = FUN_08006680((int)multiplier, (int)(multiplier >> 0x20), (int)product);\n      result2 = FUN_08006680();\n      *(unsigned int *)(data + 8) = ((unsigned int)(product >> 0x25) << 4) | ((unsigned int)(DAT_0800818C * (unsigned long long)(((result1 * 0x19) / (length << 2)) + ((((unsigned long long)DAT_0800818C * (unsigned long long)((int)result2 * 0x19)) / (unsigned long long)(length << 2)) >> 0x25) * -100 + 0x32)) >> 0x25 & 0xF);\n      return;\n    }\n    else {\n      unsigned long long DAT_0800818C = (unsigned long long)DAT_0800818C;\n      unsigned long long multiplier = (unsigned long long)((int)FUN_080066CC() * 0x19) / (unsigned long long)(length << 2);\n      product = DAT_0800818C * multiplier;\n      result1 = FUN_080066CC((int)multiplier, (int)(multiplier >> 0x20), (int)product);\n      result2 = FUN_080066CC();\n      *(unsigned int *)(data + 8) = ((unsigned int)(product >> 0x25) << 4) | ((unsigned int)(DAT_0800818C * (unsigned long long)(((result1 * 0x19) / (length << 2)) + ((((unsigned long long)DAT_0800818C * (unsigned long long)((int)result2 * 0x19)) / (unsigned long long)(length << 2)) >> 0x25) * -100 + 0x32)) >> 0x25 & 0xF);\n    }\n  }\n  else {\n    if ((data != PTR_DAT_08008184) && (data != PTR_DAT_08008188)) {\n      unsigned long long DAT_0800818C = (unsigned long long)DAT_0800818C;\n      unsigned long long multiplier = (unsigned long long)((int)FUN_08006680() * 0x19) / (unsigned long long)(length << 1);\n      product = DAT_0800818C * multiplier;\n      result1 = FUN_08006680((int)multiplier, (int)(multiplier >> 0x20), (int)product);\n      result2 = FUN_08006680();\n      *(unsigned int *)(data + 8) = ((unsigned int)(product >> 0x25) << 4) | ((unsigned int)(DAT_0800818C * (unsigned long long)(((result1 * 0x19) / (length << 1)) + ((((unsigned long long)DAT_0800818C * (unsigned long long)((int)result2 * 0x19)) / (unsigned long long)(length << 1)) >> 0x25) * -100 + 0x32)) >> 0x25 & 0xF);\n      return;\n    }\n    else {\n      unsigned long long DAT_0800818C = (unsigned long long)DAT_0800818C;\n      unsigned long long multiplier = (unsigned long long)((int)FUN_080066CC() * 0x19) / (unsigned long long)(length << 1);\n      product = DAT_0800818C * multiplier;\n      result1 = FUN_080066CC((int)multiplier, (int)(multiplier >> 0x20), (int)product);\n      result2 = FUN_080066CC();\n      *(unsigned int *)(data + 8) = ((unsigned int)(product >> 0x25) << 4) | ((unsigned int)(DAT_0800818C * (unsigned long long)(((result1 * 0x19) / (length << 1)) + ((((unsigned long long)DAT_0800818C * (unsigned long long)((int)result2 * 0x19)) / (unsigned long long)(length << 1)) >> 0x25) * -100 + 0x32)) >> 0x25 & 0xF);\n    }\n  }\n}",
            "called": [
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "process_input_08003b98",
                "param_1": "input",
                "bVar1": "first_byte",
                "iVar2": "i",
                "uVar3": "converted_long",
                "uVar4": "result",
                "uVar5": "multiplied_long",
                "local_14": "second_long",
                "local_10": "first_long",
                "local_a": "third_char",
                "local_9": "loop_counter"
            },
            "code": "uint process_input_08003b98(char *input)\n{\n    byte first_char = input[0];\n    int i = 0;\n    uint result = 0;\n    undefined8 uVar1;\n    undefined4 local_14;\n    undefined4 local_10;\n    byte second_char = 0;\n    byte third_char = 0;\n    \n    if (first_char != '$') {\n        result = parse_input(input);\n        return result;\n    }\n    \n    second_char = input[1];\n    if (second_char == 0) {\n        handle_error();\n        return 0;\n    }\n    \n    if ((second_char > 0x58) || (second_char < 0x23)) {\n        goto switchD_08003bdc_caseD_25;\n    }\n    \n    switch (second_char) {\n        case 0x23:\n            third_char = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_23();\n            break;\n        case 0x24:\n            third_char = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_24();\n            break;\n        case 0x43:\n            third_char = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_43();\n            break;\n        case 0x47:\n            third_char = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_47();\n            break;\n        case 0x48:\n            if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n                return 7;\n            }\n            if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n                return 0xb;\n            }\n            handle_case_48();\n            if (*PTR_DAT_08003f2c == '\\0') {\n                handle_case_48_2();\n            }\n            break;\n        case 0x4e:\n            third_char = 2;\n            if (input[2] == '\\0') {\n                for (i = 0; i < 2; i++) {\n                    result = handle_case_4e(i, input);\n                    if (result == 0) {\n                        handle_case_4e_2();\n                    }\n                    else {\n                        handle_case_4e_3(i, input);\n                    }\n                }\n                return 0;\n            }\n            third_char = 1;\n            // fall through\n        default:\n        switchD_08003bdc_caseD_25:\n            i = parse_input(input, &third_char, &local_10);\n            if (i == 0) {\n                return 1;\n            }\n            second_char = third_char + 1;\n            if (input[third_char] != '=') {\n                return 3;\n            }\n            third_char = second_char;\n            if (second_char == 0) {\n                i = parse_input(input, &third_char, &local_14);\n                if (i == 0) {\n                    return 1;\n                }\n                if (input[third_char] == '\\0') {\n                    uVar1 = convert_to_long(local_10);\n                    result = handle_case_not_4e(uVar1, local_14);\n                    return result;\n                }\n                return 3;\n            }\n            do {\n                input[(uint)third_char - (uint)second_char] = input[third_char];\n                result = (uint)third_char;\n                third_char++;\n            } while (input[result] != '\\0');\n            third_char = second_char;\n            result = parse_input(input);\n            if (result != 0) {\n                return (uint)result;\n            }\n            uVar1 = convert_to_long(local_10);\n            uVar1 = multiply_2_long(uVar1, (int)((ulonglong)uVar1 >> 0x20));\n            third_char = convert_to_byte(uVar1, (int)((ulonglong)uVar1 >> 0x20));\n            handle_case_not_4e_2(third_char, input);\n            break;\n        case 0x58:\n            third_char = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            if (PTR_DAT_08003f2c[1] == '\\x06') {\n                handle_case_58();\n                PTR_DAT_08003f2c[1] = 0;\n            }\n    }\n    return 0;\n}",
            "called": [
                "FUN_080046d0",
                "FUN_08008590",
                "FUN_08004bc0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_08009278",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_080025e8",
                "FUN_08004250",
                "FUN_08004d2c",
                "FUN_080005b4",
                "FUN_08009798",
                "FUN_080024c4",
                "FUN_080041a0",
                "FUN_08004900",
                "FUN_080044e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "process_input_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "initialize_data_080024c4",
                "PTR_DAT_080025d8": "data_ptr_1",
                "PTR_DAT_080025dc": "data_ptr_2",
                "PTR_DAT_080025e0": "data_ptr_4",
                "PTR_DAT_080025e4": "data_ptr_3",
                "FUN_08001d4c": "initialize_function_1",
                "FUN_08003a74": "initialize_function_2",
                "FUN_0800b430": "function_3",
                "FUN_0800283a": "function_4",
                "FUN_08008e44": "function_5",
                "FUNC_08008eec": "function_6",
                "FUN_08001e98": "function_7",
                "FUN_0800585c": "function_8",
                "FUN_08002fd4": "function_9",
                "char local_13": "char_3",
                "char local_12": "char_2",
                "char local_11": "char_1",
                "undefined4 uVar1": "int_1",
                "undefined4 uVar2": "int_2",
                "undefined4 uVar3": "int_3"
            },
            "code": "void initialize_data_080024c4()\n{\n    int flag = 5;\n    *(int *)PTR_DAT_080025dc = 0;\n    initialize_function_1();\n    initialize_function_2();\n    if (*PTR_DAT_080025d8 == '\\0') {\n        function_3(PTR_DAT_080025e0, 0, 0xc);\n        function_4();\n        flag = 0;\n        if ((*(unsigned short *)(PTR_DAT_080025e0 + 0x2a) & 0x20) == 0) {\n            char_1 = -1;\n        }\n        else {\n            char_1 = '\\x01';\n        }\n        if ((*(unsigned short *)(PTR_DAT_080025e0 + 0x2a) & 0x80) == 0) {\n            char_2 = -1;\n        }\n        else {\n            char_2 = '\\x01';\n        }\n        if ((*(unsigned short *)(PTR_DAT_080025e0 + 0x2a) & 0x200) == 0) {\n            char_3 = -1;\n        }\n        else {\n            char_3 = '\\x01';\n        }\n        int_1 = function_5((int)char_1);\n        int_1 = function_6(int_1, *(int *)(PTR_DAT_080025e0 + 0x38));\n        int_2 = function_5((int)char_2);\n        int_2 = function_6(int_2, *(int *)(PTR_DAT_080025e0 + 0x38));\n        int_3 = function_5((int)char_3);\n        int_3 = function_6(int_3, *(int *)(PTR_DAT_080025e0 + 0x38));\n        function_7(int_1, int_2, int_3, *(int *)(PTR_DAT_080025e0 + 0x30), 0);\n        function_8();\n        function_9();\n        function_4();\n        if ((PTR_DAT_080025e0[0x28] & 8) != 0) {\n            *(int *)PTR_DAT_080025dc = 1;\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_0800585c",
                "FUN_0800b430",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_data_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "checkAndReplaceCharIfDifferent_08002f40",
                "*PTR_DAT_08002f6c": "*currentCharPtr",
                "*PTR_DAT_08002f70": "*targetCharPtr",
                "uVar1": "replacedChar",
                "FUN_08002870": "replaceChar"
            },
            "code": "void checkAndReplaceCharIfDifferent_08002f40(void)\n{\n  char currentChar = *PTR_DAT_08002f6c;\n  char targetChar = *PTR_DAT_08002f70;\n  if (currentChar != targetChar) {\n    char replacedChar = replaceChar(currentChar);\n    *PTR_DAT_08002f70 = replacedChar;\n  }\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "checkAndReplaceCharIfDifferent_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08004250",
                "FUN_08001994",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08002908",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "set_flag_if_bit_unset_080025e8",
                "PTR_DAT_08002634": "ptr_dat",
                "byte": "byte_type",
                "FUN_08005250": "call_some_function",
                "FUN_08000210": "call_another_function",
                "FUN_080057e4": "call_third_function"
            },
            "code": "void set_flag_if_bit_unset_080025e8()\n{\n  int flag = PTR_DAT_08002634[2];\n  if ((flag & 0x10) == 0) {\n    flag |= 0x10;\n    call_some_function();\n    call_another_function();\n    if ((byte)PTR_DAT_08002634[1] - 3 < 3) {\n      flag |= 0x20;\n      call_third_function();\n    }\n    PTR_DAT_08002634[2] = flag;\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_080057e4",
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08005900",
                "FUN_080005b4",
                "FUN_08003b98",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "imported": false,
            "current_name": "set_flag_if_bit_unset_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "do_nothing_and_return_08005250",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void do_nothing_and_return_08005250(void)\n{\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_080025e8",
                "FUN_0800525c",
                "FUN_08005238"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "wait_forever_08007430"
            },
            "code": "void wait_forever_08007430(void)\n{\n  do {\n    /* WARNING: Do nothing block with infinite loop */\n  } while(true);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "wait_forever_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = extract_bits();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800056c",
                "FUN_0800af78",
                "FUN_08002638",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "set_flags_and_call_functions_08007436",
                "local_4c": "arg1",
                "local_48": "arg2",
                "local_34": "arg3",
                "local_30": "arg4",
                "local_2c": "arg5",
                "local_28": "arg6",
                "local_24": "arg7",
                "local_20": "arg8",
                "local_1c": "arg9",
                "local_18": "arg10",
                "local_14": "arg11",
                "local_10": "arg12",
                "local_c": "arg13",
                "DAT_080074c0": "ptr_flag",
                "DAT_080074c4": "ptr_c4"
            },
            "code": "void set_flags_and_call_functions_08007436(void)\n{\n  int return_value;\n  uint* DAT_080074c0 = (uint*)(DAT_080074c0 + 0x40);\n  uint* DAT_080074c4 = (uint*)DAT_080074c4;\n  *DAT_080074c0 = *DAT_080074c0 | 0x10000000;\n  *DAT_080074c4 = *DAT_080074c4 | 0xc000;\n  int arg1 = 1;\n  int arg2 = 1;\n  int arg3 = 2;\n  int arg4 = 0x400000;\n  int arg5 = 8;\n  int arg6 = 0x150;\n  int arg7 = 2;\n  int arg8 = 7;\n  return_value = FUNC_08005cec(&arg1);\n  if (return_value != 0) {\n    FUN_08007430();\n  }\n  int arg9 = 0xf;\n  int arg10 = 2;\n  int arg11 = 0;\n  int arg12 = 0x1400;\n  int arg13 = 0x1000;\n  return_value = FUN_0800618c(&arg9, 5);\n  if (return_value != 0) {\n    FUN_08007430();\n  }\n  return;\n}",
            "called": [
                "FUN_0800618c",
                "FUN_08005cec",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_data_08005814",
                "FUN_0800b430": "initialize_memory",
                "PTR_DAT_08005834": "PTR_DATA",
                "FUN_08005324": "set_value",
                "PTR_DAT_08005838": "PTR_COUNTER"
            },
            "code": "void initialize_data_08005814(void)\n{\n  initialize_memory(PTR_DAT_08005834, 0, 0x24);\n  set_value(800);\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_data_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "updateData_08005bdc",
                "param_1": "data",
                "param_2": "value",
                "DAT_08005c28": "dataBuffer1",
                "DAT_08005c2c": "dataBuffer2"
            },
            "code": "void updateData_08005bdc(byte data, uint value) {\n  if (data < 0) {\n    *(char *)((data & 0xf) + DAT_08005c28 + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)data + DAT_08005c2c + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": false,
            "current_name": "updateData_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0",
                "PTR_DAT_08000308": "data_ptr",
                "PTR_DAT_0800030c": "flag_ptr",
                "set_bytes_to_value": "set_value_in_bytes",
                "max_value": "max_byte_value",
                "num_bytes": "num_bytes_to_set"
            },
            "code": "void initialize_data_080002f0(void)\n{\n  uint8_t max_value = 0xff;\n  uint8_t num_bytes = 4;\n  uint8_t* PTR_DAT_08000308 = PTR_DAT_08000308;\n  set_bytes_to_value(PTR_DAT_08000308, max_value, num_bytes);\n  *(uint32_t*)PTR_DAT_0800030c = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000374",
                "FUN_08000310",
                "FUN_08000340",
                "FUN_080003ec"
            ],
            "imported": false,
            "current_name": "initialize_data_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "update_data_0800778c",
                "local_c": "mask",
                "local_24": "mask_bit",
                "local_20": "data_1",
                "local_1c": "data_2",
                "local_18": "data_3",
                "local_14": "data_4",
                "local_10": "data_ptr"
            },
            "code": "void update_data_0800778c(){\n    int index;\n    uint mask_bit;\n    uint data_1;\n    uint data_2;\n    uint data_3;\n    uint data_4;\n    uint *data_ptr;\n    uint mask;\n    for (mask = 0; mask < 0x11; mask++) {\n        data_ptr = (uint *)(PTR_DAT_0800784c + mask * 0x18);\n        *(uint *)(DAT_08007850 + 0x30) |= 1 << (*data_ptr >> 4 & 0xff);\n        mask_bit = 1 << (*data_ptr & 0xf);\n        data_1 = data_ptr[1];\n        data_2 = data_ptr[2];\n        data_3 = data_ptr[3];\n        data_4 = data_ptr[4];\n        FUN_08006e88(((*data_ptr >> 4) + 0x100080) * 0x400,&mask_bit);\n        if ((int)data_ptr[5] >= 0) {\n            FUN_0800733e(((*data_ptr >> 4) + 0x100080) * 0x400,1 << (*data_ptr & 0xf) & 0xffff,data_ptr[5] & 0xff);\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "update_data_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "main_loop_08001ddc",
                "PTR_DAT_08001e90": "PTR_DATA",
                "PTR_DAT_08001e94": "PTR_DATA_INFO",
                "do_nothing_08008244": "do_nothing",
                "FUN_080051b4": "initialize",
                "FUN_0800583c": "setup",
                "FUN_0800b430": "initialize_data",
                "FUN_08002f24": "process_data",
                "FUN_080004ac": "perform_task_1",
                "FUN_080039a0": "perform_task_2",
                "FUN_08005238": "perform_task_3",
                "FUN_080001f8": "perform_task_4",
                "FUN_0800192c": "perform_task_5",
                "FUN_08005814": "perform_task_6",
                "FUN_0800283a": "perform_task_7",
                "FUN_080041a0": "perform_task_9",
                "FUN_080039bc": "perform_task_10",
                "FUN_08003a74": "perform_task_11",
                "FUN_08003f34": "perform_task_12"
            },
            "code": "void main_loop_08001ddc(void)\n{\n  do_nothing();\n  initialize();\n  setup();\n  initialize_data(PTR_DAT_08001e90, 0, 0x14);\n  *PTR_DAT_08001e90 = 1;\n  PTR_DAT_08001e90[1] = 1;\n  do {\n    if (*PTR_DAT_08001e90 != '\\0') {\n      do_nothing();\n      process_data();\n      perform_task_1();\n      perform_task_2();\n      perform_task_3();\n      perform_task_4();\n      perform_task_5();\n      perform_task_6();\n      perform_task_7();\n      perform_task_8();\n      *PTR_DAT_08001e90 = 0;\n      PTR_DAT_08001e90[2] = 0;\n      if ((PTR_DAT_08001e94[0x28] & 2) != 0) {\n        PTR_DAT_08001e90[0x10] = 1;\n      }\n      if ((PTR_DAT_08001e90[1] == '\\x01') && ((PTR_DAT_08001e94[0x28] & 0x10) != 0)) {\n        PTR_DAT_08001e90[1] = 6;\n      }\n      if (PTR_DAT_08001e90[1] == '\\x06') {\n        perform_task_9(2);\n      }\n      else {\n        PTR_DAT_08001e90[1] = 0;\n        perform_task_10();\n      }\n    }\n    perform_task_11();\n    perform_task_12();\n  } while (true);\n}",
            "called": [
                "FUN_080039a0",
                "FUN_0800283a",
                "FUN_080039bc",
                "FUN_0800583c",
                "FUN_080001f8",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_08005814",
                "FUN_0800b430",
                "FUN_08002f24",
                "FUN_080082ba",
                "FUN_08003a74",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_08005238",
                "FUN_0800192c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "main_loop_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_bit_in_array_080069b4",
                "param_1": "bit",
                "DAT_080069e0": "array",
                "array_index": "array_index",
                "bit_index": "bit_index",
                "array_ptr": "array_ptr"
            },
            "code": "void set_bit_in_array_080069b4(int bit, int* DAT_080069e0){\n    int DAT_080069e0_index = bit >> 5;\n    int bit_index = bit & 0x1f;\n    int* DAT_080069e0_ptr = DAT_080069e0 + DAT_080069e0_index;\n    *DAT_080069e0_ptr = 1 << bit_index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "is_end_of_string_08009228",
                "in_CY": "current_char",
                "FUN_08009204": "execute_preprocess"
            },
            "code": "bool is_end_of_string_08009228(void)\n{\n  char current_char;\n  execute_preprocess();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_080029d8",
                "FUN_08003004",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "process_data_08007c7c",
                "_DAT_40000010": "_data1",
                "_DAT_4000000c": "_data2",
                "FUN_08005778": "call_function1",
                "FUN_08005760": "call_function2",
                "FUNC_080053a0": "call_function3"
            },
            "code": "void process_data_08007c7c(void)\n{\n    bool flag1 = (_DAT_40000010 & 2) != 0;\n    bool flag2 = (_DAT_4000000c & 2) != 0;\n    if (flag1 && flag2) {\n        _DAT_40000010 &= 0xfffffffd;\n        call_function1();\n    }\n    flag1 = (_DAT_40000010 & 4) != 0;\n    flag2 = (_DAT_4000000c & 4) != 0;\n    if (flag1 && flag2) {\n        _DAT_40000010 &= 0xfffffffb;\n        call_function2();\n    }\n    flag1 = (_DAT_40000010 & 1) != 0;\n    flag2 = (_DAT_4000000c & 1) != 0;\n    if (flag1 && flag2) {\n        _DAT_40000010 &= 0xfffffffe;\n        call_function3();\n    }\n}",
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "set_data_flags_08007b70",
                "local_c": "data_flags",
                "_DAT_40000034": "ptr_data_flag1",
                "_DAT_40000038": "ptr_data_flag2",
                "_DAT_4000000c": "ptr_data_flags",
                "_DAT_40000000": "ptr_data_start_flag"
            },
            "code": "void set_data_flags_08007b70(void)\n{\n  uint8_t data_flags = 1;\n  if (_DAT_40000034 != 0)\n  {\n    data_flags = 3;\n  }\n  if (_DAT_40000038 != 0)\n  {\n    data_flags |= 4;\n  }\n  _DAT_4000000c |= data_flags;\n  _DAT_40000000 |= 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_data_flags_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "check_and_fill_data_08004d2c",
                "param_1": "data",
                "param_2": "buffer",
                "iVar1": "result"
            },
            "code": "bool check_and_fill_data_08004d2c(byte data, undefined *buffer) {\n  int result = FUN_080003ec(buffer, (ushort)data * 0x101 + 0x300, 0x100);\n  if (result == 0) {\n    *buffer = 0;\n    FUN_08004bc0(data, buffer);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_and_fill_data_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = reverse_and_improve(uVar3);\n  iVar4 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = reverse_and_improve(uVar3);\n  iVar5 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = reverse_and_improve(uVar3);\n  iVar6 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = FUN_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = FUN_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = FUN_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = reverse_and_improve(uVar9);\n    uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = reverse_and_improve(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = reverse_and_improve(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = FUN_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = reverse_and_improve(uVar9);\n      iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = FUN_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = reverse_and_improve(uVar9);\n        iVar13 = FUN_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = reverse_and_improve(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = reverse_and_improve(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = reverse_and_improve(uVar10);\n          uVar17 = reverse_and_improve(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUN_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = reverse_and_improve(uVar10);\n            uVar16 = reverse_and_improve(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = FUN_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = FUN_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = FUN_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = FUN_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08009250",
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008b24",
                "FUN_08008bf0",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002870",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08002edc",
                "FUN_080082d0",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "getShiftedValueBasedOnLeadingZeroes_080066cc",
                "uVar1": "value",
                "uVar2": "leadingZeroes",
                "FUN_08006628": "getValueFromFunction",
                "count_leading_zeroes": "countLeadingZeroes",
                "DAT_08006710": "dataPtr",
                "PTR_DAT_08006714": "ptrData"
            },
            "code": "uint getShiftedValueBasedOnLeadingZeroes_080066cc() {\n  uint value = getValueFromFunction();\n  uint leadingZeroes = countLeadingZeroes(0x70000);\n  uint shiftedValue = (*(uint *)(DAT_08006710 + 8) & 0xe000) >> (leadingZeroes & 0xff);\n  return value >> PTR_DAT_08006714[shiftedValue];\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "getShiftedValueBasedOnLeadingZeroes_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "update_param_080018fc",
                "param_1": "new_param",
                "*(uint *)(DAT_08001928 + 0x14)": "*ptr",
                "uint": "unsigned int",
                "DAT_08001928": "data_address",
                "0x14": "offset",
                "old_param": "previous_param"
            },
            "code": "void update_param_080018fc(uint new_param)\n{\n    uint* ptr = (uint*)(DAT_08001928 + 0x14);\n    uint old_param = *(uint *)(DAT_08001928 + 0x14);\n    *(uint *)(DAT_08001928 + 0x14) = new_param | (old_param & 0xfffff55f);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_param_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "check_and_process_data_080039bc",
                "iVar1": "result",
                "uVar2": "value",
                "local_9": "index",
                "FUN_08004d2c": "check_data",
                "PTR_DAT_08003a14": "data_pointer",
                "FUN_08004030": "print_result",
                "*PTR_DAT_08003a14": "data_value",
                "FUN_0800369c": "process_data",
                "FUNC_080005b4": "calculate_value"
            },
            "code": "void check_and_process_data_080039bc(void)\\n{\\n  int result;\\n  undefined4 value;\\n  byte index;\\n  for (index = 0; index < 2; index++) {\\n    result = check_data(index, PTR_DAT_08003a14);\\n    if (result == 0) {\\n      print_error(10);\\n    }\\n    else if (*PTR_DAT_08003a14 != \"\\0\") {\\n      process_data(PTR_DAT_08003a14);\\n      value = calculate_value(PTR_DAT_08003a14);\\n      print_result(value);\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08004d2c",
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_and_process_data_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "validate_and_update_0800618c",
                "param_1": "params",
                "param_2": "num_params",
                "lVar1": "result1",
                "iVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3"
            },
            "code": "int validate_and_update_0800618c(uint *params, uint num_params) {\n  long long result1;\n  int result2;\n  uint temp1;\n  uint temp2;\n  unsigned long long temp3;\n  \n  if ((*g_ptr_dat_08006400 & 0xf) < num_params) {\n    *(char *)g_ptr_dat_08006400 = (char)num_params;\n    if (num_params != (*g_ptr_dat_08006400 & 0xf)) {\n      return 1;\n    }\n    if ((*params & 1) != 0) {\n      if (params[1] == 1) {\n        if ((*g_ptr_dat_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((params[1] != 2) && ((*g_ptr_dat_08006404 & 2) == 0)) {\n        return 1;\n      }\n      g_ptr_dat_08006404[2] = params[1] | g_ptr_dat_08006404[2] & 0xfffffffc;\n      result2 = FUN_08005a84();\n      temp2 = result2 + 5000;\n      if (params[1] == 1) {\n        while ((g_ptr_dat_08006404[2] & 0xc) != 4) {\n          temp1 = FUN_08005a84();\n          if (temp2 <= temp1) {\n            return 3;\n          }\n        }\n      }\n      else if (params[1] == 2) {\n        while ((g_ptr_dat_08006404[2] & 0xc) != 8) {\n          temp1 = FUN_08005a84();\n          if (temp2 <= temp1) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((g_ptr_dat_08006404[2] & 0xc) != 0) {\n          temp1 = FUN_08005a84();\n          if (temp2 <= temp1) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*params & 1) != 0) {\n      if (params[1] == 1) {\n        if ((*g_ptr_dat_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (params[1] == 2) {\n        if ((*g_ptr_dat_08006404 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((*g_ptr_dat_08006404 & 2) == 0) {\n        return 1;\n      }\n      g_ptr_dat_08006404[2] = params[1] | g_ptr_dat_08006404[2] & 0xfffffffc;\n      result2 = FUN_08005a84();\n      temp2 = result2 + 5000;\n      if (params[1] == 1) {\n        while ((g_ptr_dat_08006404[2] & 0xc) != 4) {\n          temp1 = FUN_08005a84();\n          if (temp2 <= temp1) {\n            return 3;\n          }\n        }\n      }\n      else if (params[1] == 2) {\n        while ((g_ptr_dat_08006404[2] & 0xc) != 8) {\n          temp1 = FUN_08005a84();\n          if (temp2 <= temp1) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((g_ptr_dat_08006404[2] & 0xc) != 0) {\n          temp1 = FUN_08005a84();\n          if (temp2 <= temp1) {\n            return 3;\n          }\n        }\n      }\n    }\n    *(char *)g_ptr_dat_08006400 = (char)num_params;\n    if (num_params != (*g_ptr_dat_08006400 & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*params & 2) != 0) {\n    g_ptr_dat_08006404[2] = params[2] | g_ptr_dat_08006404[2] & 0xffffff0f;\n  }\n  if ((*params & 4) != 0) {\n    g_ptr_dat_08006404[2] = params[3] | g_ptr_dat_08006404[2] & 0xffffe3ff;\n  }\n  if ((*params & 8) != 0) {\n    g_ptr_dat_08006404[2] = params[4] << 3 | g_ptr_dat_08006404[2] & 0xffff1fff;\n  }\n  temp3 = FUN_08006628();\n  result1 = (unsigned long long)g_ptr_dat_08006408 * (temp3 & 0xffffffff);\n  FUN_08005c30((uint)((unsigned long long)result1 >> 0x26),(int)(temp3 >> 0x20),(int)result1);\n  return 0;\n}",
            "called": [
                "FUN_08005c30",
                "FUN_08006628",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "validate_and_update_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_bits_from_uint_08006998",
                "uint": "unsigned int",
                "DAT_080069b0": "PTR_data",
                "data": "data",
                "shifted_data": "shifted_data",
                "bits": "bits"
            },
            "code": "uint get_bits_from_uint_08006998(void)\n{\n    uint data = *(uint *)(DAT_080069b0 + 0xc);\n    uint shifted_data = data >> 8;\n    uint bits = shifted_data & 7;\n    return bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": false,
            "current_name": "get_bits_from_uint_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "process_data_080004ac",
                "PTR_DAT_080004f0": "PTR_DATA",
                "PTR_DAT_080004f4": "PTR_DATA_2",
                "PTR_DAT_080004f8": "PTR_DATA_3",
                "initialize_data": "initialize_data",
                "perform_operations": "perform_operations",
                "check_data": "check_data",
                "handle_error": "handle_error"
            },
            "code": "void process_data_080004ac(void)\n{\n  int result;\n  initialize_data(PTR_DAT_080004f0, 0, 0x38);\n  *(unsigned int *)(PTR_DAT_080004f0 + 8) = *(unsigned int *)(PTR_DAT_080004f4 + 0x10);\n  perform_operations(0,1,2);\n  PTR_DAT_080004f0[4] = 1;\n  result = check_data(PTR_DAT_080004f0[0x1c],PTR_DAT_080004f8);\n  if (result == 0) {\n    handle_error(10);\n  }\n  return;\n}",
            "called": [
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_data_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "calculate_sum_of_four_values_080078f4",
                "local_10": "iterator",
                "local_c": "sum"
            },
            "code": "uint calculate_sum_of_four_values_080078f4(void)\n{\n  int iterator;\n  uint sum = 0;\n  for (iterator = 0; iterator < 4; iterator++) {\n    sum = *(uint *)(PTR_DAT_0800792c + iterator * 4) | sum;\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08001994",
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_sum_of_four_values_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "message_type",
                "PTR_DAT_0800420c": "header",
                "PTR_s_Reset_to_continue_08004210": "reset_message",
                "PTR_s___H____X__to_unlock_08004214": "unlock_message",
                "PTR_s_Caution__Unlocked_08004218": "caution_message",
                "PTR_s_Enabled_0800421c": "enabled_message",
                "PTR_s_Disabled_08004220": "disabled_message",
                "PTR_DAT_08004224": "footer"
            },
            "code": "void display_message_080041a0(int message_type)\n{\n    display_PTR_DAT_0800420c();\n    switch(message_type) {\n        case 1:\n            display_string(\"Reset to continue\");\n            break;\n        case 2:\n            display_string(\"Press 'H' 'X' to unlock\");\n            break;\n        case 3:\n            display_string(\"Caution: Unlocked\");\n            break;\n        case 4:\n            display_string(\"Enabled\");\n            break;\n        case 5:\n            display_string(\"Disabled\");\n    }\n    display_PTR_DAT_08004224();\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_message_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "value",
                "param_2": "shift_amount",
                "iVar1": "shifted_value",
                "uVar2": "shifted_amount"
            },
            "code": "uint calculate_shifted_value_08008bf0(uint value, uint shift_amount)\n{\n  int shifted_value;\n  uint shifted_amount;\n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shifted_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shifted_amount) {\n      return (shift_amount << 0xb | 0x80000000 | value >> 0x15) >> (shifted_amount & 0xff);\n    }\n  }\n  else if ((value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "set_flags_08003a18",
                "param_1": "flags"
            },
            "code": "void set_flags_08003a18(uint8_t flags)\n{\n    if (!(flags & 0x80)) {\n        if (!(flags & 0x40)) {\n            if (flags & 0x20) {\n                PTR_DAT_08003a70[2] |= 2;\n            }\n        }\n        else {\n            PTR_DAT_08003a70[2] |= 8;\n        }\n    }\n    else {\n        FUN_080025e8();\n    }\n    return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_flags_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "do_nothing_and_check_condition_08005790",
                "PTR_DAT_080057d4": "condition_check_array",
                "PTR_DAT_080057dc": "condition_data_array",
                "PTR_DAT_080057d8": "condition_data_array_2",
                "FUN_08007c40": "execute_function_1",
                "FUN_08007c5e": "execute_function_2",
                "FUN_08007b70": "execute_function_3"
            },
            "code": "void do_nothing_and_check_condition_08005790(void)\n{\n  do_nothing();\n  if (PTR_DAT_080057d4[1] == '\\x03') {\n    *(undefined2 *)PTR_DAT_080057dc = *(undefined2 *)(PTR_DAT_080057d4 + 0x18);\n    *(undefined2 *)(PTR_DAT_080057dc + 2) = *(undefined2 *)(PTR_DAT_080057d4 + 0x1a);\n    execute_function_1(0x69);\n    execute_function_2(((byte)PTR_DAT_080057d4[0xd] + 5) * 0x15);\n    execute_function_3();\n  }\n  return;\n}",
            "called": [
                "FUN_08007b70",
                "FUN_08007c5e",
                "FUN_08005318",
                "FUN_08007c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_08001d4c",
                "FUN_0800583c",
                "FUN_0800585c"
            ],
            "imported": false,
            "current_name": "do_nothing_and_check_condition_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  FUN_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = reverse_and_improve(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = reverse_and_improve(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = reverse_and_improve(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = FUN_0800854c(local_40);\n  uVar4 = FUN_0800854c(local_11);\n  uVar4 = FUN_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = reverse_and_improve(uVar1);\n  uVar3 = FUN_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = FUN_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = FUN_0800854c(local_11);\n  uVar3 = FUN_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = reverse_and_improve(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = reverse_and_improve(uVar1);\n  local_4c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  FUN_080018fc(local_1a);\n  FUN_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = FUN_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    FUN_080018cc(local_36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    FUN_080018cc(local_4e);\n    do_nothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008640",
                "FUN_080078f4",
                "FUN_08008bf0",
                "FUN_0800b430",
                "FUN_080018fc",
                "FUN_08008c30",
                "FUN_080018cc",
                "FUN_08002828",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_0800854c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_at_position_08007854",
                "param_1": "number",
                "PTR_": "base_",
                "DAT_": "constant_"
            },
            "code": "uint get_bit_at_position_08007854(uint number, uint position) {\n    uint PTR_address = ((int)number >> 4) * 0x400 + 0x40020010;\n    uint shifted_number = *(uint *)PTR_address >> (position & 0xf);\n    uint bit_at_position = shifted_number & 1;\n    return bit_at_position;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": false,
            "current_name": "get_bit_at_position_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "initialize_parameters_and_data_08004900",
                "param_1": "data_ptr",
                "param_2": "parameter",
                "FUN_080036c6": "initialize_data",
                "PTR_DAT_08004934": "PTR_DATA_START",
                "FUN_080037fc": "set_data",
                "PTR_DAT_08004938": "PTR_DATA_END",
                "FUN_0800369c": "set_parameter",
                "PTR_DAT_0800493c": "PTR_DATA_FINAL"
            },
            "code": "void initialize_parameters_and_data_08004900(undefined data_ptr, undefined4 parameter){\n  initialize_data(PTR_DAT_08004934);\n  set_data(data_ptr);\n  initialize_data(PTR_DAT_08004938);\n  set_parameter(parameter);\n  initialize_data(PTR_DAT_0800493c);\n  return;\n}",
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_parameters_and_data_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "print_help_message_08004228",
                "PTR_s__Grbl_0_8c______for_help__08004238": "help_message",
                "FUN_080036c6": "print_string"
            },
            "code": "void print_help_message_08004228(void)\n{\n  print_string(PTR_s__Grbl_0_8c______for_help__08004238);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": false,
            "current_name": "print_help_message_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "FUNC_08009b24"
            },
            "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = FUN_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_08008b24"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "FUNC_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "set_bit_at_index_080076c8",
                "param_1": "index",
                "*(uint *)(((int)param_1 >> 4) * 0x400 + 0x40020014)": "current_value",
                "*(uint *)(((int)param_1 >> 4) * 0x400 + 0x40020014) ^ 1 << (param_1 & 0xf)": "new_value",
                "PTR_": "data_ptr",
                "DAT_": "bit_mask"
            },
            "code": "void set_bit_at_index_080076c8(uint index)\n{\n    uint* PTR_ = (uint*)((int)index >> 4) * 0x400 + 0x40020014;\n    uint current_value = *PTR_;\n    uint DAT_ = 1 << (index & 0xf);\n    uint new_value = current_value ^ DAT_;\n    *PTR_ = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_bit_in_array_08006a8c",
                "param_1": "index",
                "DAT_08006abc": "array_ptr"
            },
            "code": "void set_bit_in_array_08006a8c(byte index) {\n    int* DAT_08006abc = (int*)(DAT_08006abc + (((uint)(int)(char)index >> 5) + 0x60) * 4);\n    int bit_mask = 1 << (index & 0x1f);\n    *DAT_08006abc = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "execute_functions_0800283a",
                "FUN_080035ec": "execute",
                "FUN_080004fc": "execute_two",
                "PTR_DAT_08002868": "PTR_FUNC_ARGS"
            },
            "code": "void execute_functions_0800283a(void)\n{\n  int arg1 = *(int *)(PTR_DAT_08002868 + 4);\n  int arg2 = *(int *)(PTR_DAT_08002868 + 8);\n  int arg3 = *(int *)(PTR_DAT_08002868 + 0xc);\n  execute(arg1, arg2, arg3);\n  execute_two(arg1, arg2, arg3);\n  return;\n}",
            "called": [
                "FUN_080004fc",
                "FUN_080035ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_080024c4",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_functions_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "extract_bits": "extract_bits",
                "param_1": "in_1",
                "param_2": "in_2",
                "param_3": "in_3",
                "param_4": "in_4",
                "uVar1": "var_4",
                "unaff_r4": "var_5",
                "uVar2": "var_1",
                "uVar3": "var_7",
                "in_r12": "var_6",
                "bVar4": "var_2",
                "FUN_0800881c": "extract_bits_0800881c"
            },
            "code": "uint32_t extract_bits_0800881c(uint32_t in_1, uint32_t in_2, uint32_t in_3, uint32_t in_4) {\n    uint32_t var_1 = in_4 >> 0x14;\n    if (in_2 != in_3 && var_1 != in_3) {\n        bool var_2 = (in_1 | in_2 << 1) == 0;\n        if (!var_2) {\n            var_2 = (in_3 | in_4 << 1) == 0;\n        }\n        if (var_2) {\n            return (uint64_t)((in_2 ^ in_4) & 0x80000000) << 0x20;\n        }\n        if (in_3 == 0) {\n            uint32_t var_3 = in_2 & 0x80000000;\n            do {\n                uint32_t var_4 = in_1 & 0x80000000;\n                in_1 = in_1 << 1;\n                in_2 = in_2 * 2 + (uint32_t)(var_4 != 0);\n            } while ((in_2 & 0x100000) == 0);\n            in_2 |= var_3;\n            if (var_1 != 0) {\n                return ((uint64_t)in_2 << 0x20) | in_1;\n            }\n        }\n        do {\n            uint32_t var_5 = in_3 & 0x80000000;\n            in_3 = in_3 << 1;\n            in_4 = in_4 * 2 + (uint32_t)(var_5 != 0);\n        } while ((in_4 & 0x100000) == 0);\n        return ((uint64_t)in_2 << 0x20) | in_1;\n    }\n    bool var_6 = (in_1 | in_2 << 1) == 0;\n    if (var_6) {\n        in_2 = in_4;\n        in_1 = in_3;\n    }\n    if (!var_6) {\n        var_6 = (in_3 | in_4 << 1) == 0;\n    }\n    uint32_t var_7 = in_2;\n    if (((!var_6) && ((in_2 != in_3 || ((in_1 | in_2 << 0xc) == 0)))) && ((var_1 != in_3 || (in_1 = in_3, var_7 = in_4, (in_3 | in_4 << 0xc) == 0)))) {\n        return ((uint64_t)((in_2 ^ in_4) & 0x80000000 | 0x7ff00000) << 0x20);\n    }\n    return ((uint64_t)var_7 << 0x20) | in_1 | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": false,
            "current_name": "extract_bits_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "convert_byte_to_ushort_08004bc0",
                "param_1": "input_byte",
                "param_2": "input_integer"
            },
            "code": "void convert_byte_to_ushort_08004bc0(byte input_byte, undefined4 input_integer) {\n    ushort converted_value = (ushort)input_byte * 0x101 + 0x300;\n    FUN_08000374(converted_value, input_integer, 0x100);\n    return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_byte_to_ushort_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "is_CY_zero_or_ZR_08008b4c",
                "in_ZR": "zero",
                "in_CY": "carry"
            },
            "code": "bool is_CY_zero_or_ZR_08008b4c(void)\n{\n  undefined zero;\n  undefined carry;\n  copy_data_to_buffer();\n  return !(bool)carry || (bool)zero;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "is_CY_zero_or_ZR_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "initialize_and_copy_data_08004c2a",
                "FUN_08000340": "initialize_data",
                "FUN_08000374": "copy_data_to_buffer",
                "PTR_DAT_08004c44": "BUFFER_PTR"
            },
            "code": "void initialize_and_copy_data_08004c2a(void)\n{\n  initialize_data(0,5);\n  copy_data_to_buffer(1, PTR_DAT_08004c44, 0x40);\n  return;\n}",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004c48",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "initialize_and_copy_data_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "initialize_application_0800826a",
                "param_1": "application_data",
                "FUN_08007e1c": "call_setup_function"
            },
            "code": "int initialize_application_0800826a(void* application_data)\n{\n  call_setup_function(application_data);\n  return 0;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "initialize_application_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "is_end_of_string_08008b60",
                "in_CY": "current_char",
                "FUN_08008af0": "call_some_function"
            },
            "code": "bool is_end_of_string_08008b60(void)\n{\n  char current_char;\n  call_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_and_call_function_08005324",
                "param_1": "input_value",
                "local_14": "adjusted_value",
                "DAT_08005358": "data_value",
                "PTR_DAT_0800535c": "pointer_data",
                "FUN_08007bf0": "call_function_with_result"
            },
            "code": "void calculate_and_call_function_08005324(uint input_value) {\n  uint adjusted_value;\n\n  if (input_value < 800) {\n    adjusted_value = 800;\n  } else {\n    adjusted_value = input_value;\n  }\n\n  uint result = DAT_08005358 / adjusted_value;\n\n  *(uint *)(PTR_DAT_0800535c + 0x14) = result;\n\n  call_function_with_result(result);\n\n  return;\n}",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_080058a0",
                "FUN_080053a0",
                "FUN_08005814"
            ],
            "imported": false,
            "current_name": "calculate_and_call_function_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_value_at_index_08000310",
                "param_1": "index",
                "PTR_DAT_08000338": "is_initialized",
                "FUN_080002f0": "initialize_data",
                "PTR_DAT_0800033c": "data_array"
            },
            "code": "int get_value_at_index_08000310(uint index) {\n  if (*PTR_DAT_08000338 == 0) {\n    initialize_data();\n  }\n  return PTR_DAT_0800033c[index & 0x3ff];\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "get_value_at_index_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "determine_local_variable_08007a70",
                "param_1": "input_value",
                "local_c": "local_variable",
                "DAT_08007ac8": "data_value_1",
                "DAT_08007acc": "data_value_2",
                "FUN_08006cf6": "invoke_function_1",
                "FUN_080079e0": "invoke_function_2"
            },
            "code": "void determine_local_variable_08007a70(int input_value, undefined4 param_2, undefined4 param_3)\n{\n  undefined local_variable;\n  if (input_value == 0x40000000) {\n    local_variable = 0x1c;\n  }\n  else if (input_value == DAT_08007ac8) {\n    local_variable = 0x1d;\n  }\n  else {\n    if (input_value != DAT_08007acc) {\n      return;\n    }\n    local_variable = 0x1e;\n  }\n  invoke_function_1(local_variable, param_2, param_3);\n  invoke_function_2(local_variable);\n  return;\n}",
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "determine_local_variable_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_080001ac",
                "FUN_0800b3e8",
                "FUN_08000188"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_hash_value_08002978",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "FUNC_08008eec": "compute_hash",
                "FUNC_08008cdc": "compute_hash",
                "FUNC_08008cd8": "combine_hashes",
                "FUN_08008590": "convert_to_64bit",
                "FUN_080098d0": "calculate_final_value",
                "uVar1": "hash1",
                "uVar2": "hash2",
                "uVar3": "final_hash",
                "hash_ptr": "hash_ptr",
                "hash_low": "hash_low",
                "hash_high": "hash_high",
                "final_value": "final_value"
            },
            "code": "int calculate_hash_value_08002978(int num1, int num2, int num3)\n{\n  int hash1 = compute_hash(num2,num2);\n  int hash2 = compute_hash(num1,num1);\n  int hash3 = compute_hash(hash2,num3);\n  int final_hash = combine_hashes(hash1,hash3);\n  unsigned long long hash_ptr = (unsigned long long)convert_to_64bit(final_hash);\n  unsigned int hash_low = (unsigned int)hash_ptr;\n  unsigned int hash_high = (unsigned int)(hash_ptr >> 0x20);\n  int final_value = calculate_final_value(hash_low, hash_high);\n  return final_value;\n}",
            "called": [
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_hash_value_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_40 = reverse_bits();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008ba0();\n    local_38 = reverse_bits();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = do_nothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = FUN_08008ba0();\n  uVar11 = reverse_bits();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800a5a0",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "print_fixed_point_08003826",
                "param_1": "value",
                "iVar1": "is_negative",
                "local_24": "absolute_value",
                "local_9": "i",
                "PTR_DAT_08003970": "ptr_data",
                "FUNC_08008eec": "multiply_by_10",
                "DAT_08003974": "multiplier_1",
                "DAT_08003978": "multiplier_2",
                "FUNC_08008cdc": "divide_by_64",
                "DAT_0800397c": "divider",
                "local_a": "buffer_index",
                "acStack_1d": "buffer",
                "decimal_part_start_index": "decimal_index",
                "local_10": "integer_part",
                "print_character": "print_character"
            },
            "code": "void print_fixed_point_08003826(uint32_t value)\n{\n  int is_negative = FUN_08009228(value,0);\n  uint32_t absolute_value = value;\n  if (is_negative != 0) {\n    print_character('-');\n    absolute_value = value ^ 0x80000000;\n  }\n  for (uint8_t i = PTR_DAT_08003970[0x3d]; i > 1; i -= 2) {\n    absolute_value = FUNC_08008eec(absolute_value,DAT_08003974);\n  }\n  if (i != 0) {\n    absolute_value = FUNC_08008eec(absolute_value,DAT_08003978);\n  }\n  uint32_t integer_part = FUNC_08008cdc(absolute_value,0x3f000000);\n  uint8_t decimal_part_start_index = (byte)PTR_DAT_08003970[0x3d] + 1;\n  char decimal_separator = '.';\n  char buffer[13];\n  uint8_t buffer_index = decimal_part_start_index;\n  while (integer_part != 0) {\n    if (buffer_index == decimal_part_start_index) {\n      buffer_index++;\n    }\n    uint32_t remainder = integer_part % DAT_0800397c;\n    integer_part /= DAT_0800397c;\n    buffer[buffer_index++] = (char)remainder + ((char)(DAT_0800397c * remainder) >> 0x23) * -10 + '0';\n  }\n  while (buffer_index < decimal_part_start_index + PTR_DAT_08003970[0x3d]) {\n    buffer[buffer_index++] = '0';\n  }\n  if (buffer_index == decimal_part_start_index + PTR_DAT_08003970[0x3d]) {\n    buffer[buffer_index++] = '0';\n  }\n  for (uint8_t i = buffer_index - 1; i > 0; i--) {\n    print_character(buffer[i]);\n  }\n}",
            "called": [
                "FUN_08008250",
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "print_fixed_point_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "is_CY_zero_or_ZR_0800923c",
                "in_ZR": "zero",
                "in_CY": "carry",
                "FUN_08009204": "call_function_08009204"
            },
            "code": "bool is_CY_zero_or_ZR_0800923c(void)\n{\n  undefined zero;\n  undefined carry;\n  \n  call_function_08009204();\n  return !(bool)carry || (bool)zero;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "is_CY_zero_or_ZR_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "update_if_not_done_08002afc",
                "param_1": "source",
                "param_2": "destination",
                "iVar1": "result",
                "uVar2": "new_source_value",
                "uVar3": "destination_value",
                "PTR_DAT_08002ba4": "pointer_data",
                "DAT_08002ba4": "data"
            },
            "code": "void update_if_not_done_08002afc(int source, int destination) {\\n  int result = 0;\\n  bool is_done = (*(char *)(source + 0x25) == \"\\0\");\\n  if (source != 0 && is_done) {\\n    int source_value = *(int *)(source + 0x18);\\n    int destination_value = *(int *)(destination + 0x18);\\n    result = FUN_08009228(source_value, destination_value);\\n    if (result != 0) {\\n      int xor_value = *(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000;\\n      int param_1_value = *(int *)(source + 0x18);\\n      int param_2_value = *(int *)(source + 0x20);\\n      int new_source_value = FUN_08002978(xor_value, param_1_value, param_2_value);\\n      result = FUN_08009228(destination_value, new_source_value);\\n      if (result == 0) {\\n        *(int *)(destination + 0x18) = new_source_value;\\n        *(bool *)(destination + 0x24) = true;\\n      }\\n    }\\n    else {\\n      *(int *)(destination + 0x18) = source_value;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": false,
            "current_name": "update_if_not_done_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "initialize_08004c48",
                "param_1": "input_char",
                "PTR_DAT_08004d0c": "array_ptr",
                "DAT_08004d10": "array_data_1",
                "DAT_08004d14": "array_data_2",
                "DAT_08004d18": "array_data_3",
                "DAT_08004d1c": "array_data_4",
                "DAT_08004d20": "array_data_5",
                "DAT_08004d24": "array_data_6",
                "DAT_08004d28": "array_data_7"
            },
            "code": "void initialize_08004c48(char input_char)\n{\n    if (input_char != '\\0') {\n        // set initial values for array\n        *(undefined4 *)PTR_DAT_08004d0c = DAT_08004d10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 4) = DAT_08004d10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 8) = DAT_08004d10;\n        PTR_DAT_08004d0c[13] = 10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 16) = DAT_08004d14;\n        *(undefined4 *)(PTR_DAT_08004d0c + 20) = DAT_08004d18;\n        *(undefined4 *)(PTR_DAT_08004d0c + 32) = DAT_08004d1c;\n        *(undefined4 *)(PTR_DAT_08004d0c + 28) = DAT_08004d20;\n        *(undefined2 *)(PTR_DAT_08004d0c + 24) = 0;\n        *(undefined2 *)(PTR_DAT_08004d0c + 26) = 0xa80;\n        *(undefined4 *)(PTR_DAT_08004d0c + 36) = DAT_08004d24;\n    }\n    // set remaining values for array\n    PTR_DAT_08004d0c[40] = 0;\n    PTR_DAT_08004d0c[40] |= 2;\n    PTR_DAT_08004d0c[40] |= 0x10;\n    *(undefined2 *)(PTR_DAT_08004d0c + 42) = 0;\n    *(undefined4 *)(PTR_DAT_08004d0c + 44) = DAT_08004d28;\n    *(undefined4 *)(PTR_DAT_08004d0c + 48) = DAT_08004d14;\n    *(undefined2 *)(PTR_DAT_08004d0c + 52) = 100;\n    *(undefined4 *)(PTR_DAT_08004d0c + 56) = 0x3f800000;\n    PTR_DAT_08004d0c[60] = 0x19;\n    PTR_DAT_08004d0c[61] = 3;\n    PTR_DAT_08004d0c[62] = 0x19;\n    // call function\n    call_function();\n    return;\n}",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "initialize_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "print_param_080002a0",
                "param_1": "param",
                "FUN_08005a98": "call_print_function"
            },
            "code": "void print_param_080002a0(void* param) {\n  call_print_function(param);\n  return;\n}",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "print_param_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "should_execute_08009250",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag",
                "FUN_080091fc": "execute_preconditions"
            },
            "code": "bool should_execute_08009250(void)\n{\n    undefined zero_flag;\n    undefined carry_flag;\n    \n    execute_preconditions();\n    return !(bool)carry_flag || (bool)zero_flag;\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "should_execute_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "process_data_0800640c",
                "param_1": "data_type",
                "param_2": "data1",
                "param_3": "data2",
                "local_1c": "local_var1",
                "local_18": "local_var2",
                "local_14": "local_var3",
                "local_10": "local_var4",
                "local_c": "local_var5",
                "DAT_080064b0": "data_ptr",
                "DAT_080064b4": "calculate_data"
            },
            "code": "void process_data_0800640c(int data_type, uint32_t data1, uint32_t data2)\n{\n  uint32_t* DAT_080064b0 = (data_type == 0) ? (uint32_t*)(DAT_080064b0 + 0x30) : (uint32_t*)(DAT_080064b0 + 0x30);\n  uint32_t local_var1 = (data_type == 0) ? 0x100 : 0x200;\n  uint32_t local_var2 = 2;\n  uint32_t local_var3 = 3;\n  uint32_t local_var4 = 0;\n  uint32_t local_var5 = 0;\n  DAT_080064b4(DAT_080064b4, &local_var1);\n  if (data_type == 0)\n  {\n    *(DAT_080064b0 + 2) = data2 | data1 | (*(DAT_080064b0 + 2) & 0xf89fffff);\n  }\n  else\n  {\n    *(DAT_080064b0 + 2) = (data1 | (data2 << 3)) | (*(DAT_080064b0 + 2) & 0x7ffffff);\n  }\n}",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "process_data_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "copy_data_to_buffer": "copy_data_to_buffer",
                "param_1": "source_data",
                "param_2": "source_size",
                "param_3": "dest_buffer",
                "param_4": "dest_size",
                "FUN_08008b00": "memcpy",
                "FUN_08008af0": "copy_data_to_buffer_08008af0"
            },
            "code": "void copy_data_to_buffer_08008af0(void *source_data, size_t source_size, void *dest_buffer, size_t dest_size)\n{\n  memcpy(dest_buffer, source_data, source_size);\n  return;\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b60",
                "FUN_08008b4c"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "convert_char_to_int_08006e1a",
                "param_1": "input_char",
                "uVar1": "converted_int"
            },
            "code": "int convert_char_to_int_08006e1a(char input_char){\n  int converted_int = (int)input_char;\n  return converted_int;\n}",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "set_param_080052ac",
                "param_1": "new_param",
                "*(uint *)(DAT_080052d8 + 0x14)": "ptr",
                "0xfffffaaf": "mask"
            },
            "code": "void set_param_080052ac(uint new_param) {\n    uint* *(uint *)(DAT_080052d8 + 0x14) = (uint*)(DAT_080052d8 + 0x14);\n    uint mask = 0xfffffaaf;\n    **(uint *)(DAT_080052d8 + 0x14) = new_param | (**(uint *)(DAT_080052d8 + 0x14) & mask);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "imported": false,
            "current_name": "set_param_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "check_status_08008286",
                "uVar1": "result",
                "iVar2": "status",
                "FUN_08007e58": "get_status",
                "FUN_08007e84": "get_data",
                "FUN_08005900": "validate_data"
            },
            "code": "uint8_t check_status_08008286()\n{\n  uint8_t result = 0xff;\n  int status = get_status();\n  if (status != 0) {\n    uint8_t data = get_data();\n    int check = validate_data(data);\n    if (check == 0) {\n      result = data;\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08005900",
                "FUN_08007e58",
                "FUN_08007e84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "check_status_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "code": "int is_valid_input_08008b74(uint32_t input_1, int input_2, uint32_t input_3, int input_4) {\n    int is_input_2_valid = ((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0);\n    int is_input_4_valid = ((input_4 << 1) >> 0x15 != -1) || ((input_3 | input_4 << 0xc) == 0);\n    if (is_input_2_valid && is_input_4_valid) {\n        return 1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "add_to_list_0800b524",
                "param_1": "type",
                "param_2": "value",
                "param_3": "length",
                "param_4": "flag",
                "puVar1": "ptr",
                "uVar2": "return_value",
                "uVar3": "index",
                "iVar4": "list_start",
                "iVar5": "list_end",
                "uVar6": "list_size",
                "flag_mask": "flag_mask"
            },
            "code": "int add_to_list_0800b524(int type, int value, int length, int flag)\n{\n  undefined *ptr;\n  int return_value;\n  uint index;\n  int list_start;\n  int list_end;\n  uint list_size;\n  \n  ptr = PTR_PTR_DAT_0800b5ac;\n  do_nothing_0800b51c(*(int *)PTR_PTR_DAT_0800b5ac);\n  list_start = *(int *)PTR_PTR_DAT_0800b5a8;\n  list_end = *(int *)(list_start + 0x148);\n  if (list_end == 0) {\n    list_end = list_start + 0x14c;\n    *(int *)(list_start + 0x148) = list_end;\n  }\n  list_size = *(uint *)(list_end + 4);\n  if ((int)list_size < 0x20) {\n    if (type != 0) {\n      index = list_size * 4 + list_end;\n      *(int *)(index + 0x88) = length;\n      uint flag_mask = 1 << (list_size & 0xff);\n      *(uint *)(list_end + 0x188) = *(uint *)(list_end + 0x188) | flag_mask;\n      *(int *)(index + 0x108) = flag;\n      if (type == 2) {\n        *(uint *)(list_end + 0x18c) = flag_mask | *(uint *)(list_end + 0x18c);\n      }\n    }\n    return_value = *(int *)ptr;\n    *(uint *)(list_end + 4) = list_size + 1;\n    *(int *)(list_end + (list_size + 2) * 4) = value;\n    do_nothing_0800b520(return_value);\n    return_value = 0;\n  }\n  else {\n    do_nothing_0800b520(*(int *)ptr);\n    return_value = -1;\n  }\n  return return_value;\n}",
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": false,
            "current_name": "add_to_list_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "set_flags_08007ea4",
                "param_1": "flag_value",
                "DAT_08007f38": "FLAG_A",
                "DAT_08007f40": "FLAG_B",
                "DAT_08007f44": "FLAG_C",
                "DAT_08007f48": "FLAG_D",
                "DAT_08007f4c": "FLAG_E",
                "DAT_08007f50": "FLAG_F",
                "*(uint *)(DAT_08007f3c + 0x44)": "*other_flags_ptr",
                "*(uint *)(DAT_08007f3c + 0x40)": "*flags_ptr"
            },
            "code": "void set_flags_08007ea4(int flag_value) {\n  uint *(uint *)(DAT_08007f3c + 0x40) = (uint *)(DAT_08007f3c + 0x40);\n  uint *(uint *)(DAT_08007f3c + 0x44) = (uint *)(DAT_08007f3c + 0x44);\n  if (flag_value == DAT_08007f38) {\n    *(uint *)(DAT_08007f3c + 0x44) |= 0x10;\n  }\n  else if (flag_value == DAT_08007f40) {\n    *(uint *)(DAT_08007f3c + 0x40) |= 0x20000;\n  }\n  else if (flag_value == DAT_08007f44) {\n    *(uint *)(DAT_08007f3c + 0x40) |= 0x40000;\n  }\n  else if (flag_value == DAT_08007f48) {\n    *(uint *)(DAT_08007f3c + 0x40) |= 0x80000;\n  }\n  else if (flag_value == DAT_08007f4c) {\n    *(uint *)(DAT_08007f3c + 0x40) |= 0x100000;\n  }\n  else if (flag_value == DAT_08007f50) {\n    *(uint *)(DAT_08007f3c + 0x44) |= 0x20;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "set_flags_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "check_and_execute_actions_08007756",
                "uVar1": "status",
                "FUN_08005a84": "get_status",
                "FUN_080076c8": "execute_action_1",
                "FUN_08007930": "execute_action_2",
                "FUN_08005a68": "execute_action_3"
            },
            "code": "void check_and_execute_actions_08007756(void)\n{\n  uint32_t status = get_status();\n\n  if ((status & 0x1ff) == 0) {\n    execute_action_1(0x3c);\n  }\n  if ((status & 0xf) == 0) {\n    execute_action_2();\n  }\n  execute_action_3();\n  return;\n}",
            "called": [
                "FUN_08007930",
                "FUN_08005a68",
                "FUN_080076c8",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "check_and_execute_actions_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "print_grbl_settings_0800423c",
                "FUN_080036c6": "print_settings"
            },
            "code": "void print_grbl_settings_0800423c(void)\n{\n  print_settings(PTR_s_____view_Grbl_settings______view_0800424c);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_grbl_settings_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "is_end_of_string_08009264",
                "in_CY": "current_char",
                "FUN_080091fc": "execute_some_function"
            },
            "code": "bool is_end_of_string_08009264(void)\\n{\\n  char current_char;\\n  execute_some_function();\\n  return current_char == \"\\0\";\\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "execute_three_functions_08007e08",
                "FUN_08007ad0": "call_first_function",
                "FUN_08007d08": "call_second_function",
                "FUN_08007da8": "call_third_function"
            },
            "code": "void execute_three_functions_08007e08(void)\n{\n  call_first_function();\n  call_second_function();\n  call_third_function();\n  return;\n}",
            "called": [
                "FUN_08007d08",
                "FUN_08007ad0",
                "FUN_08007da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "execute_three_functions_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "are_ptrs_equal_08002fac",
                "PTR_DAT_08002fcc": "ptr_data1",
                "PTR_DAT_08002fd0": "ptr_data2"
            },
            "code": "bool are_ptrs_equal_08002fac(void)\n{\n  bool is_equal = (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\n  return is_equal;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "are_ptrs_equal_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "check_if_sum_greater_than_param_080002b6",
                "param_1": "param",
                "uVar1": "rand_num_high",
                "uVar2": "sum_high",
                "bVar3": "is_sum_greater",
                "lVar4": "sum",
                "uVar5": "rand_num"
            },
            "code": "void check_if_sum_greater_than_param_080002b6(uint64_t param)\n{\n  uint32_t sum_high = (uint32_t)(get_sum() + (uint64_t)param >> 0x20);\n  do {\n    uint64_t rand_num = get_sum();\n    uint32_t rand_num_high = (uint32_t)(rand_num >> 0x20);\n    bool is_sum_greater = sum_high <= rand_num_high;\n    if (rand_num_high == sum_high) {\n      is_sum_greater = (uint32_t)(get_sum() + (uint64_t)param) <= (uint32_t)rand_num;\n    }\n  } while (!is_sum_greater);\n  return;\n}",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "check_if_sum_greater_than_param_080002b6"
        }
    },
    "used_tokens": 200296,
    "layers": [
        [
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_0800adf0",
            "FUN_0800881c",
            "FUN_0800640c",
            "FUN_0800b524",
            "FUN_08007ea4",
            "FUN_08007756",
            "FUN_0800423c",
            "FUN_08009264",
            "FUN_08007e08",
            "FUN_08002fac",
            "FUN_080002b6"
        ]
    ],
    "locked_functions": []
}