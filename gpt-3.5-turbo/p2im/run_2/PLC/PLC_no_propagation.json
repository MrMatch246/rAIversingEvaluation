{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "initialize_data_flag_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initializeDataFlag_080001ac(undefined4 inputValue)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "initialize_data_flag_080001ac",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_sequence_08000230",
            "code": "\nbyte * find_byte_sequence_08000230(uint *data,uint byte_to_find,uint length)\n\n{\n  byte current_byte;\n  char zero_flag_1;\n  char zero_flag_2;\n  char zero_flag_3;\n  char zero_flag_4;\n  byte *next_byte_ptr;\n  uint *current_ptr;\n  byte *result_ptr;\n  uint ptr_alignment;\n  uint aligned_length;\n  uint xor_result1;\n  uint xor_result2;\n  bool xor_zero_flag_1;\n  bool xor_zero_flag_2;\n  bool xor_zero_flag_3;\n  bool xor_zero_flag_4;\n  \n  byte_to_find = byte_to_find & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = current_ptr;\n    } while (current_byte != byte_to_find);\n  }\n  else {\n    ptr_alignment = (uint)data & 7;\n    while( true ) {\n      if (ptr_alignment == 0) {\n        ptr_alignment = byte_to_find | byte_to_find << 8;\n        ptr_alignment = ptr_alignment | ptr_alignment << 0x10;\n        aligned_length = length & 0xfffffff8;\n        do {\n          current_ptr = data + 2;\n          aligned_length = aligned_length - 8;\n          xor_result1 = *data ^ ptr_alignment;\n          xor_result2 = data[1] ^ ptr_alignment;\n          zero_flag_1 = -((char)xor_result1 == '\\0');\n          zero_flag_2 = -((char)(xor_result1 >> 8) == '\\0');\n          zero_flag_3 = -((char)(xor_result1 >> 0x10) == '\\0');\n          zero_flag_4 = -((char)(xor_result1 >> 0x18) == '\\0');\n          xor_result1 = CONCAT13(zero_flag_4,CONCAT12(zero_flag_3,CONCAT11(zero_flag_2,zero_flag_1)));\n          xor_zero_flag_1 = (char)xor_result2 != '\\0';\n          xor_zero_flag_2 = (char)(xor_result2 >> 8) != '\\0';\n          xor_zero_flag_3 = (char)(xor_result2 >> 0x10) != '\\0';\n          xor_zero_flag_4 = (char)(xor_result2 >> 0x18) != '\\0';\n          xor_result2 = CONCAT13(xor_zero_flag_4 * zero_flag_4 - !xor_zero_flag_4,\n                            CONCAT12(xor_zero_flag_3 * zero_flag_3 - !xor_zero_flag_3,\n                                     CONCAT11(xor_zero_flag_2 * zero_flag_2 - !xor_zero_flag_2,xor_zero_flag_1 * zero_flag_1 - !xor_zero_flag_1)));\n          if (xor_result2 != 0) {\n            if (xor_result1 == 0) {\n              result_ptr = (byte *)((int)data + 5);\n              xor_result1 = xor_result2;\n            }\n            else {\n              result_ptr = (byte *)((int)data + 1);\n            }\n            if ((xor_result1 & 1) == 0) {\n              xor_zero_flag_1 = (xor_result1 & 0x100) == 0;\n              next_byte_ptr = result_ptr + 1;\n              if (xor_zero_flag_1) {\n                xor_zero_flag_1 = (xor_result1 & 0x18000) == 0;\n                next_byte_ptr = result_ptr + 2;\n              }\n              result_ptr = next_byte_ptr;\n              if (xor_zero_flag_1) {\n                result_ptr = result_ptr + 1;\n              }\n            }\n            return result_ptr + -1;\n          }\n          data = current_ptr;\n        } while (aligned_length != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == byte_to_find) break;\n      ptr_alignment = (uint)current_ptr & 7;\n      data = current_ptr;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_ptr + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_sequence_08000230",
                "param_1": "data",
                "param_2": "byte_to_find",
                "param_3": "length",
                "bVar1": "current_byte",
                "cVar2": "zero_flag_1",
                "cVar3": "zero_flag_2",
                "cVar4": "zero_flag_3",
                "cVar5": "zero_flag_4",
                "pbVar6": "next_byte_ptr",
                "puVar7": "current_ptr",
                "pbVar8": "result_ptr",
                "uVar9": "ptr_alignment",
                "uVar10": "aligned_length",
                "uVar11": "xor_result1",
                "uVar12": "xor_result2",
                "bVar13": "xor_zero_flag_1",
                "bVar14": "xor_zero_flag_2",
                "bVar15": "xor_zero_flag_3",
                "bVar16": "xor_zero_flag_4"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "check_params_and_return_value_080002d0",
            "code": "\nundefined8 checkParamsAndReturnValue_080002d0(int input1,int input2,int input3,int input4)\n\n{\n  undefined8 result;\n  \n  if ((input4 == 0) && (input3 == 0)) {\n    if (input2 != 0 || input1 != 0) {\n      input2 = -1;\n      input1 = -1;\n    }\n    return CONCAT44(input2,input1);\n  }\n  result = FUN_08000300();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "check_params_and_return_value_080002d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "divide_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divide_08000300(uint divide_08000300nd,uint divide_08000300nd_lower,uint divisor,uint divisor_lower,uint *remainder)\n\n{\n  ulonglong quotient_upper;\n  uint quotient_lower;\n  uint temp_quotient1;\n  uint temp_quotient2;\n  uint temp_remainder1;\n  uint temp_remainder2;\n  uint temp_remainder3;\n  uint temp_divisor1;\n  uint temp_divisor2;\n  int shift_count;\n  bool carry_flag;\n  \n  if (divisor_lower == 0) {\n    if (divide_08000300nd_lower < divisor) {\n      shift_count = LZCOUNT(divisor);\n      if (shift_count != 0) {\n        divisor = divisor << shift_count;\n        divide_08000300nd_lower = divide_08000300nd >> (0x20U - shift_count & 0xff) | divide_08000300nd_lower << shift_count;\n        divide_08000300nd = divide_08000300nd << shift_count;\n      }\n      temp_divisor1 = divisor >> 0x10;\n      temp_remainder2 = divide_08000300nd_lower / temp_divisor1;\n      temp_remainder1 = divide_08000300nd >> 0x10 | (divide_08000300nd_lower - temp_divisor1 * temp_remainder2) * 0x10000;\n      temp_quotient2 = temp_remainder2 * (divisor & 0xffff);\n      temp_quotient1 = temp_remainder2;\n      if (temp_remainder1 <= temp_quotient2 && temp_quotient2 - temp_remainder1 != 0) {\n        carry_flag = CARRY4(temp_remainder1,divisor);\n        temp_remainder1 = temp_remainder1 + divisor;\n        temp_quotient1 = temp_remainder2 - 1;\n        if ((carry_flag == false) && (temp_remainder1 <= temp_quotient2 && temp_quotient2 - temp_remainder1 != 0)) {\n          temp_quotient1 = temp_remainder2 - 2;\n          temp_remainder1 = temp_remainder1 + divisor;\n        }\n      }\n      temp_remainder2 = (temp_remainder1 - temp_quotient2) / temp_divisor1;\n      temp_remainder1 = divide_08000300nd & 0xffff | ((temp_remainder1 - temp_quotient2) - temp_divisor1 * temp_remainder2) * 0x10000;\n      temp_divisor1 = temp_remainder2 * (divisor & 0xffff);\n      temp_quotient2 = temp_remainder2;\n      if (temp_remainder1 <= temp_divisor1 && temp_divisor1 - temp_remainder1 != 0) {\n        carry_flag = CARRY4(temp_remainder1,divisor);\n        temp_remainder1 = temp_remainder1 + divisor;\n        temp_quotient2 = temp_remainder2 - 1;\n        if ((carry_flag == false) && (temp_remainder1 <= temp_divisor1 && temp_divisor1 - temp_remainder1 != 0)) {\n          temp_quotient2 = temp_remainder2 - 2;\n          temp_remainder1 = temp_remainder1 + divisor;\n        }\n      }\n      temp_remainder1 = temp_remainder1 - temp_divisor1;\n      temp_quotient2 = temp_quotient2 | temp_quotient1 << 0x10;\n      temp_quotient1 = 0;\n    }\n    else {\n      if (divisor == 0) {\n        divisor = 1 / 0;\n      }\n      shift_count = LZCOUNT(divisor);\n      if (shift_count == 0) {\n        divide_08000300nd_lower = divide_08000300nd_lower - divisor;\n        temp_remainder1 = divisor >> 0x10;\n        temp_divisor2 = divisor & 0xffff;\n        temp_quotient1 = 1;\n      }\n      else {\n        divisor = divisor << shift_count;\n        temp_remainder1 = divisor >> 0x10;\n        temp_quotient2 = divide_08000300nd_lower >> (0x20U - shift_count & 0xff);\n        temp_remainder3 = divide_08000300nd >> (0x20U - shift_count & 0xff) | divide_08000300nd_lower << shift_count;\n        temp_quotient1 = temp_quotient2 / temp_remainder1;\n        temp_divisor2 = divisor & 0xffff;\n        temp_divisor1 = temp_remainder3 >> 0x10 | (temp_quotient2 - temp_remainder1 * temp_quotient1) * 0x10000;\n        temp_remainder2 = temp_quotient1 * temp_divisor2;\n        divide_08000300nd = divide_08000300nd << shift_count;\n        temp_quotient2 = temp_quotient1;\n        if (temp_divisor1 <= temp_remainder2 && temp_remainder2 - temp_divisor1 != 0) {\n          carry_flag = CARRY4(temp_divisor1,divisor);\n          temp_divisor1 = temp_divisor1 + divisor;\n          temp_quotient2 = temp_quotient1 - 1;\n          if ((carry_flag == false) && (temp_divisor1 <= temp_remainder2 && temp_remainder2 - temp_divisor1 != 0)) {\n            temp_quotient2 = temp_quotient1 - 2;\n            temp_divisor1 = temp_divisor1 + divisor;\n          }\n        }\n        quotient_lower = (temp_divisor1 - temp_remainder2) / temp_remainder1;\n        divide_08000300nd_lower = temp_remainder3 & 0xffff | ((temp_divisor1 - temp_remainder2) - temp_remainder1 * quotient_lower) * 0x10000;\n        temp_remainder2 = quotient_lower * temp_divisor2;\n        temp_quotient1 = quotient_lower;\n        if (divide_08000300nd_lower <= temp_remainder2 && temp_remainder2 - divide_08000300nd_lower != 0) {\n          carry_flag = CARRY4(divide_08000300nd_lower,divisor);\n          divide_08000300nd_lower = divide_08000300nd_lower + divisor;\n          temp_quotient1 = quotient_lower - 1;\n          if ((carry_flag == false) && (divide_08000300nd_lower <= temp_remainder2 && temp_remainder2 - divide_08000300nd_lower != 0)) {\n            temp_quotient1 = quotient_lower - 2;\n            divide_08000300nd_lower = divide_08000300nd_lower + divisor;\n          }\n        }\n        divide_08000300nd_lower = divide_08000300nd_lower - temp_remainder2;\n        temp_quotient1 = temp_quotient1 | temp_quotient2 << 0x10;\n      }\n      temp_remainder3 = divide_08000300nd_lower / temp_remainder1;\n      temp_divisor1 = divide_08000300nd >> 0x10 | (divide_08000300nd_lower - temp_remainder1 * temp_remainder3) * 0x10000;\n      temp_quotient2 = temp_divisor2 * temp_remainder3;\n      temp_remainder2 = temp_remainder3;\n      if (temp_divisor1 <= temp_quotient2 && temp_quotient2 - temp_divisor1 != 0) {\n        carry_flag = CARRY4(temp_divisor1,divisor);\n        temp_divisor1 = temp_divisor1 + divisor;\n        temp_remainder2 = temp_remainder3 - 1;\n        if ((carry_flag == false) && (temp_divisor1 <= temp_quotient2 && temp_quotient2 - temp_divisor1 != 0)) {\n          temp_remainder2 = temp_remainder3 - 2;\n          temp_divisor1 = temp_divisor1 + divisor;\n        }\n      }\n      temp_remainder3 = (temp_divisor1 - temp_quotient2) / temp_remainder1;\n      temp_remainder1 = divide_08000300nd & 0xffff | ((temp_divisor1 - temp_quotient2) - temp_remainder1 * temp_remainder3) * 0x10000;\n      temp_divisor2 = temp_divisor2 * temp_remainder3;\n      temp_quotient2 = temp_remainder3;\n      if (temp_remainder1 <= temp_divisor2 && temp_divisor2 - temp_remainder1 != 0) {\n        carry_flag = CARRY4(temp_remainder1,divisor);\n        temp_remainder1 = temp_remainder1 + divisor;\n        temp_quotient2 = temp_remainder3 - 1;\n        if ((carry_flag == false) && (temp_remainder1 <= temp_divisor2 && temp_divisor2 - temp_remainder1 != 0)) {\n          temp_quotient2 = temp_remainder3 - 2;\n          temp_remainder1 = temp_remainder1 + divisor;\n        }\n      }\n      temp_remainder1 = temp_remainder1 - temp_divisor2;\n      temp_quotient2 = temp_quotient2 | temp_remainder2 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = temp_remainder1 >> shift_count;\n      remainder[1] = 0;\n      return CONCAT44(temp_quotient1,temp_quotient2);\n    }\n  }\n  else if (divide_08000300nd_lower < divisor_lower) {\n    if (remainder != (uint *)0x0) {\n      *remainder = divide_08000300nd;\n      remainder[1] = divide_08000300nd_lower;\n      return 0;\n    }\n    temp_quotient2 = 0;\n    temp_quotient1 = 0;\n  }\n  else {\n    shift_count = LZCOUNT(divisor_lower);\n    if (shift_count != 0) {\n      temp_divisor1 = 0x20 - shift_count;\n      temp_quotient1 = divisor >> (temp_divisor1 & 0xff) | divisor_lower << shift_count;\n      temp_divisor2 = temp_quotient1 >> 0x10;\n      temp_quotient2 = divide_08000300nd_lower >> (temp_divisor1 & 0xff);\n      quotient_lower = divide_08000300nd >> (temp_divisor1 & 0xff) | divide_08000300nd_lower << shift_count;\n      temp_remainder3 = temp_quotient2 / temp_divisor2;\n      temp_remainder2 = quotient_lower >> 0x10 | (temp_quotient2 - temp_divisor2 * temp_remainder3) * 0x10000;\n      temp_remainder1 = temp_remainder3 * (temp_quotient1 & 0xffff);\n      divide_08000300nd = divide_08000300nd << shift_count;\n      temp_quotient2 = temp_remainder3;\n      if (temp_remainder2 <= temp_remainder1 && temp_remainder1 - temp_remainder2 != 0) {\n        carry_flag = CARRY4(temp_remainder2,temp_quotient1);\n        temp_remainder2 = temp_remainder2 + temp_quotient1;\n        temp_quotient2 = temp_remainder3 - 1;\n        if ((carry_flag == false) && (temp_remainder2 <= temp_remainder1 && temp_remainder1 - temp_remainder2 != 0)) {\n          temp_quotient2 = temp_remainder3 - 2;\n          temp_remainder2 = temp_remainder2 + temp_quotient1;\n        }\n      }\n      temp_remainder3 = (temp_remainder2 - temp_remainder1) / temp_divisor2;\n      temp_remainder2 = quotient_lower & 0xffff | ((temp_remainder2 - temp_remainder1) - temp_divisor2 * temp_remainder3) * 0x10000;\n      temp_divisor2 = temp_remainder3 * (temp_quotient1 & 0xffff);\n      temp_remainder1 = temp_remainder3;\n      if (temp_remainder2 <= temp_divisor2 && temp_divisor2 - temp_remainder2 != 0) {\n        carry_flag = CARRY4(temp_remainder2,temp_quotient1);\n        temp_remainder2 = temp_remainder2 + temp_quotient1;\n        temp_remainder1 = temp_remainder3 - 1;\n        if ((carry_flag == false) && (temp_remainder2 <= temp_divisor2 && temp_divisor2 - temp_remainder2 != 0)) {\n          temp_remainder1 = temp_remainder3 - 2;\n          temp_remainder2 = temp_remainder2 + temp_quotient1;\n        }\n      }\n      temp_remainder1 = temp_remainder1 | temp_quotient2 << 0x10;\n      quotient_upper = (ulonglong)temp_remainder1 * (ulonglong)(divisor << shift_count);\n      if (CONCAT44(temp_remainder2 - temp_divisor2,divide_08000300nd) < quotient_upper) {\n        quotient_upper = quotient_upper - CONCAT44(temp_quotient1,divisor << shift_count);\n        temp_remainder1 = temp_remainder1 - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        temp_quotient2 = ((temp_remainder2 - temp_divisor2) - (int)(quotient_upper >> 0x20)) - (uint)(divide_08000300nd < (uint)quotient_upper);\n        *remainder = temp_quotient2 << (temp_divisor1 & 0xff) | divide_08000300nd - (uint)quotient_upper >> shift_count;\n        remainder[1] = temp_quotient2 >> shift_count;\n      }\n      return (ulonglong)temp_remainder1;\n    }\n    if ((divisor_lower < divide_08000300nd_lower) || (divisor <= divide_08000300nd)) {\n      carry_flag = divide_08000300nd < divisor;\n      divide_08000300nd = divide_08000300nd - divisor;\n      divide_08000300nd_lower = (divide_08000300nd_lower - divisor_lower) - (uint)carry_flag;\n      temp_quotient2 = 1;\n    }\n    else {\n      temp_quotient2 = 0;\n    }\n    temp_quotient1 = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = divide_08000300nd;\n      remainder[1] = divide_08000300nd_lower;\n      return (ulonglong)temp_quotient2;\n    }\n  }\n  return CONCAT44(temp_quotient1,temp_quotient2);\n}\n\n",
            "renaming": {
                "FUN_08000300": "divide_08000300",
                "param_1": "dividend",
                "param_2": "dividend_lower",
                "param_3": "divisor",
                "param_4": "divisor_lower",
                "param_5": "remainder",
                "uVar1": "quotient_upper",
                "uVar2": "quotient_lower",
                "uVar3": "temp_quotient1",
                "uVar4": "temp_quotient2",
                "uVar5": "temp_remainder1",
                "uVar6": "temp_remainder2",
                "uVar7": "temp_remainder3",
                "uVar8": "temp_divisor1",
                "uVar9": "temp_divisor2",
                "iVar10": "shift_count",
                "bVar11": "carry_flag"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "execute_system_call_080005e0",
            "code": "\nvoid executeSystemCall_080005e0(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "execute_system_call_080005e0"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "execute_task_080005e4",
            "code": "\nundefined4 executeTask_080005e4(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 result)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  returnValue = FUN_080005e0(1,input1,0,0,result);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "execute_task_080005e4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "result",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "set_param_values_08000600",
            "code": "\nvoid setParamValues_08000600(int **paramArray,undefined4 paramValue)\n\n{\n  char parameterByte;\n  int returnValue;\n  \n  parameterByte = *(char *)((int)paramArray + 5);\n  if (parameterByte == '\\x02') {\n    *paramArray = &DAT_20000338;\n  }\n  else if (parameterByte == '\\x03') {\n    *paramArray = &DAT_20000338;\n  }\n  else if (parameterByte == '\\x01') {\n    *paramArray = &DAT_20000338;\n  }\n  else {\n    *paramArray = &DAT_20000338;\n  }\n  FUN_08004388(*paramArray,paramValue,6);\n  if (1 < *(byte *)((int)paramArray + 6)) {\n    FUN_08004110(*(byte *)((int)paramArray + 6),1);\n    FUN_080041bc(*(undefined *)((int)paramArray + 6),0);\n  }\n  do {\n    returnValue = (**(code **)(**paramArray + 0xc))();\n  } while (-1 < returnValue);\n  *(undefined *)((int)paramArray + 0x49) = 0;\n  *(undefined *)((int)paramArray + 0x4a) = 0;\n  *(undefined2 *)(paramArray + 0x15) = 0;\n  *(undefined2 *)((int)paramArray + 0x52) = 0;\n  *(undefined2 *)(paramArray + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "set_param_values_08000600",
                "param_1": "paramArray",
                "param_2": "paramValue",
                "cVar1": "parameterByte",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_08004388",
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "initialize_data_0800066c",
            "code": "\nvoid initializeData_0800066c(int dataAddress,undefined value1,int value2,undefined value3)\n\n{\n  *(undefined *)(dataAddress + 4) = value1;\n  if (3 < value2) {\n    value2 = 0;\n  }\n  *(char *)(dataAddress + 5) = (char)value2;\n  *(undefined *)(dataAddress + 6) = value3;\n  *(undefined2 *)(dataAddress + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "initialize_data_0800066c",
                "param_1": "dataAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_08000682",
            "code": "\nundefined4 initialize_08000682(undefined4 data)\n\n{\n  FUN_0800066c();\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_08000682",
                "param_1": "data"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "check_and_execute_08000690",
            "code": "\nvoid check_and_execute_08000690(int input_flag,int value_check,undefined4 unused_param,undefined4 reference_value)\n\n{\n  if (input_flag != 1) {\n    return;\n  }\n  if (value_check == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,reference_value);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "check_and_execute_08000690",
                "param_1": "input_flag",
                "param_2": "value_check",
                "param_3": "unused_param",
                "param_4": "reference_value"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint processData_080006b4(int **data)\n\n{\n  bool exceededThreshold;\n  undefined returnValue;\n  int result;\n  byte counter;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    exceededThreshold = false;\n    while (result = (**(code **)(**data + 8))(), result != 0) {\n      counter = *(byte *)((int)data + 0x49);\n      returnValue = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + counter + 9) = returnValue;\n      counter = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = counter;\n      if (0x3f < counter) {\n        exceededThreshold = true;\n      }\n    }\n  }\n  else {\n    exceededThreshold = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (exceededThreshold) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "exceededThreshold",
                "uVar2": "returnValue",
                "iVar3": "result",
                "bVar4": "counter"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_checksum_08000728",
            "code": "\nuint calculate_checksum_08000728(int data_ptr,int size)\n\n{\n  byte bit;\n  uint checksum;\n  uint parity;\n  uint index;\n  \n  checksum = 0xffff;\n  for (index = 0; (int)index < size; index = index + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(data_ptr + index + 9);\n    for (bit = 1; bit < 9; bit = bit + 1) {\n      parity = checksum & 1;\n      checksum = checksum >> 1;\n      if (parity != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "param_1": "data_ptr",
                "param_2": "size",
                "bVar1": "bit",
                "uVar2": "checksum",
                "uVar3": "parity",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_param_0800076c",
            "code": "\nvoid updateParam_0800076c(int **paramArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result;\n  int condition;\n  uint index;\n  \n  index = (uint)*(byte *)((int)paramArray + 0x49);\n  result = FUN_08000728(paramArray,index,param3,param4,param4);\n  *(char *)((int)paramArray + index + 9) = (char)((ushort)result >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)paramArray + index + 9) = (char)result;\n  *(char *)((int)paramArray + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)paramArray + 6)) {\n    FUN_080041bc(*(byte *)((int)paramArray + 6),1);\n  }\n  if (*(byte *)((int)paramArray + 5) < 4) {\n    (**(code **)(**paramArray + 4))(*paramArray,(int)paramArray + 9,*(undefined *)((int)paramArray + 0x49));\n  }\n  if (1 < *(byte *)((int)paramArray + 6)) {\n    FUN_080041bc(*(byte *)((int)paramArray + 6),0);\n  }\n  if (*(byte *)((int)paramArray + 5) < 4) {\n    do {\n      condition = (**(code **)(**paramArray + 0xc))();\n    } while (-1 < condition);\n  }\n  *(undefined *)((int)paramArray + 0x49) = 0;\n  condition = FUN_08004204();\n  paramArray[0x17] = (int *)(condition + (uint)*(ushort *)((int)paramArray + 0x56));\n  *(short *)((int)paramArray + 0x52) = *(short *)((int)paramArray + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_param_0800076c",
                "param_1": "paramArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "iVar2": "condition",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004204",
                "FUN_08000728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_and_update_status_080007f0",
            "code": "\nundefined4 check_and_update_status_080007f0(int data,undefined4 status,uint value,undefined4 config)\n\n{\n  bool is_matched;\n  byte result;\n  char result_1;\n  char result_2;\n  int value1;\n  uint index;\n  int length;\n  \n  index = 0;\n  do {\n    if (7 < index) {\n      is_matched = false;\nLAB_0800080a:\n      if (!is_matched) {\n        *(short *)(data + 0x54) = *(short *)(data + 0x54) + 1;\n        return 1;\n      }\n      length = *(byte *)(data + 10) - 1;\n      switch(*(byte *)(data + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        result_1 = FUN_08004640(*(undefined *)(data + 0xb),*(undefined *)(data + 0xc),value,\n                             length,config);\n        result_2 = FUN_08004640(*(undefined *)(data + 0xd),*(undefined *)(data + 0xe));\n        if (*(byte *)(data + 0x60) < (byte)(result_2 + result_1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        length = FUN_08004640(*(undefined *)(data + 0xb),*(undefined *)(data + 0xc),value,\n                             length,config);\n        if ((uint)*(byte *)(data + 0x60) < (uint)(length << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        result = FUN_08004640(*(undefined *)(data + 0xb),*(undefined *)(data + 0xc),value,\n                             length,config);\n        if (*(byte *)(data + 0x60) < result) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    value = (uint)*(byte *)(data + 10);\n    if ((byte)(&DAT_08005a10)[index] == value) {\n      is_matched = true;\n      goto LAB_0800080a;\n    }\n    index = index + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  length = FUN_08004640(*(undefined *)(data + 0xb),*(undefined *)(data + 0xc),value,length,\n                       config);\n  value1 = FUN_08004640(*(undefined *)(data + 0xd),*(undefined *)(data + 0xe));\n  if ((uint)*(byte *)(data + 0x60) <\n      (((uint)(length << 0xc) >> 0x10) + ((uint)(value1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_and_update_status_080007f0",
                "param_1": "data",
                "param_2": "status",
                "param_3": "value",
                "param_4": "config",
                "bVar1": "is_matched",
                "bVar2": "result",
                "cVar3": "result_1",
                "cVar4": "result_2",
                "iVar5": "value1",
                "uVar6": "index",
                "iVar7": "length"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int sourceAddress,undefined newValue)\n\n{\n  *(undefined *)(sourceAddress + 9) = *(undefined *)(sourceAddress + 4);\n  *(byte *)(sourceAddress + 10) = *(byte *)(sourceAddress + 10) ^ 0x80;\n  *(undefined *)(sourceAddress + 0xb) = newValue;\n  *(undefined *)(sourceAddress + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "sourceAddress",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "update_flag_bits_080008e2",
            "code": "\nint updateFlagBits_080008e2(int inputParams,int data,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  uint result2;\n  uint loopCounter;\n  uint bitCounter;\n  char charValue;\n  int result3;\n  \n  result1 = FUN_08004640(*(undefined *)(inputParams + 0xb),*(undefined *)(inputParams + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(inputParams + 0xd),*(undefined *)(inputParams + 0xe));\n  charValue = (char)((result2 << 0x15) >> 0x18);\n  if ((result2 & 7) != 0) {\n    charValue = charValue + '\\x01';\n  }\n  *(char *)(inputParams + 0xb) = charValue;\n  *(undefined *)(inputParams + 0x49) = 3;\n  bitCounter = 0;\n  for (loopCounter = 0; (int)loopCounter < (int)result2; loopCounter = loopCounter + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(data + ((loopCounter + result1) * 0x100000 >> 0x18) * 2) >>\n         (loopCounter + result1 & 0xf) & 1U) == 0) {\n      result3 = (uint)*(byte *)(inputParams + 0x49) + inputParams;\n      *(byte *)(result3 + 9) = *(byte *)(result3 + 9) & ~(byte)(1 << bitCounter);\n    }\n    else {\n      result3 = (uint)*(byte *)(inputParams + 0x49) + inputParams;\n      *(byte *)(result3 + 9) = *(byte *)(result3 + 9) | (byte)(1 << bitCounter);\n    }\n    bitCounter = bitCounter + 1 & 0xff;\n    if (7 < bitCounter) {\n      *(char *)(inputParams + 0x49) = *(char *)(inputParams + 0x49) + '\\x01';\n      bitCounter = 0;\n    }\n  }\n  if ((result2 & 7) != 0) {\n    *(char *)(inputParams + 0x49) = *(char *)(inputParams + 0x49) + '\\x01';\n  }\n  charValue = *(char *)(inputParams + 0x49);\n  FUN_0800076c(inputParams);\n  return (int)(char)(charValue + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "update_flag_bits_080008e2",
                "param_1": "inputParams",
                "param_2": "data",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "uVar2": "result2",
                "uVar3": "loopCounter",
                "uVar4": "bitCounter",
                "cVar5": "charValue",
                "iVar6": "result3"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "decode_data_08000998",
            "code": "\nint decode_data_08000998(int data_ptr,int input_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  byte byte_var;\n  char char_var;\n  byte result_var1;\n  byte result_var2;\n  uint loop_index;\n  uint new_index;\n  \n  result_var1 = FUN_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param_4,\n                       param_4);\n  result_var2 = FUN_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  *(byte *)(data_ptr + 0xb) = result_var2 << 1;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  for (loop_index = (uint)result_var1; loop_index < (uint)result_var1 + (uint)result_var2; loop_index = loop_index + 1 & 0xff) {\n    byte_var = *(byte *)(data_ptr + 0x49);\n    *(char *)(data_ptr + (uint)byte_var + 9) = (char)((ushort)*(undefined2 *)(input_ptr + loop_index * 2) >> 8)\n    ;\n    new_index = byte_var + 1 & 0xff;\n    char_var = (char)new_index;\n    *(char *)(data_ptr + 0x49) = char_var;\n    *(undefined *)(data_ptr + new_index + 9) = *(undefined *)(input_ptr + loop_index * 2);\n    *(char *)(data_ptr + 0x49) = char_var + '\\x01';\n  }\n  char_var = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(char_var + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "decode_data_08000998",
                "param_1": "data_ptr",
                "param_2": "input_ptr",
                "bVar1": "byte_var",
                "cVar2": "char_var",
                "bVar3": "result_var1",
                "bVar4": "result_var2",
                "uVar5": "loop_index",
                "uVar6": "new_index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_data_08000a00",
            "code": "\nundefined4 updateData_08000a00(int dataOffset,int outputAddr,undefined4 param3,undefined4 param4)\n\n{\n  uint result;\n  uint bitOffset;\n  \n  result = FUN_08004640(*(undefined *)(dataOffset + 0xb),*(undefined *)(dataOffset + 0xc),param3,param4,\n                       param4);\n  bitOffset = (result << 0x14) >> 0x18;\n  if (*(char *)(dataOffset + 0xd) == -1) {\n    *(ushort *)(outputAddr + bitOffset * 2) =\n         (ushort)(1 << (result & 0xf)) | *(ushort *)(outputAddr + bitOffset * 2);\n  }\n  else {\n    *(ushort *)(outputAddr + bitOffset * 2) =\n         *(ushort *)(outputAddr + bitOffset * 2) & ~(ushort)(1 << (result & 0xf));\n  }\n  *(undefined *)(dataOffset + 0x49) = 6;\n  FUN_0800076c(dataOffset);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_data_08000a00",
                "param_1": "dataOffset",
                "param_2": "outputAddr",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar2": "bitOffset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "update_value_at_offset_08000a4e",
            "code": "\nundefined4 updateValueAtOffset_08000a4e(int inputBuffer,int outputBuffer)\n\n{\n  byte result;\n  undefined2 newValue;\n  \n  result = FUN_08004640(*(undefined *)(inputBuffer + 0xb),*(undefined *)(inputBuffer + 0xc));\n  newValue = FUN_08004640(*(undefined *)(inputBuffer + 0xd),*(undefined *)(inputBuffer + 0xe));\n  *(undefined2 *)(outputBuffer + (uint)result * 2) = newValue;\n  *(undefined *)(inputBuffer + 0x49) = 6;\n  FUN_0800076c(inputBuffer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "update_value_at_offset_08000a4e",
                "param_1": "inputBuffer",
                "param_2": "outputBuffer",
                "bVar1": "result",
                "uVar2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "translate_and_store_bits_08000a7a",
            "code": "\nundefined4 translateAndStoreBits_08000a7a(int inputArray,int outputArray,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  int result2;\n  uint index;\n  uint bitIndex;\n  uint bit;\n  uint arrayIndex;\n  uint paramIndex;\n  \n  result1 = FUN_08004640(*(undefined *)(inputArray + 0xb),*(undefined *)(inputArray + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(inputArray + 0xd),*(undefined *)(inputArray + 0xe));\n  bitIndex = 0;\n  paramIndex = 7;\n  for (index = 0; (int)index < result2; index = index + 1 & 0xffff) {\n    arrayIndex = (index + result1) * 0x100000 >> 0x18;\n    bit = index + result1 & 0xf;\n    if (((int)(uint)*(byte *)(inputArray + paramIndex + 9) >> bitIndex & 1U) == 0) {\n      *(ushort *)(outputArray + arrayIndex * 2) = *(ushort *)(outputArray + arrayIndex * 2) & ~(ushort)(1 << bit);\n    }\n    else {\n      *(ushort *)(outputArray + arrayIndex * 2) = (ushort)(1 << bit) | *(ushort *)(outputArray + arrayIndex * 2);\n    }\n    bitIndex = bitIndex + 1 & 0xff;\n    if (7 < bitIndex) {\n      paramIndex = paramIndex + 1 & 0xff;\n      bitIndex = 0;\n    }\n  }\n  *(undefined *)(inputArray + 0x49) = 6;\n  FUN_0800076c(inputArray);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "translate_and_store_bits_08000a7a",
                "param_1": "inputArray",
                "param_2": "outputArray",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "index",
                "uVar4": "bitIndex",
                "uVar5": "bit",
                "uVar6": "arrayIndex",
                "uVar7": "paramIndex"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "process_data_08000b04",
            "code": "\nint process_data_08000b04(int data_ptr,int output_ptr)\n\n{\n  byte temp_byte_1;\n  byte temp_byte_2;\n  char result_char;\n  undefined2 temp_uint;\n  uint loop_counter;\n  \n  temp_byte_1 = *(byte *)(data_ptr + 0xc);\n  temp_byte_2 = *(byte *)(data_ptr + 0xe);\n  *(undefined *)(data_ptr + 0xd) = 0;\n  *(byte *)(data_ptr + 0xe) = temp_byte_2;\n  *(undefined *)(data_ptr + 0x49) = 6;\n  for (loop_counter = 0; loop_counter < temp_byte_2; loop_counter = loop_counter + 1 & 0xff) {\n    temp_uint = FUN_08004640(*(undefined *)(loop_counter * 2 + data_ptr + 0x10),\n                         *(undefined *)(data_ptr + (loop_counter + 4) * 2 + 9));\n    *(undefined2 *)(output_ptr + (temp_byte_1 + loop_counter) * 2) = temp_uint;\n  }\n  result_char = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(result_char + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "process_data_08000b04",
                "param_1": "data_ptr",
                "param_2": "output_ptr",
                "bVar1": "temp_byte_1",
                "bVar2": "temp_byte_2",
                "cVar3": "result_char",
                "uVar4": "temp_uint",
                "uVar5": "loop_counter"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "update_parameter_08000b54",
            "code": "\nint updateParameter_08000b54(int **paramArray,int *inputParam,undefined4 status)\n\n{\n  byte resultByte;\n  int resultInt;\n  uint numAttempts;\n  int returnValue;\n  \n  paramArray[0x13] = inputParam;\n  *(char *)(paramArray + 0x18) = (char)status;\n  if (*(byte *)((int)paramArray + 5) < 4) {\n    resultByte = (**(code **)(**paramArray + 8))();\n    numAttempts = (uint)resultByte;\n  }\n  if (numAttempts == 0) {\n    returnValue = 0;\n  }\n  else if ((int)numAttempts < 8) {\n    returnValue = 0;\n  }\n  else {\n    returnValue = FUN_080006b4(paramArray);\n    *(char *)(paramArray + 2) = (char)returnValue;\n    if (*(char *)((int)paramArray + 9) == *(char *)(paramArray + 1)) {\n      resultInt = FUN_080007f0(paramArray);\n      if (resultInt < 1) {\n        resultInt = FUN_08004204();\n        paramArray[0x17] = (int *)((uint)*(ushort *)((int)paramArray + 0x56) + resultInt);\n        *(undefined *)(paramArray + 2) = 0;\n        switch(*(undefined *)((int)paramArray + 10)) {\n        case 1:\n        case 2:\n          returnValue = FUN_080008e2(paramArray,inputParam,status);\n          break;\n        case 3:\n        case 4:\n          returnValue = FUN_08000998(paramArray,inputParam,status);\n          break;\n        case 5:\n          returnValue = FUN_08000a00(paramArray,inputParam,status);\n          break;\n        case 6:\n          returnValue = FUN_08000a4e(paramArray,inputParam,status);\n          break;\n        case 0xf:\n          returnValue = FUN_08000a7a(paramArray,inputParam,status);\n          break;\n        case 0x10:\n          returnValue = FUN_08000b04(paramArray,inputParam,status);\n        }\n      }\n      else {\n        if (resultInt != 0xff) {\n          FUN_080008cc(paramArray,resultInt);\n          FUN_0800076c(paramArray);\n        }\n        *(char *)(paramArray + 2) = (char)resultInt;\n        returnValue = (int)(char)resultInt;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "update_parameter_08000b54",
                "param_1": "paramArray",
                "param_2": "inputParam",
                "param_3": "status",
                "bVar1": "resultByte",
                "iVar2": "resultInt",
                "unaff_r5": "numAttempts",
                "iVar3": "returnValue"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a4e",
                "FUN_0800076c",
                "FUN_080008e2",
                "FUN_080008cc",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08004204",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_data_08000c4c",
            "code": "\nvoid initializeData_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_data_08000c4c"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000600",
                "FUN_080005e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "initialize_memory_08000c64",
            "code": "\nvoid initialize_memory_08000c64(void)\n\n{\n  undefined4 input_value;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,input_value,input_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "initialize_memory_08000c64",
                "in_r3": "input_value"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_system_08000c8c",
            "code": "\n\n\nvoid initializeSystem_08000c8c(void)\n\n{\n  uint divisionResult;\n  undefined4 flag;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  undefined4 constant6;\n  undefined4 constant7;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag = 1;\n  constant1 = 0x50000;\n  constant2 = 2;\n  constant3 = 0x400000;\n  constant4 = 8;\n  constant5 = 0x150;\n  constant6 = 2;\n  constant7 = 7;\n  FUN_0800201c(&flag);\n  FUN_08001f9c();\n  value1 = 0xf;\n  value2 = 2;\n  value3 = 0;\n  value4 = 0x1400;\n  value5 = 0x1000;\n  FUN_08002488(&value1,5);\n  divisionResult = FUN_080025e0();\n  FUN_08000ee0(divisionResult / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "local_54": "flag",
                "local_50": "constant1",
                "local_3c": "constant2",
                "local_38": "constant3",
                "local_34": "constant4",
                "local_30": "constant5",
                "local_2c": "constant6",
                "local_28": "constant7",
                "local_24": "value1",
                "local_20": "value2",
                "local_1c": "value3",
                "local_18": "value4",
                "local_14": "value5",
                "uVar1": "divisionResult"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_080025e0",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080035bc",
                "FUN_08004658",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "execute_initialization_08000d8e",
            "code": "\nvoid executeInitialization_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "execute_initialization_08000d8e"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "initialize_and_set_param_08000d98",
            "code": "\nundefined4 initializeAndSetParam_08000d98(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,inputParam,0);\n  DAT_20000028 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "initialize_and_set_param_08000d98",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "initialize_system_08000de4",
            "code": "\n\n\nundefined4 initializeSystem_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "initialize_system_08000de4"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "accumulate_data_08000e18",
            "code": "\nvoid accumulate_data_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "accumulate_data_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_data_08000e30",
            "code": "\nundefined4 get_data_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_data_08000e30"
            },
            "calling": [
                "FUN_0800346c",
                "FUN_08003d18",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002d0c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_configuration_08000e3c",
            "code": "\n\n\nvoid updateConfiguration_08000e3c(uint configMask)\n\n{\n  _DAT_e000ed0c = (configMask & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_configuration_08000e3c",
                "param_1": "configMask"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "update_character_08000e60",
            "code": "\n\n\nvoid updateCharacter_08000e60(uint characterIndex,uint characterData_1,uint characterData_2)\n\n{\n  uint shiftAmount;\n  uint shiftCount;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftCount = 7 - shiftAmount;\n  if (3 < shiftCount) {\n    shiftCount = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (characterData_1 & (1 << (shiftCount & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & characterData_2;\n  if ((int)characterIndex < 0) {\n    *(char *)((characterIndex & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(characterIndex + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "update_character_08000e60",
                "param_1": "characterIndex",
                "param_2": "characterData_1",
                "param_3": "characterData_2",
                "uVar1": "shiftAmount",
                "uVar2": "shiftCount"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_in_memory_08000ec4",
            "code": "\nvoid setBitInMemory_08000ec4(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_in_memory_08000ec4",
                "param_1": "index"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "initialize_settings_08000ee0",
            "code": "\n\n\nundefined4 initialize_settings_08000ee0(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "initialize_settings_08000ee0",
                "param_1": "value"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_at_index_08000f0c",
            "code": "\nvoid setBitAtIndex_08000f0c(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_at_index_08000f0c",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "update_flag_08000f2c",
            "code": "\n\n\nvoid updateFlag_08000f2c(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "update_flag_08000f2c",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "initialize_application_08000f4e",
            "code": "\nvoid initializeApplication_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "initialize_application_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "initialize_and_reset_08000f56",
            "code": "\nundefined4 initializeAndReset_08000f56(int input)\n\n{\n  if (input != 0) {\n    *(undefined *)(input + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(input + 0x10) = 0;\n    *(undefined *)(input + 4) = 0;\n    *(undefined *)(input + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "initialize_and_reset_08000f56",
                "param_1": "input"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "code": "\nundefined4 clearBitAndSetFlag_08000f72(uint **ptr_to_ptr,uint bit_position)\n\n{\n  **ptr_to_ptr = **ptr_to_ptr & ~(1 << (bit_position & 0xff));\n  *(undefined *)(ptr_to_ptr + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "ptr_to_ptr",
                "param_2": "bit_position"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "update_param_08000f8c",
            "code": "\nundefined4 updateParam_08000f8c(uint **paramArray)\n\n{\n  if (*(char *)((int)paramArray + 0x35) != '\\x02') {\n    param15 = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)paramArray + 0x35) = 5;\n  **paramArray = **paramArray & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "update_param_08000f8c",
                "param_1": "paramArray",
                "param_1[0x15]": "param15"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_registers_08000fb4",
            "code": "\n\n\nvoid updateRegisters_08000fb4(uint *register1,uint *register2)\n\n{\n  uint temp1;\n  uint temp2;\n  uint index;\n  uint mask;\n  uint value;\n  int offset;\n  uint shift;\n  int position;\n  \n  for (index = 0; index < 0x10; index = index + 1) {\n    temp2 = 1 << (index & 0xff);\n    mask = temp2 & *register2;\n    temp1 = _DAT_40013c0c;\n    if (temp2 == mask) {\n      if ((register2[1] == 2) || (register2[1] == 0x12)) {\n        offset = (index >> 3) + 8;\n        position = (index & 7) << 2;\n        register1[offset] = register1[offset] & ~(0xf << position) | register2[4] << position;\n      }\n      shift = index << 1;\n      temp1 = ~(3 << (shift & 0xff));\n      *register1 = *register1 & temp1 | (register2[1] & 3) << (shift & 0xff);\n      value = register2[1];\n      if (((value - 1 < 2) || (value == 0x11)) || (value == 0x12)) {\n        register1[2] = register1[2] & temp1 | register2[3] << (shift & 0xff);\n        register1[1] = register1[1] & ~temp2 | ((register2[1] << 0x1b) >> 0x1f) << (index & 0xff);\n      }\n      register1[3] = temp1 & register1[3] | register2[2] << (shift & 0xff);\n      temp1 = _DAT_40013c0c;\n      if ((register2[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        position = (index & 3) << 2;\n        if (register1 == (uint *)0x40020000) {\n          offset = 0;\n        }\n        else if (register1 == (uint *)0x40020400) {\n          offset = 1;\n        }\n        else if (register1 == (uint *)0x40020800) {\n          offset = 2;\n        }\n        else if (register1 == (uint *)0x40020c00) {\n          offset = 3;\n        }\n        else if (register1 == (uint *)0x40021000) {\n          offset = 4;\n        }\n        else if (register1 == (uint *)0x40021400) {\n          offset = 5;\n        }\n        else if (register1 == (uint *)0x40021800) {\n          offset = 6;\n        }\n        else if (register1 == (uint *)0x40021c00) {\n          offset = 7;\n        }\n        else if (register1 == (uint *)0x40022000) {\n          offset = 8;\n        }\n        else if (register1 == (uint *)0x40022400) {\n          offset = 9;\n        }\n        else {\n          offset = 10;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) & ~(0xf << position) | offset << position;\n        temp1 = ~mask;\n        temp2 = _DAT_40013c00 & temp1;\n        if ((register2[1] & 0x10000) != 0) {\n          temp2 = mask | _DAT_40013c00;\n        }\n        value = temp1 & _DAT_40013c04;\n        if ((register2[1] & 0x20000) != 0) {\n          value = mask | _DAT_40013c04;\n        }\n        shift = temp1 & _DAT_40013c08;\n        if ((register2[1] & 0x100000) != 0) {\n          shift = mask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp2;\n        _DAT_40013c04 = value;\n        _DAT_40013c08 = shift;\n        temp1 = temp1 & _DAT_40013c0c;\n        if ((register2[1] & 0x200000) != 0) {\n          temp1 = mask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_registers_08000fb4",
                "param_1": "register1",
                "param_2": "register2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "index",
                "uVar4": "mask",
                "uVar5": "value",
                "iVar6": "offset",
                "uVar7": "shift",
                "iVar8": "position"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "set_param_value_08001198",
            "code": "\nvoid setParamValue_08001198(int objectAddress,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x18) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x18) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "set_param_value_08001198",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "update_data_080011a4",
            "code": "\n\n\nvoid update_data_080011a4(uint data)\n\n{\n  if ((_DAT_40013c14 & data) != 0) {\n    _DAT_40013c14 = data;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "update_data_080011a4",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "update_device_setting_080011c0",
            "code": "\nundefined4 updateDeviceSetting_080011c0(int *deviceParameters)\n\n{\n  if (*(char *)((int)deviceParameters + 0x3e) == '@') {\n    if (mode == 0) {\n      *(uint *)(*deviceParameters + 0x10) = deviceValue & 0xfe;\n    }\n    else {\n      *(uint *)(*deviceParameters + 0x10) = deviceValue & 0xffU | 1;\n    }\n  }\n  else if (deviceParameters[4] == 0x4000) {\n    if (*(char *)((int)deviceParameters + 0x3d) == '!') {\n      *(uint *)(*deviceParameters + 0x10) = deviceValue & 0xfe;\n    }\n    else {\n      *(uint *)(*deviceParameters + 0x10) = deviceValue & 0xffU | 1;\n    }\n  }\n  else if (mode == 0) {\n    *(uint *)(*deviceParameters + 0x10) = (uint)(deviceValue << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (mode == 1) {\n    *(uint *)(*deviceParameters + 0x10) = (uint)(deviceValue << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "update_device_setting_080011c0",
                "param_1": "deviceParameters",
                "param_1[0x14]": "mode",
                "param_1[0x11]": "deviceValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "set_byte_value_at_offset_0800124a",
            "code": "\nundefined4 setByteValueAtOffset_0800124a(int *pointer)\n\n{\n  *(uint *)(*pointer + 0x10) = pointer[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "set_byte_value_at_offset_0800124a",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "update_data_flags_08001256",
            "code": "\nundefined4 updateDataFlags_08001256(UInt **data)\n\n{\n  UInt *flagPtr;\n  \n  flagPtr = data[0xb];\n  if ((*(char *)((int)data + 0x3d) == '\\\"') &&\n     ((data[0x14] != (UInt *)0x0 || (*(char *)((int)data + 0x3e) != '@')))) {\n    if ((data[0x14] == (UInt *)0x0) && (data[4] == (UInt *)0xc000)) {\n      **data = **data | 0x100;\n      data[0x14] = (UInt *)((int)data[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)data + 0x2a) == 0) {\n        **data = **data | 0x200;\n      }\n      else if (*(short *)((int)data + 0x2a) == 1) {\n        if (flagPtr == (UInt *)0xffff0000) {\n          **data = **data & 0xfffffbff;\n          flagPtr = *data;\n          if ((flagPtr[1] & 0x800) == 0) {\n            *flagPtr = *flagPtr | 0x200;\n          }\n          else {\n            *flagPtr = *flagPtr & 0xfffffbff;\n          }\n        }\n        else if (((flagPtr == (UInt *)0x4) || (flagPtr == (UInt *)0x8)) ||\n                (data[0xc] == (UInt *)0x12)) {\n          **data = **data & 0xfffffbff;\n          **data = **data | 0x200;\n        }\n        else if (data[0xb] == (UInt *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)data + 0x2a) == 2) {\n        if (data[0xb] == (UInt *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n          **data = **data | 0x800;\n        }\n        flagPtr = *data;\n        if ((flagPtr[1] & 0x800) != 0) {\n          flagPtr[1] = flagPtr[1] | 0x1000;\n        }\n      }\n      else {\n        **data = **data | 0x400;\n        flagPtr = *data;\n        if ((flagPtr[1] & 0x800) != 0) {\n          flagPtr[1] = flagPtr[1] | 0x1000;\n        }\n      }\n      data[0x14] = (UInt *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "update_data_flags_08001256",
                "param_1": "data",
                "puVar1": "flagPtr",
                "uint": "UInt"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_data_08001420",
            "code": "\nundefined4 updateData_08001420(int *data)\n\n{\n  byte *byteData;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byteData = (byte *)data[9];\n    data[9] = (int)(byteData + 1);\n    *(uint *)(*data + 0x10) = (uint)*byteData;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_data_08001420",
                "param_1": "data",
                "pbVar1": "byteData"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_and_decrement_08001440",
            "code": "\nundefined4 updateAndDecrement_08001440(int *data)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_and_decrement_08001440",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "process_parameters_08001460",
            "code": "\nundefined4 processParameters_08001460(uint **input1,uint *input2,int input3,uint *input4)\n\n{\n  undefined4 result;\n  uint *ptrVar;\n  \n  if (*(char *)((int)input1 + 0x3d) == '(') {\n    if (input2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (input3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input1 + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input1 + 0xf) = 1;\n      ptrVar = *input1;\n      if ((*ptrVar & 1) == 0) {\n        *ptrVar = *ptrVar | 1;\n      }\n      **input1 = **input1 & 0xfffff7ff;\n      *(undefined *)((int)input1 + 0x3d) = 0x29;\n      *(undefined *)((int)input1 + 0x3e) = 0x20;\n      result = 0;\n      arrayIndex1 = (uint *)0x0;\n      arrayIndex2 = input2;\n      *(short *)((int)input1 + 0x2a) = (short)input3;\n      arrayIndex3 = input4;\n      *(undefined2 *)(input1 + 10) = *(undefined2 *)((int)input1 + 0x2a);\n      *(undefined *)(input1 + 0xf) = 0;\n      (*input1)[1] = (*input1)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001460": "process_parameters_08001460",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "puVar2": "ptrVar",
                "param_1[0x10]": "arrayIndex1",
                "param_1[9]": "arrayIndex2",
                "param_1[0xb]": "arrayIndex3"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "process_parameters_080014ec",
            "code": "\nundefined4 processParameters_080014ec(uint **paramArray,uint *input1,int input2,uint *input3)\n\n{\n  undefined4 returnValue;\n  uint *ptr;\n  \n  if (*(char *)((int)paramArray + 0x3d) == '(') {\n    if (input1 == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (input2 == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(paramArray + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(paramArray + 0xf) = 1;\n      ptr = *paramArray;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **paramArray = **paramArray & 0xfffff7ff;\n      *(undefined *)((int)paramArray + 0x3d) = 0x2a;\n      *(undefined *)((int)paramArray + 0x3e) = 0x20;\n      returnValue = 0;\n      paramArray[0x10] = (uint *)0x0;\n      paramArray[9] = input1;\n      *(short *)((int)paramArray + 0x2a) = (short)input2;\n      paramArray[0xb] = input3;\n      *(undefined2 *)(paramArray + 10) = *(undefined2 *)((int)paramArray + 0x2a);\n      *(undefined *)(paramArray + 0xf) = 0;\n      (*paramArray)[1] = (*paramArray)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "process_parameters_080014ec",
                "param_1": "paramArray",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "uVar1": "returnValue",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "initialize_config_08001578",
            "code": "\nundefined4 initialize_config_08001578(uint **configuration)\n\n{\n  uint *ptr_config;\n  \n  if (*(char *)((int)configuration + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)configuration + 0x3d) = 0x28;\n  ptr_config = *configuration;\n  if ((*ptr_config & 1) == 0) {\n    *ptr_config = *ptr_config | 1;\n  }\n  **configuration = **configuration | 0x400;\n  (*configuration)[1] = (*configuration)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "initialize_config_08001578",
                "param_1": "configuration",
                "puVar1": "ptr_config"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "update_parameter_080015bc",
            "code": "\nundefined4 updateParameter_080015bc(int *parameter)\n\n{\n  char charFlag;\n  byte *bytePointer;\n  \n  charFlag = *(char *)((int)parameter + 0x3d);\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    bytePointer = (byte *)parameter[9];\n    parameter[9] = (int)(bytePointer + 1);\n    *(uint *)(*parameter + 0x10) = (uint)*bytePointer;\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    if ((*(short *)((int)parameter + 0x2a) == 0) && (charFlag == ')')) {\n      *(uint *)(*parameter + 4) = *(uint *)(*parameter + 4) & 0xfffffbff;\n      parameter[0xc] = 0x21;\n      *(undefined *)((int)parameter + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "update_parameter_080015bc",
                "param_1": "parameter",
                "cVar1": "charFlag",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "update_pointer_0800160e",
            "code": "\nundefined4 updatePointer_0800160e(int *pointer)\n\n{\n  char character;\n  undefined *unknownPointer;\n  \n  character = *(char *)((int)pointer + 0x3d);\n  if (*(short *)((int)pointer + 0x2a) != 0) {\n    unknownPointer = (undefined *)pointer[9];\n    pointer[9] = (int)(unknownPointer + 1);\n    *unknownPointer = (char)*(undefined4 *)(*pointer + 0x10);\n    *(short *)((int)pointer + 0x2a) = *(short *)((int)pointer + 0x2a) + -1;\n    if ((*(short *)((int)pointer + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*pointer + 4) = *(uint *)(*pointer + 4) & 0xfffffbff;\n      pointer[0xc] = 0x22;\n      *(undefined *)((int)pointer + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "update_pointer_0800160e",
                "param_1": "pointer",
                "cVar1": "character",
                "puVar2": "unknownPointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "process_data_0800165a",
            "code": "\nundefined4 processData_0800165a(int *data,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined2 selectedValue;\n  uint flags;\n  \n  flags = *(uint *)(*data + 0x18);\n  if ((flags & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(data + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(data + 6);\n  }\n  FUN_08003880(data,(*(uint *)(*data + 0x18) & 4) == 0,selectedValue,flags,value3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "process_data_0800165a",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "selectedValue",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "process_input_08001684",
            "code": "\nundefined4 processInput_08001684(uint **inputParams)\n\n{\n  if (((inputParams[11] == (uint *)0x4) || (inputParams[11] == (uint *)0x8)) &&\n     (*(char *)((int)inputParams + 0x3d) == '(')) {\n    inputParams[11] = (uint *)0xffff0000;\n    (*inputParams)[1] = (*inputParams)[1] & 0xfffff8ff;\n    (*inputParams)[5] = 0xfffffbff;\n    **inputParams = **inputParams & 0xfffffbff;\n    inputParams[12] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    *(undefined *)((int)inputParams + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)inputParams + 0x3d) == '!') {\n    inputParams[11] = (uint *)0xffff0000;\n    inputParams[12] = (uint *)0x21;\n    *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    *(undefined *)((int)inputParams + 0x3e) = 0;\n    (*inputParams)[1] = (*inputParams)[1] & 0xfffff8ff;\n    (*inputParams)[5] = 0xfffffbff;\n    **inputParams = **inputParams & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*inputParams)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "process_input_08001684",
                "param_1": "inputParams",
                "param_1[0xb]": "inputParams[11]",
                "param_1[0xc]": "inputParams[12]",
                "(int)param_1": "(int)inputParams"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "process_data_0800171a",
            "code": "\nundefined4 processData_0800171a(uint **data)\n\n{\n  char char1;\n  uint *ptr;\n  \n  char1 = *(char *)((int)data + 0x3d);\n  ptr = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char1 == '!')) {\n    if ((ptr == (uint *)0x4) || ((ptr == (uint *)0x8 || (ptr == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((char1 == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char1 == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          ptr = data[9];\n          data[9] = (uint *)((int)ptr + 1);\n          (*data)[4] = (uint)*(byte *)ptr;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptr = data[9];\n      data[9] = (uint *)((int)ptr + 1);\n      (*data)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "process_data_0800171a",
                "param_1": "data",
                "cVar1": "char1",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "handle_param_08001864",
            "code": "\nundefined4 handleParam_08001864(uint **params)\n\n{\n  uint *param_b;\n  \n  param_b = params[0xb];\n  if (*(char *)((int)params + 0x3d) == '!') {\n    if (*(short *)((int)params + 0x2a) == 0) {\n      if (((param_b == (uint *)0x4) || (param_b == (uint *)0x8)) || (param_b == (uint *)0xffff0000)) {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        **params = **params | 0x200;\n        param_c = (uint *)0x0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        if (*(char *)((int)params + 0x3e) == '@') {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        param_c = (uint *)0x11;\n        *(undefined *)((int)params + 0x3e) = 0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      param_b = params[9];\n      params[9] = (uint *)((int)param_b + 1);\n      (*params)[4] = (uint)*(byte *)param_b;\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "handle_param_08001864",
                "param_1": "params",
                "puVar1": "param_b",
                "param_1[0xc]": "param_c"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "process_parameter_08001904",
            "code": "\nundefined4 processParameter_08001904(uint **parameter)\n\n{\n  uint *tempVar1;\n  \n  if (*(char *)((int)parameter + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameter + 0x2a) < 4) {\n      if (*(ushort *)((int)parameter + 0x2a) < 2) {\n        **parameter = **parameter & 0xfffffbff;\n        (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n        tempVar1 = parameter[9];\n        parameter[9] = (uint *)((int)tempVar1 + 1);\n        *(char *)tempVar1 = (char)(*parameter)[4];\n        *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        parameter[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameter + 0x3e) == '@') {\n          *(undefined *)((int)parameter + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)parameter + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      tempVar1 = parameter[9];\n      parameter[9] = (uint *)((int)tempVar1 + 1);\n      *(char *)tempVar1 = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n      if (*(short *)((int)parameter + 0x2a) == 3) {\n        (*parameter)[1] = (*parameter)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "process_parameter_08001904",
                "param_1": "parameter",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "update_control_bits_080019a0",
            "code": "\nundefined4 updateControlBits_080019a0(uint **paramArray)\n\n{\n  uint *tempVar;\n  \n  if (*(short *)((int)paramArray + 0x2a) == 4) {\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffffbff;\n    tempVar = paramArray[9];\n    paramArray[9] = (uint *)((int)tempVar + 1);\n    *(char *)tempVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)paramArray + 0x2a) == 3) {\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    tempVar = paramArray[9];\n    paramArray[9] = (uint *)((int)tempVar + 1);\n    *(char *)tempVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)paramArray + 0x2a) == 2) {\n    if ((int)paramArray[0xb] - 1U < 2) {\n      **paramArray = **paramArray & 0xfffffbff;\n      **paramArray = **paramArray | 0x100;\n    }\n    else {\n      **paramArray = **paramArray | 0x200;\n    }\n    tempVar = paramArray[9];\n    paramArray[9] = (uint *)((int)tempVar + 1);\n    *(char *)tempVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    tempVar = paramArray[9];\n    paramArray[9] = (uint *)((int)tempVar + 1);\n    *(char *)tempVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffffcff;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    paramArray[0xc] = (uint *)0x0;\n    if (*(char *)((int)paramArray + 0x3e) == '@') {\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    tempVar = paramArray[9];\n    paramArray[9] = (uint *)((int)tempVar + 1);\n    *(char *)tempVar = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "update_control_bits_080019a0",
                "param_1": "paramArray",
                "puVar1": "tempVar"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_data_08001ab0",
            "code": "\nvoid processData_08001ab0(uint **data)\n\n{\n  int result;\n  uint *tempPtr1;\n  uint *tempPtr2;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  tempPtr2 = *data;\n  if ((tempPtr2[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = data[9];\n        data[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_08001aac(data);\n    }\n    else {\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = data[9];\n        data[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      FUN_08003900(data);\n    }\n  }\n  else {\n    tempPtr2[1] = tempPtr2[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x35) == '\\x01') {\n      data[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          tempPtr2 = data[9];\n          data[9] = (uint *)((int)tempPtr2 + 1);\n          *(char *)tempPtr2 = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0x14])();\n      }\n    }\n    else {\n      data[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    FUN_080038d0(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_data_08001ab0",
                "param_1": "data",
                "iVar1": "result",
                "puVar2": "tempPtr1",
                "puVar3": "tempPtr2"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_data_08001bfc",
            "code": "\nundefined4 processData_08001bfc(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_data_08001bfc",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "process_param_08001d00",
            "code": "\nvoid processParam_08001d00(int *param)\n\n{\n  int ptr;\n  uint var1;\n  uint var2;\n  uint var3;\n  \n  ptr = *param;\n  var3 = *(uint *)(ptr + 0x18);\n  var1 = *(uint *)(ptr + 0x14);\n  var2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)param + 0x3e) == '\\x10') || (*(char *)((int)param + 0x3e) == '@')) {\n    if (((var1 & 0x10001) == 0) || ((var2 & 0x200) == 0)) {\n      if (((var1 & 0x10008) == 0) || ((var2 & 0x200) == 0)) {\n        if (((var1 & 0x10002) != 0) && ((var2 & 0x200) != 0)) {\n          FUN_08001256(param);\n        }\n      }\n      else {\n        FUN_0800124a(param);\n      }\n    }\n    else {\n      FUN_080011c0(param);\n    }\n    if ((var3 & 0x100004) == 0) {\n      if ((((var1 & 0x10040) != 0) && ((var2 & 0x400) != 0)) && ((var1 & 0x10004) == 0)) {\n        FUN_08001904(param);\n        return;\n      }\n      if (((var1 & 0x10004) != 0) && ((var2 & 0x200) != 0)) {\n        FUN_080019a0(param);\n        return;\n      }\n    }\n    else {\n      if ((((var1 & 0x10080) != 0) && ((var2 & 0x400) != 0)) && ((var1 & 0x10004) == 0)) {\n        FUN_0800171a(param);\n        return;\n      }\n      if (((var1 & 0x10004) != 0) && ((var2 & 0x200) != 0)) {\n        FUN_08001864(param);\n        return;\n      }\n    }\n  }\n  else {\n    if (((var1 & 0x10002) != 0) && ((var2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((var1 & 0x10010) != 0) && ((var2 & 0x200) != 0)) {\n      FUN_08001bfc(param);\n      return;\n    }\n    if ((var3 & 0x100004) == 0) {\n      if ((((var1 & 0x10040) != 0) && ((var2 & 0x400) != 0)) && ((var1 & 0x10004) == 0)) {\n        FUN_0800160e(param);\n        return;\n      }\n      if (((var1 & 0x10004) != 0) && ((var2 & 0x200) != 0)) {\n        FUN_08001440(param);\n      }\n    }\n    else {\n      if ((((var1 & 0x10080) != 0) && ((var2 & 0x400) != 0)) && ((var1 & 0x10004) == 0)) {\n        FUN_080015bc(param);\n        return;\n      }\n      if (((var1 & 0x10004) != 0) && ((var2 & 0x200) != 0)) {\n        FUN_08001420(param);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "process_param_08001d00",
                "param_1": "param",
                "iVar1": "ptr",
                "uVar2": "var1",
                "uVar3": "var2",
                "uVar4": "var3"
            },
            "calling": [],
            "called": [
                "FUN_0800160e",
                "FUN_08001256",
                "FUN_080015bc",
                "FUN_08001440",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_0800124a",
                "FUN_08001864",
                "FUN_08001bfc",
                "FUN_0800171a",
                "FUN_080019a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "update_status_08001e68",
            "code": "\nvoid updateStatus_08001e68(uint **param)\n\n{\n  char character;\n  uint *pointer;\n  uint value1;\n  uint value2;\n  \n  pointer = *param;\n  value1 = pointer[5];\n  value2 = pointer[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 1);\n    pointer[5] = 0xfffffeff;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 2);\n    (*param)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)param + 0x3d);\n    if (((*(char *)((int)param + 0x3e) == ' ') && (*(short *)((int)param + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (param[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(param);\n    }\n    else {\n      param[0x10] = (uint *)((uint)param[0x10] | 4);\n      if (*(char *)((int)param + 0x3e) == '\\x10') {\n        **param = **param | 0x200;\n      }\n      (*param)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 8);\n    (*param)[5] = 0xfffff7ff;\n  }\n  if (param[0x10] != (uint *)0x0) {\n    FUN_08001ab0(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "update_status_08001e68",
                "param_1": "param",
                "cVar1": "character",
                "puVar2": "pointer",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "check_and_wait_for_flag_08001f9c",
            "code": "\n\n\nundefined4 check_and_wait_for_flag_08001f9c(void)\n\n{\n  int initial_flag_value;\n  int current_flag_value;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initial_flag_value = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initial_flag_value = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        current_flag_value = FUN_08000e30();\n      } while ((uint)(current_flag_value - initial_flag_value) < 0x3e9);\n      return 3;\n    }\n    current_flag_value = FUN_08000e30();\n  } while ((uint)(current_flag_value - initial_flag_value) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "check_and_wait_for_flag_08001f9c",
                "iVar1": "initial_flag_value",
                "iVar2": "current_flag_value"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "handle_settings_0800201c",
            "code": "\n\n\nundefined4 handleSettings_0800201c(uint *settings)\n\n{\n  int initialTime;\n  int currentTime;\n  undefined4 result;\n  bool isBit4Unset;\n  \n  if (settings == (uint *)0x0) {\n    return 1;\n  }\n  if ((*settings & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (settings[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (settings[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (settings[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (settings[1] == 0) {\n        initialTime = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentTime = FUN_08000e30();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initialTime = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentTime = FUN_08000e30();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*settings & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (settings[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | settings[4] << 3;\n    }\n    else if (settings[3] == 0) {\n      _DAT_42470000 = 0;\n      initialTime = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      initialTime = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | settings[4] << 3;\n    }\n  }\n  if ((*settings & 8) != 0) {\n    if (settings[5] == 0) {\n      _DAT_42470e80 = 0;\n      initialTime = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      initialTime = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*settings & 4) != 0) {\n    isBit4Unset = (_DAT_40023840 & 0x10000000) == 0;\n    if (isBit4Unset) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialTime = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    if (settings[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (settings[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (settings[2] == 0) {\n      initialTime = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentTime = FUN_08000e30();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initialTime = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentTime = FUN_08000e30();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isBit4Unset) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (settings[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (settings[6] == 2) {\n    _DAT_42470060 = 0;\n    initialTime = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             settings[7] | settings[8] | settings[9] << 6 | ((settings[10] >> 1) - 1) * 0x10000 |\n             settings[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        initialTime = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08000e30();\n        } while ((uint)(currentTime - initialTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08000e30();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    initialTime = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08000e30();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "handle_settings_0800201c",
                "param_1": "settings",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "bVar4": "isBit4Unset"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_clock_speed_080023b4",
            "code": "\n\n\nuint calculateClockSpeed_080023b4(void)\n\n{\n  undefined4 inputArgument;\n  uint clockSpeed;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    clockSpeed = (_DAT_40023804 << 0x11) >> 0x17;\n    clockSpeed = FUN_080002d0(clockSpeed * 16000000,\n                         (((uint)(clockSpeed * 0x20 < clockSpeed) * -0x3f -\n                          (uint)(clockSpeed * 0x7c0 < clockSpeed * 0x1f)) * 8 +\n                         (uint)CARRY4(clockSpeed * 0x3d08,clockSpeed)) * 0x400 | clockSpeed * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,inputArgument);\n  }\n  else {\n    clockSpeed = (_DAT_40023804 << 0x11) >> 0x17;\n    clockSpeed = FUN_080002d0(clockSpeed * 8000000,\n                         (((uint)(clockSpeed * 0x20 < clockSpeed) * -0x3f -\n                          (uint)(clockSpeed * 0x7c0 < clockSpeed * 0x1f)) * 8 +\n                         (uint)CARRY4(clockSpeed * 0x3d08,clockSpeed)) * 0x200,_DAT_40023804 & 0x3f,0,inputArgument);\n  }\n  return clockSpeed / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "FUN_080023b4": "calculate_clock_speed_080023b4",
                "in_r3": "inputArgument",
                "uVar1": "clockSpeed"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "configure_device_08002488",
            "code": "\n\n\nundefined4 configureDevice_08002488(uint *deviceConfig,uint numConfigurations)\n\n{\n  int startTime;\n  int currentTime;\n  uint status;\n  \n  if (deviceConfig == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < numConfigurations) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)numConfigurations);\n    if (numConfigurations != (numConfigurations & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*deviceConfig & 2) != 0) {\n    if ((*deviceConfig & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*deviceConfig & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | deviceConfig[2];\n  }\n  if ((*deviceConfig & 1) != 0) {\n    status = deviceConfig[1];\n    if (status == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (status - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = status | _DAT_40023808 & 0xfffffffc;\n    startTime = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == deviceConfig[1] * 4) break;\n      currentTime = FUN_08000e30();\n      if (5000 < (uint)(currentTime - startTime)) {\n        return 3;\n      }\n    }\n  }\n  if (numConfigurations < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)numConfigurations);\n    if (numConfigurations != (numConfigurations & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*deviceConfig & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | deviceConfig[3];\n  }\n  if ((*deviceConfig & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | deviceConfig[4] << 3;\n  }\n  status = FUN_080023b4();\n  DAT_2000002c = status >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "configure_device_08002488",
                "param_1": "deviceConfig",
                "param_2": "numConfigurations",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_initial_value_080025e0",
            "code": "\nundefined4 get_initial_value_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_initial_value_080025e0"
            },
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "get_shifted_value_080025ec",
            "code": "\n\n\nuint getShiftedValue_080025ec(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "get_shifted_value_080025ec",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "shift_result_by_offset_0800260c",
            "code": "\n\n\nuint shiftResultByOffset_0800260c(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "shift_result_by_offset_0800260c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "update_flags_and_state_0800262c",
            "code": "\n\n\nvoid updateFlagsAndState_0800262c(int *flagsPointer)\n\n{\n  if (((*(uint *)(*flagsPointer + 0xc) & 0x100) != 0) && ((*(uint *)(*flagsPointer + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(uint *)(*flagsPointer + 0xc) = *(uint *)(*flagsPointer + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*flagsPointer + 0xc) & 0x200) != 0) && ((*(uint *)(*flagsPointer + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(flagsPointer);\n    *(uint *)(*flagsPointer + 0xc) = *(uint *)(*flagsPointer + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)flagsPointer + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "update_flags_and_state_0800262c",
                "param_1": "flagsPointer"
            },
            "calling": [],
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "update_data_0800268e",
            "code": "\nvoid updateData_0800268e(uint **data)\n\n{\n  uint *pointer1;\n  \n  *(undefined *)((int)data + 0x39) = 2;\n  pointer1 = *data;\n  if ((pointer1[8] & 0x1111) == 0) {\n    if ((pointer1[8] & 0x444) == 0) {\n      *pointer1 = *pointer1 & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(data);\n  *(undefined *)((int)data + 0x39) = 0;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "update_data_0800268e",
                "param_1": "data",
                "puVar1": "pointer1"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "process_data_080026ce",
            "code": "\nvoid processData_080026ce(int *data)\n\n{\n  int value;\n  \n  value = *data;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(data + 6) = 1;\n    if ((*(uint *)(*data + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(data);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(data + 6) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(data + 6) = 2;\n    if ((*(uint *)(*data + 0x18) & 0x300) == 0) {\n      FUN_08003754(data);\n      FUNC_080026ca(data);\n    }\n    else {\n      FUNC_080026c8(data);\n    }\n    *(undefined *)(data + 6) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(data + 6) = 4;\n    if ((*(uint *)(*data + 0x1c) & 3) == 0) {\n      FUN_08003754(data);\n      FUNC_080026ca(data);\n    }\n    else {\n      FUNC_080026c8(data);\n    }\n    *(undefined *)(data + 6) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(data + 6) = 8;\n    if ((*(uint *)(*data + 0x1c) & 0x300) == 0) {\n      FUN_08003754(data);\n      FUNC_080026ca(data);\n    }\n    else {\n      FUNC_080026c8(data);\n    }\n    *(undefined *)(data + 6) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_0800376e(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800293e(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_080026cc(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_0800293c(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "process_data_080026ce",
                "param_1": "data",
                "iVar1": "value"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800293c",
                "FUN_080026c8",
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_0800293e",
                "FUN_0800376e",
                "FUN_080026cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "set_bit_value_08002848",
            "code": "\nvoid setBitValue_08002848(int objectAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(objectAddress + 0x20) = *(uint *)(objectAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(objectAddress + 0x20) = *(uint *)(objectAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "set_bit_value_08002848",
                "param_1": "objectAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "check_and_modify_data_08002864",
            "code": "\nundefined4 check_and_modify_data_08002864(uint **ptr_to_uint_ptr,undefined4 value_to_pass)\n\n{\n  bool is_valid_address;\n  uint *ptr_to_uint;\n  \n  FUN_08002848(*ptr_to_uint_ptr,value_to_pass,0);\n  ptr_to_uint = *ptr_to_uint_ptr;\n  if (ptr_to_uint == (uint *)0x40010000) {\n    is_valid_address = true;\n  }\n  else if (ptr_to_uint == (uint *)0x40010400) {\n    is_valid_address = true;\n  }\n  else {\n    is_valid_address = false;\n  }\n  if (((is_valid_address) && ((ptr_to_uint[8] & 0x1111) == 0)) && ((ptr_to_uint[8] & 0x444) == 0)) {\n    ptr_to_uint[0x11] = ptr_to_uint[0x11] & 0xffff7fff;\n  }\n  ptr_to_uint = *ptr_to_uint_ptr;\n  if (((ptr_to_uint[8] & 0x1111) == 0) && ((ptr_to_uint[8] & 0x444) == 0)) {\n    *ptr_to_uint = *ptr_to_uint & 0xfffffffe;\n  }\n  *(undefined *)((int)ptr_to_uint_ptr + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "check_and_modify_data_08002864",
                "param_1": "ptr_to_uint_ptr",
                "param_2": "value_to_pass",
                "bVar1": "is_valid_address",
                "puVar2": "ptr_to_uint"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "update_bitwise_operations_080028d4",
            "code": "\nvoid updateBitwiseOperations_080028d4(int dataAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "update_bitwise_operations_080028d4",
                "param_1": "dataAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_flags_080028f0",
            "code": "\nundefined4 updateFlags_080028f0(uint **dataArray,undefined4 param2)\n\n{\n  uint *dataPointer;\n  \n  FUN_080028d4(*dataArray,param2,0);\n  dataPointer = *dataArray;\n  if (((dataPointer[8] & 0x1111) == 0) && ((dataPointer[8] & 0x444) == 0)) {\n    dataPointer[0x11] = dataPointer[0x11] & 0xffff7fff;\n  }\n  dataPointer = *dataArray;\n  if (((dataPointer[8] & 0x1111) == 0) && ((dataPointer[8] & 0x444) == 0)) {\n    *dataPointer = *dataPointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_flags_080028f0",
                "param_1": "dataArray",
                "param_2": "param2",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "update_values_08002940",
            "code": "\nvoid updateValues_08002940(int *dataPointer)\n\n{\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xfffffedf;\n  *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "update_values_08002940",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_input_0800295c",
            "code": "\nundefined4 process_input_0800295c(int *input_data)\n\n{\n  short remaining_attempts;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)input_data + 0x39) != '!') {\n    return 2;\n  }\n  if (input_data[2] == 0x1000) {\n    *(uint *)(*input_data + 4) = *(ushort *)input_data[8] & 0x1ff;\n    if (input_data[4] == 0) {\n      input_data[8] = input_data[8] + 2;\n    }\n    else {\n      input_data[8] = input_data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)input_data[8];\n    input_data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*input_data + 4) = (uint)*byte_ptr;\n  }\n  remaining_attempts = *(short *)((int)input_data + 0x26) + -1;\n  *(short *)((int)input_data + 0x26) = remaining_attempts;\n  if (remaining_attempts == 0) {\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xffffff7f;\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_input_0800295c",
                "param_1": "input_data",
                "sVar1": "remaining_attempts",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_value_080029c8",
            "code": "\nvoid calculateValue_080029c8(int *valueArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int baseAddress;\n  \n  *(uint *)(*valueArray + 0x10) = *(uint *)(*valueArray + 0x10) & 0xffffcfff | valueArray[3];\n  *(uint *)(*valueArray + 0xc) =\n       *(uint *)(*valueArray + 0xc) & 0xffff69f3 | valueArray[2] | valueArray[4] | valueArray[5] | valueArray[7];\n  *(uint *)(*valueArray + 0x14) = *(uint *)(*valueArray + 0x14) & 0xfffffcff | valueArray[6];\n  if (valueArray[7] == 0x8000) {\n    baseAddress = *valueArray;\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      result1 = FUN_080025ec();\n      result6 = valueArray[1];\n      result2 = FUN_080025ec();\n      result7 = valueArray[1];\n      result3 = FUN_080025ec();\n      result8 = valueArray[1];\n      result4 = FUN_080025ec();\n      result9 = valueArray[1];\n      result5 = FUN_080025ec();\n      *(uint *)(baseAddress + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(result4 * 0x19) / (uint)(result9 << 1) +\n                          (int)(((ulonglong)(uint)(result5 * 0x19) /\n                                (ulonglong)(uint)(valueArray[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(result2 * 0x19) / (uint)(result7 << 1) +\n             (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 1)) / 100) * 0x10;\n      return;\n    }\n    result1 = FUN_0800260c();\n    result6 = valueArray[1];\n    result2 = FUN_0800260c();\n    result7 = valueArray[1];\n    result3 = FUN_0800260c();\n    result8 = valueArray[1];\n    result4 = FUN_0800260c();\n    result9 = valueArray[1];\n    result5 = FUN_0800260c();\n    *(uint *)(baseAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 1) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(valueArray[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 1) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 1)) / 100) * 0x10;\n    return;\n  }\n  baseAddress = *valueArray;\n  if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n    result1 = FUN_080025ec();\n    result6 = valueArray[1];\n    result2 = FUN_080025ec();\n    result7 = valueArray[1];\n    result3 = FUN_080025ec();\n    result8 = valueArray[1];\n    result4 = FUN_080025ec();\n    result9 = valueArray[1];\n    result5 = FUN_080025ec();\n    *(uint *)(baseAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(valueArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result1 = FUN_0800260c();\n  result6 = valueArray[1];\n  result2 = FUN_0800260c();\n  result7 = valueArray[1];\n  result3 = FUN_0800260c();\n  result8 = valueArray[1];\n  result4 = FUN_0800260c();\n  result9 = valueArray[1];\n  result5 = FUN_0800260c();\n  *(uint *)(baseAddress + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                      (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(valueArray[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n         (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_value_080029c8",
                "param_1": "valueArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "baseAddress"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "check_param_validity_08002d0c",
            "code": "\nundefined4 checkParamValidity_08002d0c(uint **paramArray,uint mask,uint validFlag,int value,uint maxDifference)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**paramArray) == 0) != validFlag) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (result = FUN_08000e30(), (uint)(result - value) <= maxDifference))));\n  (*paramArray)[3] = (*paramArray)[3] & 0xfffffe5f;\n  (*paramArray)[5] = (*paramArray)[5] & 0xfffffffe;\n  *(undefined *)((int)paramArray + 0x39) = 0x20;\n  *(undefined *)((int)paramArray + 0x3a) = 0x20;\n  *(undefined *)(paramArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "check_param_validity_08002d0c",
                "param_1": "paramArray",
                "param_2": "mask",
                "param_3": "validFlag",
                "param_4": "value",
                "param_5": "maxDifference",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "initialize_data_08002d72",
            "code": "\nundefined4 initializeData_08002d72(int *dataPtr)\n\n{\n  if (dataPtr != (int *)0x0) {\n    if (*(char *)((int)dataPtr + 0x39) == '\\0') {\n      *(undefined *)(dataPtr + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)dataPtr + 0x39) = 0x24;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffdfff;\n    FUN_080029c8(dataPtr);\n    *(uint *)(*dataPtr + 0x10) = *(uint *)(*dataPtr + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x2000;\n    flagValue = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x20;\n    *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "initialize_data_08002d72",
                "param_1": "dataPtr",
                "param_1[0xf]": "flagValue"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "decode_and_update_data_08002dd0",
            "code": "\nundefined4 decode_and_update_data_08002dd0(int *data_array,ushort *source_array,int array_length,undefined4 param_4)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_array + 0x39) == ' ') {\n    if (source_array == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (array_length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_array + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_array + 0xe) = 1;\n      data_array[0xf] = 0;\n      *(undefined *)((int)data_array + 0x39) = 0x21;\n      return_value = FUN_08000e30();\n      *(short *)(data_array + 9) = (short)array_length;\n      *(short *)((int)data_array + 0x26) = (short)array_length;\n      while (*(short *)((int)data_array + 0x26) != 0) {\n        *(short *)((int)data_array + 0x26) = *(short *)((int)data_array + 0x26) + -1;\n        if (data_array[2] == 0x1000) {\n          result = FUN_08002d0c(data_array,0x80,0,return_value,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_array + 4) = *source_array & 0x1ff;\n          if (data_array[4] == 0) {\n            source_array = source_array + 1;\n          }\n          else {\n            source_array = (ushort *)((int)source_array + 1);\n          }\n        }\n        else {\n          result = FUN_08002d0c(data_array,0x80,0,return_value,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_array + 4) = (uint)*(byte *)source_array;\n          source_array = (ushort *)((int)source_array + 1);\n        }\n      }\n      result = FUN_08002d0c(data_array,0x40,0,return_value,param_4);\n      if (result == 0) {\n        *(undefined *)((int)data_array + 0x39) = 0x20;\n        *(undefined *)(data_array + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "decode_and_update_data_08002dd0",
                "param_1": "data_array",
                "param_2": "source_array",
                "param_3": "array_length",
                "iVar1": "result",
                "uVar2": "return_value"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "check_and_set_data_08002eb2",
            "code": "\nundefined4 checkAndSetData_08002eb2(int *dataPtr,int value1,int value2)\n\n{\n  if (*(char *)((int)dataPtr + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(dataPtr + 0xe) != '\\x01') {\n    dataPtr[8] = value1;\n    *(short *)(dataPtr + 9) = (short)value2;\n    *(short *)((int)dataPtr + 0x26) = (short)value2;\n    dataPtr[0xf] = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x21;\n    *(undefined *)(dataPtr + 0xe) = 0;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "check_and_set_data_08002eb2",
                "param_1": "dataPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "dataPtr[8]",
                "param_1[0xf]": "dataPtr[0xf]"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "check_and_set_values_08002efa",
            "code": "\nundefined4 checkAndSetValues_08002efa(int *array,int value1,int value2)\n\n{\n  if (*(char *)((int)array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(array + 0xe) != '\\x01') {\n    array[10] = value1;\n    *(short *)(array + 0xb) = (short)value2;\n    *(short *)((int)array + 0x2e) = (short)value2;\n    array[0xf] = 0;\n    *(undefined *)((int)array + 0x3a) = 0x22;\n    *(undefined *)(array + 0xe) = 0;\n    *(uint *)(*array + 0x14) = *(uint *)(*array + 0x14) | 1;\n    *(uint *)(*array + 0xc) = *(uint *)(*array + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "check_and_set_values_08002efa",
                "param_1": "array",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "clear_flag_and_set_char_08002f4c",
            "code": "\nundefined4 clearFlagAndSetChar_08002f4c(int *flagPointer)\n\n{\n  *(uint *)(*flagPointer + 0xc) = *(uint *)(*flagPointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)flagPointer + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "clear_flag_and_set_char_08002f4c",
                "param_1": "flagPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "process_input_08002f66",
            "code": "\nundefined4 processInput_08002f66(int *inputPtr)\n\n{\n  byte *bytePtr;\n  short counter;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)inputPtr + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (inputPtr[2] == 0x1000) {\n    if (inputPtr[4] == 0) {\n      *(ushort *)inputPtr[10] = (ushort)((uint)(*(int *)(*inputPtr + 4) << 0x17) >> 0x17);\n      inputPtr[10] = inputPtr[10] + 2;\n    }\n    else {\n      *(ushort *)inputPtr[10] = (ushort)*(undefined4 *)(*inputPtr + 4) & 0xff;\n      inputPtr[10] = inputPtr[10] + 1;\n    }\n  }\n  else if (inputPtr[4] == 0) {\n    undefinedPtr = (undefined *)inputPtr[10];\n    inputPtr[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*inputPtr + 4);\n  }\n  else {\n    bytePtr = (byte *)inputPtr[10];\n    inputPtr[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*inputPtr + 4) & 0x7f;\n  }\n  counter = *(short *)((int)inputPtr + 0x2e) + -1;\n  *(short *)((int)inputPtr + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*inputPtr + 0xc) = *(uint *)(*inputPtr + 0xc) & 0xfffffedf;\n  *(uint *)(*inputPtr + 0x14) = *(uint *)(*inputPtr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputPtr + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "process_input_08002f66",
                "param_1": "inputPtr",
                "pbVar1": "bytePtr",
                "sVar2": "counter",
                "puVar3": "undefinedPtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "check_flags_and_perform_actions_08002ffc",
            "code": "\nvoid check_flags_and_perform_actions_08002ffc(uint **param_array)\n\n{\n  int result;\n  uint param_array_3rd_value;\n  uint *param_array_pointer;\n  uint param_array_5th_value;\n  uint param_array_1st_value;\n  \n  param_array_pointer = *param_array;\n  param_array_1st_value = *param_array_pointer;\n  param_array_3rd_value = param_array_pointer[3];\n  if ((((param_array_1st_value & 0xf) == 0) && ((param_array_1st_value & 0x20) != 0)) && ((param_array_3rd_value & 0x20) != 0)) {\n    FUN_08002f66(param_array);\n    return;\n  }\n  if (((param_array_1st_value & 0xf) == 0) || ((param_array_5th_value = param_array_pointer[5] & 1, param_array_5th_value == 0 && ((param_array_3rd_value & 0x120) == 0)))) {\n    if (((param_array_1st_value & 0x80) != 0) && ((param_array_3rd_value & 0x80) != 0)) {\n      FUN_0800295c(param_array);\n      return;\n    }\n    if (((param_array_1st_value & 0x40) != 0) && ((param_array_3rd_value & 0x40) != 0)) {\n      FUN_08002f4c(param_array);\n    }\n  }\n  else {\n    if (((param_array_1st_value & 1) != 0) && ((param_array_3rd_value & 0x100) != 0)) {\n      param_array[0xf] = (uint *)((uint)param_array[0xf] | 1);\n    }\n    if (((param_array_1st_value & 4) != 0) && (param_array_5th_value != 0)) {\n      param_array[0xf] = (uint *)((uint)param_array[0xf] | 2);\n    }\n    if (((param_array_1st_value & 2) != 0) && (param_array_5th_value != 0)) {\n      param_array[0xf] = (uint *)((uint)param_array[0xf] | 4);\n    }\n    if (((param_array_1st_value & 8) != 0) && (param_array_5th_value != 0)) {\n      param_array[0xf] = (uint *)((uint)param_array[0xf] | 8);\n    }\n    if (param_array[0xf] != (uint *)0x0) {\n      if (((param_array_1st_value & 0x20) != 0) && ((param_array_3rd_value & 0x20) != 0)) {\n        FUN_08002f66(param_array);\n      }\n      if ((((uint)param_array[0xf] & 8) == 0) && (((*param_array)[5] & 0x40) == 0)) {\n        FUNC_08003f94(param_array);\n        param_array[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(param_array);\n      param_array_pointer = *param_array;\n      if ((param_array_pointer[5] & 0x40) == 0) {\n        FUNC_08003f94(param_array);\n        return;\n      }\n      param_array_pointer[5] = param_array_pointer[5] & 0xffffffbf;\n      if (param_array[0xd] == (uint *)0x0) {\n        FUNC_08003f94(param_array);\n        return;\n      }\n      param_array[0xd][0x14] = (uint)&LAB_0800311c_1;\n      result = FUN_08000f8c(param_array[0xd]);\n      if (result != 0) {\n        (*(code *)param_array[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "check_flags_and_perform_actions_08002ffc",
                "param_1": "param_array",
                "iVar1": "result",
                "uVar2": "param_array_3rd_value",
                "puVar3": "param_array_pointer",
                "uVar4": "param_array_5th_value",
                "uVar5": "param_array_1st_value"
            },
            "calling": [],
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002940",
                "FUN_08002f4c",
                "FUN_08000f8c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_bytes_0800312c",
            "code": "\nbyte combine_bytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "retrieve_bit_08003138",
            "code": "\nuint retrieveBit_08003138(uint input,int address)\n\n{\n  return *(uint *)(address + ((input << 0x18) >> 0x1c) * 4) >> (input & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "retrieve_bit_08003138",
                "param_1": "input",
                "param_2": "address"
            },
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_bit_in_array_0800314e",
            "code": "\nvoid setBitInArray_0800314e(uint inputValue,int arrayAddress)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedIndex * 4) = *(uint *)(arrayAddress + shiftedIndex * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_bit_in_array_0800314e",
                "param_1": "inputValue",
                "param_2": "arrayAddress",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "update_bit_0800316c",
            "code": "\nvoid updateBit_0800316c(uint bitPosition,int arrayAddress)\n\n{\n  uint index;\n  \n  index = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + index * 4) = *(uint *)(arrayAddress + index * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "update_bit_0800316c",
                "param_1": "bitPosition",
                "param_2": "arrayAddress",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "map_param_to_value_0800318c",
            "code": "\nundefined4 mapParamToValue_0800318c(undefined4 param)\n\n{\n  switch(param) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "map_param_to_value_0800318c",
                "param_1": "param"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_flag_and_return_address_080031fc",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_080031fc(undefined4 flagIndex)\n\n{\n  undefined4 baseAddress;\n  \n  switch(flagIndex) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    baseAddress = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    baseAddress = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    baseAddress = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    baseAddress = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    baseAddress = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    baseAddress = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    baseAddress = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    baseAddress = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    baseAddress = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    baseAddress = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    baseAddress = 0x40022800;\n    break;\n  default:\n    baseAddress = 0;\n  }\n  return baseAddress;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_flag_and_return_address_080031fc",
                "param_1": "flagIndex",
                "uVar1": "baseAddress"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_result_validity_08003380",
            "code": "\nundefined4 check_result_validity_08003380(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input_param1,&DAT_08005a18,input_param3,input_param4,input_param4);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_result_validity_08003380",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "determine_return_value_0800339c",
            "code": "\nundefined4 determineReturnValue_0800339c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  uint shiftedResult;\n  \n  result = FUN_0800354a(input_1,&DAT_08005a3c,input_3,input_4,input_4);\n  shiftedResult = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedResult == 3) {\n    return 8;\n  }\n  if (shiftedResult != 4) {\n    if (shiftedResult != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "determine_return_value_0800339c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_memory_protection_flag_080033c8",
            "code": "\n\n\nvoid clearMemoryProtectionFlag_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_memory_protection_flag_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "process_binary_080033d8",
            "code": "\nvoid processBinary_080033d8(undefined4 input)\n\n{\n  int result;\n  int array [5];\n  \n  array[0] = FUN_080034f4(input,&DAT_08005a18);\n  if ((array[0] != 0) && ((result = FUN_08003380(input), result == 0 || (result == 0x10)))) {\n    FUN_08000f72(array,result);\n    FUN_08000f56(array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "process_binary_080033d8",
                "param_1": "input",
                "iVar1": "result",
                "local_1c": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08003380",
                "FUN_08000f72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "initialize_0800340c",
            "code": "\nvoid initialize_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "initialize_0800340c"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "execute_function_08003414",
            "code": "\nvoid executeFunction_08003414(undefined4 input)\n\n{\n  int result;\n  uint flags;\n  int results [16];\n  \n  results[0] = FUN_080034f4(input,&DAT_08005a3c);\n  if ((results[0] != 0) &&\n     ((((result = FUN_0800339c(input), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_0800354a(input,&DAT_08005a3c);\n    if ((flags & 0x100000) == 0) {\n      FUN_08002864(results,result);\n    }\n    else {\n      FUN_080028f0(results,result);\n    }\n    FUN_0800268e(results);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "execute_function_08003414",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "flags",
                "local_4c": "results"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_080034f4",
                "FUN_08002864",
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_application_0800346c",
            "code": "\nvoid initialize_application_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_application_0800346c"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "initialize_program_08003476",
            "code": "\nvoid initialize_program_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "initialize_program_08003476"
            },
            "calling": [],
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "initialize_data_08003486",
            "code": "\nvoid initializeData_08003486(uint inputValue,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  uint bitMask;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  \n  result = FUN_080031fc((inputValue << 0x18) >> 0x1c);\n  bitMask = 1 << (inputValue & 0xf) & 0xffff;\n  localVar4 = 2;\n  localVar2 = param2;\n  localVar3 = param3;\n  FUN_08000fb4(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "initialize_data_08003486",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result",
                "local_24": "bitMask",
                "local_20": "localVar2",
                "local_1c": "localVar3",
                "local_18": "localVar4"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "execute_conditional_operation_080034b6",
            "code": "\nvoid executeConditionalOperation_080034b6(undefined4 dataPointer,undefined2 inputValue,int condition,undefined4 temporaryValue)\n\n{\n  if (condition == 0) {\n    FUN_08001198(dataPointer,inputValue,0,temporaryValue,temporaryValue);\n    return;\n  }\n  FUN_08001198(dataPointer,inputValue,1,temporaryValue,temporaryValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "execute_conditional_operation_080034b6",
                "param_1": "dataPointer",
                "param_2": "inputValue",
                "param_3": "condition",
                "param_4": "temporaryValue"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_080034ce",
            "code": "\nvoid initialize_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_080034ce"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_value_index_080034da",
            "code": "\nundefined4 find_value_index_080034da(int desired_value,short *values)\n\n{\n  while( true ) {\n    if (*values == -1) {\n      return 0;\n    }\n    if (*values == desired_value) break;\n    values = values + 6;\n  }\n  return *(undefined4 *)(values + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_value_index_080034da",
                "param_1": "desired_value",
                "param_2": "values"
            },
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_if_not_negative_080034f4",
            "code": "\nundefined4 checkIfNotNegative_080034f4(int inputValue)\n\n{\n  undefined4 result;\n  \n  if (inputValue != -1) {\n    result = FUN_080034da();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_if_not_negative_080034f4",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_value_in_array_08003506",
            "code": "\nint find_value_in_array_08003506(int value_to_find,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == value_to_find) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_value_in_array_08003506",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "check_if_non_zero_0800351e",
            "code": "\nundefined4 checkIfNonZero_0800351e(int valueToCheck)\n\n{\n  undefined4 returnValue;\n  \n  if (valueToCheck != 0) {\n    returnValue = FUN_08003506();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "check_if_non_zero_0800351e",
                "param_1": "valueToCheck",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_index_0800352e",
            "code": "\nundefined4 find_value_index_0800352e(int target_value,short *array_ptr)\n\n{\n  while( true ) {\n    if (*array_ptr == -1) {\n      index 0xffffffff;\n    }\n    if (*array_ptr == target_value) break;\n    array_ptr = array_ptr + 6;\n  }\n  index *(undefined4 *)(array_ptr + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_index_0800352e",
                "param_1": "target_value",
                "param_2": "array_ptr",
                "return": "index"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "check_return_value_0800354a",
            "code": "\nundefined4 checkReturnValue_0800354a(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800352e();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "check_return_value_0800354a",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003380",
                "FUN_08003978"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "find_value_in_array_0800355e",
            "code": "\nundefined4 find_value_in_array_0800355e(int value_to_find,short *array)\n\n{\n  if (value_to_find == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value_to_find == *array) break;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "find_value_in_array_0800355e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "compare_and_return_08003582",
            "code": "\nint compare_and_return_08003582(int result,int value_2)\n\n{\n  if (result != value_2) {\n    if (result == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return result;\n    }\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003582": "compare_and_return_08003582",
                "param_1": "result",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "execute_callback_08003594",
            "code": "\nvoid executeCallback_08003594(void)\n\n{\n  if (DAT_20000188 != (code *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "execute_callback_08003594"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_hardware_080035bc",
            "code": "\n\n\nvoid initializeHardware_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_hardware_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "clear_data_for_code_080035fc",
            "code": "\n\n\nvoid clearDataForCode_080035fc(int *param_1)\n\n{\n  if (*param_1 == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*param_1 == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*param_1 == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*param_1 == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*param_1 == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*param_1 == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*param_1 == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*param_1 == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*param_1 == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*param_1 == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*param_1 == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*param_1 == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*param_1 == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*param_1 == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "clear_data_for_code_080035fc"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "subtract_four_08003750",
            "code": "\nint subtractFour_08003750(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "subtract_four_08003750",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "execute_function_if_condition_met_08003754",
            "code": "\nvoid executeFunctionIfConditionMet_08003754(int inputValue)\n\n{\n  int functionAddress;\n  \n  functionAddress = FUN_08003750();\n  if ((*(code **)(functionAddress + 0x48) != (code *)0x0) && (*(char *)(inputValue + 0x18) == '\\x01')) {\n    (**(code **)(functionAddress + 0x48))(functionAddress,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "execute_function_if_condition_met_08003754",
                "param_1": "inputValue",
                "iVar1": "functionAddress"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "execute_callback_function_0800376e",
            "code": "\nvoid executeCallbackFunction_0800376e(void)\n\n{\n  int result;\n  \n  result = FUN_08003750();\n  if (*(code **)(result + 0x44) != (code *)0x0) {\n    (**(code **)(result + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "execute_callback_function_0800376e",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_call_functions_0800377c",
            "code": "\nvoid check_and_call_functions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_call_functions_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtractFour_0800387c(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003880",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "process_parameters_08003880",
            "code": "\nvoid processParameters_08003880(int inputParam1,int inputParam2,int inputParam3,undefined4 inputParam4)\n\n{\n  int localVar1;\n  \n  localVar1 = FUN_0800387c();\n  if (inputParam3 == *(int *)(inputParam1 + 0xc)) {\n    if (inputParam2 == 0) {\n      *(undefined *)(localVar1 + 0x88) = 0;\n      *(undefined *)(localVar1 + 0x5e) = 0;\n      if (*(code **)(localVar1 + 100) != (code *)0x0) {\n        (**(code **)(localVar1 + 100))();\n      }\n      FUN_08001460(inputParam1,localVar1 + 0x68,*(undefined *)(localVar1 + 0x88),8);\n      return;\n    }\n    *(undefined *)(localVar1 + 0x5e) = 1;\n    FUN_080014ec(inputParam1,localVar1 + 0x68,0x20,8,inputParam4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "process_parameters_08003880",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "localVar1"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_080014ec",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "execute_function_080038d0",
            "code": "\nvoid executeFunction_080038d0(undefined4 input)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_0800387c();\n  if (((*(code **)(functionPointer + 0x60) != (code *)0x0) && (*(char *)(functionPointer + 0x5e) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(code **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08001578(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "execute_function_080038d0",
                "param_1": "input",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_08001684",
                "FUN_08001ab0",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "check_and_execute_function_08003900",
            "code": "\nvoid checkAndExecuteFunction_08003900(undefined4 arg)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_0800387c();\n  if (*(char *)(returnValue + 0x5f) == '\\0') {\n    FUN_08001578(arg);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "check_and_execute_function_08003900",
                "param_1": "arg",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "configure_uart_pins_08003978",
            "code": "\n\n\nvoid configureUARTPins_08003978(int *pinConfig)\n\n{\n  int uart1Pin;\n  int uart2Pin;\n  undefined4 uart1Config;\n  uint uart2Config;\n  uint uart1PinMask;\n  uint uart2PinMask;\n  uint uart2PinShift;\n  undefined4 uart1PinShift;\n  uint uart2PinShiftAmount;\n  \n  if (pinConfig != (int *)0x0) {\n    uart1Pin = FUN_080034f4((int)*(short *)(pinConfig + 0x16),&DAT_08005ca0);\n    uart2Pin = FUN_080034f4((int)*(short *)((int)pinConfig + 0x5a),&DAT_08005c10);\n    if ((uart2Pin == 0) || (uart1Pin == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uart2Pin);\n    }\n    else {\n      uart1Pin = FUN_08003582(uart1Pin);\n      *pinConfig = uart1Pin;\n      if (uart1Pin == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart1Pin == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(pinConfig + 0x11) = 0;\n          *(undefined *)(pinConfig + 0x17) = 0x25;\n        }\n        else if (uart1Pin == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(pinConfig + 0x11) = 1;\n          *(undefined *)(pinConfig + 0x17) = 0x26;\n        }\n        else if (uart1Pin == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(pinConfig + 0x11) = 2;\n          *(undefined *)(pinConfig + 0x17) = 0x27;\n        }\n        else if (uart1Pin == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(pinConfig + 0x11) = 3;\n          *(undefined *)(pinConfig + 0x17) = 0x34;\n        }\n        else if (uart1Pin == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(pinConfig + 0x11) = 4;\n          *(undefined *)(pinConfig + 0x17) = 0x35;\n        }\n        else if (uart1Pin == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(pinConfig + 0x11) = 5;\n          *(undefined *)(pinConfig + 0x17) = 0x47;\n        }\n        else if (uart1Pin == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(pinConfig + 0x11) = 6;\n          *(undefined *)(pinConfig + 0x17) = 0x52;\n        }\n        else if (uart1Pin == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(pinConfig + 0x11) = 7;\n          *(undefined *)(pinConfig + 0x17) = 0x53;\n        }\n        uart1Config = FUN_080031fc((uint)((int)*(short *)((int)pinConfig + 0x5a) << 0x18) >> 0x1c);\n        uart2Config = FUN_0800354a((int)*(short *)((int)pinConfig + 0x5a),&DAT_08005c10);\n        uart1PinMask = 1 << (*(ushort *)((int)pinConfig + 0x5a) & 0xf) & 0xffff;\n        uart2PinMask = (uart2Config >> 3 & 1) << 4 | uart2Config & 7;\n        uart2PinShift = (uart2Config << 0x1a) >> 0x1e;\n        uart2PinShiftAmount = (uart2Config << 0x11) >> 0x19;\n        uart1PinShift = 3;\n        FUN_08000fb4(uart1Config,&uart1PinMask);\n        uart1Config = FUN_080031fc((uint)((int)*(short *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        uart2Config = FUN_0800354a((int)*(short *)(pinConfig + 0x16),&DAT_08005ca0);\n        uart1PinMask = 1 << (*(ushort *)(pinConfig + 0x16) & 0xf) & 0xffff;\n        uart2PinMask = (uart2Config >> 3 & 1) << 4 | uart2Config & 7;\n        uart2PinShift = (uart2Config << 0x1a) >> 0x1e;\n        FUN_08000fb4(uart1Config,&uart1PinMask);\n        (&DAT_200002b4)[*(byte *)(pinConfig + 0x11)] = pinConfig + 1;\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = pinConfig[0x12];\n        pinConfig[3] = pinConfig[0x13];\n        pinConfig[4] = pinConfig[0x14];\n        pinConfig[5] = pinConfig[0x15];\n        pinConfig[6] = 0xc;\n        pinConfig[7] = 0;\n        pinConfig[8] = 0;\n        FUN_08002d72(pinConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "configure_uart_pins_08003978",
                "param_1": "pinConfig",
                "iVar1": "uart1Pin",
                "iVar2": "uart2Pin",
                "uVar3": "uart1Config",
                "uVar4": "uart2Config",
                "local_2c": "uart1PinMask",
                "local_28": "uart2PinMask",
                "local_24": "uart2PinShift",
                "local_20": "uart1PinShift",
                "local_1c": "uart2PinShiftAmount"
            },
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08003582",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08004fdc",
                "FUN_0800354a",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_data_08003cc8",
            "code": "\nvoid initializeData_08003cc8(void)\n\n{\n  int result;\n  undefined4 tempVar;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    tempVar = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(tempVar,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "tempVar"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "find_valid_entry_08003d18",
            "code": "\nuint find_valid_entry_08003d18(undefined4 input_param,uint max_value)\n\n{\n  int initial_value;\n  int result;\n  uint counter;\n  \n  initial_value = FUN_08000e30();\n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 10 &&\n      (((&DAT_200002b4)[counter] == 0 ||\n       (result = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[counter] != result))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (9 < counter) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000074;\n  }\n  do {\n    result = FUN_08002dd0((&DAT_200002b4)[counter],input_param,max_value & 0xffff,1000);\n    if (result == 0) {\n      return max_value;\n    }\n    result = FUN_08000e30();\n  } while ((uint)(result - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "find_valid_entry_08003d18",
                "param_1": "input_param",
                "param_2": "max_value",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08003cc8",
                "FUN_08002dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "check_flag_08003dd0",
            "code": "\nbool checkFlag_08003dd0(int flag)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte_val *)(flag + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "check_flag_08003dd0",
                "param_1": "flag",
                "uVar1": "result",
                "byte": "byte_val"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_flag_set_08003df4",
            "code": "\nbool isFlagSet_08003df4(int flagIndex)\n\n{\n  uint flagValue;\n  \n  flagValue = FUN_0800312c((&DAT_200002b4)[*(byte *)(flagIndex + 0x44)]);\n  return (flagValue & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_flag_set_08003df4",
                "param_1": "flagIndex",
                "uVar1": "flagValue"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "extract_data_08003e18",
            "code": "\nundefined4 extract_data_08003e18(int input_data,undefined *output_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (input_data == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_08003dd0();\n  if (result == 0) {\n    *output_data = *(undefined *)(input_data + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte *)(input_data + 0x44)],input_data + 0x45,1,&DAT_200002b4,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "extract_data_08003e18",
                "param_1": "input_data",
                "param_2": "output_data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "update_data_08003e54",
            "code": "\nvoid updateData_08003e54(int data,undefined4 value,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = value;\n      *(int *)(&DAT_2000023c + index * 4) = data;\n      FUN_08000e60((int)*(char *)(data + 0x5c),0,1,index,unused2);\n      FUN_08000ec4((int)*(char *)(data + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "update_data_08003e54",
                "param_1": "data",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08000e60",
                "FUN_08003dd0",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_data_08003eac",
            "code": "\nvoid updateData_08003eac(int dataPtr,undefined4 newValue)\n\n{\n  byte index;\n  \n  if (dataPtr != 0) {\n    index = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)index * 4) = newValue;\n    *(int *)(&DAT_2000028c + (uint)index * 4) = dataPtr;\n    FUN_08000e60((int)*(char *)(dataPtr + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(dataPtr + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 0x68) + (uint)*(ushort *)(dataPtr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_data_08003eac",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "index"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08000e60",
                "FUN_08000ec4",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_index_08003f00",
            "code": "\nuint find_index_08003f00(int input_value)\n\n{\n  uint index;\n  \n  if (input_value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (input_value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_index_08003f00",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_control_function_08003f24",
            "code": "\nvoid executeControlFunction_08003f24(void)\n\n{\n  uint functionIndex;\n  \n  functionIndex = FUN_08003f00();\n  if (functionIndex < 10) {\n    (**(code **)(&DAT_20000214 + functionIndex * 4))(*(undefined4 *)(&DAT_2000023c + functionIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_control_function_08003f24",
                "uVar1": "functionIndex"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "process_data_08003f48",
            "code": "\nvoid processData_08003f48(void)\n\n{\n  uint randomIndex;\n  int returnValue;\n  int dataAddress;\n  \n  randomIndex = FUN_08003f00();\n  dataAddress = *(int *)(&DAT_2000028c + randomIndex * 4);\n  if ((randomIndex < 10) && (returnValue = (**(code **)(&DAT_20000264 + randomIndex * 4))(dataAddress), returnValue != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataAddress + 0x44)],\n                 *(int *)(dataAddress + 0x68) + (uint)*(ushort *)(dataAddress + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "process_data_08003f48",
                "uVar1": "randomIndex",
                "iVar2": "returnValue",
                "iVar3": "dataAddress"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "allocate_memory_08004094",
            "code": "\nundefined * allocate_memory_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= maximum_memory_position) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "&stack0x00000000": "maximum_memory_position"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "get_error_code_080040d0",
            "code": "\nundefined4 get_error_code_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "get_error_code_080040d0"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "set_memory_page_size_080040d6",
            "code": "\nundefined4 setMemoryPageSize_080040d6(undefined4 result,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "set_memory_page_size_080040d6",
                "param_1": "result",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "get_return_value_080040e0",
            "code": "\nundefined4 getReturnValue_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "get_return_value_080040e0"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_080040e4",
            "code": "\nundefined4 initialize_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_080040e4"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_application_080040e8",
            "code": "\nvoid initialize_application_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_application_080040e8",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "initialize_data_080040ec",
            "code": "\nvoid initializeData_080040ec(undefined4 param1,undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  FUN_08003d18(data1,data2,data2,data3,data3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "initialize_data_080040ec",
                "param_1": "param1",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "data3"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "infinite_loop_080040f8",
            "code": "\nvoid infiniteLoop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "infinite_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "set_initial_value_080040fc",
            "code": "\nundefined4 set_initial_value_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "set_initial_value_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "determine_success_0800410c",
            "code": "\nundefined4 determineSuccess_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "determine_success_0800410c"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "execute_operation_08004110",
            "code": "\nvoid executeOperation_08004110(uint index,undefined4 operationType,undefined4 param_3,undefined *buffer)\n\n{\n  int result;\n  undefined *dataPtr;\n  int value;\n  \n  if (index < 0x60) {\n    value = (int)*(short *)(&DAT_08005d3c + index * 2);\n    dataPtr = &DAT_08005d3c;\n  }\n  else {\n    value = -1;\n    dataPtr = buffer;\n  }\n  if (value != -1) {\n    result = FUN_08003138(value,&DAT_200002e0,param_3,dataPtr,buffer);\n    if (result != 0) {\n      result = FUN_0800355e(value,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(value,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(value);\n        }\n      }\n      else {\n        FUN_080033d8(value);\n      }\n      FUN_0800316c(value,&DAT_200002e0);\n    }\n    switch(operationType) {\n    case 0:\n      FUN_08003486(value,0);\n      break;\n    case 1:\n      FUN_08003486(value,1,0);\n      break;\n    case 2:\n      FUN_08003486(value,0,1);\n      break;\n    case 3:\n      FUN_08003486(value,0,2);\n    }\n    FUN_0800314e(value,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "execute_operation_08004110",
                "param_1": "index",
                "param_2": "operationType",
                "param_4": "buffer",
                "iVar1": "result",
                "puVar2": "dataPtr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_0800314e",
                "FUN_080033d8",
                "FUN_08003138",
                "FUN_08003414",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_0800316c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "decode_and_process_data_080041bc",
            "code": "\nvoid decode_and_process_data_080041bc(uint input_index,undefined4 param_A,undefined4 param_B,undefined *data_ptr)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *array_ptr;\n  uint value;\n  \n  if (input_index < 0x60) {\n    value = (uint)*(short *)(&DAT_08005d3c + input_index * 2);\n    array_ptr = &DAT_08005d3c;\n  }\n  else {\n    value = 0xffffffff;\n    array_ptr = data_ptr;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_08003138(value,&DAT_2000030c,param_B,array_ptr,data_ptr), result != 0)) {\n    shifted_value = FUN_0800318c((value << 0x18) >> 0x1c);\n    FUN_080034b6(shifted_value,1 << (value & 0xf) & 0xffff,param_A);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "decode_and_process_data_080041bc",
                "param_1": "input_index",
                "param_2": "param_A",
                "param_3": "param_B",
                "param_4": "data_ptr",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "array_ptr",
                "uVar4": "value"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_0800318c",
                "FUN_08003138",
                "FUN_080034b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "initialize_module_08004204",
            "code": "\nvoid initialize_module_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "initialize_module_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_offset_08004240",
            "code": "\nushort calculateOffset_08004240(int baseAddress)\n\n{\n  return (*(short *)(baseAddress + 0x138) + 0x40) - *(short *)(baseAddress + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_and_increment_value_080042ac",
            "code": "\nvoid updateAndIncrementValue_080042ac(int inputValue)\n\n{\n  int result;\n  ushort updatedValue;\n  undefined newValue;\n  \n  result = FUN_08003e18(inputValue,&newValue);\n  if ((result == 0) &&\n     (updatedValue = *(short *)(inputValue + 100) + 1U & 0x3f, updatedValue != *(ushort *)(inputValue + 0x66))) {\n    *(undefined *)(*(int *)(inputValue + 0x60) + (uint)*(ushort *)(inputValue + 100)) = newValue;\n    *(ushort *)(inputValue + 100) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_and_increment_value_080042ac",
                "param_1": "inputValue",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "set_and_check_value_080042e8",
            "code": "\nundefined4 setAndCheckValue_080042e8(int data,undefined value)\n\n{\n  byte byteValue;\n  byte maskedByteValue;\n  int incrementedValue;\n  \n  *(undefined *)(data + 0x10) = 1;\n  incrementedValue = *(ushort *)(data + 0x140) + 1;\n  byteValue = (byte)incrementedValue;\n  maskedByteValue = byteValue & 0x7f;\n  if (incrementedValue == 0) {\n    maskedByteValue = -(-byteValue & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(data + 0x142) == (ushort)maskedByteValue);\n  *(undefined *)(*(int *)(data + 0x13c) + (uint)*(ushort *)(data + 0x140)) = value;\n  *(ushort *)(data + 0x140) = (ushort)maskedByteValue;\n  incrementedValue = FUN_08003df4(data + 0xd4);\n  if (incrementedValue == 0) {\n    FUN_08003eac(data + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "set_and_check_value_080042e8",
                "param_1": "data",
                "param_2": "value",
                "bVar1": "byteValue",
                "bVar2": "maskedByteValue",
                "iVar3": "incrementedValue"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_data_08004364",
            "code": "\nvoid initializeData_08004364(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x134) = baseAddress + 0x11;\n  *(dataType *)(baseAddress + 0x138) = 0;\n  *(dataType *)(baseAddress + 0x13a) = 0;\n  *(int *)(baseAddress + 0x13c) = baseAddress + 0x51;\n  *(dataType *)(baseAddress + 0x140) = 0;\n  *(dataType *)(baseAddress + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_data_08004364",
                "param_1": "baseAddress",
                "undefined2": "dataType"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "initialize_serial_08004388",
            "code": "\nvoid initializeSerial_08004388(int serialPort,undefined4 baudRate,byte byteFlags)\n\n{\n  uint extraout_r1;\n  byte flags_7bit;\n  int serialMode;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x144) = byteFlags;\n  flags_7bit = byteFlags & 7;\n  if (flags_7bit == 4) {\n    serialMode = 7;\n  }\n  else if (flags_7bit == 6) {\n    serialMode = 8;\n  }\n  else if (flags_7bit == 2) {\n    serialMode = 6;\n  }\n  else {\n    serialMode = 0;\n  }\n  if ((byteFlags & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    serialMode = serialMode + 1;\n  }\n  else if ((byteFlags & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    serialMode = serialMode + 1;\n  }\n  if ((byteFlags & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (serialMode == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (serialMode == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    serialMode = 0;\n  }\n  if (serialMode != 0) {\n    FUN_08003978(serialPort + 0xd4);\n    FUN_08003e54(serialPort + 0xd4,0x80042ad);\n    return;\n  }\n  jumpTable = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (extraout_r1 < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + extraout_r1 * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "initialize_serial_08004388",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "byteFlags",
                "bVar1": "flags_7bit",
                "iVar2": "serialMode",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003e54",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "set_return_value_based_on_param2_08004444",
            "code": "\nvoid setReturnValueBasedOnParam2_08004444(int result,uint value)\n\n{\n  undefined2 returnValue;\n  code *jumptable;\n  \n  if (value < 0x60) {\n    returnValue = *(undefined2 *)(&DAT_08005d3c + value * 2);\n  }\n  else {\n    returnValue = 0xffff;\n  }\n  *(undefined2 *)(result + 0x12e) = returnValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "set_return_value_based_on_param2_08004444",
                "param_1": "result",
                "param_2": "value",
                "uVar1": "returnValue",
                "UNRECOVERED_JUMPTABLE": "jumptable"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "update_value_based_on_param_08004460",
            "code": "\nvoid updateValueBasedOnParam_08004460(int baseAddress,uint index)\n\n{\n  undefined2 newValue;\n  \n  if (index < 0x60) {\n    newValue = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    newValue = 0xffff;\n  }\n  *(undefined2 *)(baseAddress + 300) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "update_value_based_on_param_08004460",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_function_0800447c",
            "code": "\nundefined4 *\ninitializeFunction_0800447c(undefined4 *outputArray,undefined4 inputValue,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 unknownValue;\n  \n  outputArray[1] = 0;\n  outputArray[2] = 1000;\n  *outputArray = &PTR_FUN_080042e8_1_08005ed4;\n  if (outputArray == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,param3,&DAT_20000338,param4);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    unknownValue = FUN_0800351e(inputValue,&DAT_08005c10);\n    *(undefined2 *)((int)outputArray + 0x12e) = unknownValue;\n    unknownValue = FUN_0800351e(inputValue,&DAT_08005ca0);\n    *(undefined2 *)(outputArray + 0x4b) = unknownValue;\n  }\n  FUN_08004364(outputArray);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_function_0800447c",
                "param_1": "outputArray",
                "param_2": "inputValue",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "unknownValue"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_and_call_function_080044d8",
            "code": "\nvoid check_and_call_function_080044d8(int input_param,int flag_param,undefined4 additional_param_1,undefined4 additional_param_2)\n\n{\n  if (input_param != 1) {\n    return;\n  }\n  if (flag_param == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,additional_param_1,0xffff,additional_param_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_and_call_function_080044d8",
                "param_1": "input_param",
                "param_2": "flag_param",
                "param_3": "additional_param_1",
                "param_4": "additional_param_2"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "initialize_data_08004544",
            "code": "\nvoid initializeData_08004544(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08005f28;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "initialize_data_08004544",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "initialize_data_08004560",
            "code": "\nvoid initializeData_08004560(int status,int value)\n\n{\n  if ((status == 1) && (value == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "initialize_data_08004560",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "combine_values_08004640",
            "code": "\nuint combineValues_08004640(int inputValue,uint flagValue)\n\n{\n  return flagValue | inputValue << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "combine_values_08004640",
                "param_1": "inputValue",
                "param_2": "flagValue"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_080007f0",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_application_08004648",
            "code": "\nvoid initialize_application_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_application_08004648"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "execute_repeating_task_08004658",
            "code": "\nvoid executeRepeatingTask_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "execute_repeating_task_08004658"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "count_set_bits_08004678",
            "code": "\nchar countSetBits_08004678(uint number)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08004678": "count_set_bits_08004678",
                "param_1": "number",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_constants_080046b4",
            "code": "\nvoid initializeConstants_080046b4(int flag,int value,undefined4 param3,undefined4 flag2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,&LAB_0800468c_1,&DAT_20000000,&DAT_20000488,flag2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_constants_080046b4",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "execute_operation_080047c0",
            "code": "\nvoid executeOperation_080047c0(int operation)\n\n{\n  int index;\n  \n  if (*(int *)(operation + 8) != 0) {\n    (**(code **)(operation + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    executeOperation_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "execute_operation_080047c0",
                "param_1": "operation",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "check_and_update_data_080047d0",
            "code": "\nvoid checkAndUpdateData_080047d0(void)\n\n{\n  int index;\n  \n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "check_and_update_data_080047d0",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_08004678",
                "FUN_080047c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "copy_parameters_080047fe",
            "code": "\nvoid copyParameters_080047fe(undefined4 dest,undefined4 src)\n\n{\n  FUN_08004844(src,dest);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "copy_parameters_080047fe",
                "param_1": "dest",
                "param_2": "src"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "print_assertion_error_08004808",
            "code": "\nvoid printAssertionError_08004808(undefined4 fileName,undefined4 lineNumber,char *condition,undefined4 functionName)\n\n{\n  undefined4 ptrCounter;\n  char *messagePrefix;\n  undefined8 returnValue;\n  undefined4 ptrParam4;\n  \n  ptrCounter = *(undefined4 *)(DAT_200000a0 + 0xc);\n  ptrParam4 = functionName;\n  if (condition == (char *)0x0) goto LAB_0800482c;\n  messagePrefix = \", function: \";\n  do {\n    FUN_08004860(ptrCounter,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",functionName,fileName,lineNumber\n                 ,messagePrefix,condition,ptrParam4);\n    returnValue = FUN_080051ac();\n    lineNumber = (undefined4)((ulonglong)returnValue >> 0x20);\n    ptrCounter = (undefined4)returnValue;\nLAB_0800482c:\n    condition = \"\";\n    messagePrefix = condition;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "print_assertion_error_08004808",
                "param_1": "fileName",
                "param_2": "lineNumber",
                "param_3": "condition",
                "param_4": "functionName",
                "uVar1": "ptrCounter",
                "pcVar2": "messagePrefix",
                "uVar3": "returnValue",
                "uVar4": "ptrParam4"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "shift_left_by32_bits_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong shiftLeftBy32Bits_08004844(undefined4 input1,uint input2)\n\n{\n  return (ulonglong)input2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "shift_left_by32_bits_08004844",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "process_data_08004860",
            "code": "\nvoid processData_08004860(undefined4 input1,undefined4 input2,undefined4 data1,undefined4 data2)\n\n{\n  undefined4 data3;\n  undefined4 data4;\n  \n  data3 = data1;\n  data4 = data2;\n  FUN_08004a84(DAT_200000a0,input1,input2,&data3,input1,&data3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "process_data_08004860",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data1",
                "param_4": "data2",
                "uStack_8": "data3",
                "uStack_4": "data4"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_function_array_08004884",
            "code": "\nvoid executeFunctionArray_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_function_array_08004884",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "initialize_memory_080048cc",
            "code": "\nvoid initializeMemory_080048cc(undefined *memory,undefined value,int size)\n\n{\n  undefined *endAddr;\n  \n  endAddr = memory + size;\n  for (; memory != endAddr; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "initialize_memory_080048cc",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endAddr"
            },
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "rearrange_data_080048dc",
            "code": "\nvoid rearrangeData_080048dc(undefined4 *outputArray,int inputLength,undefined4 param3,undefined4 param4)\n\n{\n  int *tempPtr1;\n  int **tempPtr2;\n  int **ptr1;\n  int **ptr2;\n  int **ptr3;\n  int **ptr4;\n  bool isEqual;\n  \n  if (inputLength == 0) {\n    return;\n  }\n  ptr4 = (int **)(inputLength + -4);\n  if (*(int *)(inputLength + -4) < 0) {\n    ptr4 = (int **)((int)ptr4 + *(int *)(inputLength + -4));\n  }\n  FUNC_0800557c();\n  ptr2 = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    ptr4[1] = (int *)0x0;\n    ptr1 = tempPtr2;\n    DAT_200005c8 = ptr4;\n  }\n  else {\n    ptr2 = DAT_200005c8;\n    if (ptr4 < DAT_200005c8) {\n      ptr1 = (int **)*ptr4;\n      ptr2 = (int **)((int)ptr4 + (int)ptr1);\n      isEqual = DAT_200005c8 == ptr2;\n      if (isEqual) {\n        ptr2 = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      ptr4[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = ptr4;\n      if (isEqual) {\n        ptr2 = (int **)((int)ptr2 + (int)ptr1);\n        *ptr4 = (int *)ptr2;\n      }\n    }\n    else {\n      do {\n        ptr3 = ptr2;\n        ptr2 = (int **)ptr3[1];\n        if (ptr2 == (int **)0x0) break;\n      } while (ptr2 <= ptr4);\n      ptr1 = (int **)*ptr3;\n      if ((int **)((int)ptr3 + (int)ptr1) == ptr4) {\n        ptr1 = (int **)((int)ptr1 + (int)*ptr4);\n        *ptr3 = (int *)ptr1;\n        if (ptr2 == (int **)((int)ptr3 + (int)ptr1)) {\n          tempPtr1 = *ptr2;\n          ptr2 = (int **)ptr2[1];\n          ptr3[1] = (int *)ptr2;\n          ptr1 = (int **)((int)ptr1 + (int)tempPtr1);\n          *ptr3 = (int *)ptr1;\n        }\n      }\n      else if (ptr4 < (int **)((int)ptr3 + (int)ptr1)) {\n        *outputArray = 0xc;\n      }\n      else {\n        ptr1 = (int **)((int)ptr4 + (int)*ptr4);\n        isEqual = ptr2 == ptr1;\n        if (isEqual) {\n          ptr1 = (int **)*ptr2;\n          ptr2 = (int **)ptr2[1];\n        }\n        ptr4[1] = (int *)ptr2;\n        if (isEqual) {\n          ptr1 = (int **)((int)ptr1 + (int)*ptr4);\n          *ptr4 = (int *)ptr1;\n        }\n        ptr3[1] = (int *)ptr4;\n      }\n    }\n  }\n  FUNC_0800557e(outputArray,ptr1,ptr2,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "rearrange_data_080048dc",
                "param_1": "outputArray",
                "param_2": "inputLength",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "tempPtr1",
                "extraout_r1": "tempPtr2",
                "ppiVar2": "ptr1",
                "ppiVar3": "ptr2",
                "ppiVar4": "ptr3",
                "ppiVar5": "ptr4",
                "bVar6": "isEqual"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_memory_08004978",
            "code": "\nuint allocate_memory_08004978(undefined4 *output_ptr,uint size)\n\n{\n  uint *current_chunk;\n  int difference;\n  uint *prev_chunk;\n  uint chunk_size;\n  uint *prev_chunk_next;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_chunk = DAT_200005c8;\n    prev_chunk_next = DAT_200005c8;\n    while (prev_chunk = current_chunk, prev_chunk != (uint *)0x0) {\n      chunk_size = *prev_chunk - aligned_size;\n      if (-1 < (int)chunk_size) {\n        if (chunk_size < 0xc) {\n          if (prev_chunk_next == prev_chunk) {\n            current_chunk = (uint *)prev_chunk_next[1];\n          }\n          else {\n            current_chunk = (uint *)prev_chunk[1];\n          }\n          if (prev_chunk_next != prev_chunk) {\n            prev_chunk_next[1] = (uint)current_chunk;\n            prev_chunk_next = prev_chunk;\n            current_chunk = DAT_200005c8;\n          }\n        }\n        else {\n          *prev_chunk = chunk_size;\n          *(uint *)((int)prev_chunk + chunk_size) = aligned_size;\n          prev_chunk_next = (uint *)((int)prev_chunk + chunk_size);\n          current_chunk = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      prev_chunk_next = prev_chunk;\n      current_chunk = (uint *)prev_chunk[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(output_ptr);\n    }\n    current_chunk = (uint *)FUN_0800500c(output_ptr,aligned_size);\n    if ((current_chunk != (uint *)0xffffffff) &&\n       ((prev_chunk_next = (uint *)((int)current_chunk + 3U & 0xfffffffc), current_chunk == prev_chunk_next ||\n        (difference = FUN_0800500c(output_ptr,(int)prev_chunk_next - (int)current_chunk), difference != -1)))) {\n      *prev_chunk_next = aligned_size;\n      current_chunk = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_chunk;\n      FUNC_0800557e(output_ptr);\n      aligned_size = (int)prev_chunk_next + 0xbU & 0xfffffff8;\n      difference = aligned_size - (int)(prev_chunk_next + 1);\n      if (difference != 0) {\n        *(int *)((int)prev_chunk_next + difference) = -difference;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_0800557e(output_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_memory_08004978",
                "param_1": "output_ptr",
                "param_2": "size",
                "puVar1": "current_chunk",
                "iVar2": "difference",
                "puVar3": "prev_chunk",
                "uVar4": "chunk_size",
                "puVar5": "prev_chunk_next",
                "uVar6": "aligned_size"
            },
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e",
                "FUN_0800500c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_input_08004a34",
            "code": "\nuint process_input_08004a34(int context,byte input_byte,byte **data)\n\n{\n  int temp;\n  byte *ptr1;\n  byte *ptr2;\n  uint result;\n  \n  ptr1 = data[2] + -1;\n  data[2] = ptr1;\n  if ((-1 < (int)ptr1) ||\n     (((int)data[6] <= (int)ptr1 && (ptr1 = (byte *)(uint)input_byte, ptr1 != (byte *)0xa))))\n  {\n    ptr1 = *data;\n    *data = ptr1 + 1;\n    *ptr1 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((context != 0) && (*(int *)(context + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (data == (byte **)&DAT_08005fc0) {\n    data = *(byte ***)(context + 4);\n  }\n  else if (data == (byte **)&DAT_08005fe0) {\n    data = *(byte ***)(context + 8);\n  }\n  else if (data == (byte **)&DAT_08005fa0) {\n    data = *(byte ***)(context + 0xc);\n  }\n  data[2] = data[6];\n  ptr2 = (byte *)(uint)*(ushort *)(data + 3);\n  temp = (int)ptr2 << 0x1c;\n  if (((temp < 0) && (ptr2 = data[4], ptr2 != (byte *)0x0)) ||\n     (temp = FUN_080050d0(context,data,temp,ptr2,ptr1), temp == 0)) {\n    temp = (int)*data - (int)data[4];\n    result = (uint)input_byte;\n    if ((temp < (int)data[5]) || (temp = FUN_080052cc(context,data), temp == 0)) {\n      data[2] = data[2] + -1;\n      ptr1 = *data;\n      *data = ptr1 + 1;\n      *ptr1 = input_byte;\n      if ((byte *)(temp + 1) != data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp = FUN_080052cc(context,data);\n      if (temp == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_input_08004a34",
                "param_1": "context",
                "param_2": "input_byte",
                "param_3": "data",
                "iVar1": "temp",
                "pbVar2": "ptr1",
                "pbVar3": "ptr2",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "process_data_08004a60",
            "code": "\nint process_data_08004a60(undefined4 input_value,undefined4 other_value,undefined *data_pointer,int data_length)\n\n{\n  int iteration_result;\n  undefined *end_pointer;\n  int original_length;\n  \n  end_pointer = data_pointer + data_length;\n  original_length = data_length;\n  do {\n    if (data_pointer == end_pointer) {\n      return 0;\n    }\n    iteration_result = FUN_08004a34(input_value,*data_pointer,other_value,data_length,original_length);\n    data_length = iteration_result + 1;\n    data_pointer = data_pointer + 1;\n  } while (data_length != 0);\n  return iteration_result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "param_1": "input_value",
                "param_2": "other_value",
                "param_3": "data_pointer",
                "param_4": "data_length",
                "iVar1": "iteration_result",
                "puVar2": "end_pointer",
                "iVar3": "original_length"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "process_data_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint processData_08004a84(int data_ptr,undefined4 *option_ptr,byte *input_str,int *result_ptr)\n\n{\n  int result;\n  int *result_ptr_old;\n  bool found_digit;\n  byte *curr_byte;\n  byte *next_byte;\n  int temp_var;\n  int temp_var2;\n  int *result_ptr;\n  uint option_flags;\n  int decimal_places;\n  undefined4 temp_var3;\n  int integer_part;\n  int total_length;\n  byte format_char;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined sign_flag;\n  undefined4 temp_var4;\n  \n  result_ptr = result_ptr;\n  if ((data_ptr != 0) && (*(int *)(data_ptr + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (option_ptr == &DAT_08005fc0) {\n    option_ptr = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (option_ptr == (undefined4 *)&DAT_08005fe0) {\n    option_ptr = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (option_ptr == (undefined4 *)&DAT_08005fa0) {\n    option_ptr = *(undefined4 **)(data_ptr + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(option_ptr + 3) << 0x1c)) || (option_ptr[4] == 0)) &&\n     (temp_var2 = FUN_080050d0(data_ptr,option_ptr), temp_var2 != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  curr_byte = input_str;\nLAB_08004ac6:\n  next_byte = curr_byte;\n  if (*next_byte != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  curr_byte = next_byte + 1;\n  if (*next_byte != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  temp_var2 = (int)next_byte - (int)input_str;\n  if (temp_var2 != 0) {\n    result = FUN_08004a60(data_ptr,option_ptr,input_str,temp_var2);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(option_ptr + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + temp_var2;\n  }\n  if (*next_byte == 0) goto LAB_08004c70;\n  option_flags = 0;\n  integer_part = 0;\n  decimal_places = -1;\n  temp_var3 = 0;\n  sign_flag = 0;\n  temp_var4 = 0;\n  curr_byte = next_byte + 1;\n  while( true ) {\n    temp_var2 = FUN_08000230(\"#-0+ \",*curr_byte);\n    input_str = curr_byte + 1;\n    if (temp_var2 == 0) break;\n    option_flags = 1 << (temp_var2 + 0xf7ffa094U & 0xff) | option_flags;\n    curr_byte = input_str;\n  }\n  if ((int)(option_flags << 0x1b) < 0) {\n    sign_flag = 0x20;\n  }\n  if ((int)(option_flags << 0x1c) < 0) {\n    sign_flag = 0x2b;\n  }\n  if (*curr_byte == 0x2a) {\n    result_ptr_old = result_ptr + 1;\n    temp_var2 = *result_ptr;\n    result_ptr = result_ptr_old;\n    if (temp_var2 < 0) {\n      integer_part = -temp_var2;\n      option_flags = option_flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    found_digit = false;\n    temp_var2 = integer_part;\n    input_str = curr_byte;\n    while( true ) {\n      if (9 < *input_str - 0x30) break;\n      temp_var2 = temp_var2 * 10 + (*input_str - 0x30);\n      found_digit = true;\n      input_str = input_str + 1;\n    }\n    if (!found_digit) goto LAB_08004bae;\n  }\n  integer_part = temp_var2;\nLAB_08004bae:\n  if (*input_str == 0x2e) {\n    if (input_str[1] == 0x2a) {\n      decimal_places = *result_ptr;\n      if (decimal_places < 0) {\n        decimal_places = -1;\n      }\n      input_str = input_str + 2;\n      result_ptr = result_ptr + 1;\n    }\n    else {\n      found_digit = false;\n      decimal_places = 0;\n      temp_var2 = 0;\n      while( true ) {\n        input_str = input_str + 1;\n        if (9 < *input_str - 0x30) break;\n        temp_var2 = temp_var2 * 10 + (*input_str - 0x30);\n        found_digit = true;\n      }\n      if (found_digit) {\n        decimal_places = temp_var2;\n      }\n    }\n  }\n  temp_var2 = FUN_08000230(&DAT_08005f72,*input_str,3);\n  if (temp_var2 != 0) {\n    option_flags = option_flags | 0x40 << (temp_var2 + 0xf7ffa08eU & 0xff);\n    input_str = input_str + 1;\n  }\n  format_char = *input_str;\n  input_str = input_str + 1;\n  temp_var2 = FUN_08000230(\"efgEFG\",format_char,6);\n  if (temp_var2 == 0) {\n    temp_var = FUN_08004d9c(data_ptr,&option_flags,option_ptr,0x8004a61,&result_ptr);\n    if (temp_var == -1) goto LAB_08004c70;\n  }\n  else {\n    result_ptr = (int *)(((int)result_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + temp_var;\n  curr_byte = input_str;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "process_data_08004a84",
                "param_1": "data_ptr",
                "param_2": "option_ptr",
                "param_3": "input_str",
                "param_4": "result_ptr",
                "iVar1": "result",
                "piVar2": "result_ptr_old",
                "bVar3": "found_digit",
                "pbVar4": "curr_byte",
                "pbVar5": "next_byte",
                "unaff_r9": "temp_var",
                "iVar6": "temp_var2",
                "local_8c": "result_ptr",
                "local_88": "option_flags",
                "local_84": "decimal_places",
                "local_80": "temp_var3",
                "local_7c": "integer_part",
                "local_74": "total_length",
                "local_70": "format_char",
                "local_6f": "space_flag",
                "local_6e": "plus_flag",
                "local_45": "sign_flag",
                "local_30": "temp_var4"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_08004a60",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "process_data_08004cb0",
            "code": "\nundefined4\nprocess_data_08004cb0(undefined4 input_value,uint *array,uint *output_length,undefined4 param_4,code *process_fn)\n\n{\n  int i;\n  int j;\n  uint max_value;\n  uint counter;\n  bool bVar5;\n  \n  max_value = array[4];\n  if ((int)array[4] < (int)array[2]) {\n    max_value = array[2];\n  }\n  *output_length = max_value;\n  if (*(char *)((int)array + 0x43) != '\\0') {\n    *output_length = max_value + 1;\n  }\n  if ((int)(*array << 0x1a) < 0) {\n    *output_length = *output_length + 2;\n  }\n  if ((*array & 6) == 0) {\n    for (i = 0; i < (int)(array[3] - *output_length); i = i + 1) {\n      j = (*process_fn)(input_value,param_4,(int)array + 0x19,1);\n      if (j == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)array + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  if ((int)(*array << 0x1a) < 0) {\n    *(undefined *)((int)array + max_value + 0x43) = 0x30;\n    *(undefined *)((int)array + max_value + 0x44) = *(undefined *)((int)array + 0x45);\n    max_value = max_value + 2;\n  }\n  i = (*process_fn)(input_value,param_4,(int)array + 0x43,max_value);\n  if (i != -1) {\n    max_value = array[3];\n    bVar5 = (*array & 6) == 4;\n    if (bVar5) {\n      max_value = max_value - *output_length;\n    }\n    if (bVar5) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    else {\n      max_value = 0;\n    }\n    if ((int)array[4] < (int)array[2]) {\n      max_value = max_value + (array[2] - array[4]);\n    }\n    counter = 0;\n    while( true ) {\n      if (max_value == counter) {\n        return 0;\n      }\n      i = (*process_fn)(input_value,param_4,(int)array + 0x1a,1);\n      if (i == -1) break;\n      counter = counter + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "process_data_08004cb0",
                "param_1": "input_value",
                "param_2": "array",
                "param_3": "output_length",
                "param_5": "process_fn",
                "iVar1": "i",
                "iVar2": "j",
                "uVar3": "max_value",
                "uVar4": "counter"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "decode_and_process_data_08004d9c",
            "code": "\nuint decode_and_process_data_08004d9c(undefined4 input_data,uint *output_data,undefined4 param,code *callback_function,uint **counter)\n\n{\n  byte byte_value;\n  int index;\n  uint *pointer;\n  int temp_index;\n  char *hex_values;\n  uint temp_value;\n  uint **pointer_pointer;\n  char **string_pointer_pointer;\n  uint unsigned_value_1;\n  uint unsigned_value_2;\n  char *current_character;\n  char *hex_string;\n  uint buffer [2];\n  \n  byte_value = *(byte *)(output_data + 6);\n  hex_string = (char *)((int)output_data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08004f56;\n          if (byte_value != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)output_data + 0x45) = 0x58;\n          hex_values = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          temp_value = *output_data;\n          pointer = *counter;\n          *counter = pointer + 1;\n          if (((temp_value & 0x80) == 0) && ((int)(temp_value << 0x19) < 0)) {\n            unsigned_value_1 = (uint)*(ushort *)pointer;\n          }\n          else {\n            unsigned_value_1 = *pointer;\n          }\n          if ((int)(temp_value << 0x1f) < 0) {\n            *output_data = temp_value | 0x20;\n          }\n          if (unsigned_value_1 == 0) {\n            *output_data = *output_data & 0xffffffdf;\n          }\n          temp_value = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)output_data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08004dcc;\n          unsigned_value_1 = *output_data;\n          pointer = *counter;\n          if ((unsigned_value_1 & 0x80) == 0) {\n            *counter = pointer + 1;\n            if ((unsigned_value_1 & 0x40) == 0) goto LAB_08004dec;\n            unsigned_value_1 = (uint)(short)*(ushort *)pointer;\n          }\n          else {\n            *counter = pointer + 1;\nLAB_08004dec:\n            unsigned_value_1 = *pointer;\n          }\n          if ((int)unsigned_value_1 < 0) {\n            unsigned_value_1 = -unsigned_value_1;\n            *(undefined *)((int)output_data + 0x43) = 0x2d;\n          }\n          hex_values = \"0123456789ABCDEF\";\n          temp_value = 10;\n        }\n        unsigned_value_2 = output_data[1];\n        output_data[2] = unsigned_value_2;\n        current_character = hex_string;\n        if ((int)unsigned_value_2 < 0) {\n          if (unsigned_value_1 != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)output_data + 0x42) = *hex_values;\n          current_character = (char *)((int)output_data + 0x42);\n        }\n        else {\n          *output_data = *output_data & 0xfffffffb;\n          if (unsigned_value_1 == 0) {\n            if (unsigned_value_2 != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              unsigned_value_2 = unsigned_value_1 / temp_value;\n              current_character = current_character + -1;\n              *current_character = hex_values[unsigned_value_1 - temp_value * unsigned_value_2];\n              unsigned_value_1 = unsigned_value_2;\n            } while (unsigned_value_2 != 0);\n          }\n        }\n        if (((temp_value == 8) && ((int)(*output_data << 0x1f) < 0)) && ((int)output_data[1] <= (int)output_data[4]))\n        {\n          current_character[-1] = '0';\n          current_character = current_character + -1;\n        }\n        output_data[4] = (int)hex_string - (int)current_character;\n        hex_string = current_character;\n        goto LAB_08004ec2;\n      }\n      pointer = *counter;\n      *counter = pointer + 1;\n      *(char *)((int)output_data + 0x42) = (char)*pointer;\nLAB_08004e2c:\n      hex_string = (char *)((int)output_data + 0x42);\n      unsigned_value_1 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08004e52:\n            unsigned_value_1 = *output_data;\n            pointer = *counter;\n            if ((unsigned_value_1 & 0x80) == 0) {\n              *counter = pointer + 1;\n              if ((unsigned_value_1 & 0x40) == 0) goto LAB_08004e60;\n              unsigned_value_1 = (uint)*(ushort *)pointer;\n            }\n            else {\n              *counter = pointer + 1;\nLAB_08004e60:\n              unsigned_value_1 = *pointer;\n            }\n            hex_values = \"0123456789ABCDEF\";\n            if (byte_value == 0x6f) {\n              temp_value = 8;\n            }\n            else {\n              temp_value = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byte_value == 0x70) {\n            *output_data = *output_data | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)output_data + 0x45) = 0x78;\n            hex_values = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08004e52;\n          if (byte_value == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)output_data + 0x42) = byte_value;\n        goto LAB_08004e2c;\n      }\n      string_pointer_pointer = (char **)*counter;\n      *counter = (uint *)(string_pointer_pointer + 1);\n      hex_string = *string_pointer_pointer;\n      index = FUN_08000230(hex_string,0,output_data[1]);\n      if (index != 0) {\n        output_data[1] = index - (int)hex_string;\n      }\n      unsigned_value_1 = output_data[1];\n    }\n    output_data[4] = unsigned_value_1;\n    *(undefined *)((int)output_data + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  unsigned_value_1 = *output_data;\n  pointer_pointer = (uint **)*counter;\n  temp_value = output_data[5];\n  if ((unsigned_value_1 & 0x80) == 0) {\n    *counter = (uint *)(pointer_pointer + 1);\n    pointer = *pointer_pointer;\n    if ((unsigned_value_1 & 0x40) == 0) goto LAB_08004f42;\n    *(short *)pointer = (short)temp_value;\n  }\n  else {\n    *counter = (uint *)(pointer_pointer + 1);\n    pointer = *pointer_pointer;\nLAB_08004f42:\n    *pointer = temp_value;\n  }\nLAB_08004f56:\n  output_data[4] = 0;\nLAB_08004ec2:\n  index = FUN_08004cb0(input_data,output_data,buffer,param,callback_function);\n  if ((index == -1) || (index = (*callback_function)(input_data,param,hex_string,output_data[4]), index == -1)) {\nLAB_08004ed6:\n    unsigned_value_1 = 0xffffffff;\n  }\n  else {\n    if ((int)(*output_data << 0x1e) < 0) {\n      for (index = 0; index < (int)(output_data[3] - buffer[0]); index = index + 1) {\n        temp_index = (*callback_function)(input_data,param,(int)output_data + 0x19,1);\n        if (temp_index == -1) goto LAB_08004ed6;\n      }\n    }\n    unsigned_value_1 = output_data[3];\n    if ((int)output_data[3] < (int)buffer[0]) {\n      unsigned_value_1 = buffer[0];\n    }\n  }\n  return unsigned_value_1;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "decode_and_process_data_08004d9c",
                "param_1": "input_data",
                "param_2": "output_data",
                "param_3": "param",
                "param_4": "callback_function",
                "param_5": "counter",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "pointer",
                "iVar4": "temp_index",
                "pcVar5": "hex_values",
                "uVar6": "temp_value",
                "uVar9": "unsigned_value_1",
                "uVar10": "unsigned_value_2",
                "pcVar11": "current_character",
                "pcVar12": "hex_string",
                "local_24": "buffer",
                "ppuVar7": "pointer_pointer",
                "ppcVar8": "string_pointer_pointer"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004cb0",
                "FUN_08000230"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "initialize_function_08004fdc",
            "code": "\nvoid initializeFunction_08004fdc(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  int dataAddress;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 param4Copy;\n  \n  dataAddress = DAT_200000a0;\n  param1Copy = inputParam1;\n  param2Copy = inputParam2;\n  param3Copy = inputParam3;\n  param4Copy = inputParam4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(dataAddress,*(undefined4 *)(dataAddress + 8),inputParam1,&param2Copy,param1Copy,&param2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "initialize_function_08004fdc",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "dataAddress",
                "uVar2": "param1Copy",
                "uStack_c": "param2Copy",
                "uStack_8": "param3Copy",
                "uStack_4": "param4Copy"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "validate_and_update_parameter_0800500c",
            "code": "\nvoid validateAndUpdateParameter_0800500c(int *outputPointer,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_08004094(inputValue);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputPointer = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "validate_and_update_parameter_0800500c",
                "param_1": "outputPointer",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "handle_data_080050d0",
            "code": "\nuint handleData_080050d0(undefined4 *output,undefined4 *input)\n\n{\n  int dataPointer;\n  uint result;\n  ushort flags;\n  \n  dataPointer = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (input == &DAT_08005fc0) {\n    input = *(undefined4 **)(dataPointer + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08005fe0) {\n    input = *(undefined4 **)(dataPointer + 8);\n  }\n  else if (input == (undefined4 *)&DAT_08005fa0) {\n    input = *(undefined4 **)(dataPointer + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_080048dc(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(output,input);\n  }\n  flags = *(ushort *)(input + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    flags = *(ushort *)(input + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "handle_data_080050d0",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "dataPointer",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080054fc",
                "FUN_080048dc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "execute_binary_function_080051ac",
            "code": "\nvoid executeBinaryFunction_080051ac(void)\n\n{\n  uint *dataPointer;\n  int var2;\n  int *pointerVar3;\n  int *pointerVar4;\n  uint ushortVar;\n  ushort maskedUshort;\n  int tempVar;\n  code *functionPointer;\n  int var9;\n  uint tempUVar;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool boolVar;\n  undefined8 data;\n  \n  FUN_080055d0(6);\n  UNRECOVERED_JUMPTABLE_00 = (code *)0x80051bb;\n  data = FUN_080040f8(1);\n  pointerVar3 = (int *)((ulonglong)data >> 0x20);\n  dataPointer = (uint *)data;\n  maskedUshort = *(ushort *)(pointerVar3 + 3);\n  ushortVar = (uint)maskedUshort;\n  if ((int)(ushortVar << 0x1c) < 0) {\n    var2 = pointerVar3[4];\n    if (var2 != 0) {\n      tempVar = ushortVar << 0x1e;\n      boolVar = tempVar == 0;\n      var9 = *pointerVar3;\n      if (boolVar) {\n        tempVar = pointerVar3[5];\n      }\n      *pointerVar3 = var2;\n      if (!boolVar) {\n        tempVar = 0;\n      }\n      pointerVar3[2] = tempVar;\n      for (var9 = var9 - var2; 0 < var9; var9 = var9 - tempVar) {\n        tempVar = (*(code *)pointerVar3[10])(dataPointer,pointerVar3[8],var2,var9);\n        if (tempVar < 1) {\n          maskedUshort = *(ushort *)(pointerVar3 + 3);\n          goto LAB_080052b2;\n        }\n        var2 = var2 + tempVar;\n      }\n    }\n  }\n  else if (((0 < pointerVar3[1]) || (0 < pointerVar3[0x10])) &&\n          (functionPointer = (code *)pointerVar3[0xb], functionPointer != (code *)0x0)) {\n    tempUVar = *dataPointer;\n    *dataPointer = 0;\n    if ((maskedUshort & 0x1000) == 0) {\n      var2 = (*functionPointer)(dataPointer,pointerVar3[8],ushortVar & 0x1000,1);\n      if ((var2 == -1) && (ushortVar = *dataPointer, ushortVar != 0)) {\n        if ((ushortVar != 0x1d) && (ushortVar != 0x16)) {\n          *(ushort *)(pointerVar3 + 3) = *(ushort *)(pointerVar3 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*UNRECOVERED_JUMPTABLE_00)();\n          return;\n        }\n        *dataPointer = tempUVar;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      var2 = pointerVar3[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointerVar3 + 3) << 0x1d) < 0) &&\n       (var2 = var2 - pointerVar3[1], pointerVar3[0xd] != 0)) {\n      var2 = var2 - pointerVar3[0x10];\n    }\n    var2 = (*(code *)pointerVar3[0xb])(dataPointer,pointerVar3[8],var2,0);\n    maskedUshort = *(ushort *)(pointerVar3 + 3);\n    if ((var2 == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(pointerVar3 + 3) = maskedUshort | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n      return;\n    }\n    pointerVar3[1] = 0;\n    *pointerVar3 = pointerVar3[4];\n    if (((int)((uint)maskedUshort << 0x13) < 0) && ((var2 != -1 || (*dataPointer == 0)))) {\n      pointerVar3[0x15] = var2;\n    }\n    pointerVar4 = (int *)pointerVar3[0xd];\n    *dataPointer = tempUVar;\n    if (pointerVar4 != (int *)0x0) {\n      if (pointerVar4 != pointerVar3 + 0x11) {\n        FUN_080048dc(dataPointer);\n      }\n      pointerVar3[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*UNRECOVERED_JUMPTABLE_00)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE_00)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "execute_binary_function_080051ac",
                "puVar1": "dataPointer",
                "iVar2": "var2",
                "piVar3": "pointerVar3",
                "piVar4": "pointerVar4",
                "uVar5": "ushortVar",
                "uVar6": "maskedUshort",
                "iVar7": "tempVar",
                "pcVar8": "functionPointer",
                "iVar9": "var9",
                "uVar10": "tempUVar",
                "bVar11": "boolVar",
                "uVar12": "data"
            },
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "process_params_080052cc",
            "code": "\nundefined4 processParams_080052cc(uint *paramArray,int *paramList)\n\n{\n  undefined4 returnValue;\n  int tempVar1;\n  int *tempVar2;\n  uint ushortVal;\n  ushort ushortVar;\n  int tempVar3;\n  undefined4 unaffVar1;\n  undefined4 unaffVar2;\n  code *functionPtr;\n  int tempVar4;\n  uint tempVar5;\n  code *jmpTable;\n  bool bVar10;\n  \n  if (paramList[4] != 0) {\n    if ((paramArray != (uint *)0x0) && (paramArray[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (paramList == &DAT_08005fc0) {\n      paramList = (int *)paramArray[1];\n    }\n    else if (paramList == (int *)&DAT_08005fe0) {\n      paramList = (int *)paramArray[2];\n    }\n    else if (paramList == (int *)&DAT_08005fa0) {\n      paramList = (int *)paramArray[3];\n    }\n    if (*(short *)(paramList + 3) != 0) {\n      ushortVar = *(ushort *)(paramList + 3);\n      ushortVal = (uint)ushortVar;\n      if ((int)(ushortVal << 0x1c) < 0) {\n        tempVar1 = paramList[4];\n        if (tempVar1 != 0) {\n          tempVar3 = ushortVal << 0x1e;\n          bVar10 = tempVar3 == 0;\n          tempVar4 = *paramList;\n          if (bVar10) {\n            tempVar3 = paramList[5];\n          }\n          *paramList = tempVar1;\n          if (!bVar10) {\n            tempVar3 = 0;\n          }\n          paramList[2] = tempVar3;\n          for (tempVar4 = tempVar4 - tempVar1; 0 < tempVar4; tempVar4 = tempVar4 - tempVar3) {\n            tempVar3 = (*(code *)paramList[10])(paramArray,paramList[8],tempVar1,tempVar4,unaffVar1,unaffVar2);\n            if (tempVar3 < 1) {\n              ushortVar = *(ushort *)(paramList + 3);\n              goto LAB_080052b2;\n            }\n            tempVar1 = tempVar1 + tempVar3;\n          }\n        }\n      }\n      else if (((0 < paramList[1]) || (0 < paramList[0x10])) &&\n              (functionPtr = (code *)paramList[0xb], functionPtr != (code *)0x0)) {\n        tempVar5 = *paramArray;\n        *paramArray = 0;\n        if ((ushortVar & 0x1000) == 0) {\n          tempVar1 = (*functionPtr)(paramArray,paramList[8],ushortVal & 0x1000,1);\n          if ((tempVar1 == -1) && (ushortVal = *paramArray, ushortVal != 0)) {\n            if ((ushortVal != 0x1d) && (ushortVal != 0x16)) {\n              *(ushort *)(paramList + 3) = *(ushort *)(paramList + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jmpTable)();\n              return returnValue;\n            }\n            *paramArray = tempVar5;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          tempVar1 = paramList[0x15];\n        }\n        if (((int)((uint)*(ushort *)(paramList + 3) << 0x1d) < 0) &&\n           (tempVar1 = tempVar1 - paramList[1], paramList[0xd] != 0)) {\n          tempVar1 = tempVar1 - paramList[0x10];\n        }\n        tempVar1 = (*(code *)paramList[0xb])(paramArray,paramList[8],tempVar1,0);\n        ushortVar = *(ushort *)(paramList + 3);\n        if ((tempVar1 == -1) &&\n           ((0x1d < *paramArray || (-1 < (int)((0x20400001U >> (*paramArray & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(paramList + 3) = ushortVar | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jmpTable)(0xffffffff);\n          return returnValue;\n        }\n        paramList[1] = 0;\n        *paramList = paramList[4];\n        if (((int)((uint)ushortVar << 0x13) < 0) && ((tempVar1 != -1 || (*paramArray == 0)))) {\n          paramList[0x15] = tempVar1;\n        }\n        tempVar2 = (int *)paramList[0xd];\n        *paramArray = tempVar5;\n        if (tempVar2 != (int *)0x0) {\n          if (tempVar2 != paramList + 0x11) {\n            FUN_080048dc(paramArray);\n          }\n          paramList[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jmpTable)();\n          return returnValue;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jmpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "process_params_080052cc",
                "param_1": "paramArray",
                "param_2": "paramList",
                "uVar1": "returnValue",
                "iVar2": "tempVar1",
                "piVar3": "tempVar2",
                "uVar4": "ushortVal",
                "uVar5": "ushortVar",
                "iVar6": "tempVar3",
                "unaff_r4": "unaffVar1",
                "unaff_r5": "unaffVar2",
                "pcVar7": "functionPtr",
                "iVar8": "tempVar4",
                "uVar9": "tempVar5",
                "UNRECOVERED_JUMPTABLE_00": "jmpTable"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_struct_0800532c",
            "code": "\nvoid initialize_struct_0800532c(undefined4 *struct_ptr,undefined2 value_1,undefined2 value_2)\n\n{\n  *struct_ptr = 0;\n  struct_ptr[1] = 0;\n  struct_ptr[2] = 0;\n  *(undefined2 *)(struct_ptr + 3) = value_1;\n  struct_ptr[0x19] = 0;\n  *(undefined2 *)((int)struct_ptr + 0xe) = value_2;\n  struct_ptr[4] = 0;\n  struct_ptr[5] = 0;\n  struct_ptr[6] = 0;\n  FUN_080048cc(struct_ptr + 0x17,0,8);\n  struct_ptr[9] = 0x8005609;\n  struct_ptr[10] = 0x800562b;\n  struct_ptr[0xb] = 0x8005663;\n  struct_ptr[8] = struct_ptr;\n  struct_ptr[0xc] = &LAB_08005686_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_struct_0800532c",
                "param_1": "struct_ptr",
                "param_2": "value_1",
                "param_3": "value_2"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "initialize_data_structure_08005374",
            "code": "\nundefined4 * initializeDataStructure_08005374(undefined4 inputValue,int size)\n\n{\n  undefined4 *dataPointer;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  dataPointer = (undefined4 *)FUN_08004978(inputValue,offset + 0x74);\n  if (dataPointer != (undefined4 *)0x0) {\n    *dataPointer = 0;\n    dataPointer[1] = size;\n    dataPointer[2] = dataPointer + 3;\n    FUN_080048cc(dataPointer + 3,0,offset + 0x68);\n  }\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08005374": "initialize_data_structure_08005374",
                "param_1": "inputValue",
                "param_2": "size",
                "puVar1": "dataPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_data_080053a0",
            "code": "\nvoid initializeData_080053a0(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_200000a4;\n    data[10] = &LAB_08005320_1;\n    if (data == &DAT_200000a4) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000a4) {\n      data[6] = pointer;\n    }\n    result = FUN_08005400();\n    data[1] = result;\n    result = FUN_08005400(data);\n    data[2] = result;\n    result = FUN_08005400(data);\n    data[3] = result;\n    FUN_0800532c(data[1],4,0);\n    FUN_0800532c(data[2],9,1);\n    FUN_0800532c(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_data_08005400",
            "code": "\nint * initializeData_08005400(undefined4 *errorCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentPointer;\n  int *currentValue;\n  int **dataPointer;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  dataPointer = (int **)&DAT_200000ec;\n  do {\n    currentValue = dataPointer[2];\n    currentPointer = dataPointer[1];\n    while (currentPointer = (int *)((int)currentPointer + -1), -1 < (int)currentPointer) {\n      if (*(short *)(currentValue + 3) == 0) {\n        *(undefined2 *)((int)currentValue + 0xe) = 0xffff;\n        *(undefined2 *)(currentValue + 3) = 1;\n        currentValue[0x19] = 0;\n        *currentValue = 0;\n        currentValue[2] = 0;\n        currentValue[1] = 0;\n        currentValue[4] = 0;\n        currentValue[5] = 0;\n        currentValue[6] = 0;\n        FUN_080048cc(currentValue + 0x17,0,8,1,param4);\n        currentValue[0xd] = 0;\n        currentValue[0xe] = 0;\n        currentValue[0x12] = 0;\n        currentValue[0x13] = 0;\n        return currentValue;\n      }\n      currentValue = currentValue + 0x1a;\n    }\n    if (*dataPointer == (int *)0x0) {\n      currentPointer = (int *)FUN_08005374(errorCode,4);\n      *dataPointer = currentPointer;\n      if (currentPointer == (int *)0x0) {\n        *errorCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataPointer = (int **)*dataPointer;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_data_08005400",
                "param_1": "errorCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentPointer",
                "piVar2": "currentValue",
                "ppiVar3": "dataPointer"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08005374",
                "FUN_080048cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "check_permissions_080054b4",
            "code": "\nundefined4 checkPermissions_080054b4(undefined4 input,int data,undefined4 *permissionResult,uint *flags)\n\n{\n  int resultCode;\n  undefined4 permissionCode;\n  undefined stackBuffer [4];\n  uint tempValue;\n  \n  if ((*(short *)(data + 0xe) < 0) ||\n     (resultCode = FUN_080056d4(input,(int)*(short *)(data + 0xe),stackBuffer), resultCode < 0)) {\n    *flags = 0;\n    if ((int)((uint)*(ushort *)(data + 0xc) << 0x18) < 0) {\n      permissionCode = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *flags = (uint)((tempValue & 0xf000) == 0x2000);\n  }\n  permissionCode = 0x400;\nLAB_080054f4:\n  *permissionResult = permissionCode;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "check_permissions_080054b4",
                "param_1": "input",
                "param_2": "data",
                "param_3": "permissionResult",
                "param_4": "flags",
                "iVar1": "resultCode",
                "uVar2": "permissionCode",
                "auStack_4c": "stackBuffer",
                "local_48": "tempValue"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "process_data_080054fc",
            "code": "\nvoid processData_080054fc(int dataSize,int *data)\n\n{\n  ushort result;\n  int checkValue;\n  int localDataSize;\n  int *localData;\n  \n  if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1e)) {\n    localDataSize = dataSize;\n    localData = data;\n    result = FUN_080054b4(dataSize,data,&localDataSize,&localData);\n    checkValue = FUN_08004978(dataSize,localDataSize);\n    if (checkValue != 0) {\n      *(undefined **)(dataSize + 0x28) = &LAB_08005320_1;\n      *data = checkValue;\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x80;\n      data[5] = localDataSize;\n      data[4] = checkValue;\n      if ((localData != (int *)0x0) &&\n         (checkValue = FUN_080056f8(dataSize,(int)*(short *)((int)data + 0xe)), checkValue != 0)) {\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(data + 3) = result | *(ushort *)(data + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(data + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 2;\n  }\n  *data = (int)data + 0x47;\n  data[4] = (int)data + 0x47;\n  data[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "process_data_080054fc",
                "param_1": "dataSize",
                "param_2": "data",
                "uVar1": "result",
                "iVar2": "checkValue",
                "local_18": "localDataSize",
                "local_14": "localData"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080054b4",
                "FUN_080056f8",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "execute_function_080055d0",
            "code": "\nint execute_function_080055d0(uint index)\n\n{\n  int *result;\n  undefined4 thunk_result;\n  int function_pointer;\n  code *function;\n  undefined4 unnamed_param;\n  undefined4 unnamed_param_2;\n  undefined4 unnamed_param_3;\n  undefined4 *function_array;\n  \n  result = DAT_200000a0;\n  function_array = &DAT_200000a0;\n  if (0x1f < index) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  function_pointer = DAT_200000a0[0x11];\n  if ((function_pointer != 0) && (function = *(code **)(function_pointer + index * 4), function != (code *)0x0)) {\n    if (function != (code *)0x1) {\n      if (function == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(function_pointer + index * 4) = 0;\n      (*function)(index);\n    }\n    return 0;\n  }\n  thunk_result = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  function_pointer = FUN_080040fc(thunk_result,index,index,0,function_array,unnamed_param,unnamed_param_2,unnamed_param_3);\n  if ((function_pointer == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return function_pointer;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "execute_function_080055d0",
                "param_1": "index",
                "piVar1": "result",
                "uVar2": "thunk_result",
                "iVar3": "function_pointer",
                "pcVar4": "function",
                "unaff_r4": "unnamed_param",
                "unaff_r5": "unnamed_param_2",
                "in_lr": "unnamed_param_3",
                "puVar5": "function_array"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "get_one_thunk_0800410c",
            "code": "\nint getOne_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "get_one_thunk_0800410c",
                "undefined4": "int"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_value_08005608",
            "code": "\nvoid updateValue_08005608(undefined4 data,int address)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800573c(data,(int)*(short *)(address + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(address + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(address + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(address + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(address + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_value_08005608",
                "param_1": "data",
                "param_2": "address",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "process_binary_data_0800562a",
            "code": "\nvoid processBinaryData_0800562a(int *dataBuffer,int binaryData,undefined4 param3,undefined4 param4)\n\n{\n  int returnValue;\n  undefined4 unusedParam1;\n  undefined4 unusedParam2;\n  undefined4 unusedParam3;\n  \n  if ((int)((uint)*(ushort *)(binaryData + 0xc) << 0x17) < 0) {\n    FUN_08005718(dataBuffer,(int)*(short *)(binaryData + 0xe),0,2);\n  }\n  *(ushort *)(binaryData + 0xc) = *(ushort *)(binaryData + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  returnValue = FUN_080040ec((int)*(short *)(binaryData + 0xe),param3,param4,param4,param4,unusedParam1,\n                       unusedParam2,unusedParam3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *dataBuffer = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "process_binary_data_0800562a",
                "param_1": "dataBuffer",
                "param_2": "binaryData",
                "param_3": "param3",
                "param_4": "param4",
                "unaff_r4": "unusedParam1",
                "unaff_r5": "unusedParam2",
                "in_lr": "unusedParam3",
                "iVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "update_flags_and_values_08005662",
            "code": "\nvoid updateFlagsAndValues_08005662(undefined4 input1,int input2)\n\n{\n  int result;\n  ushort modifiedValue;\n  bool isNegative;\n  \n  result = FUN_08005718(input1,(int)*(short *)(input2 + 0xe));\n  isNegative = result == -1;\n  if (isNegative) {\n    modifiedValue = *(ushort *)(input2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(input2 + 0x54) = result;\n    modifiedValue = *(ushort *)(input2 + 0xc) | 0x1000;\n  }\n  if (isNegative) {\n    *(ushort *)(input2 + 0xc) = modifiedValue;\n  }\n  if (!isNegative) {\n    *(ushort *)(input2 + 0xc) = modifiedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "update_flags_and_values_08005662",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "uVar2": "modifiedValue",
                "bVar3": "isNegative"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "check_and_update_value_080056d4",
            "code": "\nvoid checkAndUpdateValue_080056d4(int *outputParam,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040d6(inputParam1,inputParam2,inputParam2,0,inputParam3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputParam = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "check_and_update_value_080056d4",
                "param_1": "outputParam",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "check_and_assign_value_080056f8",
            "code": "\nvoid checkAndAssignValue_080056f8(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e0(inputValue);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputValue = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "check_and_assign_value_080056f8",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "process_data_08005718",
            "code": "\nvoid processData_08005718(int *outputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e4(param2,param3,param4,param4,param4);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputData = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "process_data_08005718",
                "param_1": "outputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "validate_and_assign_value_0800573c",
            "code": "\nvoid validate_and_assign_value_0800573c(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e8(arg1,arg2,arg3,arg3,arg3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "validate_and_assign_value_0800573c",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  code *functionPointer;\n  \n  functionPointer = initializeData_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760",
                "UNRECOVERED_JUMPTABLE": "functionPointer"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 118364,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": []
}